{"map":"{\"version\":3,\"sources\":[\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/annotation.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/bidi.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/ccitt.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/ccitt_stream.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/cff_parser.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/charsets.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/chunked_stream.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/cmap.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/colorspace.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/crypto.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/document.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/encodings.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/evaluator.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/font_renderer.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/fonts.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/function.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/glyphlist.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/image.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/jbig2.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/jbig2_stream.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/jpeg_stream.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/jpg.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/jpx.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/jpx_stream.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/metrics.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/murmurhash3.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/obj.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/operator_list.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/parser.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/pattern.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/pdf_manager.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/primitives.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/ps_parser.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/standard_fonts.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/stream.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/type1_parser.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/unicode.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/core/worker.js\",\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/lib/pdf.worker.js\"],\"names\":[\"Object\",\"defineProperty\",\"exports\",\"value\",\"AnnotationFactory\",\"AnnotationBorderStyle\",\"Annotation\",\"undefined\",\"_get\",\"get\",\"object\",\"property\",\"receiver\",\"Function\",\"prototype\",\"desc\",\"getOwnPropertyDescriptor\",\"parent\",\"getPrototypeOf\",\"getter\",\"call\",\"_createClass\",\"defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"key\",\"Constructor\",\"protoProps\",\"staticProps\",\"_util\",\"__webpack_require__\",\"_obj\",\"_primitives\",\"_colorspace\",\"_operator_list\",\"_stream\",\"_possibleConstructorReturn\",\"self\",\"ReferenceError\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"create\",\"constructor\",\"setPrototypeOf\",\"__proto__\",\"_classCallCheck\",\"instance\",\"this\",\"xref\",\"ref\",\"pdfManager\",\"idFactory\",\"dict\",\"fetchIfRef\",\"isDict\",\"id\",\"isRef\",\"toString\",\"createObjId\",\"subtype\",\"isName\",\"name\",\"parameters\",\"LinkAnnotation\",\"TextAnnotation\",\"fieldType\",\"Util\",\"getInheritableProperty\",\"TextWidgetAnnotation\",\"ButtonWidgetAnnotation\",\"ChoiceWidgetAnnotation\",\"warn\",\"WidgetAnnotation\",\"PopupAnnotation\",\"LineAnnotation\",\"SquareAnnotation\",\"CircleAnnotation\",\"PolylineAnnotation\",\"PolygonAnnotation\",\"HighlightAnnotation\",\"UnderlineAnnotation\",\"SquigglyAnnotation\",\"StrikeOutAnnotation\",\"StampAnnotation\",\"FileAttachmentAnnotation\",\"params\",\"setFlags\",\"setRectangle\",\"getArray\",\"setColor\",\"setBorderStyle\",\"setAppearance\",\"data\",\"annotationFlags\",\"flags\",\"borderStyle\",\"color\",\"hasAppearance\",\"appearance\",\"rect\",\"rectangle\",\"flag\",\"_hasFlag\",\"AnnotationFlag\",\"INVISIBLE\",\"HIDDEN\",\"NOVIEW\",\"PRINT\",\"Number\",\"isInteger\",\"Array\",\"isArray\",\"normalizeRect\",\"rgbColor\",\"Uint8Array\",\"ColorSpace\",\"singletons\",\"gray\",\"getRgbItem\",\"rgb\",\"cmyk\",\"has\",\"dictType\",\"setWidth\",\"setStyle\",\"setDashArray\",\"array\",\"setHorizontalCornerRadius\",\"setVerticalCornerRadius\",\"appearanceStates\",\"normalAppearanceState\",\"isStream\",\"as\",\"hasPopup\",\"title\",\"stringToPDFString\",\"contents\",\"keys\",\"getAsync\",\"then\",\"resources\",\"ObjectLoader\",\"load\",\"evaluator\",\"task\",\"renderForms\",\"_this\",\"Promise\",\"resolve\",\"OperatorList\",\"appearanceDict\",\"resourcesPromise\",\"loadResources\",\"bbox\",\"matrix\",\"transform\",\"bounds\",\"getAxialAlignedBoundingBox\",\"minX\",\"minY\",\"maxX\",\"maxY\",\"xRatio\",\"yRatio\",\"getTransformMatrix\",\"opList\",\"addOp\",\"OPS\",\"beginAnnotation\",\"getOperatorList\",\"stream\",\"operatorList\",\"endAnnotation\",\"reset\",\"_isViewable\",\"_isPrintable\",\"width\",\"style\",\"AnnotationBorderStyleType\",\"SOLID\",\"dashArray\",\"horizontalCornerRadius\",\"verticalCornerRadius\",\"DASHED\",\"BEVELED\",\"INSET\",\"UNDERLINE\",\"isValid\",\"allZeros\",\"len\",\"element\",\"radius\",\"_Annotation\",\"_this2\",\"annotationType\",\"AnnotationType\",\"WIDGET\",\"fieldName\",\"_constructFieldName\",\"fieldValue\",\"alternativeText\",\"defaultAppearance\",\"fieldResources\",\"Dict\",\"empty\",\"fieldFlags\",\"readOnly\",\"hasFieldFlag\",\"AnnotationFieldFlag\",\"READONLY\",\"unshift\",\"loopDict\",\"join\",\"_WidgetAnnotation\",\"_this3\",\"alignment\",\"textAlignment\",\"maximumLength\",\"maxLen\",\"multiLine\",\"MULTILINE\",\"comb\",\"COMB\",\"PASSWORD\",\"FILESELECT\",\"Stream\",\"stringToBytes\",\"_WidgetAnnotation2\",\"_this4\",\"checkBox\",\"RADIO\",\"PUSHBUTTON\",\"radioButton\",\"pushButton\",\"_processCheckBox\",\"_processRadioButton\",\"_processPushButton\",\"buttonValue\",\"fieldParent\",\"fieldParentValue\",\"getKeys\",\"ii\",\"Catalog\",\"parseDestDictionary\",\"destDict\",\"resultObj\",\"docBaseUrl\",\"_WidgetAnnotation3\",\"_this5\",\"options\",\"option\",\"isOptionArray\",\"exportValue\",\"displayValue\",\"combo\",\"COMBO\",\"multiSelect\",\"MULTISELECT\",\"_Annotation2\",\"_this6\",\"TEXT\",\"_preparePopup\",\"_Annotation3\",\"_this7\",\"LINK\",\"_Annotation4\",\"_this8\",\"POPUP\",\"parentItem\",\"parentSubtype\",\"parentType\",\"parentId\",\"getRaw\",\"viewable\",\"parentFlags\",\"_Annotation5\",\"_this9\",\"LINE\",\"lineCoordinates\",\"_Annotation6\",\"_this10\",\"SQUARE\",\"_Annotation7\",\"_this11\",\"CIRCLE\",\"_Annotation8\",\"_this12\",\"POLYLINE\",\"rawVertices\",\"vertices\",\"push\",\"x\",\"y\",\"_PolylineAnnotation\",\"_this13\",\"POLYGON\",\"_Annotation9\",\"_this14\",\"HIGHLIGHT\",\"_Annotation10\",\"_this15\",\"_Annotation11\",\"_this16\",\"SQUIGGLY\",\"_Annotation12\",\"_this17\",\"STRIKEOUT\",\"_Annotation13\",\"_this18\",\"STAMP\",\"_Annotation14\",\"_this19\",\"file\",\"FileSpec\",\"FILEATTACHMENT\",\"serializable\",\"ArithmeticDecoder\",\"QeTable\",\"qe\",\"nmps\",\"nlps\",\"switchFlag\",\"start\",\"end\",\"bp\",\"dataEnd\",\"chigh\",\"clow\",\"byteIn\",\"ct\",\"a\",\"readBit\",\"contexts\",\"pos\",\"d\",\"cx_index\",\"cx_mps\",\"qeTableIcx\",\"qeIcx\",\"bidi\",\"baseTypes\",\"arabicTypes\",\"isOdd\",\"isEven\",\"findUnequal\",\"arr\",\"j\",\"jj\",\"setValues\",\"reverseValues\",\"temp\",\"createBidiText\",\"str\",\"isLTR\",\"vertical\",\"dir\",\"chars\",\"types\",\"startLevel\",\"strLength\",\"numBidi\",\"charAt\",\"charCode\",\"charCodeAt\",\"charType\",\"levels\",\"t\",\"e\",\"sor\",\"eor\",\"lastType\",\"before\",\"after\",\"level\",\"highestLevel\",\"lowestOddLevel\",\"ch\",\"CCITTFaxDecoder\",\"twoDimTable\",\"whiteTable1\",\"whiteTable2\",\"blackTable1\",\"blackTable2\",\"blackTable3\",\"source\",\"arguments\",\"next\",\"Error\",\"eof\",\"encoding\",\"eoline\",\"byteAlign\",\"columns\",\"rows\",\"eoblock\",\"black\",\"codingLine\",\"Uint32Array\",\"refLine\",\"codingPos\",\"row\",\"nextLine2D\",\"inputBits\",\"inputBuf\",\"outputBits\",\"rowsDone\",\"code1\",\"_lookBits\",\"_eatBits\",\"readNextChar\",\"refPos\",\"blackPixels\",\"bits\",\"err\",\"code2\",\"code3\",\"_getTwoDimCode\",\"_addPixels\",\"_getBlackCode\",\"_getWhiteCode\",\"_addPixelsNeg\",\"info\",\"gotEOL\",\"c\",\"a1\",\"_findTableCode\",\"table\",\"limit\",\"limitValue\",\"code\",\"p\",\"result\",\"n\",\"CCITTFaxStream\",\"_ccitt\",\"maybeLength\",\"getByte\",\"ccittFaxDecoder\",\"K\",\"EndOfLine\",\"EncodedByteAlign\",\"Columns\",\"Rows\",\"EndOfBlock\",\"BlackIs1\",\"DecodeStream\",\"readBlock\",\"ensureBuffer\",\"bufferLength\",\"buffer\",\"CFFCompiler\",\"CFFPrivateDict\",\"CFFTopDict\",\"CFFCharset\",\"CFFIndex\",\"CFFStrings\",\"CFFHeader\",\"CFF\",\"CFFParser\",\"CFFStandardStrings\",\"_charsets\",\"_encodings\",\"CharstringValidationData\",\"min\",\"stackClearing\",\"stem\",\"resetStack\",\"undefStack\",\"CharstringValidationData12\",\"stackDelta\",\"stackFn\",\"stack\",\"index\",\"properties\",\"seacAnalysisEnabled\",\"bytes\",\"getBytes\",\"parse\",\"cff\",\"header\",\"parseHeader\",\"nameIndex\",\"parseIndex\",\"endPos\",\"topDictIndex\",\"stringIndex\",\"globalSubrIndex\",\"topDictParsed\",\"parseDict\",\"obj\",\"topDict\",\"createDict\",\"strings\",\"names\",\"parseNameIndex\",\"parseStringIndex\",\"parsePrivateDict\",\"isCIDFont\",\"hasName\",\"charStringOffset\",\"getByName\",\"charStringIndex\",\"fontMatrix\",\"charset\",\"fontBBox\",\"ascent\",\"Math\",\"max\",\"descent\",\"ascentScaled\",\"fdArrayIndex\",\"count\",\"dictRaw\",\"fontDict\",\"fdArray\",\"parseCharsets\",\"fdSelect\",\"parseFDSelect\",\"parseEncoding\",\"charStringsAndSeacs\",\"parseCharStrings\",\"charStrings\",\"localSubrIndex\",\"privateDict\",\"subrsIndex\",\"seacs\",\"widths\",\"bytesLength\",\"offset\",\"FormatError\",\"subarray\",\"major\",\"minor\",\"hdrSize\",\"offSize\",\"parseOperand\",\"lookup\",\"b\",\"b1\",\"b2\",\"parseFloat\",\"parseFloatOperand\",\"NaN\",\"operands\",\"entries\",\"cffIndex\",\"offsets\",\"offsetSize\",\"startPos\",\"offsetStart\",\"offsetEnd\",\"add\",\"bytesToString\",\"Type\",\"cffDict\",\"pair\",\"setByKey\",\"parseCharString\",\"state\",\"callDepth\",\"stackSize\",\"validationCommand\",\"q\",\"seac\",\"slice\",\"hints\",\"bias\",\"subrNumber\",\"isNaN\",\"firstStackClearing\",\"_ref\",\"charstring\",\"valid\",\"localSubrToUse\",\"privateDictToUse\",\"fdIndex\",\"getFDIndex\",\"nominalWidth\",\"defaultWidth\",\"set\",\"emptyPrivateDictionary\",\"parentDict\",\"privateOffset\",\"size\",\"privateDictEnd\",\"dictData\",\"subrsOffset\",\"relativeOffset\",\"removeByName\",\"cid\",\"CFFCharsetPredefinedTypes\",\"ISO_ADOBE\",\"ISOAdobeCharset\",\"EXPERT\",\"ExpertCharset\",\"EXPERT_SUBSET\",\"ExpertSubsetCharset\",\"format\",\"raw\",\"predefined\",\"baseEncoding\",\"ExpertEncoding\",\"StandardEncoding\",\"indexOf\",\"dataStart\",\"glyphsCount\",\"rangesCount\",\"gid\",\"left\",\"supplementsCount\",\"sid\",\"readSupplement\",\"CFFEncoding\",\"rawBytes\",\"invalidFirstGID\",\"first\",\"CFFFDSelect\",\"objects\",\"CFFDict\",\"tables\",\"keyToNameMap\",\"nameToKeyMap\",\"defaults\",\"opcodes\",\"order\",\"values\",\"valueLength\",\"type\",\"setByName\",\"createTables\",\"layout\",\"entry\",\"glyphIndex\",\"CFFOffsetTracker\",\"isTracking\",\"track\",\"location\",\"setEntryLocation\",\"output\",\"dataOffset\",\"offset0\",\"offset1\",\"offset2\",\"offset3\",\"offset4\",\"compile\",\"concat\",\"compileHeader\",\"compileNameIndex\",\"base\",\"subDict\",\"compiled\",\"compileTopDicts\",\"topDictTracker\",\"trackers\",\"compileStringIndex\",\"compileIndex\",\"compileEncoding\",\"compileCharset\",\"compileCharStrings\",\"compileFDSelect\",\"fontDictTrackers\",\"compilePrivateDicts\",\"encodeNumber\",\"parseInt\",\"encodeFloat\",\"encodeInteger\",\"num\",\"m\",\"exec\",\"epsilon\",\"round\",\"nibbles\",\"out\",\"substr\",\"sanitizedName\",\"char\",\"dicts\",\"removeCidKeys\",\"fontDictTracker\",\"fontDictData\",\"compileDict\",\"privateDictTracker\",\"privateDictData\",\"outputLength\",\"subrs\",\"offsetTracker\",\"k\",\"kk\",\"compileGlobalSubrIndex\",\"writeByteArray\",\"compileTypedArray\",\"lastOffset\",\"ChunkedStreamManager\",\"ChunkedStream\",\"chunkSize\",\"manager\",\"loadedChunks\",\"numChunksLoaded\",\"numChunks\",\"ceil\",\"progressiveDataLength\",\"lastSuccessfulEnsureByteChunk\",\"getMissingChunks\",\"chunks\",\"chunk\",\"getBaseStreams\",\"allChunksLoaded\",\"onReceiveData\",\"begin\",\"byteLength\",\"curChunk\",\"beginChunk\",\"floor\",\"endChunk\",\"onReceiveProgressiveData\",\"position\",\"ensureByte\",\"MissingDataException\",\"ensureRange\",\"nextEmptyChunk\",\"hasChunk\",\"isEmpty\",\"getUint16\",\"b0\",\"getInt32\",\"strEnd\",\"peekByte\",\"peekedByte\",\"peekBytes\",\"getByteRange\",\"skip\",\"moveStart\",\"makeSubStream\",\"ChunkedStreamSubstream\",\"missingChunks\",\"subStream\",\"pdfNetworkStream\",\"args\",\"rangeChunkSize\",\"url\",\"disableAutoFetch\",\"msgHandler\",\"currRequestId\",\"chunksNeededByRequest\",\"requestsByChunk\",\"promisesByRequest\",\"aborted\",\"_loadedStreamCapability\",\"createPromiseCapability\",\"onLoadedStream\",\"promise\",\"sendRequest\",\"rangeReader\",\"getRangeReader\",\"isStreamingSupported\",\"onProgress\",\"bind\",\"loaded\",\"reject\",\"read\",\"readChunk\",\"done\",\"arrayByteLength\",\"chunkData\",\"arraysToBytes\",\"requestAllChunks\",\"_requestChunks\",\"requestId\",\"chunksNeeded\",\"isEmptyObj\",\"capability\",\"chunksToRequest\",\"groupedChunksToRequest\",\"groupChunks\",\"groupedChunk\",\"getStream\",\"requestRange\",\"getBeginChunk\",\"getEndChunk\",\"requestRanges\",\"ranges\",\"sort\",\"groupedChunks\",\"prevChunk\",\"bytesLoaded\",\"send\",\"total\",\"isProgressive\",\"loadedRequests\",\"requestIds\",\"lastChunk\",\"onError\",\"abort\",\"cancelAllRequests\",\"CMapFactory\",\"IdentityCMap\",\"CMap\",\"_parser\",\"BUILT_IN_CMAPS\",\"builtInCMap\",\"codespaceRanges\",\"numCodespaceRanges\",\"_map\",\"useCMap\",\"addCodespaceRange\",\"low\",\"high\",\"mapCidRange\",\"dstLow\",\"mapBfRange\",\"lastByte\",\"String\",\"fromCharCode\",\"mapBfRangeToArray\",\"mapOne\",\"src\",\"dst\",\"contains\",\"forEach\",\"callback\",\"map\",\"_i\",\"charCodeOf\",\"getMap\",\"readCharCode\",\"codespaceRangesLen\",\"codespaceRange\",\"charcode\",\"isIdentityCMap\",\"inherit\",\"unreachable\",\"BinaryCMapReader\",\"hexToInt\",\"hexToStr\",\"apply\",\"addHex\",\"incHex\",\"MAX_NUM_SIZE\",\"MAX_ENCODED_NUM_SIZE\",\"BinaryCMapStream\",\"tmpBuf\",\"readByte\",\"readNumber\",\"last\",\"readSigned\",\"readHex\",\"readHexNumber\",\"sp\",\"bufferSize\",\"readHexSigned\",\"sign\",\"readString\",\"s\",\"process\",\"cMap\",\"extend\",\"tmp\",\"sequence\",\"dataSize\",\"subitemsCount\",\"strToInt\",\"expectString\",\"isString\",\"expectInt\",\"parseBfChar\",\"lexer\",\"getObj\",\"isEOF\",\"isCmd\",\"parseBfRange\",\"parseCidChar\",\"parseCidRange\",\"parseCodespaceRange\",\"parseWMode\",\"parseCMapName\",\"parseCMap\",\"fetchBuiltInCMap\",\"previous\",\"embededUseCMap\",\"objLoop\",\"cmd\",\"ex\",\"extendCMap\",\"createBuiltInCMap\",\"newCMap\",\"useCodespaceRanges\",\"cMapData\",\"compressionType\",\"CMapCompressionType\",\"BINARY\",\"NONE\",\"Lexer\",\"parsedCMap\",\"getRgb\",\"srcOffset\",\"dest\",\"destOffset\",\"getRgbBuffer\",\"alpha01\",\"getOutputLength\",\"inputLength\",\"isPassthrough\",\"fillRgb\",\"originalWidth\",\"originalHeight\",\"height\",\"actualHeight\",\"bpc\",\"comps\",\"rgbBuf\",\"numComponentColors\",\"needsResizing\",\"numComps\",\"allColors\",\"Uint16Array\",\"destPos\",\"rgbPos\",\"colorMap\",\"w1\",\"h1\",\"w2\",\"h2\",\"py\",\"oldIndex\",\"newIndex\",\"xScaled\",\"w1Scanline\",\"resizeRgbImage\",\"usesZeroToOneRange\",\"cs\",\"res\",\"pdfFunctionFactory\",\"IR\",\"parseToIR\",\"fromIR\",\"whitePoint\",\"blackPoint\",\"gamma\",\"CalGrayCS\",\"CalRGBCS\",\"basePatternCS\",\"PatternCS\",\"baseIndexedCS\",\"hiVal\",\"IndexedCS\",\"alt\",\"tintFnIR\",\"AlternateCS\",\"createFromIR\",\"range\",\"LabCS\",\"colorSpaces\",\"resCS\",\"mode\",\"altIR\",\"altCS\",\"createIR\",\"isDefaultDecode\",\"decode\",\"shadow\",\"DeviceGrayCS\",\"DeviceRgbCS\",\"DeviceCmykCS\",\"tintFn\",\"defaultColor\",\"Float32Array\",\"scale\",\"baseNumComps\",\"baseBuf\",\"scaled\",\"tinted\",\"decodeMap\",\"baseCS\",\"highVal\",\"outputDelta\",\"lookupPos\",\"r\",\"g\",\"convertToRgb\",\"srcScale\",\"XW\",\"YW\",\"ZW\",\"XB\",\"YB\",\"ZB\",\"G\",\"A\",\"AG\",\"pow\",\"L\",\"val\",\"BRADFORD_SCALE_MATRIX\",\"BRADFORD_SCALE_INVERSE_MATRIX\",\"SRGB_D65_XYZ_TO_RGB_MATRIX\",\"FLAT_WHITEPOINT_MATRIX\",\"tempNormalizeMatrix\",\"tempConvertMatrix1\",\"tempConvertMatrix2\",\"DECODE_L_CONSTANT\",\"GR\",\"GG\",\"GB\",\"MXA\",\"MYA\",\"MZA\",\"MXB\",\"MYB\",\"MZB\",\"MXC\",\"MYC\",\"MZC\",\"matrixProduct\",\"sRGBTransferFunction\",\"adjustToRange\",\"decodeL\",\"B\",\"C\",\"AGR\",\"BGG\",\"CGB\",\"X\",\"Y\",\"Z\",\"XYZ\",\"XYZ_Flat\",\"sourceWhitePoint\",\"XYZ_In\",\"LMS\",\"LMS_Flat\",\"convertToFlat\",\"normalizeWhitePointToFlat\",\"XYZ_Black\",\"sourceBlackPoint\",\"zeroDecodeL\",\"X_Scale\",\"X_Offset\",\"Y_Scale\",\"Y_Offset\",\"Z_Scale\",\"Z_Offset\",\"compensateBlackPoint\",\"XYZ_D65\",\"LMS_D65\",\"convertToD65\",\"normalizeWhitePointToD65\",\"SRGB\",\"sR\",\"sG\",\"sB\",\"amin\",\"amax\",\"bmin\",\"bmax\",\"fn_g\",\"high1\",\"low2\",\"high2\",\"maxVal\",\"Ls\",\"bs\",\"M\",\"N\",\"sqrt\",\"calculateSHA512\",\"calculateSHA384\",\"calculateSHA256\",\"calculateMD5\",\"PDF20\",\"PDF17\",\"CipherTransformFactory\",\"ARCFourCipher\",\"AES256Cipher\",\"AES128Cipher\",\"keyLength\",\"encryptBlock\",\"tmp2\",\"decryptBlock\",\"Int32Array\",\"h0\",\"h3\",\"paddedLength\",\"padded\",\"w\",\"f\",\"rotateArg\",\"rotate\",\"Word64\",\"highInteger\",\"lowInteger\",\"and\",\"word\",\"xor\",\"or\",\"shiftRight\",\"places\",\"shiftLeft\",\"rotateRight\",\"not\",\"lowAdd\",\"highAdd\",\"copyTo\",\"assign\",\"rotr\",\"z\",\"maj\",\"sigma\",\"sigmaPrime\",\"littleSigma\",\"h4\",\"h5\",\"h6\",\"h7\",\"t1\",\"t2\",\"h\",\"littleSigmaPrime\",\"mode384\",\"tmp3\",\"tmp1\",\"NullCipher\",\"rcon\",\"inv_s\",\"mixCol\",\"mix\",\"decrypt128\",\"input\",\"u\",\"v\",\"s0\",\"s1\",\"s2\",\"s3\",\"encrypt128\",\"cipherKey\",\"t3\",\"t4\",\"expandKey128\",\"bufferPosition\",\"decryptBlock2\",\"finalize\",\"sourceLength\",\"iv\",\"plain\",\"lastBlock\",\"psLen\",\"encrypt\",\"cipher\",\"decrypt256\",\"encrypt256\",\"expandKey256\",\"compareByteArrays\",\"array1\",\"array2\",\"checkOwnerPassword\",\"password\",\"ownerValidationSalt\",\"userBytes\",\"ownerPassword\",\"hashData\",\"checkUserPassword\",\"userValidationSalt\",\"userPassword\",\"getOwnerKey\",\"ownerKeySalt\",\"ownerEncryption\",\"getUserKey\",\"userKeySalt\",\"userEncryption\",\"concatArrays\",\"calculatePDF20Hash\",\"arrayLength\",\"k1\",\"remainder\",\"hash\",\"concatBytes\",\"CipherTransform\",\"stringCipherConstructor\",\"streamCipherConstructor\",\"StringCipherConstructor\",\"StreamCipherConstructor\",\"createStream\",\"DecryptStream\",\"decryptString\",\"defaultPasswordBytes\",\"prepareKeyData\",\"fileId\",\"revision\",\"encryptMetadata\",\"hashDataSize\",\"keyLengthInBytes\",\"checkData\",\"encryptionKey\",\"derivedKey\",\"identityName\",\"Name\",\"filter\",\"algorithm\",\"cfDict\",\"streamCryptoName\",\"suppressEncryption\",\"handlerDict\",\"passwordBytes\",\"fileIdBytes\",\"utf8StringToString\",\"uBytes\",\"perms\",\"passwordLength\",\"pdfAlgorithm\",\"createEncryptionKey20\",\"PasswordException\",\"PasswordResponses\",\"NEED_PASSWORD\",\"decodeUserPassword\",\"INCORRECT_PASSWORD\",\"cf\",\"stmf\",\"strf\",\"eff\",\"buildObjectKey\",\"gen\",\"isAes\",\"buildCipherConstructor\",\"cfm\",\"cryptFilter\",\"createCipherTransform\",\"cipherConstructor\",\"PDFDocument\",\"Page\",\"_slicedToArray\",\"Symbol\",\"iterator\",\"_arr\",\"_n\",\"_d\",\"_e\",\"_s\",\"sliceIterator\",\"_annotation\",\"_crypto\",\"_evaluator\",\"_function\",\"LETTER_SIZE_MEDIABOX\",\"isAnnotationRenderable\",\"annotation\",\"intent\",\"printable\",\"pageIndex\",\"pageDict\",\"fontCache\",\"builtInCMapCache\",\"evaluatorOptions\",\"uniquePrefix\",\"idCounters\",\"getPageProp\",\"getInheritedPageProp\",\"valueArray\",\"loopCount\",\"merge\",\"content\",\"mediaBox\",\"cropBox\",\"userUnit\",\"isNum\",\"view\",\"intersection\",\"intersect\",\"getContentStream\",\"streams\",\"StreamsSequenceStream\",\"NullStream\",\"ensure\",\"_ref2\",\"handler\",\"renderInteractiveForms\",\"contentStreamPromise\",\"partialEvaluator\",\"PartialEvaluator\",\"pageListPromise\",\"all\",\"_ref3\",\"contentStream\",\"transparency\",\"hasBlendModes\",\"annotationsPromise\",\"_ref5\",\"_ref6\",\"pageOpList\",\"annotations\",\"flush\",\"opListPromises\",\"opLists\",\"beginAnnotations\",\"addOpList\",\"endAnnotations\",\"extractTextContent\",\"_ref7\",\"normalizeWhitespace\",\"sink\",\"combineTextItems\",\"_ref8\",\"getTextContent\",\"getAnnotationsData\",\"annotationsData\",\"annotationRefs\",\"annotationRef\",\"arg\",\"isArrayBuffer\",\"XRef\",\"PDFFunctionFactory\",\"isEvalSupported\",\"find\",\"needle\",\"backwards\",\"strBuf\",\"lastIndexOf\",\"DocumentInfoValidators\",\"Title\",\"Author\",\"Subject\",\"Keywords\",\"Creator\",\"Producer\",\"CreationDate\",\"ModDate\",\"Trapped\",\"recoveryMode\",\"setup\",\"version\",\"catalog\",\"catDict\",\"pdfFormatVersion\",\"acroForm\",\"xfa\",\"fields\",\"linearization\",\"Linearization\",\"startXRef\",\"found\",\"isSpace\",\"mainXRefEntriesOffset\",\"checkHeader\",\"substring\",\"parseStartXRef\",\"setStartXRef\",\"pageFactory\",\"createPage\",\"numPages\",\"documentInfo\",\"infoDict\",\"docInfo\",\"PDFFormatVersion\",\"IsAcroFormPresent\",\"IsXFAPresent\",\"trailer\",\"validEntries\",\"fingerprint\",\"fileID\",\"idArray\",\"hex\",\"getPage\",\"cleanup\",\"MacExpertEncoding\",\"MacRomanEncoding\",\"WinAnsiEncoding\",\"SymbolSetEncoding\",\"ZapfDingbatsEncoding\",\"getEncoding\",\"encodingName\",\"_cmap\",\"_fonts\",\"_unicode\",\"_standard_fonts\",\"_pattern\",\"_bidi\",\"_glyphlist\",\"_metrics\",\"_jpeg_stream\",\"_murmurhash\",\"_image\",\"DefaultPartialEvaluatorOptions\",\"forceDataSchema\",\"maxImageSize\",\"disableFontFace\",\"nativeImageDecoderSupport\",\"NativeImageDecoding\",\"DECODE\",\"ignoreErrors\",\"NativeImageDecoder\",\"_ref$forceDataSchema\",\"_ref2$options\",\"cachedCMap\",\"sendWithPromise\",\"canDecode\",\"image\",\"JpegStream\",\"isDecodable\",\"colorSpace\",\"getIR\",\"message\",\"isSupported\",\"TimeSlotManager\",\"normalizeBlendMode\",\"check\",\"checked\",\"endTime\",\"Date\",\"now\",\"deferred\",\"clone\",\"newOptions\",\"newEvaluator\",\"processed\",\"objId\",\"nodes\",\"node\",\"shift\",\"graphicStates\",\"graphicStatesKeys\",\"bm\",\"xObjects\",\"xObjectsKeys\",\"xObject\",\"fetch\",\"xResources\",\"buildFormXObject\",\"xobj\",\"smask\",\"initialState\",\"group\",\"groupOptions\",\"isolated\",\"knockout\",\"groupSubtype\",\"backdrop\",\"beginGroup\",\"paintFormXObjectBegin\",\"paintFormXObjectEnd\",\"endGroup\",\"buildPaintImageXObject\",\"inline\",\"cacheKey\",\"imageCache\",\"imgData\",\"bitStrideLength\",\"imgArray\",\"PDFImage\",\"createMask\",\"imageIsFromDecodeStream\",\"inverseDecode\",\"cached\",\"paintImageMaskXObject\",\"fn\",\"softMask\",\"mask\",\"isInline\",\"createImageData\",\"paintInlineImageXObject\",\"addDependency\",\"paintJpegXObject\",\"nativeImageDecoder\",\"buildImage\",\"nativeDecoder\",\"imageObj\",\"catch\",\"reason\",\"paintImageXObject\",\"handleSMask\",\"stateManager\",\"smaskContent\",\"smaskOptions\",\"transferObj\",\"isPDFFunction\",\"transferFn\",\"transferMap\",\"handleTilingType\",\"pattern\",\"patternDict\",\"tilingOpList\",\"resourcesArray\",\"patternResources\",\"getTilingPatternIR\",\"fnArray\",\"argsArray\",\"tilingPatternIR\",\"addDependencies\",\"dependencies\",\"featureId\",\"UNSUPPORTED_FEATURES\",\"unknown\",\"handleSetFont\",\"fontArgs\",\"fontRef\",\"fontName\",\"loadFont\",\"translated\",\"font\",\"isType3Font\",\"loadType3Data\",\"TranslatedFont\",\"ErrorFont\",\"loadedName\",\"handleText\",\"glyphs\",\"charsToGlyphs\",\"isAddToPathSet\",\"textRenderingMode\",\"TextRenderingMode\",\"ADD_TO_PATH_FLAG\",\"fillColorSpace\",\"buildPath\",\"fontChar\",\"renderer\",\"hasBuiltPath\",\"path\",\"getPathJs\",\"glyph\",\"accent\",\"setGState\",\"gState\",\"gStateObj\",\"gStateKeys\",\"_loop\",\"errorFont\",\"fontRes\",\"fontID\",\"translatedPromise\",\"fontCapability\",\"preEvaluatedFont\",\"preEvaluateFont\",\"fontRefIsRef\",\"fontAliases\",\"aliasFontRef\",\"aliasRef\",\"putAlias\",\"Font\",\"getFontID\",\"put\",\"assert\",\"docId\",\"translateFont\",\"translatedFont\",\"fontType\",\"stats\",\"fontTypes\",\"fontFile3\",\"getFontType\",\"lastIndex\",\"constructPath\",\"opArgs\",\"handleColorN\",\"patterns\",\"patternName\",\"typeNum\",\"shading\",\"Pattern\",\"parseShading\",\"_ref3$initialState\",\"EvalState\",\"xobjs\",\"StateManager\",\"preprocessor\",\"EvaluatorPreprocessor\",\"timeSlotManager\",\"closePendingRestoreOPS\",\"argument\",\"savedStatesDepth\",\"restore\",\"promiseBody\",\"ensureNotTerminated\",\"stop\",\"operation\",\"paintXObject\",\"resolveXObject\",\"rejectXObject\",\"save\",\"setFont\",\"fontSize\",\"endInlineImage\",\"cacheEntry\",\"showText\",\"showSpacedText\",\"combinedGlyphs\",\"arrLength\",\"arrItem\",\"nextLineShowText\",\"nextLine\",\"nextLineSetSpacingShowText\",\"setWordSpacing\",\"setCharSpacing\",\"setTextRenderingMode\",\"setFillColorSpace\",\"setStrokeColorSpace\",\"strokeColorSpace\",\"setFillColor\",\"setFillRGBColor\",\"setStrokeColor\",\"setStrokeRGBColor\",\"setFillGray\",\"setStrokeGray\",\"setFillCMYKColor\",\"setStrokeCMYKColor\",\"setFillColorN\",\"setStrokeColorN\",\"shadingFill\",\"shadingRes\",\"patternIR\",\"dictName\",\"extGState\",\"moveTo\",\"lineTo\",\"curveTo\",\"curveTo2\",\"curveTo3\",\"closePath\",\"markPoint\",\"markPointProps\",\"beginMarkedContent\",\"beginMarkedContentProps\",\"endMarkedContent\",\"beginCompat\",\"endCompat\",\"_ref4\",\"_ref4$stateManager\",\"_ref4$normalizeWhites\",\"_ref4$combineTextItem\",\"_ref4$seenStyles\",\"seenStyles\",\"TextState\",\"textState\",\"WhitespaceRegexp\",\"textContent\",\"items\",\"styles\",\"textContentItem\",\"initialized\",\"lastAdvanceWidth\",\"lastAdvanceHeight\",\"textAdvanceScale\",\"spaceWidth\",\"fakeSpaceMin\",\"Infinity\",\"fakeMultiSpaceMin\",\"fakeMultiSpaceMax\",\"textRunBreakAllowed\",\"SPACE_FACTOR\",\"MULTI_SPACE_FACTOR\",\"MULTI_SPACE_FACTOR_MAX\",\"skipEmptyXObjs\",\"ensureTextContentItem\",\"fontFamily\",\"fallbackName\",\"tsm\",\"textHScale\",\"textRise\",\"FONT_IDENTITY_MATRIX\",\"glyphHeight\",\"trm\",\"ctm\",\"textMatrix\",\"textLineMatrix\",\"scaleLineX\",\"scaleCtmX\",\"isMonospace\",\"replaceWhitespace\",\"replace\",\"buildTextContentItem\",\"textChunk\",\"glyphWidth\",\"vmetric\",\"glyphUnicode\",\"unicode\",\"NormalizedUnicodes\",\"getNormalizedUnicodes\",\"reverseIfRtl\",\"charSpacing\",\"wordSpacing\",\"addFakeSpaces\",\"tx\",\"ty\",\"translateTextMatrix\",\"abs\",\"fakeSpaces\",\"flushTextContentItem\",\"bidiResult\",\"enqueueChunk\",\"enqueue\",\"ready\",\"advance\",\"fontNameArg\",\"fontSizeArg\",\"setTextRise\",\"setHScale\",\"setLeading\",\"leading\",\"moveText\",\"isSameTextLine\",\"translateTextLineMatrix\",\"setLeadingMoveText\",\"carriageReturn\",\"setTextMatrix\",\"calcTextLineMatrixAdvance\",\"setTextLineMatrix\",\"beginText\",\"IDENTITY_MATRIX\",\"breakTextRun\",\"currentState\",\"xObjStateManager\",\"sinkWrapper\",\"enqueueInvoked\",\"desiredSize\",\"AbortException\",\"gStateFont\",\"extractDataStructures\",\"baseDict\",\"toUnicode\",\"toUnicodePromise\",\"readToUnicode\",\"composite\",\"cidSystemInfo\",\"registry\",\"ordering\",\"supplement\",\"cidToGidMap\",\"readCidToGidMap\",\"differences\",\"baseEncodingName\",\"diffEncoding\",\"defaultEncoding\",\"isSymbolicFont\",\"FontFlags\",\"Symbolic\",\"isNonsymbolicFont\",\"Nonsymbolic\",\"test\",\"hasEncoding\",\"buildToUnicode\",\"_buildSimpleFontToUnicode\",\"glyphName\",\"glyphsUnicodeMap\",\"getGlyphsUnicode\",\"getUnicodeForGlyph\",\"ToUnicodeMap\",\"hasIncludedToUnicodeMap\",\"fallbackToUnicode\",\"ucs2CMapName\",\"ucs2CMap\",\"ucs2\",\"IdentityToUnicodeMap\",\"firstChar\",\"lastChar\",\"cmapObj\",\"cmap\",\"token\",\"cidToGidStream\",\"glyphsData\",\"glyphID\",\"extractWidths\",\"defaultVMetrics\",\"glyphsWidths\",\"glyphsVMetrics\",\"vmetrics\",\"baseFontName\",\"metrics\",\"getBaseFontMetrics\",\"buildCharCodeToWidth\",\"firstWidth\",\"FixedPitch\",\"isSerifFont\",\"fontNameWoStyle\",\"split\",\"getSerifFonts\",\"search\",\"monospace\",\"lookupName\",\"getStdFontMap\",\"Metrics\",\"getMetrics\",\"glyphWidths\",\"widthsByGlyphName\",\"uint8array\",\"df\",\"MurmurHash3_64\",\"update\",\"diffLength\",\"diffBuf\",\"diffEntry\",\"hexdigest\",\"maxCharIndex\",\"Serif\",\"getSymbolsFonts\",\"baseFont\",\"fontNameStr\",\"baseFontStr\",\"cMapPromise\",\"fontFile\",\"length1\",\"length2\",\"length3\",\"wideChars\",\"fixedPitch\",\"xHeight\",\"capHeight\",\"italicAngle\",\"cidEncoding\",\"type3Loaded\",\"sent\",\"fontData\",\"exportData\",\"parentOperatorList\",\"type3Options\",\"type3Evaluator\",\"loadCharProcsPromise\",\"charProcs\",\"fontResources\",\"charProcKeys\",\"charProcOperatorList\",\"_loop2\",\"glyphStream\",\"stateStack\",\"old\",\"prev\",\"pop\",\"txDiff\",\"tyDiff\",\"denominator\",\"calcRenderMatrix\",\"FILL\",\"getOPMap\",\"getLookupTableFactory\",\"setLineWidth\",\"numArgs\",\"variableArgs\",\"setLineCap\",\"setLineJoin\",\"setMiterLimit\",\"setDash\",\"setRenderingIntent\",\"setFlatness\",\"stroke\",\"closeStroke\",\"fill\",\"eoFill\",\"fillStroke\",\"eoFillStroke\",\"closeFillStroke\",\"closeEOFillStroke\",\"endPath\",\"clip\",\"eoClip\",\"endText\",\"setCharWidth\",\"setCharWidthAndBounds\",\"beginInlineImage\",\"beginImageData\",\"opMap\",\"parser\",\"Parser\",\"nonProcessedArgs\",\"opSpec\",\"argsLength\",\"preprocessCommand\",\"FontRendererFactory\",\"_cff_parser\",\"getLong\",\"getUshort\",\"parseCmap\",\"segCount\",\"idDelta\",\"idOffset\",\"ids\",\"groups\",\"parseCff\",\"gsubrs\",\"lookupCmap\",\"l\",\"glyphId\",\"CompiledFont\",\"compiledGlyphs\",\"compiledCharCodeToGlyphId\",\"TrueTypeCompiled\",\"Type2Compiled\",\"cffInfo\",\"glyphNameMap\",\"gsubrsBias\",\"subrsBias\",\"compileGlyph\",\"cmds\",\"compileGlyphImpl\",\"compileGlyf\",\"quadraticCurveTo\",\"xa\",\"ya\",\"numberOfContours\",\"arg1\",\"arg2\",\"scaleX\",\"scaleY\",\"scale01\",\"scale10\",\"subglyph\",\"endPtsOfContours\",\"numberOfPoints\",\"points\",\"repeat\",\"startPoint\",\"endPoint\",\"contour\",\"compileCharString\",\"stems\",\"bezierCurveTo\",\"x1\",\"y1\",\"x2\",\"y2\",\"xb\",\"yb\",\"subrCode\",\"stackClean\",\"x0\",\"y0\",\"achar\",\"bchar\",\"glyf\",\"loca\",\"indexToLocFormat\",\"unitsPerEm\",\"numTables\",\"tag\",\"isGlyphLocationsLong\",\"itemSize\",\"itemDecode\",\"startOffset\",\"endOffset\",\"parseGlyfTable\",\"ProblematicCharRanges\",\"PRIVATE_USE_OFFSET_END\",\"PRIVATE_USE_OFFSET_START\",\"SEAC_ANALYSIS_ENABLED\",\"_font_renderer\",\"_type1_parser\",\"SKIP_PRIVATE_USE_RANGE_F000_TO_F01F\",\"PDF_GLYPH_SPACE_UNITS\",\"Script\",\"Italic\",\"AllCap\",\"SmallCap\",\"ForceBold\",\"MacStandardGlyphOrdering\",\"adjustWidths\",\"FontType\",\"TYPE1C\",\"TYPE1\",\"CIDFONTTYPE0C\",\"CIDFONTTYPE0\",\"OPENTYPE\",\"TRUETYPE\",\"CIDFONTTYPE2\",\"MMTYPE1\",\"TYPE0\",\"UNKNOWN\",\"recoverGlyphName\",\"Glyph\",\"operatorListId\",\"isInFont\",\"matchesForCache\",\"amend\",\"OpenTypeFileBuilder\",\"writeInt16\",\"writeInt32\",\"writeData\",\"sfnt\",\"getSearchParams\",\"entriesCount\",\"entrySize\",\"maxPower2\",\"log2\",\"searchRange\",\"rangeShift\",\"toArray\",\"tablesNames\",\"tableName\",\"tableOffsets\",\"string32\",\"searchParams\",\"checksum\",\"readUint32\",\"addTable\",\"sizes\",\"missingFile\",\"glyphCache\",\"toFontChar\",\"fallbackToSystemFont\",\"isTrueTypeFile\",\"isOpenTypeFile\",\"isType1File\",\"mimetype\",\"CFFFont\",\"Type1Font\",\"convert\",\"checkAndRepair\",\"isOpenType\",\"seacMap\",\"loading\",\"TYPE3\",\"ID\",\"int16\",\"signedInt16\",\"string16\",\"safeString16\",\"buildToFontChar\",\"isProblematicUnicodeLocation\",\"adjustMapping\",\"charCodeToGlyphId\",\"missingGlyphs\",\"isSymbolic\",\"isIdentityUnicode\",\"newMap\",\"usedFontCharCodes\",\"nextAvailableFontCharCode\",\"originalCharCode\",\"fontCharCode\",\"hasUnicodeValue\",\"createCmapTable\",\"numGlyphs\",\"codes\",\"codeIndices\",\"getRanges\",\"bmpLength\",\"trailingRangesCount\",\"startCount\",\"endCount\",\"idDeltas\",\"idRangeOffsets\",\"glyphsIds\",\"contiguous\",\"format314\",\"format31012\",\"header31012\",\"createOS2Table\",\"charstrings\",\"override\",\"yMax\",\"yMin\",\"ulUnicodeRange1\",\"ulUnicodeRange2\",\"ulUnicodeRange3\",\"ulUnicodeRange4\",\"firstCharIndex\",\"lastCharIndex\",\"getUnicodeRangeFor\",\"typoAscent\",\"typoDescent\",\"winAscent\",\"winDescent\",\"createPostTable\",\"angle\",\"createNameTable\",\"proto\",\"stringsUnicode\",\"strBufUnicode\",\"platforms\",\"encodings\",\"languages\",\"namesRecordCount\",\"nameTable\",\"strOffset\",\"strs\",\"hasOwnProperty\",\"stdFontMap\",\"nonStdFontMap\",\"getNonStdFontMap\",\"isStandardFont\",\"bold\",\"italic\",\"remeasure\",\"GlyphMapForStandardFonts\",\"getGlyphMapForStandardFonts\",\"SupplementalGlyphMapForArialBlack\",\"getSupplementalGlyphMapForArialBlack\",\"SupplementalGlyphMapForCalibri\",\"getSupplementalGlyphMapForCalibri\",\"unicodeCharCode\",\"getDingbatsGlyphsUnicode\",\"VALID_TABLES\",\"readTables\",\"readTableEntry\",\"previousPosition\",\"readOpenTypeHeader\",\"ttf\",\"entrySelector\",\"sanitizeGlyph\",\"sourceStart\",\"sourceEnd\",\"destStart\",\"hintsValid\",\"glyphProfile\",\"sizeOfInstructions\",\"contoursCount\",\"flagsCount\",\"instructionsStart\",\"instructionsLength\",\"instructionsEnd\",\"coordinatesLength\",\"xyLength\",\"glyphDataLength\",\"readNameTable\",\"numRecords\",\"stringsStart\",\"records\",\"platform\",\"language\",\"record\",\"TTOpsStackDeltas\",\"sanitizeTTProgram\",\"ttContext\",\"funcId\",\"pc\",\"lastEndf\",\"lastDeff\",\"callstack\",\"functionsCalled\",\"tooComplexToFollowFunctions\",\"inFDEF\",\"ifLevel\",\"inELSE\",\"op\",\"functionsStackDeltas\",\"stackTop\",\"functionsDefined\",\"functionsUsed\",\"newLength\",\"foldTTTable\",\"isTrueTypeCollectionFile\",\"ttcData\",\"ttc\",\"_readTrueTypeCollecti\",\"ttcTag\",\"majorVersion\",\"minorVersion\",\"numFonts\",\"offsetTable\",\"dsigTag\",\"dsigLength\",\"dsigOffset\",\"readTrueTypeCollectionHeader\",\"potentialHeader\",\"potentialTables\",\"nameEntry\",\"readTrueTypeCollectionData\",\"cffFile\",\"isTrueType\",\"maxFunctionDefs\",\"maxSizeOfInstructions\",\"dupFirstEntry\",\"fpgm\",\"prep\",\"cvt\",\"checkInvalidFunctions\",\"cvtData\",\"sanitizeTTPrograms\",\"numOfMetrics\",\"numMissing\",\"sanitizeMetrics\",\"head\",\"locaLength\",\"b3\",\"numGlyphsPlusOne\",\"sanitizeHead\",\"glyphsInfo\",\"itemEncode\",\"locaData\",\"locaDataSize\",\"oldGlyfData\",\"oldGlyfDataLength\",\"newGlyfData\",\"writeOffset\",\"locaCount\",\"simpleGlyph\",\"firstEntryLength\",\"sanitizeGlyphLocations\",\"metricsOverride\",\"post\",\"maxpNumGlyphs\",\"glyphNames\",\"glyphNameIndexes\",\"customNames\",\"stringLength\",\"readPostScriptTable\",\"hasGlyph\",\"isCidToGidMapEmpty\",\"cmapTable\",\"platformId\",\"encodingId\",\"mappings\",\"hasShortCmap\",\"segment\",\"potentialTable\",\"canBreak\",\"useTable\",\"segIndex\",\"segments\",\"delta\",\"offsetsCount\",\"rangeOffset\",\"offsetIndex\",\"firstCode\",\"entryCount\",\"splice\",\"readCmapTable\",\"cmapPlatformId\",\"cmapEncodingId\",\"cmapMappings\",\"cmapMappingsLength\",\"standardGlyphName\",\"unicodeOrCharCode\",\"_i2\",\"newMapping\",\"os2\",\"selection\",\"validateOS2Table\",\"compiler\",\"namePrototype\",\"builder\",\"tableTag\",\"builtInEncoding\",\"adjustToUnicode\",\"mapping\",\"getGlyphMapping\",\"getCharCodes\",\"charCodes\",\"createCharCode\",\"getCharset\",\"baseGlyphName\",\"accentGlyphName\",\"baseGlyphId\",\"accentGlyphId\",\"accentOffset\",\"baseFontCharCode\",\"accentFontCharCode\",\"tan\",\"cffWidths\",\"hmtx\",\"_shadowWidth\",\"possibleSpaceReplacements\",\"charToGlyph\",\"widthCode\",\"mapSpecialUnicodeValues\",\"charsCache\",\"charsCacheKey\",\"error\",\"type1FontGlyphMapping\",\"findBlock\",\"streamBytes\",\"signature\",\"startIndex\",\"streamBytesLength\",\"signatureLength\",\"scanLength\",\"headerBlockLength\",\"pfbHeader\",\"pfbHeaderPresent\",\"headerBlock\",\"suggestedLength\",\"headerBytes\",\"headerBytesLength\",\"block\",\"actualLength\",\"EEXEC_SIGNATURE\",\"streamStartPos\",\"getHeaderBlock\",\"Type1Parser\",\"extractFontHeader\",\"eexecBytes\",\"eexecBlock\",\"extractFontProgram\",\"type2Charstrings\",\"getType2Charstrings\",\"getType2Subrs\",\"wrap\",\"getSeacs\",\"type1Charstrings\",\"type1Subrs\",\"type2Subrs\",\"charsetArray\",\"charStringsIndex\",\"field\",\"privateData\",\"subrIndex\",\"charsets\",\"navigator\",\"userAgent\",\"PostScriptCompiler\",\"PostScriptEvaluator\",\"_typeof\",\"_ps_parser\",\"IsEvalSupportedCached\",\"_ref$isEvalSupported\",\"PDFFunction\",\"fnObj\",\"parseArray\",\"getSampleArray\",\"outputSize\",\"bps\",\"codeSize\",\"codeBuf\",\"sampleMul\",\"strBytes\",\"strIdx\",\"typeFn\",\"constructSampled\",\"constructInterpolated\",\"constructStiched\",\"constructPostScript\",\"constructSampledFromIR\",\"constructInterpolatedFromIR\",\"constructStichedFromIR\",\"constructPostScriptFromIR\",\"toMultiArray\",\"domain\",\"inputSize\",\"encode\",\"interpolate\",\"xmin\",\"xmax\",\"ymin\",\"ymax\",\"samples\",\"cubeVertices\",\"cubeN\",\"Float64Array\",\"cubeVertex\",\"domain_2i\",\"domain_2i_1\",\"size_i\",\"e0\",\"n0\",\"n1\",\"rj\",\"c0\",\"c1\",\"diff\",\"_ref9\",\"_ref10\",\"fnRefs\",\"fns\",\"_ref11\",\"fnsIR\",\"dmin\",\"dmax\",\"rmin\",\"rmax\",\"_ref12\",\"PostScriptLexer\",\"PostScriptParser\",\"_ref13\",\"numOutputs\",\"numInputs\",\"cache\",\"cache_available\",\"cachedValue\",\"execute\",\"stackIndex\",\"bound\",\"PostScriptStack\",\"initialStack\",\"copy\",\"roll\",\"operators\",\"operator\",\"counter\",\"isBool\",\"atan\",\"cos\",\"log\",\"LN10\",\"sin\",\"AstNode\",\"AstArgument\",\"AstLiteral\",\"number\",\"AstBinaryOperation\",\"AstMin\",\"AstVariable\",\"AstVariableDefinition\",\"variable\",\"ExpressionBuilderVisitor\",\"parts\",\"buildAddOperation\",\"num1\",\"num2\",\"buildMulOperation\",\"buildSubOperation\",\"buildMinOperation\",\"visit\",\"visitor\",\"visitArgument\",\"visitLiteral\",\"visitBinaryOperation\",\"visitMin\",\"visitVariable\",\"visitVariableDefinition\",\"literal\",\"definition\",\"ast1\",\"ast2\",\"tmpVar\",\"item\",\"instructions\",\"lastRegister\",\"instruction\",\"statementBuilder\",\"expr\",\"fnDict\",\"_jpx\",\"handleImageData\",\"decodeAndClamp\",\"addend\",\"coefficient\",\"resizeImageMask\",\"_ref$isInline\",\"_ref$smask\",\"_ref$mask\",\"_ref$isMask\",\"isMask\",\"jpxImage\",\"JpxImage\",\"parseImageProperties\",\"bitsPerComponent\",\"componentsCount\",\"imageMask\",\"matte\",\"needsDecode\",\"decodeCoefficients\",\"decodeAddends\",\"smaskPromise\",\"maskPromise\",\"_ref2$isInline\",\"_ref2$nativeDecoder\",\"imagePromise\",\"imageData\",\"smaskData\",\"maskData\",\"computedLength\",\"drawWidth\",\"drawHeight\",\"decodeBuffer\",\"getComponents\",\"buf\",\"bufferPos\",\"rowComps\",\"loop1End\",\"loop2End\",\"remainingBits\",\"fillOpacity\",\"rgbaBuf\",\"alphaBuf\",\"sw\",\"sh\",\"fillGrayBuffer\",\"opacity\",\"imageOffset\",\"maskOffset\",\"undoPreblend\",\"matteRgb\",\"matteR\",\"matteG\",\"matteB\",\"alpha\",\"forceRGBA\",\"rowBytes\",\"kind\",\"ImageKind\",\"GRAYSCALE_1BPP\",\"RGB_24BPP\",\"getImageBytes\",\"newArray\",\"imageLength\",\"maybeUndoPreblend\",\"RGBA_32BPP\",\"forceRGB\",\"Jbig2Image\",\"_arithmetic_decoder\",\"Jbig2Error\",\"msg\",\"ContextCache\",\"DecodingContext\",\"decodeInteger\",\"contextCache\",\"procedure\",\"decoder\",\"getContexts\",\"readBits\",\"bit\",\"decodeIAID\",\"codeLength\",\"Int8Array\",\"SegmentTypes\",\"CodingTemplates\",\"RefinementTemplates\",\"coding\",\"reference\",\"ReusedContexts\",\"RefinementReusedContexts\",\"decodeBitmap\",\"mmr\",\"templateIndex\",\"prediction\",\"at\",\"decodingContext\",\"decodeMMRBitmap\",\"Reader\",\"contextLabel\",\"pixel\",\"row1\",\"row2\",\"bitmap\",\"decodeBitmapTemplate0\",\"useskip\",\"template\",\"templateLength\",\"templateX\",\"templateY\",\"changingTemplateEntries\",\"reuseMask\",\"changingEntriesLength\",\"changingTemplateX\",\"changingTemplateY\",\"changingTemplateBit\",\"i0\",\"j0\",\"sbb_left\",\"sbb_top\",\"sbb_right\",\"pseudoPixelContext\",\"ltp\",\"decodeRefinement\",\"referenceBitmap\",\"offsetX\",\"offsetY\",\"codingTemplate\",\"codingTemplateLength\",\"codingTemplateX\",\"codingTemplateY\",\"referenceTemplate\",\"referenceTemplateLength\",\"referenceTemplateX\",\"referenceTemplateY\",\"referenceWidth\",\"referenceHeight\",\"decodeTextRegion\",\"huffman\",\"refinement\",\"defaultPixelValue\",\"numberOfSymbolInstances\",\"stripSize\",\"inputSymbols\",\"symbolCodeLength\",\"transposed\",\"dsOffset\",\"referenceCorner\",\"combinationOperator\",\"huffmanTables\",\"refinementTemplateIndex\",\"refinementAt\",\"logStripSize\",\"huffmanInput\",\"stripT\",\"tableDeltaT\",\"firstS\",\"currentS\",\"tableFirstS\",\"currentT\",\"symbolId\",\"symbolIDTable\",\"applyRefinement\",\"symbolBitmap\",\"symbolWidth\",\"symbolHeight\",\"rdw\",\"rdh\",\"symbolRow\",\"offsetT\",\"offsetS\",\"maxWidth\",\"deltaS\",\"tableDeltaS\",\"readSegmentHeader\",\"segmentHeader\",\"segmentType\",\"typeName\",\"deferredNonRetain\",\"pageAssociationFieldSize\",\"referredFlags\",\"referredToCount\",\"retainBits\",\"referredToSegmentNumberSize\",\"referredTo\",\"readUint16\",\"pageAssociation\",\"genericRegionInfo\",\"readRegionSegmentInformation\",\"genericRegionMmr\",\"RegionSegmentInformationFieldLength\",\"searchPattern\",\"headerEnd\",\"readSegments\",\"randomAccess\",\"processSegment\",\"atLength\",\"dictionary\",\"dictionaryFlags\",\"huffmanDHSelector\",\"huffmanDWSelector\",\"bitmapSizeSelector\",\"aggregationInstancesSelector\",\"bitmapCodingContextUsed\",\"bitmapCodingContextRetained\",\"refinementTemplate\",\"readInt8\",\"numberOfExportedSymbols\",\"numberOfNewSymbols\",\"textRegion\",\"textRegionSegmentFlags\",\"textRegionHuffmanFlags\",\"huffmanFS\",\"huffmanDS\",\"huffmanDT\",\"huffmanRefinementDW\",\"huffmanRefinementDH\",\"huffmanRefinementDX\",\"huffmanRefinementDY\",\"huffmanRefinementSizeSelector\",\"patternDictionary\",\"patternDictionaryFlags\",\"patternWidth\",\"patternHeight\",\"maxPatternIndex\",\"halftoneRegion\",\"halftoneRegionFlags\",\"enableSkip\",\"gridWidth\",\"gridHeight\",\"gridOffsetX\",\"gridOffsetY\",\"gridVectorX\",\"gridVectorY\",\"genericRegion\",\"genericRegionSegmentFlags\",\"pageInfo\",\"resolutionX\",\"resolutionY\",\"pageSegmentFlags\",\"lossless\",\"requiresBuffer\",\"combinationOperatorOverride\",\"callbackName\",\"processSegments\",\"SimpleSegmentVisitor\",\"HuffmanLine\",\"lineData\",\"isOOB\",\"rangeLow\",\"prefixLength\",\"rangeLength\",\"prefixCode\",\"isLowerRange\",\"HuffmanTreeNode\",\"line\",\"children\",\"isLeaf\",\"HuffmanTable\",\"lines\",\"prefixCodesDone\",\"assignPrefixCodes\",\"rootNode\",\"buildTree\",\"onPageInformation\",\"currentPageInfo\",\"rowSize\",\"Uint8ClampedArray\",\"drawBitmap\",\"regionInfo\",\"mask0\",\"onImmediateGenericRegion\",\"region\",\"onImmediateLosslessGenericRegion\",\"onSymbolDictionary\",\"currentSegment\",\"referredSegments\",\"customTables\",\"customIndex\",\"tableDeltaHeight\",\"tableDeltaWidth\",\"getStandardTable\",\"getCustomHuffmanTable\",\"tableBitmapSize\",\"tableAggregateInstances\",\"getSymbolDictionaryHuffmanTables\",\"symbols\",\"referredSymbols\",\"newSymbols\",\"currentHeight\",\"tableB1\",\"symbolWidths\",\"currentWidth\",\"totalWidth\",\"firstSymbol\",\"deltaWidth\",\"numberOfInstances\",\"rdx\",\"rdy\",\"bitmapSize\",\"collectiveBitmap\",\"readUncompressedBitmap\",\"originalEnd\",\"bitmapEnd\",\"numberOfSymbolsDecoded\",\"xMin\",\"xMax\",\"exportedSymbols\",\"currentFlag\",\"totalSymbolsLength\",\"runLength\",\"decodeSymbolDictionary\",\"onImmediateTextRegion\",\"numberOfSymbols\",\"reader\",\"runCodesTable\",\"repeatedLength\",\"numberOfRepeats\",\"getTextRegionHuffmanTables\",\"onImmediateLosslessTextRegion\",\"onPatternDictionary\",\"patternBitmap\",\"decodePatternDictionary\",\"onImmediateHalftoneRegion\",\"regionWidth\",\"regionHeight\",\"regionBitmap\",\"numberOfPatterns\",\"pattern0\",\"bitsPerValue\",\"grayScaleBitPlanes\",\"mmrInput\",\"mg\",\"ng\",\"patternIndex\",\"patternRow\",\"regionRow\",\"regionX\",\"regionY\",\"decodeHalftoneRegion\",\"onImmediateLosslessHalftoneRegion\",\"onTables\",\"lowestValue\",\"highestValue\",\"prefixSizeBits\",\"rangeSizeBits\",\"currentRangeLow\",\"decodeTablesSegment\",\"decodeNode\",\"htOffset\",\"linesLength\",\"prefixLengthMax\",\"histogram\",\"currentLength\",\"currentCode\",\"currentTemp\",\"standardTablesCache\",\"currentByte\",\"currentIndex\",\"endOfBlock\",\"numBits\",\"parseChunks\",\"parseJbig2Chunks\",\"Jbig2Stream\",\"_jbig\",\"requested\",\"jbig2Image\",\"globalsStream\",\"globals\",\"dataLength\",\"_jpg\",\"jpegImage\",\"JpegImage\",\"decodeArr\",\"decodeArrLength\",\"transformNeeded\",\"maxValue\",\"decodeTransform\",\"colorTransform\",\"getData\",\"createObjectURL\",\"JpegError\",\"dctZigZag\",\"dctCos1\",\"dctSin1\",\"dctCos3\",\"dctSin3\",\"dctCos6\",\"dctSin6\",\"dctSqrt2\",\"dctSqrt1d2\",\"buildHuffmanTable\",\"codeLengths\",\"getBlockBufferOffset\",\"component\",\"col\",\"blocksPerLine\",\"decodeScan\",\"frame\",\"components\",\"resetInterval\",\"spectralStart\",\"spectralEnd\",\"successivePrev\",\"successive\",\"mcusPerLine\",\"progressive\",\"bitsData\",\"bitsCount\",\"nextByte\",\"decodeHuffman\",\"tree\",\"receive\",\"receiveAndExtend\",\"eobrun\",\"successiveACNextValue\",\"successiveACState\",\"decodeMcu\",\"mcu\",\"mcuCol\",\"decodeBlock\",\"decodeFn\",\"componentsLength\",\"huffmanTableDC\",\"blockData\",\"pred\",\"rs\",\"huffmanTableAC\",\"offsetZ\",\"fileMarker\",\"mcuExpected\",\"blocksPerColumn\",\"mcusPerColumn\",\"mcuToRead\",\"findNextFileMarker\",\"invalid\",\"marker\",\"quantizeAndInverse\",\"blockBufferOffset\",\"v0\",\"v1\",\"v2\",\"v3\",\"v4\",\"v5\",\"v6\",\"v7\",\"p0\",\"p1\",\"p2\",\"p3\",\"p4\",\"p5\",\"p6\",\"p7\",\"qt\",\"quantizationTable\",\"buildComponentData\",\"computationBuffer\",\"Int16Array\",\"blockRow\",\"blockCol\",\"currentPos\",\"peekUint16\",\"maxPos\",\"newPos\",\"currentMarker\",\"newMarker\",\"readDataBlock\",\"prepareComponents\",\"samplesPerLine\",\"maxH\",\"scanLines\",\"maxV\",\"blocksPerLineForMcu\",\"blocksBufferSize\",\"jfif\",\"adobe\",\"quantizationTables\",\"huffmanTablesAC\",\"huffmanTablesDC\",\"appData\",\"densityUnits\",\"xDensity\",\"yDensity\",\"thumbWidth\",\"thumbHeight\",\"thumbData\",\"flags0\",\"flags1\",\"transformCode\",\"quantizationTablesEnd\",\"quantizationTableSpec\",\"tableData\",\"extended\",\"precision\",\"componentIds\",\"componentId\",\"qId\",\"quantizationId\",\"huffmanLength\",\"huffmanTableSpec\",\"codeLengthSum\",\"huffmanValues\",\"selectorsCount\",\"componentIndex\",\"tableSpec\",\"successiveApproximation\",\"numComponents\",\"_getLinearizedBlockData\",\"componentScaleX\",\"componentScaleY\",\"blocksPerScanline\",\"xScaleBlockOffset\",\"_isColorConversionNeeded\",\"_convertYccToRgb\",\"Cb\",\"Cr\",\"_convertYcckToRgb\",\"_convertYcckToCmyk\",\"_convertCmykToRgb\",\"forceRGBoutput\",\"rgbData\",\"grayColor\",\"JpxError\",\"SubbandsGainLog2\",\"LL\",\"LH\",\"HL\",\"HH\",\"failOnCorruptedImage\",\"calculateComponentDimensions\",\"siz\",\"XOsiz\",\"XRsiz\",\"Xsiz\",\"YOsiz\",\"YRsiz\",\"Ysiz\",\"calculateTileGrids\",\"context\",\"tile\",\"SIZ\",\"tiles\",\"numXtiles\",\"XTOsiz\",\"XTsiz\",\"numYtiles\",\"YTOsiz\",\"YTsiz\",\"tx0\",\"ty0\",\"tx1\",\"ty1\",\"Csiz\",\"tileComponent\",\"tcx0\",\"tcy0\",\"tcx1\",\"tcy1\",\"getBlocksDimensions\",\"codOrCoc\",\"codingStyleParameters\",\"entropyCoderWithCustomPrecincts\",\"PPx\",\"precinctsSizes\",\"PPy\",\"xcb_\",\"xcb\",\"ycb_\",\"ycb\",\"buildPrecincts\",\"resolution\",\"dimensions\",\"precinctWidth\",\"precinctHeight\",\"isZeroRes\",\"resLevel\",\"precinctWidthInSubband\",\"precinctHeightInSubband\",\"numprecinctswide\",\"trx1\",\"trx0\",\"numprecinctshigh\",\"try1\",\"try0\",\"numprecincts\",\"precinctParameters\",\"buildCodeblocks\",\"subband\",\"codeblock\",\"precinctNumber\",\"codeblockWidth\",\"codeblockHeight\",\"cbx0\",\"tbx0\",\"cby0\",\"tby0\",\"cbx1\",\"tbx1\",\"cby1\",\"tby1\",\"codeblocks\",\"precincts\",\"cbx\",\"cby\",\"tbx0_\",\"tby0_\",\"tbx1_\",\"tby1_\",\"subbandType\",\"Lblock\",\"precinct\",\"cbxMin\",\"cbxMax\",\"cbyMin\",\"cbyMax\",\"codeblockParameters\",\"numcodeblockwide\",\"numcodeblockhigh\",\"createPacket\",\"layerNumber\",\"precinctCodeblocks\",\"subbands\",\"LayerResolutionComponentPositionIterator\",\"tileIndex\",\"currentTile\",\"layersCount\",\"codingStyleDefaultParameters\",\"maxDecompositionLevelsCount\",\"decompositionLevelsCount\",\"nextPacket\",\"resolutions\",\"packet\",\"ResolutionLayerComponentPositionIterator\",\"ResolutionPositionComponentLayerIterator\",\"maxNumPrecinctsInLevel\",\"maxNumPrecincts\",\"PositionComponentResolutionLayerIterator\",\"getPrecinctSizesInImageScale\",\"precinctsIterationSizes\",\"px\",\"maxNumHigh\",\"maxNumWide\",\"sizeInImageScale\",\"getPrecinctIndexIfExist\",\"ComponentPositionResolutionLayerIterator\",\"pxIndex\",\"pyIndex\",\"precinctIterationSizes\",\"posX\",\"minWidth\",\"posY\",\"minHeight\",\"startPrecinctRowIndex\",\"MAX_VALUE\",\"sizePerComponent\",\"sizePerResolution\",\"minWidthCurrentComponent\",\"minHeightCurrentComponent\",\"maxNumWideCurrentComponent\",\"maxNumHighCurrentComponent\",\"widthCurrentResolution\",\"heightCurrentResolution\",\"buildPackets\",\"blocksDimensions\",\"bscale\",\"resolutionSubbands\",\"progressionOrder\",\"packetsIterator\",\"parseTilePackets\",\"skipNextBit\",\"skipMarkerIfEqual\",\"skipBytes\",\"alignToByte\",\"readCodingpasses\",\"sopMarkerUsed\",\"COD\",\"ephMarkerUsed\",\"queue\",\"codeblockColumn\",\"codeblockRow\",\"codeblockIncluded\",\"firstTimeInclusion\",\"inclusionTree\",\"zeroBitPlanesTree\",\"InclusionTree\",\"TagTree\",\"incrementValue\",\"nextLevel\",\"included\",\"zeroBitPlanes\",\"codingpasses\",\"codingpassesLog2\",\"codedDataLength\",\"packetItem\",\"copyCoefficients\",\"coefficients\",\"levelWidth\",\"levelHeight\",\"mb\",\"reversible\",\"segmentationSymbolUsed\",\"right\",\"bottom\",\"blockWidth\",\"blockHeight\",\"bitModel\",\"currentCodingpassType\",\"BitModel\",\"dataItem\",\"totalLength\",\"encodedData\",\"setDecoder\",\"runSignificancePropagationPass\",\"runMagnitudeRefinementPass\",\"runCleanupPass\",\"checkSegmentationSymbol\",\"nb\",\"coefficentsSign\",\"magnitude\",\"coefficentsMagnitude\",\"bitsDecoded\",\"magnitudeCorrection\",\"interleave\",\"levelOffset\",\"transformTile\",\"quantizationParameters\",\"spqcds\",\"SPqcds\",\"scalarExpounded\",\"guardBits\",\"reversibleTransformation\",\"ReversibleTransform\",\"IrreversibleTransform\",\"subbandCoefficients\",\"mu\",\"gainLog2\",\"calculate\",\"top\",\"initializeTile\",\"qcdOrQcc\",\"QCC\",\"QCD\",\"COC\",\"headerSize\",\"lbox\",\"tbox\",\"jumpDataLength\",\"method\",\"colorspace\",\"parseCodestream\",\"headerType\",\"newByte\",\"doNotRecover\",\"sqcd\",\"spqcdSize\",\"mainHeader\",\"isSigned\",\"qcd\",\"noQuantization\",\"spqcd\",\"cqcc\",\"qcc\",\"cod\",\"scod\",\"multipleComponentTransform\",\"blockStyle\",\"selectiveArithmeticCodingBypass\",\"resetContextProbabilities\",\"terminationOnEachCodingPass\",\"verticalyStripe\",\"predictableTermination\",\"precinctsSize\",\"unsupported\",\"partIndex\",\"partsCount\",\"resultImages\",\"transformedTiles\",\"tile0\",\"fourComponents\",\"y0items\",\"y1items\",\"y2items\",\"y3items\",\"component0\",\"transformComponents\",\"levelsLength\",\"currentLevel\",\"defaultValue\",\"stopValue\",\"propagateValues\",\"levelIndex\",\"currentValue\",\"LLAndLHContextsLabel\",\"HLContextLabel\",\"HHContextLabel\",\"contextLabelTable\",\"coefficientCount\",\"neighborsSignificance\",\"processingFlags\",\"setNeighborsSignificance\",\"column\",\"labels\",\"i1\",\"decodeSignBit\",\"contribution\",\"sign0\",\"sign1\",\"significance1\",\"decoded\",\"horizontalContribution\",\"indexNext\",\"width4\",\"index0\",\"iNext\",\"oneRowDown\",\"twoRowsDown\",\"threeRowsDown\",\"indexBase\",\"checkAllEmpty\",\"i2\",\"Transform\",\"u0\",\"ll\",\"iterate\",\"j1\",\"j2\",\"hl_lh_hh\",\"llWidth\",\"llHeight\",\"llItems\",\"rowBuffer\",\"numBuffers\",\"colBuffers\",\"currentBuffer\",\"current\",\"beta\",\"JpxStream\",\"tileCount\",\"tileComponents\",\"tileWidth\",\"tileHeight\",\"tileLeft\",\"tileTop\",\"srcPosition\",\"dataPosition\",\"imgRowSize\",\"tileRowSize\",\"seed\",\"blockCounts\",\"tailLength\",\"dataUint32\",\"k2\",\"C1\",\"C2\",\"_chunked_stream\",\"getCatalogObj\",\"RefSetCache\",\"pageKidsCountCache\",\"pagePromises\",\"metadata\",\"streamRef\",\"stringToUTF8String\",\"toplevelPagesDict\",\"pagesObj\",\"documentOutline\",\"readDocumentOutline\",\"root\",\"RefSet\",\"blackColor\",\"outlineDict\",\"outlineItem\",\"unsafeUrl\",\"newWindow\",\"destinations\",\"fetchDestination\",\"nameTreeRef\",\"nameDictionaryRef\",\"dests\",\"NameTree\",\"getAll\",\"getDestination\",\"destinationId\",\"pageLabels\",\"readPageLabels\",\"prefix\",\"nums\",\"NumberTree\",\"currentLabel\",\"labelDict\",\"st\",\"toRoman\",\"baseCharCode\",\"letterIndex\",\"character\",\"charBuf\",\"pageMode\",\"attachments\",\"fs\",\"javaScript\",\"appendIfJavaScriptDict\",\"jsDict\",\"js\",\"openactionDict\",\"actionType\",\"action\",\"clear\",\"promises\",\"translatedFonts\",\"getPageDict\",\"nodesToVisit\",\"currentPageIndex\",\"currentNode\",\"fetchAsync\",\"kids\",\"getPageIndex\",\"pageRef\",\"kidRef\",\"parentRef\",\"isRefsEqual\",\"kidPromises\",\"kid\",\"pagesBeforeRef\",\"actionName\",\"addDefaultProtocolToUrl\",\"urlDict\",\"remoteDest\",\"baseUrl\",\"JSON\",\"stringify\",\"namedAction\",\"jsAction\",\"jsUrl\",\"RegExp\",\"tryConvertUrlEncoding\",\"absoluteUrl\",\"createValidAbsoluteUrl\",\"href\",\"xrefstms\",\"streamTypes\",\"startXRefQueue\",\"trailerDict\",\"indexObjects\",\"readXRef\",\"assignXref\",\"processXRefTable\",\"tableState\",\"entryNum\",\"streamPos\",\"parserBuf1\",\"buf1\",\"parserBuf2\",\"buf2\",\"readXRefTable\",\"firstEntryNum\",\"free\",\"uncompressed\",\"processXRefStream\",\"streamParameters\",\"byteWidths\",\"streamState\",\"entryRanges\",\"readXRefStream\",\"typeFieldWidth\",\"offsetFieldWidth\",\"generationFieldWidth\",\"generation\",\"LF\",\"CR\",\"LT\",\"readToken\",\"skipUntil\",\"what\",\"skipped\",\"objRegExp\",\"endobjRegExp\",\"nestedObjRegExp\",\"trailerBytes\",\"startxrefBytes\",\"objBytes\",\"xrefBytes\",\"trailers\",\"xrefStms\",\"contentLength\",\"checkPos\",\"tokenStr\",\"objToken\",\"xrefTagOffset\",\"InvalidPDFException\",\"startXRefParsedCache\",\"XRefParseException\",\"getEntry\",\"xrefEntry\",\"fetchUncompressed\",\"fetchCompressed\",\"obj1\",\"obj2\",\"obj3\",\"tableOffset\",\"Ref\",\"allowStreams\",\"fetchIfRefAsync\",\"streamManager\",\"tryFetch\",\"NameOrNumberTree\",\"_type\",\"kidsOrEntries\",\"limits\",\"currentKey\",\"description\",\"contentAvailable\",\"pickPlatformItem\",\"filename\",\"_filename\",\"contentRef\",\"fileObj\",\"mayHaveChildren\",\"addChildren\",\"dictKeys\",\"rawValue\",\"_ii\",\"refSet\",\"_walk\",\"nodesToRevisit\",\"pendingRequests\",\"baseStreams\",\"foundMissingData\",\"_ii2\",\"remove\",\"QueueOptimizer\",\"addState\",\"parentState\",\"checkFn\",\"iterateFn\",\"processFn\",\"InitialState\",\"iCurr\",\"match\",\"lastProcessed\",\"curr\",\"iFirstSave\",\"iFirstTransform\",\"iFirstPIIXO\",\"maxLineHeight\",\"currentX\",\"currentY\",\"img\",\"imgWidth\",\"imgHeight\",\"paintInlineImageXObjectGroup\",\"iFirstPIMXO\",\"paintSolidColorImageMask\",\"handlePaintSolidColorImageMask\",\"iTransform\",\"transformArgs\",\"isSameImage\",\"firstPIMXOArg0\",\"firstTransformArg0\",\"firstTransformArg3\",\"iPIMXO\",\"positions\",\"paintImageMaskXObjectRepeat\",\"images\",\"maskParams\",\"paintImageMaskXObjectGroup\",\"firstPIXOArg0\",\"paintImageXObjectRepeat\",\"iFirstSetFont\",\"firstSetFontArg0\",\"firstSetFontArg1\",\"iFirstBeginText\",\"iFirstSetTextMatrix\",\"iFirstShowText\",\"iFirstEndText\",\"iFirst\",\"iEndText\",\"_optimize\",\"NullOptimizer\",\"messageHandler\",\"optimizer\",\"_totalLength\",\"weight\",\"CHUNK_SIZE\",\"dependency\",\"extendObj\",\"transfers\",\"getTransfers\",\"_ccitt_stream\",\"_jbig2_stream\",\"_jpx_stream\",\"refill\",\"tryShift\",\"cipherTransform\",\"Cmd\",\"makeInlineImage\",\"makeStream\",\"findDefaultInlineStreamEnd\",\"maybeEIPos\",\"followingBytes\",\"findDCTDecodeInlineStreamEnd\",\"markerLength\",\"foundEOI\",\"inlineStreamSkipEI\",\"findASCII85DecodeInlineStreamEnd\",\"findASCIIHexDecodeInlineStreamEnd\",\"filterName\",\"filterZero\",\"adler32\",\"imageStream\",\"imageBytes\",\"skipToNextLine\",\"nextChar\",\"ENDSTREAM_SIGNATURE\",\"scanBytes\",\"makeFilter\",\"filterArray\",\"paramsArray\",\"xrefStreamStats\",\"StreamType\",\"FLATE\",\"PredictorStream\",\"FlateStream\",\"LZW\",\"earlyChange\",\"LZWStream\",\"DCT\",\"JPX\",\"A85\",\"Ascii85Stream\",\"AHX\",\"AsciiHexStream\",\"CCF\",\"RL\",\"RunLengthStream\",\"JBIG\",\"knownCommands\",\"specialChars\",\"toHexDigit\",\"currentChar\",\"peekChar\",\"getNumber\",\"eNotation\",\"divideBy\",\"baseValue\",\"powerValue\",\"powerValueSign\",\"currentDigit\",\"getString\",\"numParen\",\"charBuffered\",\"getName\",\"previousCh\",\"getHexString\",\"firstDigit\",\"secondDigit\",\"isFirstHex\",\"comment\",\"EOF\",\"knownCommandFound\",\"possibleCommand\",\"getInt\",\"allowZeroValue\",\"linDict\",\"hintsLength\",\"getHints\",\"objectNumberFirst\",\"endFirst\",\"pageFirst\",\"ShadingType\",\"FUNCTION_BASED\",\"AXIAL\",\"RADIAL\",\"FREE_FORM_MESH\",\"LATTICE_FORM_MESH\",\"COONS_PATCH_MESH\",\"TENSOR_PATCH_MESH\",\"getPattern\",\"ctx\",\"Shadings\",\"RadialAxial\",\"Mesh\",\"shadingPattern\",\"Dummy\",\"SMALL_NUMBER\",\"coordsArr\",\"shadingType\",\"t0\",\"domainArr\",\"extendStart\",\"extendEnd\",\"extendArr\",\"r1\",\"r2\",\"distance\",\"createFromArray\",\"step\",\"colorStops\",\"ratio\",\"cssColor\",\"makeCssRgb\",\"background\",\"r0\",\"applyTransform\",\"singularValueDecompose2dScale\",\"MeshStreamReader\",\"tmpCompsBuf\",\"csNumComps\",\"tmpCsCompsBuf\",\"colorFn\",\"hasData\",\"align\",\"readFlag\",\"bitsPerFlag\",\"readCoordinate\",\"bitsPerCoordinate\",\"xi\",\"yi\",\"readComponents\",\"ci\",\"MIN_SPLIT_PATCH_CHUNKS_AMOUNT\",\"MAX_SPLIT_PATCH_CHUNKS_AMOUNT\",\"TRIANGLE_DENSITY\",\"getB\",\"lut\",\"t_\",\"buildB\",\"buildFigureFromPatch\",\"mesh\",\"figure\",\"figures\",\"coords\",\"colors\",\"pi\",\"figureMinX\",\"figureMinY\",\"figureMaxX\",\"figureMaxY\",\"splitXBy\",\"splitYBy\",\"verticesPerRow\",\"figureCoords\",\"figureColors\",\"cl\",\"cr\",\"c2\",\"c3\",\"bRow\",\"bCol\",\"newColor\",\"updateBounds\",\"patchMesh\",\"ps\",\"verticesLeft\",\"coord\",\"decodeType4Shading\",\"decodeType5Shading\",\"tmp4\",\"decodeType6Shading\",\"decodeType7Shading\",\"coordsPacked\",\"xy\",\"colorsPacked\",\"packData\",\"xstep\",\"ystep\",\"paintType\",\"tilingType\",\"NetworkPdfManager\",\"LocalPdfManager\",\"_document\",\"BasePdfManager\",\"_docId\",\"_password\",\"_docBaseUrl\",\"NotImplementedException\",\"ensureDoc\",\"prop\",\"pdfDocument\",\"ensureXRef\",\"ensureCatalog\",\"requestLoadedStream\",\"sendProgressiveData\",\"updatePassword\",\"terminate\",\"ensureHelper\",\"nameCache\",\"nameValue\",\"cmdCache\",\"cmdValue\",\"nonSerializable\",\"__nonSerializable__\",\"newXref\",\"key1\",\"key2\",\"key3\",\"dictArray\",\"mergedDict\",\"keyName\",\"thisArg\",\"nextToken\",\"getToken\",\"accept\",\"expect\",\"PostScriptTokenTypes\",\"LBRACE\",\"parseBlock\",\"RBRACE\",\"NUMBER\",\"OPERATOR\",\"parseCondition\",\"conditionLocation\",\"IF\",\"jumpLocation\",\"endOfTrue\",\"IFELSE\",\"PostScriptToken\",\"opCache\",\"getOperator\",\"opValue\",\"toLowerCase\",\"StringStream\",\"arrayBuffer\",\"emptyBuffer\",\"maybeMinBufferLength\",\"minBufferLength\",\"buffer2\",\"bufEnd\",\"appendToArray\",\"codeLenCodeMap\",\"lengthDecode\",\"distDecode\",\"fixedLitCodeTab\",\"fixedDistCodeTab\",\"cmf\",\"flg\",\"getBits\",\"getCode\",\"codeLen\",\"codeVal\",\"generateHuffmanTable\",\"lengths\",\"hdr\",\"litCodeTable\",\"distCodeTable\",\"numLitCodes\",\"numDistCodes\",\"numCodeLenCodes\",\"codeLenCodeLengths\",\"codeLenCodeTab\",\"bitsLength\",\"bitsOffset\",\"repeatLength\",\"dist\",\"blockLen\",\"predictor\",\"readBlockTiff\",\"readBlockPng\",\"pixBytes\",\"inbuf\",\"outbuf\",\"inbits\",\"outbits\",\"bytesPerPixel\",\"sum\",\"compArray\",\"bitMask\",\"prevRow\",\"up\",\"upLeft\",\"pa\",\"pb\",\"decrypt\",\"nextChunk\",\"hasMoreData\",\"maxDecodeLength\",\"digit\",\"repeatHeader\",\"cachedData\",\"bitsCached\",\"lzwState\",\"nextCode\",\"dictionaryValues\",\"dictionaryLengths\",\"dictionaryPrevCodes\",\"currentSequence\",\"currentSequenceLength\",\"lastCode\",\"estimatedDecodedSize\",\"blockSize\",\"prevCode\",\"decodedLength\",\"currentBufferLength\",\"hasPrev\",\"Type1CharString\",\"COMMAND_MAP\",\"lsb\",\"flexing\",\"encoded\",\"wx\",\"sbx\",\"dy\",\"executeCommand\",\"sby\",\"flexArgs\",\"howManyArgs\",\"command\",\"keepStack\",\"stackLength\",\"EEXEC_ENCRYPT_KEY\",\"isHexDigit\",\"discardNumber\",\"decrypted\",\"isSpecial\",\"encrypted\",\"isBinary\",\"digit1\",\"digit2\",\"decryptAscii\",\"readNumberArray\",\"readInt\",\"readBoolean\",\"readCharStrings\",\"lenIV\",\"program\",\"blueArray\",\"charString\",\"encodingArg\",\"getSpecialPUASymbols\",\"UnicodeRanges\",\"charsLength\",\"hexStr\",\"nameLen\",\"toUpperCase\",\"WorkerMessageHandler\",\"WorkerTask\",\"_pdf_manager\",\"_is_node\",\"_is_node2\",\"__esModule\",\"default\",\"maybePort\",\"terminated\",\"_capability\",\"finished\",\"finish\",\"PDFWorkerStream\",\"_msgHandler\",\"_contentLength\",\"_fullRequestReader\",\"_rangeRequestReaders\",\"PDFWorkerStreamReader\",\"_isRangeSupported\",\"_isStreamingSupported\",\"readableStream\",\"sendWithStream\",\"_reader\",\"getReader\",\"_headersReady\",\"isRangeSupported\",\"PDFWorkerStreamRangeReader\",\"getFullReader\",\"cancel\",\"headersReady\",\"port\",\"testMessageProcessed\",\"on\",\"supportTransfers\",\"postMessageTransfers\",\"xhr\",\"XMLHttpRequest\",\"responseExists\",\"responseType\",\"supportTypedArray\",\"setVerbosityLevel\",\"verbosity\",\"createDocumentHandler\",\"docParams\",\"cancelXHRs\",\"WorkerTasks\",\"apiVersion\",\"workerHandlerName\",\"MessageHandler\",\"startWorkerTask\",\"finishWorkerTask\",\"loadDocument\",\"loadDocumentCapability\",\"parseSuccess\",\"parseFailure\",\"getPdfManager\",\"pdfManagerCapability\",\"pdfStream\",\"cachedChunks\",\"fullRequest\",\"pdfFile\",\"flushChunks\",\"page\",\"rotatePromise\",\"refPromise\",\"userUnitPromise\",\"viewPromise\",\"results\",\"pageNum\",\"wrappedException\",\"minimumStackMessage\",\"onPull\",\"onCancel\",\"close\",\"waitOn\",\"destroy\",\"onSuccess\",\"doc\",\"pdfInfo\",\"onFailure\",\"pdfManagerReady\",\"MissingPDFException\",\"UnexpectedResponseException\",\"UnknownErrorException\",\"disableCreateObjectURL\",\"newPdfManager\",\"setupDoc\",\"initializeFromPort\",\"window\",\"postMessage\",\"pdfjsCoreWorker\"],\"mappings\":\"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AA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,OACAC,EAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,G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,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,WAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,WAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,WAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,WAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,UAAA,WAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,WAAA,IAAAA,EAAA,WAAA,WAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,WAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,UAAA,WAAA,IAAAA,EAAA,UAAA,WAAA,IAAAA,EAAA,UAAA,YAAA,IAAAA,EAAA,WAAA,WAAA,IAAAA,EAAA,WAAA,YAAA,IAAAA,EAAA,WAAA,YAAA,IA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A,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,QAAA,KAAA,KAAA,OAAA,KAAA,KAAA,KAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,GAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,GAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAA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,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,KACAA,EAAA,QAAA,KACAA,EAAA,QAAA,KACAA,EAAA,QAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA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ACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,KACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,WAAA,IAEApX,EAAAmtD,iBAAAA,EACAntD,EAAA0iE,yBAAAA;;;;;;mGCl7IA5iE,OAAAC,eAAAC,EAAA,aAAA,CACAC,OAAA,IAEAD,EAAA66C,cAAAx6C,EAEA,IAAA+sC,EAA4a,SAAAr3B,EAAAxU,GAA2B,GAAA6F,MAAAC,QAAA0O,GAA0B,OAAAA,EAAc,GAAAs3B,OAAAC,YAAAxtC,OAAAiW,GAA2C,OAAxf,SAAAA,EAAAxU,GAAiC,IAAAgsC,EAAA,GAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAArtC,EAAoB,IAAM,IAAA,IAAAstC,EAAA/Z,EAAA7d,EAAAs3B,OAAAC,cAA0CE,GAAAG,EAAA/Z,EAAApb,QAAAwX,QAA4Cud,EAAA/6B,KAAAm7B,EAAA1tC,QAAqBsB,GAAAgsC,EAAA/rC,SAAAD,GAAlCisC,GAAA,IAAyE,MAAArzB,GAAcszB,GAAA,EAAWC,EAAAvzB,EAAY,QAAU,KAAMqzB,GAAA5Z,EAAA,QAAAA,EAAA,SAA2C,QAAU,GAAA6Z,EAAA,MAAAC,GAAsB,OAAAH,EAA6HK,CAAA73B,EAAAxU,GAAuC,MAAA,IAAAuB,UAAA,yDAEjkBb,EAAYC,uBAAQ,gDAEpBE,EAAkBF,qBAAQ,oDAE1BG,EAAkBH,qBAAQ,oDAE1BK,EAAcL,iBAAQ,gDAEtBs0C,EAAmBt0C,sBAAQ,qDAE3Bm1E,EAAWn1E,cAAQ,6CAEnB24C,EAAA,WACA,SAAAy8B,EAAA7/B,EAAAoE,GACA,OAAAA,GAAAA,EAAArE,UAAAC,GACAoE,EAAAxf,OAAAob,GAEAhuC,QAAAC,QAAA+tC,GAEA,SAAA8/B,EAAAt3E,EAAAu3E,EAAAC,EAAAx3D,GAEA,OADAhgB,EAAAu3E,EAAAv3E,EAAAw3E,GACA,EAAA,EAAAx3E,EAAAggB,EAAAA,EAAAhgB,EAEA,SAAAy3E,EAAApkD,EAAA4F,EAAAW,EAAAC,EAAAC,EAAAC,GACA,IAIAz4B,EACAyU,EACAikB,EAEAC,EARA14B,EAAAu4B,EAAAC,EACA1B,EAAAY,GAAA,EAAA,IAAA1xB,WAAAhG,GAAA03B,GAAA,GAAA,IAAAO,YAAAj4B,GAAA,IAAA2X,YAAA3X,GACAgJ,EAAAqvB,EAAAE,EACAtvB,EAAAqvB,EAAAE,EAIAG,EAAA,EAEAC,EAAA,IAAAX,YAAAM,GACAM,EAAAR,EACA,IAAAt4B,EAAA,EAAeA,EAAAw4B,EAAQx4B,IACvB64B,EAAA74B,GAAAye,KAAA+M,MAAAxrB,EAAAiJ,GAEA,IAAAjJ,EAAA,EAAeA,EAAAy4B,EAAQz4B,IAEvB,IADA04B,EAAAja,KAAA+M,MAAAxrB,EAAAkJ,GAAA4vB,EACArkB,EAAA,EAAiBA,EAAA+jB,EAAQ/jB,IACzBkkB,EAAAD,EAAAG,EAAApkB,GACAsiB,EAAA6B,KAAA7G,EAAA4G,GAGA,OAAA5B,EAEA,SAAAuiB,EAAA72B,GACA,IAAA1gB,EAAA0gB,EAAA1gB,KACAm3B,EAAAzW,EAAAyW,IACAgd,EAAAzzB,EAAAyzB,MACAkgC,EAAA3zD,EAAAs3B,SACAA,OAAAj7C,IAAAs3E,GAAAA,EACAC,EAAA5zD,EAAA01B,MACAA,OAAAr5C,IAAAu3E,EAAA,KAAAA,EACAC,EAAA7zD,EAAAq3B,KACAA,OAAAh7C,IAAAw3E,EAAA,KAAAA,EACAC,EAAA9zD,EAAA+zD,OACAA,OAAA13E,IAAAy3E,GAAAA,EACAp9C,EAAA1W,EAAA0W,mBAEAr3B,KAAAo0C,MAAAA,EACA,IAAA/zC,EAAA+zC,EAAA/zC,KACA,GAAAA,EAAAqE,IAAA,UAAA,CACA,IAAAojC,EAAAznC,EAAAnD,IAAA,UAAA4D,KACA,GAAA,cAAAgnC,EAAA,CACA,IAAA6sC,EAAA,IAAAX,EAAAY,SACAD,EAAAE,qBAAAzgC,EAAAzsC,QACAysC,EAAAzsC,OAAAG,QACAssC,EAAA0gC,iBAAAH,EAAAG,iBACA1gC,EAAAle,SAAAy+C,EAAAI,oBACO,gBAAAjtC,IACPsM,EAAA0gC,iBAAA,EACA1gC,EAAAle,SAAA,GAKA,GAFAl2B,KAAAiI,MAAA5H,EAAAnD,IAAA,QAAA,KACA8C,KAAA21B,OAAAt1B,EAAAnD,IAAA,SAAA,KACA8C,KAAAiI,MAAA,GAAAjI,KAAA21B,OAAA,EACA,MAAA,IAAA/2B,EAAAsf,YAAA,wBAAAle,KAAAiI,MAAA,eAAAjI,KAAA21B,QAEA31B,KAAAouE,YAAA/tE,EAAAnD,IAAA,cAAA,OAAA,EACA8C,KAAAg1E,UAAA30E,EAAAnD,IAAA,YAAA,QAAA,EACA8C,KAAAi1E,MAAA50E,EAAAnD,IAAA,WAAA,EACA,IAAA43E,EAAA1gC,EAAA0gC,iBACA,IAAAA,KACAA,EAAAz0E,EAAAnD,IAAA,mBAAA,QACA,CACA,IAAA8C,KAAAg1E,UAGA,MAAA,IAAAp2E,EAAAsf,YAAA,wCAAAle,KAAAg1E,WAFAF,EAAA,EAOA,GADA90E,KAAA61B,IAAAi/C,GACA90E,KAAAg1E,UAAA,CACA,IAAAzgC,EAAAl0C,EAAAnD,IAAA,aAAA,MACA,IAAAq3C,EAEA,QADA,EAAA31C,EAAA0Y,MAAA,kDACA88B,EAAAle,UACA,KAAA,EACAqe,EAAAx1C,EAAA8oC,KAAA3qC,IAAA,cACA,MACA,KAAA,EACAq3C,EAAAx1C,EAAA8oC,KAAA3qC,IAAA,aACA,MACA,KAAA,EACAq3C,EAAAx1C,EAAA8oC,KAAA3qC,IAAA,cACA,MACA,QACA,MAAA,IAAAkY,MAAA,mBAAApV,KAAAk2B,SAAA,oCAGA,IAAArwB,EAAAoyC,EAAA7gB,EAAA,KACAp3B,KAAAu0C,WAAAv1C,EAAAoF,WAAA0W,MAAAy5B,EAAAt0C,EAAA4F,EAAAwxB,GACAr3B,KAAAk2B,SAAAl2B,KAAAu0C,WAAAre,SAIA,GAFAl2B,KAAAg5B,OAAA34B,EAAAoC,SAAA,SAAA,KACAzC,KAAAk1E,aAAA,EACAl1E,KAAAg5B,SAAAh5B,KAAAu0C,aAAAv0C,KAAAu0C,WAAAxb,gBAAA/4B,KAAAg5B,SAAA07C,IAAA11E,EAAAoF,WAAA20B,gBAAA/4B,KAAAg5B,OAAA,IAAA,CACAh5B,KAAAk1E,aAAA,EACA,IAAAt4D,GAAA,GAAAk4D,GAAA,EACA90E,KAAAm1E,mBAAA,GACAn1E,KAAAo1E,cAAA,GACA,IAAA,IAAAl3E,EAAA,EAAAyU,EAAA,EAA4BzU,EAAA8B,KAAAg5B,OAAA76B,OAAwBD,GAAA,IAAAyU,EAAA,CACpD,IAAAm9D,EAAA9vE,KAAAg5B,OAAA96B,GACA6xE,EAAA/vE,KAAAg5B,OAAA96B,EAAA,GACA8B,KAAAm1E,mBAAAxiE,GAAAo9D,EAAAD,EACA9vE,KAAAo1E,cAAAziE,GAAAiK,EAAAkzD,GAGA,GAAAz5B,EACAr2C,KAAAq2C,MAAA,IAAAmB,EAAA,CACAv3C,KAAAA,EACAm3B,IAAAA,EACAgd,MAAAiC,EACA4B,SAAAA,EACA5gB,mBAAAA,SAEK,GAAA2gB,EAAA,CACL,IAAA,EAAAj5C,EAAAqG,UAAA4yC,GACAA,EAAA33C,KACAnD,IAAA,YAAA,MAIA8C,KAAAg4C,KAAA,IAAAR,EAAA,CACAv3C,KAAAA,EACAm3B,IAAAA,EACAgd,MAAA4D,EACAC,SAAAA,EACAy8B,QAAA,EACAr9C,mBAAAA,KARA,EAAAz4B,EAAA4C,MAAA,oDAYAxB,KAAAg4C,KAAAA,GAkYA,OA9XAR,EAAAe,WAAA,SAAA7L,GACAA,EAAAC,QAAA,IAWA0oC,EACAC,EAXAr1E,EAAAysC,EAAAzsC,KACAm3B,EAAAsV,EAAAtV,IACAgd,EAAA1H,EAAA0H,MACAmhC,EAAA7oC,EAAAuL,SACAA,OAAAj7C,IAAAu4E,GAAAA,EACAC,EAAA9oC,EAAA8L,cACAA,OAAAx7C,IAAAw4E,EAAA,KAAAA,EACAn+C,EAAAqV,EAAArV,mBAEAo+C,EAAAxB,EAAA7/B,EAAAoE,GAGAnC,EAAAjC,EAAA/zC,KAAAnD,IAAA,SACA86C,EAAA5D,EAAA/zC,KAAAnD,IAAA,QAmBA,OAlBAm5C,GACAg/B,EAAApB,EAAA59B,EAAAmC,GACA88B,EAAAlvE,QAAAC,QAAA,QAEAgvE,EAAAjvE,QAAAC,QAAA,MACA2xC,GACA,EAAAj5C,EAAAqG,UAAA4yC,GACAs9B,EAAArB,EAAAj8B,EAAAQ,GACSz0C,MAAAC,QAAAg0C,GACTs9B,EAAAlvE,QAAAC,QAAA2xC,KAEA,EAAAp5C,EAAA4C,MAAA,4BACA8zE,EAAAlvE,QAAAC,QAAA,OAGAivE,EAAAlvE,QAAAC,QAAA,OAGAD,QAAA6mC,IAAA,CAAAwoC,EAAAJ,EAAAC,IAAA1vE,KAAA,SAAAsnC,GACA,IAAAsV,EAAAzY,EAAAmD,EAAA,GACAwoC,EAAAlzB,EAAA,GACAmzB,EAAAnzB,EAAA,GACAozB,EAAApzB,EAAA,GAEA,OAAA,IAAAhL,EAAA,CACAv3C,KAAAA,EACAm3B,IAAAA,EACAgd,MAAAshC,EACAz9B,SAAAA,EACA5B,MAAAs/B,EACA39B,KAAA49B,EACAv+C,mBAAAA,OAIAmgB,EAAAC,WAAA,SAAAlK,GACA,IASA1qC,EAAA3E,EATAq5C,EAAAhK,EAAAgK,SACAtvC,EAAAslC,EAAAtlC,MACA0tB,EAAA4X,EAAA5X,OACA+hB,EAAAnK,EAAAmK,wBACAC,EAAApK,EAAAoK,cAEAk+B,GAAA5tE,EAAA,GAAA,GAAA0tB,EACAk1C,EAAAtzB,EAAAhuB,WAGA,IAAAmuB,GAAAC,KAFAk+B,IAAAhL,GAIK,GAAAlzB,EAML,KAFA90C,EAAA,IAAAsB,WAAA0xE,IACAz0D,IAAAm2B,GACAr5C,EAAA2sE,EAA4B3sE,EAAA23E,EAAoB33E,IAChD2E,EAAA3E,GAAA,SANA2E,EAAA,IAAAsB,WAAA0mE,IACAzpD,IAAAm2B,QAHA10C,EAAA00C,EAWA,GAAAI,EACA,IAAAz5C,EAAA,EAAiBA,EAAA2sE,EAAkB3sE,IACnC2E,EAAA3E,IAAA,IAGA,MAAA,CACA2E,KAAAA,EACAoF,MAAAA,EACA0tB,OAAAA,IAGA6hB,EAAAj6C,UAAA,CACAu4E,gBACA,OAAAn5D,KAAAC,IAAA5c,KAAAiI,MAAAjI,KAAAq2C,OAAAr2C,KAAAq2C,MAAApuC,OAAA,EAAAjI,KAAAg4C,MAAAh4C,KAAAg4C,KAAA/vC,OAAA,IAEA8tE,iBACA,OAAAp5D,KAAAC,IAAA5c,KAAA21B,OAAA31B,KAAAq2C,OAAAr2C,KAAAq2C,MAAA1gB,QAAA,EAAA31B,KAAAg4C,MAAAh4C,KAAAg4C,KAAAriB,QAAA,IAEAqgD,aAAA,SAAA98D,GACA,IAKAhb,EAAAgO,EALA2pB,EAAA71B,KAAA61B,IACAK,EAAAl2B,KAAAk2B,SACAk/C,EAAAp1E,KAAAo1E,cACAD,EAAAn1E,KAAAm1E,mBACAv4D,GAAA,GAAAiZ,GAAA,EAEA,GAAA,IAAAA,EAAA,CAMA,IAAApb,EAAA,EACA,IAAAvc,EAAA,EAAAgO,EAAAlM,KAAAiI,MAAAjI,KAAA21B,OAAgDz3B,EAAAgO,EAAQhO,IACxD,IAAA,IAAAyU,EAAA,EAAuBA,EAAAujB,EAAcvjB,IACrCuG,EAAAuB,GAAAy5D,EAAAh7D,EAAAuB,GAAA26D,EAAAziE,GAAAwiE,EAAAxiE,GAAAiK,GACAnC,SATA,IAAAvc,EAAA,EAAAgO,EAAAgN,EAAA/a,OAAuCD,EAAAgO,EAAQhO,IAC/Cgb,EAAAhb,KAAAgb,EAAAhb,IAYA+3E,cAAA,SAAA/8D,GACA,IAAA2c,EAAA71B,KAAA61B,IACA,GAAA,IAAAA,EACA,OAAA3c,EAEA,IASAhN,EACAgqE,EAVAjuE,EAAAjI,KAAAiI,MACA0tB,EAAA31B,KAAA21B,OACAO,EAAAl2B,KAAAk2B,SACA/3B,EAAA8J,EAAA0tB,EAAAO,EACAigD,EAAA,EACApxD,EAAA8Q,GAAA,EAAA,IAAA1xB,WAAAhG,GAAA03B,GAAA,GAAA,IAAAO,YAAAj4B,GAAA,IAAA2X,YAAA3X,GACAi4E,EAAAnuE,EAAAiuB,EACAtZ,GAAA,GAAAiZ,GAAA,EACA33B,EAAA,EAGA,GAAA,IAAA23B,EAEA,IADA,IAAAmiB,EAAAq+B,EAAAC,EACA3jE,EAAA,EAAuBA,EAAAgjB,EAAYhjB,IAAA,CAGnC,IAFA0jE,EAAAn4E,IAAA,EAAAk4E,GACAE,EAAAp4E,EAAAk4E,EACAl4E,EAAAm4E,GACAH,EAAAh9D,EAAAi9D,KACApxD,EAAA7mB,GAAAg4E,GAAA,EAAA,EACAnxD,EAAA7mB,EAAA,GAAAg4E,GAAA,EAAA,EACAnxD,EAAA7mB,EAAA,GAAAg4E,GAAA,EAAA,EACAnxD,EAAA7mB,EAAA,GAAAg4E,GAAA,EAAA,EACAnxD,EAAA7mB,EAAA,GAAAg4E,GAAA,EAAA,EACAnxD,EAAA7mB,EAAA,GAAAg4E,GAAA,EAAA,EACAnxD,EAAA7mB,EAAA,GAAAg4E,GAAA,EAAA,EACAnxD,EAAA7mB,EAAA,GAAA,EAAAg4E,EACAh4E,GAAA,EAEA,GAAAA,EAAAo4E,EAGA,IAFAJ,EAAAh9D,EAAAi9D,KACAn+B,EAAA,IACA95C,EAAAo4E,GACAvxD,EAAA7mB,SAAAg4E,EAAAl+B,GACAA,IAAA,MAIO,CACP,IAAAnhC,EAAA,EAEA,IADAq/D,EAAA,EACAh4E,EAAA,EAAAgO,EAAA/N,EAAgCD,EAAAgO,IAAQhO,EAAA,CAKxC,IAJAA,EAAAk4E,GAAA,IACAF,EAAA,EACAr/D,EAAA,GAEAA,EAAAgf,GACAqgD,EAAAA,GAAA,EAAAh9D,EAAAi9D,KACAt/D,GAAA,EAEA,IAAA0/D,EAAA1/D,EAAAgf,EACAj5B,EAAAs5E,GAAAK,EACAxxD,EAAA7mB,GAAAtB,EAAA,EAAA,EAAAA,EAAAggB,EAAAA,EAAAhgB,EACAs5E,IAAA,GAAAK,GAAA,EACA1/D,EAAA0/D,GAGA,OAAAxxD,GAEAyxD,YAAA,SAAAC,EAAAxuE,EAAA0tB,EAAAC,EAAAwe,GACA,IAEAsiC,EAAAC,EAAAC,EAAA14E,EAAAgO,EAAAyG,EAFA0jC,EAAAr2C,KAAAq2C,MACA2B,EAAAh4C,KAAAg4C,KAEA,GAAA3B,EACAsgC,EAAAtgC,EAAApuC,MACA2uE,EAAAvgC,EAAA1gB,OACA+gD,EAAA,IAAAvyE,WAAAwyE,EAAAC,GACAvgC,EAAAwgC,eAAAH,GACAC,IAAA1uE,GAAA2uE,IAAAjhD,IACA+gD,EAAArC,EAAAqC,EAAArgC,EAAAxgB,IAAA8gD,EAAAC,EAAA3uE,EAAA0tB,SAEO,GAAAqiB,EACP,GAAAA,aAAAR,EAAA,CAMA,IALAm/B,EAAA3+B,EAAA/vC,MACA2uE,EAAA5+B,EAAAriB,OACA+gD,EAAA,IAAAvyE,WAAAwyE,EAAAC,GACA5+B,EAAA9hB,SAAA,EACA8hB,EAAA6+B,eAAAH,GACAx4E,EAAA,EAAAgO,EAAAyqE,EAAAC,EAAmC14E,EAAAgO,IAAQhO,EAC3Cw4E,EAAAx4E,GAAA,IAAAw4E,EAAAx4E,GAEAy4E,IAAA1uE,GAAA2uE,IAAAjhD,IACA+gD,EAAArC,EAAAqC,EAAA1+B,EAAAniB,IAAA8gD,EAAAC,EAAA3uE,EAAA0tB,QAES,CAAA,IAAA5xB,MAAAC,QAAAg0C,GAiBT,MAAA,IAAAp5C,EAAAsf,YAAA,wBAhBAw4D,EAAA,IAAAvyE,WAAA8D,EAAA0tB,GACA,IAAAO,EAAAl2B,KAAAk2B,SACA,IAAAh4B,EAAA,EAAAgO,EAAAjE,EAAA0tB,EAA0Cz3B,EAAAgO,IAAQhO,EAAA,CAClD,IAAA44E,EAAA,EACAC,EAAA74E,EAAAg4B,EACA,IAAAvjB,EAAA,EAAuBA,EAAAujB,IAAcvjB,EAAA,CACrC,IAAA1P,EAAAmxC,EAAA2iC,EAAApkE,GACAqkE,EAAA,EAAArkE,EACA,GAAA1P,EAAA+0C,EAAAg/B,IAAA/zE,EAAA+0C,EAAAg/B,EAAA,GAAA,CACAF,EAAA,IACA,OAGAJ,EAAAx4E,GAAA44E,GAMA,GAAAJ,EACA,IAAAx4E,EAAA,EAAAyU,EAAA,EAAAzG,EAAAjE,EAAA2tB,EAAqD13B,EAAAgO,IAAQhO,EAAAyU,GAAA,EAC7D8jE,EAAA9jE,GAAA+jE,EAAAx4E,QAGA,IAAAA,EAAA,EAAAyU,EAAA,EAAAzG,EAAAjE,EAAA2tB,EAAqD13B,EAAAgO,IAAQhO,EAAAyU,GAAA,EAC7D8jE,EAAA9jE,GAAA,KAIAskE,aAAA,SAAA/9D,EAAAjR,EAAA0tB,GACA,IAAAs/C,EAAAj1E,KAAAq2C,OAAAr2C,KAAAq2C,MAAA4+B,MACA,GAAAA,EASA,IANA,IAKA/6C,EAAAC,EAAAzb,EALAw4D,EAAAl3E,KAAAu0C,WAAAxf,OAAAkgD,EAAA,GACAkC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA/4E,EAAA8J,EAAA0tB,EAAA,EAEAz3B,EAAA,EAAqBA,EAAAC,EAAYD,GAAA,EAAA,CACjC,IAAAo5E,EAAAp+D,EAAAhb,EAAA,GACA,GAAA,IAAAo5E,EAAA,CAMA,IAAAtvD,EAAA,IAAAsvD,EACAp9C,GAAAhhB,EAAAhb,GAAAi5E,GAAAnvD,EAAAmvD,EACAh9C,GAAAjhB,EAAAhb,EAAA,GAAAk5E,GAAApvD,EAAAovD,EACA14D,GAAAxF,EAAAhb,EAAA,GAAAm5E,GAAArvD,EAAAqvD,EACAn+D,EAAAhb,GAAAg8B,GAAA,EAAA,EAAAA,GAAA,IAAA,IAAA,EAAAA,EACAhhB,EAAAhb,EAAA,GAAAi8B,GAAA,EAAA,EAAAA,GAAA,IAAA,IAAA,EAAAA,EACAjhB,EAAAhb,EAAA,GAAAwgB,GAAA,EAAA,EAAAA,GAAA,IAAA,IAAA,EAAAA,OAXAxF,EAAAhb,GAAA,IACAgb,EAAAhb,EAAA,GAAA,IACAgb,EAAAhb,EAAA,GAAA,MAYAg6C,gBAAA,WACA,IAaAX,EAbAggC,EAAAriE,UAAA/W,OAAA,QAAAnB,IAAAkY,UAAA,IAAAA,UAAA,GAEA4gE,EAAA91E,KAAA81E,UACAC,EAAA/1E,KAAA+1E,WACA1+B,EAAA,CACApvC,MAAA6tE,EACAngD,OAAAogD,GAEA7/C,EAAAl2B,KAAAk2B,SACAT,EAAAz1B,KAAAiI,MACAytB,EAAA11B,KAAA21B,OACAE,EAAA71B,KAAA61B,IACA2hD,EAAA/hD,EAAAS,EAAAL,EAAA,GAAA,EAEA,IAAA0hD,EAAA,CACA,IAAAE,EAMA,GALA,eAAAz3E,KAAAu0C,WAAAzzC,MAAA,IAAA+0B,EACA4hD,EAAA74E,EAAA84E,UAAAC,eACS,cAAA33E,KAAAu0C,WAAAzzC,MAAA,IAAA+0B,GAAA71B,KAAAk1E,cACTuC,EAAA74E,EAAA84E,UAAAE,WAEAH,IAAAz3E,KAAAq2C,QAAAr2C,KAAAg4C,MAAA89B,IAAArgD,GAAAsgD,IAAArgD,EAAA,CAGA,GAFA2hB,EAAAogC,KAAAA,EACAlgC,EAAAv3C,KAAA63E,cAAAniD,EAAA8hD,GACAx3E,KAAAo0C,iBAAAl1C,EAAA4Z,aACAu+B,EAAAx0C,KAAA00C,MACW,CACX,IAAAugC,EAAA,IAAA3zE,WAAAozC,EAAAp5C,QACA25E,EAAA12D,IAAAm2B,GACAF,EAAAx0C,KAAAi1E,EAEA,GAAA93E,KAAAk1E,YAAA,EACA,EAAAt2E,EAAAw+C,QAAAq6B,IAAA74E,EAAA84E,UAAAC,gBAEA,IADA,IAAAz+D,EAAAm+B,EAAAx0C,KACA3E,EAAA,EAAAgO,EAAAgN,EAAA/a,OAA+CD,EAAAgO,EAAQhO,IACvDgb,EAAAhb,IAAA,IAGA,OAAAm5C,EAEA,GAAAr3C,KAAAo0C,iBAAAjB,EAAAkB,aAAAr0C,KAAAq2C,QAAAr2C,KAAAg4C,KAAA,CACA,IAAA+/B,EAAAriD,EAAA8hD,EACA,OAAAx3E,KAAAu0C,WAAAzzC,MACA,IAAA,aACAi3E,GAAA,EACA,IAAA,YACA,IAAA,aAGA,OAFA1gC,EAAAogC,KAAA74E,EAAA84E,UAAAE,UACAvgC,EAAAx0C,KAAA7C,KAAA63E,cAAAE,EAAAjC,EAAAC,GAAA,GACA1+B,IAKA,IAEAjiB,EAAA4iD,EAFApiD,EAAA,GADA2hB,EAAAv3C,KAAA63E,cAAAniD,EAAA8hD,IACAr5E,OAAAq5E,EAAAzB,EAAArgD,EACAI,EAAA91B,KAAAi2E,cAAA1+B,GAqBA,OAnBAggC,GAAAv3E,KAAAq2C,OAAAr2C,KAAAg4C,MAMAX,EAAAogC,KAAA74E,EAAA84E,UAAAO,WACA5gC,EAAAx0C,KAAA,IAAAsB,WAAA2xE,EAAAC,EAAA,GACA3gD,EAAA,EACA4iD,GAAA,EACAh4E,KAAAw2E,YAAAn/B,EAAAx0C,KAAAizE,EAAAC,EAAAngD,EAAAE,KATAuhB,EAAAogC,KAAA74E,EAAA84E,UAAAE,UACAvgC,EAAAx0C,KAAA,IAAAsB,WAAA2xE,EAAAC,EAAA,GACA3gD,EAAA,EACA4iD,GAAA,GAQAh4E,KAAAk1E,aACAl1E,KAAAg2E,aAAAlgD,GAEA91B,KAAAu0C,WAAA/e,QAAA6hB,EAAAx0C,KAAA4yB,EAAAC,EAAAogD,EAAAC,EAAAngD,EAAAC,EAAAC,EAAAV,GACA4iD,GACAh4E,KAAAi3E,aAAA5/B,EAAAx0C,KAAAizE,EAAAlgD,GAEAyhB,GAEAw/B,eAAA,SAAA39D,GACA,IAAAgd,EAAAl2B,KAAAk2B,SACA,GAAA,IAAAA,EACA,MAAA,IAAAt3B,EAAAsf,YAAA,0CAAAgY,GAEA,IAMAh4B,EAAAC,EANA8J,EAAAjI,KAAAiI,MACA0tB,EAAA31B,KAAA21B,OACAE,EAAA71B,KAAA61B,IACA2hD,EAAAvvE,EAAAiuB,EAAAL,EAAA,GAAA,EACA0hB,EAAAv3C,KAAA63E,cAAAliD,EAAA6hD,GACA1hD,EAAA91B,KAAAi2E,cAAA1+B,GAEA,GAAA,IAAA1hB,EAAA,CAaA71B,KAAAk1E,aACAl1E,KAAAg2E,aAAAlgD,GAEA33B,EAAA8J,EAAA0tB,EACA,IAAA6D,EAAA,MAAA,GAAA3D,GAAA,GACA,IAAA33B,EAAA,EAAiBA,EAAAC,IAAYD,EAC7Bgb,EAAAhb,GAAAs7B,EAAA1D,EAAA53B,GAAA,OAjBA,GADAC,EAAA8J,EAAA0tB,EACA31B,KAAAk1E,YACA,IAAAh3E,EAAA,EAAqBA,EAAAC,IAAYD,EACjCgb,EAAAhb,GAAA43B,EAAA53B,GAAA,EAAA,SAGA,IAAAA,EAAA,EAAqBA,EAAAC,IAAYD,EACjCgb,EAAAhb,GAAA,KAAA43B,EAAA53B,IAcA25E,cAAA,SAAA15E,EAAA23E,EAAAC,GACA,IAAAmC,EAAAhjE,UAAA/W,OAAA,QAAAnB,IAAAkY,UAAA,IAAAA,UAAA,GAMA,OAJAlV,KAAAo0C,MAAAtsC,QACA9H,KAAAo0C,MAAA0hC,UAAAA,GAAA91E,KAAAiI,MACAjI,KAAAo0C,MAAA2hC,WAAAA,GAAA/1E,KAAA21B,OACA31B,KAAAo0C,MAAA8jC,WAAAA,EACAl4E,KAAAo0C,MAAAv5B,SAAA1c,KAGAq5C,EAnhBA,GAqhBA76C,EAAA66C,SAAAA;;;;;;mGCxiBA/6C,OAAAC,eAAAC,EAAA,aAAA,CACAC,OAAA,IAEAD,EAAAw7E,gBAAAn7E,EAEA,IAAA4B,EAAYC,uBAAQ,gDAEpBu5E,EAA0Bv5E,6BAAQ,4DAElCsZ,EAAatZ,gBAAQ,+CAErBw5E,EAAA,WACA,SAAAA,EAAAC,GACAt4E,KAAAy0C,QAAA,gBAAA6jC,EAKA,OAHAD,EAAA96E,UAAA,IAAA6X,MACAijE,EAAA96E,UAAAuD,KAAA,aACAu3E,EAAA14E,YAAA04E,EACAA,EAPA,GASAF,EAAA,WACA,SAAAI,KASA,SAAAC,EAAA31E,EAAAsO,EAAAC,GACApR,KAAA6C,KAAAA,EACA7C,KAAAmR,MAAAA,EACAnR,KAAAoR,IAAAA,EAYA,SAAAqnE,EAAAC,EAAAC,EAAAC,GACA,IAAA/mE,EAAA6mE,EAAAG,YAAAF,GACA5pB,EAAA,EACA,SAAA+pB,EAAA36E,GAEA,IADA,IAAAulC,EAAA,EACAxlC,EAAA,EAAqBA,EAAAC,EAAYD,IAAA,CACjC,IAAA66E,EAAAH,EAAAhnE,QAAAC,EAAAk9C,GACAA,EAAAA,EAAA,IAAAA,GAAA,EAAAgqB,EAAA,KAAAhqB,GAAA,EAAAgqB,GAAA,IACAr1C,EAAAA,GAAA,EAAAq1C,EAEA,OAAAr1C,IAAA,EAEA,IAAAtR,EAAA0mD,EAAA,GACAl8E,EAAAk8E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAA,KAAAA,EAAA,IAAA,IAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,EAAAA,EAAA,GACA,OAAA,IAAA1mD,EAAAx1B,EAAAA,EAAA,GAAAA,EAAA,KAEA,SAAAo8E,EAAAN,EAAAE,EAAAK,GAGA,IAFA,IAAApnE,EAAA6mE,EAAAG,YAAA,QACA9pB,EAAA,EACA7wD,EAAA,EAAmBA,EAAA+6E,EAAgB/6E,IAAA,CAEnC6wD,EAAAA,GAAA,EADA6pB,EAAAhnE,QAAAC,EAAAk9C,GAGA,OAAAkqB,EAAA,GACAlqB,GAAA,GAAAkqB,GAAA,EAEA,WAAAlqB,EAjDAwpB,EAAAh7E,UAAA,CACAs7E,YAAA,SAAAr4E,GACA,OAAAA,KAAAR,KACAA,KAAAQ,GAEAR,KAAAQ,GAAA,IAAA04E,UAAA,SAQAV,EAAAj7E,UAAA,CACAq7E,cACA,IAAAA,EAAA,IAAAR,EAAAvnE,kBAAA7Q,KAAA6C,KAAA7C,KAAAmR,MAAAnR,KAAAoR,KACA,OAAA,EAAAxS,EAAAq6B,QAAAj5B,KAAA,UAAA44E,IAEAF,mBACA,IAAAlI,EAAA,IAAA+H,EACA,OAAA,EAAA35E,EAAAq6B,QAAAj5B,KAAA,eAAAwwE,KA+BA,IAAA2I,EAAA,CAAA,mBAAA,KAAA,KAAA,KAAA,yBAAA,KAAA,sBAAA,8BAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,oBAAA,KAAA,KAAA,KAAA,6BAAA,KAAA,0BAAA,kCAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,4BAAA,KAAA,yBAAA,iCAAA,sCAAA,KAAA,mCAAA,2CAAA,KAAA,KAAA,KAAA,KAAA,kBAAA,YAAA,cAAA,YAAA,WAAA,SAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,aACAC,EAAA,CAAA,CAAA,CACAhqE,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,IACG,CAAA,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,IACG,CAAA,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,IACG,CAAA,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,C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AAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,KAAA,CAAA,KAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MACA,KAAA,GACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,GAAA,IAAA,CAAA,KAAA,EAAA,GAAA,KAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MACA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,MACA,MACA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,GAAA,MACA,MACA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,MACA,MACA,KAAA,GACAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IACA,MACA,KAAA,GACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,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EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,GAAA,IACAA,EAAA,GAAA,IACAA,EAAA,GAAA,IACAA,EAAA,GAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,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CAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,IACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,MACAA,EAAA,MAAA,MACAA,EAAA,MAAA,MACAA,EAAA,MAAA,MACAA,EAAA,MAAA,MACAA,EAAA,MAAA,MACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,KACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,IACAA,EAAA,MAAA,KA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,IAAA,KACC,CACDkY,MAAA,IACAlY,IAAA,KACC,CACDkY,MAAA,IACAlY,IAAA,KACC,CACDkY,MAAA,IACAlY,IAAA,KACC,CACDkY,MAAA,IACAlY,IAAA,MACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,OACAlY,IAAA,QACC,CACDkY,MAAA,OACAlY,IAAA,QACC,CACDkY,MAAA,QACAlY,IAAA,SACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,OACAlY,IAAA,QACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,OACAlY,IAAA,QACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,OACAlY,IAAA,QACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,KACAlY,IAAA,MACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,KACAlY,IAAA,OACC,CACDkY,MAAA,MACAlY,IAAA,OACC,CACDkY,MAAA,OACAlY,IAAA,SAsBA,IAAAu0C,EAAA4J,EAAA,SAAAxaApX,EAAA8sE,wBAzxDA,SAAA3xD,GACA,OAAAA,GAAA,OAAAA,GAAA,MACA,EACGA,GAAA,OAAAA,GAAA,MACHq1G,IAAAr1G,IAAAA,EACG,MA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\",\"sourcesContent\":[\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _util = require('../shared/util');\\n\\nvar _obj = require('./obj');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _colorspace = require('./colorspace');\\n\\nvar _operator_list = require('./operator_list');\\n\\nvar _stream = require('./stream');\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar AnnotationFactory = function () {\\n  function AnnotationFactory() {\\n    _classCallCheck(this, AnnotationFactory);\\n  }\\n\\n  _createClass(AnnotationFactory, null, [{\\n    key: 'create',\\n    value: function create(xref, ref, pdfManager, idFactory) {\\n      var dict = xref.fetchIfRef(ref);\\n      if (!(0, _primitives.isDict)(dict)) {\\n        return;\\n      }\\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\\n      var subtype = dict.get('Subtype');\\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\\n      var parameters = {\\n        xref: xref,\\n        dict: dict,\\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\\n        subtype: subtype,\\n        id: id,\\n        pdfManager: pdfManager\\n      };\\n      switch (subtype) {\\n        case 'Link':\\n          return new LinkAnnotation(parameters);\\n        case 'Text':\\n          return new TextAnnotation(parameters);\\n        case 'Widget':\\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\n          switch (fieldType) {\\n            case 'Tx':\\n              return new TextWidgetAnnotation(parameters);\\n            case 'Btn':\\n              return new ButtonWidgetAnnotation(parameters);\\n            case 'Ch':\\n              return new ChoiceWidgetAnnotation(parameters);\\n          }\\n          (0, _util.warn)('Unimplemented widget field type \\\"' + fieldType + '\\\", ' + 'falling back to base field type.');\\n          return new WidgetAnnotation(parameters);\\n        case 'Popup':\\n          return new PopupAnnotation(parameters);\\n        case 'Line':\\n          return new LineAnnotation(parameters);\\n        case 'Square':\\n          return new SquareAnnotation(parameters);\\n        case 'Circle':\\n          return new CircleAnnotation(parameters);\\n        case 'PolyLine':\\n          return new PolylineAnnotation(parameters);\\n        case 'Polygon':\\n          return new PolygonAnnotation(parameters);\\n        case 'Highlight':\\n          return new HighlightAnnotation(parameters);\\n        case 'Underline':\\n          return new UnderlineAnnotation(parameters);\\n        case 'Squiggly':\\n          return new SquigglyAnnotation(parameters);\\n        case 'StrikeOut':\\n          return new StrikeOutAnnotation(parameters);\\n        case 'Stamp':\\n          return new StampAnnotation(parameters);\\n        case 'FileAttachment':\\n          return new FileAttachmentAnnotation(parameters);\\n        default:\\n          if (!subtype) {\\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\\n          } else {\\n            (0, _util.warn)('Unimplemented annotation type \\\"' + subtype + '\\\", ' + 'falling back to base annotation.');\\n          }\\n          return new Annotation(parameters);\\n      }\\n    }\\n  }]);\\n\\n  return AnnotationFactory;\\n}();\\n\\nfunction getTransformMatrix(rect, bbox, matrix) {\\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\\n  var minX = bounds[0];\\n  var minY = bounds[1];\\n  var maxX = bounds[2];\\n  var maxY = bounds[3];\\n  if (minX === maxX || minY === maxY) {\\n    return [1, 0, 0, 1, rect[0], rect[1]];\\n  }\\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\\n}\\n\\nvar Annotation = function () {\\n  function Annotation(params) {\\n    _classCallCheck(this, Annotation);\\n\\n    var dict = params.dict;\\n    this.setFlags(dict.get('F'));\\n    this.setRectangle(dict.getArray('Rect'));\\n    this.setColor(dict.getArray('C'));\\n    this.setBorderStyle(dict);\\n    this.setAppearance(dict);\\n    this.data = {\\n      annotationFlags: this.flags,\\n      borderStyle: this.borderStyle,\\n      color: this.color,\\n      hasAppearance: !!this.appearance,\\n      id: params.id,\\n      rect: this.rectangle,\\n      subtype: params.subtype\\n    };\\n  }\\n\\n  _createClass(Annotation, [{\\n    key: '_hasFlag',\\n    value: function _hasFlag(flags, flag) {\\n      return !!(flags & flag);\\n    }\\n  }, {\\n    key: '_isViewable',\\n    value: function _isViewable(flags) {\\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\\n    }\\n  }, {\\n    key: '_isPrintable',\\n    value: function _isPrintable(flags) {\\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\\n    }\\n  }, {\\n    key: 'setFlags',\\n    value: function setFlags(flags) {\\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\\n    }\\n  }, {\\n    key: 'hasFlag',\\n    value: function hasFlag(flag) {\\n      return this._hasFlag(this.flags, flag);\\n    }\\n  }, {\\n    key: 'setRectangle',\\n    value: function setRectangle(rectangle) {\\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\\n        this.rectangle = _util.Util.normalizeRect(rectangle);\\n      } else {\\n        this.rectangle = [0, 0, 0, 0];\\n      }\\n    }\\n  }, {\\n    key: 'setColor',\\n    value: function setColor(color) {\\n      var rgbColor = new Uint8Array(3);\\n      if (!Array.isArray(color)) {\\n        this.color = rgbColor;\\n        return;\\n      }\\n      switch (color.length) {\\n        case 0:\\n          this.color = null;\\n          break;\\n        case 1:\\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\\n          this.color = rgbColor;\\n          break;\\n        case 3:\\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\\n          this.color = rgbColor;\\n          break;\\n        case 4:\\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\\n          this.color = rgbColor;\\n          break;\\n        default:\\n          this.color = rgbColor;\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'setBorderStyle',\\n    value: function setBorderStyle(borderStyle) {\\n      this.borderStyle = new AnnotationBorderStyle();\\n      if (!(0, _primitives.isDict)(borderStyle)) {\\n        return;\\n      }\\n      if (borderStyle.has('BS')) {\\n        var dict = borderStyle.get('BS');\\n        var dictType = dict.get('Type');\\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\\n          this.borderStyle.setWidth(dict.get('W'));\\n          this.borderStyle.setStyle(dict.get('S'));\\n          this.borderStyle.setDashArray(dict.getArray('D'));\\n        }\\n      } else if (borderStyle.has('Border')) {\\n        var array = borderStyle.getArray('Border');\\n        if (Array.isArray(array) && array.length >= 3) {\\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\\n          this.borderStyle.setVerticalCornerRadius(array[1]);\\n          this.borderStyle.setWidth(array[2]);\\n          if (array.length === 4) {\\n            this.borderStyle.setDashArray(array[3]);\\n          }\\n        }\\n      } else {\\n        this.borderStyle.setWidth(0);\\n      }\\n    }\\n  }, {\\n    key: 'setAppearance',\\n    value: function setAppearance(dict) {\\n      this.appearance = null;\\n      var appearanceStates = dict.get('AP');\\n      if (!(0, _primitives.isDict)(appearanceStates)) {\\n        return;\\n      }\\n      var normalAppearanceState = appearanceStates.get('N');\\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\\n        this.appearance = normalAppearanceState;\\n        return;\\n      }\\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\\n        return;\\n      }\\n      var as = dict.get('AS');\\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\\n        return;\\n      }\\n      this.appearance = normalAppearanceState.get(as.name);\\n    }\\n  }, {\\n    key: '_preparePopup',\\n    value: function _preparePopup(dict) {\\n      if (!dict.has('C')) {\\n        this.data.color = null;\\n      }\\n      this.data.hasPopup = dict.has('Popup');\\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\\n    }\\n  }, {\\n    key: 'loadResources',\\n    value: function loadResources(keys) {\\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\\n        if (!resources) {\\n          return;\\n        }\\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\\n        return objectLoader.load().then(function () {\\n          return resources;\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'getOperatorList',\\n    value: function getOperatorList(evaluator, task, renderForms) {\\n      var _this = this;\\n\\n      if (!this.appearance) {\\n        return Promise.resolve(new _operator_list.OperatorList());\\n      }\\n      var data = this.data;\\n      var appearanceDict = this.appearance.dict;\\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\\n      return resourcesPromise.then(function (resources) {\\n        var opList = new _operator_list.OperatorList();\\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\\n        return evaluator.getOperatorList({\\n          stream: _this.appearance,\\n          task: task,\\n          resources: resources,\\n          operatorList: opList\\n        }).then(function () {\\n          opList.addOp(_util.OPS.endAnnotation, []);\\n          _this.appearance.reset();\\n          return opList;\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'viewable',\\n    get: function get() {\\n      if (this.flags === 0) {\\n        return true;\\n      }\\n      return this._isViewable(this.flags);\\n    }\\n  }, {\\n    key: 'printable',\\n    get: function get() {\\n      if (this.flags === 0) {\\n        return false;\\n      }\\n      return this._isPrintable(this.flags);\\n    }\\n  }]);\\n\\n  return Annotation;\\n}();\\n\\nvar AnnotationBorderStyle = function () {\\n  function AnnotationBorderStyle() {\\n    _classCallCheck(this, AnnotationBorderStyle);\\n\\n    this.width = 1;\\n    this.style = _util.AnnotationBorderStyleType.SOLID;\\n    this.dashArray = [3];\\n    this.horizontalCornerRadius = 0;\\n    this.verticalCornerRadius = 0;\\n  }\\n\\n  _createClass(AnnotationBorderStyle, [{\\n    key: 'setWidth',\\n    value: function setWidth(width) {\\n      if (Number.isInteger(width)) {\\n        this.width = width;\\n      }\\n    }\\n  }, {\\n    key: 'setStyle',\\n    value: function setStyle(style) {\\n      if (!style) {\\n        return;\\n      }\\n      switch (style.name) {\\n        case 'S':\\n          this.style = _util.AnnotationBorderStyleType.SOLID;\\n          break;\\n        case 'D':\\n          this.style = _util.AnnotationBorderStyleType.DASHED;\\n          break;\\n        case 'B':\\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\\n          break;\\n        case 'I':\\n          this.style = _util.AnnotationBorderStyleType.INSET;\\n          break;\\n        case 'U':\\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\\n          break;\\n        default:\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'setDashArray',\\n    value: function setDashArray(dashArray) {\\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\\n        var isValid = true;\\n        var allZeros = true;\\n        for (var i = 0, len = dashArray.length; i < len; i++) {\\n          var element = dashArray[i];\\n          var validNumber = +element >= 0;\\n          if (!validNumber) {\\n            isValid = false;\\n            break;\\n          } else if (element > 0) {\\n            allZeros = false;\\n          }\\n        }\\n        if (isValid && !allZeros) {\\n          this.dashArray = dashArray;\\n        } else {\\n          this.width = 0;\\n        }\\n      } else if (dashArray) {\\n        this.width = 0;\\n      }\\n    }\\n  }, {\\n    key: 'setHorizontalCornerRadius',\\n    value: function setHorizontalCornerRadius(radius) {\\n      if (Number.isInteger(radius)) {\\n        this.horizontalCornerRadius = radius;\\n      }\\n    }\\n  }, {\\n    key: 'setVerticalCornerRadius',\\n    value: function setVerticalCornerRadius(radius) {\\n      if (Number.isInteger(radius)) {\\n        this.verticalCornerRadius = radius;\\n      }\\n    }\\n  }]);\\n\\n  return AnnotationBorderStyle;\\n}();\\n\\nvar WidgetAnnotation = function (_Annotation) {\\n  _inherits(WidgetAnnotation, _Annotation);\\n\\n  function WidgetAnnotation(params) {\\n    _classCallCheck(this, WidgetAnnotation);\\n\\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\\n\\n    var dict = params.dict;\\n    var data = _this2.data;\\n    data.annotationType = _util.AnnotationType.WIDGET;\\n    data.fieldName = _this2._constructFieldName(dict);\\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\\n      data.fieldFlags = 0;\\n    }\\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\\n    if (data.fieldType === 'Sig') {\\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\\n    }\\n    return _this2;\\n  }\\n\\n  _createClass(WidgetAnnotation, [{\\n    key: '_constructFieldName',\\n    value: function _constructFieldName(dict) {\\n      if (!dict.has('T') && !dict.has('Parent')) {\\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\\n        return '';\\n      }\\n      if (!dict.has('Parent')) {\\n        return (0, _util.stringToPDFString)(dict.get('T'));\\n      }\\n      var fieldName = [];\\n      if (dict.has('T')) {\\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\\n      }\\n      var loopDict = dict;\\n      while (loopDict.has('Parent')) {\\n        loopDict = loopDict.get('Parent');\\n        if (!(0, _primitives.isDict)(loopDict)) {\\n          break;\\n        }\\n        if (loopDict.has('T')) {\\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\\n        }\\n      }\\n      return fieldName.join('.');\\n    }\\n  }, {\\n    key: 'hasFieldFlag',\\n    value: function hasFieldFlag(flag) {\\n      return !!(this.data.fieldFlags & flag);\\n    }\\n  }, {\\n    key: 'getOperatorList',\\n    value: function getOperatorList(evaluator, task, renderForms) {\\n      if (renderForms) {\\n        return Promise.resolve(new _operator_list.OperatorList());\\n      }\\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\\n    }\\n  }]);\\n\\n  return WidgetAnnotation;\\n}(Annotation);\\n\\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\\n\\n  function TextWidgetAnnotation(params) {\\n    _classCallCheck(this, TextWidgetAnnotation);\\n\\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\\n\\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\\n      alignment = null;\\n    }\\n    _this3.data.textAlignment = alignment;\\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\\n      maximumLength = null;\\n    }\\n    _this3.data.maxLen = maximumLength;\\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\\n    return _this3;\\n  }\\n\\n  _createClass(TextWidgetAnnotation, [{\\n    key: 'getOperatorList',\\n    value: function getOperatorList(evaluator, task, renderForms) {\\n      if (renderForms || this.appearance) {\\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\\n      }\\n      var operatorList = new _operator_list.OperatorList();\\n      if (!this.data.defaultAppearance) {\\n        return Promise.resolve(operatorList);\\n      }\\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\\n      return evaluator.getOperatorList({\\n        stream: stream,\\n        task: task,\\n        resources: this.fieldResources,\\n        operatorList: operatorList\\n      }).then(function () {\\n        return operatorList;\\n      });\\n    }\\n  }]);\\n\\n  return TextWidgetAnnotation;\\n}(WidgetAnnotation);\\n\\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\\n\\n  function ButtonWidgetAnnotation(params) {\\n    _classCallCheck(this, ButtonWidgetAnnotation);\\n\\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\\n\\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n    if (_this4.data.checkBox) {\\n      _this4._processCheckBox();\\n    } else if (_this4.data.radioButton) {\\n      _this4._processRadioButton(params);\\n    } else if (_this4.data.pushButton) {\\n      _this4._processPushButton(params);\\n    } else {\\n      (0, _util.warn)('Invalid field flags for button widget annotation');\\n    }\\n    return _this4;\\n  }\\n\\n  _createClass(ButtonWidgetAnnotation, [{\\n    key: '_processCheckBox',\\n    value: function _processCheckBox() {\\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\\n        return;\\n      }\\n      this.data.fieldValue = this.data.fieldValue.name;\\n    }\\n  }, {\\n    key: '_processRadioButton',\\n    value: function _processRadioButton(params) {\\n      this.data.fieldValue = this.data.buttonValue = null;\\n      var fieldParent = params.dict.get('Parent');\\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\\n        var fieldParentValue = fieldParent.get('V');\\n        if ((0, _primitives.isName)(fieldParentValue)) {\\n          this.data.fieldValue = fieldParentValue.name;\\n        }\\n      }\\n      var appearanceStates = params.dict.get('AP');\\n      if (!(0, _primitives.isDict)(appearanceStates)) {\\n        return;\\n      }\\n      var normalAppearanceState = appearanceStates.get('N');\\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\\n        return;\\n      }\\n      var keys = normalAppearanceState.getKeys();\\n      for (var i = 0, ii = keys.length; i < ii; i++) {\\n        if (keys[i] !== 'Off') {\\n          this.data.buttonValue = keys[i];\\n          break;\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_processPushButton',\\n    value: function _processPushButton(params) {\\n      if (!params.dict.has('A')) {\\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\\n        return;\\n      }\\n      _obj.Catalog.parseDestDictionary({\\n        destDict: params.dict,\\n        resultObj: this.data,\\n        docBaseUrl: params.pdfManager.docBaseUrl\\n      });\\n    }\\n  }]);\\n\\n  return ButtonWidgetAnnotation;\\n}(WidgetAnnotation);\\n\\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\\n\\n  function ChoiceWidgetAnnotation(params) {\\n    _classCallCheck(this, ChoiceWidgetAnnotation);\\n\\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\\n\\n    _this5.data.options = [];\\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\\n    if (Array.isArray(options)) {\\n      var xref = params.xref;\\n      for (var i = 0, ii = options.length; i < ii; i++) {\\n        var option = xref.fetchIfRef(options[i]);\\n        var isOptionArray = Array.isArray(option);\\n        _this5.data.options[i] = {\\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\\n        };\\n      }\\n    }\\n    if (!Array.isArray(_this5.data.fieldValue)) {\\n      _this5.data.fieldValue = [_this5.data.fieldValue];\\n    }\\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\\n    return _this5;\\n  }\\n\\n  return ChoiceWidgetAnnotation;\\n}(WidgetAnnotation);\\n\\nvar TextAnnotation = function (_Annotation2) {\\n  _inherits(TextAnnotation, _Annotation2);\\n\\n  function TextAnnotation(parameters) {\\n    _classCallCheck(this, TextAnnotation);\\n\\n    var DEFAULT_ICON_SIZE = 22;\\n\\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\\n\\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\\n    if (_this6.data.hasAppearance) {\\n      _this6.data.name = 'NoIcon';\\n    } else {\\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\\n    }\\n    _this6._preparePopup(parameters.dict);\\n    return _this6;\\n  }\\n\\n  return TextAnnotation;\\n}(Annotation);\\n\\nvar LinkAnnotation = function (_Annotation3) {\\n  _inherits(LinkAnnotation, _Annotation3);\\n\\n  function LinkAnnotation(params) {\\n    _classCallCheck(this, LinkAnnotation);\\n\\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\\n\\n    _this7.data.annotationType = _util.AnnotationType.LINK;\\n    _obj.Catalog.parseDestDictionary({\\n      destDict: params.dict,\\n      resultObj: _this7.data,\\n      docBaseUrl: params.pdfManager.docBaseUrl\\n    });\\n    return _this7;\\n  }\\n\\n  return LinkAnnotation;\\n}(Annotation);\\n\\nvar PopupAnnotation = function (_Annotation4) {\\n  _inherits(PopupAnnotation, _Annotation4);\\n\\n  function PopupAnnotation(parameters) {\\n    _classCallCheck(this, PopupAnnotation);\\n\\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\\n\\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\\n    var dict = parameters.dict;\\n    var parentItem = dict.get('Parent');\\n    if (!parentItem) {\\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\\n      return _possibleConstructorReturn(_this8);\\n    }\\n    var parentSubtype = parentItem.get('Subtype');\\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\\n    _this8.data.parentId = dict.getRaw('Parent').toString();\\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\\n    if (!parentItem.has('C')) {\\n      _this8.data.color = null;\\n    } else {\\n      _this8.setColor(parentItem.getArray('C'));\\n      _this8.data.color = _this8.color;\\n    }\\n    if (!_this8.viewable) {\\n      var parentFlags = parentItem.get('F');\\n      if (_this8._isViewable(parentFlags)) {\\n        _this8.setFlags(parentFlags);\\n      }\\n    }\\n    return _this8;\\n  }\\n\\n  return PopupAnnotation;\\n}(Annotation);\\n\\nvar LineAnnotation = function (_Annotation5) {\\n  _inherits(LineAnnotation, _Annotation5);\\n\\n  function LineAnnotation(parameters) {\\n    _classCallCheck(this, LineAnnotation);\\n\\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\\n\\n    _this9.data.annotationType = _util.AnnotationType.LINE;\\n    var dict = parameters.dict;\\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\\n    _this9._preparePopup(dict);\\n    return _this9;\\n  }\\n\\n  return LineAnnotation;\\n}(Annotation);\\n\\nvar SquareAnnotation = function (_Annotation6) {\\n  _inherits(SquareAnnotation, _Annotation6);\\n\\n  function SquareAnnotation(parameters) {\\n    _classCallCheck(this, SquareAnnotation);\\n\\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\\n\\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\\n    _this10._preparePopup(parameters.dict);\\n    return _this10;\\n  }\\n\\n  return SquareAnnotation;\\n}(Annotation);\\n\\nvar CircleAnnotation = function (_Annotation7) {\\n  _inherits(CircleAnnotation, _Annotation7);\\n\\n  function CircleAnnotation(parameters) {\\n    _classCallCheck(this, CircleAnnotation);\\n\\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\\n\\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\\n    _this11._preparePopup(parameters.dict);\\n    return _this11;\\n  }\\n\\n  return CircleAnnotation;\\n}(Annotation);\\n\\nvar PolylineAnnotation = function (_Annotation8) {\\n  _inherits(PolylineAnnotation, _Annotation8);\\n\\n  function PolylineAnnotation(parameters) {\\n    _classCallCheck(this, PolylineAnnotation);\\n\\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\\n\\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\\n    var dict = parameters.dict;\\n    var rawVertices = dict.getArray('Vertices');\\n    _this12.data.vertices = [];\\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\\n      _this12.data.vertices.push({\\n        x: rawVertices[i],\\n        y: rawVertices[i + 1]\\n      });\\n    }\\n    _this12._preparePopup(dict);\\n    return _this12;\\n  }\\n\\n  return PolylineAnnotation;\\n}(Annotation);\\n\\nvar PolygonAnnotation = function (_PolylineAnnotation) {\\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\\n\\n  function PolygonAnnotation(parameters) {\\n    _classCallCheck(this, PolygonAnnotation);\\n\\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\\n\\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\\n    return _this13;\\n  }\\n\\n  return PolygonAnnotation;\\n}(PolylineAnnotation);\\n\\nvar HighlightAnnotation = function (_Annotation9) {\\n  _inherits(HighlightAnnotation, _Annotation9);\\n\\n  function HighlightAnnotation(parameters) {\\n    _classCallCheck(this, HighlightAnnotation);\\n\\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\\n\\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\\n    _this14._preparePopup(parameters.dict);\\n    return _this14;\\n  }\\n\\n  return HighlightAnnotation;\\n}(Annotation);\\n\\nvar UnderlineAnnotation = function (_Annotation10) {\\n  _inherits(UnderlineAnnotation, _Annotation10);\\n\\n  function UnderlineAnnotation(parameters) {\\n    _classCallCheck(this, UnderlineAnnotation);\\n\\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\\n\\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\\n    _this15._preparePopup(parameters.dict);\\n    return _this15;\\n  }\\n\\n  return UnderlineAnnotation;\\n}(Annotation);\\n\\nvar SquigglyAnnotation = function (_Annotation11) {\\n  _inherits(SquigglyAnnotation, _Annotation11);\\n\\n  function SquigglyAnnotation(parameters) {\\n    _classCallCheck(this, SquigglyAnnotation);\\n\\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\\n\\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\\n    _this16._preparePopup(parameters.dict);\\n    return _this16;\\n  }\\n\\n  return SquigglyAnnotation;\\n}(Annotation);\\n\\nvar StrikeOutAnnotation = function (_Annotation12) {\\n  _inherits(StrikeOutAnnotation, _Annotation12);\\n\\n  function StrikeOutAnnotation(parameters) {\\n    _classCallCheck(this, StrikeOutAnnotation);\\n\\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\\n\\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\\n    _this17._preparePopup(parameters.dict);\\n    return _this17;\\n  }\\n\\n  return StrikeOutAnnotation;\\n}(Annotation);\\n\\nvar StampAnnotation = function (_Annotation13) {\\n  _inherits(StampAnnotation, _Annotation13);\\n\\n  function StampAnnotation(parameters) {\\n    _classCallCheck(this, StampAnnotation);\\n\\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\\n\\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\\n    _this18._preparePopup(parameters.dict);\\n    return _this18;\\n  }\\n\\n  return StampAnnotation;\\n}(Annotation);\\n\\nvar FileAttachmentAnnotation = function (_Annotation14) {\\n  _inherits(FileAttachmentAnnotation, _Annotation14);\\n\\n  function FileAttachmentAnnotation(parameters) {\\n    _classCallCheck(this, FileAttachmentAnnotation);\\n\\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\\n\\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\\n    _this19.data.file = file.serializable;\\n    _this19._preparePopup(parameters.dict);\\n    return _this19;\\n  }\\n\\n  return FileAttachmentAnnotation;\\n}(Annotation);\\n\\nexports.Annotation = Annotation;\\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\\nexports.AnnotationFactory = AnnotationFactory;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\\n  var QeTable = [{\\n    qe: 0x5601,\\n    nmps: 1,\\n    nlps: 1,\\n    switchFlag: 1\\n  }, {\\n    qe: 0x3401,\\n    nmps: 2,\\n    nlps: 6,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1801,\\n    nmps: 3,\\n    nlps: 9,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0AC1,\\n    nmps: 4,\\n    nlps: 12,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0521,\\n    nmps: 5,\\n    nlps: 29,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0221,\\n    nmps: 38,\\n    nlps: 33,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5601,\\n    nmps: 7,\\n    nlps: 6,\\n    switchFlag: 1\\n  }, {\\n    qe: 0x5401,\\n    nmps: 8,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x4801,\\n    nmps: 9,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3801,\\n    nmps: 10,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3001,\\n    nmps: 11,\\n    nlps: 17,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2401,\\n    nmps: 12,\\n    nlps: 18,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1C01,\\n    nmps: 13,\\n    nlps: 20,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1601,\\n    nmps: 29,\\n    nlps: 21,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5601,\\n    nmps: 15,\\n    nlps: 14,\\n    switchFlag: 1\\n  }, {\\n    qe: 0x5401,\\n    nmps: 16,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5101,\\n    nmps: 17,\\n    nlps: 15,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x4801,\\n    nmps: 18,\\n    nlps: 16,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3801,\\n    nmps: 19,\\n    nlps: 17,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3401,\\n    nmps: 20,\\n    nlps: 18,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3001,\\n    nmps: 21,\\n    nlps: 19,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2801,\\n    nmps: 22,\\n    nlps: 19,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2401,\\n    nmps: 23,\\n    nlps: 20,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2201,\\n    nmps: 24,\\n    nlps: 21,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1C01,\\n    nmps: 25,\\n    nlps: 22,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1801,\\n    nmps: 26,\\n    nlps: 23,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1601,\\n    nmps: 27,\\n    nlps: 24,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1401,\\n    nmps: 28,\\n    nlps: 25,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1201,\\n    nmps: 29,\\n    nlps: 26,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1101,\\n    nmps: 30,\\n    nlps: 27,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0AC1,\\n    nmps: 31,\\n    nlps: 28,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x09C1,\\n    nmps: 32,\\n    nlps: 29,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x08A1,\\n    nmps: 33,\\n    nlps: 30,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0521,\\n    nmps: 34,\\n    nlps: 31,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0441,\\n    nmps: 35,\\n    nlps: 32,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x02A1,\\n    nmps: 36,\\n    nlps: 33,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0221,\\n    nmps: 37,\\n    nlps: 34,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0141,\\n    nmps: 38,\\n    nlps: 35,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0111,\\n    nmps: 39,\\n    nlps: 36,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0085,\\n    nmps: 40,\\n    nlps: 37,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0049,\\n    nmps: 41,\\n    nlps: 38,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0025,\\n    nmps: 42,\\n    nlps: 39,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0015,\\n    nmps: 43,\\n    nlps: 40,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0009,\\n    nmps: 44,\\n    nlps: 41,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0005,\\n    nmps: 45,\\n    nlps: 42,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0001,\\n    nmps: 45,\\n    nlps: 43,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5601,\\n    nmps: 46,\\n    nlps: 46,\\n    switchFlag: 0\\n  }];\\n  function ArithmeticDecoder(data, start, end) {\\n    this.data = data;\\n    this.bp = start;\\n    this.dataEnd = end;\\n    this.chigh = data[start];\\n    this.clow = 0;\\n    this.byteIn();\\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\\n    this.clow = this.clow << 7 & 0xFFFF;\\n    this.ct -= 7;\\n    this.a = 0x8000;\\n  }\\n  ArithmeticDecoder.prototype = {\\n    byteIn: function ArithmeticDecoder_byteIn() {\\n      var data = this.data;\\n      var bp = this.bp;\\n      if (data[bp] === 0xFF) {\\n        var b1 = data[bp + 1];\\n        if (b1 > 0x8F) {\\n          this.clow += 0xFF00;\\n          this.ct = 8;\\n        } else {\\n          bp++;\\n          this.clow += data[bp] << 9;\\n          this.ct = 7;\\n          this.bp = bp;\\n        }\\n      } else {\\n        bp++;\\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\\n        this.ct = 8;\\n        this.bp = bp;\\n      }\\n      if (this.clow > 0xFFFF) {\\n        this.chigh += this.clow >> 16;\\n        this.clow &= 0xFFFF;\\n      }\\n    },\\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\\n      var cx_index = contexts[pos] >> 1,\\n          cx_mps = contexts[pos] & 1;\\n      var qeTableIcx = QeTable[cx_index];\\n      var qeIcx = qeTableIcx.qe;\\n      var d;\\n      var a = this.a - qeIcx;\\n      if (this.chigh < qeIcx) {\\n        if (a < qeIcx) {\\n          a = qeIcx;\\n          d = cx_mps;\\n          cx_index = qeTableIcx.nmps;\\n        } else {\\n          a = qeIcx;\\n          d = 1 ^ cx_mps;\\n          if (qeTableIcx.switchFlag === 1) {\\n            cx_mps = d;\\n          }\\n          cx_index = qeTableIcx.nlps;\\n        }\\n      } else {\\n        this.chigh -= qeIcx;\\n        if ((a & 0x8000) !== 0) {\\n          this.a = a;\\n          return cx_mps;\\n        }\\n        if (a < qeIcx) {\\n          d = 1 ^ cx_mps;\\n          if (qeTableIcx.switchFlag === 1) {\\n            cx_mps = d;\\n          }\\n          cx_index = qeTableIcx.nlps;\\n        } else {\\n          d = cx_mps;\\n          cx_index = qeTableIcx.nmps;\\n        }\\n      }\\n      do {\\n        if (this.ct === 0) {\\n          this.byteIn();\\n        }\\n        a <<= 1;\\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\\n        this.clow = this.clow << 1 & 0xFFFF;\\n        this.ct--;\\n      } while ((a & 0x8000) === 0);\\n      this.a = a;\\n      contexts[pos] = cx_index << 1 | cx_mps;\\n      return d;\\n    }\\n  };\\n  return ArithmeticDecoder;\\n}();\\nexports.ArithmeticDecoder = ArithmeticDecoder;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.bidi = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\\nfunction isOdd(i) {\\n  return (i & 1) !== 0;\\n}\\nfunction isEven(i) {\\n  return (i & 1) === 0;\\n}\\nfunction findUnequal(arr, start, value) {\\n  for (var j = start, jj = arr.length; j < jj; ++j) {\\n    if (arr[j] !== value) {\\n      return j;\\n    }\\n  }\\n  return j;\\n}\\nfunction setValues(arr, start, end, value) {\\n  for (var j = start; j < end; ++j) {\\n    arr[j] = value;\\n  }\\n}\\nfunction reverseValues(arr, start, end) {\\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\\n    var temp = arr[i];\\n    arr[i] = arr[j];\\n    arr[j] = temp;\\n  }\\n}\\nfunction createBidiText(str, isLTR, vertical) {\\n  return {\\n    str: str,\\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\\n  };\\n}\\nvar chars = [];\\nvar types = [];\\nfunction bidi(str, startLevel, vertical) {\\n  var isLTR = true;\\n  var strLength = str.length;\\n  if (strLength === 0 || vertical) {\\n    return createBidiText(str, isLTR, vertical);\\n  }\\n  chars.length = strLength;\\n  types.length = strLength;\\n  var numBidi = 0;\\n  var i, ii;\\n  for (i = 0; i < strLength; ++i) {\\n    chars[i] = str.charAt(i);\\n    var charCode = str.charCodeAt(i);\\n    var charType = 'L';\\n    if (charCode <= 0x00ff) {\\n      charType = baseTypes[charCode];\\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\\n      charType = 'R';\\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\\n      charType = arabicTypes[charCode & 0xff];\\n      if (!charType) {\\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\\n      }\\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\\n      charType = 'AL';\\n    }\\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\\n      numBidi++;\\n    }\\n    types[i] = charType;\\n  }\\n  if (numBidi === 0) {\\n    isLTR = true;\\n    return createBidiText(str, isLTR);\\n  }\\n  if (startLevel === -1) {\\n    if (numBidi / strLength < 0.3) {\\n      isLTR = true;\\n      startLevel = 0;\\n    } else {\\n      isLTR = false;\\n      startLevel = 1;\\n    }\\n  }\\n  var levels = [];\\n  for (i = 0; i < strLength; ++i) {\\n    levels[i] = startLevel;\\n  }\\n  var e = isOdd(startLevel) ? 'R' : 'L';\\n  var sor = e;\\n  var eor = sor;\\n  var lastType = sor;\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'NSM') {\\n      types[i] = lastType;\\n    } else {\\n      lastType = types[i];\\n    }\\n  }\\n  lastType = sor;\\n  var t;\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'EN') {\\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\\n      lastType = t;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'AL') {\\n      types[i] = 'R';\\n    }\\n  }\\n  for (i = 1; i < strLength - 1; ++i) {\\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\\n      types[i] = 'EN';\\n    }\\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\\n      types[i] = types[i - 1];\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'EN') {\\n      var j;\\n      for (j = i - 1; j >= 0; --j) {\\n        if (types[j] !== 'ET') {\\n          break;\\n        }\\n        types[j] = 'EN';\\n      }\\n      for (j = i + 1; j < strLength; ++j) {\\n        if (types[j] !== 'ET') {\\n          break;\\n        }\\n        types[j] = 'EN';\\n      }\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\\n      types[i] = 'ON';\\n    }\\n  }\\n  lastType = sor;\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'EN') {\\n      types[i] = lastType === 'L' ? 'L' : 'EN';\\n    } else if (t === 'R' || t === 'L') {\\n      lastType = t;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'ON') {\\n      var end = findUnequal(types, i + 1, 'ON');\\n      var before = sor;\\n      if (i > 0) {\\n        before = types[i - 1];\\n      }\\n      var after = eor;\\n      if (end + 1 < strLength) {\\n        after = types[end + 1];\\n      }\\n      if (before !== 'L') {\\n        before = 'R';\\n      }\\n      if (after !== 'L') {\\n        after = 'R';\\n      }\\n      if (before === after) {\\n        setValues(types, i, end, before);\\n      }\\n      i = end - 1;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'ON') {\\n      types[i] = e;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (isEven(levels[i])) {\\n      if (t === 'R') {\\n        levels[i] += 1;\\n      } else if (t === 'AN' || t === 'EN') {\\n        levels[i] += 2;\\n      }\\n    } else {\\n      if (t === 'L' || t === 'AN' || t === 'EN') {\\n        levels[i] += 1;\\n      }\\n    }\\n  }\\n  var highestLevel = -1;\\n  var lowestOddLevel = 99;\\n  var level;\\n  for (i = 0, ii = levels.length; i < ii; ++i) {\\n    level = levels[i];\\n    if (highestLevel < level) {\\n      highestLevel = level;\\n    }\\n    if (lowestOddLevel > level && isOdd(level)) {\\n      lowestOddLevel = level;\\n    }\\n  }\\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\\n    var start = -1;\\n    for (i = 0, ii = levels.length; i < ii; ++i) {\\n      if (levels[i] < level) {\\n        if (start >= 0) {\\n          reverseValues(chars, start, i);\\n          start = -1;\\n        }\\n      } else if (start < 0) {\\n        start = i;\\n      }\\n    }\\n    if (start >= 0) {\\n      reverseValues(chars, start, levels.length);\\n    }\\n  }\\n  for (i = 0, ii = chars.length; i < ii; ++i) {\\n    var ch = chars[i];\\n    if (ch === '<' || ch === '>') {\\n      chars[i] = '';\\n    }\\n  }\\n  return createBidiText(chars.join(''), isLTR);\\n}\\nexports.bidi = bidi;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CCITTFaxDecoder = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\\n  var ccittEOL = -2;\\n  var ccittEOF = -1;\\n  var twoDimPass = 0;\\n  var twoDimHoriz = 1;\\n  var twoDimVert0 = 2;\\n  var twoDimVertR1 = 3;\\n  var twoDimVertL1 = 4;\\n  var twoDimVertR2 = 5;\\n  var twoDimVertL2 = 6;\\n  var twoDimVertR3 = 7;\\n  var twoDimVertL3 = 8;\\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\\n  function CCITTFaxDecoder(source) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n    if (!source || typeof source.next !== 'function') {\\n      throw new Error('CCITTFaxDecoder - invalid \\\"source\\\" parameter.');\\n    }\\n    this.source = source;\\n    this.eof = false;\\n    this.encoding = options['K'] || 0;\\n    this.eoline = options['EndOfLine'] || false;\\n    this.byteAlign = options['EncodedByteAlign'] || false;\\n    this.columns = options['Columns'] || 1728;\\n    this.rows = options['Rows'] || 0;\\n    var eoblock = options['EndOfBlock'];\\n    if (eoblock === null || eoblock === undefined) {\\n      eoblock = true;\\n    }\\n    this.eoblock = eoblock;\\n    this.black = options['BlackIs1'] || false;\\n    this.codingLine = new Uint32Array(this.columns + 1);\\n    this.refLine = new Uint32Array(this.columns + 2);\\n    this.codingLine[0] = this.columns;\\n    this.codingPos = 0;\\n    this.row = 0;\\n    this.nextLine2D = this.encoding < 0;\\n    this.inputBits = 0;\\n    this.inputBuf = 0;\\n    this.outputBits = 0;\\n    this.rowsDone = false;\\n    var code1 = void 0;\\n    while ((code1 = this._lookBits(12)) === 0) {\\n      this._eatBits(1);\\n    }\\n    if (code1 === 1) {\\n      this._eatBits(12);\\n    }\\n    if (this.encoding > 0) {\\n      this.nextLine2D = !this._lookBits(1);\\n      this._eatBits(1);\\n    }\\n  }\\n  CCITTFaxDecoder.prototype = {\\n    readNextChar: function readNextChar() {\\n      if (this.eof) {\\n        return -1;\\n      }\\n      var refLine = this.refLine;\\n      var codingLine = this.codingLine;\\n      var columns = this.columns;\\n      var refPos = void 0,\\n          blackPixels = void 0,\\n          bits = void 0,\\n          i = void 0;\\n      if (this.outputBits === 0) {\\n        if (this.rowsDone) {\\n          this.eof = true;\\n        }\\n        if (this.eof) {\\n          return -1;\\n        }\\n        this.err = false;\\n        var code1 = void 0,\\n            code2 = void 0,\\n            code3 = void 0;\\n        if (this.nextLine2D) {\\n          for (i = 0; codingLine[i] < columns; ++i) {\\n            refLine[i] = codingLine[i];\\n          }\\n          refLine[i++] = columns;\\n          refLine[i] = columns;\\n          codingLine[0] = 0;\\n          this.codingPos = 0;\\n          refPos = 0;\\n          blackPixels = 0;\\n          while (codingLine[this.codingPos] < columns) {\\n            code1 = this._getTwoDimCode();\\n            switch (code1) {\\n              case twoDimPass:\\n                this._addPixels(refLine[refPos + 1], blackPixels);\\n                if (refLine[refPos + 1] < columns) {\\n                  refPos += 2;\\n                }\\n                break;\\n              case twoDimHoriz:\\n                code1 = code2 = 0;\\n                if (blackPixels) {\\n                  do {\\n                    code1 += code3 = this._getBlackCode();\\n                  } while (code3 >= 64);\\n                  do {\\n                    code2 += code3 = this._getWhiteCode();\\n                  } while (code3 >= 64);\\n                } else {\\n                  do {\\n                    code1 += code3 = this._getWhiteCode();\\n                  } while (code3 >= 64);\\n                  do {\\n                    code2 += code3 = this._getBlackCode();\\n                  } while (code3 >= 64);\\n                }\\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\n                if (codingLine[this.codingPos] < columns) {\\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\\n                }\\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                  refPos += 2;\\n                }\\n                break;\\n              case twoDimVertR3:\\n                this._addPixels(refLine[refPos] + 3, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertR2:\\n                this._addPixels(refLine[refPos] + 2, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertR1:\\n                this._addPixels(refLine[refPos] + 1, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVert0:\\n                this._addPixels(refLine[refPos], blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertL3:\\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  if (refPos > 0) {\\n                    --refPos;\\n                  } else {\\n                    ++refPos;\\n                  }\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertL2:\\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  if (refPos > 0) {\\n                    --refPos;\\n                  } else {\\n                    ++refPos;\\n                  }\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertL1:\\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  if (refPos > 0) {\\n                    --refPos;\\n                  } else {\\n                    ++refPos;\\n                  }\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case ccittEOF:\\n                this._addPixels(columns, 0);\\n                this.eof = true;\\n                break;\\n              default:\\n                (0, _util.info)('bad 2d code');\\n                this._addPixels(columns, 0);\\n                this.err = true;\\n            }\\n          }\\n        } else {\\n          codingLine[0] = 0;\\n          this.codingPos = 0;\\n          blackPixels = 0;\\n          while (codingLine[this.codingPos] < columns) {\\n            code1 = 0;\\n            if (blackPixels) {\\n              do {\\n                code1 += code3 = this._getBlackCode();\\n              } while (code3 >= 64);\\n            } else {\\n              do {\\n                code1 += code3 = this._getWhiteCode();\\n              } while (code3 >= 64);\\n            }\\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\n            blackPixels ^= 1;\\n          }\\n        }\\n        var gotEOL = false;\\n        if (this.byteAlign) {\\n          this.inputBits &= ~7;\\n        }\\n        if (!this.eoblock && this.row === this.rows - 1) {\\n          this.rowsDone = true;\\n        } else {\\n          code1 = this._lookBits(12);\\n          if (this.eoline) {\\n            while (code1 !== ccittEOF && code1 !== 1) {\\n              this._eatBits(1);\\n              code1 = this._lookBits(12);\\n            }\\n          } else {\\n            while (code1 === 0) {\\n              this._eatBits(1);\\n              code1 = this._lookBits(12);\\n            }\\n          }\\n          if (code1 === 1) {\\n            this._eatBits(12);\\n            gotEOL = true;\\n          } else if (code1 === ccittEOF) {\\n            this.eof = true;\\n          }\\n        }\\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\\n          this.nextLine2D = !this._lookBits(1);\\n          this._eatBits(1);\\n        }\\n        if (this.eoblock && gotEOL && this.byteAlign) {\\n          code1 = this._lookBits(12);\\n          if (code1 === 1) {\\n            this._eatBits(12);\\n            if (this.encoding > 0) {\\n              this._lookBits(1);\\n              this._eatBits(1);\\n            }\\n            if (this.encoding >= 0) {\\n              for (i = 0; i < 4; ++i) {\\n                code1 = this._lookBits(12);\\n                if (code1 !== 1) {\\n                  (0, _util.info)('bad rtc code: ' + code1);\\n                }\\n                this._eatBits(12);\\n                if (this.encoding > 0) {\\n                  this._lookBits(1);\\n                  this._eatBits(1);\\n                }\\n              }\\n            }\\n            this.eof = true;\\n          }\\n        } else if (this.err && this.eoline) {\\n          while (true) {\\n            code1 = this._lookBits(13);\\n            if (code1 === ccittEOF) {\\n              this.eof = true;\\n              return -1;\\n            }\\n            if (code1 >> 1 === 1) {\\n              break;\\n            }\\n            this._eatBits(1);\\n          }\\n          this._eatBits(12);\\n          if (this.encoding > 0) {\\n            this._eatBits(1);\\n            this.nextLine2D = !(code1 & 1);\\n          }\\n        }\\n        if (codingLine[0] > 0) {\\n          this.outputBits = codingLine[this.codingPos = 0];\\n        } else {\\n          this.outputBits = codingLine[this.codingPos = 1];\\n        }\\n        this.row++;\\n      }\\n      var c = void 0;\\n      if (this.outputBits >= 8) {\\n        c = this.codingPos & 1 ? 0 : 0xFF;\\n        this.outputBits -= 8;\\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\\n          this.codingPos++;\\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\n        }\\n      } else {\\n        bits = 8;\\n        c = 0;\\n        do {\\n          if (this.outputBits > bits) {\\n            c <<= bits;\\n            if (!(this.codingPos & 1)) {\\n              c |= 0xFF >> 8 - bits;\\n            }\\n            this.outputBits -= bits;\\n            bits = 0;\\n          } else {\\n            c <<= this.outputBits;\\n            if (!(this.codingPos & 1)) {\\n              c |= 0xFF >> 8 - this.outputBits;\\n            }\\n            bits -= this.outputBits;\\n            this.outputBits = 0;\\n            if (codingLine[this.codingPos] < columns) {\\n              this.codingPos++;\\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\n            } else if (bits > 0) {\\n              c <<= bits;\\n              bits = 0;\\n            }\\n          }\\n        } while (bits);\\n      }\\n      if (this.black) {\\n        c ^= 0xFF;\\n      }\\n      return c;\\n    },\\n    _addPixels: function _addPixels(a1, blackPixels) {\\n      var codingLine = this.codingLine;\\n      var codingPos = this.codingPos;\\n      if (a1 > codingLine[codingPos]) {\\n        if (a1 > this.columns) {\\n          (0, _util.info)('row is wrong length');\\n          this.err = true;\\n          a1 = this.columns;\\n        }\\n        if (codingPos & 1 ^ blackPixels) {\\n          ++codingPos;\\n        }\\n        codingLine[codingPos] = a1;\\n      }\\n      this.codingPos = codingPos;\\n    },\\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\\n      var codingLine = this.codingLine;\\n      var codingPos = this.codingPos;\\n      if (a1 > codingLine[codingPos]) {\\n        if (a1 > this.columns) {\\n          (0, _util.info)('row is wrong length');\\n          this.err = true;\\n          a1 = this.columns;\\n        }\\n        if (codingPos & 1 ^ blackPixels) {\\n          ++codingPos;\\n        }\\n        codingLine[codingPos] = a1;\\n      } else if (a1 < codingLine[codingPos]) {\\n        if (a1 < 0) {\\n          (0, _util.info)('invalid code');\\n          this.err = true;\\n          a1 = 0;\\n        }\\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\\n          --codingPos;\\n        }\\n        codingLine[codingPos] = a1;\\n      }\\n      this.codingPos = codingPos;\\n    },\\n    _findTableCode: function _findTableCode(start, end, table, limit) {\\n      var limitValue = limit || 0;\\n      for (var i = start; i <= end; ++i) {\\n        var code = this._lookBits(i);\\n        if (code === ccittEOF) {\\n          return [true, 1, false];\\n        }\\n        if (i < end) {\\n          code <<= end - i;\\n        }\\n        if (!limitValue || code >= limitValue) {\\n          var p = table[code - limitValue];\\n          if (p[0] === i) {\\n            this._eatBits(i);\\n            return [true, p[1], true];\\n          }\\n        }\\n      }\\n      return [false, 0, false];\\n    },\\n    _getTwoDimCode: function _getTwoDimCode() {\\n      var code = 0;\\n      var p = void 0;\\n      if (this.eoblock) {\\n        code = this._lookBits(7);\\n        p = twoDimTable[code];\\n        if (p && p[0] > 0) {\\n          this._eatBits(p[0]);\\n          return p[1];\\n        }\\n      } else {\\n        var result = this._findTableCode(1, 7, twoDimTable);\\n        if (result[0] && result[2]) {\\n          return result[1];\\n        }\\n      }\\n      (0, _util.info)('Bad two dim code');\\n      return ccittEOF;\\n    },\\n    _getWhiteCode: function _getWhiteCode() {\\n      var code = 0;\\n      var p = void 0;\\n      if (this.eoblock) {\\n        code = this._lookBits(12);\\n        if (code === ccittEOF) {\\n          return 1;\\n        }\\n        if (code >> 5 === 0) {\\n          p = whiteTable1[code];\\n        } else {\\n          p = whiteTable2[code >> 3];\\n        }\\n        if (p[0] > 0) {\\n          this._eatBits(p[0]);\\n          return p[1];\\n        }\\n      } else {\\n        var result = this._findTableCode(1, 9, whiteTable2);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n        result = this._findTableCode(11, 12, whiteTable1);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n      }\\n      (0, _util.info)('bad white code');\\n      this._eatBits(1);\\n      return 1;\\n    },\\n    _getBlackCode: function _getBlackCode() {\\n      var code = void 0,\\n          p = void 0;\\n      if (this.eoblock) {\\n        code = this._lookBits(13);\\n        if (code === ccittEOF) {\\n          return 1;\\n        }\\n        if (code >> 7 === 0) {\\n          p = blackTable1[code];\\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\\n          p = blackTable2[(code >> 1) - 64];\\n        } else {\\n          p = blackTable3[code >> 7];\\n        }\\n        if (p[0] > 0) {\\n          this._eatBits(p[0]);\\n          return p[1];\\n        }\\n      } else {\\n        var result = this._findTableCode(2, 6, blackTable3);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n        result = this._findTableCode(7, 12, blackTable2, 64);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n        result = this._findTableCode(10, 13, blackTable1);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n      }\\n      (0, _util.info)('bad black code');\\n      this._eatBits(1);\\n      return 1;\\n    },\\n    _lookBits: function _lookBits(n) {\\n      var c = void 0;\\n      while (this.inputBits < n) {\\n        if ((c = this.source.next()) === -1) {\\n          if (this.inputBits === 0) {\\n            return ccittEOF;\\n          }\\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\\n        }\\n        this.inputBuf = this.inputBuf << 8 | c;\\n        this.inputBits += 8;\\n      }\\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\\n    },\\n    _eatBits: function _eatBits(n) {\\n      if ((this.inputBits -= n) < 0) {\\n        this.inputBits = 0;\\n      }\\n    }\\n  };\\n  return CCITTFaxDecoder;\\n}();\\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CCITTFaxStream = undefined;\\n\\nvar _primitives = require('./primitives');\\n\\nvar _ccitt = require('./ccitt');\\n\\nvar _stream = require('./stream');\\n\\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\\n  function CCITTFaxStream(str, maybeLength, params) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    if (!(0, _primitives.isDict)(params)) {\\n      params = _primitives.Dict.empty;\\n    }\\n    var source = {\\n      next: function next() {\\n        return str.getByte();\\n      }\\n    };\\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\\n      K: params.get('K'),\\n      EndOfLine: params.get('EndOfLine'),\\n      EncodedByteAlign: params.get('EncodedByteAlign'),\\n      Columns: params.get('Columns'),\\n      Rows: params.get('Rows'),\\n      EndOfBlock: params.get('EndOfBlock'),\\n      BlackIs1: params.get('BlackIs1')\\n    });\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  CCITTFaxStream.prototype.readBlock = function () {\\n    while (!this.eof) {\\n      var c = this.ccittFaxDecoder.readNextChar();\\n      if (c === -1) {\\n        this.eof = true;\\n        return;\\n      }\\n      this.ensureBuffer(this.bufferLength + 1);\\n      this.buffer[this.bufferLength++] = c;\\n    }\\n  };\\n  return CCITTFaxStream;\\n}();\\nexports.CCITTFaxStream = CCITTFaxStream;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _charsets = require('./charsets');\\n\\nvar _encodings = require('./encodings');\\n\\nvar MAX_SUBR_NESTING = 10;\\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\\nvar CFFParser = function CFFParserClosure() {\\n  var CharstringValidationData = [null, {\\n    id: 'hstem',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, null, {\\n    id: 'vstem',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, {\\n    id: 'vmoveto',\\n    min: 1,\\n    stackClearing: true\\n  }, {\\n    id: 'rlineto',\\n    min: 2,\\n    resetStack: true\\n  }, {\\n    id: 'hlineto',\\n    min: 1,\\n    resetStack: true\\n  }, {\\n    id: 'vlineto',\\n    min: 1,\\n    resetStack: true\\n  }, {\\n    id: 'rrcurveto',\\n    min: 6,\\n    resetStack: true\\n  }, null, {\\n    id: 'callsubr',\\n    min: 1,\\n    undefStack: true\\n  }, {\\n    id: 'return',\\n    min: 0,\\n    undefStack: true\\n  }, null, null, {\\n    id: 'endchar',\\n    min: 0,\\n    stackClearing: true\\n  }, null, null, null, {\\n    id: 'hstemhm',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, {\\n    id: 'hintmask',\\n    min: 0,\\n    stackClearing: true\\n  }, {\\n    id: 'cntrmask',\\n    min: 0,\\n    stackClearing: true\\n  }, {\\n    id: 'rmoveto',\\n    min: 2,\\n    stackClearing: true\\n  }, {\\n    id: 'hmoveto',\\n    min: 1,\\n    stackClearing: true\\n  }, {\\n    id: 'vstemhm',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, {\\n    id: 'rcurveline',\\n    min: 8,\\n    resetStack: true\\n  }, {\\n    id: 'rlinecurve',\\n    min: 8,\\n    resetStack: true\\n  }, {\\n    id: 'vvcurveto',\\n    min: 4,\\n    resetStack: true\\n  }, {\\n    id: 'hhcurveto',\\n    min: 4,\\n    resetStack: true\\n  }, null, {\\n    id: 'callgsubr',\\n    min: 1,\\n    undefStack: true\\n  }, {\\n    id: 'vhcurveto',\\n    min: 4,\\n    resetStack: true\\n  }, {\\n    id: 'hvcurveto',\\n    min: 4,\\n    resetStack: true\\n  }];\\n  var CharstringValidationData12 = [null, null, null, {\\n    id: 'and',\\n    min: 2,\\n    stackDelta: -1\\n  }, {\\n    id: 'or',\\n    min: 2,\\n    stackDelta: -1\\n  }, {\\n    id: 'not',\\n    min: 1,\\n    stackDelta: 0\\n  }, null, null, null, {\\n    id: 'abs',\\n    min: 1,\\n    stackDelta: 0\\n  }, {\\n    id: 'add',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\\n    }\\n  }, {\\n    id: 'sub',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\\n    }\\n  }, {\\n    id: 'div',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\\n    }\\n  }, null, {\\n    id: 'neg',\\n    min: 1,\\n    stackDelta: 0,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 1] = -stack[index - 1];\\n    }\\n  }, {\\n    id: 'eq',\\n    min: 2,\\n    stackDelta: -1\\n  }, null, null, {\\n    id: 'drop',\\n    min: 1,\\n    stackDelta: -1\\n  }, null, {\\n    id: 'put',\\n    min: 2,\\n    stackDelta: -2\\n  }, {\\n    id: 'get',\\n    min: 1,\\n    stackDelta: 0\\n  }, {\\n    id: 'ifelse',\\n    min: 4,\\n    stackDelta: -3\\n  }, {\\n    id: 'random',\\n    min: 0,\\n    stackDelta: 1\\n  }, {\\n    id: 'mul',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\\n    }\\n  }, null, {\\n    id: 'sqrt',\\n    min: 1,\\n    stackDelta: 0\\n  }, {\\n    id: 'dup',\\n    min: 1,\\n    stackDelta: 1\\n  }, {\\n    id: 'exch',\\n    min: 2,\\n    stackDelta: 0\\n  }, {\\n    id: 'index',\\n    min: 2,\\n    stackDelta: 0\\n  }, {\\n    id: 'roll',\\n    min: 3,\\n    stackDelta: -2\\n  }, null, null, null, {\\n    id: 'hflex',\\n    min: 7,\\n    resetStack: true\\n  }, {\\n    id: 'flex',\\n    min: 13,\\n    resetStack: true\\n  }, {\\n    id: 'hflex1',\\n    min: 9,\\n    resetStack: true\\n  }, {\\n    id: 'flex1',\\n    min: 11,\\n    resetStack: true\\n  }];\\n  function CFFParser(file, properties, seacAnalysisEnabled) {\\n    this.bytes = file.getBytes();\\n    this.properties = properties;\\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\n  }\\n  CFFParser.prototype = {\\n    parse: function CFFParser_parse() {\\n      var properties = this.properties;\\n      var cff = new CFF();\\n      this.cff = cff;\\n      var header = this.parseHeader();\\n      var nameIndex = this.parseIndex(header.endPos);\\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\\n      cff.header = header.obj;\\n      cff.names = this.parseNameIndex(nameIndex.obj);\\n      cff.strings = this.parseStringIndex(stringIndex.obj);\\n      cff.topDict = topDict;\\n      cff.globalSubrIndex = globalSubrIndex.obj;\\n      this.parsePrivateDict(cff.topDict);\\n      cff.isCIDFont = topDict.hasName('ROS');\\n      var charStringOffset = topDict.getByName('CharStrings');\\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\\n      var fontMatrix = topDict.getByName('FontMatrix');\\n      if (fontMatrix) {\\n        properties.fontMatrix = fontMatrix;\\n      }\\n      var fontBBox = topDict.getByName('FontBBox');\\n      if (fontBBox) {\\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\n        properties.ascentScaled = true;\\n      }\\n      var charset, encoding;\\n      if (cff.isCIDFont) {\\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\\n          var dictRaw = fdArrayIndex.get(i);\\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\\n          this.parsePrivateDict(fontDict);\\n          cff.fdArray.push(fontDict);\\n        }\\n        encoding = null;\\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\\n      } else {\\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\\n      }\\n      cff.charset = charset;\\n      cff.encoding = encoding;\\n      var charStringsAndSeacs = this.parseCharStrings({\\n        charStrings: charStringIndex,\\n        localSubrIndex: topDict.privateDict.subrsIndex,\\n        globalSubrIndex: globalSubrIndex.obj,\\n        fdSelect: cff.fdSelect,\\n        fdArray: cff.fdArray,\\n        privateDict: topDict.privateDict\\n      });\\n      cff.charStrings = charStringsAndSeacs.charStrings;\\n      cff.seacs = charStringsAndSeacs.seacs;\\n      cff.widths = charStringsAndSeacs.widths;\\n      return cff;\\n    },\\n    parseHeader: function CFFParser_parseHeader() {\\n      var bytes = this.bytes;\\n      var bytesLength = bytes.length;\\n      var offset = 0;\\n      while (offset < bytesLength && bytes[offset] !== 1) {\\n        ++offset;\\n      }\\n      if (offset >= bytesLength) {\\n        throw new _util.FormatError('Invalid CFF header');\\n      }\\n      if (offset !== 0) {\\n        (0, _util.info)('cff data is shifted');\\n        bytes = bytes.subarray(offset);\\n        this.bytes = bytes;\\n      }\\n      var major = bytes[0];\\n      var minor = bytes[1];\\n      var hdrSize = bytes[2];\\n      var offSize = bytes[3];\\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\\n      return {\\n        obj: header,\\n        endPos: hdrSize\\n      };\\n    },\\n    parseDict: function CFFParser_parseDict(dict) {\\n      var pos = 0;\\n      function parseOperand() {\\n        var value = dict[pos++];\\n        if (value === 30) {\\n          return parseFloatOperand();\\n        } else if (value === 28) {\\n          value = dict[pos++];\\n          value = (value << 24 | dict[pos++] << 16) >> 16;\\n          return value;\\n        } else if (value === 29) {\\n          value = dict[pos++];\\n          value = value << 8 | dict[pos++];\\n          value = value << 8 | dict[pos++];\\n          value = value << 8 | dict[pos++];\\n          return value;\\n        } else if (value >= 32 && value <= 246) {\\n          return value - 139;\\n        } else if (value >= 247 && value <= 250) {\\n          return (value - 247) * 256 + dict[pos++] + 108;\\n        } else if (value >= 251 && value <= 254) {\\n          return -((value - 251) * 256) - dict[pos++] - 108;\\n        }\\n        (0, _util.warn)('CFFParser_parseDict: \\\"' + value + '\\\" is a reserved command.');\\n        return NaN;\\n      }\\n      function parseFloatOperand() {\\n        var str = '';\\n        var eof = 15;\\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\\n        var length = dict.length;\\n        while (pos < length) {\\n          var b = dict[pos++];\\n          var b1 = b >> 4;\\n          var b2 = b & 15;\\n          if (b1 === eof) {\\n            break;\\n          }\\n          str += lookup[b1];\\n          if (b2 === eof) {\\n            break;\\n          }\\n          str += lookup[b2];\\n        }\\n        return parseFloat(str);\\n      }\\n      var operands = [];\\n      var entries = [];\\n      pos = 0;\\n      var end = dict.length;\\n      while (pos < end) {\\n        var b = dict[pos];\\n        if (b <= 21) {\\n          if (b === 12) {\\n            b = b << 8 | dict[++pos];\\n          }\\n          entries.push([b, operands]);\\n          operands = [];\\n          ++pos;\\n        } else {\\n          operands.push(parseOperand());\\n        }\\n      }\\n      return entries;\\n    },\\n    parseIndex: function CFFParser_parseIndex(pos) {\\n      var cffIndex = new CFFIndex();\\n      var bytes = this.bytes;\\n      var count = bytes[pos++] << 8 | bytes[pos++];\\n      var offsets = [];\\n      var end = pos;\\n      var i, ii;\\n      if (count !== 0) {\\n        var offsetSize = bytes[pos++];\\n        var startPos = pos + (count + 1) * offsetSize - 1;\\n        for (i = 0, ii = count + 1; i < ii; ++i) {\\n          var offset = 0;\\n          for (var j = 0; j < offsetSize; ++j) {\\n            offset <<= 8;\\n            offset += bytes[pos++];\\n          }\\n          offsets.push(startPos + offset);\\n        }\\n        end = offsets[count];\\n      }\\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\\n        var offsetStart = offsets[i];\\n        var offsetEnd = offsets[i + 1];\\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\\n      }\\n      return {\\n        obj: cffIndex,\\n        endPos: end\\n      };\\n    },\\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\\n      var names = [];\\n      for (var i = 0, ii = index.count; i < ii; ++i) {\\n        var name = index.get(i);\\n        names.push((0, _util.bytesToString)(name));\\n      }\\n      return names;\\n    },\\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\\n      var strings = new CFFStrings();\\n      for (var i = 0, ii = index.count; i < ii; ++i) {\\n        var data = index.get(i);\\n        strings.add((0, _util.bytesToString)(data));\\n      }\\n      return strings;\\n    },\\n    createDict: function CFFParser_createDict(Type, dict, strings) {\\n      var cffDict = new Type(strings);\\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\\n        var pair = dict[i];\\n        var key = pair[0];\\n        var value = pair[1];\\n        cffDict.setByKey(key, value);\\n      }\\n      return cffDict;\\n    },\\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\\n        return false;\\n      }\\n      var stackSize = state.stackSize;\\n      var stack = state.stack;\\n      var length = data.length;\\n      for (var j = 0; j < length;) {\\n        var value = data[j++];\\n        var validationCommand = null;\\n        if (value === 12) {\\n          var q = data[j++];\\n          if (q === 0) {\\n            data[j - 2] = 139;\\n            data[j - 1] = 22;\\n            stackSize = 0;\\n          } else {\\n            validationCommand = CharstringValidationData12[q];\\n          }\\n        } else if (value === 28) {\\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\\n          j += 2;\\n          stackSize++;\\n        } else if (value === 14) {\\n          if (stackSize >= 4) {\\n            stackSize -= 4;\\n            if (this.seacAnalysisEnabled) {\\n              state.seac = stack.slice(stackSize, stackSize + 4);\\n              return false;\\n            }\\n          }\\n          validationCommand = CharstringValidationData[value];\\n        } else if (value >= 32 && value <= 246) {\\n          stack[stackSize] = value - 139;\\n          stackSize++;\\n        } else if (value >= 247 && value <= 254) {\\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\\n          j++;\\n          stackSize++;\\n        } else if (value === 255) {\\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\\n          j += 4;\\n          stackSize++;\\n        } else if (value === 19 || value === 20) {\\n          state.hints += stackSize >> 1;\\n          j += state.hints + 7 >> 3;\\n          stackSize %= 2;\\n          validationCommand = CharstringValidationData[value];\\n        } else if (value === 10 || value === 29) {\\n          var subrsIndex;\\n          if (value === 10) {\\n            subrsIndex = localSubrIndex;\\n          } else {\\n            subrsIndex = globalSubrIndex;\\n          }\\n          if (!subrsIndex) {\\n            validationCommand = CharstringValidationData[value];\\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\\n            return false;\\n          }\\n          var bias = 32768;\\n          if (subrsIndex.count < 1240) {\\n            bias = 107;\\n          } else if (subrsIndex.count < 33900) {\\n            bias = 1131;\\n          }\\n          var subrNumber = stack[--stackSize] + bias;\\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\\n            validationCommand = CharstringValidationData[value];\\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\\n            return false;\\n          }\\n          state.stackSize = stackSize;\\n          state.callDepth++;\\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\\n          if (!valid) {\\n            return false;\\n          }\\n          state.callDepth--;\\n          stackSize = state.stackSize;\\n          continue;\\n        } else if (value === 11) {\\n          state.stackSize = stackSize;\\n          return true;\\n        } else {\\n          validationCommand = CharstringValidationData[value];\\n        }\\n        if (validationCommand) {\\n          if (validationCommand.stem) {\\n            state.hints += stackSize >> 1;\\n          }\\n          if ('min' in validationCommand) {\\n            if (!state.undefStack && stackSize < validationCommand.min) {\\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\\n              return false;\\n            }\\n          }\\n          if (state.firstStackClearing && validationCommand.stackClearing) {\\n            state.firstStackClearing = false;\\n            stackSize -= validationCommand.min;\\n            if (stackSize >= 2 && validationCommand.stem) {\\n              stackSize %= 2;\\n            } else if (stackSize > 1) {\\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\\n            }\\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\\n              state.width = stack[stackSize - 1];\\n            }\\n          }\\n          if ('stackDelta' in validationCommand) {\\n            if ('stackFn' in validationCommand) {\\n              validationCommand.stackFn(stack, stackSize);\\n            }\\n            stackSize += validationCommand.stackDelta;\\n          } else if (validationCommand.stackClearing) {\\n            stackSize = 0;\\n          } else if (validationCommand.resetStack) {\\n            stackSize = 0;\\n            state.undefStack = false;\\n          } else if (validationCommand.undefStack) {\\n            stackSize = 0;\\n            state.undefStack = true;\\n            state.firstStackClearing = false;\\n          }\\n        }\\n      }\\n      state.stackSize = stackSize;\\n      return true;\\n    },\\n    parseCharStrings: function parseCharStrings(_ref) {\\n      var charStrings = _ref.charStrings,\\n          localSubrIndex = _ref.localSubrIndex,\\n          globalSubrIndex = _ref.globalSubrIndex,\\n          fdSelect = _ref.fdSelect,\\n          fdArray = _ref.fdArray,\\n          privateDict = _ref.privateDict;\\n\\n      var seacs = [];\\n      var widths = [];\\n      var count = charStrings.count;\\n      for (var i = 0; i < count; i++) {\\n        var charstring = charStrings.get(i);\\n        var state = {\\n          callDepth: 0,\\n          stackSize: 0,\\n          stack: [],\\n          undefStack: true,\\n          hints: 0,\\n          firstStackClearing: true,\\n          seac: null,\\n          width: null\\n        };\\n        var valid = true;\\n        var localSubrToUse = null;\\n        var privateDictToUse = privateDict;\\n        if (fdSelect && fdArray.length) {\\n          var fdIndex = fdSelect.getFDIndex(i);\\n          if (fdIndex === -1) {\\n            (0, _util.warn)('Glyph index is not in fd select.');\\n            valid = false;\\n          }\\n          if (fdIndex >= fdArray.length) {\\n            (0, _util.warn)('Invalid fd index for glyph index.');\\n            valid = false;\\n          }\\n          if (valid) {\\n            privateDictToUse = fdArray[fdIndex].privateDict;\\n            localSubrToUse = privateDictToUse.subrsIndex;\\n          }\\n        } else if (localSubrIndex) {\\n          localSubrToUse = localSubrIndex;\\n        }\\n        if (valid) {\\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\\n        }\\n        if (state.width !== null) {\\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\\n          widths[i] = nominalWidth + state.width;\\n        } else {\\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\\n          widths[i] = defaultWidth;\\n        }\\n        if (state.seac !== null) {\\n          seacs[i] = state.seac;\\n        }\\n        if (!valid) {\\n          charStrings.set(i, new Uint8Array([14]));\\n        }\\n      }\\n      return {\\n        charStrings: charStrings,\\n        seacs: seacs,\\n        widths: widths\\n      };\\n    },\\n\\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\\n      parentDict.setByKey(18, [0, 0]);\\n      parentDict.privateDict = privateDict;\\n    },\\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\\n      if (!parentDict.hasName('Private')) {\\n        this.emptyPrivateDictionary(parentDict);\\n        return;\\n      }\\n      var privateOffset = parentDict.getByName('Private');\\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\\n        parentDict.removeByName('Private');\\n        return;\\n      }\\n      var size = privateOffset[0];\\n      var offset = privateOffset[1];\\n      if (size === 0 || offset >= this.bytes.length) {\\n        this.emptyPrivateDictionary(parentDict);\\n        return;\\n      }\\n      var privateDictEnd = offset + size;\\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\\n      var dict = this.parseDict(dictData);\\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\\n      parentDict.privateDict = privateDict;\\n      if (!privateDict.getByName('Subrs')) {\\n        return;\\n      }\\n      var subrsOffset = privateDict.getByName('Subrs');\\n      var relativeOffset = offset + subrsOffset;\\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\\n        this.emptyPrivateDictionary(parentDict);\\n        return;\\n      }\\n      var subrsIndex = this.parseIndex(relativeOffset);\\n      privateDict.subrsIndex = subrsIndex.obj;\\n    },\\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\\n      if (pos === 0) {\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\\n      } else if (pos === 1) {\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\\n      } else if (pos === 2) {\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\\n      }\\n      var bytes = this.bytes;\\n      var start = pos;\\n      var format = bytes[pos++];\\n      var charset = ['.notdef'];\\n      var id, count, i;\\n      length -= 1;\\n      switch (format) {\\n        case 0:\\n          for (i = 0; i < length; i++) {\\n            id = bytes[pos++] << 8 | bytes[pos++];\\n            charset.push(cid ? id : strings.get(id));\\n          }\\n          break;\\n        case 1:\\n          while (charset.length <= length) {\\n            id = bytes[pos++] << 8 | bytes[pos++];\\n            count = bytes[pos++];\\n            for (i = 0; i <= count; i++) {\\n              charset.push(cid ? id++ : strings.get(id++));\\n            }\\n          }\\n          break;\\n        case 2:\\n          while (charset.length <= length) {\\n            id = bytes[pos++] << 8 | bytes[pos++];\\n            count = bytes[pos++] << 8 | bytes[pos++];\\n            for (i = 0; i <= count; i++) {\\n              charset.push(cid ? id++ : strings.get(id++));\\n            }\\n          }\\n          break;\\n        default:\\n          throw new _util.FormatError('Unknown charset format');\\n      }\\n      var end = pos;\\n      var raw = bytes.subarray(start, end);\\n      return new CFFCharset(false, format, charset, raw);\\n    },\\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\\n      var encoding = Object.create(null);\\n      var bytes = this.bytes;\\n      var predefined = false;\\n      var format, i, ii;\\n      var raw = null;\\n      function readSupplement() {\\n        var supplementsCount = bytes[pos++];\\n        for (i = 0; i < supplementsCount; i++) {\\n          var code = bytes[pos++];\\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\\n          encoding[code] = charset.indexOf(strings.get(sid));\\n        }\\n      }\\n      if (pos === 0 || pos === 1) {\\n        predefined = true;\\n        format = pos;\\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\\n        for (i = 0, ii = charset.length; i < ii; i++) {\\n          var index = baseEncoding.indexOf(charset[i]);\\n          if (index !== -1) {\\n            encoding[index] = i;\\n          }\\n        }\\n      } else {\\n        var dataStart = pos;\\n        format = bytes[pos++];\\n        switch (format & 0x7f) {\\n          case 0:\\n            var glyphsCount = bytes[pos++];\\n            for (i = 1; i <= glyphsCount; i++) {\\n              encoding[bytes[pos++]] = i;\\n            }\\n            break;\\n          case 1:\\n            var rangesCount = bytes[pos++];\\n            var gid = 1;\\n            for (i = 0; i < rangesCount; i++) {\\n              var start = bytes[pos++];\\n              var left = bytes[pos++];\\n              for (var j = start; j <= start + left; j++) {\\n                encoding[j] = gid++;\\n              }\\n            }\\n            break;\\n          default:\\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\\n        }\\n        var dataEnd = pos;\\n        if (format & 0x80) {\\n          bytes[dataStart] &= 0x7f;\\n          readSupplement();\\n        }\\n        raw = bytes.subarray(dataStart, dataEnd);\\n      }\\n      format = format & 0x7f;\\n      return new CFFEncoding(predefined, format, encoding, raw);\\n    },\\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\\n      var start = pos;\\n      var bytes = this.bytes;\\n      var format = bytes[pos++];\\n      var fdSelect = [],\\n          rawBytes;\\n      var i,\\n          invalidFirstGID = false;\\n      switch (format) {\\n        case 0:\\n          for (i = 0; i < length; ++i) {\\n            var id = bytes[pos++];\\n            fdSelect.push(id);\\n          }\\n          rawBytes = bytes.subarray(start, pos);\\n          break;\\n        case 3:\\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\\n          for (i = 0; i < rangesCount; ++i) {\\n            var first = bytes[pos++] << 8 | bytes[pos++];\\n            if (i === 0 && first !== 0) {\\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\\n              invalidFirstGID = true;\\n              first = 0;\\n            }\\n            var fdIndex = bytes[pos++];\\n            var next = bytes[pos] << 8 | bytes[pos + 1];\\n            for (var j = first; j < next; ++j) {\\n              fdSelect.push(fdIndex);\\n            }\\n          }\\n          pos += 2;\\n          rawBytes = bytes.subarray(start, pos);\\n          if (invalidFirstGID) {\\n            rawBytes[3] = rawBytes[4] = 0;\\n          }\\n          break;\\n        default:\\n          throw new _util.FormatError('parseFDSelect: Unknown format \\\"' + format + '\\\".');\\n      }\\n      if (fdSelect.length !== length) {\\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\\n      }\\n      return new CFFFDSelect(fdSelect, rawBytes);\\n    }\\n  };\\n  return CFFParser;\\n}();\\nvar CFF = function CFFClosure() {\\n  function CFF() {\\n    this.header = null;\\n    this.names = [];\\n    this.topDict = null;\\n    this.strings = new CFFStrings();\\n    this.globalSubrIndex = null;\\n    this.encoding = null;\\n    this.charset = null;\\n    this.charStrings = null;\\n    this.fdArray = [];\\n    this.fdSelect = null;\\n    this.isCIDFont = false;\\n  }\\n  return CFF;\\n}();\\nvar CFFHeader = function CFFHeaderClosure() {\\n  function CFFHeader(major, minor, hdrSize, offSize) {\\n    this.major = major;\\n    this.minor = minor;\\n    this.hdrSize = hdrSize;\\n    this.offSize = offSize;\\n  }\\n  return CFFHeader;\\n}();\\nvar CFFStrings = function CFFStringsClosure() {\\n  function CFFStrings() {\\n    this.strings = [];\\n  }\\n  CFFStrings.prototype = {\\n    get: function CFFStrings_get(index) {\\n      if (index >= 0 && index <= 390) {\\n        return CFFStandardStrings[index];\\n      }\\n      if (index - 391 <= this.strings.length) {\\n        return this.strings[index - 391];\\n      }\\n      return CFFStandardStrings[0];\\n    },\\n    add: function CFFStrings_add(value) {\\n      this.strings.push(value);\\n    },\\n    get count() {\\n      return this.strings.length;\\n    }\\n  };\\n  return CFFStrings;\\n}();\\nvar CFFIndex = function CFFIndexClosure() {\\n  function CFFIndex() {\\n    this.objects = [];\\n    this.length = 0;\\n  }\\n  CFFIndex.prototype = {\\n    add: function CFFIndex_add(data) {\\n      this.length += data.length;\\n      this.objects.push(data);\\n    },\\n    set: function CFFIndex_set(index, data) {\\n      this.length += data.length - this.objects[index].length;\\n      this.objects[index] = data;\\n    },\\n    get: function CFFIndex_get(index) {\\n      return this.objects[index];\\n    },\\n    get count() {\\n      return this.objects.length;\\n    }\\n  };\\n  return CFFIndex;\\n}();\\nvar CFFDict = function CFFDictClosure() {\\n  function CFFDict(tables, strings) {\\n    this.keyToNameMap = tables.keyToNameMap;\\n    this.nameToKeyMap = tables.nameToKeyMap;\\n    this.defaults = tables.defaults;\\n    this.types = tables.types;\\n    this.opcodes = tables.opcodes;\\n    this.order = tables.order;\\n    this.strings = strings;\\n    this.values = Object.create(null);\\n  }\\n  CFFDict.prototype = {\\n    setByKey: function CFFDict_setByKey(key, value) {\\n      if (!(key in this.keyToNameMap)) {\\n        return false;\\n      }\\n      var valueLength = value.length;\\n      if (valueLength === 0) {\\n        return true;\\n      }\\n      for (var i = 0; i < valueLength; i++) {\\n        if (isNaN(value[i])) {\\n          (0, _util.warn)('Invalid CFFDict value: \\\"' + value + '\\\" for key \\\"' + key + '\\\".');\\n          return true;\\n        }\\n      }\\n      var type = this.types[key];\\n      if (type === 'num' || type === 'sid' || type === 'offset') {\\n        value = value[0];\\n      }\\n      this.values[key] = value;\\n      return true;\\n    },\\n    setByName: function CFFDict_setByName(name, value) {\\n      if (!(name in this.nameToKeyMap)) {\\n        throw new _util.FormatError('Invalid dictionary name \\\"' + name + '\\\"');\\n      }\\n      this.values[this.nameToKeyMap[name]] = value;\\n    },\\n    hasName: function CFFDict_hasName(name) {\\n      return this.nameToKeyMap[name] in this.values;\\n    },\\n    getByName: function CFFDict_getByName(name) {\\n      if (!(name in this.nameToKeyMap)) {\\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\\\"');\\n      }\\n      var key = this.nameToKeyMap[name];\\n      if (!(key in this.values)) {\\n        return this.defaults[key];\\n      }\\n      return this.values[key];\\n    },\\n    removeByName: function CFFDict_removeByName(name) {\\n      delete this.values[this.nameToKeyMap[name]];\\n    }\\n  };\\n  CFFDict.createTables = function CFFDict_createTables(layout) {\\n    var tables = {\\n      keyToNameMap: {},\\n      nameToKeyMap: {},\\n      defaults: {},\\n      types: {},\\n      opcodes: {},\\n      order: []\\n    };\\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\\n      var entry = layout[i];\\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\\n      tables.keyToNameMap[key] = entry[1];\\n      tables.nameToKeyMap[entry[1]] = key;\\n      tables.types[key] = entry[2];\\n      tables.defaults[key] = entry[3];\\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\\n      tables.order.push(key);\\n    }\\n    return tables;\\n  };\\n  return CFFDict;\\n}();\\nvar CFFTopDict = function CFFTopDictClosure() {\\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\\n  var tables = null;\\n  function CFFTopDict(strings) {\\n    if (tables === null) {\\n      tables = CFFDict.createTables(layout);\\n    }\\n    CFFDict.call(this, tables, strings);\\n    this.privateDict = null;\\n  }\\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\\n  return CFFTopDict;\\n}();\\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\\n  var tables = null;\\n  function CFFPrivateDict(strings) {\\n    if (tables === null) {\\n      tables = CFFDict.createTables(layout);\\n    }\\n    CFFDict.call(this, tables, strings);\\n    this.subrsIndex = null;\\n  }\\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\\n  return CFFPrivateDict;\\n}();\\nvar CFFCharsetPredefinedTypes = {\\n  ISO_ADOBE: 0,\\n  EXPERT: 1,\\n  EXPERT_SUBSET: 2\\n};\\nvar CFFCharset = function CFFCharsetClosure() {\\n  function CFFCharset(predefined, format, charset, raw) {\\n    this.predefined = predefined;\\n    this.format = format;\\n    this.charset = charset;\\n    this.raw = raw;\\n  }\\n  return CFFCharset;\\n}();\\nvar CFFEncoding = function CFFEncodingClosure() {\\n  function CFFEncoding(predefined, format, encoding, raw) {\\n    this.predefined = predefined;\\n    this.format = format;\\n    this.encoding = encoding;\\n    this.raw = raw;\\n  }\\n  return CFFEncoding;\\n}();\\nvar CFFFDSelect = function CFFFDSelectClosure() {\\n  function CFFFDSelect(fdSelect, raw) {\\n    this.fdSelect = fdSelect;\\n    this.raw = raw;\\n  }\\n  CFFFDSelect.prototype = {\\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\\n        return -1;\\n      }\\n      return this.fdSelect[glyphIndex];\\n    }\\n  };\\n  return CFFFDSelect;\\n}();\\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\\n  function CFFOffsetTracker() {\\n    this.offsets = Object.create(null);\\n  }\\n  CFFOffsetTracker.prototype = {\\n    isTracking: function CFFOffsetTracker_isTracking(key) {\\n      return key in this.offsets;\\n    },\\n    track: function CFFOffsetTracker_track(key, location) {\\n      if (key in this.offsets) {\\n        throw new _util.FormatError('Already tracking location of ' + key);\\n      }\\n      this.offsets[key] = location;\\n    },\\n    offset: function CFFOffsetTracker_offset(value) {\\n      for (var key in this.offsets) {\\n        this.offsets[key] += value;\\n      }\\n    },\\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\\n      if (!(key in this.offsets)) {\\n        throw new _util.FormatError('Not tracking location of ' + key);\\n      }\\n      var data = output.data;\\n      var dataOffset = this.offsets[key];\\n      var size = 5;\\n      for (var i = 0, ii = values.length; i < ii; ++i) {\\n        var offset0 = i * size + dataOffset;\\n        var offset1 = offset0 + 1;\\n        var offset2 = offset0 + 2;\\n        var offset3 = offset0 + 3;\\n        var offset4 = offset0 + 4;\\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\\n          throw new _util.FormatError('writing to an offset that is not empty');\\n        }\\n        var value = values[i];\\n        data[offset0] = 0x1d;\\n        data[offset1] = value >> 24 & 0xFF;\\n        data[offset2] = value >> 16 & 0xFF;\\n        data[offset3] = value >> 8 & 0xFF;\\n        data[offset4] = value & 0xFF;\\n      }\\n    }\\n  };\\n  return CFFOffsetTracker;\\n}();\\nvar CFFCompiler = function CFFCompilerClosure() {\\n  function CFFCompiler(cff) {\\n    this.cff = cff;\\n  }\\n  CFFCompiler.prototype = {\\n    compile: function CFFCompiler_compile() {\\n      var cff = this.cff;\\n      var output = {\\n        data: [],\\n        length: 0,\\n        add: function CFFCompiler_add(data) {\\n          this.data = this.data.concat(data);\\n          this.length = this.data.length;\\n        }\\n      };\\n      var header = this.compileHeader(cff.header);\\n      output.add(header);\\n      var nameIndex = this.compileNameIndex(cff.names);\\n      output.add(nameIndex);\\n      if (cff.isCIDFont) {\\n        if (cff.topDict.hasName('FontMatrix')) {\\n          var base = cff.topDict.getByName('FontMatrix');\\n          cff.topDict.removeByName('FontMatrix');\\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\\n            var subDict = cff.fdArray[i];\\n            var matrix = base.slice(0);\\n            if (subDict.hasName('FontMatrix')) {\\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\\n            }\\n            subDict.setByName('FontMatrix', matrix);\\n          }\\n        }\\n      }\\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\\n      output.add(compiled.output);\\n      var topDictTracker = compiled.trackers[0];\\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\\n      output.add(stringIndex);\\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\\n      output.add(globalSubrIndex);\\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\\n        if (cff.encoding.predefined) {\\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\\n        } else {\\n          var encoding = this.compileEncoding(cff.encoding);\\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\\n          output.add(encoding);\\n        }\\n      }\\n      if (cff.charset && cff.topDict.hasName('charset')) {\\n        if (cff.charset.predefined) {\\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\\n        } else {\\n          var charset = this.compileCharset(cff.charset);\\n          topDictTracker.setEntryLocation('charset', [output.length], output);\\n          output.add(charset);\\n        }\\n      }\\n      var charStrings = this.compileCharStrings(cff.charStrings);\\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\\n      output.add(charStrings);\\n      if (cff.isCIDFont) {\\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\\n        output.add(fdSelect);\\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\\n        output.add(compiled.output);\\n        var fontDictTrackers = compiled.trackers;\\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\\n      }\\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\\n      output.add([0]);\\n      return output.data;\\n    },\\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\\n        return this.encodeInteger(value);\\n      }\\n      return this.encodeFloat(value);\\n    },\\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\\n      var value = num.toString();\\n      var m = /\\\\.(\\\\d*?)(?:9{5,20}|0{5,20})\\\\d{0,2}(?:e(.+)|$)/.exec(value);\\n      if (m) {\\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\\n        value = (Math.round(num * epsilon) / epsilon).toString();\\n      }\\n      var nibbles = '';\\n      var i, ii;\\n      for (i = 0, ii = value.length; i < ii; ++i) {\\n        var a = value[i];\\n        if (a === 'e') {\\n          nibbles += value[++i] === '-' ? 'c' : 'b';\\n        } else if (a === '.') {\\n          nibbles += 'a';\\n        } else if (a === '-') {\\n          nibbles += 'e';\\n        } else {\\n          nibbles += a;\\n        }\\n      }\\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\\n      var out = [30];\\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\\n        out.push(parseInt(nibbles.substr(i, 2), 16));\\n      }\\n      return out;\\n    },\\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\\n      var code;\\n      if (value >= -107 && value <= 107) {\\n        code = [value + 139];\\n      } else if (value >= 108 && value <= 1131) {\\n        value = value - 108;\\n        code = [(value >> 8) + 247, value & 0xFF];\\n      } else if (value >= -1131 && value <= -108) {\\n        value = -value - 108;\\n        code = [(value >> 8) + 251, value & 0xFF];\\n      } else if (value >= -32768 && value <= 32767) {\\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\\n      } else {\\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\\n      }\\n      return code;\\n    },\\n    compileHeader: function CFFCompiler_compileHeader(header) {\\n      return [header.major, header.minor, header.hdrSize, header.offSize];\\n    },\\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\\n      var nameIndex = new CFFIndex();\\n      for (var i = 0, ii = names.length; i < ii; ++i) {\\n        var name = names[i];\\n        var length = Math.min(name.length, 127);\\n        var sanitizedName = new Array(length);\\n        for (var j = 0; j < length; j++) {\\n          var char = name[j];\\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\\n            char = '_';\\n          }\\n          sanitizedName[j] = char;\\n        }\\n        sanitizedName = sanitizedName.join('');\\n        if (sanitizedName === '') {\\n          sanitizedName = 'Bad_Font_Name';\\n        }\\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\\n      }\\n      return this.compileIndex(nameIndex);\\n    },\\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\\n      var fontDictTrackers = [];\\n      var fdArrayIndex = new CFFIndex();\\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\\n        var fontDict = dicts[i];\\n        if (removeCidKeys) {\\n          fontDict.removeByName('CIDFontVersion');\\n          fontDict.removeByName('CIDFontRevision');\\n          fontDict.removeByName('CIDFontType');\\n          fontDict.removeByName('CIDCount');\\n          fontDict.removeByName('UIDBase');\\n        }\\n        var fontDictTracker = new CFFOffsetTracker();\\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\\n        fontDictTrackers.push(fontDictTracker);\\n        fdArrayIndex.add(fontDictData);\\n        fontDictTracker.offset(length);\\n      }\\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\\n      return {\\n        trackers: fontDictTrackers,\\n        output: fdArrayIndex\\n      };\\n    },\\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\\n        var fontDict = dicts[i];\\n        var privateDict = fontDict.privateDict;\\n        if (!privateDict || !fontDict.hasName('Private')) {\\n          throw new _util.FormatError('There must be a private dictionary.');\\n        }\\n        var privateDictTracker = new CFFOffsetTracker();\\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\\n        var outputLength = output.length;\\n        privateDictTracker.offset(outputLength);\\n        if (!privateDictData.length) {\\n          outputLength = 0;\\n        }\\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\\n        output.add(privateDictData);\\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\\n          var subrs = this.compileIndex(privateDict.subrsIndex);\\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\\n          output.add(subrs);\\n        }\\n      }\\n    },\\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\\n      var out = [];\\n      var order = dict.order;\\n      for (var i = 0; i < order.length; ++i) {\\n        var key = order[i];\\n        if (!(key in dict.values)) {\\n          continue;\\n        }\\n        var values = dict.values[key];\\n        var types = dict.types[key];\\n        if (!Array.isArray(types)) {\\n          types = [types];\\n        }\\n        if (!Array.isArray(values)) {\\n          values = [values];\\n        }\\n        if (values.length === 0) {\\n          continue;\\n        }\\n        for (var j = 0, jj = types.length; j < jj; ++j) {\\n          var type = types[j];\\n          var value = values[j];\\n          switch (type) {\\n            case 'num':\\n            case 'sid':\\n              out = out.concat(this.encodeNumber(value));\\n              break;\\n            case 'offset':\\n              var name = dict.keyToNameMap[key];\\n              if (!offsetTracker.isTracking(name)) {\\n                offsetTracker.track(name, out.length);\\n              }\\n              out = out.concat([0x1d, 0, 0, 0, 0]);\\n              break;\\n            case 'array':\\n            case 'delta':\\n              out = out.concat(this.encodeNumber(value));\\n              for (var k = 1, kk = values.length; k < kk; ++k) {\\n                out = out.concat(this.encodeNumber(values[k]));\\n              }\\n              break;\\n            default:\\n              throw new _util.FormatError('Unknown data type of ' + type);\\n          }\\n        }\\n        out = out.concat(dict.opcodes[key]);\\n      }\\n      return out;\\n    },\\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\\n      var stringIndex = new CFFIndex();\\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\\n      }\\n      return this.compileIndex(stringIndex);\\n    },\\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\\n      var globalSubrIndex = this.cff.globalSubrIndex;\\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\\n    },\\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\\n      return this.compileIndex(charStrings);\\n    },\\n    compileCharset: function CFFCompiler_compileCharset(charset) {\\n      return this.compileTypedArray(charset.raw);\\n    },\\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\\n      return this.compileTypedArray(encoding.raw);\\n    },\\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\\n      return this.compileTypedArray(fdSelect);\\n    },\\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\\n      var out = [];\\n      for (var i = 0, ii = data.length; i < ii; ++i) {\\n        out[i] = data[i];\\n      }\\n      return out;\\n    },\\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\\n      trackers = trackers || [];\\n      var objects = index.objects;\\n      var count = objects.length;\\n      if (count === 0) {\\n        return [0, 0, 0];\\n      }\\n      var data = [count >> 8 & 0xFF, count & 0xff];\\n      var lastOffset = 1,\\n          i;\\n      for (i = 0; i < count; ++i) {\\n        lastOffset += objects[i].length;\\n      }\\n      var offsetSize;\\n      if (lastOffset < 0x100) {\\n        offsetSize = 1;\\n      } else if (lastOffset < 0x10000) {\\n        offsetSize = 2;\\n      } else if (lastOffset < 0x1000000) {\\n        offsetSize = 3;\\n      } else {\\n        offsetSize = 4;\\n      }\\n      data.push(offsetSize);\\n      var relativeOffset = 1;\\n      for (i = 0; i < count + 1; i++) {\\n        if (offsetSize === 1) {\\n          data.push(relativeOffset & 0xFF);\\n        } else if (offsetSize === 2) {\\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n        } else if (offsetSize === 3) {\\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n        } else {\\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n        }\\n        if (objects[i]) {\\n          relativeOffset += objects[i].length;\\n        }\\n      }\\n      for (i = 0; i < count; i++) {\\n        if (trackers[i]) {\\n          trackers[i].offset(data.length);\\n        }\\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\\n          data.push(objects[i][j]);\\n        }\\n      }\\n      return data;\\n    }\\n  };\\n  return CFFCompiler;\\n}();\\nexports.CFFStandardStrings = CFFStandardStrings;\\nexports.CFFParser = CFFParser;\\nexports.CFF = CFF;\\nexports.CFFHeader = CFFHeader;\\nexports.CFFStrings = CFFStrings;\\nexports.CFFIndex = CFFIndex;\\nexports.CFFCharset = CFFCharset;\\nexports.CFFTopDict = CFFTopDict;\\nexports.CFFPrivateDict = CFFPrivateDict;\\nexports.CFFCompiler = CFFCompiler;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\\nexports.ISOAdobeCharset = ISOAdobeCharset;\\nexports.ExpertCharset = ExpertCharset;\\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar ChunkedStream = function ChunkedStreamClosure() {\\n  function ChunkedStream(length, chunkSize, manager) {\\n    this.bytes = new Uint8Array(length);\\n    this.start = 0;\\n    this.pos = 0;\\n    this.end = length;\\n    this.chunkSize = chunkSize;\\n    this.loadedChunks = [];\\n    this.numChunksLoaded = 0;\\n    this.numChunks = Math.ceil(length / chunkSize);\\n    this.manager = manager;\\n    this.progressiveDataLength = 0;\\n    this.lastSuccessfulEnsureByteChunk = -1;\\n  }\\n  ChunkedStream.prototype = {\\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\\n      var chunks = [];\\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\\n        if (!this.loadedChunks[chunk]) {\\n          chunks.push(chunk);\\n        }\\n      }\\n      return chunks;\\n    },\\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\\n      return [this];\\n    },\\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\\n      return this.numChunksLoaded === this.numChunks;\\n    },\\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\\n      var end = begin + chunk.byteLength;\\n      if (begin % this.chunkSize !== 0) {\\n        throw new Error('Bad begin offset: ' + begin);\\n      }\\n      var length = this.bytes.length;\\n      if (end % this.chunkSize !== 0 && end !== length) {\\n        throw new Error('Bad end offset: ' + end);\\n      }\\n      this.bytes.set(new Uint8Array(chunk), begin);\\n      var chunkSize = this.chunkSize;\\n      var beginChunk = Math.floor(begin / chunkSize);\\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\n      var curChunk;\\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\n        if (!this.loadedChunks[curChunk]) {\\n          this.loadedChunks[curChunk] = true;\\n          ++this.numChunksLoaded;\\n        }\\n      }\\n    },\\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\\n      var position = this.progressiveDataLength;\\n      var beginChunk = Math.floor(position / this.chunkSize);\\n      this.bytes.set(new Uint8Array(data), position);\\n      position += data.byteLength;\\n      this.progressiveDataLength = position;\\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\\n      var curChunk;\\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\n        if (!this.loadedChunks[curChunk]) {\\n          this.loadedChunks[curChunk] = true;\\n          ++this.numChunksLoaded;\\n        }\\n      }\\n    },\\n    ensureByte: function ChunkedStream_ensureByte(pos) {\\n      var chunk = Math.floor(pos / this.chunkSize);\\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\\n        return;\\n      }\\n      if (!this.loadedChunks[chunk]) {\\n        throw new _util.MissingDataException(pos, pos + 1);\\n      }\\n      this.lastSuccessfulEnsureByteChunk = chunk;\\n    },\\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\\n      if (begin >= end) {\\n        return;\\n      }\\n      if (end <= this.progressiveDataLength) {\\n        return;\\n      }\\n      var chunkSize = this.chunkSize;\\n      var beginChunk = Math.floor(begin / chunkSize);\\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n        if (!this.loadedChunks[chunk]) {\\n          throw new _util.MissingDataException(begin, end);\\n        }\\n      }\\n    },\\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\\n      var chunk,\\n          numChunks = this.numChunks;\\n      for (var i = 0; i < numChunks; ++i) {\\n        chunk = (beginChunk + i) % numChunks;\\n        if (!this.loadedChunks[chunk]) {\\n          return chunk;\\n        }\\n      }\\n      return null;\\n    },\\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\\n      return !!this.loadedChunks[chunk];\\n    },\\n    get length() {\\n      return this.end - this.start;\\n    },\\n    get isEmpty() {\\n      return this.length === 0;\\n    },\\n    getByte: function ChunkedStream_getByte() {\\n      var pos = this.pos;\\n      if (pos >= this.end) {\\n        return -1;\\n      }\\n      this.ensureByte(pos);\\n      return this.bytes[this.pos++];\\n    },\\n    getUint16: function ChunkedStream_getUint16() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      if (b0 === -1 || b1 === -1) {\\n        return -1;\\n      }\\n      return (b0 << 8) + b1;\\n    },\\n    getInt32: function ChunkedStream_getInt32() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      var b2 = this.getByte();\\n      var b3 = this.getByte();\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n    },\\n    getBytes: function ChunkedStream_getBytes(length) {\\n      var bytes = this.bytes;\\n      var pos = this.pos;\\n      var strEnd = this.end;\\n      if (!length) {\\n        this.ensureRange(pos, strEnd);\\n        return bytes.subarray(pos, strEnd);\\n      }\\n      var end = pos + length;\\n      if (end > strEnd) {\\n        end = strEnd;\\n      }\\n      this.ensureRange(pos, end);\\n      this.pos = end;\\n      return bytes.subarray(pos, end);\\n    },\\n    peekByte: function ChunkedStream_peekByte() {\\n      var peekedByte = this.getByte();\\n      this.pos--;\\n      return peekedByte;\\n    },\\n    peekBytes: function ChunkedStream_peekBytes(length) {\\n      var bytes = this.getBytes(length);\\n      this.pos -= bytes.length;\\n      return bytes;\\n    },\\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\\n      this.ensureRange(begin, end);\\n      return this.bytes.subarray(begin, end);\\n    },\\n    skip: function ChunkedStream_skip(n) {\\n      if (!n) {\\n        n = 1;\\n      }\\n      this.pos += n;\\n    },\\n    reset: function ChunkedStream_reset() {\\n      this.pos = this.start;\\n    },\\n    moveStart: function ChunkedStream_moveStart() {\\n      this.start = this.pos;\\n    },\\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\\n      this.ensureRange(start, start + length);\\n      function ChunkedStreamSubstream() {}\\n      ChunkedStreamSubstream.prototype = Object.create(this);\\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\\n        var chunkSize = this.chunkSize;\\n        var beginChunk = Math.floor(this.start / chunkSize);\\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\\n        var missingChunks = [];\\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n          if (!this.loadedChunks[chunk]) {\\n            missingChunks.push(chunk);\\n          }\\n        }\\n        return missingChunks;\\n      };\\n      var subStream = new ChunkedStreamSubstream();\\n      subStream.pos = subStream.start = start;\\n      subStream.end = start + length || this.end;\\n      subStream.dict = dict;\\n      return subStream;\\n    }\\n  };\\n  return ChunkedStream;\\n}();\\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\\n  function ChunkedStreamManager(pdfNetworkStream, args) {\\n    var chunkSize = args.rangeChunkSize;\\n    var length = args.length;\\n    this.stream = new ChunkedStream(length, chunkSize, this);\\n    this.length = length;\\n    this.chunkSize = chunkSize;\\n    this.pdfNetworkStream = pdfNetworkStream;\\n    this.url = args.url;\\n    this.disableAutoFetch = args.disableAutoFetch;\\n    this.msgHandler = args.msgHandler;\\n    this.currRequestId = 0;\\n    this.chunksNeededByRequest = Object.create(null);\\n    this.requestsByChunk = Object.create(null);\\n    this.promisesByRequest = Object.create(null);\\n    this.progressiveDataLength = 0;\\n    this.aborted = false;\\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\\n  }\\n  ChunkedStreamManager.prototype = {\\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\\n      return this._loadedStreamCapability.promise;\\n    },\\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\\n      var _this = this;\\n\\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\\n      if (!rangeReader.isStreamingSupported) {\\n        rangeReader.onProgress = this.onProgress.bind(this);\\n      }\\n      var chunks = [],\\n          loaded = 0;\\n      var manager = this;\\n      var promise = new Promise(function (resolve, reject) {\\n        var readChunk = function readChunk(chunk) {\\n          try {\\n            if (!chunk.done) {\\n              var data = chunk.value;\\n              chunks.push(data);\\n              loaded += (0, _util.arrayByteLength)(data);\\n              if (rangeReader.isStreamingSupported) {\\n                manager.onProgress({ loaded: loaded });\\n              }\\n              rangeReader.read().then(readChunk, reject);\\n              return;\\n            }\\n            var chunkData = (0, _util.arraysToBytes)(chunks);\\n            chunks = null;\\n            resolve(chunkData);\\n          } catch (e) {\\n            reject(e);\\n          }\\n        };\\n        rangeReader.read().then(readChunk, reject);\\n      });\\n      promise.then(function (data) {\\n        if (_this.aborted) {\\n          return;\\n        }\\n        _this.onReceiveData({\\n          chunk: data,\\n          begin: begin\\n        });\\n      });\\n    },\\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\\n      var missingChunks = this.stream.getMissingChunks();\\n      this._requestChunks(missingChunks);\\n      return this._loadedStreamCapability.promise;\\n    },\\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\\n      var requestId = this.currRequestId++;\\n      var i, ii;\\n      var chunksNeeded = Object.create(null);\\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\\n      for (i = 0, ii = chunks.length; i < ii; i++) {\\n        if (!this.stream.hasChunk(chunks[i])) {\\n          chunksNeeded[chunks[i]] = true;\\n        }\\n      }\\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\\n        return Promise.resolve();\\n      }\\n      var capability = (0, _util.createPromiseCapability)();\\n      this.promisesByRequest[requestId] = capability;\\n      var chunksToRequest = [];\\n      for (var chunk in chunksNeeded) {\\n        chunk = chunk | 0;\\n        if (!(chunk in this.requestsByChunk)) {\\n          this.requestsByChunk[chunk] = [];\\n          chunksToRequest.push(chunk);\\n        }\\n        this.requestsByChunk[chunk].push(requestId);\\n      }\\n      if (!chunksToRequest.length) {\\n        return capability.promise;\\n      }\\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\\n        var groupedChunk = groupedChunksToRequest[i];\\n        var begin = groupedChunk.beginChunk * this.chunkSize;\\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\\n        this.sendRequest(begin, end);\\n      }\\n      return capability.promise;\\n    },\\n    getStream: function ChunkedStreamManager_getStream() {\\n      return this.stream;\\n    },\\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\\n      end = Math.min(end, this.length);\\n      var beginChunk = this.getBeginChunk(begin);\\n      var endChunk = this.getEndChunk(end);\\n      var chunks = [];\\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n        chunks.push(chunk);\\n      }\\n      return this._requestChunks(chunks);\\n    },\\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\\n      ranges = ranges || [];\\n      var chunksToRequest = [];\\n      for (var i = 0; i < ranges.length; i++) {\\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\\n        var endChunk = this.getEndChunk(ranges[i].end);\\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n          if (chunksToRequest.indexOf(chunk) < 0) {\\n            chunksToRequest.push(chunk);\\n          }\\n        }\\n      }\\n      chunksToRequest.sort(function (a, b) {\\n        return a - b;\\n      });\\n      return this._requestChunks(chunksToRequest);\\n    },\\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\\n      var groupedChunks = [];\\n      var beginChunk = -1;\\n      var prevChunk = -1;\\n      for (var i = 0; i < chunks.length; ++i) {\\n        var chunk = chunks[i];\\n        if (beginChunk < 0) {\\n          beginChunk = chunk;\\n        }\\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\\n          groupedChunks.push({\\n            beginChunk: beginChunk,\\n            endChunk: prevChunk + 1\\n          });\\n          beginChunk = chunk;\\n        }\\n        if (i + 1 === chunks.length) {\\n          groupedChunks.push({\\n            beginChunk: beginChunk,\\n            endChunk: chunk + 1\\n          });\\n        }\\n        prevChunk = chunk;\\n      }\\n      return groupedChunks;\\n    },\\n    onProgress: function ChunkedStreamManager_onProgress(args) {\\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\\n      this.msgHandler.send('DocProgress', {\\n        loaded: bytesLoaded,\\n        total: this.length\\n      });\\n    },\\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\\n      var chunk = args.chunk;\\n      var isProgressive = args.begin === undefined;\\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\\n      var end = begin + chunk.byteLength;\\n      var beginChunk = Math.floor(begin / this.chunkSize);\\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\\n      if (isProgressive) {\\n        this.stream.onReceiveProgressiveData(chunk);\\n        this.progressiveDataLength = end;\\n      } else {\\n        this.stream.onReceiveData(begin, chunk);\\n      }\\n      if (this.stream.allChunksLoaded()) {\\n        this._loadedStreamCapability.resolve(this.stream);\\n      }\\n      var loadedRequests = [];\\n      var i, requestId;\\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\\n        var requestIds = this.requestsByChunk[chunk] || [];\\n        delete this.requestsByChunk[chunk];\\n        for (i = 0; i < requestIds.length; ++i) {\\n          requestId = requestIds[i];\\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\\n          if (chunk in chunksNeeded) {\\n            delete chunksNeeded[chunk];\\n          }\\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\\n            continue;\\n          }\\n          loadedRequests.push(requestId);\\n        }\\n      }\\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\\n        var nextEmptyChunk;\\n        if (this.stream.numChunksLoaded === 1) {\\n          var lastChunk = this.stream.numChunks - 1;\\n          if (!this.stream.hasChunk(lastChunk)) {\\n            nextEmptyChunk = lastChunk;\\n          }\\n        } else {\\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\\n        }\\n        if (Number.isInteger(nextEmptyChunk)) {\\n          this._requestChunks([nextEmptyChunk]);\\n        }\\n      }\\n      for (i = 0; i < loadedRequests.length; ++i) {\\n        requestId = loadedRequests[i];\\n        var capability = this.promisesByRequest[requestId];\\n        delete this.promisesByRequest[requestId];\\n        capability.resolve();\\n      }\\n      this.msgHandler.send('DocProgress', {\\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\\n        total: this.length\\n      });\\n    },\\n    onError: function ChunkedStreamManager_onError(err) {\\n      this._loadedStreamCapability.reject(err);\\n    },\\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\\n      var chunk = Math.floor(begin / this.chunkSize);\\n      return chunk;\\n    },\\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\\n      return chunk;\\n    },\\n    abort: function ChunkedStreamManager_abort() {\\n      this.aborted = true;\\n      if (this.pdfNetworkStream) {\\n        this.pdfNetworkStream.cancelAllRequests('abort');\\n      }\\n      for (var requestId in this.promisesByRequest) {\\n        var capability = this.promisesByRequest[requestId];\\n        capability.reject(new Error('Request was aborted'));\\n      }\\n    }\\n  };\\n  return ChunkedStreamManager;\\n}();\\nexports.ChunkedStream = ChunkedStream;\\nexports.ChunkedStreamManager = ChunkedStreamManager;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _parser = require('./parser');\\n\\nvar _stream = require('./stream');\\n\\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\\nvar CMap = function CMapClosure() {\\n  function CMap(builtInCMap) {\\n    this.codespaceRanges = [[], [], [], []];\\n    this.numCodespaceRanges = 0;\\n    this._map = [];\\n    this.name = '';\\n    this.vertical = false;\\n    this.useCMap = null;\\n    this.builtInCMap = builtInCMap;\\n  }\\n  CMap.prototype = {\\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\\n      this.codespaceRanges[n - 1].push(low, high);\\n      this.numCodespaceRanges++;\\n    },\\n    mapCidRange: function mapCidRange(low, high, dstLow) {\\n      while (low <= high) {\\n        this._map[low++] = dstLow++;\\n      }\\n    },\\n    mapBfRange: function mapBfRange(low, high, dstLow) {\\n      var lastByte = dstLow.length - 1;\\n      while (low <= high) {\\n        this._map[low++] = dstLow;\\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\\n      }\\n    },\\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\\n      var i = 0,\\n          ii = array.length;\\n      while (low <= high && i < ii) {\\n        this._map[low] = array[i++];\\n        ++low;\\n      }\\n    },\\n    mapOne: function mapOne(src, dst) {\\n      this._map[src] = dst;\\n    },\\n    lookup: function lookup(code) {\\n      return this._map[code];\\n    },\\n    contains: function contains(code) {\\n      return this._map[code] !== undefined;\\n    },\\n    forEach: function forEach(callback) {\\n      var map = this._map;\\n      var length = map.length;\\n      if (length <= 0x10000) {\\n        for (var i = 0; i < length; i++) {\\n          if (map[i] !== undefined) {\\n            callback(i, map[i]);\\n          }\\n        }\\n      } else {\\n        for (var _i in map) {\\n          callback(_i, map[_i]);\\n        }\\n      }\\n    },\\n    charCodeOf: function charCodeOf(value) {\\n      var map = this._map;\\n      if (map.length <= 0x10000) {\\n        return map.indexOf(value);\\n      }\\n      for (var charCode in map) {\\n        if (map[charCode] === value) {\\n          return charCode | 0;\\n        }\\n      }\\n      return -1;\\n    },\\n    getMap: function getMap() {\\n      return this._map;\\n    },\\n    readCharCode: function readCharCode(str, offset, out) {\\n      var c = 0;\\n      var codespaceRanges = this.codespaceRanges;\\n      var codespaceRangesLen = this.codespaceRanges.length;\\n      for (var n = 0; n < codespaceRangesLen; n++) {\\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\\n        var codespaceRange = codespaceRanges[n];\\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\\n          var low = codespaceRange[k++];\\n          var high = codespaceRange[k++];\\n          if (c >= low && c <= high) {\\n            out.charcode = c;\\n            out.length = n + 1;\\n            return;\\n          }\\n        }\\n      }\\n      out.charcode = 0;\\n      out.length = 1;\\n    },\\n\\n    get length() {\\n      return this._map.length;\\n    },\\n    get isIdentityCMap() {\\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\\n        return false;\\n      }\\n      if (this._map.length !== 0x10000) {\\n        return false;\\n      }\\n      for (var i = 0; i < 0x10000; i++) {\\n        if (this._map[i] !== i) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }\\n  };\\n  return CMap;\\n}();\\nvar IdentityCMap = function IdentityCMapClosure() {\\n  function IdentityCMap(vertical, n) {\\n    CMap.call(this);\\n    this.vertical = vertical;\\n    this.addCodespaceRange(n, 0, 0xffff);\\n  }\\n  _util.Util.inherit(IdentityCMap, CMap, {});\\n  IdentityCMap.prototype = {\\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\\n    mapCidRange: function mapCidRange(low, high, dstLow) {\\n      (0, _util.unreachable)('should not call mapCidRange');\\n    },\\n    mapBfRange: function mapBfRange(low, high, dstLow) {\\n      (0, _util.unreachable)('should not call mapBfRange');\\n    },\\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\\n    },\\n    mapOne: function mapOne(src, dst) {\\n      (0, _util.unreachable)('should not call mapCidOne');\\n    },\\n    lookup: function lookup(code) {\\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\\n    },\\n    contains: function contains(code) {\\n      return Number.isInteger(code) && code <= 0xffff;\\n    },\\n    forEach: function forEach(callback) {\\n      for (var i = 0; i <= 0xffff; i++) {\\n        callback(i, i);\\n      }\\n    },\\n    charCodeOf: function charCodeOf(value) {\\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\\n    },\\n    getMap: function getMap() {\\n      var map = new Array(0x10000);\\n      for (var i = 0; i <= 0xffff; i++) {\\n        map[i] = i;\\n      }\\n      return map;\\n    },\\n\\n    readCharCode: CMap.prototype.readCharCode,\\n    get length() {\\n      return 0x10000;\\n    },\\n    get isIdentityCMap() {\\n      (0, _util.unreachable)('should not access .isIdentityCMap');\\n    }\\n  };\\n  return IdentityCMap;\\n}();\\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\\n  function hexToInt(a, size) {\\n    var n = 0;\\n    for (var i = 0; i <= size; i++) {\\n      n = n << 8 | a[i];\\n    }\\n    return n >>> 0;\\n  }\\n  function hexToStr(a, size) {\\n    if (size === 1) {\\n      return String.fromCharCode(a[0], a[1]);\\n    }\\n    if (size === 3) {\\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\\n    }\\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\\n  }\\n  function addHex(a, b, size) {\\n    var c = 0;\\n    for (var i = size; i >= 0; i--) {\\n      c += a[i] + b[i];\\n      a[i] = c & 255;\\n      c >>= 8;\\n    }\\n  }\\n  function incHex(a, size) {\\n    var c = 1;\\n    for (var i = size; i >= 0 && c > 0; i--) {\\n      c += a[i];\\n      a[i] = c & 255;\\n      c >>= 8;\\n    }\\n  }\\n  var MAX_NUM_SIZE = 16;\\n  var MAX_ENCODED_NUM_SIZE = 19;\\n  function BinaryCMapStream(data) {\\n    this.buffer = data;\\n    this.pos = 0;\\n    this.end = data.length;\\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\\n  }\\n  BinaryCMapStream.prototype = {\\n    readByte: function readByte() {\\n      if (this.pos >= this.end) {\\n        return -1;\\n      }\\n      return this.buffer[this.pos++];\\n    },\\n    readNumber: function readNumber() {\\n      var n = 0;\\n      var last;\\n      do {\\n        var b = this.readByte();\\n        if (b < 0) {\\n          throw new _util.FormatError('unexpected EOF in bcmap');\\n        }\\n        last = !(b & 0x80);\\n        n = n << 7 | b & 0x7F;\\n      } while (!last);\\n      return n;\\n    },\\n    readSigned: function readSigned() {\\n      var n = this.readNumber();\\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\\n    },\\n    readHex: function readHex(num, size) {\\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\\n      this.pos += size + 1;\\n    },\\n    readHexNumber: function readHexNumber(num, size) {\\n      var last;\\n      var stack = this.tmpBuf,\\n          sp = 0;\\n      do {\\n        var b = this.readByte();\\n        if (b < 0) {\\n          throw new _util.FormatError('unexpected EOF in bcmap');\\n        }\\n        last = !(b & 0x80);\\n        stack[sp++] = b & 0x7F;\\n      } while (!last);\\n      var i = size,\\n          buffer = 0,\\n          bufferSize = 0;\\n      while (i >= 0) {\\n        while (bufferSize < 8 && stack.length > 0) {\\n          buffer = stack[--sp] << bufferSize | buffer;\\n          bufferSize += 7;\\n        }\\n        num[i] = buffer & 255;\\n        i--;\\n        buffer >>= 8;\\n        bufferSize -= 8;\\n      }\\n    },\\n    readHexSigned: function readHexSigned(num, size) {\\n      this.readHexNumber(num, size);\\n      var sign = num[size] & 1 ? 255 : 0;\\n      var c = 0;\\n      for (var i = 0; i <= size; i++) {\\n        c = (c & 1) << 8 | num[i];\\n        num[i] = c >> 1 ^ sign;\\n      }\\n    },\\n    readString: function readString() {\\n      var len = this.readNumber();\\n      var s = '';\\n      for (var i = 0; i < len; i++) {\\n        s += String.fromCharCode(this.readNumber());\\n      }\\n      return s;\\n    }\\n  };\\n  function processBinaryCMap(data, cMap, extend) {\\n    return new Promise(function (resolve, reject) {\\n      var stream = new BinaryCMapStream(data);\\n      var header = stream.readByte();\\n      cMap.vertical = !!(header & 1);\\n      var useCMap = null;\\n      var start = new Uint8Array(MAX_NUM_SIZE);\\n      var end = new Uint8Array(MAX_NUM_SIZE);\\n      var char = new Uint8Array(MAX_NUM_SIZE);\\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\\n      var code;\\n      var b;\\n      while ((b = stream.readByte()) >= 0) {\\n        var type = b >> 5;\\n        if (type === 7) {\\n          switch (b & 0x1F) {\\n            case 0:\\n              stream.readString();\\n              break;\\n            case 1:\\n              useCMap = stream.readString();\\n              break;\\n          }\\n          continue;\\n        }\\n        var sequence = !!(b & 0x10);\\n        var dataSize = b & 15;\\n        if (dataSize + 1 > MAX_NUM_SIZE) {\\n          throw new Error('processBinaryCMap: Invalid dataSize.');\\n        }\\n        var ucs2DataSize = 1;\\n        var subitemsCount = stream.readNumber();\\n        var i;\\n        switch (type) {\\n          case 0:\\n            stream.readHex(start, dataSize);\\n            stream.readHexNumber(end, dataSize);\\n            addHex(end, start, dataSize);\\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, dataSize);\\n              stream.readHexNumber(start, dataSize);\\n              addHex(start, end, dataSize);\\n              stream.readHexNumber(end, dataSize);\\n              addHex(end, start, dataSize);\\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\n            }\\n            break;\\n          case 1:\\n            stream.readHex(start, dataSize);\\n            stream.readHexNumber(end, dataSize);\\n            addHex(end, start, dataSize);\\n            stream.readNumber();\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, dataSize);\\n              stream.readHexNumber(start, dataSize);\\n              addHex(start, end, dataSize);\\n              stream.readHexNumber(end, dataSize);\\n              addHex(end, start, dataSize);\\n              stream.readNumber();\\n            }\\n            break;\\n          case 2:\\n            stream.readHex(char, dataSize);\\n            code = stream.readNumber();\\n            cMap.mapOne(hexToInt(char, dataSize), code);\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(char, dataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(tmp, dataSize);\\n                addHex(char, tmp, dataSize);\\n              }\\n              code = stream.readSigned() + (code + 1);\\n              cMap.mapOne(hexToInt(char, dataSize), code);\\n            }\\n            break;\\n          case 3:\\n            stream.readHex(start, dataSize);\\n            stream.readHexNumber(end, dataSize);\\n            addHex(end, start, dataSize);\\n            code = stream.readNumber();\\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, dataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(start, dataSize);\\n                addHex(start, end, dataSize);\\n              } else {\\n                start.set(end);\\n              }\\n              stream.readHexNumber(end, dataSize);\\n              addHex(end, start, dataSize);\\n              code = stream.readNumber();\\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\n            }\\n            break;\\n          case 4:\\n            stream.readHex(char, ucs2DataSize);\\n            stream.readHex(charCode, dataSize);\\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(char, ucs2DataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(tmp, ucs2DataSize);\\n                addHex(char, tmp, ucs2DataSize);\\n              }\\n              incHex(charCode, dataSize);\\n              stream.readHexSigned(tmp, dataSize);\\n              addHex(charCode, tmp, dataSize);\\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\n            }\\n            break;\\n          case 5:\\n            stream.readHex(start, ucs2DataSize);\\n            stream.readHexNumber(end, ucs2DataSize);\\n            addHex(end, start, ucs2DataSize);\\n            stream.readHex(charCode, dataSize);\\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, ucs2DataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(start, ucs2DataSize);\\n                addHex(start, end, ucs2DataSize);\\n              } else {\\n                start.set(end);\\n              }\\n              stream.readHexNumber(end, ucs2DataSize);\\n              addHex(end, start, ucs2DataSize);\\n              stream.readHex(charCode, dataSize);\\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\n            }\\n            break;\\n          default:\\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\\n            return;\\n        }\\n      }\\n      if (useCMap) {\\n        resolve(extend(useCMap));\\n        return;\\n      }\\n      resolve(cMap);\\n    });\\n  }\\n  function BinaryCMapReader() {}\\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\\n  return BinaryCMapReader;\\n}();\\nvar CMapFactory = function CMapFactoryClosure() {\\n  function strToInt(str) {\\n    var a = 0;\\n    for (var i = 0; i < str.length; i++) {\\n      a = a << 8 | str.charCodeAt(i);\\n    }\\n    return a >>> 0;\\n  }\\n  function expectString(obj) {\\n    if (!(0, _util.isString)(obj)) {\\n      throw new _util.FormatError('Malformed CMap: expected string.');\\n    }\\n  }\\n  function expectInt(obj) {\\n    if (!Number.isInteger(obj)) {\\n      throw new _util.FormatError('Malformed CMap: expected int.');\\n    }\\n  }\\n  function parseBfChar(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var src = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectString(obj);\\n      var dst = obj;\\n      cMap.mapOne(src, dst);\\n    }\\n  }\\n  function parseBfRange(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var low = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectString(obj);\\n      var high = strToInt(obj);\\n      obj = lexer.getObj();\\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\\n        cMap.mapBfRange(low, high, dstLow);\\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\\n        obj = lexer.getObj();\\n        var array = [];\\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\\n          array.push(obj);\\n          obj = lexer.getObj();\\n        }\\n        cMap.mapBfRangeToArray(low, high, array);\\n      } else {\\n        break;\\n      }\\n    }\\n    throw new _util.FormatError('Invalid bf range.');\\n  }\\n  function parseCidChar(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var src = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectInt(obj);\\n      var dst = obj;\\n      cMap.mapOne(src, dst);\\n    }\\n  }\\n  function parseCidRange(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var low = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectString(obj);\\n      var high = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectInt(obj);\\n      var dstLow = obj;\\n      cMap.mapCidRange(low, high, dstLow);\\n    }\\n  }\\n  function parseCodespaceRange(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\\n        return;\\n      }\\n      if (!(0, _util.isString)(obj)) {\\n        break;\\n      }\\n      var low = strToInt(obj);\\n      obj = lexer.getObj();\\n      if (!(0, _util.isString)(obj)) {\\n        break;\\n      }\\n      var high = strToInt(obj);\\n      cMap.addCodespaceRange(obj.length, low, high);\\n    }\\n    throw new _util.FormatError('Invalid codespace range.');\\n  }\\n  function parseWMode(cMap, lexer) {\\n    var obj = lexer.getObj();\\n    if (Number.isInteger(obj)) {\\n      cMap.vertical = !!obj;\\n    }\\n  }\\n  function parseCMapName(cMap, lexer) {\\n    var obj = lexer.getObj();\\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\\n      cMap.name = obj.name;\\n    }\\n  }\\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\\n    var previous;\\n    var embededUseCMap;\\n    objLoop: while (true) {\\n      try {\\n        var obj = lexer.getObj();\\n        if ((0, _primitives.isEOF)(obj)) {\\n          break;\\n        } else if ((0, _primitives.isName)(obj)) {\\n          if (obj.name === 'WMode') {\\n            parseWMode(cMap, lexer);\\n          } else if (obj.name === 'CMapName') {\\n            parseCMapName(cMap, lexer);\\n          }\\n          previous = obj;\\n        } else if ((0, _primitives.isCmd)(obj)) {\\n          switch (obj.cmd) {\\n            case 'endcmap':\\n              break objLoop;\\n            case 'usecmap':\\n              if ((0, _primitives.isName)(previous)) {\\n                embededUseCMap = previous.name;\\n              }\\n              break;\\n            case 'begincodespacerange':\\n              parseCodespaceRange(cMap, lexer);\\n              break;\\n            case 'beginbfchar':\\n              parseBfChar(cMap, lexer);\\n              break;\\n            case 'begincidchar':\\n              parseCidChar(cMap, lexer);\\n              break;\\n            case 'beginbfrange':\\n              parseBfRange(cMap, lexer);\\n              break;\\n            case 'begincidrange':\\n              parseCidRange(cMap, lexer);\\n              break;\\n          }\\n        }\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Invalid cMap data: ' + ex);\\n        continue;\\n      }\\n    }\\n    if (!useCMap && embededUseCMap) {\\n      useCMap = embededUseCMap;\\n    }\\n    if (useCMap) {\\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\n    }\\n    return Promise.resolve(cMap);\\n  }\\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\\n      cMap.useCMap = newCMap;\\n      if (cMap.numCodespaceRanges === 0) {\\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\\n        }\\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\\n      }\\n      cMap.useCMap.forEach(function (key, value) {\\n        if (!cMap.contains(key)) {\\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\\n        }\\n      });\\n      return cMap;\\n    });\\n  }\\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\\n    if (name === 'Identity-H') {\\n      return Promise.resolve(new IdentityCMap(false, 2));\\n    } else if (name === 'Identity-V') {\\n      return Promise.resolve(new IdentityCMap(true, 2));\\n    }\\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\\n    }\\n    if (!fetchBuiltInCMap) {\\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\\n    }\\n    return fetchBuiltInCMap(name).then(function (data) {\\n      var cMapData = data.cMapData,\\n          compressionType = data.compressionType;\\n      var cMap = new CMap(true);\\n      if (compressionType === _util.CMapCompressionType.BINARY) {\\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\n        });\\n      }\\n      if (compressionType === _util.CMapCompressionType.NONE) {\\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\\n      }\\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\\n    });\\n  }\\n  return {\\n    create: function create(params) {\\n      var encoding = params.encoding;\\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\\n      var useCMap = params.useCMap;\\n      if ((0, _primitives.isName)(encoding)) {\\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\\n      } else if ((0, _primitives.isStream)(encoding)) {\\n        var cMap = new CMap();\\n        var lexer = new _parser.Lexer(encoding);\\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\\n          if (parsedCMap.isIdentityCMap) {\\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\\n          }\\n          return parsedCMap;\\n        });\\n      }\\n      return Promise.reject(new Error('Encoding required.'));\\n    }\\n  };\\n}();\\nexports.CMap = CMap;\\nexports.IdentityCMap = IdentityCMap;\\nexports.CMapFactory = CMapFactory;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ColorSpace = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar ColorSpace = function ColorSpaceClosure() {\\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\\n    var COMPONENTS = 3;\\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\\n    var xRatio = w1 / w2;\\n    var yRatio = h1 / h2;\\n    var i,\\n        j,\\n        py,\\n        newIndex = 0,\\n        oldIndex;\\n    var xScaled = new Uint16Array(w2);\\n    var w1Scanline = w1 * COMPONENTS;\\n    for (i = 0; i < w2; i++) {\\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\\n    }\\n    for (i = 0; i < h2; i++) {\\n      py = Math.floor(i * yRatio) * w1Scanline;\\n      for (j = 0; j < w2; j++) {\\n        oldIndex = py + xScaled[j];\\n        dest[newIndex++] = src[oldIndex++];\\n        dest[newIndex++] = src[oldIndex++];\\n        dest[newIndex++] = src[oldIndex++];\\n        newIndex += alpha01;\\n      }\\n    }\\n  }\\n  function ColorSpace() {\\n    (0, _util.unreachable)('should not call ColorSpace constructor');\\n  }\\n  ColorSpace.prototype = {\\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\\n      var rgb = new Uint8Array(3);\\n      this.getRgbItem(src, srcOffset, rgb, 0);\\n      return rgb;\\n    },\\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\\n    },\\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\\n    },\\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\\n    },\\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\\n      return false;\\n    },\\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\\n      var count = originalWidth * originalHeight;\\n      var rgbBuf = null;\\n      var numComponentColors = 1 << bpc;\\n      var needsResizing = originalHeight !== height || originalWidth !== width;\\n      var i, ii;\\n      if (this.isPassthrough(bpc)) {\\n        rgbBuf = comps;\\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\\n        var key;\\n        for (i = 0; i < numComponentColors; i++) {\\n          allColors[i] = i;\\n        }\\n        var colorMap = new Uint8Array(numComponentColors * 3);\\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\\n        var destPos, rgbPos;\\n        if (!needsResizing) {\\n          destPos = 0;\\n          for (i = 0; i < count; ++i) {\\n            key = comps[i] * 3;\\n            dest[destPos++] = colorMap[key];\\n            dest[destPos++] = colorMap[key + 1];\\n            dest[destPos++] = colorMap[key + 2];\\n            destPos += alpha01;\\n          }\\n        } else {\\n          rgbBuf = new Uint8Array(count * 3);\\n          rgbPos = 0;\\n          for (i = 0; i < count; ++i) {\\n            key = comps[i] * 3;\\n            rgbBuf[rgbPos++] = colorMap[key];\\n            rgbBuf[rgbPos++] = colorMap[key + 1];\\n            rgbBuf[rgbPos++] = colorMap[key + 2];\\n          }\\n        }\\n      } else {\\n        if (!needsResizing) {\\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\\n        } else {\\n          rgbBuf = new Uint8Array(count * 3);\\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\\n        }\\n      }\\n      if (rgbBuf) {\\n        if (needsResizing) {\\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\\n        } else {\\n          rgbPos = 0;\\n          destPos = 0;\\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\\n            dest[destPos++] = rgbBuf[rgbPos++];\\n            dest[destPos++] = rgbBuf[rgbPos++];\\n            dest[destPos++] = rgbBuf[rgbPos++];\\n            destPos += alpha01;\\n          }\\n        }\\n      }\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\\n  };\\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\\n    var name = Array.isArray(IR) ? IR[0] : IR;\\n    var whitePoint, blackPoint, gamma;\\n    switch (name) {\\n      case 'DeviceGrayCS':\\n        return this.singletons.gray;\\n      case 'DeviceRgbCS':\\n        return this.singletons.rgb;\\n      case 'DeviceCmykCS':\\n        return this.singletons.cmyk;\\n      case 'CalGrayCS':\\n        whitePoint = IR[1];\\n        blackPoint = IR[2];\\n        gamma = IR[3];\\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\\n      case 'CalRGBCS':\\n        whitePoint = IR[1];\\n        blackPoint = IR[2];\\n        gamma = IR[3];\\n        var matrix = IR[4];\\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\\n      case 'PatternCS':\\n        var basePatternCS = IR[1];\\n        if (basePatternCS) {\\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\\n        }\\n        return new PatternCS(basePatternCS);\\n      case 'IndexedCS':\\n        var baseIndexedCS = IR[1];\\n        var hiVal = IR[2];\\n        var lookup = IR[3];\\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\\n      case 'AlternateCS':\\n        var numComps = IR[1];\\n        var alt = IR[2];\\n        var tintFnIR = IR[3];\\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\\n      case 'LabCS':\\n        whitePoint = IR[1];\\n        blackPoint = IR[2];\\n        var range = IR[3];\\n        return new LabCS(whitePoint, blackPoint, range);\\n      default:\\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\\n    }\\n  };\\n  ColorSpace.parseToIR = function (cs, xref) {\\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\\n    var pdfFunctionFactory = arguments[3];\\n\\n    cs = xref.fetchIfRef(cs);\\n    if ((0, _primitives.isName)(cs)) {\\n      switch (cs.name) {\\n        case 'DeviceGray':\\n        case 'G':\\n          return 'DeviceGrayCS';\\n        case 'DeviceRGB':\\n        case 'RGB':\\n          return 'DeviceRgbCS';\\n        case 'DeviceCMYK':\\n        case 'CMYK':\\n          return 'DeviceCmykCS';\\n        case 'Pattern':\\n          return ['PatternCS', null];\\n        default:\\n          if ((0, _primitives.isDict)(res)) {\\n            var colorSpaces = res.get('ColorSpace');\\n            if ((0, _primitives.isDict)(colorSpaces)) {\\n              var resCS = colorSpaces.get(cs.name);\\n              if (resCS) {\\n                if ((0, _primitives.isName)(resCS)) {\\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\\n                }\\n                cs = resCS;\\n                break;\\n              }\\n            }\\n          }\\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\\n      }\\n    }\\n    if (Array.isArray(cs)) {\\n      var mode = xref.fetchIfRef(cs[0]).name;\\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\\n      switch (mode) {\\n        case 'DeviceGray':\\n        case 'G':\\n          return 'DeviceGrayCS';\\n        case 'DeviceRGB':\\n        case 'RGB':\\n          return 'DeviceRgbCS';\\n        case 'DeviceCMYK':\\n        case 'CMYK':\\n          return 'DeviceCmykCS';\\n        case 'CalGray':\\n          params = xref.fetchIfRef(cs[1]);\\n          whitePoint = params.getArray('WhitePoint');\\n          blackPoint = params.getArray('BlackPoint');\\n          gamma = params.get('Gamma');\\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\\n        case 'CalRGB':\\n          params = xref.fetchIfRef(cs[1]);\\n          whitePoint = params.getArray('WhitePoint');\\n          blackPoint = params.getArray('BlackPoint');\\n          gamma = params.getArray('Gamma');\\n          var matrix = params.getArray('Matrix');\\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\\n        case 'ICCBased':\\n          var stream = xref.fetchIfRef(cs[1]);\\n          var dict = stream.dict;\\n          numComps = dict.get('N');\\n          alt = dict.get('Alternate');\\n          if (alt) {\\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\\n            if (altCS.numComps === numComps) {\\n              return altIR;\\n            }\\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\\n          }\\n          if (numComps === 1) {\\n            return 'DeviceGrayCS';\\n          } else if (numComps === 3) {\\n            return 'DeviceRgbCS';\\n          } else if (numComps === 4) {\\n            return 'DeviceCmykCS';\\n          }\\n          break;\\n        case 'Pattern':\\n          var basePatternCS = cs[1] || null;\\n          if (basePatternCS) {\\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\\n          }\\n          return ['PatternCS', basePatternCS];\\n        case 'Indexed':\\n        case 'I':\\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\\n          var lookup = xref.fetchIfRef(cs[3]);\\n          if ((0, _primitives.isStream)(lookup)) {\\n            lookup = lookup.getBytes();\\n          }\\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\\n        case 'Separation':\\n        case 'DeviceN':\\n          var name = xref.fetchIfRef(cs[1]);\\n          numComps = Array.isArray(name) ? name.length : 1;\\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\\n          return ['AlternateCS', numComps, alt, tintFnIR];\\n        case 'Lab':\\n          params = xref.fetchIfRef(cs[1]);\\n          whitePoint = params.getArray('WhitePoint');\\n          blackPoint = params.getArray('BlackPoint');\\n          var range = params.getArray('Range');\\n          return ['LabCS', whitePoint, blackPoint, range];\\n        default:\\n          throw new _util.FormatError('unimplemented color space object \\\"' + mode + '\\\"');\\n      }\\n    }\\n    throw new _util.FormatError('unrecognized color space object: \\\"' + cs + '\\\"');\\n  };\\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\\n    if (!Array.isArray(decode)) {\\n      return true;\\n    }\\n    if (n * 2 !== decode.length) {\\n      (0, _util.warn)('The decode map is not the correct length');\\n      return true;\\n    }\\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  };\\n  ColorSpace.singletons = {\\n    get gray() {\\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\\n    },\\n    get rgb() {\\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\\n    },\\n    get cmyk() {\\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\\n    }\\n  };\\n  return ColorSpace;\\n}();\\nvar AlternateCS = function AlternateCSClosure() {\\n  function AlternateCS(numComps, base, tintFn) {\\n    this.name = 'Alternate';\\n    this.numComps = numComps;\\n    this.defaultColor = new Float32Array(numComps);\\n    for (var i = 0; i < numComps; ++i) {\\n      this.defaultColor[i] = 1;\\n    }\\n    this.base = base;\\n    this.tintFn = tintFn;\\n    this.tmpBuf = new Float32Array(base.numComps);\\n  }\\n  AlternateCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var tmpBuf = this.tmpBuf;\\n      this.tintFn(src, srcOffset, tmpBuf, 0);\\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\\n    },\\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var tintFn = this.tintFn;\\n      var base = this.base;\\n      var scale = 1 / ((1 << bits) - 1);\\n      var baseNumComps = base.numComps;\\n      var usesZeroToOneRange = base.usesZeroToOneRange;\\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\\n      var pos = isPassthrough ? destOffset : 0;\\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\\n      var numComps = this.numComps;\\n      var scaled = new Float32Array(numComps);\\n      var tinted = new Float32Array(baseNumComps);\\n      var i, j;\\n      for (i = 0; i < count; i++) {\\n        for (j = 0; j < numComps; j++) {\\n          scaled[j] = src[srcOffset++] * scale;\\n        }\\n        tintFn(scaled, 0, tinted, 0);\\n        if (usesZeroToOneRange) {\\n          for (j = 0; j < baseNumComps; j++) {\\n            baseBuf[pos++] = tinted[j] * 255;\\n          }\\n        } else {\\n          base.getRgbItem(tinted, 0, baseBuf, pos);\\n          pos += baseNumComps;\\n        }\\n      }\\n      if (!isPassthrough) {\\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\\n      }\\n    },\\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return AlternateCS;\\n}();\\nvar PatternCS = function PatternCSClosure() {\\n  function PatternCS(baseCS) {\\n    this.name = 'Pattern';\\n    this.base = baseCS;\\n  }\\n  PatternCS.prototype = {};\\n  return PatternCS;\\n}();\\nvar IndexedCS = function IndexedCSClosure() {\\n  function IndexedCS(base, highVal, lookup) {\\n    this.name = 'Indexed';\\n    this.numComps = 1;\\n    this.defaultColor = new Uint8Array(this.numComps);\\n    this.base = base;\\n    this.highVal = highVal;\\n    var baseNumComps = base.numComps;\\n    var length = baseNumComps * highVal;\\n    if ((0, _primitives.isStream)(lookup)) {\\n      this.lookup = new Uint8Array(length);\\n      var bytes = lookup.getBytes(length);\\n      this.lookup.set(bytes);\\n    } else if ((0, _util.isString)(lookup)) {\\n      this.lookup = new Uint8Array(length);\\n      for (var i = 0; i < length; ++i) {\\n        this.lookup[i] = lookup.charCodeAt(i);\\n      }\\n    } else if (lookup instanceof Uint8Array) {\\n      this.lookup = lookup;\\n    } else {\\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\\n    }\\n  }\\n  IndexedCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var numComps = this.base.numComps;\\n      var start = src[srcOffset] * numComps;\\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\\n    },\\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var base = this.base;\\n      var numComps = base.numComps;\\n      var outputDelta = base.getOutputLength(numComps, alpha01);\\n      var lookup = this.lookup;\\n      for (var i = 0; i < count; ++i) {\\n        var lookupPos = src[srcOffset++] * numComps;\\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\\n        destOffset += outputDelta;\\n      }\\n    },\\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\\n      return true;\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return IndexedCS;\\n}();\\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\\n  function DeviceGrayCS() {\\n    this.name = 'DeviceGray';\\n    this.numComps = 1;\\n    this.defaultColor = new Float32Array(this.numComps);\\n  }\\n  DeviceGrayCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var c = src[srcOffset] * 255 | 0;\\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\\n    },\\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 255 / ((1 << bits) - 1);\\n      var j = srcOffset,\\n          q = destOffset;\\n      for (var i = 0; i < count; ++i) {\\n        var c = scale * src[j++] | 0;\\n        dest[q++] = c;\\n        dest[q++] = c;\\n        dest[q++] = c;\\n        q += alpha01;\\n      }\\n    },\\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return DeviceGrayCS;\\n}();\\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\\n  function DeviceRgbCS() {\\n    this.name = 'DeviceRGB';\\n    this.numComps = 3;\\n    this.defaultColor = new Float32Array(this.numComps);\\n  }\\n  DeviceRgbCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var r = src[srcOffset] * 255 | 0;\\n      var g = src[srcOffset + 1] * 255 | 0;\\n      var b = src[srcOffset + 2] * 255 | 0;\\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\\n    },\\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      if (bits === 8 && alpha01 === 0) {\\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\\n        return;\\n      }\\n      var scale = 255 / ((1 << bits) - 1);\\n      var j = srcOffset,\\n          q = destOffset;\\n      for (var i = 0; i < count; ++i) {\\n        dest[q++] = scale * src[j++] | 0;\\n        dest[q++] = scale * src[j++] | 0;\\n        dest[q++] = scale * src[j++] | 0;\\n        q += alpha01;\\n      }\\n    },\\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01) / 3 | 0;\\n    },\\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\\n      return bits === 8;\\n    },\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return DeviceRgbCS;\\n}();\\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\\n    var c = src[srcOffset + 0] * srcScale;\\n    var m = src[srcOffset + 1] * srcScale;\\n    var y = src[srcOffset + 2] * srcScale;\\n    var k = src[srcOffset + 3] * srcScale;\\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\\n  }\\n  function DeviceCmykCS() {\\n    this.name = 'DeviceCMYK';\\n    this.numComps = 4;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    this.defaultColor[3] = 1;\\n  }\\n  DeviceCmykCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\\n    },\\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 1 / ((1 << bits) - 1);\\n      for (var i = 0; i < count; i++) {\\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\\n        srcOffset += 4;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength / 4 * (3 + alpha01) | 0;\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return DeviceCmykCS;\\n}();\\nvar CalGrayCS = function CalGrayCSClosure() {\\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\\n    this.name = 'CalGray';\\n    this.numComps = 1;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    if (!whitePoint) {\\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\\n    }\\n    blackPoint = blackPoint || [0, 0, 0];\\n    gamma = gamma || 1;\\n    this.XW = whitePoint[0];\\n    this.YW = whitePoint[1];\\n    this.ZW = whitePoint[2];\\n    this.XB = blackPoint[0];\\n    this.YB = blackPoint[1];\\n    this.ZB = blackPoint[2];\\n    this.G = gamma;\\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\\n    }\\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\\n      this.XB = this.YB = this.ZB = 0;\\n    }\\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\\n    }\\n    if (this.G < 1) {\\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\\n      this.G = 1;\\n    }\\n  }\\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\n    var A = src[srcOffset] * scale;\\n    var AG = Math.pow(A, cs.G);\\n    var L = cs.YW * AG;\\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\\n    dest[destOffset] = val;\\n    dest[destOffset + 1] = val;\\n    dest[destOffset + 2] = val;\\n  }\\n  CalGrayCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\n    },\\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 1 / ((1 << bits) - 1);\\n      for (var i = 0; i < count; ++i) {\\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\n        srcOffset += 1;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return CalGrayCS;\\n}();\\nvar CalRGBCS = function CalRGBCSClosure() {\\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\\n  var tempNormalizeMatrix = new Float32Array(3);\\n  var tempConvertMatrix1 = new Float32Array(3);\\n  var tempConvertMatrix2 = new Float32Array(3);\\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\\n    this.name = 'CalRGB';\\n    this.numComps = 3;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    if (!whitePoint) {\\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\\n    }\\n    blackPoint = blackPoint || new Float32Array(3);\\n    gamma = gamma || new Float32Array([1, 1, 1]);\\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\\n    var XW = whitePoint[0];\\n    var YW = whitePoint[1];\\n    var ZW = whitePoint[2];\\n    this.whitePoint = whitePoint;\\n    var XB = blackPoint[0];\\n    var YB = blackPoint[1];\\n    var ZB = blackPoint[2];\\n    this.blackPoint = blackPoint;\\n    this.GR = gamma[0];\\n    this.GG = gamma[1];\\n    this.GB = gamma[2];\\n    this.MXA = matrix[0];\\n    this.MYA = matrix[1];\\n    this.MZA = matrix[2];\\n    this.MXB = matrix[3];\\n    this.MYB = matrix[4];\\n    this.MZB = matrix[5];\\n    this.MXC = matrix[6];\\n    this.MYC = matrix[7];\\n    this.MZC = matrix[8];\\n    if (XW < 0 || ZW < 0 || YW !== 1) {\\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\\n    }\\n    if (XB < 0 || YB < 0 || ZB < 0) {\\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\\n      this.blackPoint = new Float32Array(3);\\n    }\\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\\n      this.GR = this.GG = this.GB = 1;\\n    }\\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\\n      this.MXA = this.MYB = this.MZC = 1;\\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\\n    }\\n  }\\n  function matrixProduct(a, b, result) {\\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\\n  }\\n  function convertToFlat(sourceWhitePoint, LMS, result) {\\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\\n  }\\n  function convertToD65(sourceWhitePoint, LMS, result) {\\n    var D65X = 0.95047;\\n    var D65Y = 1;\\n    var D65Z = 1.08883;\\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\\n  }\\n  function sRGBTransferFunction(color) {\\n    if (color <= 0.0031308) {\\n      return adjustToRange(0, 1, 12.92 * color);\\n    }\\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\\n  }\\n  function adjustToRange(min, max, value) {\\n    return Math.max(min, Math.min(max, value));\\n  }\\n  function decodeL(L) {\\n    if (L < 0) {\\n      return -decodeL(-L);\\n    }\\n    if (L > 8.0) {\\n      return Math.pow((L + 16) / 116, 3);\\n    }\\n    return L * DECODE_L_CONSTANT;\\n  }\\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\\n      result[0] = XYZ_Flat[0];\\n      result[1] = XYZ_Flat[1];\\n      result[2] = XYZ_Flat[2];\\n      return;\\n    }\\n    var zeroDecodeL = decodeL(0);\\n    var X_DST = zeroDecodeL;\\n    var X_SRC = decodeL(sourceBlackPoint[0]);\\n    var Y_DST = zeroDecodeL;\\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\\n    var Z_DST = zeroDecodeL;\\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\\n    var X_Offset = 1 - X_Scale;\\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\\n    var Y_Offset = 1 - Y_Scale;\\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\\n    var Z_Offset = 1 - Z_Scale;\\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\\n  }\\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\\n      result[0] = XYZ_In[0];\\n      result[1] = XYZ_In[1];\\n      result[2] = XYZ_In[2];\\n      return;\\n    }\\n    var LMS = result;\\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\n    var LMS_Flat = tempNormalizeMatrix;\\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\\n  }\\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\\n    var LMS = result;\\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\n    var LMS_D65 = tempNormalizeMatrix;\\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\\n  }\\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\\n    var AGR = Math.pow(A, cs.GR);\\n    var BGG = Math.pow(B, cs.GG);\\n    var CGB = Math.pow(C, cs.GB);\\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\\n    var XYZ = tempConvertMatrix1;\\n    XYZ[0] = X;\\n    XYZ[1] = Y;\\n    XYZ[2] = Z;\\n    var XYZ_Flat = tempConvertMatrix2;\\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\\n    var XYZ_Black = tempConvertMatrix1;\\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\\n    var XYZ_D65 = tempConvertMatrix2;\\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\\n    var SRGB = tempConvertMatrix1;\\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\\n    var sR = sRGBTransferFunction(SRGB[0]);\\n    var sG = sRGBTransferFunction(SRGB[1]);\\n    var sB = sRGBTransferFunction(SRGB[2]);\\n    dest[destOffset] = Math.round(sR * 255);\\n    dest[destOffset + 1] = Math.round(sG * 255);\\n    dest[destOffset + 2] = Math.round(sB * 255);\\n  }\\n  CalRGBCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\n    },\\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 1 / ((1 << bits) - 1);\\n      for (var i = 0; i < count; ++i) {\\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\n        srcOffset += 3;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01) / 3 | 0;\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return CalRGBCS;\\n}();\\nvar LabCS = function LabCSClosure() {\\n  function LabCS(whitePoint, blackPoint, range) {\\n    this.name = 'Lab';\\n    this.numComps = 3;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    if (!whitePoint) {\\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\\n    }\\n    blackPoint = blackPoint || [0, 0, 0];\\n    range = range || [-100, 100, -100, 100];\\n    this.XW = whitePoint[0];\\n    this.YW = whitePoint[1];\\n    this.ZW = whitePoint[2];\\n    this.amin = range[0];\\n    this.amax = range[1];\\n    this.bmin = range[2];\\n    this.bmax = range[3];\\n    this.XB = blackPoint[0];\\n    this.YB = blackPoint[1];\\n    this.ZB = blackPoint[2];\\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\\n    }\\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\\n      this.XB = this.YB = this.ZB = 0;\\n    }\\n    if (this.amin > this.amax || this.bmin > this.bmax) {\\n      (0, _util.info)('Invalid Range, falling back to defaults');\\n      this.amin = -100;\\n      this.amax = 100;\\n      this.bmin = -100;\\n      this.bmax = 100;\\n    }\\n  }\\n  function fn_g(x) {\\n    var result;\\n    if (x >= 6 / 29) {\\n      result = x * x * x;\\n    } else {\\n      result = 108 / 841 * (x - 4 / 29);\\n    }\\n    return result;\\n  }\\n  function decode(value, high1, low2, high2) {\\n    return low2 + value * (high2 - low2) / high1;\\n  }\\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\\n    var Ls = src[srcOffset];\\n    var as = src[srcOffset + 1];\\n    var bs = src[srcOffset + 2];\\n    if (maxVal !== false) {\\n      Ls = decode(Ls, maxVal, 0, 100);\\n      as = decode(as, maxVal, cs.amin, cs.amax);\\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\\n    }\\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\\n    var M = (Ls + 16) / 116;\\n    var L = M + as / 500;\\n    var N = M - bs / 200;\\n    var X = cs.XW * fn_g(L);\\n    var Y = cs.YW * fn_g(M);\\n    var Z = cs.ZW * fn_g(N);\\n    var r, g, b;\\n    if (cs.ZW < 1) {\\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\\n    } else {\\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\\n    }\\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\\n  }\\n  LabCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\\n    },\\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var maxVal = (1 << bits) - 1;\\n      for (var i = 0; i < count; i++) {\\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\\n        srcOffset += 3;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01) / 3 | 0;\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\\n      return true;\\n    },\\n    usesZeroToOneRange: false\\n  };\\n  return LabCS;\\n}();\\nexports.ColorSpace = ColorSpace;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _stream = require('./stream');\\n\\nvar ARCFourCipher = function ARCFourCipherClosure() {\\n  function ARCFourCipher(key) {\\n    this.a = 0;\\n    this.b = 0;\\n    var s = new Uint8Array(256);\\n    var i,\\n        j = 0,\\n        tmp,\\n        keyLength = key.length;\\n    for (i = 0; i < 256; ++i) {\\n      s[i] = i;\\n    }\\n    for (i = 0; i < 256; ++i) {\\n      tmp = s[i];\\n      j = j + tmp + key[i % keyLength] & 0xFF;\\n      s[i] = s[j];\\n      s[j] = tmp;\\n    }\\n    this.s = s;\\n  }\\n  ARCFourCipher.prototype = {\\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\\n      var i,\\n          n = data.length,\\n          tmp,\\n          tmp2;\\n      var a = this.a,\\n          b = this.b,\\n          s = this.s;\\n      var output = new Uint8Array(n);\\n      for (i = 0; i < n; ++i) {\\n        a = a + 1 & 0xFF;\\n        tmp = s[a];\\n        b = b + tmp & 0xFF;\\n        tmp2 = s[b];\\n        s[a] = tmp2;\\n        s[b] = tmp;\\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\\n      }\\n      this.a = a;\\n      this.b = b;\\n      return output;\\n    }\\n  };\\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\\n  return ARCFourCipher;\\n}();\\nvar calculateMD5 = function calculateMD5Closure() {\\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\\n  function hash(data, offset, length) {\\n    var h0 = 1732584193,\\n        h1 = -271733879,\\n        h2 = -1732584194,\\n        h3 = 271733878;\\n    var paddedLength = length + 72 & ~63;\\n    var padded = new Uint8Array(paddedLength);\\n    var i, j, n;\\n    for (i = 0; i < length; ++i) {\\n      padded[i] = data[offset++];\\n    }\\n    padded[i++] = 0x80;\\n    n = paddedLength - 8;\\n    while (i < n) {\\n      padded[i++] = 0;\\n    }\\n    padded[i++] = length << 3 & 0xFF;\\n    padded[i++] = length >> 5 & 0xFF;\\n    padded[i++] = length >> 13 & 0xFF;\\n    padded[i++] = length >> 21 & 0xFF;\\n    padded[i++] = length >>> 29 & 0xFF;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    var w = new Int32Array(16);\\n    for (i = 0; i < paddedLength;) {\\n      for (j = 0; j < 16; ++j, i += 4) {\\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\\n      }\\n      var a = h0,\\n          b = h1,\\n          c = h2,\\n          d = h3,\\n          f,\\n          g;\\n      for (j = 0; j < 64; ++j) {\\n        if (j < 16) {\\n          f = b & c | ~b & d;\\n          g = j;\\n        } else if (j < 32) {\\n          f = d & b | ~d & c;\\n          g = 5 * j + 1 & 15;\\n        } else if (j < 48) {\\n          f = b ^ c ^ d;\\n          g = 3 * j + 5 & 15;\\n        } else {\\n          f = c ^ (b | ~d);\\n          g = 7 * j & 15;\\n        }\\n        var tmp = d,\\n            rotateArg = a + f + k[j] + w[g] | 0,\\n            rotate = r[j];\\n        d = c;\\n        c = b;\\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\\n        a = tmp;\\n      }\\n      h0 = h0 + a | 0;\\n      h1 = h1 + b | 0;\\n      h2 = h2 + c | 0;\\n      h3 = h3 + d | 0;\\n    }\\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\\n  }\\n  return hash;\\n}();\\nvar Word64 = function Word64Closure() {\\n  function Word64(highInteger, lowInteger) {\\n    this.high = highInteger | 0;\\n    this.low = lowInteger | 0;\\n  }\\n  Word64.prototype = {\\n    and: function Word64_and(word) {\\n      this.high &= word.high;\\n      this.low &= word.low;\\n    },\\n    xor: function Word64_xor(word) {\\n      this.high ^= word.high;\\n      this.low ^= word.low;\\n    },\\n    or: function Word64_or(word) {\\n      this.high |= word.high;\\n      this.low |= word.low;\\n    },\\n    shiftRight: function Word64_shiftRight(places) {\\n      if (places >= 32) {\\n        this.low = this.high >>> places - 32 | 0;\\n        this.high = 0;\\n      } else {\\n        this.low = this.low >>> places | this.high << 32 - places;\\n        this.high = this.high >>> places | 0;\\n      }\\n    },\\n    shiftLeft: function Word64_shiftLeft(places) {\\n      if (places >= 32) {\\n        this.high = this.low << places - 32;\\n        this.low = 0;\\n      } else {\\n        this.high = this.high << places | this.low >>> 32 - places;\\n        this.low = this.low << places;\\n      }\\n    },\\n    rotateRight: function Word64_rotateRight(places) {\\n      var low, high;\\n      if (places & 32) {\\n        high = this.low;\\n        low = this.high;\\n      } else {\\n        low = this.low;\\n        high = this.high;\\n      }\\n      places &= 31;\\n      this.low = low >>> places | high << 32 - places;\\n      this.high = high >>> places | low << 32 - places;\\n    },\\n    not: function Word64_not() {\\n      this.high = ~this.high;\\n      this.low = ~this.low;\\n    },\\n    add: function Word64_add(word) {\\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\\n      if (lowAdd > 0xFFFFFFFF) {\\n        highAdd += 1;\\n      }\\n      this.low = lowAdd | 0;\\n      this.high = highAdd | 0;\\n    },\\n    copyTo: function Word64_copyTo(bytes, offset) {\\n      bytes[offset] = this.high >>> 24 & 0xFF;\\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\\n      bytes[offset + 3] = this.high & 0xFF;\\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\\n      bytes[offset + 7] = this.low & 0xFF;\\n    },\\n    assign: function Word64_assign(word) {\\n      this.high = word.high;\\n      this.low = word.low;\\n    }\\n  };\\n  return Word64;\\n}();\\nvar calculateSHA256 = function calculateSHA256Closure() {\\n  function rotr(x, n) {\\n    return x >>> n | x << 32 - n;\\n  }\\n  function ch(x, y, z) {\\n    return x & y ^ ~x & z;\\n  }\\n  function maj(x, y, z) {\\n    return x & y ^ x & z ^ y & z;\\n  }\\n  function sigma(x) {\\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\\n  }\\n  function sigmaPrime(x) {\\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\\n  }\\n  function littleSigma(x) {\\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\\n  }\\n  function littleSigmaPrime(x) {\\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\\n  }\\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\\n  function hash(data, offset, length) {\\n    var h0 = 0x6a09e667,\\n        h1 = 0xbb67ae85,\\n        h2 = 0x3c6ef372,\\n        h3 = 0xa54ff53a,\\n        h4 = 0x510e527f,\\n        h5 = 0x9b05688c,\\n        h6 = 0x1f83d9ab,\\n        h7 = 0x5be0cd19;\\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\\n    var padded = new Uint8Array(paddedLength);\\n    var i, j, n;\\n    for (i = 0; i < length; ++i) {\\n      padded[i] = data[offset++];\\n    }\\n    padded[i++] = 0x80;\\n    n = paddedLength - 8;\\n    while (i < n) {\\n      padded[i++] = 0;\\n    }\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = length >>> 29 & 0xFF;\\n    padded[i++] = length >> 21 & 0xFF;\\n    padded[i++] = length >> 13 & 0xFF;\\n    padded[i++] = length >> 5 & 0xFF;\\n    padded[i++] = length << 3 & 0xFF;\\n    var w = new Uint32Array(64);\\n    for (i = 0; i < paddedLength;) {\\n      for (j = 0; j < 16; ++j) {\\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\n        i += 4;\\n      }\\n      for (j = 16; j < 64; ++j) {\\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\\n      }\\n      var a = h0,\\n          b = h1,\\n          c = h2,\\n          d = h3,\\n          e = h4,\\n          f = h5,\\n          g = h6,\\n          h = h7,\\n          t1,\\n          t2;\\n      for (j = 0; j < 64; ++j) {\\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\\n        t2 = sigma(a) + maj(a, b, c);\\n        h = g;\\n        g = f;\\n        f = e;\\n        e = d + t1 | 0;\\n        d = c;\\n        c = b;\\n        b = a;\\n        a = t1 + t2 | 0;\\n      }\\n      h0 = h0 + a | 0;\\n      h1 = h1 + b | 0;\\n      h2 = h2 + c | 0;\\n      h3 = h3 + d | 0;\\n      h4 = h4 + e | 0;\\n      h5 = h5 + f | 0;\\n      h6 = h6 + g | 0;\\n      h7 = h7 + h | 0;\\n    }\\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\\n  }\\n  return hash;\\n}();\\nvar calculateSHA512 = function calculateSHA512Closure() {\\n  function ch(result, x, y, z, tmp) {\\n    result.assign(x);\\n    result.and(y);\\n    tmp.assign(x);\\n    tmp.not();\\n    tmp.and(z);\\n    result.xor(tmp);\\n  }\\n  function maj(result, x, y, z, tmp) {\\n    result.assign(x);\\n    result.and(y);\\n    tmp.assign(x);\\n    tmp.and(z);\\n    result.xor(tmp);\\n    tmp.assign(y);\\n    tmp.and(z);\\n    result.xor(tmp);\\n  }\\n  function sigma(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(28);\\n    tmp.assign(x);\\n    tmp.rotateRight(34);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.rotateRight(39);\\n    result.xor(tmp);\\n  }\\n  function sigmaPrime(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(14);\\n    tmp.assign(x);\\n    tmp.rotateRight(18);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.rotateRight(41);\\n    result.xor(tmp);\\n  }\\n  function littleSigma(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(1);\\n    tmp.assign(x);\\n    tmp.rotateRight(8);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.shiftRight(7);\\n    result.xor(tmp);\\n  }\\n  function littleSigmaPrime(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(19);\\n    tmp.assign(x);\\n    tmp.rotateRight(61);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.shiftRight(6);\\n    result.xor(tmp);\\n  }\\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\\n  function hash(data, offset, length, mode384) {\\n    mode384 = !!mode384;\\n    var h0, h1, h2, h3, h4, h5, h6, h7;\\n    if (!mode384) {\\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\\n      h4 = new Word64(0x510e527f, 0xade682d1);\\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\\n    } else {\\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\\n      h1 = new Word64(0x629a292a, 0x367cd507);\\n      h2 = new Word64(0x9159015a, 0x3070dd17);\\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\\n      h4 = new Word64(0x67332667, 0xffc00b31);\\n      h5 = new Word64(0x8eb44a87, 0x68581511);\\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\\n    }\\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\\n    var padded = new Uint8Array(paddedLength);\\n    var i, j, n;\\n    for (i = 0; i < length; ++i) {\\n      padded[i] = data[offset++];\\n    }\\n    padded[i++] = 0x80;\\n    n = paddedLength - 16;\\n    while (i < n) {\\n      padded[i++] = 0;\\n    }\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = length >>> 29 & 0xFF;\\n    padded[i++] = length >> 21 & 0xFF;\\n    padded[i++] = length >> 13 & 0xFF;\\n    padded[i++] = length >> 5 & 0xFF;\\n    padded[i++] = length << 3 & 0xFF;\\n    var w = new Array(80);\\n    for (i = 0; i < 80; i++) {\\n      w[i] = new Word64(0, 0);\\n    }\\n    var a = new Word64(0, 0),\\n        b = new Word64(0, 0),\\n        c = new Word64(0, 0);\\n    var d = new Word64(0, 0),\\n        e = new Word64(0, 0),\\n        f = new Word64(0, 0);\\n    var g = new Word64(0, 0),\\n        h = new Word64(0, 0);\\n    var t1 = new Word64(0, 0),\\n        t2 = new Word64(0, 0);\\n    var tmp1 = new Word64(0, 0),\\n        tmp2 = new Word64(0, 0),\\n        tmp3;\\n    for (i = 0; i < paddedLength;) {\\n      for (j = 0; j < 16; ++j) {\\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\\n        i += 8;\\n      }\\n      for (j = 16; j < 80; ++j) {\\n        tmp3 = w[j];\\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\\n        tmp3.add(w[j - 7]);\\n        littleSigma(tmp1, w[j - 15], tmp2);\\n        tmp3.add(tmp1);\\n        tmp3.add(w[j - 16]);\\n      }\\n      a.assign(h0);\\n      b.assign(h1);\\n      c.assign(h2);\\n      d.assign(h3);\\n      e.assign(h4);\\n      f.assign(h5);\\n      g.assign(h6);\\n      h.assign(h7);\\n      for (j = 0; j < 80; ++j) {\\n        t1.assign(h);\\n        sigmaPrime(tmp1, e, tmp2);\\n        t1.add(tmp1);\\n        ch(tmp1, e, f, g, tmp2);\\n        t1.add(tmp1);\\n        t1.add(k[j]);\\n        t1.add(w[j]);\\n        sigma(t2, a, tmp2);\\n        maj(tmp1, a, b, c, tmp2);\\n        t2.add(tmp1);\\n        tmp3 = h;\\n        h = g;\\n        g = f;\\n        f = e;\\n        d.add(t1);\\n        e = d;\\n        d = c;\\n        c = b;\\n        b = a;\\n        tmp3.assign(t1);\\n        tmp3.add(t2);\\n        a = tmp3;\\n      }\\n      h0.add(a);\\n      h1.add(b);\\n      h2.add(c);\\n      h3.add(d);\\n      h4.add(e);\\n      h5.add(f);\\n      h6.add(g);\\n      h7.add(h);\\n    }\\n    var result;\\n    if (!mode384) {\\n      result = new Uint8Array(64);\\n      h0.copyTo(result, 0);\\n      h1.copyTo(result, 8);\\n      h2.copyTo(result, 16);\\n      h3.copyTo(result, 24);\\n      h4.copyTo(result, 32);\\n      h5.copyTo(result, 40);\\n      h6.copyTo(result, 48);\\n      h7.copyTo(result, 56);\\n    } else {\\n      result = new Uint8Array(48);\\n      h0.copyTo(result, 0);\\n      h1.copyTo(result, 8);\\n      h2.copyTo(result, 16);\\n      h3.copyTo(result, 24);\\n      h4.copyTo(result, 32);\\n      h5.copyTo(result, 40);\\n    }\\n    return result;\\n  }\\n  return hash;\\n}();\\nvar calculateSHA384 = function calculateSHA384Closure() {\\n  function hash(data, offset, length) {\\n    return calculateSHA512(data, offset, length, true);\\n  }\\n  return hash;\\n}();\\nvar NullCipher = function NullCipherClosure() {\\n  function NullCipher() {}\\n  NullCipher.prototype = {\\n    decryptBlock: function NullCipher_decryptBlock(data) {\\n      return data;\\n    }\\n  };\\n  return NullCipher;\\n}();\\nvar AES128Cipher = function AES128CipherClosure() {\\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\\n  var mixCol = new Uint8Array(256);\\n  for (var i = 0; i < 256; i++) {\\n    if (i < 128) {\\n      mixCol[i] = i << 1;\\n    } else {\\n      mixCol[i] = i << 1 ^ 0x1b;\\n    }\\n  }\\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\\n  function expandKey128(cipherKey) {\\n    var b = 176,\\n        result = new Uint8Array(b);\\n    result.set(cipherKey);\\n    for (var j = 16, i = 1; j < b; ++i) {\\n      var t1 = result[j - 3],\\n          t2 = result[j - 2],\\n          t3 = result[j - 1],\\n          t4 = result[j - 4];\\n      t1 = s[t1];\\n      t2 = s[t2];\\n      t3 = s[t3];\\n      t4 = s[t4];\\n      t1 = t1 ^ rcon[i];\\n      for (var n = 0; n < 4; ++n) {\\n        result[j] = t1 ^= result[j - 16];\\n        j++;\\n        result[j] = t2 ^= result[j - 16];\\n        j++;\\n        result[j] = t3 ^= result[j - 16];\\n        j++;\\n        result[j] = t4 ^= result[j - 16];\\n        j++;\\n      }\\n    }\\n    return result;\\n  }\\n  function decrypt128(input, key) {\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    var i, j, k;\\n    var t, u, v;\\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    for (i = 9; i >= 1; --i) {\\n      t = state[13];\\n      state[13] = state[9];\\n      state[9] = state[5];\\n      state[5] = state[1];\\n      state[1] = t;\\n      t = state[14];\\n      u = state[10];\\n      state[14] = state[6];\\n      state[10] = state[2];\\n      state[6] = t;\\n      state[2] = u;\\n      t = state[15];\\n      u = state[11];\\n      v = state[7];\\n      state[15] = state[3];\\n      state[11] = t;\\n      state[7] = u;\\n      state[3] = v;\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = inv_s[state[j]];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = mix[state[j]],\\n            s1 = mix[state[j + 1]],\\n            s2 = mix[state[j + 2]],\\n            s3 = mix[state[j + 3]];\\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\\n        state[j] = t >>> 24 & 0xFF;\\n        state[j + 1] = t >> 16 & 0xFF;\\n        state[j + 2] = t >> 8 & 0xFF;\\n        state[j + 3] = t & 0xFF;\\n      }\\n    }\\n    t = state[13];\\n    state[13] = state[9];\\n    state[9] = state[5];\\n    state[5] = state[1];\\n    state[1] = t;\\n    t = state[14];\\n    u = state[10];\\n    state[14] = state[6];\\n    state[10] = state[2];\\n    state[6] = t;\\n    state[2] = u;\\n    t = state[15];\\n    u = state[11];\\n    v = state[7];\\n    state[15] = state[3];\\n    state[11] = t;\\n    state[7] = u;\\n    state[3] = v;\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = inv_s[state[j]];\\n      state[j] ^= key[j];\\n    }\\n    return state;\\n  }\\n  function encrypt128(input, key) {\\n    var t, u, v, j, k;\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    for (j = 0; j < 16; ++j) {\\n      state[j] ^= key[j];\\n    }\\n    for (i = 1; i < 10; i++) {\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = s[state[j]];\\n      }\\n      v = state[1];\\n      state[1] = state[5];\\n      state[5] = state[9];\\n      state[9] = state[13];\\n      state[13] = v;\\n      v = state[2];\\n      u = state[6];\\n      state[2] = state[10];\\n      state[6] = state[14];\\n      state[10] = v;\\n      state[14] = u;\\n      v = state[3];\\n      u = state[7];\\n      t = state[11];\\n      state[3] = state[15];\\n      state[7] = v;\\n      state[11] = u;\\n      state[15] = t;\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = state[j + 0],\\n            s1 = state[j + 1];\\n        var s2 = state[j + 2],\\n            s3 = state[j + 3];\\n        t = s0 ^ s1 ^ s2 ^ s3;\\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n    }\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = s[state[j]];\\n    }\\n    v = state[1];\\n    state[1] = state[5];\\n    state[5] = state[9];\\n    state[9] = state[13];\\n    state[13] = v;\\n    v = state[2];\\n    u = state[6];\\n    state[2] = state[10];\\n    state[6] = state[14];\\n    state[10] = v;\\n    state[14] = u;\\n    v = state[3];\\n    u = state[7];\\n    t = state[11];\\n    state[3] = state[15];\\n    state[7] = v;\\n    state[11] = u;\\n    state[15] = t;\\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    return state;\\n  }\\n  function AES128Cipher(key) {\\n    this.key = expandKey128(key);\\n    this.buffer = new Uint8Array(16);\\n    this.bufferPosition = 0;\\n  }\\n  function decryptBlock2(data, finalize) {\\n    var i,\\n        j,\\n        ii,\\n        sourceLength = data.length,\\n        buffer = this.buffer,\\n        bufferLength = this.bufferPosition,\\n        result = [],\\n        iv = this.iv;\\n    for (i = 0; i < sourceLength; ++i) {\\n      buffer[bufferLength] = data[i];\\n      ++bufferLength;\\n      if (bufferLength < 16) {\\n        continue;\\n      }\\n      var plain = decrypt128(buffer, this.key);\\n      for (j = 0; j < 16; ++j) {\\n        plain[j] ^= iv[j];\\n      }\\n      iv = buffer;\\n      result.push(plain);\\n      buffer = new Uint8Array(16);\\n      bufferLength = 0;\\n    }\\n    this.buffer = buffer;\\n    this.bufferLength = bufferLength;\\n    this.iv = iv;\\n    if (result.length === 0) {\\n      return new Uint8Array([]);\\n    }\\n    var outputLength = 16 * result.length;\\n    if (finalize) {\\n      var lastBlock = result[result.length - 1];\\n      var psLen = lastBlock[15];\\n      if (psLen <= 16) {\\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\\n          if (lastBlock[i] !== psLen) {\\n            psLen = 0;\\n            break;\\n          }\\n        }\\n        outputLength -= psLen;\\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\\n      }\\n    }\\n    var output = new Uint8Array(outputLength);\\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n      output.set(result[i], j);\\n    }\\n    return output;\\n  }\\n  AES128Cipher.prototype = {\\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\\n      var i,\\n          sourceLength = data.length;\\n      var buffer = this.buffer,\\n          bufferLength = this.bufferPosition;\\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\\n        buffer[bufferLength] = data[i];\\n      }\\n      if (bufferLength < 16) {\\n        this.bufferLength = bufferLength;\\n        return new Uint8Array([]);\\n      }\\n      this.iv = buffer;\\n      this.buffer = new Uint8Array(16);\\n      this.bufferLength = 0;\\n      this.decryptBlock = decryptBlock2;\\n      return this.decryptBlock(data.subarray(16), finalize);\\n    },\\n    encrypt: function AES128Cipher_encrypt(data, iv) {\\n      var i,\\n          j,\\n          ii,\\n          sourceLength = data.length,\\n          buffer = this.buffer,\\n          bufferLength = this.bufferPosition,\\n          result = [];\\n      if (!iv) {\\n        iv = new Uint8Array(16);\\n      }\\n      for (i = 0; i < sourceLength; ++i) {\\n        buffer[bufferLength] = data[i];\\n        ++bufferLength;\\n        if (bufferLength < 16) {\\n          continue;\\n        }\\n        for (j = 0; j < 16; ++j) {\\n          buffer[j] ^= iv[j];\\n        }\\n        var cipher = encrypt128(buffer, this.key);\\n        iv = cipher;\\n        result.push(cipher);\\n        buffer = new Uint8Array(16);\\n        bufferLength = 0;\\n      }\\n      this.buffer = buffer;\\n      this.bufferLength = bufferLength;\\n      this.iv = iv;\\n      if (result.length === 0) {\\n        return new Uint8Array([]);\\n      }\\n      var outputLength = 16 * result.length;\\n      var output = new Uint8Array(outputLength);\\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n        output.set(result[i], j);\\n      }\\n      return output;\\n    }\\n  };\\n  return AES128Cipher;\\n}();\\nvar AES256Cipher = function AES256CipherClosure() {\\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\\n  var mixCol = new Uint8Array(256);\\n  for (var i = 0; i < 256; i++) {\\n    if (i < 128) {\\n      mixCol[i] = i << 1;\\n    } else {\\n      mixCol[i] = i << 1 ^ 0x1b;\\n    }\\n  }\\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\\n  function expandKey256(cipherKey) {\\n    var b = 240,\\n        result = new Uint8Array(b);\\n    var r = 1;\\n    result.set(cipherKey);\\n    for (var j = 32, i = 1; j < b; ++i) {\\n      var t1, t2, t3, t4;\\n      if (j % 32 === 16) {\\n        t1 = s[t1];\\n        t2 = s[t2];\\n        t3 = s[t3];\\n        t4 = s[t4];\\n      } else if (j % 32 === 0) {\\n        t1 = result[j - 3];\\n        t2 = result[j - 2];\\n        t3 = result[j - 1];\\n        t4 = result[j - 4];\\n        t1 = s[t1];\\n        t2 = s[t2];\\n        t3 = s[t3];\\n        t4 = s[t4];\\n        t1 = t1 ^ r;\\n        if ((r <<= 1) >= 256) {\\n          r = (r ^ 0x1b) & 0xFF;\\n        }\\n      }\\n      for (var n = 0; n < 4; ++n) {\\n        result[j] = t1 ^= result[j - 32];\\n        j++;\\n        result[j] = t2 ^= result[j - 32];\\n        j++;\\n        result[j] = t3 ^= result[j - 32];\\n        j++;\\n        result[j] = t4 ^= result[j - 32];\\n        j++;\\n      }\\n    }\\n    return result;\\n  }\\n  function decrypt256(input, key) {\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    var i, j, k;\\n    var t, u, v;\\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    for (i = 13; i >= 1; --i) {\\n      t = state[13];\\n      state[13] = state[9];\\n      state[9] = state[5];\\n      state[5] = state[1];\\n      state[1] = t;\\n      t = state[14];\\n      u = state[10];\\n      state[14] = state[6];\\n      state[10] = state[2];\\n      state[6] = t;\\n      state[2] = u;\\n      t = state[15];\\n      u = state[11];\\n      v = state[7];\\n      state[15] = state[3];\\n      state[11] = t;\\n      state[7] = u;\\n      state[3] = v;\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = inv_s[state[j]];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = mix[state[j]],\\n            s1 = mix[state[j + 1]],\\n            s2 = mix[state[j + 2]],\\n            s3 = mix[state[j + 3]];\\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\\n        state[j] = t >>> 24 & 0xFF;\\n        state[j + 1] = t >> 16 & 0xFF;\\n        state[j + 2] = t >> 8 & 0xFF;\\n        state[j + 3] = t & 0xFF;\\n      }\\n    }\\n    t = state[13];\\n    state[13] = state[9];\\n    state[9] = state[5];\\n    state[5] = state[1];\\n    state[1] = t;\\n    t = state[14];\\n    u = state[10];\\n    state[14] = state[6];\\n    state[10] = state[2];\\n    state[6] = t;\\n    state[2] = u;\\n    t = state[15];\\n    u = state[11];\\n    v = state[7];\\n    state[15] = state[3];\\n    state[11] = t;\\n    state[7] = u;\\n    state[3] = v;\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = inv_s[state[j]];\\n      state[j] ^= key[j];\\n    }\\n    return state;\\n  }\\n  function encrypt256(input, key) {\\n    var t, u, v, i, j, k;\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    for (j = 0; j < 16; ++j) {\\n      state[j] ^= key[j];\\n    }\\n    for (i = 1; i < 14; i++) {\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = s[state[j]];\\n      }\\n      v = state[1];\\n      state[1] = state[5];\\n      state[5] = state[9];\\n      state[9] = state[13];\\n      state[13] = v;\\n      v = state[2];\\n      u = state[6];\\n      state[2] = state[10];\\n      state[6] = state[14];\\n      state[10] = v;\\n      state[14] = u;\\n      v = state[3];\\n      u = state[7];\\n      t = state[11];\\n      state[3] = state[15];\\n      state[7] = v;\\n      state[11] = u;\\n      state[15] = t;\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = state[j + 0],\\n            s1 = state[j + 1];\\n        var s2 = state[j + 2],\\n            s3 = state[j + 3];\\n        t = s0 ^ s1 ^ s2 ^ s3;\\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n    }\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = s[state[j]];\\n    }\\n    v = state[1];\\n    state[1] = state[5];\\n    state[5] = state[9];\\n    state[9] = state[13];\\n    state[13] = v;\\n    v = state[2];\\n    u = state[6];\\n    state[2] = state[10];\\n    state[6] = state[14];\\n    state[10] = v;\\n    state[14] = u;\\n    v = state[3];\\n    u = state[7];\\n    t = state[11];\\n    state[3] = state[15];\\n    state[7] = v;\\n    state[11] = u;\\n    state[15] = t;\\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    return state;\\n  }\\n  function AES256Cipher(key) {\\n    this.key = expandKey256(key);\\n    this.buffer = new Uint8Array(16);\\n    this.bufferPosition = 0;\\n  }\\n  function decryptBlock2(data, finalize) {\\n    var i,\\n        j,\\n        ii,\\n        sourceLength = data.length,\\n        buffer = this.buffer,\\n        bufferLength = this.bufferPosition,\\n        result = [],\\n        iv = this.iv;\\n    for (i = 0; i < sourceLength; ++i) {\\n      buffer[bufferLength] = data[i];\\n      ++bufferLength;\\n      if (bufferLength < 16) {\\n        continue;\\n      }\\n      var plain = decrypt256(buffer, this.key);\\n      for (j = 0; j < 16; ++j) {\\n        plain[j] ^= iv[j];\\n      }\\n      iv = buffer;\\n      result.push(plain);\\n      buffer = new Uint8Array(16);\\n      bufferLength = 0;\\n    }\\n    this.buffer = buffer;\\n    this.bufferLength = bufferLength;\\n    this.iv = iv;\\n    if (result.length === 0) {\\n      return new Uint8Array([]);\\n    }\\n    var outputLength = 16 * result.length;\\n    if (finalize) {\\n      var lastBlock = result[result.length - 1];\\n      var psLen = lastBlock[15];\\n      if (psLen <= 16) {\\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\\n          if (lastBlock[i] !== psLen) {\\n            psLen = 0;\\n            break;\\n          }\\n        }\\n        outputLength -= psLen;\\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\\n      }\\n    }\\n    var output = new Uint8Array(outputLength);\\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n      output.set(result[i], j);\\n    }\\n    return output;\\n  }\\n  AES256Cipher.prototype = {\\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\\n      var i,\\n          sourceLength = data.length;\\n      var buffer = this.buffer,\\n          bufferLength = this.bufferPosition;\\n      if (iv) {\\n        this.iv = iv;\\n      } else {\\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\\n          buffer[bufferLength] = data[i];\\n        }\\n        if (bufferLength < 16) {\\n          this.bufferLength = bufferLength;\\n          return new Uint8Array([]);\\n        }\\n        this.iv = buffer;\\n        data = data.subarray(16);\\n      }\\n      this.buffer = new Uint8Array(16);\\n      this.bufferLength = 0;\\n      this.decryptBlock = decryptBlock2;\\n      return this.decryptBlock(data, finalize);\\n    },\\n    encrypt: function AES256Cipher_encrypt(data, iv) {\\n      var i,\\n          j,\\n          ii,\\n          sourceLength = data.length,\\n          buffer = this.buffer,\\n          bufferLength = this.bufferPosition,\\n          result = [];\\n      if (!iv) {\\n        iv = new Uint8Array(16);\\n      }\\n      for (i = 0; i < sourceLength; ++i) {\\n        buffer[bufferLength] = data[i];\\n        ++bufferLength;\\n        if (bufferLength < 16) {\\n          continue;\\n        }\\n        for (j = 0; j < 16; ++j) {\\n          buffer[j] ^= iv[j];\\n        }\\n        var cipher = encrypt256(buffer, this.key);\\n        this.iv = cipher;\\n        result.push(cipher);\\n        buffer = new Uint8Array(16);\\n        bufferLength = 0;\\n      }\\n      this.buffer = buffer;\\n      this.bufferLength = bufferLength;\\n      this.iv = iv;\\n      if (result.length === 0) {\\n        return new Uint8Array([]);\\n      }\\n      var outputLength = 16 * result.length;\\n      var output = new Uint8Array(outputLength);\\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n        output.set(result[i], j);\\n      }\\n      return output;\\n    }\\n  };\\n  return AES256Cipher;\\n}();\\nvar PDF17 = function PDF17Closure() {\\n  function compareByteArrays(array1, array2) {\\n    if (array1.length !== array2.length) {\\n      return false;\\n    }\\n    for (var i = 0; i < array1.length; i++) {\\n      if (array1[i] !== array2[i]) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n  function PDF17() {}\\n  PDF17.prototype = {\\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerValidationSalt, password.length);\\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\\n      var result = calculateSHA256(hashData, 0, hashData.length);\\n      return compareByteArrays(result, ownerPassword);\\n    },\\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userValidationSalt, password.length);\\n      var result = calculateSHA256(hashData, 0, hashData.length);\\n      return compareByteArrays(result, userPassword);\\n    },\\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerKeySalt, password.length);\\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\\n      var key = calculateSHA256(hashData, 0, hashData.length);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\n    },\\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userKeySalt, password.length);\\n      var key = calculateSHA256(hashData, 0, hashData.length);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\n    }\\n  };\\n  return PDF17;\\n}();\\nvar PDF20 = function PDF20Closure() {\\n  function concatArrays(array1, array2) {\\n    var t = new Uint8Array(array1.length + array2.length);\\n    t.set(array1, 0);\\n    t.set(array2, array1.length);\\n    return t;\\n  }\\n  function calculatePDF20Hash(password, input, userBytes) {\\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\\n    var e = [0];\\n    var i = 0;\\n    while (i < 64 || e[e.length - 1] > i - 32) {\\n      var arrayLength = password.length + k.length + userBytes.length;\\n      var k1 = new Uint8Array(arrayLength * 64);\\n      var array = concatArrays(password, k);\\n      array = concatArrays(array, userBytes);\\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\\n        k1.set(array, pos);\\n      }\\n      var cipher = new AES128Cipher(k.subarray(0, 16));\\n      e = cipher.encrypt(k1, k.subarray(16, 32));\\n      var remainder = 0;\\n      for (var z = 0; z < 16; z++) {\\n        remainder *= 256 % 3;\\n        remainder %= 3;\\n        remainder += (e[z] >>> 0) % 3;\\n        remainder %= 3;\\n      }\\n      if (remainder === 0) {\\n        k = calculateSHA256(e, 0, e.length);\\n      } else if (remainder === 1) {\\n        k = calculateSHA384(e, 0, e.length);\\n      } else if (remainder === 2) {\\n        k = calculateSHA512(e, 0, e.length);\\n      }\\n      i++;\\n    }\\n    return k.subarray(0, 32);\\n  }\\n  function PDF20() {}\\n  function compareByteArrays(array1, array2) {\\n    if (array1.length !== array2.length) {\\n      return false;\\n    }\\n    for (var i = 0; i < array1.length; i++) {\\n      if (array1[i] !== array2[i]) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n  PDF20.prototype = {\\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\\n      return calculatePDF20Hash(password, concatBytes, userBytes);\\n    },\\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerValidationSalt, password.length);\\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\\n      var result = calculatePDF20Hash(password, hashData, userBytes);\\n      return compareByteArrays(result, ownerPassword);\\n    },\\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userValidationSalt, password.length);\\n      var result = calculatePDF20Hash(password, hashData, []);\\n      return compareByteArrays(result, userPassword);\\n    },\\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerKeySalt, password.length);\\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\\n      var key = calculatePDF20Hash(password, hashData, userBytes);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\n    },\\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userKeySalt, password.length);\\n      var key = calculatePDF20Hash(password, hashData, []);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\n    }\\n  };\\n  return PDF20;\\n}();\\nvar CipherTransform = function CipherTransformClosure() {\\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\\n    this.StringCipherConstructor = stringCipherConstructor;\\n    this.StreamCipherConstructor = streamCipherConstructor;\\n  }\\n  CipherTransform.prototype = {\\n    createStream: function CipherTransform_createStream(stream, length) {\\n      var cipher = new this.StreamCipherConstructor();\\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\\n        return cipher.decryptBlock(data, finalize);\\n      });\\n    },\\n    decryptString: function CipherTransform_decryptString(s) {\\n      var cipher = new this.StringCipherConstructor();\\n      var data = (0, _util.stringToBytes)(s);\\n      data = cipher.decryptBlock(data, true);\\n      return (0, _util.bytesToString)(data);\\n    }\\n  };\\n  return CipherTransform;\\n}();\\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\\n    if (password) {\\n      var passwordLength = Math.min(127, password.length);\\n      password = password.subarray(0, passwordLength);\\n    } else {\\n      password = [];\\n    }\\n    var pdfAlgorithm;\\n    if (revision === 6) {\\n      pdfAlgorithm = new PDF20();\\n    } else {\\n      pdfAlgorithm = new PDF17();\\n    }\\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\\n    }\\n    return null;\\n  }\\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\\n    var hashData = new Uint8Array(hashDataSize),\\n        i = 0,\\n        j,\\n        n;\\n    if (password) {\\n      n = Math.min(32, password.length);\\n      for (; i < n; ++i) {\\n        hashData[i] = password[i];\\n      }\\n    }\\n    j = 0;\\n    while (i < 32) {\\n      hashData[i++] = defaultPasswordBytes[j++];\\n    }\\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\\n      hashData[i++] = ownerPassword[j];\\n    }\\n    hashData[i++] = flags & 0xFF;\\n    hashData[i++] = flags >> 8 & 0xFF;\\n    hashData[i++] = flags >> 16 & 0xFF;\\n    hashData[i++] = flags >>> 24 & 0xFF;\\n    for (j = 0, n = fileId.length; j < n; ++j) {\\n      hashData[i++] = fileId[j];\\n    }\\n    if (revision >= 4 && !encryptMetadata) {\\n      hashData[i++] = 0xFF;\\n      hashData[i++] = 0xFF;\\n      hashData[i++] = 0xFF;\\n      hashData[i++] = 0xFF;\\n    }\\n    var hash = calculateMD5(hashData, 0, i);\\n    var keyLengthInBytes = keyLength >> 3;\\n    if (revision >= 3) {\\n      for (j = 0; j < 50; ++j) {\\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\\n      }\\n    }\\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\\n    var cipher, checkData;\\n    if (revision >= 3) {\\n      for (i = 0; i < 32; ++i) {\\n        hashData[i] = defaultPasswordBytes[i];\\n      }\\n      for (j = 0, n = fileId.length; j < n; ++j) {\\n        hashData[i++] = fileId[j];\\n      }\\n      cipher = new ARCFourCipher(encryptionKey);\\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\\n      n = encryptionKey.length;\\n      var derivedKey = new Uint8Array(n),\\n          k;\\n      for (j = 1; j <= 19; ++j) {\\n        for (k = 0; k < n; ++k) {\\n          derivedKey[k] = encryptionKey[k] ^ j;\\n        }\\n        cipher = new ARCFourCipher(derivedKey);\\n        checkData = cipher.encryptBlock(checkData);\\n      }\\n      for (j = 0, n = checkData.length; j < n; ++j) {\\n        if (userPassword[j] !== checkData[j]) {\\n          return null;\\n        }\\n      }\\n    } else {\\n      cipher = new ARCFourCipher(encryptionKey);\\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\\n      for (j = 0, n = checkData.length; j < n; ++j) {\\n        if (userPassword[j] !== checkData[j]) {\\n          return null;\\n        }\\n      }\\n    }\\n    return encryptionKey;\\n  }\\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\\n    var hashData = new Uint8Array(32),\\n        i = 0,\\n        j,\\n        n;\\n    n = Math.min(32, password.length);\\n    for (; i < n; ++i) {\\n      hashData[i] = password[i];\\n    }\\n    j = 0;\\n    while (i < 32) {\\n      hashData[i++] = defaultPasswordBytes[j++];\\n    }\\n    var hash = calculateMD5(hashData, 0, i);\\n    var keyLengthInBytes = keyLength >> 3;\\n    if (revision >= 3) {\\n      for (j = 0; j < 50; ++j) {\\n        hash = calculateMD5(hash, 0, hash.length);\\n      }\\n    }\\n    var cipher, userPassword;\\n    if (revision >= 3) {\\n      userPassword = ownerPassword;\\n      var derivedKey = new Uint8Array(keyLengthInBytes),\\n          k;\\n      for (j = 19; j >= 0; j--) {\\n        for (k = 0; k < keyLengthInBytes; ++k) {\\n          derivedKey[k] = hash[k] ^ j;\\n        }\\n        cipher = new ARCFourCipher(derivedKey);\\n        userPassword = cipher.encryptBlock(userPassword);\\n      }\\n    } else {\\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\\n      userPassword = cipher.encryptBlock(ownerPassword);\\n    }\\n    return userPassword;\\n  }\\n  var identityName = _primitives.Name.get('Identity');\\n  function CipherTransformFactory(dict, fileId, password) {\\n    var filter = dict.get('Filter');\\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\\n      throw new _util.FormatError('unknown encryption method');\\n    }\\n    this.dict = dict;\\n    var algorithm = dict.get('V');\\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\\n      throw new _util.FormatError('unsupported encryption algorithm');\\n    }\\n    this.algorithm = algorithm;\\n    var keyLength = dict.get('Length');\\n    if (!keyLength) {\\n      if (algorithm <= 3) {\\n        keyLength = 40;\\n      } else {\\n        var cfDict = dict.get('CF');\\n        var streamCryptoName = dict.get('StmF');\\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\\n          cfDict.suppressEncryption = true;\\n          var handlerDict = cfDict.get(streamCryptoName.name);\\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\\n          if (keyLength < 40) {\\n            keyLength <<= 3;\\n          }\\n        }\\n      }\\n    }\\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\\n      throw new _util.FormatError('invalid key length');\\n    }\\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\\n    var flags = dict.get('P');\\n    var revision = dict.get('R');\\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\\n    this.encryptMetadata = encryptMetadata;\\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\\n    var passwordBytes;\\n    if (password) {\\n      if (revision === 6) {\\n        try {\\n          password = (0, _util.utf8StringToString)(password);\\n        } catch (ex) {\\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\\n        }\\n      }\\n      passwordBytes = (0, _util.stringToBytes)(password);\\n    }\\n    var encryptionKey;\\n    if (algorithm !== 5) {\\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\n    } else {\\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\\n    }\\n    if (!encryptionKey && !password) {\\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\\n    } else if (!encryptionKey && password) {\\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\n    }\\n    if (!encryptionKey) {\\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\\n    }\\n    this.encryptionKey = encryptionKey;\\n    if (algorithm >= 4) {\\n      var cf = dict.get('CF');\\n      if ((0, _primitives.isDict)(cf)) {\\n        cf.suppressEncryption = true;\\n      }\\n      this.cf = cf;\\n      this.stmf = dict.get('StmF') || identityName;\\n      this.strf = dict.get('StrF') || identityName;\\n      this.eff = dict.get('EFF') || this.stmf;\\n    }\\n  }\\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\\n    var key = new Uint8Array(encryptionKey.length + 9),\\n        i,\\n        n;\\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\\n      key[i] = encryptionKey[i];\\n    }\\n    key[i++] = num & 0xFF;\\n    key[i++] = num >> 8 & 0xFF;\\n    key[i++] = num >> 16 & 0xFF;\\n    key[i++] = gen & 0xFF;\\n    key[i++] = gen >> 8 & 0xFF;\\n    if (isAes) {\\n      key[i++] = 0x73;\\n      key[i++] = 0x41;\\n      key[i++] = 0x6C;\\n      key[i++] = 0x54;\\n    }\\n    var hash = calculateMD5(key, 0, i);\\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\\n  }\\n  function buildCipherConstructor(cf, name, num, gen, key) {\\n    if (!(0, _primitives.isName)(name)) {\\n      throw new _util.FormatError('Invalid crypt filter name.');\\n    }\\n    var cryptFilter = cf.get(name.name);\\n    var cfm;\\n    if (cryptFilter !== null && cryptFilter !== undefined) {\\n      cfm = cryptFilter.get('CFM');\\n    }\\n    if (!cfm || cfm.name === 'None') {\\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\\n        return new NullCipher();\\n      };\\n    }\\n    if (cfm.name === 'V2') {\\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\\n      };\\n    }\\n    if (cfm.name === 'AESV2') {\\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\\n      };\\n    }\\n    if (cfm.name === 'AESV3') {\\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\\n        return new AES256Cipher(key);\\n      };\\n    }\\n    throw new _util.FormatError('Unknown crypto method');\\n  }\\n  CipherTransformFactory.prototype = {\\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\\n      if (this.algorithm === 4 || this.algorithm === 5) {\\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\\n      }\\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\\n      var cipherConstructor = function buildCipherCipherConstructor() {\\n        return new ARCFourCipher(key);\\n      };\\n      return new CipherTransform(cipherConstructor, cipherConstructor);\\n    }\\n  };\\n  return CipherTransformFactory;\\n}();\\nexports.AES128Cipher = AES128Cipher;\\nexports.AES256Cipher = AES256Cipher;\\nexports.ARCFourCipher = ARCFourCipher;\\nexports.CipherTransformFactory = CipherTransformFactory;\\nexports.PDF17 = PDF17;\\nexports.PDF20 = PDF20;\\nexports.calculateMD5 = calculateMD5;\\nexports.calculateSHA256 = calculateSHA256;\\nexports.calculateSHA384 = calculateSHA384;\\nexports.calculateSHA512 = calculateSHA512;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PDFDocument = exports.Page = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _obj = require('./obj');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _util = require('../shared/util');\\n\\nvar _stream = require('./stream');\\n\\nvar _annotation = require('./annotation');\\n\\nvar _crypto = require('./crypto');\\n\\nvar _parser = require('./parser');\\n\\nvar _operator_list = require('./operator_list');\\n\\nvar _evaluator = require('./evaluator');\\n\\nvar _function = require('./function');\\n\\nvar Page = function PageClosure() {\\n  var DEFAULT_USER_UNIT = 1.0;\\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\\n  function isAnnotationRenderable(annotation, intent) {\\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\\n  }\\n  function Page(_ref) {\\n    var pdfManager = _ref.pdfManager,\\n        xref = _ref.xref,\\n        pageIndex = _ref.pageIndex,\\n        pageDict = _ref.pageDict,\\n        ref = _ref.ref,\\n        fontCache = _ref.fontCache,\\n        builtInCMapCache = _ref.builtInCMapCache,\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\n\\n    this.pdfManager = pdfManager;\\n    this.pageIndex = pageIndex;\\n    this.pageDict = pageDict;\\n    this.xref = xref;\\n    this.ref = ref;\\n    this.fontCache = fontCache;\\n    this.builtInCMapCache = builtInCMapCache;\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\\n    this.resourcesPromise = null;\\n    var uniquePrefix = 'p' + this.pageIndex + '_';\\n    var idCounters = { obj: 0 };\\n    this.idFactory = {\\n      createObjId: function createObjId() {\\n        return uniquePrefix + ++idCounters.obj;\\n      }\\n    };\\n  }\\n  Page.prototype = {\\n    getPageProp: function Page_getPageProp(key) {\\n      return this.pageDict.get(key);\\n    },\\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\\n      var dict = this.pageDict,\\n          valueArray = null,\\n          loopCount = 0;\\n      var MAX_LOOP_COUNT = 100;\\n      getArray = getArray || false;\\n      while (dict) {\\n        var value = getArray ? dict.getArray(key) : dict.get(key);\\n        if (value !== undefined) {\\n          if (!valueArray) {\\n            valueArray = [];\\n          }\\n          valueArray.push(value);\\n        }\\n        if (++loopCount > MAX_LOOP_COUNT) {\\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\\n          return valueArray ? valueArray[0] : undefined;\\n        }\\n        dict = dict.get('Parent');\\n      }\\n      if (!valueArray) {\\n        return undefined;\\n      }\\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\\n        return valueArray[0];\\n      }\\n      return _primitives.Dict.merge(this.xref, valueArray);\\n    },\\n    get content() {\\n      return this.getPageProp('Contents');\\n    },\\n    get resources() {\\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\\n    },\\n    get mediaBox() {\\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\\n      }\\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\\n    },\\n    get cropBox() {\\n      var cropBox = this.getInheritedPageProp('CropBox', true);\\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\\n      }\\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\\n    },\\n    get userUnit() {\\n      var obj = this.getPageProp('UserUnit');\\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\\n        obj = DEFAULT_USER_UNIT;\\n      }\\n      return (0, _util.shadow)(this, 'userUnit', obj);\\n    },\\n    get view() {\\n      var mediaBox = this.mediaBox,\\n          cropBox = this.cropBox;\\n      if (mediaBox === cropBox) {\\n        return (0, _util.shadow)(this, 'view', mediaBox);\\n      }\\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\\n    },\\n    get rotate() {\\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\\n      if (rotate % 90 !== 0) {\\n        rotate = 0;\\n      } else if (rotate >= 360) {\\n        rotate = rotate % 360;\\n      } else if (rotate < 0) {\\n        rotate = (rotate % 360 + 360) % 360;\\n      }\\n      return (0, _util.shadow)(this, 'rotate', rotate);\\n    },\\n    getContentStream: function Page_getContentStream() {\\n      var content = this.content;\\n      var stream;\\n      if (Array.isArray(content)) {\\n        var xref = this.xref;\\n        var i,\\n            n = content.length;\\n        var streams = [];\\n        for (i = 0; i < n; ++i) {\\n          streams.push(xref.fetchIfRef(content[i]));\\n        }\\n        stream = new _stream.StreamsSequenceStream(streams);\\n      } else if ((0, _primitives.isStream)(content)) {\\n        stream = content;\\n      } else {\\n        stream = new _stream.NullStream();\\n      }\\n      return stream;\\n    },\\n    loadResources: function Page_loadResources(keys) {\\n      var _this = this;\\n\\n      if (!this.resourcesPromise) {\\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\\n      }\\n      return this.resourcesPromise.then(function () {\\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\\n        return objectLoader.load();\\n      });\\n    },\\n    getOperatorList: function getOperatorList(_ref2) {\\n      var _this2 = this;\\n\\n      var handler = _ref2.handler,\\n          task = _ref2.task,\\n          intent = _ref2.intent,\\n          renderInteractiveForms = _ref2.renderInteractiveForms;\\n\\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\n      var partialEvaluator = new _evaluator.PartialEvaluator({\\n        pdfManager: this.pdfManager,\\n        xref: this.xref,\\n        handler: handler,\\n        pageIndex: this.pageIndex,\\n        idFactory: this.idFactory,\\n        fontCache: this.fontCache,\\n        builtInCMapCache: this.builtInCMapCache,\\n        options: this.evaluatorOptions,\\n        pdfFunctionFactory: this.pdfFunctionFactory\\n      });\\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\n      var pageListPromise = dataPromises.then(function (_ref3) {\\n        var _ref4 = _slicedToArray(_ref3, 1),\\n            contentStream = _ref4[0];\\n\\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\\n        handler.send('StartRenderPage', {\\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\\n          pageIndex: _this2.pageIndex,\\n          intent: intent\\n        });\\n        return partialEvaluator.getOperatorList({\\n          stream: contentStream,\\n          task: task,\\n          resources: _this2.resources,\\n          operatorList: opList\\n        }).then(function () {\\n          return opList;\\n        });\\n      });\\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\\n        var _ref6 = _slicedToArray(_ref5, 2),\\n            pageOpList = _ref6[0],\\n            annotations = _ref6[1];\\n\\n        if (annotations.length === 0) {\\n          pageOpList.flush(true);\\n          return pageOpList;\\n        }\\n        var i,\\n            ii,\\n            opListPromises = [];\\n        for (i = 0, ii = annotations.length; i < ii; i++) {\\n          if (isAnnotationRenderable(annotations[i], intent)) {\\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\\n          }\\n        }\\n        return Promise.all(opListPromises).then(function (opLists) {\\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\\n          for (i = 0, ii = opLists.length; i < ii; i++) {\\n            pageOpList.addOpList(opLists[i]);\\n          }\\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\\n          pageOpList.flush(true);\\n          return pageOpList;\\n        });\\n      });\\n    },\\n    extractTextContent: function extractTextContent(_ref7) {\\n      var _this3 = this;\\n\\n      var handler = _ref7.handler,\\n          task = _ref7.task,\\n          normalizeWhitespace = _ref7.normalizeWhitespace,\\n          sink = _ref7.sink,\\n          combineTextItems = _ref7.combineTextItems;\\n\\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\n      return dataPromises.then(function (_ref8) {\\n        var _ref9 = _slicedToArray(_ref8, 1),\\n            contentStream = _ref9[0];\\n\\n        var partialEvaluator = new _evaluator.PartialEvaluator({\\n          pdfManager: _this3.pdfManager,\\n          xref: _this3.xref,\\n          handler: handler,\\n          pageIndex: _this3.pageIndex,\\n          idFactory: _this3.idFactory,\\n          fontCache: _this3.fontCache,\\n          builtInCMapCache: _this3.builtInCMapCache,\\n          options: _this3.evaluatorOptions,\\n          pdfFunctionFactory: _this3.pdfFunctionFactory\\n        });\\n        return partialEvaluator.getTextContent({\\n          stream: contentStream,\\n          task: task,\\n          resources: _this3.resources,\\n          normalizeWhitespace: normalizeWhitespace,\\n          combineTextItems: combineTextItems,\\n          sink: sink\\n        });\\n      });\\n    },\\n\\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\\n      var annotations = this.annotations;\\n      var annotationsData = [];\\n      for (var i = 0, n = annotations.length; i < n; ++i) {\\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\\n          annotationsData.push(annotations[i].data);\\n        }\\n      }\\n      return annotationsData;\\n    },\\n    get annotations() {\\n      var annotations = [];\\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\\n        var annotationRef = annotationRefs[i];\\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\\n        if (annotation) {\\n          annotations.push(annotation);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'annotations', annotations);\\n    }\\n  };\\n  return Page;\\n}();\\nvar PDFDocument = function PDFDocumentClosure() {\\n  var FINGERPRINT_FIRST_BYTES = 1024;\\n  var EMPTY_FINGERPRINT = '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00';\\n  function PDFDocument(pdfManager, arg) {\\n    var stream;\\n    if ((0, _primitives.isStream)(arg)) {\\n      stream = arg;\\n    } else if ((0, _util.isArrayBuffer)(arg)) {\\n      stream = new _stream.Stream(arg);\\n    } else {\\n      throw new Error('PDFDocument: Unknown argument type');\\n    }\\n    if (stream.length <= 0) {\\n      throw new Error('PDFDocument: stream must have data');\\n    }\\n    this.pdfManager = pdfManager;\\n    this.stream = stream;\\n    this.xref = new _obj.XRef(stream, pdfManager);\\n    var evaluatorOptions = pdfManager.evaluatorOptions;\\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\\n      xref: this.xref,\\n      isEvalSupported: evaluatorOptions.isEvalSupported\\n    });\\n  }\\n  function find(stream, needle, limit, backwards) {\\n    var pos = stream.pos;\\n    var end = stream.end;\\n    var strBuf = [];\\n    if (pos + limit > end) {\\n      limit = end - pos;\\n    }\\n    for (var n = 0; n < limit; ++n) {\\n      strBuf.push(String.fromCharCode(stream.getByte()));\\n    }\\n    var str = strBuf.join('');\\n    stream.pos = pos;\\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\\n    if (index === -1) {\\n      return false;\\n    }\\n    stream.pos += index;\\n    return true;\\n  }\\n  var DocumentInfoValidators = {\\n    get entries() {\\n      return (0, _util.shadow)(this, 'entries', {\\n        Title: _util.isString,\\n        Author: _util.isString,\\n        Subject: _util.isString,\\n        Keywords: _util.isString,\\n        Creator: _util.isString,\\n        Producer: _util.isString,\\n        CreationDate: _util.isString,\\n        ModDate: _util.isString,\\n        Trapped: _primitives.isName\\n      });\\n    }\\n  };\\n  PDFDocument.prototype = {\\n    parse: function PDFDocument_parse(recoveryMode) {\\n      this.setup(recoveryMode);\\n      var version = this.catalog.catDict.get('Version');\\n      if ((0, _primitives.isName)(version)) {\\n        this.pdfFormatVersion = version.name;\\n      }\\n      try {\\n        this.acroForm = this.catalog.catDict.get('AcroForm');\\n        if (this.acroForm) {\\n          this.xfa = this.acroForm.get('XFA');\\n          var fields = this.acroForm.get('Fields');\\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\\n            this.acroForm = null;\\n          }\\n        }\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.info)('Something wrong with AcroForm entry');\\n        this.acroForm = null;\\n      }\\n    },\\n    get linearization() {\\n      var linearization = null;\\n      if (this.stream.length) {\\n        try {\\n          linearization = _parser.Linearization.create(this.stream);\\n        } catch (err) {\\n          if (err instanceof _util.MissingDataException) {\\n            throw err;\\n          }\\n          (0, _util.info)(err);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'linearization', linearization);\\n    },\\n    get startXRef() {\\n      var stream = this.stream;\\n      var startXRef = 0;\\n      var linearization = this.linearization;\\n      if (linearization) {\\n        stream.reset();\\n        if (find(stream, 'endobj', 1024)) {\\n          startXRef = stream.pos + 6;\\n        }\\n      } else {\\n        var step = 1024;\\n        var found = false,\\n            pos = stream.end;\\n        while (!found && pos > 0) {\\n          pos -= step - 'startxref'.length;\\n          if (pos < 0) {\\n            pos = 0;\\n          }\\n          stream.pos = pos;\\n          found = find(stream, 'startxref', step, true);\\n        }\\n        if (found) {\\n          stream.skip(9);\\n          var ch;\\n          do {\\n            ch = stream.getByte();\\n          } while ((0, _util.isSpace)(ch));\\n          var str = '';\\n          while (ch >= 0x20 && ch <= 0x39) {\\n            str += String.fromCharCode(ch);\\n            ch = stream.getByte();\\n          }\\n          startXRef = parseInt(str, 10);\\n          if (isNaN(startXRef)) {\\n            startXRef = 0;\\n          }\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\\n    },\\n    get mainXRefEntriesOffset() {\\n      var mainXRefEntriesOffset = 0;\\n      var linearization = this.linearization;\\n      if (linearization) {\\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\\n      }\\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\\n    },\\n    checkHeader: function PDFDocument_checkHeader() {\\n      var stream = this.stream;\\n      stream.reset();\\n      if (find(stream, '%PDF-', 1024)) {\\n        stream.moveStart();\\n        var MAX_VERSION_LENGTH = 12;\\n        var version = '',\\n            ch;\\n        while ((ch = stream.getByte()) > 0x20) {\\n          if (version.length >= MAX_VERSION_LENGTH) {\\n            break;\\n          }\\n          version += String.fromCharCode(ch);\\n        }\\n        if (!this.pdfFormatVersion) {\\n          this.pdfFormatVersion = version.substring(5);\\n        }\\n        return;\\n      }\\n    },\\n    parseStartXRef: function PDFDocument_parseStartXRef() {\\n      var startXRef = this.startXRef;\\n      this.xref.setStartXRef(startXRef);\\n    },\\n    setup: function PDFDocument_setup(recoveryMode) {\\n      var _this4 = this;\\n\\n      this.xref.parse(recoveryMode);\\n      var pageFactory = {\\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\\n          return new Page({\\n            pdfManager: _this4.pdfManager,\\n            xref: _this4.xref,\\n            pageIndex: pageIndex,\\n            pageDict: dict,\\n            ref: ref,\\n            fontCache: fontCache,\\n            builtInCMapCache: builtInCMapCache,\\n            pdfFunctionFactory: _this4.pdfFunctionFactory\\n          });\\n        }\\n      };\\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\\n    },\\n    get numPages() {\\n      var linearization = this.linearization;\\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\\n      return (0, _util.shadow)(this, 'numPages', num);\\n    },\\n    get documentInfo() {\\n      var docInfo = {\\n        PDFFormatVersion: this.pdfFormatVersion,\\n        IsAcroFormPresent: !!this.acroForm,\\n        IsXFAPresent: !!this.xfa\\n      };\\n      var infoDict;\\n      try {\\n        infoDict = this.xref.trailer.get('Info');\\n      } catch (err) {\\n        if (err instanceof _util.MissingDataException) {\\n          throw err;\\n        }\\n        (0, _util.info)('The document information dictionary is invalid.');\\n      }\\n      if (infoDict) {\\n        var validEntries = DocumentInfoValidators.entries;\\n        for (var key in validEntries) {\\n          if (infoDict.has(key)) {\\n            var value = infoDict.get(key);\\n            if (validEntries[key](value)) {\\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\\n            } else {\\n              (0, _util.info)('Bad value in document info for \\\"' + key + '\\\"');\\n            }\\n          }\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\\n    },\\n    get fingerprint() {\\n      var xref = this.xref,\\n          hash,\\n          fileID = '';\\n      var idArray = xref.trailer.get('ID');\\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\\n        hash = (0, _util.stringToBytes)(idArray[0]);\\n      } else {\\n        if (this.stream.ensureRange) {\\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\\n        }\\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\\n      }\\n      for (var i = 0, n = hash.length; i < n; i++) {\\n        var hex = hash[i].toString(16);\\n        fileID += hex.length === 1 ? '0' + hex : hex;\\n      }\\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\\n    },\\n    getPage: function PDFDocument_getPage(pageIndex) {\\n      return this.catalog.getPage(pageIndex);\\n    },\\n    cleanup: function PDFDocument_cleanup() {\\n      return this.catalog.cleanup();\\n    }\\n  };\\n  return PDFDocument;\\n}();\\nexports.Page = Page;\\nexports.PDFDocument = PDFDocument;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\\nfunction getEncoding(encodingName) {\\n  switch (encodingName) {\\n    case 'WinAnsiEncoding':\\n      return WinAnsiEncoding;\\n    case 'StandardEncoding':\\n      return StandardEncoding;\\n    case 'MacRomanEncoding':\\n      return MacRomanEncoding;\\n    case 'SymbolSetEncoding':\\n      return SymbolSetEncoding;\\n    case 'ZapfDingbatsEncoding':\\n      return ZapfDingbatsEncoding;\\n    case 'ExpertEncoding':\\n      return ExpertEncoding;\\n    case 'MacExpertEncoding':\\n      return MacExpertEncoding;\\n    default:\\n      return null;\\n  }\\n}\\nexports.WinAnsiEncoding = WinAnsiEncoding;\\nexports.StandardEncoding = StandardEncoding;\\nexports.MacRomanEncoding = MacRomanEncoding;\\nexports.SymbolSetEncoding = SymbolSetEncoding;\\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\\nexports.ExpertEncoding = ExpertEncoding;\\nexports.getEncoding = getEncoding;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PartialEvaluator = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _cmap = require('./cmap');\\n\\nvar _stream = require('./stream');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _fonts = require('./fonts');\\n\\nvar _encodings = require('./encodings');\\n\\nvar _unicode = require('./unicode');\\n\\nvar _standard_fonts = require('./standard_fonts');\\n\\nvar _pattern = require('./pattern');\\n\\nvar _parser = require('./parser');\\n\\nvar _bidi = require('./bidi');\\n\\nvar _colorspace = require('./colorspace');\\n\\nvar _glyphlist = require('./glyphlist');\\n\\nvar _metrics = require('./metrics');\\n\\nvar _function = require('./function');\\n\\nvar _jpeg_stream = require('./jpeg_stream');\\n\\nvar _murmurhash = require('./murmurhash3');\\n\\nvar _operator_list = require('./operator_list');\\n\\nvar _image = require('./image');\\n\\nvar PartialEvaluator = function PartialEvaluatorClosure() {\\n  var DefaultPartialEvaluatorOptions = {\\n    forceDataSchema: false,\\n    maxImageSize: -1,\\n    disableFontFace: false,\\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\\n    ignoreErrors: false,\\n    isEvalSupported: true\\n  };\\n  function NativeImageDecoder(_ref) {\\n    var xref = _ref.xref,\\n        resources = _ref.resources,\\n        handler = _ref.handler,\\n        _ref$forceDataSchema = _ref.forceDataSchema,\\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\n\\n    this.xref = xref;\\n    this.resources = resources;\\n    this.handler = handler;\\n    this.forceDataSchema = forceDataSchema;\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\n  }\\n  NativeImageDecoder.prototype = {\\n    canDecode: function canDecode(image) {\\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\\n    },\\n    decode: function decode(image) {\\n      var dict = image.dict;\\n      var colorSpace = dict.get('ColorSpace', 'CS');\\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\\n      var numComps = colorSpace.numComps;\\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\\n      return decodePromise.then(function (message) {\\n        var data = message.data;\\n        return new _stream.Stream(data, 0, data.length, image.dict);\\n      });\\n    }\\n  };\\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\\n    var dict = image.dict;\\n    if (dict.has('DecodeParms') || dict.has('DP')) {\\n      return false;\\n    }\\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\\n  };\\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\\n    var dict = image.dict;\\n    if (dict.has('DecodeParms') || dict.has('DP')) {\\n      return false;\\n    }\\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\\n  };\\n  function PartialEvaluator(_ref2) {\\n    var _this = this;\\n\\n    var pdfManager = _ref2.pdfManager,\\n        xref = _ref2.xref,\\n        handler = _ref2.handler,\\n        pageIndex = _ref2.pageIndex,\\n        idFactory = _ref2.idFactory,\\n        fontCache = _ref2.fontCache,\\n        builtInCMapCache = _ref2.builtInCMapCache,\\n        _ref2$options = _ref2.options,\\n        options = _ref2$options === undefined ? null : _ref2$options,\\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\\n\\n    this.pdfManager = pdfManager;\\n    this.xref = xref;\\n    this.handler = handler;\\n    this.pageIndex = pageIndex;\\n    this.idFactory = idFactory;\\n    this.fontCache = fontCache;\\n    this.builtInCMapCache = builtInCMapCache;\\n    this.options = options || DefaultPartialEvaluatorOptions;\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\n    this.fetchBuiltInCMap = function (name) {\\n      var cachedCMap = _this.builtInCMapCache[name];\\n      if (cachedCMap) {\\n        return Promise.resolve(cachedCMap);\\n      }\\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\\n          _this.builtInCMapCache[name] = data;\\n        }\\n        return data;\\n      });\\n    };\\n  }\\n  var TIME_SLOT_DURATION_MS = 20;\\n  var CHECK_TIME_EVERY = 100;\\n  function TimeSlotManager() {\\n    this.reset();\\n  }\\n  TimeSlotManager.prototype = {\\n    check: function TimeSlotManager_check() {\\n      if (++this.checked < CHECK_TIME_EVERY) {\\n        return false;\\n      }\\n      this.checked = 0;\\n      return this.endTime <= Date.now();\\n    },\\n    reset: function TimeSlotManager_reset() {\\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\\n      this.checked = 0;\\n    }\\n  };\\n  function normalizeBlendMode(value) {\\n    if (!(0, _primitives.isName)(value)) {\\n      return 'source-over';\\n    }\\n    switch (value.name) {\\n      case 'Normal':\\n      case 'Compatible':\\n        return 'source-over';\\n      case 'Multiply':\\n        return 'multiply';\\n      case 'Screen':\\n        return 'screen';\\n      case 'Overlay':\\n        return 'overlay';\\n      case 'Darken':\\n        return 'darken';\\n      case 'Lighten':\\n        return 'lighten';\\n      case 'ColorDodge':\\n        return 'color-dodge';\\n      case 'ColorBurn':\\n        return 'color-burn';\\n      case 'HardLight':\\n        return 'hard-light';\\n      case 'SoftLight':\\n        return 'soft-light';\\n      case 'Difference':\\n        return 'difference';\\n      case 'Exclusion':\\n        return 'exclusion';\\n      case 'Hue':\\n        return 'hue';\\n      case 'Saturation':\\n        return 'saturation';\\n      case 'Color':\\n        return 'color';\\n      case 'Luminosity':\\n        return 'luminosity';\\n    }\\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\\n    return 'source-over';\\n  }\\n  var deferred = Promise.resolve();\\n  var TILING_PATTERN = 1,\\n      SHADING_PATTERN = 2;\\n  PartialEvaluator.prototype = {\\n    clone: function clone() {\\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\\n\\n      var newEvaluator = Object.create(this);\\n      newEvaluator.options = newOptions;\\n      return newEvaluator;\\n    },\\n\\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\\n      if (!(0, _primitives.isDict)(resources)) {\\n        return false;\\n      }\\n      var processed = Object.create(null);\\n      if (resources.objId) {\\n        processed[resources.objId] = true;\\n      }\\n      var nodes = [resources],\\n          xref = this.xref;\\n      while (nodes.length) {\\n        var key, i, ii;\\n        var node = nodes.shift();\\n        var graphicStates = node.get('ExtGState');\\n        if ((0, _primitives.isDict)(graphicStates)) {\\n          var graphicStatesKeys = graphicStates.getKeys();\\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\\n            key = graphicStatesKeys[i];\\n            var graphicState = graphicStates.get(key);\\n            var bm = graphicState.get('BM');\\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\\n              return true;\\n            }\\n          }\\n        }\\n        var xObjects = node.get('XObject');\\n        if (!(0, _primitives.isDict)(xObjects)) {\\n          continue;\\n        }\\n        var xObjectsKeys = xObjects.getKeys();\\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\\n          key = xObjectsKeys[i];\\n          var xObject = xObjects.getRaw(key);\\n          if ((0, _primitives.isRef)(xObject)) {\\n            if (processed[xObject.toString()]) {\\n              continue;\\n            }\\n            xObject = xref.fetch(xObject);\\n          }\\n          if (!(0, _primitives.isStream)(xObject)) {\\n            continue;\\n          }\\n          if (xObject.dict.objId) {\\n            if (processed[xObject.dict.objId]) {\\n              continue;\\n            }\\n            processed[xObject.dict.objId] = true;\\n          }\\n          var xResources = xObject.dict.get('Resources');\\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\\n            nodes.push(xResources);\\n            if (xResources.objId) {\\n              processed[xResources.objId] = true;\\n            }\\n          }\\n        }\\n      }\\n      return false;\\n    },\\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\\n      var dict = xobj.dict;\\n      var matrix = dict.getArray('Matrix');\\n      var bbox = dict.getArray('BBox');\\n      var group = dict.get('Group');\\n      if (group) {\\n        var groupOptions = {\\n          matrix: matrix,\\n          bbox: bbox,\\n          smask: smask,\\n          isolated: false,\\n          knockout: false\\n        };\\n        var groupSubtype = group.get('S');\\n        var colorSpace = null;\\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\\n          groupOptions.isolated = group.get('I') || false;\\n          groupOptions.knockout = group.get('K') || false;\\n          if (group.has('CS')) {\\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\\n          }\\n        }\\n        if (smask && smask.backdrop) {\\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\\n        }\\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\\n      }\\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\\n      return this.getOperatorList({\\n        stream: xobj,\\n        task: task,\\n        resources: dict.get('Resources') || resources,\\n        operatorList: operatorList,\\n        initialState: initialState\\n      }).then(function () {\\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\\n        if (group) {\\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\\n        }\\n      });\\n    },\\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\\n      var _this2 = this;\\n\\n      var dict = image.dict;\\n      var w = dict.get('Width', 'W');\\n      var h = dict.get('Height', 'H');\\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\\n        return;\\n      }\\n      var maxImageSize = this.options.maxImageSize;\\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\\n        return;\\n      }\\n      var imageMask = dict.get('ImageMask', 'IM') || false;\\n      var imgData, args;\\n      if (imageMask) {\\n        var width = dict.get('Width', 'W');\\n        var height = dict.get('Height', 'H');\\n        var bitStrideLength = width + 7 >> 3;\\n        var imgArray = image.getBytes(bitStrideLength * height);\\n        var decode = dict.getArray('Decode', 'D');\\n        imgData = _image.PDFImage.createMask({\\n          imgArray: imgArray,\\n          width: width,\\n          height: height,\\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\\n          inverseDecode: !!decode && decode[0] > 0\\n        });\\n        imgData.cached = true;\\n        args = [imgData];\\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\\n        if (cacheKey) {\\n          imageCache[cacheKey] = {\\n            fn: _util.OPS.paintImageMaskXObject,\\n            args: args\\n          };\\n        }\\n        return;\\n      }\\n      var softMask = dict.get('SMask', 'SM') || false;\\n      var mask = dict.get('Mask') || false;\\n      var SMALL_IMAGE_DIMENSIONS = 200;\\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\\n        var imageObj = new _image.PDFImage({\\n          xref: this.xref,\\n          res: resources,\\n          image: image,\\n          isInline: inline,\\n          pdfFunctionFactory: this.pdfFunctionFactory\\n        });\\n        imgData = imageObj.createImageData(true);\\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\\n        return;\\n      }\\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\\n      var objId = 'img_' + this.idFactory.createObjId();\\n      operatorList.addDependency(objId);\\n      args = [objId, w, h];\\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\\n        if (cacheKey) {\\n          imageCache[cacheKey] = {\\n            fn: _util.OPS.paintJpegXObject,\\n            args: args\\n          };\\n        }\\n        return;\\n      }\\n      var nativeImageDecoder = null;\\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\\n        nativeImageDecoder = new NativeImageDecoder({\\n          xref: this.xref,\\n          resources: resources,\\n          handler: this.handler,\\n          forceDataSchema: this.options.forceDataSchema,\\n          pdfFunctionFactory: this.pdfFunctionFactory\\n        });\\n      }\\n      _image.PDFImage.buildImage({\\n        handler: this.handler,\\n        xref: this.xref,\\n        res: resources,\\n        image: image,\\n        isInline: inline,\\n        nativeDecoder: nativeImageDecoder,\\n        pdfFunctionFactory: this.pdfFunctionFactory\\n      }).then(function (imageObj) {\\n        var imgData = imageObj.createImageData(false);\\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\\n      }).catch(function (reason) {\\n        (0, _util.warn)('Unable to decode image: ' + reason);\\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\\n      });\\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\\n      if (cacheKey) {\\n        imageCache[cacheKey] = {\\n          fn: _util.OPS.paintImageXObject,\\n          args: args\\n        };\\n      }\\n    },\\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\\n      var smaskContent = smask.get('G');\\n      var smaskOptions = {\\n        subtype: smask.get('S').name,\\n        backdrop: smask.get('BC')\\n      };\\n      var transferObj = smask.get('TR');\\n      if ((0, _function.isPDFFunction)(transferObj)) {\\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\\n        var transferMap = new Uint8Array(256);\\n        var tmp = new Float32Array(1);\\n        for (var i = 0; i < 256; i++) {\\n          tmp[0] = i / 255;\\n          transferFn(tmp, 0, tmp, 0);\\n          transferMap[i] = tmp[0] * 255 | 0;\\n        }\\n        smaskOptions.transferMap = transferMap;\\n      }\\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\\n    },\\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\\n      var _this3 = this;\\n\\n      var tilingOpList = new _operator_list.OperatorList();\\n      var resourcesArray = [patternDict.get('Resources'), resources];\\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\\n      return this.getOperatorList({\\n        stream: pattern,\\n        task: task,\\n        resources: patternResources,\\n        operatorList: tilingOpList\\n      }).then(function () {\\n        return (0, _pattern.getTilingPatternIR)({\\n          fnArray: tilingOpList.fnArray,\\n          argsArray: tilingOpList.argsArray\\n        }, patternDict, args);\\n      }).then(function (tilingPatternIR) {\\n        operatorList.addDependencies(tilingOpList.dependencies);\\n        operatorList.addOp(fn, tilingPatternIR);\\n      }, function (reason) {\\n        if (_this3.options.ignoreErrors) {\\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n          (0, _util.warn)('handleTilingType - ignoring pattern: \\\"' + reason + '\\\".');\\n          return;\\n        }\\n        throw reason;\\n      });\\n    },\\n\\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\\n      var _this4 = this;\\n\\n      var fontName;\\n      if (fontArgs) {\\n        fontArgs = fontArgs.slice();\\n        fontName = fontArgs[0].name;\\n      }\\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\\n        if (!translated.font.isType3Font) {\\n          return translated;\\n        }\\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\\n          return translated;\\n        }).catch(function (reason) {\\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\\n        });\\n      }).then(function (translated) {\\n        state.font = translated.font;\\n        translated.send(_this4.handler);\\n        return translated.loadedName;\\n      });\\n    },\\n    handleText: function PartialEvaluator_handleText(chars, state) {\\n      var _this5 = this;\\n\\n      var font = state.font;\\n      var glyphs = font.charsToGlyphs(chars);\\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\\n        var buildPath = function buildPath(fontChar) {\\n          if (!font.renderer.hasBuiltPath(fontChar)) {\\n            var path = font.renderer.getPathJs(fontChar);\\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\\n          }\\n        };\\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\\n          var glyph = glyphs[i];\\n          buildPath(glyph.fontChar);\\n          var accent = glyph.accent;\\n          if (accent && accent.fontChar) {\\n            buildPath(accent.fontChar);\\n          }\\n        }\\n      }\\n      return glyphs;\\n    },\\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\\n      var _this6 = this;\\n\\n      var gStateObj = [];\\n      var gStateKeys = gState.getKeys();\\n      var promise = Promise.resolve();\\n\\n      var _loop = function _loop() {\\n        var key = gStateKeys[i];\\n        var value = gState.get(key);\\n        switch (key) {\\n          case 'Type':\\n            break;\\n          case 'LW':\\n          case 'LC':\\n          case 'LJ':\\n          case 'ML':\\n          case 'D':\\n          case 'RI':\\n          case 'FL':\\n          case 'CA':\\n          case 'ca':\\n            gStateObj.push([key, value]);\\n            break;\\n          case 'Font':\\n            promise = promise.then(function () {\\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\\n                operatorList.addDependency(loadedName);\\n                gStateObj.push([key, [loadedName, value[1]]]);\\n              });\\n            });\\n            break;\\n          case 'BM':\\n            gStateObj.push([key, normalizeBlendMode(value)]);\\n            break;\\n          case 'SMask':\\n            if ((0, _primitives.isName)(value, 'None')) {\\n              gStateObj.push([key, false]);\\n              break;\\n            }\\n            if ((0, _primitives.isDict)(value)) {\\n              promise = promise.then(function () {\\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\\n              });\\n              gStateObj.push([key, true]);\\n            } else {\\n              (0, _util.warn)('Unsupported SMask type');\\n            }\\n            break;\\n          case 'OP':\\n          case 'op':\\n          case 'OPM':\\n          case 'BG':\\n          case 'BG2':\\n          case 'UCR':\\n          case 'UCR2':\\n          case 'TR':\\n          case 'TR2':\\n          case 'HT':\\n          case 'SM':\\n          case 'SA':\\n          case 'AIS':\\n          case 'TK':\\n            (0, _util.info)('graphic state operator ' + key);\\n            break;\\n          default:\\n            (0, _util.info)('Unknown graphic state operator ' + key);\\n            break;\\n        }\\n      };\\n\\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\\n        _loop();\\n      }\\n      return promise.then(function () {\\n        if (gStateObj.length > 0) {\\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\\n        }\\n      });\\n    },\\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\\n      var _this7 = this;\\n\\n      function errorFont() {\\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\\n      }\\n      var fontRef,\\n          xref = this.xref;\\n      if (font) {\\n        if (!(0, _primitives.isRef)(font)) {\\n          throw new Error('The \\\"font\\\" object should be a reference.');\\n        }\\n        fontRef = font;\\n      } else {\\n        var fontRes = resources.get('Font');\\n        if (fontRes) {\\n          fontRef = fontRes.getRaw(fontName);\\n        } else {\\n          (0, _util.warn)('fontRes not available');\\n          return errorFont();\\n        }\\n      }\\n      if (!fontRef) {\\n        (0, _util.warn)('fontRef not available');\\n        return errorFont();\\n      }\\n      if (this.fontCache.has(fontRef)) {\\n        return this.fontCache.get(fontRef);\\n      }\\n      font = xref.fetchIfRef(fontRef);\\n      if (!(0, _primitives.isDict)(font)) {\\n        return errorFont();\\n      }\\n      if (font.translated) {\\n        return font.translated;\\n      }\\n      var fontCapability = (0, _util.createPromiseCapability)();\\n      var preEvaluatedFont = this.preEvaluateFont(font);\\n      var descriptor = preEvaluatedFont.descriptor;\\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\\n          fontID;\\n      if (fontRefIsRef) {\\n        fontID = fontRef.toString();\\n      }\\n      if ((0, _primitives.isDict)(descriptor)) {\\n        if (!descriptor.fontAliases) {\\n          descriptor.fontAliases = Object.create(null);\\n        }\\n        var fontAliases = descriptor.fontAliases;\\n        var hash = preEvaluatedFont.hash;\\n        if (fontAliases[hash]) {\\n          var aliasFontRef = fontAliases[hash].aliasRef;\\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\\n            this.fontCache.putAlias(fontRef, aliasFontRef);\\n            return this.fontCache.get(fontRef);\\n          }\\n        } else {\\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\\n        }\\n        if (fontRefIsRef) {\\n          fontAliases[hash].aliasRef = fontRef;\\n        }\\n        fontID = fontAliases[hash].fontID;\\n      }\\n      if (fontRefIsRef) {\\n        this.fontCache.put(fontRef, fontCapability.promise);\\n      } else {\\n        if (!fontID) {\\n          fontID = this.idFactory.createObjId();\\n        }\\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\\n      }\\n      (0, _util.assert)(fontID, 'The \\\"fontID\\\" must be defined.');\\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\\n      font.translated = fontCapability.promise;\\n      var translatedPromise;\\n      try {\\n        translatedPromise = this.translateFont(preEvaluatedFont);\\n      } catch (e) {\\n        translatedPromise = Promise.reject(e);\\n      }\\n      translatedPromise.then(function (translatedFont) {\\n        if (translatedFont.fontType !== undefined) {\\n          var xrefFontStats = xref.stats.fontTypes;\\n          xrefFontStats[translatedFont.fontType] = true;\\n        }\\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\\n      }).catch(function (reason) {\\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\\n        try {\\n          var descriptor = preEvaluatedFont.descriptor;\\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\\n          var subtype = fontFile3 && fontFile3.get('Subtype');\\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\\n          var xrefFontStats = xref.stats.fontTypes;\\n          xrefFontStats[fontType] = true;\\n        } catch (ex) {}\\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\\n      });\\n      return fontCapability.promise;\\n    },\\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\\n      var lastIndex = operatorList.length - 1;\\n      if (!args) {\\n        args = [];\\n      }\\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\\n      } else {\\n        var opArgs = operatorList.argsArray[lastIndex];\\n        opArgs[0].push(fn);\\n        Array.prototype.push.apply(opArgs[1], args);\\n      }\\n    },\\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\\n      var patternName = args[args.length - 1];\\n      var pattern;\\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\\n        var typeNum = dict.get('PatternType');\\n        if (typeNum === TILING_PATTERN) {\\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\\n        } else if (typeNum === SHADING_PATTERN) {\\n          var shading = dict.get('Shading');\\n          var matrix = dict.getArray('Matrix');\\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\\n          operatorList.addOp(fn, pattern.getIR());\\n          return Promise.resolve();\\n        }\\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\\n      }\\n      operatorList.addOp(fn, args);\\n      return Promise.resolve();\\n    },\\n    getOperatorList: function getOperatorList(_ref3) {\\n      var _this8 = this;\\n\\n      var stream = _ref3.stream,\\n          task = _ref3.task,\\n          resources = _ref3.resources,\\n          operatorList = _ref3.operatorList,\\n          _ref3$initialState = _ref3.initialState,\\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\\n\\n      resources = resources || _primitives.Dict.empty;\\n      initialState = initialState || new EvalState();\\n      if (!operatorList) {\\n        throw new Error('getOperatorList: missing \\\"operatorList\\\" parameter');\\n      }\\n      var self = this;\\n      var xref = this.xref;\\n      var imageCache = Object.create(null);\\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\\n      var stateManager = new StateManager(initialState);\\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\n      var timeSlotManager = new TimeSlotManager();\\n      function closePendingRestoreOPS(argument) {\\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\\n          operatorList.addOp(_util.OPS.restore, []);\\n        }\\n      }\\n      return new Promise(function promiseBody(resolve, reject) {\\n        var next = function next(promise) {\\n          promise.then(function () {\\n            try {\\n              promiseBody(resolve, reject);\\n            } catch (ex) {\\n              reject(ex);\\n            }\\n          }, reject);\\n        };\\n        task.ensureNotTerminated();\\n        timeSlotManager.reset();\\n        var stop,\\n            operation = {},\\n            i,\\n            ii,\\n            cs;\\n        while (!(stop = timeSlotManager.check())) {\\n          operation.args = null;\\n          if (!preprocessor.read(operation)) {\\n            break;\\n          }\\n          var args = operation.args;\\n          var fn = operation.fn;\\n          switch (fn | 0) {\\n            case _util.OPS.paintXObject:\\n              var name = args[0].name;\\n              if (name && imageCache[name] !== undefined) {\\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\\n                args = null;\\n                continue;\\n              }\\n              next(new Promise(function (resolveXObject, rejectXObject) {\\n                if (!name) {\\n                  throw new _util.FormatError('XObject must be referred to by name.');\\n                }\\n                var xobj = xobjs.get(name);\\n                if (!xobj) {\\n                  operatorList.addOp(fn, args);\\n                  resolveXObject();\\n                  return;\\n                }\\n                if (!(0, _primitives.isStream)(xobj)) {\\n                  throw new _util.FormatError('XObject should be a stream');\\n                }\\n                var type = xobj.dict.get('Subtype');\\n                if (!(0, _primitives.isName)(type)) {\\n                  throw new _util.FormatError('XObject should have a Name subtype');\\n                }\\n                if (type.name === 'Form') {\\n                  stateManager.save();\\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\\n                    stateManager.restore();\\n                    resolveXObject();\\n                  }, rejectXObject);\\n                  return;\\n                } else if (type.name === 'Image') {\\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\\n                } else if (type.name === 'PS') {\\n                  (0, _util.info)('Ignored XObject subtype PS');\\n                } else {\\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\\n                }\\n                resolveXObject();\\n              }).catch(function (reason) {\\n                if (self.options.ignoreErrors) {\\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \\\"' + reason + '\\\".');\\n                  return;\\n                }\\n                throw reason;\\n              }));\\n              return;\\n            case _util.OPS.setFont:\\n              var fontSize = args[1];\\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\\n                operatorList.addDependency(loadedName);\\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\\n              }));\\n              return;\\n            case _util.OPS.endInlineImage:\\n              var cacheKey = args[0].cacheKey;\\n              if (cacheKey) {\\n                var cacheEntry = imageCache[cacheKey];\\n                if (cacheEntry !== undefined) {\\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\\n                  args = null;\\n                  continue;\\n                }\\n              }\\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\\n              args = null;\\n              continue;\\n            case _util.OPS.showText:\\n              args[0] = self.handleText(args[0], stateManager.state);\\n              break;\\n            case _util.OPS.showSpacedText:\\n              var arr = args[0];\\n              var combinedGlyphs = [];\\n              var arrLength = arr.length;\\n              var state = stateManager.state;\\n              for (i = 0; i < arrLength; ++i) {\\n                var arrItem = arr[i];\\n                if ((0, _util.isString)(arrItem)) {\\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\\n                } else if ((0, _util.isNum)(arrItem)) {\\n                  combinedGlyphs.push(arrItem);\\n                }\\n              }\\n              args[0] = combinedGlyphs;\\n              fn = _util.OPS.showText;\\n              break;\\n            case _util.OPS.nextLineShowText:\\n              operatorList.addOp(_util.OPS.nextLine);\\n              args[0] = self.handleText(args[0], stateManager.state);\\n              fn = _util.OPS.showText;\\n              break;\\n            case _util.OPS.nextLineSetSpacingShowText:\\n              operatorList.addOp(_util.OPS.nextLine);\\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\\n              args[0] = self.handleText(args[0], stateManager.state);\\n              fn = _util.OPS.showText;\\n              break;\\n            case _util.OPS.setTextRenderingMode:\\n              stateManager.state.textRenderingMode = args[0];\\n              break;\\n            case _util.OPS.setFillColorSpace:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\n              continue;\\n            case _util.OPS.setStrokeColorSpace:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\n              continue;\\n            case _util.OPS.setFillColor:\\n              cs = stateManager.state.fillColorSpace;\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeColor:\\n              cs = stateManager.state.strokeColorSpace;\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.setFillGray:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeGray:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.setFillCMYKColor:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeCMYKColor:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.setFillRGBColor:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\n              break;\\n            case _util.OPS.setStrokeRGBColor:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\n              break;\\n            case _util.OPS.setFillColorN:\\n              cs = stateManager.state.fillColorSpace;\\n              if (cs.name === 'Pattern') {\\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\\n                return;\\n              }\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeColorN:\\n              cs = stateManager.state.strokeColorSpace;\\n              if (cs.name === 'Pattern') {\\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\\n                return;\\n              }\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.shadingFill:\\n              var shadingRes = resources.get('Shading');\\n              if (!shadingRes) {\\n                throw new _util.FormatError('No shading resource found');\\n              }\\n              var shading = shadingRes.get(args[0].name);\\n              if (!shading) {\\n                throw new _util.FormatError('No shading object found');\\n              }\\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\\n              var patternIR = shadingFill.getIR();\\n              args = [patternIR];\\n              fn = _util.OPS.shadingFill;\\n              break;\\n            case _util.OPS.setGState:\\n              var dictName = args[0];\\n              var extGState = resources.get('ExtGState');\\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\\n                break;\\n              }\\n              var gState = extGState.get(dictName.name);\\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\\n              return;\\n            case _util.OPS.moveTo:\\n            case _util.OPS.lineTo:\\n            case _util.OPS.curveTo:\\n            case _util.OPS.curveTo2:\\n            case _util.OPS.curveTo3:\\n            case _util.OPS.closePath:\\n              self.buildPath(operatorList, fn, args);\\n              continue;\\n            case _util.OPS.rectangle:\\n              self.buildPath(operatorList, fn, args);\\n              continue;\\n            case _util.OPS.markPoint:\\n            case _util.OPS.markPointProps:\\n            case _util.OPS.beginMarkedContent:\\n            case _util.OPS.beginMarkedContentProps:\\n            case _util.OPS.endMarkedContent:\\n            case _util.OPS.beginCompat:\\n            case _util.OPS.endCompat:\\n              continue;\\n            default:\\n              if (args !== null) {\\n                for (i = 0, ii = args.length; i < ii; i++) {\\n                  if (args[i] instanceof _primitives.Dict) {\\n                    break;\\n                  }\\n                }\\n                if (i < ii) {\\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\\n                  continue;\\n                }\\n              }\\n          }\\n          operatorList.addOp(fn, args);\\n        }\\n        if (stop) {\\n          next(deferred);\\n          return;\\n        }\\n        closePendingRestoreOPS();\\n        resolve();\\n      }).catch(function (reason) {\\n        if (_this8.options.ignoreErrors) {\\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\\n          closePendingRestoreOPS();\\n          return;\\n        }\\n        throw reason;\\n      });\\n    },\\n    getTextContent: function getTextContent(_ref4) {\\n      var _this9 = this;\\n\\n      var stream = _ref4.stream,\\n          task = _ref4.task,\\n          resources = _ref4.resources,\\n          _ref4$stateManager = _ref4.stateManager,\\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\\n          _ref4$combineTextItem = _ref4.combineTextItems,\\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\\n          sink = _ref4.sink,\\n          _ref4$seenStyles = _ref4.seenStyles,\\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\\n\\n      resources = resources || _primitives.Dict.empty;\\n      stateManager = stateManager || new StateManager(new TextState());\\n      var WhitespaceRegexp = /\\\\s/g;\\n      var textContent = {\\n        items: [],\\n        styles: Object.create(null)\\n      };\\n      var textContentItem = {\\n        initialized: false,\\n        str: [],\\n        width: 0,\\n        height: 0,\\n        vertical: false,\\n        lastAdvanceWidth: 0,\\n        lastAdvanceHeight: 0,\\n        textAdvanceScale: 0,\\n        spaceWidth: 0,\\n        fakeSpaceMin: Infinity,\\n        fakeMultiSpaceMin: Infinity,\\n        fakeMultiSpaceMax: -0,\\n        textRunBreakAllowed: false,\\n        transform: null,\\n        fontName: null\\n      };\\n      var SPACE_FACTOR = 0.3;\\n      var MULTI_SPACE_FACTOR = 1.5;\\n      var MULTI_SPACE_FACTOR_MAX = 4;\\n      var self = this;\\n      var xref = this.xref;\\n      var xobjs = null;\\n      var skipEmptyXObjs = Object.create(null);\\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\n      var textState;\\n      function ensureTextContentItem() {\\n        if (textContentItem.initialized) {\\n          return textContentItem;\\n        }\\n        var font = textState.font;\\n        if (!(font.loadedName in seenStyles)) {\\n          seenStyles[font.loadedName] = true;\\n          textContent.styles[font.loadedName] = {\\n            fontFamily: font.fallbackName,\\n            ascent: font.ascent,\\n            descent: font.descent,\\n            vertical: font.vertical\\n          };\\n        }\\n        textContentItem.fontName = font.loadedName;\\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\\n          var glyphHeight = font.bbox[3] - font.bbox[1];\\n          if (glyphHeight > 0) {\\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\\n            tsm[3] *= glyphHeight;\\n          }\\n        }\\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\\n        textContentItem.transform = trm;\\n        if (!font.vertical) {\\n          textContentItem.width = 0;\\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\\n          textContentItem.vertical = false;\\n        } else {\\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\\n          textContentItem.height = 0;\\n          textContentItem.vertical = true;\\n        }\\n        var a = textState.textLineMatrix[0];\\n        var b = textState.textLineMatrix[1];\\n        var scaleLineX = Math.sqrt(a * a + b * b);\\n        a = textState.ctm[0];\\n        b = textState.ctm[1];\\n        var scaleCtmX = Math.sqrt(a * a + b * b);\\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\\n        textContentItem.lastAdvanceWidth = 0;\\n        textContentItem.lastAdvanceHeight = 0;\\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\\n        if (spaceWidth) {\\n          textContentItem.spaceWidth = spaceWidth;\\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\\n        } else {\\n          textContentItem.spaceWidth = 0;\\n          textContentItem.fakeSpaceMin = Infinity;\\n          textContentItem.fakeMultiSpaceMin = Infinity;\\n          textContentItem.fakeMultiSpaceMax = 0;\\n          textContentItem.textRunBreakAllowed = false;\\n        }\\n        textContentItem.initialized = true;\\n        return textContentItem;\\n      }\\n      function replaceWhitespace(str) {\\n        var i = 0,\\n            ii = str.length,\\n            code;\\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\\n          i++;\\n        }\\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\\n      }\\n      function runBidiTransform(textChunk) {\\n        var str = textChunk.str.join('');\\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\\n        return {\\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\\n          dir: bidiResult.dir,\\n          width: textChunk.width,\\n          height: textChunk.height,\\n          transform: textChunk.transform,\\n          fontName: textChunk.fontName\\n        };\\n      }\\n      function handleSetFont(fontName, fontRef) {\\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\\n          textState.font = translated.font;\\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\n        });\\n      }\\n      function buildTextContentItem(chars) {\\n        var font = textState.font;\\n        var textChunk = ensureTextContentItem();\\n        var width = 0;\\n        var height = 0;\\n        var glyphs = font.charsToGlyphs(chars);\\n        for (var i = 0; i < glyphs.length; i++) {\\n          var glyph = glyphs[i];\\n          var glyphWidth = null;\\n          if (font.vertical && glyph.vmetric) {\\n            glyphWidth = glyph.vmetric[0];\\n          } else {\\n            glyphWidth = glyph.width;\\n          }\\n          var glyphUnicode = glyph.unicode;\\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\\n          }\\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\\n          var charSpacing = textState.charSpacing;\\n          if (glyph.isSpace) {\\n            var wordSpacing = textState.wordSpacing;\\n            charSpacing += wordSpacing;\\n            if (wordSpacing > 0) {\\n              addFakeSpaces(wordSpacing, textChunk.str);\\n            }\\n          }\\n          var tx = 0;\\n          var ty = 0;\\n          if (!font.vertical) {\\n            var w0 = glyphWidth * textState.fontMatrix[0];\\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\\n            width += tx;\\n          } else {\\n            var w1 = glyphWidth * textState.fontMatrix[0];\\n            ty = w1 * textState.fontSize + charSpacing;\\n            height += ty;\\n          }\\n          textState.translateTextMatrix(tx, ty);\\n          textChunk.str.push(glyphUnicode);\\n        }\\n        if (!font.vertical) {\\n          textChunk.lastAdvanceWidth = width;\\n          textChunk.width += width;\\n        } else {\\n          textChunk.lastAdvanceHeight = height;\\n          textChunk.height += Math.abs(height);\\n        }\\n        return textChunk;\\n      }\\n      function addFakeSpaces(width, strBuf) {\\n        if (width < textContentItem.fakeSpaceMin) {\\n          return;\\n        }\\n        if (width < textContentItem.fakeMultiSpaceMin) {\\n          strBuf.push(' ');\\n          return;\\n        }\\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\\n        while (fakeSpaces-- > 0) {\\n          strBuf.push(' ');\\n        }\\n      }\\n      function flushTextContentItem() {\\n        if (!textContentItem.initialized) {\\n          return;\\n        }\\n        textContentItem.width *= textContentItem.textAdvanceScale;\\n        textContentItem.height *= textContentItem.textAdvanceScale;\\n        textContent.items.push(runBidiTransform(textContentItem));\\n        textContentItem.initialized = false;\\n        textContentItem.str.length = 0;\\n      }\\n      function enqueueChunk() {\\n        var length = textContent.items.length;\\n        if (length > 0) {\\n          sink.enqueue(textContent, length);\\n          textContent.items = [];\\n          textContent.styles = Object.create(null);\\n        }\\n      }\\n      var timeSlotManager = new TimeSlotManager();\\n      return new Promise(function promiseBody(resolve, reject) {\\n        var next = function next(promise) {\\n          enqueueChunk();\\n          Promise.all([promise, sink.ready]).then(function () {\\n            try {\\n              promiseBody(resolve, reject);\\n            } catch (ex) {\\n              reject(ex);\\n            }\\n          }, reject);\\n        };\\n        task.ensureNotTerminated();\\n        timeSlotManager.reset();\\n        var stop,\\n            operation = {},\\n            args = [];\\n        while (!(stop = timeSlotManager.check())) {\\n          args.length = 0;\\n          operation.args = args;\\n          if (!preprocessor.read(operation)) {\\n            break;\\n          }\\n          textState = stateManager.state;\\n          var fn = operation.fn;\\n          args = operation.args;\\n          var advance, diff;\\n          switch (fn | 0) {\\n            case _util.OPS.setFont:\\n              var fontNameArg = args[0].name,\\n                  fontSizeArg = args[1];\\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\\n                break;\\n              }\\n              flushTextContentItem();\\n              textState.fontName = fontNameArg;\\n              textState.fontSize = fontSizeArg;\\n              next(handleSetFont(fontNameArg, null));\\n              return;\\n            case _util.OPS.setTextRise:\\n              flushTextContentItem();\\n              textState.textRise = args[0];\\n              break;\\n            case _util.OPS.setHScale:\\n              flushTextContentItem();\\n              textState.textHScale = args[0] / 100;\\n              break;\\n            case _util.OPS.setLeading:\\n              flushTextContentItem();\\n              textState.leading = args[0];\\n              break;\\n            case _util.OPS.moveText:\\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\\n              advance = args[0] - args[1];\\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\\n                textState.translateTextLineMatrix(args[0], args[1]);\\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\\n                addFakeSpaces(diff, textContentItem.str);\\n                break;\\n              }\\n              flushTextContentItem();\\n              textState.translateTextLineMatrix(args[0], args[1]);\\n              textState.textMatrix = textState.textLineMatrix.slice();\\n              break;\\n            case _util.OPS.setLeadingMoveText:\\n              flushTextContentItem();\\n              textState.leading = -args[1];\\n              textState.translateTextLineMatrix(args[0], args[1]);\\n              textState.textMatrix = textState.textLineMatrix.slice();\\n              break;\\n            case _util.OPS.nextLine:\\n              flushTextContentItem();\\n              textState.carriageReturn();\\n              break;\\n            case _util.OPS.setTextMatrix:\\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\\n                textState.translateTextLineMatrix(advance.width, advance.height);\\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\\n                addFakeSpaces(diff, textContentItem.str);\\n                break;\\n              }\\n              flushTextContentItem();\\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\n              break;\\n            case _util.OPS.setCharSpacing:\\n              textState.charSpacing = args[0];\\n              break;\\n            case _util.OPS.setWordSpacing:\\n              textState.wordSpacing = args[0];\\n              break;\\n            case _util.OPS.beginText:\\n              flushTextContentItem();\\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\n              break;\\n            case _util.OPS.showSpacedText:\\n              var items = args[0];\\n              var offset;\\n              for (var j = 0, jj = items.length; j < jj; j++) {\\n                if (typeof items[j] === 'string') {\\n                  buildTextContentItem(items[j]);\\n                } else if ((0, _util.isNum)(items[j])) {\\n                  ensureTextContentItem();\\n                  advance = items[j] * textState.fontSize / 1000;\\n                  var breakTextRun = false;\\n                  if (textState.font.vertical) {\\n                    offset = advance;\\n                    textState.translateTextMatrix(0, offset);\\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\n                    if (!breakTextRun) {\\n                      textContentItem.height += offset;\\n                    }\\n                  } else {\\n                    advance = -advance;\\n                    offset = advance * textState.textHScale;\\n                    textState.translateTextMatrix(offset, 0);\\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\n                    if (!breakTextRun) {\\n                      textContentItem.width += offset;\\n                    }\\n                  }\\n                  if (breakTextRun) {\\n                    flushTextContentItem();\\n                  } else if (advance > 0) {\\n                    addFakeSpaces(advance, textContentItem.str);\\n                  }\\n                }\\n              }\\n              break;\\n            case _util.OPS.showText:\\n              buildTextContentItem(args[0]);\\n              break;\\n            case _util.OPS.nextLineShowText:\\n              flushTextContentItem();\\n              textState.carriageReturn();\\n              buildTextContentItem(args[0]);\\n              break;\\n            case _util.OPS.nextLineSetSpacingShowText:\\n              flushTextContentItem();\\n              textState.wordSpacing = args[0];\\n              textState.charSpacing = args[1];\\n              textState.carriageReturn();\\n              buildTextContentItem(args[2]);\\n              break;\\n            case _util.OPS.paintXObject:\\n              flushTextContentItem();\\n              if (!xobjs) {\\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\\n              }\\n              var name = args[0].name;\\n              if (name && skipEmptyXObjs[name] !== undefined) {\\n                break;\\n              }\\n              next(new Promise(function (resolveXObject, rejectXObject) {\\n                if (!name) {\\n                  throw new _util.FormatError('XObject must be referred to by name.');\\n                }\\n                var xobj = xobjs.get(name);\\n                if (!xobj) {\\n                  resolveXObject();\\n                  return;\\n                }\\n                if (!(0, _primitives.isStream)(xobj)) {\\n                  throw new _util.FormatError('XObject should be a stream');\\n                }\\n                var type = xobj.dict.get('Subtype');\\n                if (!(0, _primitives.isName)(type)) {\\n                  throw new _util.FormatError('XObject should have a Name subtype');\\n                }\\n                if (type.name !== 'Form') {\\n                  skipEmptyXObjs[name] = true;\\n                  resolveXObject();\\n                  return;\\n                }\\n                var currentState = stateManager.state.clone();\\n                var xObjStateManager = new StateManager(currentState);\\n                var matrix = xobj.dict.getArray('Matrix');\\n                if (Array.isArray(matrix) && matrix.length === 6) {\\n                  xObjStateManager.transform(matrix);\\n                }\\n                enqueueChunk();\\n                var sinkWrapper = {\\n                  enqueueInvoked: false,\\n                  enqueue: function enqueue(chunk, size) {\\n                    this.enqueueInvoked = true;\\n                    sink.enqueue(chunk, size);\\n                  },\\n\\n                  get desiredSize() {\\n                    return sink.desiredSize;\\n                  },\\n                  get ready() {\\n                    return sink.ready;\\n                  }\\n                };\\n                self.getTextContent({\\n                  stream: xobj,\\n                  task: task,\\n                  resources: xobj.dict.get('Resources') || resources,\\n                  stateManager: xObjStateManager,\\n                  normalizeWhitespace: normalizeWhitespace,\\n                  combineTextItems: combineTextItems,\\n                  sink: sinkWrapper,\\n                  seenStyles: seenStyles\\n                }).then(function () {\\n                  if (!sinkWrapper.enqueueInvoked) {\\n                    skipEmptyXObjs[name] = true;\\n                  }\\n                  resolveXObject();\\n                }, rejectXObject);\\n              }).catch(function (reason) {\\n                if (reason instanceof _util.AbortException) {\\n                  return;\\n                }\\n                if (self.options.ignoreErrors) {\\n                  (0, _util.warn)('getTextContent - ignoring XObject: \\\"' + reason + '\\\".');\\n                  return;\\n                }\\n                throw reason;\\n              }));\\n              return;\\n            case _util.OPS.setGState:\\n              flushTextContentItem();\\n              var dictName = args[0];\\n              var extGState = resources.get('ExtGState');\\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\\n                break;\\n              }\\n              var gState = extGState.get(dictName.name);\\n              if (!(0, _primitives.isDict)(gState)) {\\n                break;\\n              }\\n              var gStateFont = gState.get('Font');\\n              if (gStateFont) {\\n                textState.fontName = null;\\n                textState.fontSize = gStateFont[1];\\n                next(handleSetFont(null, gStateFont[0]));\\n                return;\\n              }\\n              break;\\n          }\\n          if (textContent.items.length >= sink.desiredSize) {\\n            stop = true;\\n            break;\\n          }\\n        }\\n        if (stop) {\\n          next(deferred);\\n          return;\\n        }\\n        flushTextContentItem();\\n        enqueueChunk();\\n        resolve();\\n      }).catch(function (reason) {\\n        if (reason instanceof _util.AbortException) {\\n          return;\\n        }\\n        if (_this9.options.ignoreErrors) {\\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\\n          flushTextContentItem();\\n          enqueueChunk();\\n          return;\\n        }\\n        throw reason;\\n      });\\n    },\\n\\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\\n      var _this10 = this;\\n\\n      var xref = this.xref;\\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\\n      if (properties.composite) {\\n        var cidSystemInfo = dict.get('CIDSystemInfo');\\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\\n          properties.cidSystemInfo = {\\n            registry: cidSystemInfo.get('Registry'),\\n            ordering: cidSystemInfo.get('Ordering'),\\n            supplement: cidSystemInfo.get('Supplement')\\n          };\\n        }\\n        var cidToGidMap = dict.get('CIDToGIDMap');\\n        if ((0, _primitives.isStream)(cidToGidMap)) {\\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\\n        }\\n      }\\n      var differences = [];\\n      var baseEncodingName = null;\\n      var encoding;\\n      if (dict.has('Encoding')) {\\n        encoding = dict.get('Encoding');\\n        if ((0, _primitives.isDict)(encoding)) {\\n          baseEncodingName = encoding.get('BaseEncoding');\\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\\n          if (encoding.has('Differences')) {\\n            var diffEncoding = encoding.get('Differences');\\n            var index = 0;\\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\\n              var data = xref.fetchIfRef(diffEncoding[j]);\\n              if ((0, _util.isNum)(data)) {\\n                index = data;\\n              } else if ((0, _primitives.isName)(data)) {\\n                differences[index++] = data.name;\\n              } else {\\n                throw new _util.FormatError('Invalid entry in \\\\'Differences\\\\' array: ' + data);\\n              }\\n            }\\n          }\\n        } else if ((0, _primitives.isName)(encoding)) {\\n          baseEncodingName = encoding.name;\\n        } else {\\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\\n        }\\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\\n          baseEncodingName = null;\\n        }\\n      }\\n      if (baseEncodingName) {\\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\\n      } else {\\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\\n        encoding = _encodings.StandardEncoding;\\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\\n          encoding = _encodings.WinAnsiEncoding;\\n        }\\n        if (isSymbolicFont) {\\n          encoding = _encodings.MacRomanEncoding;\\n          if (!properties.file) {\\n            if (/Symbol/i.test(properties.name)) {\\n              encoding = _encodings.SymbolSetEncoding;\\n            } else if (/Dingbats/i.test(properties.name)) {\\n              encoding = _encodings.ZapfDingbatsEncoding;\\n            }\\n          }\\n        }\\n        properties.defaultEncoding = encoding;\\n      }\\n      properties.differences = differences;\\n      properties.baseEncodingName = baseEncodingName;\\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\\n      properties.dict = dict;\\n      return toUnicodePromise.then(function (toUnicode) {\\n        properties.toUnicode = toUnicode;\\n        return _this10.buildToUnicode(properties);\\n      }).then(function (toUnicode) {\\n        properties.toUnicode = toUnicode;\\n        return properties;\\n      });\\n    },\\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\\n      var toUnicode = [],\\n          charcode = void 0,\\n          glyphName = void 0;\\n      var encoding = properties.defaultEncoding.slice();\\n      var baseEncodingName = properties.baseEncodingName;\\n      var differences = properties.differences;\\n      for (charcode in differences) {\\n        glyphName = differences[charcode];\\n        if (glyphName === '.notdef') {\\n          continue;\\n        }\\n        encoding[charcode] = glyphName;\\n      }\\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n      for (charcode in encoding) {\\n        glyphName = encoding[charcode];\\n        if (glyphName === '') {\\n          continue;\\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\\n          var code = 0;\\n          switch (glyphName[0]) {\\n            case 'G':\\n              if (glyphName.length === 3) {\\n                code = parseInt(glyphName.substr(1), 16);\\n              }\\n              break;\\n            case 'g':\\n              if (glyphName.length === 5) {\\n                code = parseInt(glyphName.substr(1), 16);\\n              }\\n              break;\\n            case 'C':\\n            case 'c':\\n              if (glyphName.length >= 3) {\\n                code = +glyphName.substr(1);\\n              }\\n              break;\\n            default:\\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n              if (unicode !== -1) {\\n                code = unicode;\\n              }\\n          }\\n          if (code) {\\n            if (baseEncodingName && code === +charcode) {\\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\n                continue;\\n              }\\n            }\\n            toUnicode[charcode] = String.fromCharCode(code);\\n          }\\n          continue;\\n        }\\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\n      }\\n      return new _fonts.ToUnicodeMap(toUnicode);\\n    },\\n    buildToUnicode: function buildToUnicode(properties) {\\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\\n      if (properties.hasIncludedToUnicodeMap) {\\n        if (!properties.composite && properties.hasEncoding) {\\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\\n        }\\n        return Promise.resolve(properties.toUnicode);\\n      }\\n      if (!properties.composite) {\\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\\n      }\\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\\n        var registry = properties.cidSystemInfo.registry;\\n        var ordering = properties.cidSystemInfo.ordering;\\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\\n        return _cmap.CMapFactory.create({\\n          encoding: ucs2CMapName,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (ucs2CMap) {\\n          var cMap = properties.cMap;\\n          var toUnicode = [];\\n          cMap.forEach(function (charcode, cid) {\\n            if (cid > 0xffff) {\\n              throw new _util.FormatError('Max size of CID is 65,535');\\n            }\\n            var ucs2 = ucs2CMap.lookup(cid);\\n            if (ucs2) {\\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\\n            }\\n          });\\n          return new _fonts.ToUnicodeMap(toUnicode);\\n        });\\n      }\\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\\n    },\\n\\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\\n      var cmapObj = toUnicode;\\n      if ((0, _primitives.isName)(cmapObj)) {\\n        return _cmap.CMapFactory.create({\\n          encoding: cmapObj,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (cmap) {\\n          if (cmap instanceof _cmap.IdentityCMap) {\\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\n          }\\n          return new _fonts.ToUnicodeMap(cmap.getMap());\\n        });\\n      } else if ((0, _primitives.isStream)(cmapObj)) {\\n        return _cmap.CMapFactory.create({\\n          encoding: cmapObj,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (cmap) {\\n          if (cmap instanceof _cmap.IdentityCMap) {\\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\n          }\\n          var map = new Array(cmap.length);\\n          cmap.forEach(function (charCode, token) {\\n            var str = [];\\n            for (var k = 0; k < token.length; k += 2) {\\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\n              if ((w1 & 0xF800) !== 0xD800) {\\n                str.push(w1);\\n                continue;\\n              }\\n              k += 2;\\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\\n            }\\n            map[charCode] = String.fromCharCode.apply(String, str);\\n          });\\n          return new _fonts.ToUnicodeMap(map);\\n        });\\n      }\\n      return Promise.resolve(null);\\n    },\\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\\n      var glyphsData = cidToGidStream.getBytes();\\n      var result = [];\\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\\n        if (glyphID === 0) {\\n          continue;\\n        }\\n        var code = j >> 1;\\n        result[code] = glyphID;\\n      }\\n      return result;\\n    },\\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\\n      var xref = this.xref;\\n      var glyphsWidths = [];\\n      var defaultWidth = 0;\\n      var glyphsVMetrics = [];\\n      var defaultVMetrics;\\n      var i, ii, j, jj, start, code, widths;\\n      if (properties.composite) {\\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\\n        widths = dict.get('W');\\n        if (widths) {\\n          for (i = 0, ii = widths.length; i < ii; i++) {\\n            start = xref.fetchIfRef(widths[i++]);\\n            code = xref.fetchIfRef(widths[i]);\\n            if (Array.isArray(code)) {\\n              for (j = 0, jj = code.length; j < jj; j++) {\\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\\n              }\\n            } else {\\n              var width = xref.fetchIfRef(widths[++i]);\\n              for (j = start; j <= code; j++) {\\n                glyphsWidths[j] = width;\\n              }\\n            }\\n          }\\n        }\\n        if (properties.vertical) {\\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\\n          vmetrics = dict.get('W2');\\n          if (vmetrics) {\\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\\n              start = xref.fetchIfRef(vmetrics[i++]);\\n              code = xref.fetchIfRef(vmetrics[i]);\\n              if (Array.isArray(code)) {\\n                for (j = 0, jj = code.length; j < jj; j++) {\\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\\n                }\\n              } else {\\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\\n                for (j = start; j <= code; j++) {\\n                  glyphsVMetrics[j] = vmetric;\\n                }\\n              }\\n            }\\n          }\\n        }\\n      } else {\\n        var firstChar = properties.firstChar;\\n        widths = dict.get('Widths');\\n        if (widths) {\\n          j = firstChar;\\n          for (i = 0, ii = widths.length; i < ii; i++) {\\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\\n          }\\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\\n        } else {\\n          var baseFontName = dict.get('BaseFont');\\n          if ((0, _primitives.isName)(baseFontName)) {\\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\\n            defaultWidth = metrics.defaultWidth;\\n          }\\n        }\\n      }\\n      var isMonospace = true;\\n      var firstWidth = defaultWidth;\\n      for (var glyph in glyphsWidths) {\\n        var glyphWidth = glyphsWidths[glyph];\\n        if (!glyphWidth) {\\n          continue;\\n        }\\n        if (!firstWidth) {\\n          firstWidth = glyphWidth;\\n          continue;\\n        }\\n        if (firstWidth !== glyphWidth) {\\n          isMonospace = false;\\n          break;\\n        }\\n      }\\n      if (isMonospace) {\\n        properties.flags |= _fonts.FontFlags.FixedPitch;\\n      }\\n      properties.defaultWidth = defaultWidth;\\n      properties.widths = glyphsWidths;\\n      properties.defaultVMetrics = defaultVMetrics;\\n      properties.vmetrics = glyphsVMetrics;\\n    },\\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\\n      var fontNameWoStyle = baseFontName.split('-')[0];\\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\\n    },\\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\\n      var defaultWidth = 0;\\n      var widths = [];\\n      var monospace = false;\\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\\n      var lookupName = stdFontMap[name] || name;\\n      var Metrics = (0, _metrics.getMetrics)();\\n      if (!(lookupName in Metrics)) {\\n        if (this.isSerifFont(name)) {\\n          lookupName = 'Times-Roman';\\n        } else {\\n          lookupName = 'Helvetica';\\n        }\\n      }\\n      var glyphWidths = Metrics[lookupName];\\n      if ((0, _util.isNum)(glyphWidths)) {\\n        defaultWidth = glyphWidths;\\n        monospace = true;\\n      } else {\\n        widths = glyphWidths();\\n      }\\n      return {\\n        defaultWidth: defaultWidth,\\n        monospace: monospace,\\n        widths: widths\\n      };\\n    },\\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\\n      var widths = Object.create(null);\\n      var differences = properties.differences;\\n      var encoding = properties.defaultEncoding;\\n      for (var charCode = 0; charCode < 256; charCode++) {\\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\\n          continue;\\n        }\\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\\n          continue;\\n        }\\n      }\\n      return widths;\\n    },\\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\\n      var baseDict = dict;\\n      var type = dict.get('Subtype');\\n      if (!(0, _primitives.isName)(type)) {\\n        throw new _util.FormatError('invalid font Subtype');\\n      }\\n      var composite = false;\\n      var uint8array;\\n      if (type.name === 'Type0') {\\n        var df = dict.get('DescendantFonts');\\n        if (!df) {\\n          throw new _util.FormatError('Descendant fonts are not specified');\\n        }\\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\\n        type = dict.get('Subtype');\\n        if (!(0, _primitives.isName)(type)) {\\n          throw new _util.FormatError('invalid font Subtype');\\n        }\\n        composite = true;\\n      }\\n      var descriptor = dict.get('FontDescriptor');\\n      if (descriptor) {\\n        var hash = new _murmurhash.MurmurHash3_64();\\n        var encoding = baseDict.getRaw('Encoding');\\n        if ((0, _primitives.isName)(encoding)) {\\n          hash.update(encoding.name);\\n        } else if ((0, _primitives.isRef)(encoding)) {\\n          hash.update(encoding.toString());\\n        } else if ((0, _primitives.isDict)(encoding)) {\\n          var keys = encoding.getKeys();\\n          for (var i = 0, ii = keys.length; i < ii; i++) {\\n            var entry = encoding.getRaw(keys[i]);\\n            if ((0, _primitives.isName)(entry)) {\\n              hash.update(entry.name);\\n            } else if ((0, _primitives.isRef)(entry)) {\\n              hash.update(entry.toString());\\n            } else if (Array.isArray(entry)) {\\n              var diffLength = entry.length,\\n                  diffBuf = new Array(diffLength);\\n              for (var j = 0; j < diffLength; j++) {\\n                var diffEntry = entry[j];\\n                if ((0, _primitives.isName)(diffEntry)) {\\n                  diffBuf[j] = diffEntry.name;\\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\\n                  diffBuf[j] = diffEntry.toString();\\n                }\\n              }\\n              hash.update(diffBuf.join());\\n            }\\n          }\\n        }\\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\n        if ((0, _primitives.isStream)(toUnicode)) {\\n          var stream = toUnicode.str || toUnicode;\\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\\n          hash.update(uint8array);\\n        } else if ((0, _primitives.isName)(toUnicode)) {\\n          hash.update(toUnicode.name);\\n        }\\n        var widths = dict.get('Widths') || baseDict.get('Widths');\\n        if (widths) {\\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\\n          hash.update(uint8array);\\n        }\\n      }\\n      return {\\n        descriptor: descriptor,\\n        dict: dict,\\n        baseDict: baseDict,\\n        composite: composite,\\n        type: type.name,\\n        hash: hash ? hash.hexdigest() : ''\\n      };\\n    },\\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\\n      var _this11 = this;\\n\\n      var baseDict = preEvaluatedFont.baseDict;\\n      var dict = preEvaluatedFont.dict;\\n      var composite = preEvaluatedFont.composite;\\n      var descriptor = preEvaluatedFont.descriptor;\\n      var type = preEvaluatedFont.type;\\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\\n      var properties;\\n      if (!descriptor) {\\n        if (type === 'Type3') {\\n          descriptor = new _primitives.Dict(null);\\n          descriptor.set('FontName', _primitives.Name.get(type));\\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\\n        } else {\\n          var baseFontName = dict.get('BaseFont');\\n          if (!(0, _primitives.isName)(baseFontName)) {\\n            throw new _util.FormatError('Base font is not specified');\\n          }\\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\\n          var metrics = this.getBaseFontMetrics(baseFontName);\\n          var fontNameWoStyle = baseFontName.split('-')[0];\\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\\n          properties = {\\n            type: type,\\n            name: baseFontName,\\n            widths: metrics.widths,\\n            defaultWidth: metrics.defaultWidth,\\n            flags: flags,\\n            firstChar: 0,\\n            lastChar: maxCharIndex\\n          };\\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\\n            return new _fonts.Font(baseFontName, null, properties);\\n          });\\n        }\\n      }\\n      var firstChar = dict.get('FirstChar') || 0;\\n      var lastChar = dict.get('LastChar') || maxCharIndex;\\n      var fontName = descriptor.get('FontName');\\n      var baseFont = dict.get('BaseFont');\\n      if ((0, _util.isString)(fontName)) {\\n        fontName = _primitives.Name.get(fontName);\\n      }\\n      if ((0, _util.isString)(baseFont)) {\\n        baseFont = _primitives.Name.get(baseFont);\\n      }\\n      if (type !== 'Type3') {\\n        var fontNameStr = fontName && fontName.name;\\n        var baseFontStr = baseFont && baseFont.name;\\n        if (fontNameStr !== baseFontStr) {\\n          (0, _util.info)('The FontDescriptor\\\\'s FontName is \\\"' + fontNameStr + '\\\" but should be the same as the Font\\\\'s BaseFont \\\"' + baseFontStr + '\\\"');\\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\\n            fontName = baseFont;\\n          }\\n        }\\n      }\\n      fontName = fontName || baseFont;\\n      if (!(0, _primitives.isName)(fontName)) {\\n        throw new _util.FormatError('invalid font name');\\n      }\\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\\n      if (fontFile) {\\n        if (fontFile.dict) {\\n          var subtype = fontFile.dict.get('Subtype');\\n          if (subtype) {\\n            subtype = subtype.name;\\n          }\\n          var length1 = fontFile.dict.get('Length1');\\n          var length2 = fontFile.dict.get('Length2');\\n          var length3 = fontFile.dict.get('Length3');\\n        }\\n      }\\n      properties = {\\n        type: type,\\n        name: fontName.name,\\n        subtype: subtype,\\n        file: fontFile,\\n        length1: length1,\\n        length2: length2,\\n        length3: length3,\\n        loadedName: baseDict.loadedName,\\n        composite: composite,\\n        wideChars: composite,\\n        fixedPitch: false,\\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\\n        firstChar: firstChar || 0,\\n        lastChar: lastChar || maxCharIndex,\\n        bbox: descriptor.getArray('FontBBox'),\\n        ascent: descriptor.get('Ascent'),\\n        descent: descriptor.get('Descent'),\\n        xHeight: descriptor.get('XHeight'),\\n        capHeight: descriptor.get('CapHeight'),\\n        flags: descriptor.get('Flags'),\\n        italicAngle: descriptor.get('ItalicAngle'),\\n        isType3Font: false\\n      };\\n      var cMapPromise;\\n      if (composite) {\\n        var cidEncoding = baseDict.get('Encoding');\\n        if ((0, _primitives.isName)(cidEncoding)) {\\n          properties.cidEncoding = cidEncoding.name;\\n        }\\n        cMapPromise = _cmap.CMapFactory.create({\\n          encoding: cidEncoding,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (cMap) {\\n          properties.cMap = cMap;\\n          properties.vertical = properties.cMap.vertical;\\n        });\\n      } else {\\n        cMapPromise = Promise.resolve(undefined);\\n      }\\n      return cMapPromise.then(function () {\\n        return _this11.extractDataStructures(dict, baseDict, properties);\\n      }).then(function (properties) {\\n        _this11.extractWidths(dict, descriptor, properties);\\n        if (type === 'Type3') {\\n          properties.isType3Font = true;\\n        }\\n        return new _fonts.Font(fontName.name, fontFile, properties);\\n      });\\n    }\\n  };\\n  return PartialEvaluator;\\n}();\\nvar TranslatedFont = function TranslatedFontClosure() {\\n  function TranslatedFont(loadedName, font, dict) {\\n    this.loadedName = loadedName;\\n    this.font = font;\\n    this.dict = dict;\\n    this.type3Loaded = null;\\n    this.sent = false;\\n  }\\n  TranslatedFont.prototype = {\\n    send: function send(handler) {\\n      if (this.sent) {\\n        return;\\n      }\\n      var fontData = this.font.exportData();\\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\\n      this.sent = true;\\n    },\\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\\n      if (!this.font.isType3Font) {\\n        throw new Error('Must be a Type3 font.');\\n      }\\n      if (this.type3Loaded) {\\n        return this.type3Loaded;\\n      }\\n      var type3Options = Object.create(evaluator.options);\\n      type3Options.ignoreErrors = false;\\n      var type3Evaluator = evaluator.clone(type3Options);\\n      var translatedFont = this.font;\\n      var loadCharProcsPromise = Promise.resolve();\\n      var charProcs = this.dict.get('CharProcs');\\n      var fontResources = this.dict.get('Resources') || resources;\\n      var charProcKeys = charProcs.getKeys();\\n      var charProcOperatorList = Object.create(null);\\n\\n      var _loop2 = function _loop2() {\\n        var key = charProcKeys[i];\\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\\n          var glyphStream = charProcs.get(key);\\n          var operatorList = new _operator_list.OperatorList();\\n          return type3Evaluator.getOperatorList({\\n            stream: glyphStream,\\n            task: task,\\n            resources: fontResources,\\n            operatorList: operatorList\\n          }).then(function () {\\n            charProcOperatorList[key] = operatorList.getIR();\\n            parentOperatorList.addDependencies(operatorList.dependencies);\\n          }).catch(function (reason) {\\n            (0, _util.warn)('Type3 font resource \\\"' + key + '\\\" is not available.');\\n            var operatorList = new _operator_list.OperatorList();\\n            charProcOperatorList[key] = operatorList.getIR();\\n          });\\n        });\\n      };\\n\\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\\n        _loop2();\\n      }\\n      this.type3Loaded = loadCharProcsPromise.then(function () {\\n        translatedFont.charProcOperatorList = charProcOperatorList;\\n      });\\n      return this.type3Loaded;\\n    }\\n  };\\n  return TranslatedFont;\\n}();\\nvar StateManager = function StateManagerClosure() {\\n  function StateManager(initialState) {\\n    this.state = initialState;\\n    this.stateStack = [];\\n  }\\n  StateManager.prototype = {\\n    save: function save() {\\n      var old = this.state;\\n      this.stateStack.push(this.state);\\n      this.state = old.clone();\\n    },\\n    restore: function restore() {\\n      var prev = this.stateStack.pop();\\n      if (prev) {\\n        this.state = prev;\\n      }\\n    },\\n    transform: function transform(args) {\\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\\n    }\\n  };\\n  return StateManager;\\n}();\\nvar TextState = function TextStateClosure() {\\n  function TextState() {\\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\n    this.fontName = null;\\n    this.fontSize = 0;\\n    this.font = null;\\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\n    this.charSpacing = 0;\\n    this.wordSpacing = 0;\\n    this.leading = 0;\\n    this.textHScale = 1;\\n    this.textRise = 0;\\n  }\\n  TextState.prototype = {\\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\n      var m = this.textMatrix;\\n      m[0] = a;\\n      m[1] = b;\\n      m[2] = c;\\n      m[3] = d;\\n      m[4] = e;\\n      m[5] = f;\\n    },\\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\n      var m = this.textLineMatrix;\\n      m[0] = a;\\n      m[1] = b;\\n      m[2] = c;\\n      m[3] = d;\\n      m[4] = e;\\n      m[5] = f;\\n    },\\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\\n      var m = this.textMatrix;\\n      m[4] = m[0] * x + m[2] * y + m[4];\\n      m[5] = m[1] * x + m[3] * y + m[5];\\n    },\\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\\n      var m = this.textLineMatrix;\\n      m[4] = m[0] * x + m[2] * y + m[4];\\n      m[5] = m[1] * x + m[3] * y + m[5];\\n    },\\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\\n      var font = this.font;\\n      if (!font) {\\n        return null;\\n      }\\n      var m = this.textLineMatrix;\\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\\n        return null;\\n      }\\n      var txDiff = e - m[4],\\n          tyDiff = f - m[5];\\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\\n        return null;\\n      }\\n      var tx,\\n          ty,\\n          denominator = a * d - b * c;\\n      if (font.vertical) {\\n        tx = -tyDiff * c / denominator;\\n        ty = tyDiff * a / denominator;\\n      } else {\\n        tx = txDiff * d / denominator;\\n        ty = -txDiff * b / denominator;\\n      }\\n      return {\\n        width: tx,\\n        height: ty,\\n        value: font.vertical ? ty : tx\\n      };\\n    },\\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\\n    },\\n    carriageReturn: function TextState_carriageReturn() {\\n      this.translateTextLineMatrix(0, -this.leading);\\n      this.textMatrix = this.textLineMatrix.slice();\\n    },\\n    clone: function TextState_clone() {\\n      var clone = Object.create(this);\\n      clone.textMatrix = this.textMatrix.slice();\\n      clone.textLineMatrix = this.textLineMatrix.slice();\\n      clone.fontMatrix = this.fontMatrix.slice();\\n      return clone;\\n    }\\n  };\\n  return TextState;\\n}();\\nvar EvalState = function EvalStateClosure() {\\n  function EvalState() {\\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\n    this.font = null;\\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\n  }\\n  EvalState.prototype = {\\n    clone: function CanvasExtraState_clone() {\\n      return Object.create(this);\\n    }\\n  };\\n  return EvalState;\\n}();\\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\\n    t['w'] = {\\n      id: _util.OPS.setLineWidth,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['J'] = {\\n      id: _util.OPS.setLineCap,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['j'] = {\\n      id: _util.OPS.setLineJoin,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['M'] = {\\n      id: _util.OPS.setMiterLimit,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['d'] = {\\n      id: _util.OPS.setDash,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['ri'] = {\\n      id: _util.OPS.setRenderingIntent,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['i'] = {\\n      id: _util.OPS.setFlatness,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['gs'] = {\\n      id: _util.OPS.setGState,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['q'] = {\\n      id: _util.OPS.save,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['Q'] = {\\n      id: _util.OPS.restore,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['cm'] = {\\n      id: _util.OPS.transform,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['m'] = {\\n      id: _util.OPS.moveTo,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['l'] = {\\n      id: _util.OPS.lineTo,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['c'] = {\\n      id: _util.OPS.curveTo,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['v'] = {\\n      id: _util.OPS.curveTo2,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['y'] = {\\n      id: _util.OPS.curveTo3,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['h'] = {\\n      id: _util.OPS.closePath,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['re'] = {\\n      id: _util.OPS.rectangle,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['S'] = {\\n      id: _util.OPS.stroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['s'] = {\\n      id: _util.OPS.closeStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['f'] = {\\n      id: _util.OPS.fill,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['F'] = {\\n      id: _util.OPS.fill,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['f*'] = {\\n      id: _util.OPS.eoFill,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['B'] = {\\n      id: _util.OPS.fillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['B*'] = {\\n      id: _util.OPS.eoFillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['b'] = {\\n      id: _util.OPS.closeFillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['b*'] = {\\n      id: _util.OPS.closeEOFillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['n'] = {\\n      id: _util.OPS.endPath,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['W'] = {\\n      id: _util.OPS.clip,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['W*'] = {\\n      id: _util.OPS.eoClip,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['BT'] = {\\n      id: _util.OPS.beginText,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['ET'] = {\\n      id: _util.OPS.endText,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['Tc'] = {\\n      id: _util.OPS.setCharSpacing,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Tw'] = {\\n      id: _util.OPS.setWordSpacing,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Tz'] = {\\n      id: _util.OPS.setHScale,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['TL'] = {\\n      id: _util.OPS.setLeading,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Tf'] = {\\n      id: _util.OPS.setFont,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['Tr'] = {\\n      id: _util.OPS.setTextRenderingMode,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Ts'] = {\\n      id: _util.OPS.setTextRise,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Td'] = {\\n      id: _util.OPS.moveText,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['TD'] = {\\n      id: _util.OPS.setLeadingMoveText,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['Tm'] = {\\n      id: _util.OPS.setTextMatrix,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['T*'] = {\\n      id: _util.OPS.nextLine,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['Tj'] = {\\n      id: _util.OPS.showText,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['TJ'] = {\\n      id: _util.OPS.showSpacedText,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['\\\\''] = {\\n      id: _util.OPS.nextLineShowText,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['\\\"'] = {\\n      id: _util.OPS.nextLineSetSpacingShowText,\\n      numArgs: 3,\\n      variableArgs: false\\n    };\\n    t['d0'] = {\\n      id: _util.OPS.setCharWidth,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['d1'] = {\\n      id: _util.OPS.setCharWidthAndBounds,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['CS'] = {\\n      id: _util.OPS.setStrokeColorSpace,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['cs'] = {\\n      id: _util.OPS.setFillColorSpace,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['SC'] = {\\n      id: _util.OPS.setStrokeColor,\\n      numArgs: 4,\\n      variableArgs: true\\n    };\\n    t['SCN'] = {\\n      id: _util.OPS.setStrokeColorN,\\n      numArgs: 33,\\n      variableArgs: true\\n    };\\n    t['sc'] = {\\n      id: _util.OPS.setFillColor,\\n      numArgs: 4,\\n      variableArgs: true\\n    };\\n    t['scn'] = {\\n      id: _util.OPS.setFillColorN,\\n      numArgs: 33,\\n      variableArgs: true\\n    };\\n    t['G'] = {\\n      id: _util.OPS.setStrokeGray,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['g'] = {\\n      id: _util.OPS.setFillGray,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['RG'] = {\\n      id: _util.OPS.setStrokeRGBColor,\\n      numArgs: 3,\\n      variableArgs: false\\n    };\\n    t['rg'] = {\\n      id: _util.OPS.setFillRGBColor,\\n      numArgs: 3,\\n      variableArgs: false\\n    };\\n    t['K'] = {\\n      id: _util.OPS.setStrokeCMYKColor,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['k'] = {\\n      id: _util.OPS.setFillCMYKColor,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['sh'] = {\\n      id: _util.OPS.shadingFill,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['BI'] = {\\n      id: _util.OPS.beginInlineImage,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['ID'] = {\\n      id: _util.OPS.beginImageData,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['EI'] = {\\n      id: _util.OPS.endInlineImage,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Do'] = {\\n      id: _util.OPS.paintXObject,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['MP'] = {\\n      id: _util.OPS.markPoint,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['DP'] = {\\n      id: _util.OPS.markPointProps,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['BMC'] = {\\n      id: _util.OPS.beginMarkedContent,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['BDC'] = {\\n      id: _util.OPS.beginMarkedContentProps,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['EMC'] = {\\n      id: _util.OPS.endMarkedContent,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['BX'] = {\\n      id: _util.OPS.beginCompat,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['EX'] = {\\n      id: _util.OPS.endCompat,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['BM'] = null;\\n    t['BD'] = null;\\n    t['true'] = null;\\n    t['fa'] = null;\\n    t['fal'] = null;\\n    t['fals'] = null;\\n    t['false'] = null;\\n    t['nu'] = null;\\n    t['nul'] = null;\\n    t['null'] = null;\\n  });\\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\\n    this.opMap = getOPMap();\\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\\n    this.stateManager = stateManager;\\n    this.nonProcessedArgs = [];\\n  }\\n  EvaluatorPreprocessor.prototype = {\\n    get savedStatesDepth() {\\n      return this.stateManager.stateStack.length;\\n    },\\n    read: function EvaluatorPreprocessor_read(operation) {\\n      var args = operation.args;\\n      while (true) {\\n        var obj = this.parser.getObj();\\n        if ((0, _primitives.isCmd)(obj)) {\\n          var cmd = obj.cmd;\\n          var opSpec = this.opMap[cmd];\\n          if (!opSpec) {\\n            (0, _util.warn)('Unknown command \\\"' + cmd + '\\\"');\\n            continue;\\n          }\\n          var fn = opSpec.id;\\n          var numArgs = opSpec.numArgs;\\n          var argsLength = args !== null ? args.length : 0;\\n          if (!opSpec.variableArgs) {\\n            if (argsLength !== numArgs) {\\n              var nonProcessedArgs = this.nonProcessedArgs;\\n              while (argsLength > numArgs) {\\n                nonProcessedArgs.push(args.shift());\\n                argsLength--;\\n              }\\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\\n                if (args === null) {\\n                  args = [];\\n                }\\n                args.unshift(nonProcessedArgs.pop());\\n                argsLength++;\\n              }\\n            }\\n            if (argsLength < numArgs) {\\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\\n              if (args !== null) {\\n                args.length = 0;\\n              }\\n              continue;\\n            }\\n          } else if (argsLength > numArgs) {\\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\\n          }\\n          this.preprocessCommand(fn, args);\\n          operation.fn = fn;\\n          operation.args = args;\\n          return true;\\n        }\\n        if ((0, _primitives.isEOF)(obj)) {\\n          return false;\\n        }\\n        if (obj !== null) {\\n          if (args === null) {\\n            args = [];\\n          }\\n          args.push(obj);\\n          if (args.length > 33) {\\n            throw new _util.FormatError('Too many arguments');\\n          }\\n        }\\n      }\\n    },\\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\\n      switch (fn | 0) {\\n        case _util.OPS.save:\\n          this.stateManager.save();\\n          break;\\n        case _util.OPS.restore:\\n          this.stateManager.restore();\\n          break;\\n        case _util.OPS.transform:\\n          this.stateManager.transform(args);\\n          break;\\n      }\\n    }\\n  };\\n  return EvaluatorPreprocessor;\\n}();\\nexports.PartialEvaluator = PartialEvaluator;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.FontRendererFactory = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _cff_parser = require('./cff_parser');\\n\\nvar _glyphlist = require('./glyphlist');\\n\\nvar _encodings = require('./encodings');\\n\\nvar _stream = require('./stream');\\n\\nvar FontRendererFactory = function FontRendererFactoryClosure() {\\n  function getLong(data, offset) {\\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n  }\\n  function getUshort(data, offset) {\\n    return data[offset] << 8 | data[offset + 1];\\n  }\\n  function parseCmap(data, start, end) {\\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\\n    var format = getUshort(data, start + offset);\\n    var ranges, p, i;\\n    if (format === 4) {\\n      getUshort(data, start + offset + 2);\\n      var segCount = getUshort(data, start + offset + 6) >> 1;\\n      p = start + offset + 14;\\n      ranges = [];\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        ranges[i] = { end: getUshort(data, p) };\\n      }\\n      p += 2;\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        ranges[i].start = getUshort(data, p);\\n      }\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        ranges[i].idDelta = getUshort(data, p);\\n      }\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        var idOffset = getUshort(data, p);\\n        if (idOffset === 0) {\\n          continue;\\n        }\\n        ranges[i].ids = [];\\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\\n          idOffset += 2;\\n        }\\n      }\\n      return ranges;\\n    } else if (format === 12) {\\n      getLong(data, start + offset + 4);\\n      var groups = getLong(data, start + offset + 12);\\n      p = start + offset + 16;\\n      ranges = [];\\n      for (i = 0; i < groups; i++) {\\n        ranges.push({\\n          start: getLong(data, p),\\n          end: getLong(data, p + 4),\\n          idDelta: getLong(data, p + 8) - getLong(data, p)\\n        });\\n        p += 12;\\n      }\\n      return ranges;\\n    }\\n    throw new _util.FormatError('unsupported cmap: ' + format);\\n  }\\n  function parseCff(data, start, end, seacAnalysisEnabled) {\\n    var properties = {};\\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\\n    var cff = parser.parse();\\n    return {\\n      glyphs: cff.charStrings.objects,\\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\\n    };\\n  }\\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\\n    var itemSize, itemDecode;\\n    if (isGlyphLocationsLong) {\\n      itemSize = 4;\\n      itemDecode = function fontItemDecodeLong(data, offset) {\\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n      };\\n    } else {\\n      itemSize = 2;\\n      itemDecode = function fontItemDecode(data, offset) {\\n        return data[offset] << 9 | data[offset + 1] << 1;\\n      };\\n    }\\n    var glyphs = [];\\n    var startOffset = itemDecode(loca, 0);\\n    for (var j = itemSize; j < loca.length; j += itemSize) {\\n      var endOffset = itemDecode(loca, j);\\n      glyphs.push(glyf.subarray(startOffset, endOffset));\\n      startOffset = endOffset;\\n    }\\n    return glyphs;\\n  }\\n  function lookupCmap(ranges, unicode) {\\n    var code = unicode.charCodeAt(0),\\n        gid = 0;\\n    var l = 0,\\n        r = ranges.length - 1;\\n    while (l < r) {\\n      var c = l + r + 1 >> 1;\\n      if (code < ranges[c].start) {\\n        r = c - 1;\\n      } else {\\n        l = c;\\n      }\\n    }\\n    if (ranges[l].start <= code && code <= ranges[l].end) {\\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\\n    }\\n    return {\\n      charCode: code,\\n      glyphId: gid\\n    };\\n  }\\n  function compileGlyf(code, cmds, font) {\\n    function moveTo(x, y) {\\n      cmds.push({\\n        cmd: 'moveTo',\\n        args: [x, y]\\n      });\\n    }\\n    function lineTo(x, y) {\\n      cmds.push({\\n        cmd: 'lineTo',\\n        args: [x, y]\\n      });\\n    }\\n    function quadraticCurveTo(xa, ya, x, y) {\\n      cmds.push({\\n        cmd: 'quadraticCurveTo',\\n        args: [xa, ya, x, y]\\n      });\\n    }\\n    var i = 0;\\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\\n    var flags;\\n    var x = 0,\\n        y = 0;\\n    i += 10;\\n    if (numberOfContours < 0) {\\n      do {\\n        flags = code[i] << 8 | code[i + 1];\\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\\n        i += 4;\\n        var arg1, arg2;\\n        if (flags & 0x01) {\\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\\n          i += 4;\\n        } else {\\n          arg1 = code[i++];\\n          arg2 = code[i++];\\n        }\\n        if (flags & 0x02) {\\n          x = arg1;\\n          y = arg2;\\n        } else {\\n          x = 0;\\n          y = 0;\\n        }\\n        var scaleX = 1,\\n            scaleY = 1,\\n            scale01 = 0,\\n            scale10 = 0;\\n        if (flags & 0x08) {\\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n          i += 2;\\n        } else if (flags & 0x40) {\\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\n          i += 4;\\n        } else if (flags & 0x80) {\\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\\n          i += 8;\\n        }\\n        var subglyph = font.glyphs[glyphIndex];\\n        if (subglyph) {\\n          cmds.push({ cmd: 'save' });\\n          cmds.push({\\n            cmd: 'transform',\\n            args: [scaleX, scale01, scale10, scaleY, x, y]\\n          });\\n          compileGlyf(subglyph, cmds, font);\\n          cmds.push({ cmd: 'restore' });\\n        }\\n      } while (flags & 0x20);\\n    } else {\\n      var endPtsOfContours = [];\\n      var j, jj;\\n      for (j = 0; j < numberOfContours; j++) {\\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\\n        i += 2;\\n      }\\n      var instructionLength = code[i] << 8 | code[i + 1];\\n      i += 2 + instructionLength;\\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\\n      var points = [];\\n      while (points.length < numberOfPoints) {\\n        flags = code[i++];\\n        var repeat = 1;\\n        if (flags & 0x08) {\\n          repeat += code[i++];\\n        }\\n        while (repeat-- > 0) {\\n          points.push({ flags: flags });\\n        }\\n      }\\n      for (j = 0; j < numberOfPoints; j++) {\\n        switch (points[j].flags & 0x12) {\\n          case 0x00:\\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\\n            i += 2;\\n            break;\\n          case 0x02:\\n            x -= code[i++];\\n            break;\\n          case 0x12:\\n            x += code[i++];\\n            break;\\n        }\\n        points[j].x = x;\\n      }\\n      for (j = 0; j < numberOfPoints; j++) {\\n        switch (points[j].flags & 0x24) {\\n          case 0x00:\\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\\n            i += 2;\\n            break;\\n          case 0x04:\\n            y -= code[i++];\\n            break;\\n          case 0x24:\\n            y += code[i++];\\n            break;\\n        }\\n        points[j].y = y;\\n      }\\n      var startPoint = 0;\\n      for (i = 0; i < numberOfContours; i++) {\\n        var endPoint = endPtsOfContours[i];\\n        var contour = points.slice(startPoint, endPoint + 1);\\n        if (contour[0].flags & 1) {\\n          contour.push(contour[0]);\\n        } else if (contour[contour.length - 1].flags & 1) {\\n          contour.unshift(contour[contour.length - 1]);\\n        } else {\\n          var p = {\\n            flags: 1,\\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\\n          };\\n          contour.unshift(p);\\n          contour.push(p);\\n        }\\n        moveTo(contour[0].x, contour[0].y);\\n        for (j = 1, jj = contour.length; j < jj; j++) {\\n          if (contour[j].flags & 1) {\\n            lineTo(contour[j].x, contour[j].y);\\n          } else if (contour[j + 1].flags & 1) {\\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\\n            j++;\\n          } else {\\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\\n          }\\n        }\\n        startPoint = endPoint + 1;\\n      }\\n    }\\n  }\\n  function compileCharString(code, cmds, font) {\\n    var stack = [];\\n    var x = 0,\\n        y = 0;\\n    var stems = 0;\\n    function moveTo(x, y) {\\n      cmds.push({\\n        cmd: 'moveTo',\\n        args: [x, y]\\n      });\\n    }\\n    function lineTo(x, y) {\\n      cmds.push({\\n        cmd: 'lineTo',\\n        args: [x, y]\\n      });\\n    }\\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\\n      cmds.push({\\n        cmd: 'bezierCurveTo',\\n        args: [x1, y1, x2, y2, x, y]\\n      });\\n    }\\n    function parse(code) {\\n      var i = 0;\\n      while (i < code.length) {\\n        var stackClean = false;\\n        var v = code[i++];\\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\\n        switch (v) {\\n          case 1:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 3:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 4:\\n            y += stack.pop();\\n            moveTo(x, y);\\n            stackClean = true;\\n            break;\\n          case 5:\\n            while (stack.length > 0) {\\n              x += stack.shift();\\n              y += stack.shift();\\n              lineTo(x, y);\\n            }\\n            break;\\n          case 6:\\n            while (stack.length > 0) {\\n              x += stack.shift();\\n              lineTo(x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              y += stack.shift();\\n              lineTo(x, y);\\n            }\\n            break;\\n          case 7:\\n            while (stack.length > 0) {\\n              y += stack.shift();\\n              lineTo(x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              x += stack.shift();\\n              lineTo(x, y);\\n            }\\n            break;\\n          case 8:\\n            while (stack.length > 0) {\\n              xa = x + stack.shift();\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + stack.shift();\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 10:\\n            n = stack.pop() + font.subrsBias;\\n            subrCode = font.subrs[n];\\n            if (subrCode) {\\n              parse(subrCode);\\n            }\\n            break;\\n          case 11:\\n            return;\\n          case 12:\\n            v = code[i++];\\n            switch (v) {\\n              case 34:\\n                xa = x + stack.shift();\\n                xb = xa + stack.shift();\\n                y1 = y + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y, xb, y1, x, y1);\\n                xa = x + stack.shift();\\n                xb = xa + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y1, xb, y, x, y);\\n                break;\\n              case 35:\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb + stack.shift();\\n                y = yb + stack.shift();\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb + stack.shift();\\n                y = yb + stack.shift();\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                stack.pop();\\n                break;\\n              case 36:\\n                xa = x + stack.shift();\\n                y1 = y + stack.shift();\\n                xb = xa + stack.shift();\\n                y2 = y1 + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\\n                xa = x + stack.shift();\\n                xb = xa + stack.shift();\\n                y3 = y2 + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y2, xb, y3, x, y);\\n                break;\\n              case 37:\\n                var x0 = x,\\n                    y0 = y;\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb + stack.shift();\\n                y = yb + stack.shift();\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb;\\n                y = yb;\\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\\n                  x += stack.shift();\\n                } else {\\n                  y += stack.shift();\\n                }\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                break;\\n              default:\\n                throw new _util.FormatError('unknown operator: 12 ' + v);\\n            }\\n            break;\\n          case 14:\\n            if (stack.length >= 4) {\\n              var achar = stack.pop();\\n              var bchar = stack.pop();\\n              y = stack.pop();\\n              x = stack.pop();\\n              cmds.push({ cmd: 'save' });\\n              cmds.push({\\n                cmd: 'translate',\\n                args: [x, y]\\n              });\\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\\n              cmds.push({ cmd: 'restore' });\\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\\n            }\\n            return;\\n          case 18:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 19:\\n            stems += stack.length >> 1;\\n            i += stems + 7 >> 3;\\n            stackClean = true;\\n            break;\\n          case 20:\\n            stems += stack.length >> 1;\\n            i += stems + 7 >> 3;\\n            stackClean = true;\\n            break;\\n          case 21:\\n            y += stack.pop();\\n            x += stack.pop();\\n            moveTo(x, y);\\n            stackClean = true;\\n            break;\\n          case 22:\\n            x += stack.pop();\\n            moveTo(x, y);\\n            stackClean = true;\\n            break;\\n          case 23:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 24:\\n            while (stack.length > 2) {\\n              xa = x + stack.shift();\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + stack.shift();\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            x += stack.shift();\\n            y += stack.shift();\\n            lineTo(x, y);\\n            break;\\n          case 25:\\n            while (stack.length > 6) {\\n              x += stack.shift();\\n              y += stack.shift();\\n              lineTo(x, y);\\n            }\\n            xa = x + stack.shift();\\n            ya = y + stack.shift();\\n            xb = xa + stack.shift();\\n            yb = ya + stack.shift();\\n            x = xb + stack.shift();\\n            y = yb + stack.shift();\\n            bezierCurveTo(xa, ya, xb, yb, x, y);\\n            break;\\n          case 26:\\n            if (stack.length % 2) {\\n              x += stack.shift();\\n            }\\n            while (stack.length > 0) {\\n              xa = x;\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb;\\n              y = yb + stack.shift();\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 27:\\n            if (stack.length % 2) {\\n              y += stack.shift();\\n            }\\n            while (stack.length > 0) {\\n              xa = x + stack.shift();\\n              ya = y;\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb;\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 28:\\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\\n            i += 2;\\n            break;\\n          case 29:\\n            n = stack.pop() + font.gsubrsBias;\\n            subrCode = font.gsubrs[n];\\n            if (subrCode) {\\n              parse(subrCode);\\n            }\\n            break;\\n          case 30:\\n            while (stack.length > 0) {\\n              xa = x;\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              xa = x + stack.shift();\\n              ya = y;\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              y = yb + stack.shift();\\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 31:\\n            while (stack.length > 0) {\\n              xa = x + stack.shift();\\n              ya = y;\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              y = yb + stack.shift();\\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              xa = x;\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          default:\\n            if (v < 32) {\\n              throw new _util.FormatError('unknown operator: ' + v);\\n            }\\n            if (v < 247) {\\n              stack.push(v - 139);\\n            } else if (v < 251) {\\n              stack.push((v - 247) * 256 + code[i++] + 108);\\n            } else if (v < 255) {\\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\\n            } else {\\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\\n              i += 4;\\n            }\\n            break;\\n        }\\n        if (stackClean) {\\n          stack.length = 0;\\n        }\\n      }\\n    }\\n    parse(code);\\n  }\\n  var noop = '';\\n  function CompiledFont(fontMatrix) {\\n    this.compiledGlyphs = Object.create(null);\\n    this.compiledCharCodeToGlyphId = Object.create(null);\\n    this.fontMatrix = fontMatrix;\\n  }\\n  CompiledFont.prototype = {\\n    getPathJs: function getPathJs(unicode) {\\n      var cmap = lookupCmap(this.cmap, unicode);\\n      var fn = this.compiledGlyphs[cmap.glyphId];\\n      if (!fn) {\\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\\n        this.compiledGlyphs[cmap.glyphId] = fn;\\n      }\\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\\n      }\\n      return fn;\\n    },\\n    compileGlyph: function compileGlyph(code) {\\n      if (!code || code.length === 0 || code[0] === 14) {\\n        return noop;\\n      }\\n      var cmds = [];\\n      cmds.push({ cmd: 'save' });\\n      cmds.push({\\n        cmd: 'transform',\\n        args: this.fontMatrix.slice()\\n      });\\n      cmds.push({\\n        cmd: 'scale',\\n        args: ['size', '-size']\\n      });\\n      this.compileGlyphImpl(code, cmds);\\n      cmds.push({ cmd: 'restore' });\\n      return cmds;\\n    },\\n    compileGlyphImpl: function compileGlyphImpl() {\\n      (0, _util.unreachable)('Children classes should implement this.');\\n    },\\n    hasBuiltPath: function hasBuiltPath(unicode) {\\n      var cmap = lookupCmap(this.cmap, unicode);\\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\\n    }\\n  };\\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\\n    CompiledFont.call(this, fontMatrix);\\n    this.glyphs = glyphs;\\n    this.cmap = cmap;\\n  }\\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\\n      compileGlyf(code, cmds, this);\\n    }\\n  });\\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\\n    CompiledFont.call(this, fontMatrix);\\n    this.glyphs = cffInfo.glyphs;\\n    this.gsubrs = cffInfo.gsubrs || [];\\n    this.subrs = cffInfo.subrs || [];\\n    this.cmap = cmap;\\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\\n  }\\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\\n      compileCharString(code, cmds, this);\\n    }\\n  });\\n  return {\\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\\n      var data = new Uint8Array(font.data);\\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\\n      var numTables = getUshort(data, 4);\\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\\n        var offset = getLong(data, p + 8);\\n        var length = getLong(data, p + 12);\\n        switch (tag) {\\n          case 'cmap':\\n            cmap = parseCmap(data, offset, offset + length);\\n            break;\\n          case 'glyf':\\n            glyf = data.subarray(offset, offset + length);\\n            break;\\n          case 'loca':\\n            loca = data.subarray(offset, offset + length);\\n            break;\\n          case 'head':\\n            unitsPerEm = getUshort(data, offset + 18);\\n            indexToLocFormat = getUshort(data, offset + 50);\\n            break;\\n          case 'CFF ':\\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\\n            break;\\n        }\\n      }\\n      if (glyf) {\\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\\n      }\\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\\n    }\\n  };\\n}();\\nexports.FontRendererFactory = FontRendererFactory;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _cff_parser = require('./cff_parser');\\n\\nvar _glyphlist = require('./glyphlist');\\n\\nvar _encodings = require('./encodings');\\n\\nvar _standard_fonts = require('./standard_fonts');\\n\\nvar _unicode = require('./unicode');\\n\\nvar _font_renderer = require('./font_renderer');\\n\\nvar _stream = require('./stream');\\n\\nvar _type1_parser = require('./type1_parser');\\n\\nvar PRIVATE_USE_OFFSET_START = 0xE000;\\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\\nvar PDF_GLYPH_SPACE_UNITS = 1000;\\nvar SEAC_ANALYSIS_ENABLED = false;\\nvar FontFlags = {\\n  FixedPitch: 1,\\n  Serif: 2,\\n  Symbolic: 4,\\n  Script: 8,\\n  Nonsymbolic: 32,\\n  Italic: 64,\\n  AllCap: 65536,\\n  SmallCap: 131072,\\n  ForceBold: 262144\\n};\\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\\nfunction adjustWidths(properties) {\\n  if (!properties.fontMatrix) {\\n    return;\\n  }\\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\\n    return;\\n  }\\n  var scale = 0.001 / properties.fontMatrix[0];\\n  var glyphsWidths = properties.widths;\\n  for (var glyph in glyphsWidths) {\\n    glyphsWidths[glyph] *= scale;\\n  }\\n  properties.defaultWidth *= scale;\\n}\\nfunction adjustToUnicode(properties, builtInEncoding) {\\n  if (properties.hasIncludedToUnicodeMap) {\\n    return;\\n  }\\n  if (properties.hasEncoding) {\\n    return;\\n  }\\n  if (builtInEncoding === properties.defaultEncoding) {\\n    return;\\n  }\\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\\n    return;\\n  }\\n  var toUnicode = [],\\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n  for (var charCode in builtInEncoding) {\\n    var glyphName = builtInEncoding[charCode];\\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n    if (unicode !== -1) {\\n      toUnicode[charCode] = String.fromCharCode(unicode);\\n    }\\n  }\\n  properties.toUnicode.amend(toUnicode);\\n}\\nfunction getFontType(type, subtype) {\\n  switch (type) {\\n    case 'Type1':\\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\\n    case 'CIDFontType0':\\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\\n    case 'OpenType':\\n      return _util.FontType.OPENTYPE;\\n    case 'TrueType':\\n      return _util.FontType.TRUETYPE;\\n    case 'CIDFontType2':\\n      return _util.FontType.CIDFONTTYPE2;\\n    case 'MMType1':\\n      return _util.FontType.MMTYPE1;\\n    case 'Type0':\\n      return _util.FontType.TYPE0;\\n    default:\\n      return _util.FontType.UNKNOWN;\\n  }\\n}\\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\\n  if (glyphsUnicodeMap[name] !== undefined) {\\n    return name;\\n  }\\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\\n  if (unicode !== -1) {\\n    for (var key in glyphsUnicodeMap) {\\n      if (glyphsUnicodeMap[key] === unicode) {\\n        return key;\\n      }\\n    }\\n  }\\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\\n  return name;\\n}\\nvar Glyph = function GlyphClosure() {\\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\n    this.fontChar = fontChar;\\n    this.unicode = unicode;\\n    this.accent = accent;\\n    this.width = width;\\n    this.vmetric = vmetric;\\n    this.operatorListId = operatorListId;\\n    this.isSpace = isSpace;\\n    this.isInFont = isInFont;\\n  }\\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\\n  };\\n  return Glyph;\\n}();\\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\\n  function ToUnicodeMap() {\\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n\\n    this._map = cmap;\\n  }\\n  ToUnicodeMap.prototype = {\\n    get length() {\\n      return this._map.length;\\n    },\\n    forEach: function forEach(callback) {\\n      for (var charCode in this._map) {\\n        callback(charCode, this._map[charCode].charCodeAt(0));\\n      }\\n    },\\n    has: function has(i) {\\n      return this._map[i] !== undefined;\\n    },\\n    get: function get(i) {\\n      return this._map[i];\\n    },\\n    charCodeOf: function charCodeOf(value) {\\n      var map = this._map;\\n      if (map.length <= 0x10000) {\\n        return map.indexOf(value);\\n      }\\n      for (var charCode in map) {\\n        if (map[charCode] === value) {\\n          return charCode | 0;\\n        }\\n      }\\n      return -1;\\n    },\\n    amend: function amend(map) {\\n      for (var charCode in map) {\\n        this._map[charCode] = map[charCode];\\n      }\\n    }\\n  };\\n  return ToUnicodeMap;\\n}();\\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\\n  function IdentityToUnicodeMap(firstChar, lastChar) {\\n    this.firstChar = firstChar;\\n    this.lastChar = lastChar;\\n  }\\n  IdentityToUnicodeMap.prototype = {\\n    get length() {\\n      return this.lastChar + 1 - this.firstChar;\\n    },\\n    forEach: function forEach(callback) {\\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\\n        callback(i, i);\\n      }\\n    },\\n    has: function has(i) {\\n      return this.firstChar <= i && i <= this.lastChar;\\n    },\\n    get: function get(i) {\\n      if (this.firstChar <= i && i <= this.lastChar) {\\n        return String.fromCharCode(i);\\n      }\\n      return undefined;\\n    },\\n    charCodeOf: function charCodeOf(v) {\\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\\n    },\\n    amend: function amend(map) {\\n      (0, _util.unreachable)('Should not call amend()');\\n    }\\n  };\\n  return IdentityToUnicodeMap;\\n}();\\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\\n  function writeInt16(dest, offset, num) {\\n    dest[offset] = num >> 8 & 0xFF;\\n    dest[offset + 1] = num & 0xFF;\\n  }\\n  function writeInt32(dest, offset, num) {\\n    dest[offset] = num >> 24 & 0xFF;\\n    dest[offset + 1] = num >> 16 & 0xFF;\\n    dest[offset + 2] = num >> 8 & 0xFF;\\n    dest[offset + 3] = num & 0xFF;\\n  }\\n  function writeData(dest, offset, data) {\\n    var i, ii;\\n    if (data instanceof Uint8Array) {\\n      dest.set(data, offset);\\n    } else if (typeof data === 'string') {\\n      for (i = 0, ii = data.length; i < ii; i++) {\\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\\n      }\\n    } else {\\n      for (i = 0, ii = data.length; i < ii; i++) {\\n        dest[offset++] = data[i] & 0xFF;\\n      }\\n    }\\n  }\\n  function OpenTypeFileBuilder(sfnt) {\\n    this.sfnt = sfnt;\\n    this.tables = Object.create(null);\\n  }\\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\\n    var maxPower2 = 1,\\n        log2 = 0;\\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\\n      maxPower2 <<= 1;\\n      log2++;\\n    }\\n    var searchRange = maxPower2 * entrySize;\\n    return {\\n      range: searchRange,\\n      entry: log2,\\n      rangeShift: entrySize * entriesCount - searchRange\\n    };\\n  };\\n  var OTF_HEADER_SIZE = 12;\\n  var OTF_TABLE_ENTRY_SIZE = 16;\\n  OpenTypeFileBuilder.prototype = {\\n    toArray: function OpenTypeFileBuilder_toArray() {\\n      var sfnt = this.sfnt;\\n      var tables = this.tables;\\n      var tablesNames = Object.keys(tables);\\n      tablesNames.sort();\\n      var numTables = tablesNames.length;\\n      var i, j, jj, table, tableName;\\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\\n      var tableOffsets = [offset];\\n      for (i = 0; i < numTables; i++) {\\n        table = tables[tablesNames[i]];\\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\\n        offset += paddedLength;\\n        tableOffsets.push(offset);\\n      }\\n      var file = new Uint8Array(offset);\\n      for (i = 0; i < numTables; i++) {\\n        table = tables[tablesNames[i]];\\n        writeData(file, tableOffsets[i], table);\\n      }\\n      if (sfnt === 'true') {\\n        sfnt = (0, _util.string32)(0x00010000);\\n      }\\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\\n      writeInt16(file, 4, numTables);\\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\\n      writeInt16(file, 6, searchParams.range);\\n      writeInt16(file, 8, searchParams.entry);\\n      writeInt16(file, 10, searchParams.rangeShift);\\n      offset = OTF_HEADER_SIZE;\\n      for (i = 0; i < numTables; i++) {\\n        tableName = tablesNames[i];\\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\\n        var checksum = 0;\\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\\n          var quad = (0, _util.readUint32)(file, j);\\n          checksum = checksum + quad >>> 0;\\n        }\\n        writeInt32(file, offset + 4, checksum);\\n        writeInt32(file, offset + 8, tableOffsets[i]);\\n        writeInt32(file, offset + 12, tables[tableName].length);\\n        offset += OTF_TABLE_ENTRY_SIZE;\\n      }\\n      return file;\\n    },\\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\\n      if (tag in this.tables) {\\n        throw new Error('Table ' + tag + ' already exists');\\n      }\\n      this.tables[tag] = data;\\n    }\\n  };\\n  return OpenTypeFileBuilder;\\n}();\\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\\nvar Font = function FontClosure() {\\n  function Font(name, file, properties) {\\n    var charCode;\\n    this.name = name;\\n    this.loadedName = properties.loadedName;\\n    this.isType3Font = properties.isType3Font;\\n    this.sizes = [];\\n    this.missingFile = false;\\n    this.glyphCache = Object.create(null);\\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\\n    var type = properties.type;\\n    var subtype = properties.subtype;\\n    this.type = type;\\n    this.subtype = subtype;\\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\\n    this.differences = properties.differences;\\n    this.widths = properties.widths;\\n    this.defaultWidth = properties.defaultWidth;\\n    this.composite = properties.composite;\\n    this.wideChars = properties.wideChars;\\n    this.cMap = properties.cMap;\\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\\n    this.fontMatrix = properties.fontMatrix;\\n    this.bbox = properties.bbox;\\n    this.defaultEncoding = properties.defaultEncoding;\\n    this.toUnicode = properties.toUnicode;\\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\\n    this.toFontChar = [];\\n    if (properties.type === 'Type3') {\\n      for (charCode = 0; charCode < 256; charCode++) {\\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\\n      }\\n      this.fontType = _util.FontType.TYPE3;\\n      return;\\n    }\\n    this.cidEncoding = properties.cidEncoding;\\n    this.vertical = properties.vertical;\\n    if (this.vertical) {\\n      this.vmetrics = properties.vmetrics;\\n      this.defaultVMetrics = properties.defaultVMetrics;\\n    }\\n    if (!file || file.isEmpty) {\\n      if (file) {\\n        (0, _util.warn)('Font file is empty in \\\"' + name + '\\\" (' + this.loadedName + ')');\\n      }\\n      this.fallbackToSystemFont();\\n      return;\\n    }\\n    if (subtype === 'Type1C') {\\n      if (type !== 'Type1' && type !== 'MMType1') {\\n        if (isTrueTypeFile(file)) {\\n          subtype = 'TrueType';\\n        } else {\\n          type = 'Type1';\\n        }\\n      } else if (isOpenTypeFile(file)) {\\n        subtype = 'OpenType';\\n      }\\n    }\\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\\n      type = 'CIDFontType0';\\n    }\\n    if (type === 'CIDFontType0') {\\n      if (isType1File(file)) {\\n        subtype = 'CIDFontType0';\\n      } else if (isOpenTypeFile(file)) {\\n        subtype = 'OpenType';\\n      } else {\\n        subtype = 'CIDFontType0C';\\n      }\\n    }\\n    if (subtype === 'OpenType' && type !== 'OpenType') {\\n      type = 'OpenType';\\n    }\\n    try {\\n      var data;\\n      switch (type) {\\n        case 'MMType1':\\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\\n        case 'Type1':\\n        case 'CIDFontType0':\\n          this.mimetype = 'font/opentype';\\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\\n          adjustWidths(properties);\\n          data = this.convert(name, cff, properties);\\n          break;\\n        case 'OpenType':\\n        case 'TrueType':\\n        case 'CIDFontType2':\\n          this.mimetype = 'font/opentype';\\n          data = this.checkAndRepair(name, file, properties);\\n          if (this.isOpenType) {\\n            adjustWidths(properties);\\n            type = 'OpenType';\\n          }\\n          break;\\n        default:\\n          throw new _util.FormatError('Font ' + type + ' is not supported');\\n      }\\n    } catch (e) {\\n      if (!(e instanceof _util.FormatError)) {\\n        throw e;\\n      }\\n      (0, _util.warn)(e);\\n      this.fallbackToSystemFont();\\n      return;\\n    }\\n    this.data = data;\\n    this.fontType = getFontType(type, subtype);\\n    this.fontMatrix = properties.fontMatrix;\\n    this.widths = properties.widths;\\n    this.defaultWidth = properties.defaultWidth;\\n    this.toUnicode = properties.toUnicode;\\n    this.encoding = properties.baseEncoding;\\n    this.seacMap = properties.seacMap;\\n    this.loading = true;\\n  }\\n  Font.getFontID = function () {\\n    var ID = 1;\\n    return function Font_getFontID() {\\n      return String(ID++);\\n    };\\n  }();\\n  function int16(b0, b1) {\\n    return (b0 << 8) + b1;\\n  }\\n  function writeSignedInt16(bytes, index, value) {\\n    bytes[index + 1] = value;\\n    bytes[index] = value >>> 8;\\n  }\\n  function signedInt16(b0, b1) {\\n    var value = (b0 << 8) + b1;\\n    return value & 1 << 15 ? value - 0x10000 : value;\\n  }\\n  function int32(b0, b1, b2, b3) {\\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n  }\\n  function string16(value) {\\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\n  }\\n  function safeString16(value) {\\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\n  }\\n  function isTrueTypeFile(file) {\\n    var header = file.peekBytes(4);\\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\\n  }\\n  function isTrueTypeCollectionFile(file) {\\n    var header = file.peekBytes(4);\\n    return (0, _util.bytesToString)(header) === 'ttcf';\\n  }\\n  function isOpenTypeFile(file) {\\n    var header = file.peekBytes(4);\\n    return (0, _util.bytesToString)(header) === 'OTTO';\\n  }\\n  function isType1File(file) {\\n    var header = file.peekBytes(2);\\n    if (header[0] === 0x25 && header[1] === 0x21) {\\n      return true;\\n    }\\n    if (header[0] === 0x80 && header[1] === 0x01) {\\n      return true;\\n    }\\n    return false;\\n  }\\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\\n    var toFontChar = [],\\n        unicode;\\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\\n      if (unicode !== -1) {\\n        toFontChar[i] = unicode;\\n      }\\n    }\\n    for (var charCode in differences) {\\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\\n      if (unicode !== -1) {\\n        toFontChar[+charCode] = unicode;\\n      }\\n    }\\n    return toFontChar;\\n  }\\n  function isProblematicUnicodeLocation(code) {\\n    var i = 0,\\n        j = ProblematicCharRanges.length - 1;\\n    while (i < j) {\\n      var c = i + j + 1 >> 1;\\n      if (code < ProblematicCharRanges[c]) {\\n        j = c - 1;\\n      } else {\\n        i = c;\\n      }\\n    }\\n    return !(i & 1);\\n  }\\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\\n    var toUnicode = properties.toUnicode;\\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\\n    var newMap = Object.create(null);\\n    var toFontChar = [];\\n    var usedFontCharCodes = [];\\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\\n    for (var originalCharCode in charCodeToGlyphId) {\\n      originalCharCode |= 0;\\n      var glyphId = charCodeToGlyphId[originalCharCode];\\n      if (missingGlyphs[glyphId]) {\\n        continue;\\n      }\\n      var fontCharCode = originalCharCode;\\n      var hasUnicodeValue = false;\\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\\n        hasUnicodeValue = true;\\n        var unicode = toUnicode.get(fontCharCode);\\n        if (unicode.length === 1) {\\n          fontCharCode = unicode.charCodeAt(0);\\n        }\\n      }\\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\\n        do {\\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\\n            (0, _util.warn)('Ran out of space in font private use area.');\\n            break;\\n          }\\n          fontCharCode = nextAvailableFontCharCode++;\\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\\n            fontCharCode = 0xF020;\\n            nextAvailableFontCharCode = fontCharCode + 1;\\n          }\\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\\n      }\\n      newMap[fontCharCode] = glyphId;\\n      toFontChar[originalCharCode] = fontCharCode;\\n      usedFontCharCodes[fontCharCode] = true;\\n    }\\n    return {\\n      toFontChar: toFontChar,\\n      charCodeToGlyphId: newMap,\\n      nextAvailableFontCharCode: nextAvailableFontCharCode\\n    };\\n  }\\n  function getRanges(glyphs, numGlyphs) {\\n    var codes = [];\\n    for (var charCode in glyphs) {\\n      if (glyphs[charCode] >= numGlyphs) {\\n        continue;\\n      }\\n      codes.push({\\n        fontCharCode: charCode | 0,\\n        glyphId: glyphs[charCode]\\n      });\\n    }\\n    if (codes.length === 0) {\\n      codes.push({\\n        fontCharCode: 0,\\n        glyphId: 0\\n      });\\n    }\\n    codes.sort(function fontGetRangesSort(a, b) {\\n      return a.fontCharCode - b.fontCharCode;\\n    });\\n    var ranges = [];\\n    var length = codes.length;\\n    for (var n = 0; n < length;) {\\n      var start = codes[n].fontCharCode;\\n      var codeIndices = [codes[n].glyphId];\\n      ++n;\\n      var end = start;\\n      while (n < length && end + 1 === codes[n].fontCharCode) {\\n        codeIndices.push(codes[n].glyphId);\\n        ++end;\\n        ++n;\\n        if (end === 0xFFFF) {\\n          break;\\n        }\\n      }\\n      ranges.push([start, end, codeIndices]);\\n    }\\n    return ranges;\\n  }\\n  function createCmapTable(glyphs, numGlyphs) {\\n    var ranges = getRanges(glyphs, numGlyphs);\\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\\n    var cmap = '\\\\x00\\\\x00' + string16(numTables) + '\\\\x00\\\\x03' + '\\\\x00\\\\x01' + (0, _util.string32)(4 + numTables * 8);\\n    var i, ii, j, jj;\\n    for (i = ranges.length - 1; i >= 0; --i) {\\n      if (ranges[i][0] <= 0xFFFF) {\\n        break;\\n      }\\n    }\\n    var bmpLength = i + 1;\\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\\n      ranges[i][1] = 0xFFFE;\\n    }\\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\\n    var segCount = bmpLength + trailingRangesCount;\\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\\n    var startCount = '';\\n    var endCount = '';\\n    var idDeltas = '';\\n    var idRangeOffsets = '';\\n    var glyphsIds = '';\\n    var bias = 0;\\n    var range, start, end, codes;\\n    for (i = 0, ii = bmpLength; i < ii; i++) {\\n      range = ranges[i];\\n      start = range[0];\\n      end = range[1];\\n      startCount += string16(start);\\n      endCount += string16(end);\\n      codes = range[2];\\n      var contiguous = true;\\n      for (j = 1, jj = codes.length; j < jj; ++j) {\\n        if (codes[j] !== codes[j - 1] + 1) {\\n          contiguous = false;\\n          break;\\n        }\\n      }\\n      if (!contiguous) {\\n        var offset = (segCount - i) * 2 + bias * 2;\\n        bias += end - start + 1;\\n        idDeltas += string16(0);\\n        idRangeOffsets += string16(offset);\\n        for (j = 0, jj = codes.length; j < jj; ++j) {\\n          glyphsIds += string16(codes[j]);\\n        }\\n      } else {\\n        var startCode = codes[0];\\n        idDeltas += string16(startCode - start & 0xFFFF);\\n        idRangeOffsets += string16(0);\\n      }\\n    }\\n    if (trailingRangesCount > 0) {\\n      endCount += '\\\\xFF\\\\xFF';\\n      startCount += '\\\\xFF\\\\xFF';\\n      idDeltas += '\\\\x00\\\\x01';\\n      idRangeOffsets += '\\\\x00\\\\x00';\\n    }\\n    var format314 = '\\\\x00\\\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\\\x00\\\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\\n    var format31012 = '';\\n    var header31012 = '';\\n    if (numTables > 1) {\\n      cmap += '\\\\x00\\\\x03' + '\\\\x00\\\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\\n      format31012 = '';\\n      for (i = 0, ii = ranges.length; i < ii; i++) {\\n        range = ranges[i];\\n        start = range[0];\\n        codes = range[2];\\n        var code = codes[0];\\n        for (j = 1, jj = codes.length; j < jj; ++j) {\\n          if (codes[j] !== codes[j - 1] + 1) {\\n            end = range[0] + j - 1;\\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\\n            start = end + 1;\\n            code = codes[j];\\n          }\\n        }\\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\\n      }\\n      header31012 = '\\\\x00\\\\x0C' + '\\\\x00\\\\x00' + (0, _util.string32)(format31012.length + 16) + '\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(format31012.length / 12);\\n    }\\n    return cmap + '\\\\x00\\\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\\n  }\\n  function validateOS2Table(os2) {\\n    var stream = new _stream.Stream(os2.data);\\n    var version = stream.getUint16();\\n    stream.getBytes(60);\\n    var selection = stream.getUint16();\\n    if (version < 4 && selection & 0x0300) {\\n      return false;\\n    }\\n    var firstChar = stream.getUint16();\\n    var lastChar = stream.getUint16();\\n    if (firstChar > lastChar) {\\n      return false;\\n    }\\n    stream.getBytes(6);\\n    var usWinAscent = stream.getUint16();\\n    if (usWinAscent === 0) {\\n      return false;\\n    }\\n    os2.data[8] = os2.data[9] = 0;\\n    return true;\\n  }\\n  function createOS2Table(properties, charstrings, override) {\\n    override = override || {\\n      unitsPerEm: 0,\\n      yMax: 0,\\n      yMin: 0,\\n      ascent: 0,\\n      descent: 0\\n    };\\n    var ulUnicodeRange1 = 0;\\n    var ulUnicodeRange2 = 0;\\n    var ulUnicodeRange3 = 0;\\n    var ulUnicodeRange4 = 0;\\n    var firstCharIndex = null;\\n    var lastCharIndex = 0;\\n    if (charstrings) {\\n      for (var code in charstrings) {\\n        code |= 0;\\n        if (firstCharIndex > code || !firstCharIndex) {\\n          firstCharIndex = code;\\n        }\\n        if (lastCharIndex < code) {\\n          lastCharIndex = code;\\n        }\\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\\n        if (position < 32) {\\n          ulUnicodeRange1 |= 1 << position;\\n        } else if (position < 64) {\\n          ulUnicodeRange2 |= 1 << position - 32;\\n        } else if (position < 96) {\\n          ulUnicodeRange3 |= 1 << position - 64;\\n        } else if (position < 123) {\\n          ulUnicodeRange4 |= 1 << position - 96;\\n        } else {\\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\\n        }\\n      }\\n    } else {\\n      firstCharIndex = 0;\\n      lastCharIndex = 255;\\n    }\\n    var bbox = properties.bbox || [0, 0, 0, 0];\\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\\n      typoDescent = -typoDescent;\\n    }\\n    var winAscent = override.yMax || typoAscent;\\n    var winDescent = -override.yMin || -typoDescent;\\n    return '\\\\x00\\\\x03' + '\\\\x02\\\\x24' + '\\\\x01\\\\xF4' + '\\\\x00\\\\x05' + '\\\\x00\\\\x00' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x00\\\\x8C' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x01\\\\xDF' + '\\\\x00\\\\x31' + '\\\\x01\\\\x02' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\\\x2A\\\\x32\\\\x31\\\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\\\x00\\\\x64' + string16(winAscent) + string16(winDescent) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\\\x00\\\\x03';\\n  }\\n  function createPostTable(properties) {\\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\\n    return '\\\\x00\\\\x03\\\\x00\\\\x00' + (0, _util.string32)(angle) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00';\\n  }\\n  function createNameTable(name, proto) {\\n    if (!proto) {\\n      proto = [[], []];\\n    }\\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\\n    var stringsUnicode = [];\\n    var i, ii, j, jj, str;\\n    for (i = 0, ii = strings.length; i < ii; i++) {\\n      str = proto[1][i] || strings[i];\\n      var strBufUnicode = [];\\n      for (j = 0, jj = str.length; j < jj; j++) {\\n        strBufUnicode.push(string16(str.charCodeAt(j)));\\n      }\\n      stringsUnicode.push(strBufUnicode.join(''));\\n    }\\n    var names = [strings, stringsUnicode];\\n    var platforms = ['\\\\x00\\\\x01', '\\\\x00\\\\x03'];\\n    var encodings = ['\\\\x00\\\\x00', '\\\\x00\\\\x01'];\\n    var languages = ['\\\\x00\\\\x00', '\\\\x04\\\\x09'];\\n    var namesRecordCount = strings.length * platforms.length;\\n    var nameTable = '\\\\x00\\\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\\n    var strOffset = 0;\\n    for (i = 0, ii = platforms.length; i < ii; i++) {\\n      var strs = names[i];\\n      for (j = 0, jj = strs.length; j < jj; j++) {\\n        str = strs[j];\\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\\n        nameTable += nameRecord;\\n        strOffset += str.length;\\n      }\\n    }\\n    nameTable += strings.join('') + stringsUnicode.join('');\\n    return nameTable;\\n  }\\n  Font.prototype = {\\n    name: null,\\n    font: null,\\n    mimetype: null,\\n    encoding: null,\\n    get renderer() {\\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\\n      return (0, _util.shadow)(this, 'renderer', renderer);\\n    },\\n    exportData: function Font_exportData() {\\n      var data = {};\\n      for (var i in this) {\\n        if (this.hasOwnProperty(i)) {\\n          data[i] = this[i];\\n        }\\n      }\\n      return data;\\n    },\\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\\n      var _this = this;\\n\\n      this.missingFile = true;\\n      var charCode, unicode;\\n      var name = this.name;\\n      var type = this.type;\\n      var subtype = this.subtype;\\n      var fontName = name.replace(/[,_]/g, '-');\\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\\n      this.bold = fontName.search(/bold/gi) !== -1;\\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\\n      this.black = name.search(/Black/g) !== -1;\\n      this.remeasure = Object.keys(this.widths).length > 0;\\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\\n        var map = [];\\n        for (charCode in GlyphMapForStandardFonts) {\\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\\n        }\\n        if (/Arial-?Black/i.test(name)) {\\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\\n          for (charCode in SupplementalGlyphMapForArialBlack) {\\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\\n          }\\n        } else if (/Calibri/i.test(name)) {\\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\\n          for (charCode in SupplementalGlyphMapForCalibri) {\\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\\n          }\\n        }\\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\\n        if (!isIdentityUnicode) {\\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\n            map[+charCode] = unicodeCharCode;\\n          });\\n        }\\n        this.toFontChar = map;\\n        this.toUnicode = new ToUnicodeMap(map);\\n      } else if (/Symbol/i.test(fontName)) {\\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\n      } else if (/Dingbats/i.test(fontName)) {\\n        if (/Wingdings/i.test(name)) {\\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\\n        }\\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\\n      } else if (isStandardFont) {\\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\n      } else {\\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\n          if (!_this.composite) {\\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n            if (unicode !== -1) {\\n              unicodeCharCode = unicode;\\n            }\\n          }\\n          _this.toFontChar[charCode] = unicodeCharCode;\\n        });\\n      }\\n      this.loadedName = fontName.split('-')[0];\\n      this.loading = false;\\n      this.fontType = getFontType(type, subtype);\\n    },\\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\\n      function readTables(file, numTables) {\\n        var tables = Object.create(null);\\n        tables['OS/2'] = null;\\n        tables['cmap'] = null;\\n        tables['head'] = null;\\n        tables['hhea'] = null;\\n        tables['hmtx'] = null;\\n        tables['maxp'] = null;\\n        tables['name'] = null;\\n        tables['post'] = null;\\n        for (var i = 0; i < numTables; i++) {\\n          var table = readTableEntry(font);\\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\\n            continue;\\n          }\\n          if (table.length === 0) {\\n            continue;\\n          }\\n          tables[table.tag] = table;\\n        }\\n        return tables;\\n      }\\n      function readTableEntry(file) {\\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\\n        var checksum = file.getInt32() >>> 0;\\n        var offset = file.getInt32() >>> 0;\\n        var length = file.getInt32() >>> 0;\\n        var previousPosition = file.pos;\\n        file.pos = file.start ? file.start : 0;\\n        file.skip(offset);\\n        var data = file.getBytes(length);\\n        file.pos = previousPosition;\\n        if (tag === 'head') {\\n          data[8] = data[9] = data[10] = data[11] = 0;\\n          data[17] |= 0x20;\\n        }\\n        return {\\n          tag: tag,\\n          checksum: checksum,\\n          length: length,\\n          offset: offset,\\n          data: data\\n        };\\n      }\\n      function readOpenTypeHeader(ttf) {\\n        return {\\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\\n          numTables: ttf.getUint16(),\\n          searchRange: ttf.getUint16(),\\n          entrySelector: ttf.getUint16(),\\n          rangeShift: ttf.getUint16()\\n        };\\n      }\\n      function readTrueTypeCollectionHeader(ttc) {\\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\\n        var majorVersion = ttc.getUint16();\\n        var minorVersion = ttc.getUint16();\\n        var numFonts = ttc.getInt32() >>> 0;\\n        var offsetTable = [];\\n        for (var i = 0; i < numFonts; i++) {\\n          offsetTable.push(ttc.getInt32() >>> 0);\\n        }\\n        var header = {\\n          ttcTag: ttcTag,\\n          majorVersion: majorVersion,\\n          minorVersion: minorVersion,\\n          numFonts: numFonts,\\n          offsetTable: offsetTable\\n        };\\n        switch (majorVersion) {\\n          case 1:\\n            return header;\\n          case 2:\\n            header.dsigTag = ttc.getInt32() >>> 0;\\n            header.dsigLength = ttc.getInt32() >>> 0;\\n            header.dsigOffset = ttc.getInt32() >>> 0;\\n            return header;\\n        }\\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\\n      }\\n      function readTrueTypeCollectionData(ttc, fontName) {\\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\\n            numFonts = _readTrueTypeCollecti.numFonts,\\n            offsetTable = _readTrueTypeCollecti.offsetTable;\\n\\n        for (var i = 0; i < numFonts; i++) {\\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\\n          var potentialHeader = readOpenTypeHeader(ttc);\\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\\n          if (!potentialTables['name']) {\\n            throw new _util.FormatError('TrueType Collection font must contain a \\\"name\\\" table.');\\n          }\\n          var nameTable = readNameTable(potentialTables['name']);\\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\\n              var nameEntry = nameTable[j][k];\\n              if (nameEntry && nameEntry.replace(/\\\\s/g, '') === fontName) {\\n                return {\\n                  header: potentialHeader,\\n                  tables: potentialTables\\n                };\\n              }\\n            }\\n          }\\n        }\\n        throw new _util.FormatError('TrueType Collection does not contain \\\"' + fontName + '\\\" font.');\\n      }\\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\\n        if (!cmap) {\\n          (0, _util.warn)('No cmap table available.');\\n          return {\\n            platformId: -1,\\n            encodingId: -1,\\n            mappings: [],\\n            hasShortCmap: false\\n          };\\n        }\\n        var segment;\\n        var start = (font.start ? font.start : 0) + cmap.offset;\\n        font.pos = start;\\n        font.getUint16();\\n        var numTables = font.getUint16();\\n        var potentialTable;\\n        var canBreak = false;\\n        for (var i = 0; i < numTables; i++) {\\n          var platformId = font.getUint16();\\n          var encodingId = font.getUint16();\\n          var offset = font.getInt32() >>> 0;\\n          var useTable = false;\\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\\n            continue;\\n          }\\n          if (platformId === 0 && encodingId === 0) {\\n            useTable = true;\\n          } else if (platformId === 1 && encodingId === 0) {\\n            useTable = true;\\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\\n            useTable = true;\\n            if (!isSymbolicFont) {\\n              canBreak = true;\\n            }\\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\\n            useTable = true;\\n            canBreak = true;\\n          }\\n          if (useTable) {\\n            potentialTable = {\\n              platformId: platformId,\\n              encodingId: encodingId,\\n              offset: offset\\n            };\\n          }\\n          if (canBreak) {\\n            break;\\n          }\\n        }\\n        if (potentialTable) {\\n          font.pos = start + potentialTable.offset;\\n        }\\n        if (!potentialTable || font.peekByte() === -1) {\\n          (0, _util.warn)('Could not find a preferred cmap table.');\\n          return {\\n            platformId: -1,\\n            encodingId: -1,\\n            mappings: [],\\n            hasShortCmap: false\\n          };\\n        }\\n        var format = font.getUint16();\\n        font.getUint16();\\n        font.getUint16();\\n        var hasShortCmap = false;\\n        var mappings = [];\\n        var j, glyphId;\\n        if (format === 0) {\\n          for (j = 0; j < 256; j++) {\\n            var index = font.getByte();\\n            if (!index) {\\n              continue;\\n            }\\n            mappings.push({\\n              charCode: j,\\n              glyphId: index\\n            });\\n          }\\n          hasShortCmap = true;\\n        } else if (format === 4) {\\n          var segCount = font.getUint16() >> 1;\\n          font.getBytes(6);\\n          var segIndex,\\n              segments = [];\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segments.push({ end: font.getUint16() });\\n          }\\n          font.getUint16();\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segments[segIndex].start = font.getUint16();\\n          }\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segments[segIndex].delta = font.getUint16();\\n          }\\n          var offsetsCount = 0;\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segment = segments[segIndex];\\n            var rangeOffset = font.getUint16();\\n            if (!rangeOffset) {\\n              segment.offsetIndex = -1;\\n              continue;\\n            }\\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\\n            segment.offsetIndex = offsetIndex;\\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\\n          }\\n          var offsets = [];\\n          for (j = 0; j < offsetsCount; j++) {\\n            offsets.push(font.getUint16());\\n          }\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segment = segments[segIndex];\\n            start = segment.start;\\n            var end = segment.end;\\n            var delta = segment.delta;\\n            offsetIndex = segment.offsetIndex;\\n            for (j = start; j <= end; j++) {\\n              if (j === 0xFFFF) {\\n                continue;\\n              }\\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\\n              glyphId = glyphId + delta & 0xFFFF;\\n              mappings.push({\\n                charCode: j,\\n                glyphId: glyphId\\n              });\\n            }\\n          }\\n        } else if (format === 6) {\\n          var firstCode = font.getUint16();\\n          var entryCount = font.getUint16();\\n          for (j = 0; j < entryCount; j++) {\\n            glyphId = font.getUint16();\\n            var charCode = firstCode + j;\\n            mappings.push({\\n              charCode: charCode,\\n              glyphId: glyphId\\n            });\\n          }\\n        } else {\\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\\n          return {\\n            platformId: -1,\\n            encodingId: -1,\\n            mappings: [],\\n            hasShortCmap: false\\n          };\\n        }\\n        mappings.sort(function (a, b) {\\n          return a.charCode - b.charCode;\\n        });\\n        for (i = 1; i < mappings.length; i++) {\\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\\n            mappings.splice(i, 1);\\n            i--;\\n          }\\n        }\\n        return {\\n          platformId: potentialTable.platformId,\\n          encodingId: potentialTable.encodingId,\\n          mappings: mappings,\\n          hasShortCmap: hasShortCmap\\n        };\\n      }\\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\\n        if (!header) {\\n          if (metrics) {\\n            metrics.data = null;\\n          }\\n          return;\\n        }\\n        font.pos = (font.start ? font.start : 0) + header.offset;\\n        font.pos += header.length - 2;\\n        var numOfMetrics = font.getUint16();\\n        if (numOfMetrics > numGlyphs) {\\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\\n          numOfMetrics = numGlyphs;\\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\\n          header.data[35] = numOfMetrics & 0x00ff;\\n        }\\n        var numOfSidebearings = numGlyphs - numOfMetrics;\\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\\n        if (numMissing > 0) {\\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\\n          entries.set(metrics.data);\\n          metrics.data = entries;\\n        }\\n      }\\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\\n        var glyphProfile = {\\n          length: 0,\\n          sizeOfInstructions: 0\\n        };\\n        if (sourceEnd - sourceStart <= 12) {\\n          return glyphProfile;\\n        }\\n        var glyf = source.subarray(sourceStart, sourceEnd);\\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\\n        if (contoursCount < 0) {\\n          contoursCount = -1;\\n          writeSignedInt16(glyf, 0, contoursCount);\\n          dest.set(glyf, destStart);\\n          glyphProfile.length = glyf.length;\\n          return glyphProfile;\\n        }\\n        var i,\\n            j = 10,\\n            flagsCount = 0;\\n        for (i = 0; i < contoursCount; i++) {\\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\\n          flagsCount = endPoint + 1;\\n          j += 2;\\n        }\\n        var instructionsStart = j;\\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\\n        glyphProfile.sizeOfInstructions = instructionsLength;\\n        j += 2 + instructionsLength;\\n        var instructionsEnd = j;\\n        var coordinatesLength = 0;\\n        for (i = 0; i < flagsCount; i++) {\\n          var flag = glyf[j++];\\n          if (flag & 0xC0) {\\n            glyf[j - 1] = flag & 0x3F;\\n          }\\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\\n          coordinatesLength += xyLength;\\n          if (flag & 8) {\\n            var repeat = glyf[j++];\\n            i += repeat;\\n            coordinatesLength += repeat * xyLength;\\n          }\\n        }\\n        if (coordinatesLength === 0) {\\n          return glyphProfile;\\n        }\\n        var glyphDataLength = j + coordinatesLength;\\n        if (glyphDataLength > glyf.length) {\\n          return glyphProfile;\\n        }\\n        if (!hintsValid && instructionsLength > 0) {\\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\\n          dest.set([0, 0], destStart + instructionsStart);\\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\\n          glyphDataLength -= instructionsLength;\\n          if (glyf.length - glyphDataLength > 3) {\\n            glyphDataLength = glyphDataLength + 3 & ~3;\\n          }\\n          glyphProfile.length = glyphDataLength;\\n          return glyphProfile;\\n        }\\n        if (glyf.length - glyphDataLength > 3) {\\n          glyphDataLength = glyphDataLength + 3 & ~3;\\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\\n          glyphProfile.length = glyphDataLength;\\n          return glyphProfile;\\n        }\\n        dest.set(glyf, destStart);\\n        glyphProfile.length = glyf.length;\\n        return glyphProfile;\\n      }\\n      function sanitizeHead(head, numGlyphs, locaLength) {\\n        var data = head.data;\\n        var version = int32(data[0], data[1], data[2], data[3]);\\n        if (version >> 16 !== 1) {\\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\\n          data[0] = 0;\\n          data[1] = 1;\\n          data[2] = 0;\\n          data[3] = 0;\\n        }\\n        var indexToLocFormat = int16(data[50], data[51]);\\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\\n          var numGlyphsPlusOne = numGlyphs + 1;\\n          if (locaLength === numGlyphsPlusOne << 1) {\\n            data[50] = 0;\\n            data[51] = 0;\\n          } else if (locaLength === numGlyphsPlusOne << 2) {\\n            data[50] = 0;\\n            data[51] = 1;\\n          } else {\\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\\n          }\\n        }\\n      }\\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\\n        var itemSize, itemDecode, itemEncode;\\n        if (isGlyphLocationsLong) {\\n          itemSize = 4;\\n          itemDecode = function fontItemDecodeLong(data, offset) {\\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n          };\\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\\n            data[offset] = value >>> 24 & 0xFF;\\n            data[offset + 1] = value >> 16 & 0xFF;\\n            data[offset + 2] = value >> 8 & 0xFF;\\n            data[offset + 3] = value & 0xFF;\\n          };\\n        } else {\\n          itemSize = 2;\\n          itemDecode = function fontItemDecode(data, offset) {\\n            return data[offset] << 9 | data[offset + 1] << 1;\\n          };\\n          itemEncode = function fontItemEncode(data, offset, value) {\\n            data[offset] = value >> 9 & 0xFF;\\n            data[offset + 1] = value >> 1 & 0xFF;\\n          };\\n        }\\n        var locaData = loca.data;\\n        var locaDataSize = itemSize * (1 + numGlyphs);\\n        if (locaData.length !== locaDataSize) {\\n          locaData = new Uint8Array(locaDataSize);\\n          locaData.set(loca.data.subarray(0, locaDataSize));\\n          loca.data = locaData;\\n        }\\n        var oldGlyfData = glyf.data;\\n        var oldGlyfDataLength = oldGlyfData.length;\\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\\n        var startOffset = itemDecode(locaData, 0);\\n        var writeOffset = 0;\\n        var missingGlyphs = Object.create(null);\\n        itemEncode(locaData, 0, writeOffset);\\n        var i, j;\\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\\n          var endOffset = itemDecode(locaData, j);\\n          if (endOffset === 0) {\\n            endOffset = startOffset;\\n          }\\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\\n            endOffset = oldGlyfDataLength;\\n          }\\n          if (endOffset > oldGlyfDataLength) {\\n            startOffset = endOffset;\\n          }\\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\\n          var newLength = glyphProfile.length;\\n          if (newLength === 0) {\\n            missingGlyphs[i] = true;\\n          }\\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\\n          }\\n          writeOffset += newLength;\\n          itemEncode(locaData, j, writeOffset);\\n          startOffset = endOffset;\\n        }\\n        if (writeOffset === 0) {\\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\\n            itemEncode(locaData, j, simpleGlyph.length);\\n          }\\n          glyf.data = simpleGlyph;\\n        } else if (dupFirstEntry) {\\n          var firstEntryLength = itemDecode(locaData, itemSize);\\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\\n          } else {\\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\\n          }\\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\\n        } else {\\n          glyf.data = newGlyfData.subarray(0, writeOffset);\\n        }\\n        return {\\n          missingGlyphs: missingGlyphs,\\n          maxSizeOfInstructions: maxSizeOfInstructions\\n        };\\n      }\\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\\n        var start = (font.start ? font.start : 0) + post.offset;\\n        font.pos = start;\\n        var length = post.length,\\n            end = start + length;\\n        var version = font.getInt32();\\n        font.getBytes(28);\\n        var glyphNames;\\n        var valid = true;\\n        var i;\\n        switch (version) {\\n          case 0x00010000:\\n            glyphNames = MacStandardGlyphOrdering;\\n            break;\\n          case 0x00020000:\\n            var numGlyphs = font.getUint16();\\n            if (numGlyphs !== maxpNumGlyphs) {\\n              valid = false;\\n              break;\\n            }\\n            var glyphNameIndexes = [];\\n            for (i = 0; i < numGlyphs; ++i) {\\n              var index = font.getUint16();\\n              if (index >= 32768) {\\n                valid = false;\\n                break;\\n              }\\n              glyphNameIndexes.push(index);\\n            }\\n            if (!valid) {\\n              break;\\n            }\\n            var customNames = [];\\n            var strBuf = [];\\n            while (font.pos < end) {\\n              var stringLength = font.getByte();\\n              strBuf.length = stringLength;\\n              for (i = 0; i < stringLength; ++i) {\\n                strBuf[i] = String.fromCharCode(font.getByte());\\n              }\\n              customNames.push(strBuf.join(''));\\n            }\\n            glyphNames = [];\\n            for (i = 0; i < numGlyphs; ++i) {\\n              var j = glyphNameIndexes[i];\\n              if (j < 258) {\\n                glyphNames.push(MacStandardGlyphOrdering[j]);\\n                continue;\\n              }\\n              glyphNames.push(customNames[j - 258]);\\n            }\\n            break;\\n          case 0x00030000:\\n            break;\\n          default:\\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\\n            valid = false;\\n            if (properties.defaultEncoding) {\\n              glyphNames = properties.defaultEncoding;\\n            }\\n            break;\\n        }\\n        properties.glyphNames = glyphNames;\\n        return valid;\\n      }\\n      function readNameTable(nameTable) {\\n        var start = (font.start ? font.start : 0) + nameTable.offset;\\n        font.pos = start;\\n        var names = [[], []];\\n        var length = nameTable.length,\\n            end = start + length;\\n        var format = font.getUint16();\\n        var FORMAT_0_HEADER_LENGTH = 6;\\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\\n          return names;\\n        }\\n        var numRecords = font.getUint16();\\n        var stringsStart = font.getUint16();\\n        var records = [];\\n        var NAME_RECORD_LENGTH = 12;\\n        var i, ii;\\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\\n          var r = {\\n            platform: font.getUint16(),\\n            encoding: font.getUint16(),\\n            language: font.getUint16(),\\n            name: font.getUint16(),\\n            length: font.getUint16(),\\n            offset: font.getUint16()\\n          };\\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\\n            records.push(r);\\n          }\\n        }\\n        for (i = 0, ii = records.length; i < ii; i++) {\\n          var record = records[i];\\n          if (record.length <= 0) {\\n            continue;\\n          }\\n          var pos = start + stringsStart + record.offset;\\n          if (pos + record.length > end) {\\n            continue;\\n          }\\n          font.pos = pos;\\n          var nameIndex = record.name;\\n          if (record.encoding) {\\n            var str = '';\\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\\n              str += String.fromCharCode(font.getUint16());\\n            }\\n            names[1][nameIndex] = str;\\n          } else {\\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\\n          }\\n        }\\n        return names;\\n      }\\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\\n      function sanitizeTTProgram(table, ttContext) {\\n        var data = table.data;\\n        var i = 0,\\n            j,\\n            n,\\n            b,\\n            funcId,\\n            pc,\\n            lastEndf = 0,\\n            lastDeff = 0;\\n        var stack = [];\\n        var callstack = [];\\n        var functionsCalled = [];\\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\\n        var inFDEF = false,\\n            ifLevel = 0,\\n            inELSE = 0;\\n        for (var ii = data.length; i < ii;) {\\n          var op = data[i++];\\n          if (op === 0x40) {\\n            n = data[i++];\\n            if (inFDEF || inELSE) {\\n              i += n;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                stack.push(data[i++]);\\n              }\\n            }\\n          } else if (op === 0x41) {\\n            n = data[i++];\\n            if (inFDEF || inELSE) {\\n              i += n * 2;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                b = data[i++];\\n                stack.push(b << 8 | data[i++]);\\n              }\\n            }\\n          } else if ((op & 0xF8) === 0xB0) {\\n            n = op - 0xB0 + 1;\\n            if (inFDEF || inELSE) {\\n              i += n;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                stack.push(data[i++]);\\n              }\\n            }\\n          } else if ((op & 0xF8) === 0xB8) {\\n            n = op - 0xB8 + 1;\\n            if (inFDEF || inELSE) {\\n              i += n * 2;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                b = data[i++];\\n                stack.push(b << 8 | data[i++]);\\n              }\\n            }\\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\\n            if (!inFDEF && !inELSE) {\\n              funcId = stack[stack.length - 1];\\n              ttContext.functionsUsed[funcId] = true;\\n              if (funcId in ttContext.functionsStackDeltas) {\\n                stack.length += ttContext.functionsStackDeltas[funcId];\\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\\n                callstack.push({\\n                  data: data,\\n                  i: i,\\n                  stackTop: stack.length - 1\\n                });\\n                functionsCalled.push(funcId);\\n                pc = ttContext.functionsDefined[funcId];\\n                if (!pc) {\\n                  (0, _util.warn)('TT: CALL non-existent function');\\n                  ttContext.hintsValid = false;\\n                  return;\\n                }\\n                data = pc.data;\\n                i = pc.i;\\n              }\\n            }\\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\\n            if (inFDEF || inELSE) {\\n              (0, _util.warn)('TT: nested FDEFs not allowed');\\n              tooComplexToFollowFunctions = true;\\n            }\\n            inFDEF = true;\\n            lastDeff = i;\\n            funcId = stack.pop();\\n            ttContext.functionsDefined[funcId] = {\\n              data: data,\\n              i: i\\n            };\\n          } else if (op === 0x2D) {\\n            if (inFDEF) {\\n              inFDEF = false;\\n              lastEndf = i;\\n            } else {\\n              pc = callstack.pop();\\n              if (!pc) {\\n                (0, _util.warn)('TT: ENDF bad stack');\\n                ttContext.hintsValid = false;\\n                return;\\n              }\\n              funcId = functionsCalled.pop();\\n              data = pc.data;\\n              i = pc.i;\\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\\n            }\\n          } else if (op === 0x89) {\\n            if (inFDEF || inELSE) {\\n              (0, _util.warn)('TT: nested IDEFs not allowed');\\n              tooComplexToFollowFunctions = true;\\n            }\\n            inFDEF = true;\\n            lastDeff = i;\\n          } else if (op === 0x58) {\\n            ++ifLevel;\\n          } else if (op === 0x1B) {\\n            inELSE = ifLevel;\\n          } else if (op === 0x59) {\\n            if (inELSE === ifLevel) {\\n              inELSE = 0;\\n            }\\n            --ifLevel;\\n          } else if (op === 0x1C) {\\n            if (!inFDEF && !inELSE) {\\n              var offset = stack[stack.length - 1];\\n              if (offset > 0) {\\n                i += offset - 1;\\n              }\\n            }\\n          }\\n          if (!inFDEF && !inELSE) {\\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\\n            if (op >= 0x71 && op <= 0x75) {\\n              n = stack.pop();\\n              if (!isNaN(n)) {\\n                stackDelta = -n * 2;\\n              }\\n            }\\n            while (stackDelta < 0 && stack.length > 0) {\\n              stack.pop();\\n              stackDelta++;\\n            }\\n            while (stackDelta > 0) {\\n              stack.push(NaN);\\n              stackDelta--;\\n            }\\n          }\\n        }\\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\\n        var content = [data];\\n        if (i > data.length) {\\n          content.push(new Uint8Array(i - data.length));\\n        }\\n        if (lastDeff > lastEndf) {\\n          (0, _util.warn)('TT: complementing a missing function tail');\\n          content.push(new Uint8Array([0x22, 0x2D]));\\n        }\\n        foldTTTable(table, content);\\n      }\\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\\n        if (ttContext.tooComplexToFollowFunctions) {\\n          return;\\n        }\\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\\n          (0, _util.warn)('TT: more functions defined than expected');\\n          ttContext.hintsValid = false;\\n          return;\\n        }\\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\\n          if (j > maxFunctionDefs) {\\n            (0, _util.warn)('TT: invalid function id: ' + j);\\n            ttContext.hintsValid = false;\\n            return;\\n          }\\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\\n            (0, _util.warn)('TT: undefined function: ' + j);\\n            ttContext.hintsValid = false;\\n            return;\\n          }\\n        }\\n      }\\n      function foldTTTable(table, content) {\\n        if (content.length > 1) {\\n          var newLength = 0;\\n          var j, jj;\\n          for (j = 0, jj = content.length; j < jj; j++) {\\n            newLength += content[j].length;\\n          }\\n          newLength = newLength + 3 & ~3;\\n          var result = new Uint8Array(newLength);\\n          var pos = 0;\\n          for (j = 0, jj = content.length; j < jj; j++) {\\n            result.set(content[j], pos);\\n            pos += content[j].length;\\n          }\\n          table.data = result;\\n          table.length = newLength;\\n        }\\n      }\\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\\n        var ttContext = {\\n          functionsDefined: [],\\n          functionsUsed: [],\\n          functionsStackDeltas: [],\\n          tooComplexToFollowFunctions: false,\\n          hintsValid: true\\n        };\\n        if (fpgm) {\\n          sanitizeTTProgram(fpgm, ttContext);\\n        }\\n        if (prep) {\\n          sanitizeTTProgram(prep, ttContext);\\n        }\\n        if (fpgm) {\\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\\n        }\\n        if (cvt && cvt.length & 1) {\\n          var cvtData = new Uint8Array(cvt.length + 1);\\n          cvtData.set(cvt.data);\\n          cvt.data = cvtData;\\n        }\\n        return ttContext.hintsValid;\\n      }\\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\\n      var header = void 0,\\n          tables = void 0;\\n      if (isTrueTypeCollectionFile(font)) {\\n        var ttcData = readTrueTypeCollectionData(font, this.name);\\n        header = ttcData.header;\\n        tables = ttcData.tables;\\n      } else {\\n        header = readOpenTypeHeader(font);\\n        tables = readTables(font, header.numTables);\\n      }\\n      var cff = void 0,\\n          cffFile = void 0;\\n      var isTrueType = !tables['CFF '];\\n      if (!isTrueType) {\\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\\n          cffFile = new _stream.Stream(tables['CFF '].data);\\n          cff = new CFFFont(cffFile, properties);\\n          adjustWidths(properties);\\n          return this.convert(name, cff, properties);\\n        }\\n        delete tables['glyf'];\\n        delete tables['loca'];\\n        delete tables['fpgm'];\\n        delete tables['prep'];\\n        delete tables['cvt '];\\n        this.isOpenType = true;\\n      } else {\\n        if (!tables['loca']) {\\n          throw new _util.FormatError('Required \\\"loca\\\" table is not found');\\n        }\\n        if (!tables['glyf']) {\\n          (0, _util.warn)('Required \\\"glyf\\\" table is not found -- trying to recover.');\\n          tables['glyf'] = {\\n            tag: 'glyf',\\n            data: new Uint8Array(0)\\n          };\\n        }\\n        this.isOpenType = false;\\n      }\\n      if (!tables['maxp']) {\\n        throw new _util.FormatError('Required \\\"maxp\\\" table is not found');\\n      }\\n      font.pos = (font.start || 0) + tables['maxp'].offset;\\n      var version = font.getInt32();\\n      var numGlyphs = font.getUint16();\\n      var maxFunctionDefs = 0;\\n      var maxSizeOfInstructions = 0;\\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\n        font.pos += 8;\\n        var maxZones = font.getUint16();\\n        if (maxZones > 2) {\\n          tables['maxp'].data[14] = 0;\\n          tables['maxp'].data[15] = 2;\\n        }\\n        font.pos += 4;\\n        maxFunctionDefs = font.getUint16();\\n        font.pos += 6;\\n        maxSizeOfInstructions = font.getUint16();\\n      }\\n      var dupFirstEntry = false;\\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\\\0') {\\n        dupFirstEntry = true;\\n        numGlyphs++;\\n        tables['maxp'].data[4] = numGlyphs >> 8;\\n        tables['maxp'].data[5] = numGlyphs & 255;\\n      }\\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\\n      if (!hintsValid) {\\n        delete tables['fpgm'];\\n        delete tables['prep'];\\n        delete tables['cvt '];\\n      }\\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\\n      if (!tables['head']) {\\n        throw new _util.FormatError('Required \\\"head\\\" table is not found');\\n      }\\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\\n      var missingGlyphs = Object.create(null);\\n      if (isTrueType) {\\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\\n        missingGlyphs = glyphsInfo.missingGlyphs;\\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\\n        }\\n      }\\n      if (!tables['hhea']) {\\n        throw new _util.FormatError('Required \\\"hhea\\\" table is not found');\\n      }\\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\\n        tables['hhea'].data[10] = 0xFF;\\n        tables['hhea'].data[11] = 0xFF;\\n      }\\n      var metricsOverride = {\\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\\n      };\\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\\n      if (tables['post']) {\\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\\n        if (!valid) {\\n          tables['post'] = null;\\n        }\\n      }\\n      var charCodeToGlyphId = [],\\n          charCode;\\n      function hasGlyph(glyphId) {\\n        return !missingGlyphs[glyphId];\\n      }\\n      if (properties.composite) {\\n        var cidToGidMap = properties.cidToGidMap || [];\\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\\n        properties.cMap.forEach(function (charCode, cid) {\\n          if (cid > 0xffff) {\\n            throw new _util.FormatError('Max size of CID is 65,535');\\n          }\\n          var glyphId = -1;\\n          if (isCidToGidMapEmpty) {\\n            glyphId = cid;\\n          } else if (cidToGidMap[cid] !== undefined) {\\n            glyphId = cidToGidMap[cid];\\n          }\\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\\n            charCodeToGlyphId[charCode] = glyphId;\\n          }\\n        });\\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\\n          charCodeToGlyphId[0] = numGlyphs - 1;\\n        }\\n      } else {\\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\\n        var cmapPlatformId = cmapTable.platformId;\\n        var cmapEncodingId = cmapTable.encodingId;\\n        var cmapMappings = cmapTable.mappings;\\n        var cmapMappingsLength = cmapMappings.length;\\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\\n          var baseEncoding = [];\\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\n          }\\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n          for (charCode = 0; charCode < 256; charCode++) {\\n            var glyphName, standardGlyphName;\\n            if (this.differences && charCode in this.differences) {\\n              glyphName = this.differences[charCode];\\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\\n              glyphName = baseEncoding[charCode];\\n            } else {\\n              glyphName = _encodings.StandardEncoding[charCode];\\n            }\\n            if (!glyphName) {\\n              continue;\\n            }\\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\n            var unicodeOrCharCode;\\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\\n            }\\n            var found = false;\\n            for (var i = 0; i < cmapMappingsLength; ++i) {\\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\\n                continue;\\n              }\\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\\n              found = true;\\n              break;\\n            }\\n            if (!found && properties.glyphNames) {\\n              var glyphId = properties.glyphNames.indexOf(glyphName);\\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\\n              }\\n              if (glyphId > 0 && hasGlyph(glyphId)) {\\n                charCodeToGlyphId[charCode] = glyphId;\\n              }\\n            }\\n          }\\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\\n          }\\n        } else {\\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\\n            charCode = cmapMappings[_i2].charCode;\\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\\n              charCode &= 0xFF;\\n            }\\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\\n          }\\n        }\\n      }\\n      if (charCodeToGlyphId.length === 0) {\\n        charCodeToGlyphId[0] = 0;\\n      }\\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\\n      this.toFontChar = newMapping.toFontChar;\\n      tables['cmap'] = {\\n        tag: 'cmap',\\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\\n      };\\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\\n        tables['OS/2'] = {\\n          tag: 'OS/2',\\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\\n        };\\n      }\\n      if (!tables['post']) {\\n        tables['post'] = {\\n          tag: 'post',\\n          data: createPostTable(properties)\\n        };\\n      }\\n      if (!isTrueType) {\\n        try {\\n          cffFile = new _stream.Stream(tables['CFF '].data);\\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\\n          cff = parser.parse();\\n          var compiler = new _cff_parser.CFFCompiler(cff);\\n          tables['CFF '].data = compiler.compile();\\n        } catch (e) {\\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\n        }\\n      }\\n      if (!tables['name']) {\\n        tables['name'] = {\\n          tag: 'name',\\n          data: createNameTable(this.name)\\n        };\\n      } else {\\n        var namePrototype = readNameTable(tables['name']);\\n        tables['name'].data = createNameTable(name, namePrototype);\\n      }\\n      var builder = new OpenTypeFileBuilder(header.version);\\n      for (var tableTag in tables) {\\n        builder.addTable(tableTag, tables[tableTag].data);\\n      }\\n      return builder.toArray();\\n    },\\n    convert: function Font_convert(fontName, font, properties) {\\n      properties.fixedPitch = false;\\n      if (properties.builtInEncoding) {\\n        adjustToUnicode(properties, properties.builtInEncoding);\\n      }\\n      var mapping = font.getGlyphMapping(properties);\\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\\n      this.toFontChar = newMapping.toFontChar;\\n      var numGlyphs = font.numGlyphs;\\n      function getCharCodes(charCodeToGlyphId, glyphId) {\\n        var charCodes = null;\\n        for (var charCode in charCodeToGlyphId) {\\n          if (glyphId === charCodeToGlyphId[charCode]) {\\n            if (!charCodes) {\\n              charCodes = [];\\n            }\\n            charCodes.push(charCode | 0);\\n          }\\n        }\\n        return charCodes;\\n      }\\n      function createCharCode(charCodeToGlyphId, glyphId) {\\n        for (var charCode in charCodeToGlyphId) {\\n          if (glyphId === charCodeToGlyphId[charCode]) {\\n            return charCode | 0;\\n          }\\n        }\\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\\n        return newMapping.nextAvailableFontCharCode++;\\n      }\\n      var seacs = font.seacs;\\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\n        var charset = font.getCharset();\\n        var seacMap = Object.create(null);\\n        for (var glyphId in seacs) {\\n          glyphId |= 0;\\n          var seac = seacs[glyphId];\\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\\n          var baseGlyphId = charset.indexOf(baseGlyphName);\\n          var accentGlyphId = charset.indexOf(accentGlyphName);\\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\\n            continue;\\n          }\\n          var accentOffset = {\\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\\n          };\\n          var charCodes = getCharCodes(mapping, glyphId);\\n          if (!charCodes) {\\n            continue;\\n          }\\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\\n            var charCode = charCodes[i];\\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\\n            seacMap[charCode] = {\\n              baseFontCharCode: baseFontCharCode,\\n              accentFontCharCode: accentFontCharCode,\\n              accentOffset: accentOffset\\n            };\\n          }\\n        }\\n        properties.seacMap = seacMap;\\n      }\\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\n      var builder = new OpenTypeFileBuilder('\\\\x4F\\\\x54\\\\x54\\\\x4F');\\n      builder.addTable('CFF ', font.data);\\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\\n      builder.addTable('head', '\\\\x00\\\\x01\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x10\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x5F\\\\x0F\\\\x3C\\\\xF5' + '\\\\x00\\\\x00' + safeString16(unitsPerEm) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00' + safeString16(properties.descent) + '\\\\x0F\\\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\\\x00\\\\x11' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00');\\n      builder.addTable('hhea', '\\\\x00\\\\x01\\\\x00\\\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\\\x00\\\\x00' + '\\\\xFF\\\\xFF' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + string16(numGlyphs));\\n      builder.addTable('hmtx', function fontFieldsHmtx() {\\n        var charstrings = font.charstrings;\\n        var cffWidths = font.cff ? font.cff.widths : null;\\n        var hmtx = '\\\\x00\\\\x00\\\\x00\\\\x00';\\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\\n          var width = 0;\\n          if (charstrings) {\\n            var charstring = charstrings[i - 1];\\n            width = 'width' in charstring ? charstring.width : 0;\\n          } else if (cffWidths) {\\n            width = Math.ceil(cffWidths[i] || 0);\\n          }\\n          hmtx += string16(width) + string16(0);\\n        }\\n        return hmtx;\\n      }());\\n      builder.addTable('maxp', '\\\\x00\\\\x00\\\\x50\\\\x00' + string16(numGlyphs));\\n      builder.addTable('name', createNameTable(fontName));\\n      builder.addTable('post', createPostTable(properties));\\n      return builder.toArray();\\n    },\\n    get spaceWidth() {\\n      if ('_shadowWidth' in this) {\\n        return this._shadowWidth;\\n      }\\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\\n      var width;\\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\\n        var glyphName = possibleSpaceReplacements[i];\\n        if (glyphName in this.widths) {\\n          width = this.widths[glyphName];\\n          break;\\n        }\\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\\n        var charcode = 0;\\n        if (this.composite) {\\n          if (this.cMap.contains(glyphUnicode)) {\\n            charcode = this.cMap.lookup(glyphUnicode);\\n          }\\n        }\\n        if (!charcode && this.toUnicode) {\\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\\n        }\\n        if (charcode <= 0) {\\n          charcode = glyphUnicode;\\n        }\\n        width = this.widths[charcode];\\n        if (width) {\\n          break;\\n        }\\n      }\\n      width = width || this.defaultWidth;\\n      this._shadowWidth = width;\\n      return width;\\n    },\\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\\n      var fontCharCode, width, operatorListId;\\n      var widthCode = charcode;\\n      if (this.cMap && this.cMap.contains(charcode)) {\\n        widthCode = this.cMap.lookup(charcode);\\n      }\\n      width = this.widths[widthCode];\\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\\n      if (typeof unicode === 'number') {\\n        unicode = String.fromCharCode(unicode);\\n      }\\n      var isInFont = charcode in this.toFontChar;\\n      fontCharCode = this.toFontChar[charcode] || charcode;\\n      if (this.missingFile) {\\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\\n      }\\n      if (this.isType3Font) {\\n        operatorListId = fontCharCode;\\n      }\\n      var accent = null;\\n      if (this.seacMap && this.seacMap[charcode]) {\\n        isInFont = true;\\n        var seac = this.seacMap[charcode];\\n        fontCharCode = seac.baseFontCharCode;\\n        accent = {\\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\\n          offset: seac.accentOffset\\n        };\\n      }\\n      var fontChar = String.fromCharCode(fontCharCode);\\n      var glyph = this.glyphCache[charcode];\\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\\n        this.glyphCache[charcode] = glyph;\\n      }\\n      return glyph;\\n    },\\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\\n      var charsCache = this.charsCache;\\n      var glyphs, glyph, charcode;\\n      if (charsCache) {\\n        glyphs = charsCache[chars];\\n        if (glyphs) {\\n          return glyphs;\\n        }\\n      }\\n      if (!charsCache) {\\n        charsCache = this.charsCache = Object.create(null);\\n      }\\n      glyphs = [];\\n      var charsCacheKey = chars;\\n      var i = 0,\\n          ii;\\n      if (this.cMap) {\\n        var c = Object.create(null);\\n        while (i < chars.length) {\\n          this.cMap.readCharCode(chars, i, c);\\n          charcode = c.charcode;\\n          var length = c.length;\\n          i += length;\\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\\n          glyph = this.charToGlyph(charcode, isSpace);\\n          glyphs.push(glyph);\\n        }\\n      } else {\\n        for (i = 0, ii = chars.length; i < ii; ++i) {\\n          charcode = chars.charCodeAt(i);\\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\\n          glyphs.push(glyph);\\n        }\\n      }\\n      return charsCache[charsCacheKey] = glyphs;\\n    }\\n  };\\n  return Font;\\n}();\\nvar ErrorFont = function ErrorFontClosure() {\\n  function ErrorFont(error) {\\n    this.error = error;\\n    this.loadedName = 'g_font_error';\\n    this.loading = false;\\n  }\\n  ErrorFont.prototype = {\\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\\n      return [];\\n    },\\n    exportData: function ErrorFont_exportData() {\\n      return { error: this.error };\\n    }\\n  };\\n  return ErrorFont;\\n}();\\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\\n  var charCodeToGlyphId = Object.create(null);\\n  var glyphId, charCode, baseEncoding;\\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\n  if (properties.baseEncodingName) {\\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\n      if (glyphId >= 0) {\\n        charCodeToGlyphId[charCode] = glyphId;\\n      } else {\\n        charCodeToGlyphId[charCode] = 0;\\n      }\\n    }\\n  } else if (isSymbolicFont) {\\n    for (charCode in builtInEncoding) {\\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\\n    }\\n  } else {\\n    baseEncoding = _encodings.StandardEncoding;\\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\n      if (glyphId >= 0) {\\n        charCodeToGlyphId[charCode] = glyphId;\\n      } else {\\n        charCodeToGlyphId[charCode] = 0;\\n      }\\n    }\\n  }\\n  var differences = properties.differences,\\n      glyphsUnicodeMap;\\n  if (differences) {\\n    for (charCode in differences) {\\n      var glyphName = differences[charCode];\\n      glyphId = glyphNames.indexOf(glyphName);\\n      if (glyphId === -1) {\\n        if (!glyphsUnicodeMap) {\\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n        }\\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\n        if (standardGlyphName !== glyphName) {\\n          glyphId = glyphNames.indexOf(standardGlyphName);\\n        }\\n      }\\n      if (glyphId >= 0) {\\n        charCodeToGlyphId[charCode] = glyphId;\\n      } else {\\n        charCodeToGlyphId[charCode] = 0;\\n      }\\n    }\\n  }\\n  return charCodeToGlyphId;\\n}\\nvar Type1Font = function Type1FontClosure() {\\n  function findBlock(streamBytes, signature, startIndex) {\\n    var streamBytesLength = streamBytes.length;\\n    var signatureLength = signature.length;\\n    var scanLength = streamBytesLength - signatureLength;\\n    var i = startIndex,\\n        j,\\n        found = false;\\n    while (i < scanLength) {\\n      j = 0;\\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\\n        j++;\\n      }\\n      if (j >= signatureLength) {\\n        i += j;\\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\\n          i++;\\n        }\\n        found = true;\\n        break;\\n      }\\n      i++;\\n    }\\n    return {\\n      found: found,\\n      length: i\\n    };\\n  }\\n  function getHeaderBlock(stream, suggestedLength) {\\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\\n    var streamStartPos = stream.pos;\\n    var headerBytes, headerBytesLength, block;\\n    try {\\n      headerBytes = stream.getBytes(suggestedLength);\\n      headerBytesLength = headerBytes.length;\\n    } catch (ex) {\\n      if (ex instanceof _util.MissingDataException) {\\n        throw ex;\\n      }\\n    }\\n    if (headerBytesLength === suggestedLength) {\\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\\n      if (block.found && block.length === suggestedLength) {\\n        return {\\n          stream: new _stream.Stream(headerBytes),\\n          length: suggestedLength\\n        };\\n      }\\n    }\\n    (0, _util.warn)('Invalid \\\"Length1\\\" property in Type1 font -- trying to recover.');\\n    stream.pos = streamStartPos;\\n    var SCAN_BLOCK_LENGTH = 2048;\\n    var actualLength;\\n    while (true) {\\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\\n      if (block.length === 0) {\\n        break;\\n      }\\n      stream.pos += block.length;\\n      if (block.found) {\\n        actualLength = stream.pos - streamStartPos;\\n        break;\\n      }\\n    }\\n    stream.pos = streamStartPos;\\n    if (actualLength) {\\n      return {\\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\\n        length: actualLength\\n      };\\n    }\\n    (0, _util.warn)('Unable to recover \\\"Length1\\\" property in Type1 font -- using as is.');\\n    return {\\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\\n      length: suggestedLength\\n    };\\n  }\\n  function getEexecBlock(stream, suggestedLength) {\\n    var eexecBytes = stream.getBytes();\\n    return {\\n      stream: new _stream.Stream(eexecBytes),\\n      length: eexecBytes.length\\n    };\\n  }\\n  function Type1Font(name, file, properties) {\\n    var PFB_HEADER_SIZE = 6;\\n    var headerBlockLength = properties.length1;\\n    var eexecBlockLength = properties.length2;\\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\\n    if (pfbHeaderPresent) {\\n      file.skip(PFB_HEADER_SIZE);\\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\n    }\\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\\n    headerBlockParser.extractFontHeader(properties);\\n    if (pfbHeaderPresent) {\\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\n    }\\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\\n    var data = eexecBlockParser.extractFontProgram();\\n    for (var info in data.properties) {\\n      properties[info] = data.properties[info];\\n    }\\n    var charstrings = data.charstrings;\\n    var type2Charstrings = this.getType2Charstrings(charstrings);\\n    var subrs = this.getType2Subrs(data.subrs);\\n    this.charstrings = charstrings;\\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\\n    this.seacs = this.getSeacs(data.charstrings);\\n  }\\n  Type1Font.prototype = {\\n    get numGlyphs() {\\n      return this.charstrings.length + 1;\\n    },\\n    getCharset: function Type1Font_getCharset() {\\n      var charset = ['.notdef'];\\n      var charstrings = this.charstrings;\\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\\n        charset.push(charstrings[glyphId].glyphName);\\n      }\\n      return charset;\\n    },\\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\\n      var charstrings = this.charstrings;\\n      var glyphNames = ['.notdef'],\\n          glyphId;\\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\\n        glyphNames.push(charstrings[glyphId].glyphName);\\n      }\\n      var encoding = properties.builtInEncoding;\\n      if (encoding) {\\n        var builtInEncoding = Object.create(null);\\n        for (var charCode in encoding) {\\n          glyphId = glyphNames.indexOf(encoding[charCode]);\\n          if (glyphId >= 0) {\\n            builtInEncoding[charCode] = glyphId;\\n          }\\n        }\\n      }\\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\\n    },\\n    getSeacs: function Type1Font_getSeacs(charstrings) {\\n      var i, ii;\\n      var seacMap = [];\\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\\n        var charstring = charstrings[i];\\n        if (charstring.seac) {\\n          seacMap[i + 1] = charstring.seac;\\n        }\\n      }\\n      return seacMap;\\n    },\\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\\n      var type2Charstrings = [];\\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\\n        type2Charstrings.push(type1Charstrings[i].charstring);\\n      }\\n      return type2Charstrings;\\n    },\\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\\n      var bias = 0;\\n      var count = type1Subrs.length;\\n      if (count < 1133) {\\n        bias = 107;\\n      } else if (count < 33769) {\\n        bias = 1131;\\n      } else {\\n        bias = 32768;\\n      }\\n      var type2Subrs = [];\\n      var i;\\n      for (i = 0; i < bias; i++) {\\n        type2Subrs.push([0x0B]);\\n      }\\n      for (i = 0; i < count; i++) {\\n        type2Subrs.push(type1Subrs[i]);\\n      }\\n      return type2Subrs;\\n    },\\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\\n      var cff = new _cff_parser.CFF();\\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\\n      cff.names = [name];\\n      var topDict = new _cff_parser.CFFTopDict();\\n      topDict.setByName('version', 391);\\n      topDict.setByName('Notice', 392);\\n      topDict.setByName('FullName', 393);\\n      topDict.setByName('FamilyName', 394);\\n      topDict.setByName('Weight', 395);\\n      topDict.setByName('Encoding', null);\\n      topDict.setByName('FontMatrix', properties.fontMatrix);\\n      topDict.setByName('FontBBox', properties.bbox);\\n      topDict.setByName('charset', null);\\n      topDict.setByName('CharStrings', null);\\n      topDict.setByName('Private', null);\\n      cff.topDict = topDict;\\n      var strings = new _cff_parser.CFFStrings();\\n      strings.add('Version 0.11');\\n      strings.add('See original notice');\\n      strings.add(name);\\n      strings.add(name);\\n      strings.add('Medium');\\n      cff.strings = strings;\\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\\n      var count = glyphs.length;\\n      var charsetArray = [0];\\n      var i, ii;\\n      for (i = 0; i < count; i++) {\\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\\n        if (index === -1) {\\n          index = 0;\\n        }\\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\\n      }\\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\\n      var charStringsIndex = new _cff_parser.CFFIndex();\\n      charStringsIndex.add([0x8B, 0x0E]);\\n      for (i = 0; i < count; i++) {\\n        var glyph = glyphs[i];\\n        if (glyph.length === 0) {\\n          charStringsIndex.add([0x8B, 0x0E]);\\n          continue;\\n        }\\n        charStringsIndex.add(glyph);\\n      }\\n      cff.charStrings = charStringsIndex;\\n      var privateDict = new _cff_parser.CFFPrivateDict();\\n      privateDict.setByName('Subrs', null);\\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\\n      for (i = 0, ii = fields.length; i < ii; i++) {\\n        var field = fields[i];\\n        if (!(field in properties.privateData)) {\\n          continue;\\n        }\\n        var value = properties.privateData[field];\\n        if (Array.isArray(value)) {\\n          for (var j = value.length - 1; j > 0; j--) {\\n            value[j] -= value[j - 1];\\n          }\\n        }\\n        privateDict.setByName(field, value);\\n      }\\n      cff.topDict.privateDict = privateDict;\\n      var subrIndex = new _cff_parser.CFFIndex();\\n      for (i = 0, ii = subrs.length; i < ii; i++) {\\n        subrIndex.add(subrs[i]);\\n      }\\n      privateDict.subrsIndex = subrIndex;\\n      var compiler = new _cff_parser.CFFCompiler(cff);\\n      return compiler.compile();\\n    }\\n  };\\n  return Type1Font;\\n}();\\nvar CFFFont = function CFFFontClosure() {\\n  function CFFFont(file, properties) {\\n    this.properties = properties;\\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\\n    this.cff = parser.parse();\\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\\n    this.seacs = this.cff.seacs;\\n    try {\\n      this.data = compiler.compile();\\n    } catch (e) {\\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\n      this.data = file;\\n    }\\n  }\\n  CFFFont.prototype = {\\n    get numGlyphs() {\\n      return this.cff.charStrings.count;\\n    },\\n    getCharset: function CFFFont_getCharset() {\\n      return this.cff.charset.charset;\\n    },\\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\\n      var cff = this.cff;\\n      var properties = this.properties;\\n      var charsets = cff.charset.charset;\\n      var charCodeToGlyphId;\\n      var glyphId;\\n      if (properties.composite) {\\n        charCodeToGlyphId = Object.create(null);\\n        if (cff.isCIDFont) {\\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\\n            var cid = charsets[glyphId];\\n            var charCode = properties.cMap.charCodeOf(cid);\\n            charCodeToGlyphId[charCode] = glyphId;\\n          }\\n        } else {\\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\\n            charCodeToGlyphId[glyphId] = glyphId;\\n          }\\n        }\\n        return charCodeToGlyphId;\\n      }\\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\\n      return charCodeToGlyphId;\\n    }\\n  };\\n  return CFFFont;\\n}();\\n(function checkSeacSupport() {\\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\\n  }\\n})();\\n(function checkChromeWindows() {\\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\\n  }\\n})();\\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\\nexports.ErrorFont = ErrorFont;\\nexports.Font = Font;\\nexports.FontFlags = FontFlags;\\nexports.ToUnicodeMap = ToUnicodeMap;\\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\\nexports.ProblematicCharRanges = ProblematicCharRanges;\\nexports.getFontType = getFontType;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _ps_parser = require('./ps_parser');\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar IsEvalSupportedCached = {\\n  get value() {\\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\\n  }\\n};\\n\\nvar PDFFunctionFactory = function () {\\n  function PDFFunctionFactory(_ref) {\\n    var xref = _ref.xref,\\n        _ref$isEvalSupported = _ref.isEvalSupported,\\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\\n\\n    _classCallCheck(this, PDFFunctionFactory);\\n\\n    this.xref = xref;\\n    this.isEvalSupported = isEvalSupported !== false;\\n  }\\n\\n  _createClass(PDFFunctionFactory, [{\\n    key: 'create',\\n    value: function create(fn) {\\n      return PDFFunction.parse({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        fn: fn\\n      });\\n    }\\n  }, {\\n    key: 'createFromArray',\\n    value: function createFromArray(fnObj) {\\n      return PDFFunction.parseArray({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        fnObj: fnObj\\n      });\\n    }\\n  }, {\\n    key: 'createFromIR',\\n    value: function createFromIR(IR) {\\n      return PDFFunction.fromIR({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        IR: IR\\n      });\\n    }\\n  }, {\\n    key: 'createIR',\\n    value: function createIR(fn) {\\n      return PDFFunction.getIR({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        fn: fn\\n      });\\n    }\\n  }]);\\n\\n  return PDFFunctionFactory;\\n}();\\n\\nvar PDFFunction = function PDFFunctionClosure() {\\n  var CONSTRUCT_SAMPLED = 0;\\n  var CONSTRUCT_INTERPOLATED = 2;\\n  var CONSTRUCT_STICHED = 3;\\n  var CONSTRUCT_POSTSCRIPT = 4;\\n  return {\\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\\n      var i, ii;\\n      var length = 1;\\n      for (i = 0, ii = size.length; i < ii; i++) {\\n        length *= size[i];\\n      }\\n      length *= outputSize;\\n      var array = new Array(length);\\n      var codeSize = 0;\\n      var codeBuf = 0;\\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\\n      var strIdx = 0;\\n      for (i = 0; i < length; i++) {\\n        while (codeSize < bps) {\\n          codeBuf <<= 8;\\n          codeBuf |= strBytes[strIdx++];\\n          codeSize += 8;\\n        }\\n        codeSize -= bps;\\n        array[i] = (codeBuf >> codeSize) * sampleMul;\\n        codeBuf &= (1 << codeSize) - 1;\\n      }\\n      return array;\\n    },\\n    getIR: function getIR(_ref2) {\\n      var xref = _ref2.xref,\\n          isEvalSupported = _ref2.isEvalSupported,\\n          fn = _ref2.fn;\\n\\n      var dict = fn.dict;\\n      if (!dict) {\\n        dict = fn;\\n      }\\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\\n      var typeNum = dict.get('FunctionType');\\n      var typeFn = types[typeNum];\\n      if (!typeFn) {\\n        throw new _util.FormatError('Unknown type of function');\\n      }\\n      return typeFn.call(this, {\\n        xref: xref,\\n        isEvalSupported: isEvalSupported,\\n        fn: fn,\\n        dict: dict\\n      });\\n    },\\n    fromIR: function fromIR(_ref3) {\\n      var xref = _ref3.xref,\\n          isEvalSupported = _ref3.isEvalSupported,\\n          IR = _ref3.IR;\\n\\n      var type = IR[0];\\n      switch (type) {\\n        case CONSTRUCT_SAMPLED:\\n          return this.constructSampledFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n        case CONSTRUCT_INTERPOLATED:\\n          return this.constructInterpolatedFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n        case CONSTRUCT_STICHED:\\n          return this.constructStichedFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n        default:\\n          return this.constructPostScriptFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n      }\\n    },\\n    parse: function parse(_ref4) {\\n      var xref = _ref4.xref,\\n          isEvalSupported = _ref4.isEvalSupported,\\n          fn = _ref4.fn;\\n\\n      var IR = this.getIR({\\n        xref: xref,\\n        isEvalSupported: isEvalSupported,\\n        fn: fn\\n      });\\n      return this.fromIR({\\n        xref: xref,\\n        isEvalSupported: isEvalSupported,\\n        IR: IR\\n      });\\n    },\\n    parseArray: function parseArray(_ref5) {\\n      var xref = _ref5.xref,\\n          isEvalSupported = _ref5.isEvalSupported,\\n          fnObj = _ref5.fnObj;\\n\\n      if (!Array.isArray(fnObj)) {\\n        return this.parse({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          fn: fnObj\\n        });\\n      }\\n      var fnArray = [];\\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\\n        fnArray.push(this.parse({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          fn: xref.fetchIfRef(fnObj[j])\\n        }));\\n      }\\n      return function (src, srcOffset, dest, destOffset) {\\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\\n          fnArray[i](src, srcOffset, dest, destOffset + i);\\n        }\\n      };\\n    },\\n    constructSampled: function constructSampled(_ref6) {\\n      var xref = _ref6.xref,\\n          isEvalSupported = _ref6.isEvalSupported,\\n          fn = _ref6.fn,\\n          dict = _ref6.dict;\\n\\n      function toMultiArray(arr) {\\n        var inputLength = arr.length;\\n        var out = [];\\n        var index = 0;\\n        for (var i = 0; i < inputLength; i += 2) {\\n          out[index] = [arr[i], arr[i + 1]];\\n          ++index;\\n        }\\n        return out;\\n      }\\n      var domain = dict.getArray('Domain');\\n      var range = dict.getArray('Range');\\n      if (!domain || !range) {\\n        throw new _util.FormatError('No domain or range');\\n      }\\n      var inputSize = domain.length / 2;\\n      var outputSize = range.length / 2;\\n      domain = toMultiArray(domain);\\n      range = toMultiArray(range);\\n      var size = dict.get('Size');\\n      var bps = dict.get('BitsPerSample');\\n      var order = dict.get('Order') || 1;\\n      if (order !== 1) {\\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\\n      }\\n      var encode = dict.getArray('Encode');\\n      if (!encode) {\\n        encode = [];\\n        for (var i = 0; i < inputSize; ++i) {\\n          encode.push(0);\\n          encode.push(size[i] - 1);\\n        }\\n      }\\n      encode = toMultiArray(encode);\\n      var decode = dict.getArray('Decode');\\n      if (!decode) {\\n        decode = range;\\n      } else {\\n        decode = toMultiArray(decode);\\n      }\\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\\n    },\\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\\n      var xref = _ref7.xref,\\n          isEvalSupported = _ref7.isEvalSupported,\\n          IR = _ref7.IR;\\n\\n      function interpolate(x, xmin, xmax, ymin, ymax) {\\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\\n      }\\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\\n        var m = IR[1];\\n        var domain = IR[2];\\n        var encode = IR[3];\\n        var decode = IR[4];\\n        var samples = IR[5];\\n        var size = IR[6];\\n        var n = IR[7];\\n        var range = IR[9];\\n        var cubeVertices = 1 << m;\\n        var cubeN = new Float64Array(cubeVertices);\\n        var cubeVertex = new Uint32Array(cubeVertices);\\n        var i, j;\\n        for (j = 0; j < cubeVertices; j++) {\\n          cubeN[j] = 1;\\n        }\\n        var k = n,\\n            pos = 1;\\n        for (i = 0; i < m; ++i) {\\n          var domain_2i = domain[i][0];\\n          var domain_2i_1 = domain[i][1];\\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\\n          var size_i = size[i];\\n          e = Math.min(Math.max(e, 0), size_i - 1);\\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\\n          var n0 = e0 + 1 - e;\\n          var n1 = e - e0;\\n          var offset0 = e0 * k;\\n          var offset1 = offset0 + k;\\n          for (j = 0; j < cubeVertices; j++) {\\n            if (j & pos) {\\n              cubeN[j] *= n1;\\n              cubeVertex[j] += offset1;\\n            } else {\\n              cubeN[j] *= n0;\\n              cubeVertex[j] += offset0;\\n            }\\n          }\\n          k *= size_i;\\n          pos <<= 1;\\n        }\\n        for (j = 0; j < n; ++j) {\\n          var rj = 0;\\n          for (i = 0; i < cubeVertices; i++) {\\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\\n          }\\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\\n        }\\n      };\\n    },\\n    constructInterpolated: function constructInterpolated(_ref8) {\\n      var xref = _ref8.xref,\\n          isEvalSupported = _ref8.isEvalSupported,\\n          fn = _ref8.fn,\\n          dict = _ref8.dict;\\n\\n      var c0 = dict.getArray('C0') || [0];\\n      var c1 = dict.getArray('C1') || [1];\\n      var n = dict.get('N');\\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\\n      }\\n      var length = c0.length;\\n      var diff = [];\\n      for (var i = 0; i < length; ++i) {\\n        diff.push(c1[i] - c0[i]);\\n      }\\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\\n    },\\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\\n      var xref = _ref9.xref,\\n          isEvalSupported = _ref9.isEvalSupported,\\n          IR = _ref9.IR;\\n\\n      var c0 = IR[1];\\n      var diff = IR[2];\\n      var n = IR[3];\\n      var length = diff.length;\\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\\n        for (var j = 0; j < length; ++j) {\\n          dest[destOffset + j] = c0[j] + x * diff[j];\\n        }\\n      };\\n    },\\n    constructStiched: function constructStiched(_ref10) {\\n      var xref = _ref10.xref,\\n          isEvalSupported = _ref10.isEvalSupported,\\n          fn = _ref10.fn,\\n          dict = _ref10.dict;\\n\\n      var domain = dict.getArray('Domain');\\n      if (!domain) {\\n        throw new _util.FormatError('No domain');\\n      }\\n      var inputSize = domain.length / 2;\\n      if (inputSize !== 1) {\\n        throw new _util.FormatError('Bad domain for stiched function');\\n      }\\n      var fnRefs = dict.get('Functions');\\n      var fns = [];\\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\\n        fns.push(this.getIR({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          fn: xref.fetchIfRef(fnRefs[i])\\n        }));\\n      }\\n      var bounds = dict.getArray('Bounds');\\n      var encode = dict.getArray('Encode');\\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\\n    },\\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\\n      var xref = _ref11.xref,\\n          isEvalSupported = _ref11.isEvalSupported,\\n          IR = _ref11.IR;\\n\\n      var domain = IR[1];\\n      var bounds = IR[2];\\n      var encode = IR[3];\\n      var fnsIR = IR[4];\\n      var fns = [];\\n      var tmpBuf = new Float32Array(1);\\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\\n        fns.push(this.fromIR({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          IR: fnsIR[i]\\n        }));\\n      }\\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\\n        var clip = function constructStichedFromIRClip(v, min, max) {\\n          if (v > max) {\\n            v = max;\\n          } else if (v < min) {\\n            v = min;\\n          }\\n          return v;\\n        };\\n        var v = clip(src[srcOffset], domain[0], domain[1]);\\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\\n          if (v < bounds[i]) {\\n            break;\\n          }\\n        }\\n        var dmin = domain[0];\\n        if (i > 0) {\\n          dmin = bounds[i - 1];\\n        }\\n        var dmax = domain[1];\\n        if (i < bounds.length) {\\n          dmax = bounds[i];\\n        }\\n        var rmin = encode[2 * i];\\n        var rmax = encode[2 * i + 1];\\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\\n        fns[i](tmpBuf, 0, dest, destOffset);\\n      };\\n    },\\n    constructPostScript: function constructPostScript(_ref12) {\\n      var xref = _ref12.xref,\\n          isEvalSupported = _ref12.isEvalSupported,\\n          fn = _ref12.fn,\\n          dict = _ref12.dict;\\n\\n      var domain = dict.getArray('Domain');\\n      var range = dict.getArray('Range');\\n      if (!domain) {\\n        throw new _util.FormatError('No domain.');\\n      }\\n      if (!range) {\\n        throw new _util.FormatError('No range.');\\n      }\\n      var lexer = new _ps_parser.PostScriptLexer(fn);\\n      var parser = new _ps_parser.PostScriptParser(lexer);\\n      var code = parser.parse();\\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\\n    },\\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\\n      var xref = _ref13.xref,\\n          isEvalSupported = _ref13.isEvalSupported,\\n          IR = _ref13.IR;\\n\\n      var domain = IR[1];\\n      var range = IR[2];\\n      var code = IR[3];\\n      if (isEvalSupported && IsEvalSupportedCached.value) {\\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\\n        if (compiled) {\\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\\n        }\\n      }\\n      (0, _util.info)('Unable to compile PS function');\\n      var numOutputs = range.length >> 1;\\n      var numInputs = domain.length >> 1;\\n      var evaluator = new PostScriptEvaluator(code);\\n      var cache = Object.create(null);\\n      var MAX_CACHE_SIZE = 2048 * 4;\\n      var cache_available = MAX_CACHE_SIZE;\\n      var tmpBuf = new Float32Array(numInputs);\\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\\n        var i, value;\\n        var key = '';\\n        var input = tmpBuf;\\n        for (i = 0; i < numInputs; i++) {\\n          value = src[srcOffset + i];\\n          input[i] = value;\\n          key += value + '_';\\n        }\\n        var cachedValue = cache[key];\\n        if (cachedValue !== undefined) {\\n          dest.set(cachedValue, destOffset);\\n          return;\\n        }\\n        var output = new Float32Array(numOutputs);\\n        var stack = evaluator.execute(input);\\n        var stackIndex = stack.length - numOutputs;\\n        for (i = 0; i < numOutputs; i++) {\\n          value = stack[stackIndex + i];\\n          var bound = range[i * 2];\\n          if (value < bound) {\\n            value = bound;\\n          } else {\\n            bound = range[i * 2 + 1];\\n            if (value > bound) {\\n              value = bound;\\n            }\\n          }\\n          output[i] = value;\\n        }\\n        if (cache_available > 0) {\\n          cache_available--;\\n          cache[key] = output;\\n        }\\n        dest.set(output, destOffset);\\n      };\\n    }\\n  };\\n}();\\nfunction isPDFFunction(v) {\\n  var fnDict;\\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\\n    return false;\\n  } else if ((0, _primitives.isDict)(v)) {\\n    fnDict = v;\\n  } else if ((0, _primitives.isStream)(v)) {\\n    fnDict = v.dict;\\n  } else {\\n    return false;\\n  }\\n  return fnDict.has('FunctionType');\\n}\\nvar PostScriptStack = function PostScriptStackClosure() {\\n  var MAX_STACK_SIZE = 100;\\n  function PostScriptStack(initialStack) {\\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\\n  }\\n  PostScriptStack.prototype = {\\n    push: function PostScriptStack_push(value) {\\n      if (this.stack.length >= MAX_STACK_SIZE) {\\n        throw new Error('PostScript function stack overflow.');\\n      }\\n      this.stack.push(value);\\n    },\\n    pop: function PostScriptStack_pop() {\\n      if (this.stack.length <= 0) {\\n        throw new Error('PostScript function stack underflow.');\\n      }\\n      return this.stack.pop();\\n    },\\n    copy: function PostScriptStack_copy(n) {\\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\\n        throw new Error('PostScript function stack overflow.');\\n      }\\n      var stack = this.stack;\\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\\n        stack.push(stack[i]);\\n      }\\n    },\\n    index: function PostScriptStack_index(n) {\\n      this.push(this.stack[this.stack.length - n - 1]);\\n    },\\n    roll: function PostScriptStack_roll(n, p) {\\n      var stack = this.stack;\\n      var l = stack.length - n;\\n      var r = stack.length - 1,\\n          c = l + (p - Math.floor(p / n) * n),\\n          i,\\n          j,\\n          t;\\n      for (i = l, j = r; i < j; i++, j--) {\\n        t = stack[i];\\n        stack[i] = stack[j];\\n        stack[j] = t;\\n      }\\n      for (i = l, j = c - 1; i < j; i++, j--) {\\n        t = stack[i];\\n        stack[i] = stack[j];\\n        stack[j] = t;\\n      }\\n      for (i = c, j = r; i < j; i++, j--) {\\n        t = stack[i];\\n        stack[i] = stack[j];\\n        stack[j] = t;\\n      }\\n    }\\n  };\\n  return PostScriptStack;\\n}();\\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\\n  function PostScriptEvaluator(operators) {\\n    this.operators = operators;\\n  }\\n  PostScriptEvaluator.prototype = {\\n    execute: function PostScriptEvaluator_execute(initialStack) {\\n      var stack = new PostScriptStack(initialStack);\\n      var counter = 0;\\n      var operators = this.operators;\\n      var length = operators.length;\\n      var operator, a, b;\\n      while (counter < length) {\\n        operator = operators[counter++];\\n        if (typeof operator === 'number') {\\n          stack.push(operator);\\n          continue;\\n        }\\n        switch (operator) {\\n          case 'jz':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if (!a) {\\n              counter = b;\\n            }\\n            break;\\n          case 'j':\\n            a = stack.pop();\\n            counter = a;\\n            break;\\n          case 'abs':\\n            a = stack.pop();\\n            stack.push(Math.abs(a));\\n            break;\\n          case 'add':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a + b);\\n            break;\\n          case 'and':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n              stack.push(a && b);\\n            } else {\\n              stack.push(a & b);\\n            }\\n            break;\\n          case 'atan':\\n            a = stack.pop();\\n            stack.push(Math.atan(a));\\n            break;\\n          case 'bitshift':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if (a > 0) {\\n              stack.push(a << b);\\n            } else {\\n              stack.push(a >> b);\\n            }\\n            break;\\n          case 'ceiling':\\n            a = stack.pop();\\n            stack.push(Math.ceil(a));\\n            break;\\n          case 'copy':\\n            a = stack.pop();\\n            stack.copy(a);\\n            break;\\n          case 'cos':\\n            a = stack.pop();\\n            stack.push(Math.cos(a));\\n            break;\\n          case 'cvi':\\n            a = stack.pop() | 0;\\n            stack.push(a);\\n            break;\\n          case 'cvr':\\n            break;\\n          case 'div':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a / b);\\n            break;\\n          case 'dup':\\n            stack.copy(1);\\n            break;\\n          case 'eq':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a === b);\\n            break;\\n          case 'exch':\\n            stack.roll(2, 1);\\n            break;\\n          case 'exp':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(Math.pow(a, b));\\n            break;\\n          case 'false':\\n            stack.push(false);\\n            break;\\n          case 'floor':\\n            a = stack.pop();\\n            stack.push(Math.floor(a));\\n            break;\\n          case 'ge':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a >= b);\\n            break;\\n          case 'gt':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a > b);\\n            break;\\n          case 'idiv':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a / b | 0);\\n            break;\\n          case 'index':\\n            a = stack.pop();\\n            stack.index(a);\\n            break;\\n          case 'le':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a <= b);\\n            break;\\n          case 'ln':\\n            a = stack.pop();\\n            stack.push(Math.log(a));\\n            break;\\n          case 'log':\\n            a = stack.pop();\\n            stack.push(Math.log(a) / Math.LN10);\\n            break;\\n          case 'lt':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a < b);\\n            break;\\n          case 'mod':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a % b);\\n            break;\\n          case 'mul':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a * b);\\n            break;\\n          case 'ne':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a !== b);\\n            break;\\n          case 'neg':\\n            a = stack.pop();\\n            stack.push(-a);\\n            break;\\n          case 'not':\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a)) {\\n              stack.push(!a);\\n            } else {\\n              stack.push(~a);\\n            }\\n            break;\\n          case 'or':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n              stack.push(a || b);\\n            } else {\\n              stack.push(a | b);\\n            }\\n            break;\\n          case 'pop':\\n            stack.pop();\\n            break;\\n          case 'roll':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.roll(a, b);\\n            break;\\n          case 'round':\\n            a = stack.pop();\\n            stack.push(Math.round(a));\\n            break;\\n          case 'sin':\\n            a = stack.pop();\\n            stack.push(Math.sin(a));\\n            break;\\n          case 'sqrt':\\n            a = stack.pop();\\n            stack.push(Math.sqrt(a));\\n            break;\\n          case 'sub':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a - b);\\n            break;\\n          case 'true':\\n            stack.push(true);\\n            break;\\n          case 'truncate':\\n            a = stack.pop();\\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\\n            stack.push(a);\\n            break;\\n          case 'xor':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n              stack.push(a !== b);\\n            } else {\\n              stack.push(a ^ b);\\n            }\\n            break;\\n          default:\\n            throw new _util.FormatError('Unknown operator ' + operator);\\n        }\\n      }\\n      return stack.stack;\\n    }\\n  };\\n  return PostScriptEvaluator;\\n}();\\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\\n  function AstNode(type) {\\n    this.type = type;\\n  }\\n  AstNode.prototype.visit = function (visitor) {\\n    (0, _util.unreachable)('abstract method');\\n  };\\n  function AstArgument(index, min, max) {\\n    AstNode.call(this, 'args');\\n    this.index = index;\\n    this.min = min;\\n    this.max = max;\\n  }\\n  AstArgument.prototype = Object.create(AstNode.prototype);\\n  AstArgument.prototype.visit = function (visitor) {\\n    visitor.visitArgument(this);\\n  };\\n  function AstLiteral(number) {\\n    AstNode.call(this, 'literal');\\n    this.number = number;\\n    this.min = number;\\n    this.max = number;\\n  }\\n  AstLiteral.prototype = Object.create(AstNode.prototype);\\n  AstLiteral.prototype.visit = function (visitor) {\\n    visitor.visitLiteral(this);\\n  };\\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\\n    AstNode.call(this, 'binary');\\n    this.op = op;\\n    this.arg1 = arg1;\\n    this.arg2 = arg2;\\n    this.min = min;\\n    this.max = max;\\n  }\\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\\n  AstBinaryOperation.prototype.visit = function (visitor) {\\n    visitor.visitBinaryOperation(this);\\n  };\\n  function AstMin(arg, max) {\\n    AstNode.call(this, 'max');\\n    this.arg = arg;\\n    this.min = arg.min;\\n    this.max = max;\\n  }\\n  AstMin.prototype = Object.create(AstNode.prototype);\\n  AstMin.prototype.visit = function (visitor) {\\n    visitor.visitMin(this);\\n  };\\n  function AstVariable(index, min, max) {\\n    AstNode.call(this, 'var');\\n    this.index = index;\\n    this.min = min;\\n    this.max = max;\\n  }\\n  AstVariable.prototype = Object.create(AstNode.prototype);\\n  AstVariable.prototype.visit = function (visitor) {\\n    visitor.visitVariable(this);\\n  };\\n  function AstVariableDefinition(variable, arg) {\\n    AstNode.call(this, 'definition');\\n    this.variable = variable;\\n    this.arg = arg;\\n  }\\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\\n  AstVariableDefinition.prototype.visit = function (visitor) {\\n    visitor.visitVariableDefinition(this);\\n  };\\n  function ExpressionBuilderVisitor() {\\n    this.parts = [];\\n  }\\n  ExpressionBuilderVisitor.prototype = {\\n    visitArgument: function visitArgument(arg) {\\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\\n    },\\n    visitVariable: function visitVariable(variable) {\\n      this.parts.push('v', variable.index);\\n    },\\n    visitLiteral: function visitLiteral(literal) {\\n      this.parts.push(literal.number);\\n    },\\n    visitBinaryOperation: function visitBinaryOperation(operation) {\\n      this.parts.push('(');\\n      operation.arg1.visit(this);\\n      this.parts.push(' ', operation.op, ' ');\\n      operation.arg2.visit(this);\\n      this.parts.push(')');\\n    },\\n    visitVariableDefinition: function visitVariableDefinition(definition) {\\n      this.parts.push('var ');\\n      definition.variable.visit(this);\\n      this.parts.push(' = ');\\n      definition.arg.visit(this);\\n      this.parts.push(';');\\n    },\\n    visitMin: function visitMin(max) {\\n      this.parts.push('Math.min(');\\n      max.arg.visit(this);\\n      this.parts.push(', ', max.max, ')');\\n    },\\n    toString: function toString() {\\n      return this.parts.join('');\\n    }\\n  };\\n  function buildAddOperation(num1, num2) {\\n    if (num2.type === 'literal' && num2.number === 0) {\\n      return num1;\\n    }\\n    if (num1.type === 'literal' && num1.number === 0) {\\n      return num2;\\n    }\\n    if (num2.type === 'literal' && num1.type === 'literal') {\\n      return new AstLiteral(num1.number + num2.number);\\n    }\\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\\n  }\\n  function buildMulOperation(num1, num2) {\\n    if (num2.type === 'literal') {\\n      if (num2.number === 0) {\\n        return new AstLiteral(0);\\n      } else if (num2.number === 1) {\\n        return num1;\\n      } else if (num1.type === 'literal') {\\n        return new AstLiteral(num1.number * num2.number);\\n      }\\n    }\\n    if (num1.type === 'literal') {\\n      if (num1.number === 0) {\\n        return new AstLiteral(0);\\n      } else if (num1.number === 1) {\\n        return num2;\\n      }\\n    }\\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\n    return new AstBinaryOperation('*', num1, num2, min, max);\\n  }\\n  function buildSubOperation(num1, num2) {\\n    if (num2.type === 'literal') {\\n      if (num2.number === 0) {\\n        return num1;\\n      } else if (num1.type === 'literal') {\\n        return new AstLiteral(num1.number - num2.number);\\n      }\\n    }\\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\\n      return num2.arg2;\\n    }\\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\\n  }\\n  function buildMinOperation(num1, max) {\\n    if (num1.min >= max) {\\n      return new AstLiteral(max);\\n    } else if (num1.max <= max) {\\n      return num1;\\n    }\\n    return new AstMin(num1, max);\\n  }\\n  function PostScriptCompiler() {}\\n  PostScriptCompiler.prototype = {\\n    compile: function PostScriptCompiler_compile(code, domain, range) {\\n      var stack = [];\\n      var i, ii;\\n      var instructions = [];\\n      var inputSize = domain.length >> 1,\\n          outputSize = range.length >> 1;\\n      var lastRegister = 0;\\n      var n, j;\\n      var num1, num2, ast1, ast2, tmpVar, item;\\n      for (i = 0; i < inputSize; i++) {\\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\\n      }\\n      for (i = 0, ii = code.length; i < ii; i++) {\\n        item = code[i];\\n        if (typeof item === 'number') {\\n          stack.push(new AstLiteral(item));\\n          continue;\\n        }\\n        switch (item) {\\n          case 'add':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            stack.push(buildAddOperation(num1, num2));\\n            break;\\n          case 'cvr':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            break;\\n          case 'mul':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            stack.push(buildMulOperation(num1, num2));\\n            break;\\n          case 'sub':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            stack.push(buildSubOperation(num1, num2));\\n            break;\\n          case 'exch':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            ast1 = stack.pop();\\n            ast2 = stack.pop();\\n            stack.push(ast1, ast2);\\n            break;\\n          case 'pop':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            stack.pop();\\n            break;\\n          case 'index':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            num1 = stack.pop();\\n            if (num1.type !== 'literal') {\\n              return null;\\n            }\\n            n = num1.number;\\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\\n              return null;\\n            }\\n            ast1 = stack[stack.length - n - 1];\\n            if (ast1.type === 'literal' || ast1.type === 'var') {\\n              stack.push(ast1);\\n              break;\\n            }\\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\n            stack[stack.length - n - 1] = tmpVar;\\n            stack.push(tmpVar);\\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\\n            break;\\n          case 'dup':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\\n              num1 = stack.pop();\\n              stack.push(buildMinOperation(num1, code[i + 1]));\\n              i += 6;\\n              break;\\n            }\\n            ast1 = stack[stack.length - 1];\\n            if (ast1.type === 'literal' || ast1.type === 'var') {\\n              stack.push(ast1);\\n              break;\\n            }\\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\n            stack[stack.length - 1] = tmpVar;\\n            stack.push(tmpVar);\\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\\n            break;\\n          case 'roll':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\\n              return null;\\n            }\\n            j = num2.number;\\n            n = num1.number;\\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\\n              return null;\\n            }\\n            j = (j % n + n) % n;\\n            if (j === 0) {\\n              break;\\n            }\\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\\n            break;\\n          default:\\n            return null;\\n        }\\n      }\\n      if (stack.length !== outputSize) {\\n        return null;\\n      }\\n      var result = [];\\n      instructions.forEach(function (instruction) {\\n        var statementBuilder = new ExpressionBuilderVisitor();\\n        instruction.visit(statementBuilder);\\n        result.push(statementBuilder.toString());\\n      });\\n      stack.forEach(function (expr, i) {\\n        var statementBuilder = new ExpressionBuilderVisitor();\\n        expr.visit(statementBuilder);\\n        var min = range[i * 2],\\n            max = range[i * 2 + 1];\\n        var out = [statementBuilder.toString()];\\n        if (min > expr.min) {\\n          out.unshift('Math.max(', min, ', ');\\n          out.push(')');\\n        }\\n        if (max < expr.max) {\\n          out.unshift('Math.min(', max, ', ');\\n          out.push(')');\\n        }\\n        out.unshift('dest[destOffset + ', i, '] = ');\\n        out.push(';');\\n        result.push(out.join(''));\\n      });\\n      return result.join('\\\\n');\\n    }\\n  };\\n  return PostScriptCompiler;\\n}();\\nexports.isPDFFunction = isPDFFunction;\\nexports.PDFFunctionFactory = PDFFunctionFactory;\\nexports.PostScriptEvaluator = PostScriptEvaluator;\\nexports.PostScriptCompiler = PostScriptCompiler;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\\n  t['A'] = 0x0041;\\n  t['AE'] = 0x00C6;\\n  t['AEacute'] = 0x01FC;\\n  t['AEmacron'] = 0x01E2;\\n  t['AEsmall'] = 0xF7E6;\\n  t['Aacute'] = 0x00C1;\\n  t['Aacutesmall'] = 0xF7E1;\\n  t['Abreve'] = 0x0102;\\n  t['Abreveacute'] = 0x1EAE;\\n  t['Abrevecyrillic'] = 0x04D0;\\n  t['Abrevedotbelow'] = 0x1EB6;\\n  t['Abrevegrave'] = 0x1EB0;\\n  t['Abrevehookabove'] = 0x1EB2;\\n  t['Abrevetilde'] = 0x1EB4;\\n  t['Acaron'] = 0x01CD;\\n  t['Acircle'] = 0x24B6;\\n  t['Acircumflex'] = 0x00C2;\\n  t['Acircumflexacute'] = 0x1EA4;\\n  t['Acircumflexdotbelow'] = 0x1EAC;\\n  t['Acircumflexgrave'] = 0x1EA6;\\n  t['Acircumflexhookabove'] = 0x1EA8;\\n  t['Acircumflexsmall'] = 0xF7E2;\\n  t['Acircumflextilde'] = 0x1EAA;\\n  t['Acute'] = 0xF6C9;\\n  t['Acutesmall'] = 0xF7B4;\\n  t['Acyrillic'] = 0x0410;\\n  t['Adblgrave'] = 0x0200;\\n  t['Adieresis'] = 0x00C4;\\n  t['Adieresiscyrillic'] = 0x04D2;\\n  t['Adieresismacron'] = 0x01DE;\\n  t['Adieresissmall'] = 0xF7E4;\\n  t['Adotbelow'] = 0x1EA0;\\n  t['Adotmacron'] = 0x01E0;\\n  t['Agrave'] = 0x00C0;\\n  t['Agravesmall'] = 0xF7E0;\\n  t['Ahookabove'] = 0x1EA2;\\n  t['Aiecyrillic'] = 0x04D4;\\n  t['Ainvertedbreve'] = 0x0202;\\n  t['Alpha'] = 0x0391;\\n  t['Alphatonos'] = 0x0386;\\n  t['Amacron'] = 0x0100;\\n  t['Amonospace'] = 0xFF21;\\n  t['Aogonek'] = 0x0104;\\n  t['Aring'] = 0x00C5;\\n  t['Aringacute'] = 0x01FA;\\n  t['Aringbelow'] = 0x1E00;\\n  t['Aringsmall'] = 0xF7E5;\\n  t['Asmall'] = 0xF761;\\n  t['Atilde'] = 0x00C3;\\n  t['Atildesmall'] = 0xF7E3;\\n  t['Aybarmenian'] = 0x0531;\\n  t['B'] = 0x0042;\\n  t['Bcircle'] = 0x24B7;\\n  t['Bdotaccent'] = 0x1E02;\\n  t['Bdotbelow'] = 0x1E04;\\n  t['Becyrillic'] = 0x0411;\\n  t['Benarmenian'] = 0x0532;\\n  t['Beta'] = 0x0392;\\n  t['Bhook'] = 0x0181;\\n  t['Blinebelow'] = 0x1E06;\\n  t['Bmonospace'] = 0xFF22;\\n  t['Brevesmall'] = 0xF6F4;\\n  t['Bsmall'] = 0xF762;\\n  t['Btopbar'] = 0x0182;\\n  t['C'] = 0x0043;\\n  t['Caarmenian'] = 0x053E;\\n  t['Cacute'] = 0x0106;\\n  t['Caron'] = 0xF6CA;\\n  t['Caronsmall'] = 0xF6F5;\\n  t['Ccaron'] = 0x010C;\\n  t['Ccedilla'] = 0x00C7;\\n  t['Ccedillaacute'] = 0x1E08;\\n  t['Ccedillasmall'] = 0xF7E7;\\n  t['Ccircle'] = 0x24B8;\\n  t['Ccircumflex'] = 0x0108;\\n  t['Cdot'] = 0x010A;\\n  t['Cdotaccent'] = 0x010A;\\n  t['Cedillasmall'] = 0xF7B8;\\n  t['Chaarmenian'] = 0x0549;\\n  t['Cheabkhasiancyrillic'] = 0x04BC;\\n  t['Checyrillic'] = 0x0427;\\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\\n  t['Chedescendercyrillic'] = 0x04B6;\\n  t['Chedieresiscyrillic'] = 0x04F4;\\n  t['Cheharmenian'] = 0x0543;\\n  t['Chekhakassiancyrillic'] = 0x04CB;\\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\\n  t['Chi'] = 0x03A7;\\n  t['Chook'] = 0x0187;\\n  t['Circumflexsmall'] = 0xF6F6;\\n  t['Cmonospace'] = 0xFF23;\\n  t['Coarmenian'] = 0x0551;\\n  t['Csmall'] = 0xF763;\\n  t['D'] = 0x0044;\\n  t['DZ'] = 0x01F1;\\n  t['DZcaron'] = 0x01C4;\\n  t['Daarmenian'] = 0x0534;\\n  t['Dafrican'] = 0x0189;\\n  t['Dcaron'] = 0x010E;\\n  t['Dcedilla'] = 0x1E10;\\n  t['Dcircle'] = 0x24B9;\\n  t['Dcircumflexbelow'] = 0x1E12;\\n  t['Dcroat'] = 0x0110;\\n  t['Ddotaccent'] = 0x1E0A;\\n  t['Ddotbelow'] = 0x1E0C;\\n  t['Decyrillic'] = 0x0414;\\n  t['Deicoptic'] = 0x03EE;\\n  t['Delta'] = 0x2206;\\n  t['Deltagreek'] = 0x0394;\\n  t['Dhook'] = 0x018A;\\n  t['Dieresis'] = 0xF6CB;\\n  t['DieresisAcute'] = 0xF6CC;\\n  t['DieresisGrave'] = 0xF6CD;\\n  t['Dieresissmall'] = 0xF7A8;\\n  t['Digammagreek'] = 0x03DC;\\n  t['Djecyrillic'] = 0x0402;\\n  t['Dlinebelow'] = 0x1E0E;\\n  t['Dmonospace'] = 0xFF24;\\n  t['Dotaccentsmall'] = 0xF6F7;\\n  t['Dslash'] = 0x0110;\\n  t['Dsmall'] = 0xF764;\\n  t['Dtopbar'] = 0x018B;\\n  t['Dz'] = 0x01F2;\\n  t['Dzcaron'] = 0x01C5;\\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\\n  t['Dzecyrillic'] = 0x0405;\\n  t['Dzhecyrillic'] = 0x040F;\\n  t['E'] = 0x0045;\\n  t['Eacute'] = 0x00C9;\\n  t['Eacutesmall'] = 0xF7E9;\\n  t['Ebreve'] = 0x0114;\\n  t['Ecaron'] = 0x011A;\\n  t['Ecedillabreve'] = 0x1E1C;\\n  t['Echarmenian'] = 0x0535;\\n  t['Ecircle'] = 0x24BA;\\n  t['Ecircumflex'] = 0x00CA;\\n  t['Ecircumflexacute'] = 0x1EBE;\\n  t['Ecircumflexbelow'] = 0x1E18;\\n  t['Ecircumflexdotbelow'] = 0x1EC6;\\n  t['Ecircumflexgrave'] = 0x1EC0;\\n  t['Ecircumflexhookabove'] = 0x1EC2;\\n  t['Ecircumflexsmall'] = 0xF7EA;\\n  t['Ecircumflextilde'] = 0x1EC4;\\n  t['Ecyrillic'] = 0x0404;\\n  t['Edblgrave'] = 0x0204;\\n  t['Edieresis'] = 0x00CB;\\n  t['Edieresissmall'] = 0xF7EB;\\n  t['Edot'] = 0x0116;\\n  t['Edotaccent'] = 0x0116;\\n  t['Edotbelow'] = 0x1EB8;\\n  t['Efcyrillic'] = 0x0424;\\n  t['Egrave'] = 0x00C8;\\n  t['Egravesmall'] = 0xF7E8;\\n  t['Eharmenian'] = 0x0537;\\n  t['Ehookabove'] = 0x1EBA;\\n  t['Eightroman'] = 0x2167;\\n  t['Einvertedbreve'] = 0x0206;\\n  t['Eiotifiedcyrillic'] = 0x0464;\\n  t['Elcyrillic'] = 0x041B;\\n  t['Elevenroman'] = 0x216A;\\n  t['Emacron'] = 0x0112;\\n  t['Emacronacute'] = 0x1E16;\\n  t['Emacrongrave'] = 0x1E14;\\n  t['Emcyrillic'] = 0x041C;\\n  t['Emonospace'] = 0xFF25;\\n  t['Encyrillic'] = 0x041D;\\n  t['Endescendercyrillic'] = 0x04A2;\\n  t['Eng'] = 0x014A;\\n  t['Enghecyrillic'] = 0x04A4;\\n  t['Enhookcyrillic'] = 0x04C7;\\n  t['Eogonek'] = 0x0118;\\n  t['Eopen'] = 0x0190;\\n  t['Epsilon'] = 0x0395;\\n  t['Epsilontonos'] = 0x0388;\\n  t['Ercyrillic'] = 0x0420;\\n  t['Ereversed'] = 0x018E;\\n  t['Ereversedcyrillic'] = 0x042D;\\n  t['Escyrillic'] = 0x0421;\\n  t['Esdescendercyrillic'] = 0x04AA;\\n  t['Esh'] = 0x01A9;\\n  t['Esmall'] = 0xF765;\\n  t['Eta'] = 0x0397;\\n  t['Etarmenian'] = 0x0538;\\n  t['Etatonos'] = 0x0389;\\n  t['Eth'] = 0x00D0;\\n  t['Ethsmall'] = 0xF7F0;\\n  t['Etilde'] = 0x1EBC;\\n  t['Etildebelow'] = 0x1E1A;\\n  t['Euro'] = 0x20AC;\\n  t['Ezh'] = 0x01B7;\\n  t['Ezhcaron'] = 0x01EE;\\n  t['Ezhreversed'] = 0x01B8;\\n  t['F'] = 0x0046;\\n  t['Fcircle'] = 0x24BB;\\n  t['Fdotaccent'] = 0x1E1E;\\n  t['Feharmenian'] = 0x0556;\\n  t['Feicoptic'] = 0x03E4;\\n  t['Fhook'] = 0x0191;\\n  t['Fitacyrillic'] = 0x0472;\\n  t['Fiveroman'] = 0x2164;\\n  t['Fmonospace'] = 0xFF26;\\n  t['Fourroman'] = 0x2163;\\n  t['Fsmall'] = 0xF766;\\n  t['G'] = 0x0047;\\n  t['GBsquare'] = 0x3387;\\n  t['Gacute'] = 0x01F4;\\n  t['Gamma'] = 0x0393;\\n  t['Gammaafrican'] = 0x0194;\\n  t['Gangiacoptic'] = 0x03EA;\\n  t['Gbreve'] = 0x011E;\\n  t['Gcaron'] = 0x01E6;\\n  t['Gcedilla'] = 0x0122;\\n  t['Gcircle'] = 0x24BC;\\n  t['Gcircumflex'] = 0x011C;\\n  t['Gcommaaccent'] = 0x0122;\\n  t['Gdot'] = 0x0120;\\n  t['Gdotaccent'] = 0x0120;\\n  t['Gecyrillic'] = 0x0413;\\n  t['Ghadarmenian'] = 0x0542;\\n  t['Ghemiddlehookcyrillic'] = 0x0494;\\n  t['Ghestrokecyrillic'] = 0x0492;\\n  t['Gheupturncyrillic'] = 0x0490;\\n  t['Ghook'] = 0x0193;\\n  t['Gimarmenian'] = 0x0533;\\n  t['Gjecyrillic'] = 0x0403;\\n  t['Gmacron'] = 0x1E20;\\n  t['Gmonospace'] = 0xFF27;\\n  t['Grave'] = 0xF6CE;\\n  t['Gravesmall'] = 0xF760;\\n  t['Gsmall'] = 0xF767;\\n  t['Gsmallhook'] = 0x029B;\\n  t['Gstroke'] = 0x01E4;\\n  t['H'] = 0x0048;\\n  t['H18533'] = 0x25CF;\\n  t['H18543'] = 0x25AA;\\n  t['H18551'] = 0x25AB;\\n  t['H22073'] = 0x25A1;\\n  t['HPsquare'] = 0x33CB;\\n  t['Haabkhasiancyrillic'] = 0x04A8;\\n  t['Hadescendercyrillic'] = 0x04B2;\\n  t['Hardsigncyrillic'] = 0x042A;\\n  t['Hbar'] = 0x0126;\\n  t['Hbrevebelow'] = 0x1E2A;\\n  t['Hcedilla'] = 0x1E28;\\n  t['Hcircle'] = 0x24BD;\\n  t['Hcircumflex'] = 0x0124;\\n  t['Hdieresis'] = 0x1E26;\\n  t['Hdotaccent'] = 0x1E22;\\n  t['Hdotbelow'] = 0x1E24;\\n  t['Hmonospace'] = 0xFF28;\\n  t['Hoarmenian'] = 0x0540;\\n  t['Horicoptic'] = 0x03E8;\\n  t['Hsmall'] = 0xF768;\\n  t['Hungarumlaut'] = 0xF6CF;\\n  t['Hungarumlautsmall'] = 0xF6F8;\\n  t['Hzsquare'] = 0x3390;\\n  t['I'] = 0x0049;\\n  t['IAcyrillic'] = 0x042F;\\n  t['IJ'] = 0x0132;\\n  t['IUcyrillic'] = 0x042E;\\n  t['Iacute'] = 0x00CD;\\n  t['Iacutesmall'] = 0xF7ED;\\n  t['Ibreve'] = 0x012C;\\n  t['Icaron'] = 0x01CF;\\n  t['Icircle'] = 0x24BE;\\n  t['Icircumflex'] = 0x00CE;\\n  t['Icircumflexsmall'] = 0xF7EE;\\n  t['Icyrillic'] = 0x0406;\\n  t['Idblgrave'] = 0x0208;\\n  t['Idieresis'] = 0x00CF;\\n  t['Idieresisacute'] = 0x1E2E;\\n  t['Idieresiscyrillic'] = 0x04E4;\\n  t['Idieresissmall'] = 0xF7EF;\\n  t['Idot'] = 0x0130;\\n  t['Idotaccent'] = 0x0130;\\n  t['Idotbelow'] = 0x1ECA;\\n  t['Iebrevecyrillic'] = 0x04D6;\\n  t['Iecyrillic'] = 0x0415;\\n  t['Ifraktur'] = 0x2111;\\n  t['Igrave'] = 0x00CC;\\n  t['Igravesmall'] = 0xF7EC;\\n  t['Ihookabove'] = 0x1EC8;\\n  t['Iicyrillic'] = 0x0418;\\n  t['Iinvertedbreve'] = 0x020A;\\n  t['Iishortcyrillic'] = 0x0419;\\n  t['Imacron'] = 0x012A;\\n  t['Imacroncyrillic'] = 0x04E2;\\n  t['Imonospace'] = 0xFF29;\\n  t['Iniarmenian'] = 0x053B;\\n  t['Iocyrillic'] = 0x0401;\\n  t['Iogonek'] = 0x012E;\\n  t['Iota'] = 0x0399;\\n  t['Iotaafrican'] = 0x0196;\\n  t['Iotadieresis'] = 0x03AA;\\n  t['Iotatonos'] = 0x038A;\\n  t['Ismall'] = 0xF769;\\n  t['Istroke'] = 0x0197;\\n  t['Itilde'] = 0x0128;\\n  t['Itildebelow'] = 0x1E2C;\\n  t['Izhitsacyrillic'] = 0x0474;\\n  t['Izhitsadblgravecyrillic'] = 0x0476;\\n  t['J'] = 0x004A;\\n  t['Jaarmenian'] = 0x0541;\\n  t['Jcircle'] = 0x24BF;\\n  t['Jcircumflex'] = 0x0134;\\n  t['Jecyrillic'] = 0x0408;\\n  t['Jheharmenian'] = 0x054B;\\n  t['Jmonospace'] = 0xFF2A;\\n  t['Jsmall'] = 0xF76A;\\n  t['K'] = 0x004B;\\n  t['KBsquare'] = 0x3385;\\n  t['KKsquare'] = 0x33CD;\\n  t['Kabashkircyrillic'] = 0x04A0;\\n  t['Kacute'] = 0x1E30;\\n  t['Kacyrillic'] = 0x041A;\\n  t['Kadescendercyrillic'] = 0x049A;\\n  t['Kahookcyrillic'] = 0x04C3;\\n  t['Kappa'] = 0x039A;\\n  t['Kastrokecyrillic'] = 0x049E;\\n  t['Kaverticalstrokecyrillic'] = 0x049C;\\n  t['Kcaron'] = 0x01E8;\\n  t['Kcedilla'] = 0x0136;\\n  t['Kcircle'] = 0x24C0;\\n  t['Kcommaaccent'] = 0x0136;\\n  t['Kdotbelow'] = 0x1E32;\\n  t['Keharmenian'] = 0x0554;\\n  t['Kenarmenian'] = 0x053F;\\n  t['Khacyrillic'] = 0x0425;\\n  t['Kheicoptic'] = 0x03E6;\\n  t['Khook'] = 0x0198;\\n  t['Kjecyrillic'] = 0x040C;\\n  t['Klinebelow'] = 0x1E34;\\n  t['Kmonospace'] = 0xFF2B;\\n  t['Koppacyrillic'] = 0x0480;\\n  t['Koppagreek'] = 0x03DE;\\n  t['Ksicyrillic'] = 0x046E;\\n  t['Ksmall'] = 0xF76B;\\n  t['L'] = 0x004C;\\n  t['LJ'] = 0x01C7;\\n  t['LL'] = 0xF6BF;\\n  t['Lacute'] = 0x0139;\\n  t['Lambda'] = 0x039B;\\n  t['Lcaron'] = 0x013D;\\n  t['Lcedilla'] = 0x013B;\\n  t['Lcircle'] = 0x24C1;\\n  t['Lcircumflexbelow'] = 0x1E3C;\\n  t['Lcommaaccent'] = 0x013B;\\n  t['Ldot'] = 0x013F;\\n  t['Ldotaccent'] = 0x013F;\\n  t['Ldotbelow'] = 0x1E36;\\n  t['Ldotbelowmacron'] = 0x1E38;\\n  t['Liwnarmenian'] = 0x053C;\\n  t['Lj'] = 0x01C8;\\n  t['Ljecyrillic'] = 0x0409;\\n  t['Llinebelow'] = 0x1E3A;\\n  t['Lmonospace'] = 0xFF2C;\\n  t['Lslash'] = 0x0141;\\n  t['Lslashsmall'] = 0xF6F9;\\n  t['Lsmall'] = 0xF76C;\\n  t['M'] = 0x004D;\\n  t['MBsquare'] = 0x3386;\\n  t['Macron'] = 0xF6D0;\\n  t['Macronsmall'] = 0xF7AF;\\n  t['Macute'] = 0x1E3E;\\n  t['Mcircle'] = 0x24C2;\\n  t['Mdotaccent'] = 0x1E40;\\n  t['Mdotbelow'] = 0x1E42;\\n  t['Menarmenian'] = 0x0544;\\n  t['Mmonospace'] = 0xFF2D;\\n  t['Msmall'] = 0xF76D;\\n  t['Mturned'] = 0x019C;\\n  t['Mu'] = 0x039C;\\n  t['N'] = 0x004E;\\n  t['NJ'] = 0x01CA;\\n  t['Nacute'] = 0x0143;\\n  t['Ncaron'] = 0x0147;\\n  t['Ncedilla'] = 0x0145;\\n  t['Ncircle'] = 0x24C3;\\n  t['Ncircumflexbelow'] = 0x1E4A;\\n  t['Ncommaaccent'] = 0x0145;\\n  t['Ndotaccent'] = 0x1E44;\\n  t['Ndotbelow'] = 0x1E46;\\n  t['Nhookleft'] = 0x019D;\\n  t['Nineroman'] = 0x2168;\\n  t['Nj'] = 0x01CB;\\n  t['Njecyrillic'] = 0x040A;\\n  t['Nlinebelow'] = 0x1E48;\\n  t['Nmonospace'] = 0xFF2E;\\n  t['Nowarmenian'] = 0x0546;\\n  t['Nsmall'] = 0xF76E;\\n  t['Ntilde'] = 0x00D1;\\n  t['Ntildesmall'] = 0xF7F1;\\n  t['Nu'] = 0x039D;\\n  t['O'] = 0x004F;\\n  t['OE'] = 0x0152;\\n  t['OEsmall'] = 0xF6FA;\\n  t['Oacute'] = 0x00D3;\\n  t['Oacutesmall'] = 0xF7F3;\\n  t['Obarredcyrillic'] = 0x04E8;\\n  t['Obarreddieresiscyrillic'] = 0x04EA;\\n  t['Obreve'] = 0x014E;\\n  t['Ocaron'] = 0x01D1;\\n  t['Ocenteredtilde'] = 0x019F;\\n  t['Ocircle'] = 0x24C4;\\n  t['Ocircumflex'] = 0x00D4;\\n  t['Ocircumflexacute'] = 0x1ED0;\\n  t['Ocircumflexdotbelow'] = 0x1ED8;\\n  t['Ocircumflexgrave'] = 0x1ED2;\\n  t['Ocircumflexhookabove'] = 0x1ED4;\\n  t['Ocircumflexsmall'] = 0xF7F4;\\n  t['Ocircumflextilde'] = 0x1ED6;\\n  t['Ocyrillic'] = 0x041E;\\n  t['Odblacute'] = 0x0150;\\n  t['Odblgrave'] = 0x020C;\\n  t['Odieresis'] = 0x00D6;\\n  t['Odieresiscyrillic'] = 0x04E6;\\n  t['Odieresissmall'] = 0xF7F6;\\n  t['Odotbelow'] = 0x1ECC;\\n  t['Ogoneksmall'] = 0xF6FB;\\n  t['Ograve'] = 0x00D2;\\n  t['Ogravesmall'] = 0xF7F2;\\n  t['Oharmenian'] = 0x0555;\\n  t['Ohm'] = 0x2126;\\n  t['Ohookabove'] = 0x1ECE;\\n  t['Ohorn'] = 0x01A0;\\n  t['Ohornacute'] = 0x1EDA;\\n  t['Ohorndotbelow'] = 0x1EE2;\\n  t['Ohorngrave'] = 0x1EDC;\\n  t['Ohornhookabove'] = 0x1EDE;\\n  t['Ohorntilde'] = 0x1EE0;\\n  t['Ohungarumlaut'] = 0x0150;\\n  t['Oi'] = 0x01A2;\\n  t['Oinvertedbreve'] = 0x020E;\\n  t['Omacron'] = 0x014C;\\n  t['Omacronacute'] = 0x1E52;\\n  t['Omacrongrave'] = 0x1E50;\\n  t['Omega'] = 0x2126;\\n  t['Omegacyrillic'] = 0x0460;\\n  t['Omegagreek'] = 0x03A9;\\n  t['Omegaroundcyrillic'] = 0x047A;\\n  t['Omegatitlocyrillic'] = 0x047C;\\n  t['Omegatonos'] = 0x038F;\\n  t['Omicron'] = 0x039F;\\n  t['Omicrontonos'] = 0x038C;\\n  t['Omonospace'] = 0xFF2F;\\n  t['Oneroman'] = 0x2160;\\n  t['Oogonek'] = 0x01EA;\\n  t['Oogonekmacron'] = 0x01EC;\\n  t['Oopen'] = 0x0186;\\n  t['Oslash'] = 0x00D8;\\n  t['Oslashacute'] = 0x01FE;\\n  t['Oslashsmall'] = 0xF7F8;\\n  t['Osmall'] = 0xF76F;\\n  t['Ostrokeacute'] = 0x01FE;\\n  t['Otcyrillic'] = 0x047E;\\n  t['Otilde'] = 0x00D5;\\n  t['Otildeacute'] = 0x1E4C;\\n  t['Otildedieresis'] = 0x1E4E;\\n  t['Otildesmall'] = 0xF7F5;\\n  t['P'] = 0x0050;\\n  t['Pacute'] = 0x1E54;\\n  t['Pcircle'] = 0x24C5;\\n  t['Pdotaccent'] = 0x1E56;\\n  t['Pecyrillic'] = 0x041F;\\n  t['Peharmenian'] = 0x054A;\\n  t['Pemiddlehookcyrillic'] = 0x04A6;\\n  t['Phi'] = 0x03A6;\\n  t['Phook'] = 0x01A4;\\n  t['Pi'] = 0x03A0;\\n  t['Piwrarmenian'] = 0x0553;\\n  t['Pmonospace'] = 0xFF30;\\n  t['Psi'] = 0x03A8;\\n  t['Psicyrillic'] = 0x0470;\\n  t['Psmall'] = 0xF770;\\n  t['Q'] = 0x0051;\\n  t['Qcircle'] = 0x24C6;\\n  t['Qmonospace'] = 0xFF31;\\n  t['Qsmall'] = 0xF771;\\n  t['R'] = 0x0052;\\n  t['Raarmenian'] = 0x054C;\\n  t['Racute'] = 0x0154;\\n  t['Rcaron'] = 0x0158;\\n  t['Rcedilla'] = 0x0156;\\n  t['Rcircle'] = 0x24C7;\\n  t['Rcommaaccent'] = 0x0156;\\n  t['Rdblgrave'] = 0x0210;\\n  t['Rdotaccent'] = 0x1E58;\\n  t['Rdotbelow'] = 0x1E5A;\\n  t['Rdotbelowmacron'] = 0x1E5C;\\n  t['Reharmenian'] = 0x0550;\\n  t['Rfraktur'] = 0x211C;\\n  t['Rho'] = 0x03A1;\\n  t['Ringsmall'] = 0xF6FC;\\n  t['Rinvertedbreve'] = 0x0212;\\n  t['Rlinebelow'] = 0x1E5E;\\n  t['Rmonospace'] = 0xFF32;\\n  t['Rsmall'] = 0xF772;\\n  t['Rsmallinverted'] = 0x0281;\\n  t['Rsmallinvertedsuperior'] = 0x02B6;\\n  t['S'] = 0x0053;\\n  t['SF010000'] = 0x250C;\\n  t['SF020000'] = 0x2514;\\n  t['SF030000'] = 0x2510;\\n  t['SF040000'] = 0x2518;\\n  t['SF050000'] = 0x253C;\\n  t['SF060000'] = 0x252C;\\n  t['SF070000'] = 0x2534;\\n  t['SF080000'] = 0x251C;\\n  t['SF090000'] = 0x2524;\\n  t['SF100000'] = 0x2500;\\n  t['SF110000'] = 0x2502;\\n  t['SF190000'] = 0x2561;\\n  t['SF200000'] = 0x2562;\\n  t['SF210000'] = 0x2556;\\n  t['SF220000'] = 0x2555;\\n  t['SF230000'] = 0x2563;\\n  t['SF240000'] = 0x2551;\\n  t['SF250000'] = 0x2557;\\n  t['SF260000'] = 0x255D;\\n  t['SF270000'] = 0x255C;\\n  t['SF280000'] = 0x255B;\\n  t['SF360000'] = 0x255E;\\n  t['SF370000'] = 0x255F;\\n  t['SF380000'] = 0x255A;\\n  t['SF390000'] = 0x2554;\\n  t['SF400000'] = 0x2569;\\n  t['SF410000'] = 0x2566;\\n  t['SF420000'] = 0x2560;\\n  t['SF430000'] = 0x2550;\\n  t['SF440000'] = 0x256C;\\n  t['SF450000'] = 0x2567;\\n  t['SF460000'] = 0x2568;\\n  t['SF470000'] = 0x2564;\\n  t['SF480000'] = 0x2565;\\n  t['SF490000'] = 0x2559;\\n  t['SF500000'] = 0x2558;\\n  t['SF510000'] = 0x2552;\\n  t['SF520000'] = 0x2553;\\n  t['SF530000'] = 0x256B;\\n  t['SF540000'] = 0x256A;\\n  t['Sacute'] = 0x015A;\\n  t['Sacutedotaccent'] = 0x1E64;\\n  t['Sampigreek'] = 0x03E0;\\n  t['Scaron'] = 0x0160;\\n  t['Scarondotaccent'] = 0x1E66;\\n  t['Scaronsmall'] = 0xF6FD;\\n  t['Scedilla'] = 0x015E;\\n  t['Schwa'] = 0x018F;\\n  t['Schwacyrillic'] = 0x04D8;\\n  t['Schwadieresiscyrillic'] = 0x04DA;\\n  t['Scircle'] = 0x24C8;\\n  t['Scircumflex'] = 0x015C;\\n  t['Scommaaccent'] = 0x0218;\\n  t['Sdotaccent'] = 0x1E60;\\n  t['Sdotbelow'] = 0x1E62;\\n  t['Sdotbelowdotaccent'] = 0x1E68;\\n  t['Seharmenian'] = 0x054D;\\n  t['Sevenroman'] = 0x2166;\\n  t['Shaarmenian'] = 0x0547;\\n  t['Shacyrillic'] = 0x0428;\\n  t['Shchacyrillic'] = 0x0429;\\n  t['Sheicoptic'] = 0x03E2;\\n  t['Shhacyrillic'] = 0x04BA;\\n  t['Shimacoptic'] = 0x03EC;\\n  t['Sigma'] = 0x03A3;\\n  t['Sixroman'] = 0x2165;\\n  t['Smonospace'] = 0xFF33;\\n  t['Softsigncyrillic'] = 0x042C;\\n  t['Ssmall'] = 0xF773;\\n  t['Stigmagreek'] = 0x03DA;\\n  t['T'] = 0x0054;\\n  t['Tau'] = 0x03A4;\\n  t['Tbar'] = 0x0166;\\n  t['Tcaron'] = 0x0164;\\n  t['Tcedilla'] = 0x0162;\\n  t['Tcircle'] = 0x24C9;\\n  t['Tcircumflexbelow'] = 0x1E70;\\n  t['Tcommaaccent'] = 0x0162;\\n  t['Tdotaccent'] = 0x1E6A;\\n  t['Tdotbelow'] = 0x1E6C;\\n  t['Tecyrillic'] = 0x0422;\\n  t['Tedescendercyrillic'] = 0x04AC;\\n  t['Tenroman'] = 0x2169;\\n  t['Tetsecyrillic'] = 0x04B4;\\n  t['Theta'] = 0x0398;\\n  t['Thook'] = 0x01AC;\\n  t['Thorn'] = 0x00DE;\\n  t['Thornsmall'] = 0xF7FE;\\n  t['Threeroman'] = 0x2162;\\n  t['Tildesmall'] = 0xF6FE;\\n  t['Tiwnarmenian'] = 0x054F;\\n  t['Tlinebelow'] = 0x1E6E;\\n  t['Tmonospace'] = 0xFF34;\\n  t['Toarmenian'] = 0x0539;\\n  t['Tonefive'] = 0x01BC;\\n  t['Tonesix'] = 0x0184;\\n  t['Tonetwo'] = 0x01A7;\\n  t['Tretroflexhook'] = 0x01AE;\\n  t['Tsecyrillic'] = 0x0426;\\n  t['Tshecyrillic'] = 0x040B;\\n  t['Tsmall'] = 0xF774;\\n  t['Twelveroman'] = 0x216B;\\n  t['Tworoman'] = 0x2161;\\n  t['U'] = 0x0055;\\n  t['Uacute'] = 0x00DA;\\n  t['Uacutesmall'] = 0xF7FA;\\n  t['Ubreve'] = 0x016C;\\n  t['Ucaron'] = 0x01D3;\\n  t['Ucircle'] = 0x24CA;\\n  t['Ucircumflex'] = 0x00DB;\\n  t['Ucircumflexbelow'] = 0x1E76;\\n  t['Ucircumflexsmall'] = 0xF7FB;\\n  t['Ucyrillic'] = 0x0423;\\n  t['Udblacute'] = 0x0170;\\n  t['Udblgrave'] = 0x0214;\\n  t['Udieresis'] = 0x00DC;\\n  t['Udieresisacute'] = 0x01D7;\\n  t['Udieresisbelow'] = 0x1E72;\\n  t['Udieresiscaron'] = 0x01D9;\\n  t['Udieresiscyrillic'] = 0x04F0;\\n  t['Udieresisgrave'] = 0x01DB;\\n  t['Udieresismacron'] = 0x01D5;\\n  t['Udieresissmall'] = 0xF7FC;\\n  t['Udotbelow'] = 0x1EE4;\\n  t['Ugrave'] = 0x00D9;\\n  t['Ugravesmall'] = 0xF7F9;\\n  t['Uhookabove'] = 0x1EE6;\\n  t['Uhorn'] = 0x01AF;\\n  t['Uhornacute'] = 0x1EE8;\\n  t['Uhorndotbelow'] = 0x1EF0;\\n  t['Uhorngrave'] = 0x1EEA;\\n  t['Uhornhookabove'] = 0x1EEC;\\n  t['Uhorntilde'] = 0x1EEE;\\n  t['Uhungarumlaut'] = 0x0170;\\n  t['Uhungarumlautcyrillic'] = 0x04F2;\\n  t['Uinvertedbreve'] = 0x0216;\\n  t['Ukcyrillic'] = 0x0478;\\n  t['Umacron'] = 0x016A;\\n  t['Umacroncyrillic'] = 0x04EE;\\n  t['Umacrondieresis'] = 0x1E7A;\\n  t['Umonospace'] = 0xFF35;\\n  t['Uogonek'] = 0x0172;\\n  t['Upsilon'] = 0x03A5;\\n  t['Upsilon1'] = 0x03D2;\\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\\n  t['Upsilonafrican'] = 0x01B1;\\n  t['Upsilondieresis'] = 0x03AB;\\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\\n  t['Upsilonhooksymbol'] = 0x03D2;\\n  t['Upsilontonos'] = 0x038E;\\n  t['Uring'] = 0x016E;\\n  t['Ushortcyrillic'] = 0x040E;\\n  t['Usmall'] = 0xF775;\\n  t['Ustraightcyrillic'] = 0x04AE;\\n  t['Ustraightstrokecyrillic'] = 0x04B0;\\n  t['Utilde'] = 0x0168;\\n  t['Utildeacute'] = 0x1E78;\\n  t['Utildebelow'] = 0x1E74;\\n  t['V'] = 0x0056;\\n  t['Vcircle'] = 0x24CB;\\n  t['Vdotbelow'] = 0x1E7E;\\n  t['Vecyrillic'] = 0x0412;\\n  t['Vewarmenian'] = 0x054E;\\n  t['Vhook'] = 0x01B2;\\n  t['Vmonospace'] = 0xFF36;\\n  t['Voarmenian'] = 0x0548;\\n  t['Vsmall'] = 0xF776;\\n  t['Vtilde'] = 0x1E7C;\\n  t['W'] = 0x0057;\\n  t['Wacute'] = 0x1E82;\\n  t['Wcircle'] = 0x24CC;\\n  t['Wcircumflex'] = 0x0174;\\n  t['Wdieresis'] = 0x1E84;\\n  t['Wdotaccent'] = 0x1E86;\\n  t['Wdotbelow'] = 0x1E88;\\n  t['Wgrave'] = 0x1E80;\\n  t['Wmonospace'] = 0xFF37;\\n  t['Wsmall'] = 0xF777;\\n  t['X'] = 0x0058;\\n  t['Xcircle'] = 0x24CD;\\n  t['Xdieresis'] = 0x1E8C;\\n  t['Xdotaccent'] = 0x1E8A;\\n  t['Xeharmenian'] = 0x053D;\\n  t['Xi'] = 0x039E;\\n  t['Xmonospace'] = 0xFF38;\\n  t['Xsmall'] = 0xF778;\\n  t['Y'] = 0x0059;\\n  t['Yacute'] = 0x00DD;\\n  t['Yacutesmall'] = 0xF7FD;\\n  t['Yatcyrillic'] = 0x0462;\\n  t['Ycircle'] = 0x24CE;\\n  t['Ycircumflex'] = 0x0176;\\n  t['Ydieresis'] = 0x0178;\\n  t['Ydieresissmall'] = 0xF7FF;\\n  t['Ydotaccent'] = 0x1E8E;\\n  t['Ydotbelow'] = 0x1EF4;\\n  t['Yericyrillic'] = 0x042B;\\n  t['Yerudieresiscyrillic'] = 0x04F8;\\n  t['Ygrave'] = 0x1EF2;\\n  t['Yhook'] = 0x01B3;\\n  t['Yhookabove'] = 0x1EF6;\\n  t['Yiarmenian'] = 0x0545;\\n  t['Yicyrillic'] = 0x0407;\\n  t['Yiwnarmenian'] = 0x0552;\\n  t['Ymonospace'] = 0xFF39;\\n  t['Ysmall'] = 0xF779;\\n  t['Ytilde'] = 0x1EF8;\\n  t['Yusbigcyrillic'] = 0x046A;\\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\\n  t['Yuslittlecyrillic'] = 0x0466;\\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\\n  t['Z'] = 0x005A;\\n  t['Zaarmenian'] = 0x0536;\\n  t['Zacute'] = 0x0179;\\n  t['Zcaron'] = 0x017D;\\n  t['Zcaronsmall'] = 0xF6FF;\\n  t['Zcircle'] = 0x24CF;\\n  t['Zcircumflex'] = 0x1E90;\\n  t['Zdot'] = 0x017B;\\n  t['Zdotaccent'] = 0x017B;\\n  t['Zdotbelow'] = 0x1E92;\\n  t['Zecyrillic'] = 0x0417;\\n  t['Zedescendercyrillic'] = 0x0498;\\n  t['Zedieresiscyrillic'] = 0x04DE;\\n  t['Zeta'] = 0x0396;\\n  t['Zhearmenian'] = 0x053A;\\n  t['Zhebrevecyrillic'] = 0x04C1;\\n  t['Zhecyrillic'] = 0x0416;\\n  t['Zhedescendercyrillic'] = 0x0496;\\n  t['Zhedieresiscyrillic'] = 0x04DC;\\n  t['Zlinebelow'] = 0x1E94;\\n  t['Zmonospace'] = 0xFF3A;\\n  t['Zsmall'] = 0xF77A;\\n  t['Zstroke'] = 0x01B5;\\n  t['a'] = 0x0061;\\n  t['aabengali'] = 0x0986;\\n  t['aacute'] = 0x00E1;\\n  t['aadeva'] = 0x0906;\\n  t['aagujarati'] = 0x0A86;\\n  t['aagurmukhi'] = 0x0A06;\\n  t['aamatragurmukhi'] = 0x0A3E;\\n  t['aarusquare'] = 0x3303;\\n  t['aavowelsignbengali'] = 0x09BE;\\n  t['aavowelsigndeva'] = 0x093E;\\n  t['aavowelsigngujarati'] = 0x0ABE;\\n  t['abbreviationmarkarmenian'] = 0x055F;\\n  t['abbreviationsigndeva'] = 0x0970;\\n  t['abengali'] = 0x0985;\\n  t['abopomofo'] = 0x311A;\\n  t['abreve'] = 0x0103;\\n  t['abreveacute'] = 0x1EAF;\\n  t['abrevecyrillic'] = 0x04D1;\\n  t['abrevedotbelow'] = 0x1EB7;\\n  t['abrevegrave'] = 0x1EB1;\\n  t['abrevehookabove'] = 0x1EB3;\\n  t['abrevetilde'] = 0x1EB5;\\n  t['acaron'] = 0x01CE;\\n  t['acircle'] = 0x24D0;\\n  t['acircumflex'] = 0x00E2;\\n  t['acircumflexacute'] = 0x1EA5;\\n  t['acircumflexdotbelow'] = 0x1EAD;\\n  t['acircumflexgrave'] = 0x1EA7;\\n  t['acircumflexhookabove'] = 0x1EA9;\\n  t['acircumflextilde'] = 0x1EAB;\\n  t['acute'] = 0x00B4;\\n  t['acutebelowcmb'] = 0x0317;\\n  t['acutecmb'] = 0x0301;\\n  t['acutecomb'] = 0x0301;\\n  t['acutedeva'] = 0x0954;\\n  t['acutelowmod'] = 0x02CF;\\n  t['acutetonecmb'] = 0x0341;\\n  t['acyrillic'] = 0x0430;\\n  t['adblgrave'] = 0x0201;\\n  t['addakgurmukhi'] = 0x0A71;\\n  t['adeva'] = 0x0905;\\n  t['adieresis'] = 0x00E4;\\n  t['adieresiscyrillic'] = 0x04D3;\\n  t['adieresismacron'] = 0x01DF;\\n  t['adotbelow'] = 0x1EA1;\\n  t['adotmacron'] = 0x01E1;\\n  t['ae'] = 0x00E6;\\n  t['aeacute'] = 0x01FD;\\n  t['aekorean'] = 0x3150;\\n  t['aemacron'] = 0x01E3;\\n  t['afii00208'] = 0x2015;\\n  t['afii08941'] = 0x20A4;\\n  t['afii10017'] = 0x0410;\\n  t['afii10018'] = 0x0411;\\n  t['afii10019'] = 0x0412;\\n  t['afii10020'] = 0x0413;\\n  t['afii10021'] = 0x0414;\\n  t['afii10022'] = 0x0415;\\n  t['afii10023'] = 0x0401;\\n  t['afii10024'] = 0x0416;\\n  t['afii10025'] = 0x0417;\\n  t['afii10026'] = 0x0418;\\n  t['afii10027'] = 0x0419;\\n  t['afii10028'] = 0x041A;\\n  t['afii10029'] = 0x041B;\\n  t['afii10030'] = 0x041C;\\n  t['afii10031'] = 0x041D;\\n  t['afii10032'] = 0x041E;\\n  t['afii10033'] = 0x041F;\\n  t['afii10034'] = 0x0420;\\n  t['afii10035'] = 0x0421;\\n  t['afii10036'] = 0x0422;\\n  t['afii10037'] = 0x0423;\\n  t['afii10038'] = 0x0424;\\n  t['afii10039'] = 0x0425;\\n  t['afii10040'] = 0x0426;\\n  t['afii10041'] = 0x0427;\\n  t['afii10042'] = 0x0428;\\n  t['afii10043'] = 0x0429;\\n  t['afii10044'] = 0x042A;\\n  t['afii10045'] = 0x042B;\\n  t['afii10046'] = 0x042C;\\n  t['afii10047'] = 0x042D;\\n  t['afii10048'] = 0x042E;\\n  t['afii10049'] = 0x042F;\\n  t['afii10050'] = 0x0490;\\n  t['afii10051'] = 0x0402;\\n  t['afii10052'] = 0x0403;\\n  t['afii10053'] = 0x0404;\\n  t['afii10054'] = 0x0405;\\n  t['afii10055'] = 0x0406;\\n  t['afii10056'] = 0x0407;\\n  t['afii10057'] = 0x0408;\\n  t['afii10058'] = 0x0409;\\n  t['afii10059'] = 0x040A;\\n  t['afii10060'] = 0x040B;\\n  t['afii10061'] = 0x040C;\\n  t['afii10062'] = 0x040E;\\n  t['afii10063'] = 0xF6C4;\\n  t['afii10064'] = 0xF6C5;\\n  t['afii10065'] = 0x0430;\\n  t['afii10066'] = 0x0431;\\n  t['afii10067'] = 0x0432;\\n  t['afii10068'] = 0x0433;\\n  t['afii10069'] = 0x0434;\\n  t['afii10070'] = 0x0435;\\n  t['afii10071'] = 0x0451;\\n  t['afii10072'] = 0x0436;\\n  t['afii10073'] = 0x0437;\\n  t['afii10074'] = 0x0438;\\n  t['afii10075'] = 0x0439;\\n  t['afii10076'] = 0x043A;\\n  t['afii10077'] = 0x043B;\\n  t['afii10078'] = 0x043C;\\n  t['afii10079'] = 0x043D;\\n  t['afii10080'] = 0x043E;\\n  t['afii10081'] = 0x043F;\\n  t['afii10082'] = 0x0440;\\n  t['afii10083'] = 0x0441;\\n  t['afii10084'] = 0x0442;\\n  t['afii10085'] = 0x0443;\\n  t['afii10086'] = 0x0444;\\n  t['afii10087'] = 0x0445;\\n  t['afii10088'] = 0x0446;\\n  t['afii10089'] = 0x0447;\\n  t['afii10090'] = 0x0448;\\n  t['afii10091'] = 0x0449;\\n  t['afii10092'] = 0x044A;\\n  t['afii10093'] = 0x044B;\\n  t['afii10094'] = 0x044C;\\n  t['afii10095'] = 0x044D;\\n  t['afii10096'] = 0x044E;\\n  t['afii10097'] = 0x044F;\\n  t['afii10098'] = 0x0491;\\n  t['afii10099'] = 0x0452;\\n  t['afii10100'] = 0x0453;\\n  t['afii10101'] = 0x0454;\\n  t['afii10102'] = 0x0455;\\n  t['afii10103'] = 0x0456;\\n  t['afii10104'] = 0x0457;\\n  t['afii10105'] = 0x0458;\\n  t['afii10106'] = 0x0459;\\n  t['afii10107'] = 0x045A;\\n  t['afii10108'] = 0x045B;\\n  t['afii10109'] = 0x045C;\\n  t['afii10110'] = 0x045E;\\n  t['afii10145'] = 0x040F;\\n  t['afii10146'] = 0x0462;\\n  t['afii10147'] = 0x0472;\\n  t['afii10148'] = 0x0474;\\n  t['afii10192'] = 0xF6C6;\\n  t['afii10193'] = 0x045F;\\n  t['afii10194'] = 0x0463;\\n  t['afii10195'] = 0x0473;\\n  t['afii10196'] = 0x0475;\\n  t['afii10831'] = 0xF6C7;\\n  t['afii10832'] = 0xF6C8;\\n  t['afii10846'] = 0x04D9;\\n  t['afii299'] = 0x200E;\\n  t['afii300'] = 0x200F;\\n  t['afii301'] = 0x200D;\\n  t['afii57381'] = 0x066A;\\n  t['afii57388'] = 0x060C;\\n  t['afii57392'] = 0x0660;\\n  t['afii57393'] = 0x0661;\\n  t['afii57394'] = 0x0662;\\n  t['afii57395'] = 0x0663;\\n  t['afii57396'] = 0x0664;\\n  t['afii57397'] = 0x0665;\\n  t['afii57398'] = 0x0666;\\n  t['afii57399'] = 0x0667;\\n  t['afii57400'] = 0x0668;\\n  t['afii57401'] = 0x0669;\\n  t['afii57403'] = 0x061B;\\n  t['afii57407'] = 0x061F;\\n  t['afii57409'] = 0x0621;\\n  t['afii57410'] = 0x0622;\\n  t['afii57411'] = 0x0623;\\n  t['afii57412'] = 0x0624;\\n  t['afii57413'] = 0x0625;\\n  t['afii57414'] = 0x0626;\\n  t['afii57415'] = 0x0627;\\n  t['afii57416'] = 0x0628;\\n  t['afii57417'] = 0x0629;\\n  t['afii57418'] = 0x062A;\\n  t['afii57419'] = 0x062B;\\n  t['afii57420'] = 0x062C;\\n  t['afii57421'] = 0x062D;\\n  t['afii57422'] = 0x062E;\\n  t['afii57423'] = 0x062F;\\n  t['afii57424'] = 0x0630;\\n  t['afii57425'] = 0x0631;\\n  t['afii57426'] = 0x0632;\\n  t['afii57427'] = 0x0633;\\n  t['afii57428'] = 0x0634;\\n  t['afii57429'] = 0x0635;\\n  t['afii57430'] = 0x0636;\\n  t['afii57431'] = 0x0637;\\n  t['afii57432'] = 0x0638;\\n  t['afii57433'] = 0x0639;\\n  t['afii57434'] = 0x063A;\\n  t['afii57440'] = 0x0640;\\n  t['afii57441'] = 0x0641;\\n  t['afii57442'] = 0x0642;\\n  t['afii57443'] = 0x0643;\\n  t['afii57444'] = 0x0644;\\n  t['afii57445'] = 0x0645;\\n  t['afii57446'] = 0x0646;\\n  t['afii57448'] = 0x0648;\\n  t['afii57449'] = 0x0649;\\n  t['afii57450'] = 0x064A;\\n  t['afii57451'] = 0x064B;\\n  t['afii57452'] = 0x064C;\\n  t['afii57453'] = 0x064D;\\n  t['afii57454'] = 0x064E;\\n  t['afii57455'] = 0x064F;\\n  t['afii57456'] = 0x0650;\\n  t['afii57457'] = 0x0651;\\n  t['afii57458'] = 0x0652;\\n  t['afii57470'] = 0x0647;\\n  t['afii57505'] = 0x06A4;\\n  t['afii57506'] = 0x067E;\\n  t['afii57507'] = 0x0686;\\n  t['afii57508'] = 0x0698;\\n  t['afii57509'] = 0x06AF;\\n  t['afii57511'] = 0x0679;\\n  t['afii57512'] = 0x0688;\\n  t['afii57513'] = 0x0691;\\n  t['afii57514'] = 0x06BA;\\n  t['afii57519'] = 0x06D2;\\n  t['afii57534'] = 0x06D5;\\n  t['afii57636'] = 0x20AA;\\n  t['afii57645'] = 0x05BE;\\n  t['afii57658'] = 0x05C3;\\n  t['afii57664'] = 0x05D0;\\n  t['afii57665'] = 0x05D1;\\n  t['afii57666'] = 0x05D2;\\n  t['afii57667'] = 0x05D3;\\n  t['afii57668'] = 0x05D4;\\n  t['afii57669'] = 0x05D5;\\n  t['afii57670'] = 0x05D6;\\n  t['afii57671'] = 0x05D7;\\n  t['afii57672'] = 0x05D8;\\n  t['afii57673'] = 0x05D9;\\n  t['afii57674'] = 0x05DA;\\n  t['afii57675'] = 0x05DB;\\n  t['afii57676'] = 0x05DC;\\n  t['afii57677'] = 0x05DD;\\n  t['afii57678'] = 0x05DE;\\n  t['afii57679'] = 0x05DF;\\n  t['afii57680'] = 0x05E0;\\n  t['afii57681'] = 0x05E1;\\n  t['afii57682'] = 0x05E2;\\n  t['afii57683'] = 0x05E3;\\n  t['afii57684'] = 0x05E4;\\n  t['afii57685'] = 0x05E5;\\n  t['afii57686'] = 0x05E6;\\n  t['afii57687'] = 0x05E7;\\n  t['afii57688'] = 0x05E8;\\n  t['afii57689'] = 0x05E9;\\n  t['afii57690'] = 0x05EA;\\n  t['afii57694'] = 0xFB2A;\\n  t['afii57695'] = 0xFB2B;\\n  t['afii57700'] = 0xFB4B;\\n  t['afii57705'] = 0xFB1F;\\n  t['afii57716'] = 0x05F0;\\n  t['afii57717'] = 0x05F1;\\n  t['afii57718'] = 0x05F2;\\n  t['afii57723'] = 0xFB35;\\n  t['afii57793'] = 0x05B4;\\n  t['afii57794'] = 0x05B5;\\n  t['afii57795'] = 0x05B6;\\n  t['afii57796'] = 0x05BB;\\n  t['afii57797'] = 0x05B8;\\n  t['afii57798'] = 0x05B7;\\n  t['afii57799'] = 0x05B0;\\n  t['afii57800'] = 0x05B2;\\n  t['afii57801'] = 0x05B1;\\n  t['afii57802'] = 0x05B3;\\n  t['afii57803'] = 0x05C2;\\n  t['afii57804'] = 0x05C1;\\n  t['afii57806'] = 0x05B9;\\n  t['afii57807'] = 0x05BC;\\n  t['afii57839'] = 0x05BD;\\n  t['afii57841'] = 0x05BF;\\n  t['afii57842'] = 0x05C0;\\n  t['afii57929'] = 0x02BC;\\n  t['afii61248'] = 0x2105;\\n  t['afii61289'] = 0x2113;\\n  t['afii61352'] = 0x2116;\\n  t['afii61573'] = 0x202C;\\n  t['afii61574'] = 0x202D;\\n  t['afii61575'] = 0x202E;\\n  t['afii61664'] = 0x200C;\\n  t['afii63167'] = 0x066D;\\n  t['afii64937'] = 0x02BD;\\n  t['agrave'] = 0x00E0;\\n  t['agujarati'] = 0x0A85;\\n  t['agurmukhi'] = 0x0A05;\\n  t['ahiragana'] = 0x3042;\\n  t['ahookabove'] = 0x1EA3;\\n  t['aibengali'] = 0x0990;\\n  t['aibopomofo'] = 0x311E;\\n  t['aideva'] = 0x0910;\\n  t['aiecyrillic'] = 0x04D5;\\n  t['aigujarati'] = 0x0A90;\\n  t['aigurmukhi'] = 0x0A10;\\n  t['aimatragurmukhi'] = 0x0A48;\\n  t['ainarabic'] = 0x0639;\\n  t['ainfinalarabic'] = 0xFECA;\\n  t['aininitialarabic'] = 0xFECB;\\n  t['ainmedialarabic'] = 0xFECC;\\n  t['ainvertedbreve'] = 0x0203;\\n  t['aivowelsignbengali'] = 0x09C8;\\n  t['aivowelsigndeva'] = 0x0948;\\n  t['aivowelsigngujarati'] = 0x0AC8;\\n  t['akatakana'] = 0x30A2;\\n  t['akatakanahalfwidth'] = 0xFF71;\\n  t['akorean'] = 0x314F;\\n  t['alef'] = 0x05D0;\\n  t['alefarabic'] = 0x0627;\\n  t['alefdageshhebrew'] = 0xFB30;\\n  t['aleffinalarabic'] = 0xFE8E;\\n  t['alefhamzaabovearabic'] = 0x0623;\\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\\n  t['alefhamzabelowarabic'] = 0x0625;\\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\\n  t['alefhebrew'] = 0x05D0;\\n  t['aleflamedhebrew'] = 0xFB4F;\\n  t['alefmaddaabovearabic'] = 0x0622;\\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\\n  t['alefmaksuraarabic'] = 0x0649;\\n  t['alefmaksurafinalarabic'] = 0xFEF0;\\n  t['alefmaksurainitialarabic'] = 0xFEF3;\\n  t['alefmaksuramedialarabic'] = 0xFEF4;\\n  t['alefpatahhebrew'] = 0xFB2E;\\n  t['alefqamatshebrew'] = 0xFB2F;\\n  t['aleph'] = 0x2135;\\n  t['allequal'] = 0x224C;\\n  t['alpha'] = 0x03B1;\\n  t['alphatonos'] = 0x03AC;\\n  t['amacron'] = 0x0101;\\n  t['amonospace'] = 0xFF41;\\n  t['ampersand'] = 0x0026;\\n  t['ampersandmonospace'] = 0xFF06;\\n  t['ampersandsmall'] = 0xF726;\\n  t['amsquare'] = 0x33C2;\\n  t['anbopomofo'] = 0x3122;\\n  t['angbopomofo'] = 0x3124;\\n  t['angbracketleft'] = 0x3008;\\n  t['angbracketright'] = 0x3009;\\n  t['angkhankhuthai'] = 0x0E5A;\\n  t['angle'] = 0x2220;\\n  t['anglebracketleft'] = 0x3008;\\n  t['anglebracketleftvertical'] = 0xFE3F;\\n  t['anglebracketright'] = 0x3009;\\n  t['anglebracketrightvertical'] = 0xFE40;\\n  t['angleleft'] = 0x2329;\\n  t['angleright'] = 0x232A;\\n  t['angstrom'] = 0x212B;\\n  t['anoteleia'] = 0x0387;\\n  t['anudattadeva'] = 0x0952;\\n  t['anusvarabengali'] = 0x0982;\\n  t['anusvaradeva'] = 0x0902;\\n  t['anusvaragujarati'] = 0x0A82;\\n  t['aogonek'] = 0x0105;\\n  t['apaatosquare'] = 0x3300;\\n  t['aparen'] = 0x249C;\\n  t['apostrophearmenian'] = 0x055A;\\n  t['apostrophemod'] = 0x02BC;\\n  t['apple'] = 0xF8FF;\\n  t['approaches'] = 0x2250;\\n  t['approxequal'] = 0x2248;\\n  t['approxequalorimage'] = 0x2252;\\n  t['approximatelyequal'] = 0x2245;\\n  t['araeaekorean'] = 0x318E;\\n  t['araeakorean'] = 0x318D;\\n  t['arc'] = 0x2312;\\n  t['arighthalfring'] = 0x1E9A;\\n  t['aring'] = 0x00E5;\\n  t['aringacute'] = 0x01FB;\\n  t['aringbelow'] = 0x1E01;\\n  t['arrowboth'] = 0x2194;\\n  t['arrowdashdown'] = 0x21E3;\\n  t['arrowdashleft'] = 0x21E0;\\n  t['arrowdashright'] = 0x21E2;\\n  t['arrowdashup'] = 0x21E1;\\n  t['arrowdblboth'] = 0x21D4;\\n  t['arrowdbldown'] = 0x21D3;\\n  t['arrowdblleft'] = 0x21D0;\\n  t['arrowdblright'] = 0x21D2;\\n  t['arrowdblup'] = 0x21D1;\\n  t['arrowdown'] = 0x2193;\\n  t['arrowdownleft'] = 0x2199;\\n  t['arrowdownright'] = 0x2198;\\n  t['arrowdownwhite'] = 0x21E9;\\n  t['arrowheaddownmod'] = 0x02C5;\\n  t['arrowheadleftmod'] = 0x02C2;\\n  t['arrowheadrightmod'] = 0x02C3;\\n  t['arrowheadupmod'] = 0x02C4;\\n  t['arrowhorizex'] = 0xF8E7;\\n  t['arrowleft'] = 0x2190;\\n  t['arrowleftdbl'] = 0x21D0;\\n  t['arrowleftdblstroke'] = 0x21CD;\\n  t['arrowleftoverright'] = 0x21C6;\\n  t['arrowleftwhite'] = 0x21E6;\\n  t['arrowright'] = 0x2192;\\n  t['arrowrightdblstroke'] = 0x21CF;\\n  t['arrowrightheavy'] = 0x279E;\\n  t['arrowrightoverleft'] = 0x21C4;\\n  t['arrowrightwhite'] = 0x21E8;\\n  t['arrowtableft'] = 0x21E4;\\n  t['arrowtabright'] = 0x21E5;\\n  t['arrowup'] = 0x2191;\\n  t['arrowupdn'] = 0x2195;\\n  t['arrowupdnbse'] = 0x21A8;\\n  t['arrowupdownbase'] = 0x21A8;\\n  t['arrowupleft'] = 0x2196;\\n  t['arrowupleftofdown'] = 0x21C5;\\n  t['arrowupright'] = 0x2197;\\n  t['arrowupwhite'] = 0x21E7;\\n  t['arrowvertex'] = 0xF8E6;\\n  t['asciicircum'] = 0x005E;\\n  t['asciicircummonospace'] = 0xFF3E;\\n  t['asciitilde'] = 0x007E;\\n  t['asciitildemonospace'] = 0xFF5E;\\n  t['ascript'] = 0x0251;\\n  t['ascriptturned'] = 0x0252;\\n  t['asmallhiragana'] = 0x3041;\\n  t['asmallkatakana'] = 0x30A1;\\n  t['asmallkatakanahalfwidth'] = 0xFF67;\\n  t['asterisk'] = 0x002A;\\n  t['asteriskaltonearabic'] = 0x066D;\\n  t['asteriskarabic'] = 0x066D;\\n  t['asteriskmath'] = 0x2217;\\n  t['asteriskmonospace'] = 0xFF0A;\\n  t['asterisksmall'] = 0xFE61;\\n  t['asterism'] = 0x2042;\\n  t['asuperior'] = 0xF6E9;\\n  t['asymptoticallyequal'] = 0x2243;\\n  t['at'] = 0x0040;\\n  t['atilde'] = 0x00E3;\\n  t['atmonospace'] = 0xFF20;\\n  t['atsmall'] = 0xFE6B;\\n  t['aturned'] = 0x0250;\\n  t['aubengali'] = 0x0994;\\n  t['aubopomofo'] = 0x3120;\\n  t['audeva'] = 0x0914;\\n  t['augujarati'] = 0x0A94;\\n  t['augurmukhi'] = 0x0A14;\\n  t['aulengthmarkbengali'] = 0x09D7;\\n  t['aumatragurmukhi'] = 0x0A4C;\\n  t['auvowelsignbengali'] = 0x09CC;\\n  t['auvowelsigndeva'] = 0x094C;\\n  t['auvowelsigngujarati'] = 0x0ACC;\\n  t['avagrahadeva'] = 0x093D;\\n  t['aybarmenian'] = 0x0561;\\n  t['ayin'] = 0x05E2;\\n  t['ayinaltonehebrew'] = 0xFB20;\\n  t['ayinhebrew'] = 0x05E2;\\n  t['b'] = 0x0062;\\n  t['babengali'] = 0x09AC;\\n  t['backslash'] = 0x005C;\\n  t['backslashmonospace'] = 0xFF3C;\\n  t['badeva'] = 0x092C;\\n  t['bagujarati'] = 0x0AAC;\\n  t['bagurmukhi'] = 0x0A2C;\\n  t['bahiragana'] = 0x3070;\\n  t['bahtthai'] = 0x0E3F;\\n  t['bakatakana'] = 0x30D0;\\n  t['bar'] = 0x007C;\\n  t['barmonospace'] = 0xFF5C;\\n  t['bbopomofo'] = 0x3105;\\n  t['bcircle'] = 0x24D1;\\n  t['bdotaccent'] = 0x1E03;\\n  t['bdotbelow'] = 0x1E05;\\n  t['beamedsixteenthnotes'] = 0x266C;\\n  t['because'] = 0x2235;\\n  t['becyrillic'] = 0x0431;\\n  t['beharabic'] = 0x0628;\\n  t['behfinalarabic'] = 0xFE90;\\n  t['behinitialarabic'] = 0xFE91;\\n  t['behiragana'] = 0x3079;\\n  t['behmedialarabic'] = 0xFE92;\\n  t['behmeeminitialarabic'] = 0xFC9F;\\n  t['behmeemisolatedarabic'] = 0xFC08;\\n  t['behnoonfinalarabic'] = 0xFC6D;\\n  t['bekatakana'] = 0x30D9;\\n  t['benarmenian'] = 0x0562;\\n  t['bet'] = 0x05D1;\\n  t['beta'] = 0x03B2;\\n  t['betasymbolgreek'] = 0x03D0;\\n  t['betdagesh'] = 0xFB31;\\n  t['betdageshhebrew'] = 0xFB31;\\n  t['bethebrew'] = 0x05D1;\\n  t['betrafehebrew'] = 0xFB4C;\\n  t['bhabengali'] = 0x09AD;\\n  t['bhadeva'] = 0x092D;\\n  t['bhagujarati'] = 0x0AAD;\\n  t['bhagurmukhi'] = 0x0A2D;\\n  t['bhook'] = 0x0253;\\n  t['bihiragana'] = 0x3073;\\n  t['bikatakana'] = 0x30D3;\\n  t['bilabialclick'] = 0x0298;\\n  t['bindigurmukhi'] = 0x0A02;\\n  t['birusquare'] = 0x3331;\\n  t['blackcircle'] = 0x25CF;\\n  t['blackdiamond'] = 0x25C6;\\n  t['blackdownpointingtriangle'] = 0x25BC;\\n  t['blackleftpointingpointer'] = 0x25C4;\\n  t['blackleftpointingtriangle'] = 0x25C0;\\n  t['blacklenticularbracketleft'] = 0x3010;\\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\\n  t['blacklenticularbracketright'] = 0x3011;\\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\\n  t['blacklowerlefttriangle'] = 0x25E3;\\n  t['blacklowerrighttriangle'] = 0x25E2;\\n  t['blackrectangle'] = 0x25AC;\\n  t['blackrightpointingpointer'] = 0x25BA;\\n  t['blackrightpointingtriangle'] = 0x25B6;\\n  t['blacksmallsquare'] = 0x25AA;\\n  t['blacksmilingface'] = 0x263B;\\n  t['blacksquare'] = 0x25A0;\\n  t['blackstar'] = 0x2605;\\n  t['blackupperlefttriangle'] = 0x25E4;\\n  t['blackupperrighttriangle'] = 0x25E5;\\n  t['blackuppointingsmalltriangle'] = 0x25B4;\\n  t['blackuppointingtriangle'] = 0x25B2;\\n  t['blank'] = 0x2423;\\n  t['blinebelow'] = 0x1E07;\\n  t['block'] = 0x2588;\\n  t['bmonospace'] = 0xFF42;\\n  t['bobaimaithai'] = 0x0E1A;\\n  t['bohiragana'] = 0x307C;\\n  t['bokatakana'] = 0x30DC;\\n  t['bparen'] = 0x249D;\\n  t['bqsquare'] = 0x33C3;\\n  t['braceex'] = 0xF8F4;\\n  t['braceleft'] = 0x007B;\\n  t['braceleftbt'] = 0xF8F3;\\n  t['braceleftmid'] = 0xF8F2;\\n  t['braceleftmonospace'] = 0xFF5B;\\n  t['braceleftsmall'] = 0xFE5B;\\n  t['bracelefttp'] = 0xF8F1;\\n  t['braceleftvertical'] = 0xFE37;\\n  t['braceright'] = 0x007D;\\n  t['bracerightbt'] = 0xF8FE;\\n  t['bracerightmid'] = 0xF8FD;\\n  t['bracerightmonospace'] = 0xFF5D;\\n  t['bracerightsmall'] = 0xFE5C;\\n  t['bracerighttp'] = 0xF8FC;\\n  t['bracerightvertical'] = 0xFE38;\\n  t['bracketleft'] = 0x005B;\\n  t['bracketleftbt'] = 0xF8F0;\\n  t['bracketleftex'] = 0xF8EF;\\n  t['bracketleftmonospace'] = 0xFF3B;\\n  t['bracketlefttp'] = 0xF8EE;\\n  t['bracketright'] = 0x005D;\\n  t['bracketrightbt'] = 0xF8FB;\\n  t['bracketrightex'] = 0xF8FA;\\n  t['bracketrightmonospace'] = 0xFF3D;\\n  t['bracketrighttp'] = 0xF8F9;\\n  t['breve'] = 0x02D8;\\n  t['brevebelowcmb'] = 0x032E;\\n  t['brevecmb'] = 0x0306;\\n  t['breveinvertedbelowcmb'] = 0x032F;\\n  t['breveinvertedcmb'] = 0x0311;\\n  t['breveinverteddoublecmb'] = 0x0361;\\n  t['bridgebelowcmb'] = 0x032A;\\n  t['bridgeinvertedbelowcmb'] = 0x033A;\\n  t['brokenbar'] = 0x00A6;\\n  t['bstroke'] = 0x0180;\\n  t['bsuperior'] = 0xF6EA;\\n  t['btopbar'] = 0x0183;\\n  t['buhiragana'] = 0x3076;\\n  t['bukatakana'] = 0x30D6;\\n  t['bullet'] = 0x2022;\\n  t['bulletinverse'] = 0x25D8;\\n  t['bulletoperator'] = 0x2219;\\n  t['bullseye'] = 0x25CE;\\n  t['c'] = 0x0063;\\n  t['caarmenian'] = 0x056E;\\n  t['cabengali'] = 0x099A;\\n  t['cacute'] = 0x0107;\\n  t['cadeva'] = 0x091A;\\n  t['cagujarati'] = 0x0A9A;\\n  t['cagurmukhi'] = 0x0A1A;\\n  t['calsquare'] = 0x3388;\\n  t['candrabindubengali'] = 0x0981;\\n  t['candrabinducmb'] = 0x0310;\\n  t['candrabindudeva'] = 0x0901;\\n  t['candrabindugujarati'] = 0x0A81;\\n  t['capslock'] = 0x21EA;\\n  t['careof'] = 0x2105;\\n  t['caron'] = 0x02C7;\\n  t['caronbelowcmb'] = 0x032C;\\n  t['caroncmb'] = 0x030C;\\n  t['carriagereturn'] = 0x21B5;\\n  t['cbopomofo'] = 0x3118;\\n  t['ccaron'] = 0x010D;\\n  t['ccedilla'] = 0x00E7;\\n  t['ccedillaacute'] = 0x1E09;\\n  t['ccircle'] = 0x24D2;\\n  t['ccircumflex'] = 0x0109;\\n  t['ccurl'] = 0x0255;\\n  t['cdot'] = 0x010B;\\n  t['cdotaccent'] = 0x010B;\\n  t['cdsquare'] = 0x33C5;\\n  t['cedilla'] = 0x00B8;\\n  t['cedillacmb'] = 0x0327;\\n  t['cent'] = 0x00A2;\\n  t['centigrade'] = 0x2103;\\n  t['centinferior'] = 0xF6DF;\\n  t['centmonospace'] = 0xFFE0;\\n  t['centoldstyle'] = 0xF7A2;\\n  t['centsuperior'] = 0xF6E0;\\n  t['chaarmenian'] = 0x0579;\\n  t['chabengali'] = 0x099B;\\n  t['chadeva'] = 0x091B;\\n  t['chagujarati'] = 0x0A9B;\\n  t['chagurmukhi'] = 0x0A1B;\\n  t['chbopomofo'] = 0x3114;\\n  t['cheabkhasiancyrillic'] = 0x04BD;\\n  t['checkmark'] = 0x2713;\\n  t['checyrillic'] = 0x0447;\\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\\n  t['chedescendercyrillic'] = 0x04B7;\\n  t['chedieresiscyrillic'] = 0x04F5;\\n  t['cheharmenian'] = 0x0573;\\n  t['chekhakassiancyrillic'] = 0x04CC;\\n  t['cheverticalstrokecyrillic'] = 0x04B9;\\n  t['chi'] = 0x03C7;\\n  t['chieuchacirclekorean'] = 0x3277;\\n  t['chieuchaparenkorean'] = 0x3217;\\n  t['chieuchcirclekorean'] = 0x3269;\\n  t['chieuchkorean'] = 0x314A;\\n  t['chieuchparenkorean'] = 0x3209;\\n  t['chochangthai'] = 0x0E0A;\\n  t['chochanthai'] = 0x0E08;\\n  t['chochingthai'] = 0x0E09;\\n  t['chochoethai'] = 0x0E0C;\\n  t['chook'] = 0x0188;\\n  t['cieucacirclekorean'] = 0x3276;\\n  t['cieucaparenkorean'] = 0x3216;\\n  t['cieuccirclekorean'] = 0x3268;\\n  t['cieuckorean'] = 0x3148;\\n  t['cieucparenkorean'] = 0x3208;\\n  t['cieucuparenkorean'] = 0x321C;\\n  t['circle'] = 0x25CB;\\n  t['circlecopyrt'] = 0x00A9;\\n  t['circlemultiply'] = 0x2297;\\n  t['circleot'] = 0x2299;\\n  t['circleplus'] = 0x2295;\\n  t['circlepostalmark'] = 0x3036;\\n  t['circlewithlefthalfblack'] = 0x25D0;\\n  t['circlewithrighthalfblack'] = 0x25D1;\\n  t['circumflex'] = 0x02C6;\\n  t['circumflexbelowcmb'] = 0x032D;\\n  t['circumflexcmb'] = 0x0302;\\n  t['clear'] = 0x2327;\\n  t['clickalveolar'] = 0x01C2;\\n  t['clickdental'] = 0x01C0;\\n  t['clicklateral'] = 0x01C1;\\n  t['clickretroflex'] = 0x01C3;\\n  t['club'] = 0x2663;\\n  t['clubsuitblack'] = 0x2663;\\n  t['clubsuitwhite'] = 0x2667;\\n  t['cmcubedsquare'] = 0x33A4;\\n  t['cmonospace'] = 0xFF43;\\n  t['cmsquaredsquare'] = 0x33A0;\\n  t['coarmenian'] = 0x0581;\\n  t['colon'] = 0x003A;\\n  t['colonmonetary'] = 0x20A1;\\n  t['colonmonospace'] = 0xFF1A;\\n  t['colonsign'] = 0x20A1;\\n  t['colonsmall'] = 0xFE55;\\n  t['colontriangularhalfmod'] = 0x02D1;\\n  t['colontriangularmod'] = 0x02D0;\\n  t['comma'] = 0x002C;\\n  t['commaabovecmb'] = 0x0313;\\n  t['commaaboverightcmb'] = 0x0315;\\n  t['commaaccent'] = 0xF6C3;\\n  t['commaarabic'] = 0x060C;\\n  t['commaarmenian'] = 0x055D;\\n  t['commainferior'] = 0xF6E1;\\n  t['commamonospace'] = 0xFF0C;\\n  t['commareversedabovecmb'] = 0x0314;\\n  t['commareversedmod'] = 0x02BD;\\n  t['commasmall'] = 0xFE50;\\n  t['commasuperior'] = 0xF6E2;\\n  t['commaturnedabovecmb'] = 0x0312;\\n  t['commaturnedmod'] = 0x02BB;\\n  t['compass'] = 0x263C;\\n  t['congruent'] = 0x2245;\\n  t['contourintegral'] = 0x222E;\\n  t['control'] = 0x2303;\\n  t['controlACK'] = 0x0006;\\n  t['controlBEL'] = 0x0007;\\n  t['controlBS'] = 0x0008;\\n  t['controlCAN'] = 0x0018;\\n  t['controlCR'] = 0x000D;\\n  t['controlDC1'] = 0x0011;\\n  t['controlDC2'] = 0x0012;\\n  t['controlDC3'] = 0x0013;\\n  t['controlDC4'] = 0x0014;\\n  t['controlDEL'] = 0x007F;\\n  t['controlDLE'] = 0x0010;\\n  t['controlEM'] = 0x0019;\\n  t['controlENQ'] = 0x0005;\\n  t['controlEOT'] = 0x0004;\\n  t['controlESC'] = 0x001B;\\n  t['controlETB'] = 0x0017;\\n  t['controlETX'] = 0x0003;\\n  t['controlFF'] = 0x000C;\\n  t['controlFS'] = 0x001C;\\n  t['controlGS'] = 0x001D;\\n  t['controlHT'] = 0x0009;\\n  t['controlLF'] = 0x000A;\\n  t['controlNAK'] = 0x0015;\\n  t['controlNULL'] = 0x0000;\\n  t['controlRS'] = 0x001E;\\n  t['controlSI'] = 0x000F;\\n  t['controlSO'] = 0x000E;\\n  t['controlSOT'] = 0x0002;\\n  t['controlSTX'] = 0x0001;\\n  t['controlSUB'] = 0x001A;\\n  t['controlSYN'] = 0x0016;\\n  t['controlUS'] = 0x001F;\\n  t['controlVT'] = 0x000B;\\n  t['copyright'] = 0x00A9;\\n  t['copyrightsans'] = 0xF8E9;\\n  t['copyrightserif'] = 0xF6D9;\\n  t['cornerbracketleft'] = 0x300C;\\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\\n  t['cornerbracketleftvertical'] = 0xFE41;\\n  t['cornerbracketright'] = 0x300D;\\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\\n  t['cornerbracketrightvertical'] = 0xFE42;\\n  t['corporationsquare'] = 0x337F;\\n  t['cosquare'] = 0x33C7;\\n  t['coverkgsquare'] = 0x33C6;\\n  t['cparen'] = 0x249E;\\n  t['cruzeiro'] = 0x20A2;\\n  t['cstretched'] = 0x0297;\\n  t['curlyand'] = 0x22CF;\\n  t['curlyor'] = 0x22CE;\\n  t['currency'] = 0x00A4;\\n  t['cyrBreve'] = 0xF6D1;\\n  t['cyrFlex'] = 0xF6D2;\\n  t['cyrbreve'] = 0xF6D4;\\n  t['cyrflex'] = 0xF6D5;\\n  t['d'] = 0x0064;\\n  t['daarmenian'] = 0x0564;\\n  t['dabengali'] = 0x09A6;\\n  t['dadarabic'] = 0x0636;\\n  t['dadeva'] = 0x0926;\\n  t['dadfinalarabic'] = 0xFEBE;\\n  t['dadinitialarabic'] = 0xFEBF;\\n  t['dadmedialarabic'] = 0xFEC0;\\n  t['dagesh'] = 0x05BC;\\n  t['dageshhebrew'] = 0x05BC;\\n  t['dagger'] = 0x2020;\\n  t['daggerdbl'] = 0x2021;\\n  t['dagujarati'] = 0x0AA6;\\n  t['dagurmukhi'] = 0x0A26;\\n  t['dahiragana'] = 0x3060;\\n  t['dakatakana'] = 0x30C0;\\n  t['dalarabic'] = 0x062F;\\n  t['dalet'] = 0x05D3;\\n  t['daletdagesh'] = 0xFB33;\\n  t['daletdageshhebrew'] = 0xFB33;\\n  t['dalethebrew'] = 0x05D3;\\n  t['dalfinalarabic'] = 0xFEAA;\\n  t['dammaarabic'] = 0x064F;\\n  t['dammalowarabic'] = 0x064F;\\n  t['dammatanaltonearabic'] = 0x064C;\\n  t['dammatanarabic'] = 0x064C;\\n  t['danda'] = 0x0964;\\n  t['dargahebrew'] = 0x05A7;\\n  t['dargalefthebrew'] = 0x05A7;\\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\\n  t['dblGrave'] = 0xF6D3;\\n  t['dblanglebracketleft'] = 0x300A;\\n  t['dblanglebracketleftvertical'] = 0xFE3D;\\n  t['dblanglebracketright'] = 0x300B;\\n  t['dblanglebracketrightvertical'] = 0xFE3E;\\n  t['dblarchinvertedbelowcmb'] = 0x032B;\\n  t['dblarrowleft'] = 0x21D4;\\n  t['dblarrowright'] = 0x21D2;\\n  t['dbldanda'] = 0x0965;\\n  t['dblgrave'] = 0xF6D6;\\n  t['dblgravecmb'] = 0x030F;\\n  t['dblintegral'] = 0x222C;\\n  t['dbllowline'] = 0x2017;\\n  t['dbllowlinecmb'] = 0x0333;\\n  t['dbloverlinecmb'] = 0x033F;\\n  t['dblprimemod'] = 0x02BA;\\n  t['dblverticalbar'] = 0x2016;\\n  t['dblverticallineabovecmb'] = 0x030E;\\n  t['dbopomofo'] = 0x3109;\\n  t['dbsquare'] = 0x33C8;\\n  t['dcaron'] = 0x010F;\\n  t['dcedilla'] = 0x1E11;\\n  t['dcircle'] = 0x24D3;\\n  t['dcircumflexbelow'] = 0x1E13;\\n  t['dcroat'] = 0x0111;\\n  t['ddabengali'] = 0x09A1;\\n  t['ddadeva'] = 0x0921;\\n  t['ddagujarati'] = 0x0AA1;\\n  t['ddagurmukhi'] = 0x0A21;\\n  t['ddalarabic'] = 0x0688;\\n  t['ddalfinalarabic'] = 0xFB89;\\n  t['dddhadeva'] = 0x095C;\\n  t['ddhabengali'] = 0x09A2;\\n  t['ddhadeva'] = 0x0922;\\n  t['ddhagujarati'] = 0x0AA2;\\n  t['ddhagurmukhi'] = 0x0A22;\\n  t['ddotaccent'] = 0x1E0B;\\n  t['ddotbelow'] = 0x1E0D;\\n  t['decimalseparatorarabic'] = 0x066B;\\n  t['decimalseparatorpersian'] = 0x066B;\\n  t['decyrillic'] = 0x0434;\\n  t['degree'] = 0x00B0;\\n  t['dehihebrew'] = 0x05AD;\\n  t['dehiragana'] = 0x3067;\\n  t['deicoptic'] = 0x03EF;\\n  t['dekatakana'] = 0x30C7;\\n  t['deleteleft'] = 0x232B;\\n  t['deleteright'] = 0x2326;\\n  t['delta'] = 0x03B4;\\n  t['deltaturned'] = 0x018D;\\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\\n  t['dezh'] = 0x02A4;\\n  t['dhabengali'] = 0x09A7;\\n  t['dhadeva'] = 0x0927;\\n  t['dhagujarati'] = 0x0AA7;\\n  t['dhagurmukhi'] = 0x0A27;\\n  t['dhook'] = 0x0257;\\n  t['dialytikatonos'] = 0x0385;\\n  t['dialytikatonoscmb'] = 0x0344;\\n  t['diamond'] = 0x2666;\\n  t['diamondsuitwhite'] = 0x2662;\\n  t['dieresis'] = 0x00A8;\\n  t['dieresisacute'] = 0xF6D7;\\n  t['dieresisbelowcmb'] = 0x0324;\\n  t['dieresiscmb'] = 0x0308;\\n  t['dieresisgrave'] = 0xF6D8;\\n  t['dieresistonos'] = 0x0385;\\n  t['dihiragana'] = 0x3062;\\n  t['dikatakana'] = 0x30C2;\\n  t['dittomark'] = 0x3003;\\n  t['divide'] = 0x00F7;\\n  t['divides'] = 0x2223;\\n  t['divisionslash'] = 0x2215;\\n  t['djecyrillic'] = 0x0452;\\n  t['dkshade'] = 0x2593;\\n  t['dlinebelow'] = 0x1E0F;\\n  t['dlsquare'] = 0x3397;\\n  t['dmacron'] = 0x0111;\\n  t['dmonospace'] = 0xFF44;\\n  t['dnblock'] = 0x2584;\\n  t['dochadathai'] = 0x0E0E;\\n  t['dodekthai'] = 0x0E14;\\n  t['dohiragana'] = 0x3069;\\n  t['dokatakana'] = 0x30C9;\\n  t['dollar'] = 0x0024;\\n  t['dollarinferior'] = 0xF6E3;\\n  t['dollarmonospace'] = 0xFF04;\\n  t['dollaroldstyle'] = 0xF724;\\n  t['dollarsmall'] = 0xFE69;\\n  t['dollarsuperior'] = 0xF6E4;\\n  t['dong'] = 0x20AB;\\n  t['dorusquare'] = 0x3326;\\n  t['dotaccent'] = 0x02D9;\\n  t['dotaccentcmb'] = 0x0307;\\n  t['dotbelowcmb'] = 0x0323;\\n  t['dotbelowcomb'] = 0x0323;\\n  t['dotkatakana'] = 0x30FB;\\n  t['dotlessi'] = 0x0131;\\n  t['dotlessj'] = 0xF6BE;\\n  t['dotlessjstrokehook'] = 0x0284;\\n  t['dotmath'] = 0x22C5;\\n  t['dottedcircle'] = 0x25CC;\\n  t['doubleyodpatah'] = 0xFB1F;\\n  t['doubleyodpatahhebrew'] = 0xFB1F;\\n  t['downtackbelowcmb'] = 0x031E;\\n  t['downtackmod'] = 0x02D5;\\n  t['dparen'] = 0x249F;\\n  t['dsuperior'] = 0xF6EB;\\n  t['dtail'] = 0x0256;\\n  t['dtopbar'] = 0x018C;\\n  t['duhiragana'] = 0x3065;\\n  t['dukatakana'] = 0x30C5;\\n  t['dz'] = 0x01F3;\\n  t['dzaltone'] = 0x02A3;\\n  t['dzcaron'] = 0x01C6;\\n  t['dzcurl'] = 0x02A5;\\n  t['dzeabkhasiancyrillic'] = 0x04E1;\\n  t['dzecyrillic'] = 0x0455;\\n  t['dzhecyrillic'] = 0x045F;\\n  t['e'] = 0x0065;\\n  t['eacute'] = 0x00E9;\\n  t['earth'] = 0x2641;\\n  t['ebengali'] = 0x098F;\\n  t['ebopomofo'] = 0x311C;\\n  t['ebreve'] = 0x0115;\\n  t['ecandradeva'] = 0x090D;\\n  t['ecandragujarati'] = 0x0A8D;\\n  t['ecandravowelsigndeva'] = 0x0945;\\n  t['ecandravowelsigngujarati'] = 0x0AC5;\\n  t['ecaron'] = 0x011B;\\n  t['ecedillabreve'] = 0x1E1D;\\n  t['echarmenian'] = 0x0565;\\n  t['echyiwnarmenian'] = 0x0587;\\n  t['ecircle'] = 0x24D4;\\n  t['ecircumflex'] = 0x00EA;\\n  t['ecircumflexacute'] = 0x1EBF;\\n  t['ecircumflexbelow'] = 0x1E19;\\n  t['ecircumflexdotbelow'] = 0x1EC7;\\n  t['ecircumflexgrave'] = 0x1EC1;\\n  t['ecircumflexhookabove'] = 0x1EC3;\\n  t['ecircumflextilde'] = 0x1EC5;\\n  t['ecyrillic'] = 0x0454;\\n  t['edblgrave'] = 0x0205;\\n  t['edeva'] = 0x090F;\\n  t['edieresis'] = 0x00EB;\\n  t['edot'] = 0x0117;\\n  t['edotaccent'] = 0x0117;\\n  t['edotbelow'] = 0x1EB9;\\n  t['eegurmukhi'] = 0x0A0F;\\n  t['eematragurmukhi'] = 0x0A47;\\n  t['efcyrillic'] = 0x0444;\\n  t['egrave'] = 0x00E8;\\n  t['egujarati'] = 0x0A8F;\\n  t['eharmenian'] = 0x0567;\\n  t['ehbopomofo'] = 0x311D;\\n  t['ehiragana'] = 0x3048;\\n  t['ehookabove'] = 0x1EBB;\\n  t['eibopomofo'] = 0x311F;\\n  t['eight'] = 0x0038;\\n  t['eightarabic'] = 0x0668;\\n  t['eightbengali'] = 0x09EE;\\n  t['eightcircle'] = 0x2467;\\n  t['eightcircleinversesansserif'] = 0x2791;\\n  t['eightdeva'] = 0x096E;\\n  t['eighteencircle'] = 0x2471;\\n  t['eighteenparen'] = 0x2485;\\n  t['eighteenperiod'] = 0x2499;\\n  t['eightgujarati'] = 0x0AEE;\\n  t['eightgurmukhi'] = 0x0A6E;\\n  t['eighthackarabic'] = 0x0668;\\n  t['eighthangzhou'] = 0x3028;\\n  t['eighthnotebeamed'] = 0x266B;\\n  t['eightideographicparen'] = 0x3227;\\n  t['eightinferior'] = 0x2088;\\n  t['eightmonospace'] = 0xFF18;\\n  t['eightoldstyle'] = 0xF738;\\n  t['eightparen'] = 0x247B;\\n  t['eightperiod'] = 0x248F;\\n  t['eightpersian'] = 0x06F8;\\n  t['eightroman'] = 0x2177;\\n  t['eightsuperior'] = 0x2078;\\n  t['eightthai'] = 0x0E58;\\n  t['einvertedbreve'] = 0x0207;\\n  t['eiotifiedcyrillic'] = 0x0465;\\n  t['ekatakana'] = 0x30A8;\\n  t['ekatakanahalfwidth'] = 0xFF74;\\n  t['ekonkargurmukhi'] = 0x0A74;\\n  t['ekorean'] = 0x3154;\\n  t['elcyrillic'] = 0x043B;\\n  t['element'] = 0x2208;\\n  t['elevencircle'] = 0x246A;\\n  t['elevenparen'] = 0x247E;\\n  t['elevenperiod'] = 0x2492;\\n  t['elevenroman'] = 0x217A;\\n  t['ellipsis'] = 0x2026;\\n  t['ellipsisvertical'] = 0x22EE;\\n  t['emacron'] = 0x0113;\\n  t['emacronacute'] = 0x1E17;\\n  t['emacrongrave'] = 0x1E15;\\n  t['emcyrillic'] = 0x043C;\\n  t['emdash'] = 0x2014;\\n  t['emdashvertical'] = 0xFE31;\\n  t['emonospace'] = 0xFF45;\\n  t['emphasismarkarmenian'] = 0x055B;\\n  t['emptyset'] = 0x2205;\\n  t['enbopomofo'] = 0x3123;\\n  t['encyrillic'] = 0x043D;\\n  t['endash'] = 0x2013;\\n  t['endashvertical'] = 0xFE32;\\n  t['endescendercyrillic'] = 0x04A3;\\n  t['eng'] = 0x014B;\\n  t['engbopomofo'] = 0x3125;\\n  t['enghecyrillic'] = 0x04A5;\\n  t['enhookcyrillic'] = 0x04C8;\\n  t['enspace'] = 0x2002;\\n  t['eogonek'] = 0x0119;\\n  t['eokorean'] = 0x3153;\\n  t['eopen'] = 0x025B;\\n  t['eopenclosed'] = 0x029A;\\n  t['eopenreversed'] = 0x025C;\\n  t['eopenreversedclosed'] = 0x025E;\\n  t['eopenreversedhook'] = 0x025D;\\n  t['eparen'] = 0x24A0;\\n  t['epsilon'] = 0x03B5;\\n  t['epsilontonos'] = 0x03AD;\\n  t['equal'] = 0x003D;\\n  t['equalmonospace'] = 0xFF1D;\\n  t['equalsmall'] = 0xFE66;\\n  t['equalsuperior'] = 0x207C;\\n  t['equivalence'] = 0x2261;\\n  t['erbopomofo'] = 0x3126;\\n  t['ercyrillic'] = 0x0440;\\n  t['ereversed'] = 0x0258;\\n  t['ereversedcyrillic'] = 0x044D;\\n  t['escyrillic'] = 0x0441;\\n  t['esdescendercyrillic'] = 0x04AB;\\n  t['esh'] = 0x0283;\\n  t['eshcurl'] = 0x0286;\\n  t['eshortdeva'] = 0x090E;\\n  t['eshortvowelsigndeva'] = 0x0946;\\n  t['eshreversedloop'] = 0x01AA;\\n  t['eshsquatreversed'] = 0x0285;\\n  t['esmallhiragana'] = 0x3047;\\n  t['esmallkatakana'] = 0x30A7;\\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\\n  t['estimated'] = 0x212E;\\n  t['esuperior'] = 0xF6EC;\\n  t['eta'] = 0x03B7;\\n  t['etarmenian'] = 0x0568;\\n  t['etatonos'] = 0x03AE;\\n  t['eth'] = 0x00F0;\\n  t['etilde'] = 0x1EBD;\\n  t['etildebelow'] = 0x1E1B;\\n  t['etnahtafoukhhebrew'] = 0x0591;\\n  t['etnahtafoukhlefthebrew'] = 0x0591;\\n  t['etnahtahebrew'] = 0x0591;\\n  t['etnahtalefthebrew'] = 0x0591;\\n  t['eturned'] = 0x01DD;\\n  t['eukorean'] = 0x3161;\\n  t['euro'] = 0x20AC;\\n  t['evowelsignbengali'] = 0x09C7;\\n  t['evowelsigndeva'] = 0x0947;\\n  t['evowelsigngujarati'] = 0x0AC7;\\n  t['exclam'] = 0x0021;\\n  t['exclamarmenian'] = 0x055C;\\n  t['exclamdbl'] = 0x203C;\\n  t['exclamdown'] = 0x00A1;\\n  t['exclamdownsmall'] = 0xF7A1;\\n  t['exclammonospace'] = 0xFF01;\\n  t['exclamsmall'] = 0xF721;\\n  t['existential'] = 0x2203;\\n  t['ezh'] = 0x0292;\\n  t['ezhcaron'] = 0x01EF;\\n  t['ezhcurl'] = 0x0293;\\n  t['ezhreversed'] = 0x01B9;\\n  t['ezhtail'] = 0x01BA;\\n  t['f'] = 0x0066;\\n  t['fadeva'] = 0x095E;\\n  t['fagurmukhi'] = 0x0A5E;\\n  t['fahrenheit'] = 0x2109;\\n  t['fathaarabic'] = 0x064E;\\n  t['fathalowarabic'] = 0x064E;\\n  t['fathatanarabic'] = 0x064B;\\n  t['fbopomofo'] = 0x3108;\\n  t['fcircle'] = 0x24D5;\\n  t['fdotaccent'] = 0x1E1F;\\n  t['feharabic'] = 0x0641;\\n  t['feharmenian'] = 0x0586;\\n  t['fehfinalarabic'] = 0xFED2;\\n  t['fehinitialarabic'] = 0xFED3;\\n  t['fehmedialarabic'] = 0xFED4;\\n  t['feicoptic'] = 0x03E5;\\n  t['female'] = 0x2640;\\n  t['ff'] = 0xFB00;\\n  t['ffi'] = 0xFB03;\\n  t['ffl'] = 0xFB04;\\n  t['fi'] = 0xFB01;\\n  t['fifteencircle'] = 0x246E;\\n  t['fifteenparen'] = 0x2482;\\n  t['fifteenperiod'] = 0x2496;\\n  t['figuredash'] = 0x2012;\\n  t['filledbox'] = 0x25A0;\\n  t['filledrect'] = 0x25AC;\\n  t['finalkaf'] = 0x05DA;\\n  t['finalkafdagesh'] = 0xFB3A;\\n  t['finalkafdageshhebrew'] = 0xFB3A;\\n  t['finalkafhebrew'] = 0x05DA;\\n  t['finalmem'] = 0x05DD;\\n  t['finalmemhebrew'] = 0x05DD;\\n  t['finalnun'] = 0x05DF;\\n  t['finalnunhebrew'] = 0x05DF;\\n  t['finalpe'] = 0x05E3;\\n  t['finalpehebrew'] = 0x05E3;\\n  t['finaltsadi'] = 0x05E5;\\n  t['finaltsadihebrew'] = 0x05E5;\\n  t['firsttonechinese'] = 0x02C9;\\n  t['fisheye'] = 0x25C9;\\n  t['fitacyrillic'] = 0x0473;\\n  t['five'] = 0x0035;\\n  t['fivearabic'] = 0x0665;\\n  t['fivebengali'] = 0x09EB;\\n  t['fivecircle'] = 0x2464;\\n  t['fivecircleinversesansserif'] = 0x278E;\\n  t['fivedeva'] = 0x096B;\\n  t['fiveeighths'] = 0x215D;\\n  t['fivegujarati'] = 0x0AEB;\\n  t['fivegurmukhi'] = 0x0A6B;\\n  t['fivehackarabic'] = 0x0665;\\n  t['fivehangzhou'] = 0x3025;\\n  t['fiveideographicparen'] = 0x3224;\\n  t['fiveinferior'] = 0x2085;\\n  t['fivemonospace'] = 0xFF15;\\n  t['fiveoldstyle'] = 0xF735;\\n  t['fiveparen'] = 0x2478;\\n  t['fiveperiod'] = 0x248C;\\n  t['fivepersian'] = 0x06F5;\\n  t['fiveroman'] = 0x2174;\\n  t['fivesuperior'] = 0x2075;\\n  t['fivethai'] = 0x0E55;\\n  t['fl'] = 0xFB02;\\n  t['florin'] = 0x0192;\\n  t['fmonospace'] = 0xFF46;\\n  t['fmsquare'] = 0x3399;\\n  t['fofanthai'] = 0x0E1F;\\n  t['fofathai'] = 0x0E1D;\\n  t['fongmanthai'] = 0x0E4F;\\n  t['forall'] = 0x2200;\\n  t['four'] = 0x0034;\\n  t['fourarabic'] = 0x0664;\\n  t['fourbengali'] = 0x09EA;\\n  t['fourcircle'] = 0x2463;\\n  t['fourcircleinversesansserif'] = 0x278D;\\n  t['fourdeva'] = 0x096A;\\n  t['fourgujarati'] = 0x0AEA;\\n  t['fourgurmukhi'] = 0x0A6A;\\n  t['fourhackarabic'] = 0x0664;\\n  t['fourhangzhou'] = 0x3024;\\n  t['fourideographicparen'] = 0x3223;\\n  t['fourinferior'] = 0x2084;\\n  t['fourmonospace'] = 0xFF14;\\n  t['fournumeratorbengali'] = 0x09F7;\\n  t['fouroldstyle'] = 0xF734;\\n  t['fourparen'] = 0x2477;\\n  t['fourperiod'] = 0x248B;\\n  t['fourpersian'] = 0x06F4;\\n  t['fourroman'] = 0x2173;\\n  t['foursuperior'] = 0x2074;\\n  t['fourteencircle'] = 0x246D;\\n  t['fourteenparen'] = 0x2481;\\n  t['fourteenperiod'] = 0x2495;\\n  t['fourthai'] = 0x0E54;\\n  t['fourthtonechinese'] = 0x02CB;\\n  t['fparen'] = 0x24A1;\\n  t['fraction'] = 0x2044;\\n  t['franc'] = 0x20A3;\\n  t['g'] = 0x0067;\\n  t['gabengali'] = 0x0997;\\n  t['gacute'] = 0x01F5;\\n  t['gadeva'] = 0x0917;\\n  t['gafarabic'] = 0x06AF;\\n  t['gaffinalarabic'] = 0xFB93;\\n  t['gafinitialarabic'] = 0xFB94;\\n  t['gafmedialarabic'] = 0xFB95;\\n  t['gagujarati'] = 0x0A97;\\n  t['gagurmukhi'] = 0x0A17;\\n  t['gahiragana'] = 0x304C;\\n  t['gakatakana'] = 0x30AC;\\n  t['gamma'] = 0x03B3;\\n  t['gammalatinsmall'] = 0x0263;\\n  t['gammasuperior'] = 0x02E0;\\n  t['gangiacoptic'] = 0x03EB;\\n  t['gbopomofo'] = 0x310D;\\n  t['gbreve'] = 0x011F;\\n  t['gcaron'] = 0x01E7;\\n  t['gcedilla'] = 0x0123;\\n  t['gcircle'] = 0x24D6;\\n  t['gcircumflex'] = 0x011D;\\n  t['gcommaaccent'] = 0x0123;\\n  t['gdot'] = 0x0121;\\n  t['gdotaccent'] = 0x0121;\\n  t['gecyrillic'] = 0x0433;\\n  t['gehiragana'] = 0x3052;\\n  t['gekatakana'] = 0x30B2;\\n  t['geometricallyequal'] = 0x2251;\\n  t['gereshaccenthebrew'] = 0x059C;\\n  t['gereshhebrew'] = 0x05F3;\\n  t['gereshmuqdamhebrew'] = 0x059D;\\n  t['germandbls'] = 0x00DF;\\n  t['gershayimaccenthebrew'] = 0x059E;\\n  t['gershayimhebrew'] = 0x05F4;\\n  t['getamark'] = 0x3013;\\n  t['ghabengali'] = 0x0998;\\n  t['ghadarmenian'] = 0x0572;\\n  t['ghadeva'] = 0x0918;\\n  t['ghagujarati'] = 0x0A98;\\n  t['ghagurmukhi'] = 0x0A18;\\n  t['ghainarabic'] = 0x063A;\\n  t['ghainfinalarabic'] = 0xFECE;\\n  t['ghaininitialarabic'] = 0xFECF;\\n  t['ghainmedialarabic'] = 0xFED0;\\n  t['ghemiddlehookcyrillic'] = 0x0495;\\n  t['ghestrokecyrillic'] = 0x0493;\\n  t['gheupturncyrillic'] = 0x0491;\\n  t['ghhadeva'] = 0x095A;\\n  t['ghhagurmukhi'] = 0x0A5A;\\n  t['ghook'] = 0x0260;\\n  t['ghzsquare'] = 0x3393;\\n  t['gihiragana'] = 0x304E;\\n  t['gikatakana'] = 0x30AE;\\n  t['gimarmenian'] = 0x0563;\\n  t['gimel'] = 0x05D2;\\n  t['gimeldagesh'] = 0xFB32;\\n  t['gimeldageshhebrew'] = 0xFB32;\\n  t['gimelhebrew'] = 0x05D2;\\n  t['gjecyrillic'] = 0x0453;\\n  t['glottalinvertedstroke'] = 0x01BE;\\n  t['glottalstop'] = 0x0294;\\n  t['glottalstopinverted'] = 0x0296;\\n  t['glottalstopmod'] = 0x02C0;\\n  t['glottalstopreversed'] = 0x0295;\\n  t['glottalstopreversedmod'] = 0x02C1;\\n  t['glottalstopreversedsuperior'] = 0x02E4;\\n  t['glottalstopstroke'] = 0x02A1;\\n  t['glottalstopstrokereversed'] = 0x02A2;\\n  t['gmacron'] = 0x1E21;\\n  t['gmonospace'] = 0xFF47;\\n  t['gohiragana'] = 0x3054;\\n  t['gokatakana'] = 0x30B4;\\n  t['gparen'] = 0x24A2;\\n  t['gpasquare'] = 0x33AC;\\n  t['gradient'] = 0x2207;\\n  t['grave'] = 0x0060;\\n  t['gravebelowcmb'] = 0x0316;\\n  t['gravecmb'] = 0x0300;\\n  t['gravecomb'] = 0x0300;\\n  t['gravedeva'] = 0x0953;\\n  t['gravelowmod'] = 0x02CE;\\n  t['gravemonospace'] = 0xFF40;\\n  t['gravetonecmb'] = 0x0340;\\n  t['greater'] = 0x003E;\\n  t['greaterequal'] = 0x2265;\\n  t['greaterequalorless'] = 0x22DB;\\n  t['greatermonospace'] = 0xFF1E;\\n  t['greaterorequivalent'] = 0x2273;\\n  t['greaterorless'] = 0x2277;\\n  t['greateroverequal'] = 0x2267;\\n  t['greatersmall'] = 0xFE65;\\n  t['gscript'] = 0x0261;\\n  t['gstroke'] = 0x01E5;\\n  t['guhiragana'] = 0x3050;\\n  t['guillemotleft'] = 0x00AB;\\n  t['guillemotright'] = 0x00BB;\\n  t['guilsinglleft'] = 0x2039;\\n  t['guilsinglright'] = 0x203A;\\n  t['gukatakana'] = 0x30B0;\\n  t['guramusquare'] = 0x3318;\\n  t['gysquare'] = 0x33C9;\\n  t['h'] = 0x0068;\\n  t['haabkhasiancyrillic'] = 0x04A9;\\n  t['haaltonearabic'] = 0x06C1;\\n  t['habengali'] = 0x09B9;\\n  t['hadescendercyrillic'] = 0x04B3;\\n  t['hadeva'] = 0x0939;\\n  t['hagujarati'] = 0x0AB9;\\n  t['hagurmukhi'] = 0x0A39;\\n  t['haharabic'] = 0x062D;\\n  t['hahfinalarabic'] = 0xFEA2;\\n  t['hahinitialarabic'] = 0xFEA3;\\n  t['hahiragana'] = 0x306F;\\n  t['hahmedialarabic'] = 0xFEA4;\\n  t['haitusquare'] = 0x332A;\\n  t['hakatakana'] = 0x30CF;\\n  t['hakatakanahalfwidth'] = 0xFF8A;\\n  t['halantgurmukhi'] = 0x0A4D;\\n  t['hamzaarabic'] = 0x0621;\\n  t['hamzalowarabic'] = 0x0621;\\n  t['hangulfiller'] = 0x3164;\\n  t['hardsigncyrillic'] = 0x044A;\\n  t['harpoonleftbarbup'] = 0x21BC;\\n  t['harpoonrightbarbup'] = 0x21C0;\\n  t['hasquare'] = 0x33CA;\\n  t['hatafpatah'] = 0x05B2;\\n  t['hatafpatah16'] = 0x05B2;\\n  t['hatafpatah23'] = 0x05B2;\\n  t['hatafpatah2f'] = 0x05B2;\\n  t['hatafpatahhebrew'] = 0x05B2;\\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\\n  t['hatafpatahquarterhebrew'] = 0x05B2;\\n  t['hatafpatahwidehebrew'] = 0x05B2;\\n  t['hatafqamats'] = 0x05B3;\\n  t['hatafqamats1b'] = 0x05B3;\\n  t['hatafqamats28'] = 0x05B3;\\n  t['hatafqamats34'] = 0x05B3;\\n  t['hatafqamatshebrew'] = 0x05B3;\\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\\n  t['hatafqamatswidehebrew'] = 0x05B3;\\n  t['hatafsegol'] = 0x05B1;\\n  t['hatafsegol17'] = 0x05B1;\\n  t['hatafsegol24'] = 0x05B1;\\n  t['hatafsegol30'] = 0x05B1;\\n  t['hatafsegolhebrew'] = 0x05B1;\\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\\n  t['hatafsegolquarterhebrew'] = 0x05B1;\\n  t['hatafsegolwidehebrew'] = 0x05B1;\\n  t['hbar'] = 0x0127;\\n  t['hbopomofo'] = 0x310F;\\n  t['hbrevebelow'] = 0x1E2B;\\n  t['hcedilla'] = 0x1E29;\\n  t['hcircle'] = 0x24D7;\\n  t['hcircumflex'] = 0x0125;\\n  t['hdieresis'] = 0x1E27;\\n  t['hdotaccent'] = 0x1E23;\\n  t['hdotbelow'] = 0x1E25;\\n  t['he'] = 0x05D4;\\n  t['heart'] = 0x2665;\\n  t['heartsuitblack'] = 0x2665;\\n  t['heartsuitwhite'] = 0x2661;\\n  t['hedagesh'] = 0xFB34;\\n  t['hedageshhebrew'] = 0xFB34;\\n  t['hehaltonearabic'] = 0x06C1;\\n  t['heharabic'] = 0x0647;\\n  t['hehebrew'] = 0x05D4;\\n  t['hehfinalaltonearabic'] = 0xFBA7;\\n  t['hehfinalalttwoarabic'] = 0xFEEA;\\n  t['hehfinalarabic'] = 0xFEEA;\\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\\n  t['hehinitialaltonearabic'] = 0xFBA8;\\n  t['hehinitialarabic'] = 0xFEEB;\\n  t['hehiragana'] = 0x3078;\\n  t['hehmedialaltonearabic'] = 0xFBA9;\\n  t['hehmedialarabic'] = 0xFEEC;\\n  t['heiseierasquare'] = 0x337B;\\n  t['hekatakana'] = 0x30D8;\\n  t['hekatakanahalfwidth'] = 0xFF8D;\\n  t['hekutaarusquare'] = 0x3336;\\n  t['henghook'] = 0x0267;\\n  t['herutusquare'] = 0x3339;\\n  t['het'] = 0x05D7;\\n  t['hethebrew'] = 0x05D7;\\n  t['hhook'] = 0x0266;\\n  t['hhooksuperior'] = 0x02B1;\\n  t['hieuhacirclekorean'] = 0x327B;\\n  t['hieuhaparenkorean'] = 0x321B;\\n  t['hieuhcirclekorean'] = 0x326D;\\n  t['hieuhkorean'] = 0x314E;\\n  t['hieuhparenkorean'] = 0x320D;\\n  t['hihiragana'] = 0x3072;\\n  t['hikatakana'] = 0x30D2;\\n  t['hikatakanahalfwidth'] = 0xFF8B;\\n  t['hiriq'] = 0x05B4;\\n  t['hiriq14'] = 0x05B4;\\n  t['hiriq21'] = 0x05B4;\\n  t['hiriq2d'] = 0x05B4;\\n  t['hiriqhebrew'] = 0x05B4;\\n  t['hiriqnarrowhebrew'] = 0x05B4;\\n  t['hiriqquarterhebrew'] = 0x05B4;\\n  t['hiriqwidehebrew'] = 0x05B4;\\n  t['hlinebelow'] = 0x1E96;\\n  t['hmonospace'] = 0xFF48;\\n  t['hoarmenian'] = 0x0570;\\n  t['hohipthai'] = 0x0E2B;\\n  t['hohiragana'] = 0x307B;\\n  t['hokatakana'] = 0x30DB;\\n  t['hokatakanahalfwidth'] = 0xFF8E;\\n  t['holam'] = 0x05B9;\\n  t['holam19'] = 0x05B9;\\n  t['holam26'] = 0x05B9;\\n  t['holam32'] = 0x05B9;\\n  t['holamhebrew'] = 0x05B9;\\n  t['holamnarrowhebrew'] = 0x05B9;\\n  t['holamquarterhebrew'] = 0x05B9;\\n  t['holamwidehebrew'] = 0x05B9;\\n  t['honokhukthai'] = 0x0E2E;\\n  t['hookabovecomb'] = 0x0309;\\n  t['hookcmb'] = 0x0309;\\n  t['hookpalatalizedbelowcmb'] = 0x0321;\\n  t['hookretroflexbelowcmb'] = 0x0322;\\n  t['hoonsquare'] = 0x3342;\\n  t['horicoptic'] = 0x03E9;\\n  t['horizontalbar'] = 0x2015;\\n  t['horncmb'] = 0x031B;\\n  t['hotsprings'] = 0x2668;\\n  t['house'] = 0x2302;\\n  t['hparen'] = 0x24A3;\\n  t['hsuperior'] = 0x02B0;\\n  t['hturned'] = 0x0265;\\n  t['huhiragana'] = 0x3075;\\n  t['huiitosquare'] = 0x3333;\\n  t['hukatakana'] = 0x30D5;\\n  t['hukatakanahalfwidth'] = 0xFF8C;\\n  t['hungarumlaut'] = 0x02DD;\\n  t['hungarumlautcmb'] = 0x030B;\\n  t['hv'] = 0x0195;\\n  t['hyphen'] = 0x002D;\\n  t['hypheninferior'] = 0xF6E5;\\n  t['hyphenmonospace'] = 0xFF0D;\\n  t['hyphensmall'] = 0xFE63;\\n  t['hyphensuperior'] = 0xF6E6;\\n  t['hyphentwo'] = 0x2010;\\n  t['i'] = 0x0069;\\n  t['iacute'] = 0x00ED;\\n  t['iacyrillic'] = 0x044F;\\n  t['ibengali'] = 0x0987;\\n  t['ibopomofo'] = 0x3127;\\n  t['ibreve'] = 0x012D;\\n  t['icaron'] = 0x01D0;\\n  t['icircle'] = 0x24D8;\\n  t['icircumflex'] = 0x00EE;\\n  t['icyrillic'] = 0x0456;\\n  t['idblgrave'] = 0x0209;\\n  t['ideographearthcircle'] = 0x328F;\\n  t['ideographfirecircle'] = 0x328B;\\n  t['ideographicallianceparen'] = 0x323F;\\n  t['ideographiccallparen'] = 0x323A;\\n  t['ideographiccentrecircle'] = 0x32A5;\\n  t['ideographicclose'] = 0x3006;\\n  t['ideographiccomma'] = 0x3001;\\n  t['ideographiccommaleft'] = 0xFF64;\\n  t['ideographiccongratulationparen'] = 0x3237;\\n  t['ideographiccorrectcircle'] = 0x32A3;\\n  t['ideographicearthparen'] = 0x322F;\\n  t['ideographicenterpriseparen'] = 0x323D;\\n  t['ideographicexcellentcircle'] = 0x329D;\\n  t['ideographicfestivalparen'] = 0x3240;\\n  t['ideographicfinancialcircle'] = 0x3296;\\n  t['ideographicfinancialparen'] = 0x3236;\\n  t['ideographicfireparen'] = 0x322B;\\n  t['ideographichaveparen'] = 0x3232;\\n  t['ideographichighcircle'] = 0x32A4;\\n  t['ideographiciterationmark'] = 0x3005;\\n  t['ideographiclaborcircle'] = 0x3298;\\n  t['ideographiclaborparen'] = 0x3238;\\n  t['ideographicleftcircle'] = 0x32A7;\\n  t['ideographiclowcircle'] = 0x32A6;\\n  t['ideographicmedicinecircle'] = 0x32A9;\\n  t['ideographicmetalparen'] = 0x322E;\\n  t['ideographicmoonparen'] = 0x322A;\\n  t['ideographicnameparen'] = 0x3234;\\n  t['ideographicperiod'] = 0x3002;\\n  t['ideographicprintcircle'] = 0x329E;\\n  t['ideographicreachparen'] = 0x3243;\\n  t['ideographicrepresentparen'] = 0x3239;\\n  t['ideographicresourceparen'] = 0x323E;\\n  t['ideographicrightcircle'] = 0x32A8;\\n  t['ideographicsecretcircle'] = 0x3299;\\n  t['ideographicselfparen'] = 0x3242;\\n  t['ideographicsocietyparen'] = 0x3233;\\n  t['ideographicspace'] = 0x3000;\\n  t['ideographicspecialparen'] = 0x3235;\\n  t['ideographicstockparen'] = 0x3231;\\n  t['ideographicstudyparen'] = 0x323B;\\n  t['ideographicsunparen'] = 0x3230;\\n  t['ideographicsuperviseparen'] = 0x323C;\\n  t['ideographicwaterparen'] = 0x322C;\\n  t['ideographicwoodparen'] = 0x322D;\\n  t['ideographiczero'] = 0x3007;\\n  t['ideographmetalcircle'] = 0x328E;\\n  t['ideographmooncircle'] = 0x328A;\\n  t['ideographnamecircle'] = 0x3294;\\n  t['ideographsuncircle'] = 0x3290;\\n  t['ideographwatercircle'] = 0x328C;\\n  t['ideographwoodcircle'] = 0x328D;\\n  t['ideva'] = 0x0907;\\n  t['idieresis'] = 0x00EF;\\n  t['idieresisacute'] = 0x1E2F;\\n  t['idieresiscyrillic'] = 0x04E5;\\n  t['idotbelow'] = 0x1ECB;\\n  t['iebrevecyrillic'] = 0x04D7;\\n  t['iecyrillic'] = 0x0435;\\n  t['ieungacirclekorean'] = 0x3275;\\n  t['ieungaparenkorean'] = 0x3215;\\n  t['ieungcirclekorean'] = 0x3267;\\n  t['ieungkorean'] = 0x3147;\\n  t['ieungparenkorean'] = 0x3207;\\n  t['igrave'] = 0x00EC;\\n  t['igujarati'] = 0x0A87;\\n  t['igurmukhi'] = 0x0A07;\\n  t['ihiragana'] = 0x3044;\\n  t['ihookabove'] = 0x1EC9;\\n  t['iibengali'] = 0x0988;\\n  t['iicyrillic'] = 0x0438;\\n  t['iideva'] = 0x0908;\\n  t['iigujarati'] = 0x0A88;\\n  t['iigurmukhi'] = 0x0A08;\\n  t['iimatragurmukhi'] = 0x0A40;\\n  t['iinvertedbreve'] = 0x020B;\\n  t['iishortcyrillic'] = 0x0439;\\n  t['iivowelsignbengali'] = 0x09C0;\\n  t['iivowelsigndeva'] = 0x0940;\\n  t['iivowelsigngujarati'] = 0x0AC0;\\n  t['ij'] = 0x0133;\\n  t['ikatakana'] = 0x30A4;\\n  t['ikatakanahalfwidth'] = 0xFF72;\\n  t['ikorean'] = 0x3163;\\n  t['ilde'] = 0x02DC;\\n  t['iluyhebrew'] = 0x05AC;\\n  t['imacron'] = 0x012B;\\n  t['imacroncyrillic'] = 0x04E3;\\n  t['imageorapproximatelyequal'] = 0x2253;\\n  t['imatragurmukhi'] = 0x0A3F;\\n  t['imonospace'] = 0xFF49;\\n  t['increment'] = 0x2206;\\n  t['infinity'] = 0x221E;\\n  t['iniarmenian'] = 0x056B;\\n  t['integral'] = 0x222B;\\n  t['integralbottom'] = 0x2321;\\n  t['integralbt'] = 0x2321;\\n  t['integralex'] = 0xF8F5;\\n  t['integraltop'] = 0x2320;\\n  t['integraltp'] = 0x2320;\\n  t['intersection'] = 0x2229;\\n  t['intisquare'] = 0x3305;\\n  t['invbullet'] = 0x25D8;\\n  t['invcircle'] = 0x25D9;\\n  t['invsmileface'] = 0x263B;\\n  t['iocyrillic'] = 0x0451;\\n  t['iogonek'] = 0x012F;\\n  t['iota'] = 0x03B9;\\n  t['iotadieresis'] = 0x03CA;\\n  t['iotadieresistonos'] = 0x0390;\\n  t['iotalatin'] = 0x0269;\\n  t['iotatonos'] = 0x03AF;\\n  t['iparen'] = 0x24A4;\\n  t['irigurmukhi'] = 0x0A72;\\n  t['ismallhiragana'] = 0x3043;\\n  t['ismallkatakana'] = 0x30A3;\\n  t['ismallkatakanahalfwidth'] = 0xFF68;\\n  t['issharbengali'] = 0x09FA;\\n  t['istroke'] = 0x0268;\\n  t['isuperior'] = 0xF6ED;\\n  t['iterationhiragana'] = 0x309D;\\n  t['iterationkatakana'] = 0x30FD;\\n  t['itilde'] = 0x0129;\\n  t['itildebelow'] = 0x1E2D;\\n  t['iubopomofo'] = 0x3129;\\n  t['iucyrillic'] = 0x044E;\\n  t['ivowelsignbengali'] = 0x09BF;\\n  t['ivowelsigndeva'] = 0x093F;\\n  t['ivowelsigngujarati'] = 0x0ABF;\\n  t['izhitsacyrillic'] = 0x0475;\\n  t['izhitsadblgravecyrillic'] = 0x0477;\\n  t['j'] = 0x006A;\\n  t['jaarmenian'] = 0x0571;\\n  t['jabengali'] = 0x099C;\\n  t['jadeva'] = 0x091C;\\n  t['jagujarati'] = 0x0A9C;\\n  t['jagurmukhi'] = 0x0A1C;\\n  t['jbopomofo'] = 0x3110;\\n  t['jcaron'] = 0x01F0;\\n  t['jcircle'] = 0x24D9;\\n  t['jcircumflex'] = 0x0135;\\n  t['jcrossedtail'] = 0x029D;\\n  t['jdotlessstroke'] = 0x025F;\\n  t['jecyrillic'] = 0x0458;\\n  t['jeemarabic'] = 0x062C;\\n  t['jeemfinalarabic'] = 0xFE9E;\\n  t['jeeminitialarabic'] = 0xFE9F;\\n  t['jeemmedialarabic'] = 0xFEA0;\\n  t['jeharabic'] = 0x0698;\\n  t['jehfinalarabic'] = 0xFB8B;\\n  t['jhabengali'] = 0x099D;\\n  t['jhadeva'] = 0x091D;\\n  t['jhagujarati'] = 0x0A9D;\\n  t['jhagurmukhi'] = 0x0A1D;\\n  t['jheharmenian'] = 0x057B;\\n  t['jis'] = 0x3004;\\n  t['jmonospace'] = 0xFF4A;\\n  t['jparen'] = 0x24A5;\\n  t['jsuperior'] = 0x02B2;\\n  t['k'] = 0x006B;\\n  t['kabashkircyrillic'] = 0x04A1;\\n  t['kabengali'] = 0x0995;\\n  t['kacute'] = 0x1E31;\\n  t['kacyrillic'] = 0x043A;\\n  t['kadescendercyrillic'] = 0x049B;\\n  t['kadeva'] = 0x0915;\\n  t['kaf'] = 0x05DB;\\n  t['kafarabic'] = 0x0643;\\n  t['kafdagesh'] = 0xFB3B;\\n  t['kafdageshhebrew'] = 0xFB3B;\\n  t['kaffinalarabic'] = 0xFEDA;\\n  t['kafhebrew'] = 0x05DB;\\n  t['kafinitialarabic'] = 0xFEDB;\\n  t['kafmedialarabic'] = 0xFEDC;\\n  t['kafrafehebrew'] = 0xFB4D;\\n  t['kagujarati'] = 0x0A95;\\n  t['kagurmukhi'] = 0x0A15;\\n  t['kahiragana'] = 0x304B;\\n  t['kahookcyrillic'] = 0x04C4;\\n  t['kakatakana'] = 0x30AB;\\n  t['kakatakanahalfwidth'] = 0xFF76;\\n  t['kappa'] = 0x03BA;\\n  t['kappasymbolgreek'] = 0x03F0;\\n  t['kapyeounmieumkorean'] = 0x3171;\\n  t['kapyeounphieuphkorean'] = 0x3184;\\n  t['kapyeounpieupkorean'] = 0x3178;\\n  t['kapyeounssangpieupkorean'] = 0x3179;\\n  t['karoriisquare'] = 0x330D;\\n  t['kashidaautoarabic'] = 0x0640;\\n  t['kashidaautonosidebearingarabic'] = 0x0640;\\n  t['kasmallkatakana'] = 0x30F5;\\n  t['kasquare'] = 0x3384;\\n  t['kasraarabic'] = 0x0650;\\n  t['kasratanarabic'] = 0x064D;\\n  t['kastrokecyrillic'] = 0x049F;\\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\\n  t['kaverticalstrokecyrillic'] = 0x049D;\\n  t['kbopomofo'] = 0x310E;\\n  t['kcalsquare'] = 0x3389;\\n  t['kcaron'] = 0x01E9;\\n  t['kcedilla'] = 0x0137;\\n  t['kcircle'] = 0x24DA;\\n  t['kcommaaccent'] = 0x0137;\\n  t['kdotbelow'] = 0x1E33;\\n  t['keharmenian'] = 0x0584;\\n  t['kehiragana'] = 0x3051;\\n  t['kekatakana'] = 0x30B1;\\n  t['kekatakanahalfwidth'] = 0xFF79;\\n  t['kenarmenian'] = 0x056F;\\n  t['kesmallkatakana'] = 0x30F6;\\n  t['kgreenlandic'] = 0x0138;\\n  t['khabengali'] = 0x0996;\\n  t['khacyrillic'] = 0x0445;\\n  t['khadeva'] = 0x0916;\\n  t['khagujarati'] = 0x0A96;\\n  t['khagurmukhi'] = 0x0A16;\\n  t['khaharabic'] = 0x062E;\\n  t['khahfinalarabic'] = 0xFEA6;\\n  t['khahinitialarabic'] = 0xFEA7;\\n  t['khahmedialarabic'] = 0xFEA8;\\n  t['kheicoptic'] = 0x03E7;\\n  t['khhadeva'] = 0x0959;\\n  t['khhagurmukhi'] = 0x0A59;\\n  t['khieukhacirclekorean'] = 0x3278;\\n  t['khieukhaparenkorean'] = 0x3218;\\n  t['khieukhcirclekorean'] = 0x326A;\\n  t['khieukhkorean'] = 0x314B;\\n  t['khieukhparenkorean'] = 0x320A;\\n  t['khokhaithai'] = 0x0E02;\\n  t['khokhonthai'] = 0x0E05;\\n  t['khokhuatthai'] = 0x0E03;\\n  t['khokhwaithai'] = 0x0E04;\\n  t['khomutthai'] = 0x0E5B;\\n  t['khook'] = 0x0199;\\n  t['khorakhangthai'] = 0x0E06;\\n  t['khzsquare'] = 0x3391;\\n  t['kihiragana'] = 0x304D;\\n  t['kikatakana'] = 0x30AD;\\n  t['kikatakanahalfwidth'] = 0xFF77;\\n  t['kiroguramusquare'] = 0x3315;\\n  t['kiromeetorusquare'] = 0x3316;\\n  t['kirosquare'] = 0x3314;\\n  t['kiyeokacirclekorean'] = 0x326E;\\n  t['kiyeokaparenkorean'] = 0x320E;\\n  t['kiyeokcirclekorean'] = 0x3260;\\n  t['kiyeokkorean'] = 0x3131;\\n  t['kiyeokparenkorean'] = 0x3200;\\n  t['kiyeoksioskorean'] = 0x3133;\\n  t['kjecyrillic'] = 0x045C;\\n  t['klinebelow'] = 0x1E35;\\n  t['klsquare'] = 0x3398;\\n  t['kmcubedsquare'] = 0x33A6;\\n  t['kmonospace'] = 0xFF4B;\\n  t['kmsquaredsquare'] = 0x33A2;\\n  t['kohiragana'] = 0x3053;\\n  t['kohmsquare'] = 0x33C0;\\n  t['kokaithai'] = 0x0E01;\\n  t['kokatakana'] = 0x30B3;\\n  t['kokatakanahalfwidth'] = 0xFF7A;\\n  t['kooposquare'] = 0x331E;\\n  t['koppacyrillic'] = 0x0481;\\n  t['koreanstandardsymbol'] = 0x327F;\\n  t['koroniscmb'] = 0x0343;\\n  t['kparen'] = 0x24A6;\\n  t['kpasquare'] = 0x33AA;\\n  t['ksicyrillic'] = 0x046F;\\n  t['ktsquare'] = 0x33CF;\\n  t['kturned'] = 0x029E;\\n  t['kuhiragana'] = 0x304F;\\n  t['kukatakana'] = 0x30AF;\\n  t['kukatakanahalfwidth'] = 0xFF78;\\n  t['kvsquare'] = 0x33B8;\\n  t['kwsquare'] = 0x33BE;\\n  t['l'] = 0x006C;\\n  t['labengali'] = 0x09B2;\\n  t['lacute'] = 0x013A;\\n  t['ladeva'] = 0x0932;\\n  t['lagujarati'] = 0x0AB2;\\n  t['lagurmukhi'] = 0x0A32;\\n  t['lakkhangyaothai'] = 0x0E45;\\n  t['lamaleffinalarabic'] = 0xFEFC;\\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\\n  t['lamalefisolatedarabic'] = 0xFEFB;\\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\\n  t['lamarabic'] = 0x0644;\\n  t['lambda'] = 0x03BB;\\n  t['lambdastroke'] = 0x019B;\\n  t['lamed'] = 0x05DC;\\n  t['lameddagesh'] = 0xFB3C;\\n  t['lameddageshhebrew'] = 0xFB3C;\\n  t['lamedhebrew'] = 0x05DC;\\n  t['lamfinalarabic'] = 0xFEDE;\\n  t['lamhahinitialarabic'] = 0xFCCA;\\n  t['laminitialarabic'] = 0xFEDF;\\n  t['lamjeeminitialarabic'] = 0xFCC9;\\n  t['lamkhahinitialarabic'] = 0xFCCB;\\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\\n  t['lammedialarabic'] = 0xFEE0;\\n  t['lammeemhahinitialarabic'] = 0xFD88;\\n  t['lammeeminitialarabic'] = 0xFCCC;\\n  t['largecircle'] = 0x25EF;\\n  t['lbar'] = 0x019A;\\n  t['lbelt'] = 0x026C;\\n  t['lbopomofo'] = 0x310C;\\n  t['lcaron'] = 0x013E;\\n  t['lcedilla'] = 0x013C;\\n  t['lcircle'] = 0x24DB;\\n  t['lcircumflexbelow'] = 0x1E3D;\\n  t['lcommaaccent'] = 0x013C;\\n  t['ldot'] = 0x0140;\\n  t['ldotaccent'] = 0x0140;\\n  t['ldotbelow'] = 0x1E37;\\n  t['ldotbelowmacron'] = 0x1E39;\\n  t['leftangleabovecmb'] = 0x031A;\\n  t['lefttackbelowcmb'] = 0x0318;\\n  t['less'] = 0x003C;\\n  t['lessequal'] = 0x2264;\\n  t['lessequalorgreater'] = 0x22DA;\\n  t['lessmonospace'] = 0xFF1C;\\n  t['lessorequivalent'] = 0x2272;\\n  t['lessorgreater'] = 0x2276;\\n  t['lessoverequal'] = 0x2266;\\n  t['lesssmall'] = 0xFE64;\\n  t['lezh'] = 0x026E;\\n  t['lfblock'] = 0x258C;\\n  t['lhookretroflex'] = 0x026D;\\n  t['lira'] = 0x20A4;\\n  t['liwnarmenian'] = 0x056C;\\n  t['lj'] = 0x01C9;\\n  t['ljecyrillic'] = 0x0459;\\n  t['ll'] = 0xF6C0;\\n  t['lladeva'] = 0x0933;\\n  t['llagujarati'] = 0x0AB3;\\n  t['llinebelow'] = 0x1E3B;\\n  t['llladeva'] = 0x0934;\\n  t['llvocalicbengali'] = 0x09E1;\\n  t['llvocalicdeva'] = 0x0961;\\n  t['llvocalicvowelsignbengali'] = 0x09E3;\\n  t['llvocalicvowelsigndeva'] = 0x0963;\\n  t['lmiddletilde'] = 0x026B;\\n  t['lmonospace'] = 0xFF4C;\\n  t['lmsquare'] = 0x33D0;\\n  t['lochulathai'] = 0x0E2C;\\n  t['logicaland'] = 0x2227;\\n  t['logicalnot'] = 0x00AC;\\n  t['logicalnotreversed'] = 0x2310;\\n  t['logicalor'] = 0x2228;\\n  t['lolingthai'] = 0x0E25;\\n  t['longs'] = 0x017F;\\n  t['lowlinecenterline'] = 0xFE4E;\\n  t['lowlinecmb'] = 0x0332;\\n  t['lowlinedashed'] = 0xFE4D;\\n  t['lozenge'] = 0x25CA;\\n  t['lparen'] = 0x24A7;\\n  t['lslash'] = 0x0142;\\n  t['lsquare'] = 0x2113;\\n  t['lsuperior'] = 0xF6EE;\\n  t['ltshade'] = 0x2591;\\n  t['luthai'] = 0x0E26;\\n  t['lvocalicbengali'] = 0x098C;\\n  t['lvocalicdeva'] = 0x090C;\\n  t['lvocalicvowelsignbengali'] = 0x09E2;\\n  t['lvocalicvowelsigndeva'] = 0x0962;\\n  t['lxsquare'] = 0x33D3;\\n  t['m'] = 0x006D;\\n  t['mabengali'] = 0x09AE;\\n  t['macron'] = 0x00AF;\\n  t['macronbelowcmb'] = 0x0331;\\n  t['macroncmb'] = 0x0304;\\n  t['macronlowmod'] = 0x02CD;\\n  t['macronmonospace'] = 0xFFE3;\\n  t['macute'] = 0x1E3F;\\n  t['madeva'] = 0x092E;\\n  t['magujarati'] = 0x0AAE;\\n  t['magurmukhi'] = 0x0A2E;\\n  t['mahapakhhebrew'] = 0x05A4;\\n  t['mahapakhlefthebrew'] = 0x05A4;\\n  t['mahiragana'] = 0x307E;\\n  t['maichattawalowleftthai'] = 0xF895;\\n  t['maichattawalowrightthai'] = 0xF894;\\n  t['maichattawathai'] = 0x0E4B;\\n  t['maichattawaupperleftthai'] = 0xF893;\\n  t['maieklowleftthai'] = 0xF88C;\\n  t['maieklowrightthai'] = 0xF88B;\\n  t['maiekthai'] = 0x0E48;\\n  t['maiekupperleftthai'] = 0xF88A;\\n  t['maihanakatleftthai'] = 0xF884;\\n  t['maihanakatthai'] = 0x0E31;\\n  t['maitaikhuleftthai'] = 0xF889;\\n  t['maitaikhuthai'] = 0x0E47;\\n  t['maitholowleftthai'] = 0xF88F;\\n  t['maitholowrightthai'] = 0xF88E;\\n  t['maithothai'] = 0x0E49;\\n  t['maithoupperleftthai'] = 0xF88D;\\n  t['maitrilowleftthai'] = 0xF892;\\n  t['maitrilowrightthai'] = 0xF891;\\n  t['maitrithai'] = 0x0E4A;\\n  t['maitriupperleftthai'] = 0xF890;\\n  t['maiyamokthai'] = 0x0E46;\\n  t['makatakana'] = 0x30DE;\\n  t['makatakanahalfwidth'] = 0xFF8F;\\n  t['male'] = 0x2642;\\n  t['mansyonsquare'] = 0x3347;\\n  t['maqafhebrew'] = 0x05BE;\\n  t['mars'] = 0x2642;\\n  t['masoracirclehebrew'] = 0x05AF;\\n  t['masquare'] = 0x3383;\\n  t['mbopomofo'] = 0x3107;\\n  t['mbsquare'] = 0x33D4;\\n  t['mcircle'] = 0x24DC;\\n  t['mcubedsquare'] = 0x33A5;\\n  t['mdotaccent'] = 0x1E41;\\n  t['mdotbelow'] = 0x1E43;\\n  t['meemarabic'] = 0x0645;\\n  t['meemfinalarabic'] = 0xFEE2;\\n  t['meeminitialarabic'] = 0xFEE3;\\n  t['meemmedialarabic'] = 0xFEE4;\\n  t['meemmeeminitialarabic'] = 0xFCD1;\\n  t['meemmeemisolatedarabic'] = 0xFC48;\\n  t['meetorusquare'] = 0x334D;\\n  t['mehiragana'] = 0x3081;\\n  t['meizierasquare'] = 0x337E;\\n  t['mekatakana'] = 0x30E1;\\n  t['mekatakanahalfwidth'] = 0xFF92;\\n  t['mem'] = 0x05DE;\\n  t['memdagesh'] = 0xFB3E;\\n  t['memdageshhebrew'] = 0xFB3E;\\n  t['memhebrew'] = 0x05DE;\\n  t['menarmenian'] = 0x0574;\\n  t['merkhahebrew'] = 0x05A5;\\n  t['merkhakefulahebrew'] = 0x05A6;\\n  t['merkhakefulalefthebrew'] = 0x05A6;\\n  t['merkhalefthebrew'] = 0x05A5;\\n  t['mhook'] = 0x0271;\\n  t['mhzsquare'] = 0x3392;\\n  t['middledotkatakanahalfwidth'] = 0xFF65;\\n  t['middot'] = 0x00B7;\\n  t['mieumacirclekorean'] = 0x3272;\\n  t['mieumaparenkorean'] = 0x3212;\\n  t['mieumcirclekorean'] = 0x3264;\\n  t['mieumkorean'] = 0x3141;\\n  t['mieumpansioskorean'] = 0x3170;\\n  t['mieumparenkorean'] = 0x3204;\\n  t['mieumpieupkorean'] = 0x316E;\\n  t['mieumsioskorean'] = 0x316F;\\n  t['mihiragana'] = 0x307F;\\n  t['mikatakana'] = 0x30DF;\\n  t['mikatakanahalfwidth'] = 0xFF90;\\n  t['minus'] = 0x2212;\\n  t['minusbelowcmb'] = 0x0320;\\n  t['minuscircle'] = 0x2296;\\n  t['minusmod'] = 0x02D7;\\n  t['minusplus'] = 0x2213;\\n  t['minute'] = 0x2032;\\n  t['miribaarusquare'] = 0x334A;\\n  t['mirisquare'] = 0x3349;\\n  t['mlonglegturned'] = 0x0270;\\n  t['mlsquare'] = 0x3396;\\n  t['mmcubedsquare'] = 0x33A3;\\n  t['mmonospace'] = 0xFF4D;\\n  t['mmsquaredsquare'] = 0x339F;\\n  t['mohiragana'] = 0x3082;\\n  t['mohmsquare'] = 0x33C1;\\n  t['mokatakana'] = 0x30E2;\\n  t['mokatakanahalfwidth'] = 0xFF93;\\n  t['molsquare'] = 0x33D6;\\n  t['momathai'] = 0x0E21;\\n  t['moverssquare'] = 0x33A7;\\n  t['moverssquaredsquare'] = 0x33A8;\\n  t['mparen'] = 0x24A8;\\n  t['mpasquare'] = 0x33AB;\\n  t['mssquare'] = 0x33B3;\\n  t['msuperior'] = 0xF6EF;\\n  t['mturned'] = 0x026F;\\n  t['mu'] = 0x00B5;\\n  t['mu1'] = 0x00B5;\\n  t['muasquare'] = 0x3382;\\n  t['muchgreater'] = 0x226B;\\n  t['muchless'] = 0x226A;\\n  t['mufsquare'] = 0x338C;\\n  t['mugreek'] = 0x03BC;\\n  t['mugsquare'] = 0x338D;\\n  t['muhiragana'] = 0x3080;\\n  t['mukatakana'] = 0x30E0;\\n  t['mukatakanahalfwidth'] = 0xFF91;\\n  t['mulsquare'] = 0x3395;\\n  t['multiply'] = 0x00D7;\\n  t['mumsquare'] = 0x339B;\\n  t['munahhebrew'] = 0x05A3;\\n  t['munahlefthebrew'] = 0x05A3;\\n  t['musicalnote'] = 0x266A;\\n  t['musicalnotedbl'] = 0x266B;\\n  t['musicflatsign'] = 0x266D;\\n  t['musicsharpsign'] = 0x266F;\\n  t['mussquare'] = 0x33B2;\\n  t['muvsquare'] = 0x33B6;\\n  t['muwsquare'] = 0x33BC;\\n  t['mvmegasquare'] = 0x33B9;\\n  t['mvsquare'] = 0x33B7;\\n  t['mwmegasquare'] = 0x33BF;\\n  t['mwsquare'] = 0x33BD;\\n  t['n'] = 0x006E;\\n  t['nabengali'] = 0x09A8;\\n  t['nabla'] = 0x2207;\\n  t['nacute'] = 0x0144;\\n  t['nadeva'] = 0x0928;\\n  t['nagujarati'] = 0x0AA8;\\n  t['nagurmukhi'] = 0x0A28;\\n  t['nahiragana'] = 0x306A;\\n  t['nakatakana'] = 0x30CA;\\n  t['nakatakanahalfwidth'] = 0xFF85;\\n  t['napostrophe'] = 0x0149;\\n  t['nasquare'] = 0x3381;\\n  t['nbopomofo'] = 0x310B;\\n  t['nbspace'] = 0x00A0;\\n  t['ncaron'] = 0x0148;\\n  t['ncedilla'] = 0x0146;\\n  t['ncircle'] = 0x24DD;\\n  t['ncircumflexbelow'] = 0x1E4B;\\n  t['ncommaaccent'] = 0x0146;\\n  t['ndotaccent'] = 0x1E45;\\n  t['ndotbelow'] = 0x1E47;\\n  t['nehiragana'] = 0x306D;\\n  t['nekatakana'] = 0x30CD;\\n  t['nekatakanahalfwidth'] = 0xFF88;\\n  t['newsheqelsign'] = 0x20AA;\\n  t['nfsquare'] = 0x338B;\\n  t['ngabengali'] = 0x0999;\\n  t['ngadeva'] = 0x0919;\\n  t['ngagujarati'] = 0x0A99;\\n  t['ngagurmukhi'] = 0x0A19;\\n  t['ngonguthai'] = 0x0E07;\\n  t['nhiragana'] = 0x3093;\\n  t['nhookleft'] = 0x0272;\\n  t['nhookretroflex'] = 0x0273;\\n  t['nieunacirclekorean'] = 0x326F;\\n  t['nieunaparenkorean'] = 0x320F;\\n  t['nieuncieuckorean'] = 0x3135;\\n  t['nieuncirclekorean'] = 0x3261;\\n  t['nieunhieuhkorean'] = 0x3136;\\n  t['nieunkorean'] = 0x3134;\\n  t['nieunpansioskorean'] = 0x3168;\\n  t['nieunparenkorean'] = 0x3201;\\n  t['nieunsioskorean'] = 0x3167;\\n  t['nieuntikeutkorean'] = 0x3166;\\n  t['nihiragana'] = 0x306B;\\n  t['nikatakana'] = 0x30CB;\\n  t['nikatakanahalfwidth'] = 0xFF86;\\n  t['nikhahitleftthai'] = 0xF899;\\n  t['nikhahitthai'] = 0x0E4D;\\n  t['nine'] = 0x0039;\\n  t['ninearabic'] = 0x0669;\\n  t['ninebengali'] = 0x09EF;\\n  t['ninecircle'] = 0x2468;\\n  t['ninecircleinversesansserif'] = 0x2792;\\n  t['ninedeva'] = 0x096F;\\n  t['ninegujarati'] = 0x0AEF;\\n  t['ninegurmukhi'] = 0x0A6F;\\n  t['ninehackarabic'] = 0x0669;\\n  t['ninehangzhou'] = 0x3029;\\n  t['nineideographicparen'] = 0x3228;\\n  t['nineinferior'] = 0x2089;\\n  t['ninemonospace'] = 0xFF19;\\n  t['nineoldstyle'] = 0xF739;\\n  t['nineparen'] = 0x247C;\\n  t['nineperiod'] = 0x2490;\\n  t['ninepersian'] = 0x06F9;\\n  t['nineroman'] = 0x2178;\\n  t['ninesuperior'] = 0x2079;\\n  t['nineteencircle'] = 0x2472;\\n  t['nineteenparen'] = 0x2486;\\n  t['nineteenperiod'] = 0x249A;\\n  t['ninethai'] = 0x0E59;\\n  t['nj'] = 0x01CC;\\n  t['njecyrillic'] = 0x045A;\\n  t['nkatakana'] = 0x30F3;\\n  t['nkatakanahalfwidth'] = 0xFF9D;\\n  t['nlegrightlong'] = 0x019E;\\n  t['nlinebelow'] = 0x1E49;\\n  t['nmonospace'] = 0xFF4E;\\n  t['nmsquare'] = 0x339A;\\n  t['nnabengali'] = 0x09A3;\\n  t['nnadeva'] = 0x0923;\\n  t['nnagujarati'] = 0x0AA3;\\n  t['nnagurmukhi'] = 0x0A23;\\n  t['nnnadeva'] = 0x0929;\\n  t['nohiragana'] = 0x306E;\\n  t['nokatakana'] = 0x30CE;\\n  t['nokatakanahalfwidth'] = 0xFF89;\\n  t['nonbreakingspace'] = 0x00A0;\\n  t['nonenthai'] = 0x0E13;\\n  t['nonuthai'] = 0x0E19;\\n  t['noonarabic'] = 0x0646;\\n  t['noonfinalarabic'] = 0xFEE6;\\n  t['noonghunnaarabic'] = 0x06BA;\\n  t['noonghunnafinalarabic'] = 0xFB9F;\\n  t['nooninitialarabic'] = 0xFEE7;\\n  t['noonjeeminitialarabic'] = 0xFCD2;\\n  t['noonjeemisolatedarabic'] = 0xFC4B;\\n  t['noonmedialarabic'] = 0xFEE8;\\n  t['noonmeeminitialarabic'] = 0xFCD5;\\n  t['noonmeemisolatedarabic'] = 0xFC4E;\\n  t['noonnoonfinalarabic'] = 0xFC8D;\\n  t['notcontains'] = 0x220C;\\n  t['notelement'] = 0x2209;\\n  t['notelementof'] = 0x2209;\\n  t['notequal'] = 0x2260;\\n  t['notgreater'] = 0x226F;\\n  t['notgreaternorequal'] = 0x2271;\\n  t['notgreaternorless'] = 0x2279;\\n  t['notidentical'] = 0x2262;\\n  t['notless'] = 0x226E;\\n  t['notlessnorequal'] = 0x2270;\\n  t['notparallel'] = 0x2226;\\n  t['notprecedes'] = 0x2280;\\n  t['notsubset'] = 0x2284;\\n  t['notsucceeds'] = 0x2281;\\n  t['notsuperset'] = 0x2285;\\n  t['nowarmenian'] = 0x0576;\\n  t['nparen'] = 0x24A9;\\n  t['nssquare'] = 0x33B1;\\n  t['nsuperior'] = 0x207F;\\n  t['ntilde'] = 0x00F1;\\n  t['nu'] = 0x03BD;\\n  t['nuhiragana'] = 0x306C;\\n  t['nukatakana'] = 0x30CC;\\n  t['nukatakanahalfwidth'] = 0xFF87;\\n  t['nuktabengali'] = 0x09BC;\\n  t['nuktadeva'] = 0x093C;\\n  t['nuktagujarati'] = 0x0ABC;\\n  t['nuktagurmukhi'] = 0x0A3C;\\n  t['numbersign'] = 0x0023;\\n  t['numbersignmonospace'] = 0xFF03;\\n  t['numbersignsmall'] = 0xFE5F;\\n  t['numeralsigngreek'] = 0x0374;\\n  t['numeralsignlowergreek'] = 0x0375;\\n  t['numero'] = 0x2116;\\n  t['nun'] = 0x05E0;\\n  t['nundagesh'] = 0xFB40;\\n  t['nundageshhebrew'] = 0xFB40;\\n  t['nunhebrew'] = 0x05E0;\\n  t['nvsquare'] = 0x33B5;\\n  t['nwsquare'] = 0x33BB;\\n  t['nyabengali'] = 0x099E;\\n  t['nyadeva'] = 0x091E;\\n  t['nyagujarati'] = 0x0A9E;\\n  t['nyagurmukhi'] = 0x0A1E;\\n  t['o'] = 0x006F;\\n  t['oacute'] = 0x00F3;\\n  t['oangthai'] = 0x0E2D;\\n  t['obarred'] = 0x0275;\\n  t['obarredcyrillic'] = 0x04E9;\\n  t['obarreddieresiscyrillic'] = 0x04EB;\\n  t['obengali'] = 0x0993;\\n  t['obopomofo'] = 0x311B;\\n  t['obreve'] = 0x014F;\\n  t['ocandradeva'] = 0x0911;\\n  t['ocandragujarati'] = 0x0A91;\\n  t['ocandravowelsigndeva'] = 0x0949;\\n  t['ocandravowelsigngujarati'] = 0x0AC9;\\n  t['ocaron'] = 0x01D2;\\n  t['ocircle'] = 0x24DE;\\n  t['ocircumflex'] = 0x00F4;\\n  t['ocircumflexacute'] = 0x1ED1;\\n  t['ocircumflexdotbelow'] = 0x1ED9;\\n  t['ocircumflexgrave'] = 0x1ED3;\\n  t['ocircumflexhookabove'] = 0x1ED5;\\n  t['ocircumflextilde'] = 0x1ED7;\\n  t['ocyrillic'] = 0x043E;\\n  t['odblacute'] = 0x0151;\\n  t['odblgrave'] = 0x020D;\\n  t['odeva'] = 0x0913;\\n  t['odieresis'] = 0x00F6;\\n  t['odieresiscyrillic'] = 0x04E7;\\n  t['odotbelow'] = 0x1ECD;\\n  t['oe'] = 0x0153;\\n  t['oekorean'] = 0x315A;\\n  t['ogonek'] = 0x02DB;\\n  t['ogonekcmb'] = 0x0328;\\n  t['ograve'] = 0x00F2;\\n  t['ogujarati'] = 0x0A93;\\n  t['oharmenian'] = 0x0585;\\n  t['ohiragana'] = 0x304A;\\n  t['ohookabove'] = 0x1ECF;\\n  t['ohorn'] = 0x01A1;\\n  t['ohornacute'] = 0x1EDB;\\n  t['ohorndotbelow'] = 0x1EE3;\\n  t['ohorngrave'] = 0x1EDD;\\n  t['ohornhookabove'] = 0x1EDF;\\n  t['ohorntilde'] = 0x1EE1;\\n  t['ohungarumlaut'] = 0x0151;\\n  t['oi'] = 0x01A3;\\n  t['oinvertedbreve'] = 0x020F;\\n  t['okatakana'] = 0x30AA;\\n  t['okatakanahalfwidth'] = 0xFF75;\\n  t['okorean'] = 0x3157;\\n  t['olehebrew'] = 0x05AB;\\n  t['omacron'] = 0x014D;\\n  t['omacronacute'] = 0x1E53;\\n  t['omacrongrave'] = 0x1E51;\\n  t['omdeva'] = 0x0950;\\n  t['omega'] = 0x03C9;\\n  t['omega1'] = 0x03D6;\\n  t['omegacyrillic'] = 0x0461;\\n  t['omegalatinclosed'] = 0x0277;\\n  t['omegaroundcyrillic'] = 0x047B;\\n  t['omegatitlocyrillic'] = 0x047D;\\n  t['omegatonos'] = 0x03CE;\\n  t['omgujarati'] = 0x0AD0;\\n  t['omicron'] = 0x03BF;\\n  t['omicrontonos'] = 0x03CC;\\n  t['omonospace'] = 0xFF4F;\\n  t['one'] = 0x0031;\\n  t['onearabic'] = 0x0661;\\n  t['onebengali'] = 0x09E7;\\n  t['onecircle'] = 0x2460;\\n  t['onecircleinversesansserif'] = 0x278A;\\n  t['onedeva'] = 0x0967;\\n  t['onedotenleader'] = 0x2024;\\n  t['oneeighth'] = 0x215B;\\n  t['onefitted'] = 0xF6DC;\\n  t['onegujarati'] = 0x0AE7;\\n  t['onegurmukhi'] = 0x0A67;\\n  t['onehackarabic'] = 0x0661;\\n  t['onehalf'] = 0x00BD;\\n  t['onehangzhou'] = 0x3021;\\n  t['oneideographicparen'] = 0x3220;\\n  t['oneinferior'] = 0x2081;\\n  t['onemonospace'] = 0xFF11;\\n  t['onenumeratorbengali'] = 0x09F4;\\n  t['oneoldstyle'] = 0xF731;\\n  t['oneparen'] = 0x2474;\\n  t['oneperiod'] = 0x2488;\\n  t['onepersian'] = 0x06F1;\\n  t['onequarter'] = 0x00BC;\\n  t['oneroman'] = 0x2170;\\n  t['onesuperior'] = 0x00B9;\\n  t['onethai'] = 0x0E51;\\n  t['onethird'] = 0x2153;\\n  t['oogonek'] = 0x01EB;\\n  t['oogonekmacron'] = 0x01ED;\\n  t['oogurmukhi'] = 0x0A13;\\n  t['oomatragurmukhi'] = 0x0A4B;\\n  t['oopen'] = 0x0254;\\n  t['oparen'] = 0x24AA;\\n  t['openbullet'] = 0x25E6;\\n  t['option'] = 0x2325;\\n  t['ordfeminine'] = 0x00AA;\\n  t['ordmasculine'] = 0x00BA;\\n  t['orthogonal'] = 0x221F;\\n  t['oshortdeva'] = 0x0912;\\n  t['oshortvowelsigndeva'] = 0x094A;\\n  t['oslash'] = 0x00F8;\\n  t['oslashacute'] = 0x01FF;\\n  t['osmallhiragana'] = 0x3049;\\n  t['osmallkatakana'] = 0x30A9;\\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\\n  t['ostrokeacute'] = 0x01FF;\\n  t['osuperior'] = 0xF6F0;\\n  t['otcyrillic'] = 0x047F;\\n  t['otilde'] = 0x00F5;\\n  t['otildeacute'] = 0x1E4D;\\n  t['otildedieresis'] = 0x1E4F;\\n  t['oubopomofo'] = 0x3121;\\n  t['overline'] = 0x203E;\\n  t['overlinecenterline'] = 0xFE4A;\\n  t['overlinecmb'] = 0x0305;\\n  t['overlinedashed'] = 0xFE49;\\n  t['overlinedblwavy'] = 0xFE4C;\\n  t['overlinewavy'] = 0xFE4B;\\n  t['overscore'] = 0x00AF;\\n  t['ovowelsignbengali'] = 0x09CB;\\n  t['ovowelsigndeva'] = 0x094B;\\n  t['ovowelsigngujarati'] = 0x0ACB;\\n  t['p'] = 0x0070;\\n  t['paampssquare'] = 0x3380;\\n  t['paasentosquare'] = 0x332B;\\n  t['pabengali'] = 0x09AA;\\n  t['pacute'] = 0x1E55;\\n  t['padeva'] = 0x092A;\\n  t['pagedown'] = 0x21DF;\\n  t['pageup'] = 0x21DE;\\n  t['pagujarati'] = 0x0AAA;\\n  t['pagurmukhi'] = 0x0A2A;\\n  t['pahiragana'] = 0x3071;\\n  t['paiyannoithai'] = 0x0E2F;\\n  t['pakatakana'] = 0x30D1;\\n  t['palatalizationcyrilliccmb'] = 0x0484;\\n  t['palochkacyrillic'] = 0x04C0;\\n  t['pansioskorean'] = 0x317F;\\n  t['paragraph'] = 0x00B6;\\n  t['parallel'] = 0x2225;\\n  t['parenleft'] = 0x0028;\\n  t['parenleftaltonearabic'] = 0xFD3E;\\n  t['parenleftbt'] = 0xF8ED;\\n  t['parenleftex'] = 0xF8EC;\\n  t['parenleftinferior'] = 0x208D;\\n  t['parenleftmonospace'] = 0xFF08;\\n  t['parenleftsmall'] = 0xFE59;\\n  t['parenleftsuperior'] = 0x207D;\\n  t['parenlefttp'] = 0xF8EB;\\n  t['parenleftvertical'] = 0xFE35;\\n  t['parenright'] = 0x0029;\\n  t['parenrightaltonearabic'] = 0xFD3F;\\n  t['parenrightbt'] = 0xF8F8;\\n  t['parenrightex'] = 0xF8F7;\\n  t['parenrightinferior'] = 0x208E;\\n  t['parenrightmonospace'] = 0xFF09;\\n  t['parenrightsmall'] = 0xFE5A;\\n  t['parenrightsuperior'] = 0x207E;\\n  t['parenrighttp'] = 0xF8F6;\\n  t['parenrightvertical'] = 0xFE36;\\n  t['partialdiff'] = 0x2202;\\n  t['paseqhebrew'] = 0x05C0;\\n  t['pashtahebrew'] = 0x0599;\\n  t['pasquare'] = 0x33A9;\\n  t['patah'] = 0x05B7;\\n  t['patah11'] = 0x05B7;\\n  t['patah1d'] = 0x05B7;\\n  t['patah2a'] = 0x05B7;\\n  t['patahhebrew'] = 0x05B7;\\n  t['patahnarrowhebrew'] = 0x05B7;\\n  t['patahquarterhebrew'] = 0x05B7;\\n  t['patahwidehebrew'] = 0x05B7;\\n  t['pazerhebrew'] = 0x05A1;\\n  t['pbopomofo'] = 0x3106;\\n  t['pcircle'] = 0x24DF;\\n  t['pdotaccent'] = 0x1E57;\\n  t['pe'] = 0x05E4;\\n  t['pecyrillic'] = 0x043F;\\n  t['pedagesh'] = 0xFB44;\\n  t['pedageshhebrew'] = 0xFB44;\\n  t['peezisquare'] = 0x333B;\\n  t['pefinaldageshhebrew'] = 0xFB43;\\n  t['peharabic'] = 0x067E;\\n  t['peharmenian'] = 0x057A;\\n  t['pehebrew'] = 0x05E4;\\n  t['pehfinalarabic'] = 0xFB57;\\n  t['pehinitialarabic'] = 0xFB58;\\n  t['pehiragana'] = 0x307A;\\n  t['pehmedialarabic'] = 0xFB59;\\n  t['pekatakana'] = 0x30DA;\\n  t['pemiddlehookcyrillic'] = 0x04A7;\\n  t['perafehebrew'] = 0xFB4E;\\n  t['percent'] = 0x0025;\\n  t['percentarabic'] = 0x066A;\\n  t['percentmonospace'] = 0xFF05;\\n  t['percentsmall'] = 0xFE6A;\\n  t['period'] = 0x002E;\\n  t['periodarmenian'] = 0x0589;\\n  t['periodcentered'] = 0x00B7;\\n  t['periodhalfwidth'] = 0xFF61;\\n  t['periodinferior'] = 0xF6E7;\\n  t['periodmonospace'] = 0xFF0E;\\n  t['periodsmall'] = 0xFE52;\\n  t['periodsuperior'] = 0xF6E8;\\n  t['perispomenigreekcmb'] = 0x0342;\\n  t['perpendicular'] = 0x22A5;\\n  t['perthousand'] = 0x2030;\\n  t['peseta'] = 0x20A7;\\n  t['pfsquare'] = 0x338A;\\n  t['phabengali'] = 0x09AB;\\n  t['phadeva'] = 0x092B;\\n  t['phagujarati'] = 0x0AAB;\\n  t['phagurmukhi'] = 0x0A2B;\\n  t['phi'] = 0x03C6;\\n  t['phi1'] = 0x03D5;\\n  t['phieuphacirclekorean'] = 0x327A;\\n  t['phieuphaparenkorean'] = 0x321A;\\n  t['phieuphcirclekorean'] = 0x326C;\\n  t['phieuphkorean'] = 0x314D;\\n  t['phieuphparenkorean'] = 0x320C;\\n  t['philatin'] = 0x0278;\\n  t['phinthuthai'] = 0x0E3A;\\n  t['phisymbolgreek'] = 0x03D5;\\n  t['phook'] = 0x01A5;\\n  t['phophanthai'] = 0x0E1E;\\n  t['phophungthai'] = 0x0E1C;\\n  t['phosamphaothai'] = 0x0E20;\\n  t['pi'] = 0x03C0;\\n  t['pieupacirclekorean'] = 0x3273;\\n  t['pieupaparenkorean'] = 0x3213;\\n  t['pieupcieuckorean'] = 0x3176;\\n  t['pieupcirclekorean'] = 0x3265;\\n  t['pieupkiyeokkorean'] = 0x3172;\\n  t['pieupkorean'] = 0x3142;\\n  t['pieupparenkorean'] = 0x3205;\\n  t['pieupsioskiyeokkorean'] = 0x3174;\\n  t['pieupsioskorean'] = 0x3144;\\n  t['pieupsiostikeutkorean'] = 0x3175;\\n  t['pieupthieuthkorean'] = 0x3177;\\n  t['pieuptikeutkorean'] = 0x3173;\\n  t['pihiragana'] = 0x3074;\\n  t['pikatakana'] = 0x30D4;\\n  t['pisymbolgreek'] = 0x03D6;\\n  t['piwrarmenian'] = 0x0583;\\n  t['plus'] = 0x002B;\\n  t['plusbelowcmb'] = 0x031F;\\n  t['pluscircle'] = 0x2295;\\n  t['plusminus'] = 0x00B1;\\n  t['plusmod'] = 0x02D6;\\n  t['plusmonospace'] = 0xFF0B;\\n  t['plussmall'] = 0xFE62;\\n  t['plussuperior'] = 0x207A;\\n  t['pmonospace'] = 0xFF50;\\n  t['pmsquare'] = 0x33D8;\\n  t['pohiragana'] = 0x307D;\\n  t['pointingindexdownwhite'] = 0x261F;\\n  t['pointingindexleftwhite'] = 0x261C;\\n  t['pointingindexrightwhite'] = 0x261E;\\n  t['pointingindexupwhite'] = 0x261D;\\n  t['pokatakana'] = 0x30DD;\\n  t['poplathai'] = 0x0E1B;\\n  t['postalmark'] = 0x3012;\\n  t['postalmarkface'] = 0x3020;\\n  t['pparen'] = 0x24AB;\\n  t['precedes'] = 0x227A;\\n  t['prescription'] = 0x211E;\\n  t['primemod'] = 0x02B9;\\n  t['primereversed'] = 0x2035;\\n  t['product'] = 0x220F;\\n  t['projective'] = 0x2305;\\n  t['prolongedkana'] = 0x30FC;\\n  t['propellor'] = 0x2318;\\n  t['propersubset'] = 0x2282;\\n  t['propersuperset'] = 0x2283;\\n  t['proportion'] = 0x2237;\\n  t['proportional'] = 0x221D;\\n  t['psi'] = 0x03C8;\\n  t['psicyrillic'] = 0x0471;\\n  t['psilipneumatacyrilliccmb'] = 0x0486;\\n  t['pssquare'] = 0x33B0;\\n  t['puhiragana'] = 0x3077;\\n  t['pukatakana'] = 0x30D7;\\n  t['pvsquare'] = 0x33B4;\\n  t['pwsquare'] = 0x33BA;\\n  t['q'] = 0x0071;\\n  t['qadeva'] = 0x0958;\\n  t['qadmahebrew'] = 0x05A8;\\n  t['qafarabic'] = 0x0642;\\n  t['qaffinalarabic'] = 0xFED6;\\n  t['qafinitialarabic'] = 0xFED7;\\n  t['qafmedialarabic'] = 0xFED8;\\n  t['qamats'] = 0x05B8;\\n  t['qamats10'] = 0x05B8;\\n  t['qamats1a'] = 0x05B8;\\n  t['qamats1c'] = 0x05B8;\\n  t['qamats27'] = 0x05B8;\\n  t['qamats29'] = 0x05B8;\\n  t['qamats33'] = 0x05B8;\\n  t['qamatsde'] = 0x05B8;\\n  t['qamatshebrew'] = 0x05B8;\\n  t['qamatsnarrowhebrew'] = 0x05B8;\\n  t['qamatsqatanhebrew'] = 0x05B8;\\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\\n  t['qamatsqatanwidehebrew'] = 0x05B8;\\n  t['qamatsquarterhebrew'] = 0x05B8;\\n  t['qamatswidehebrew'] = 0x05B8;\\n  t['qarneyparahebrew'] = 0x059F;\\n  t['qbopomofo'] = 0x3111;\\n  t['qcircle'] = 0x24E0;\\n  t['qhook'] = 0x02A0;\\n  t['qmonospace'] = 0xFF51;\\n  t['qof'] = 0x05E7;\\n  t['qofdagesh'] = 0xFB47;\\n  t['qofdageshhebrew'] = 0xFB47;\\n  t['qofhebrew'] = 0x05E7;\\n  t['qparen'] = 0x24AC;\\n  t['quarternote'] = 0x2669;\\n  t['qubuts'] = 0x05BB;\\n  t['qubuts18'] = 0x05BB;\\n  t['qubuts25'] = 0x05BB;\\n  t['qubuts31'] = 0x05BB;\\n  t['qubutshebrew'] = 0x05BB;\\n  t['qubutsnarrowhebrew'] = 0x05BB;\\n  t['qubutsquarterhebrew'] = 0x05BB;\\n  t['qubutswidehebrew'] = 0x05BB;\\n  t['question'] = 0x003F;\\n  t['questionarabic'] = 0x061F;\\n  t['questionarmenian'] = 0x055E;\\n  t['questiondown'] = 0x00BF;\\n  t['questiondownsmall'] = 0xF7BF;\\n  t['questiongreek'] = 0x037E;\\n  t['questionmonospace'] = 0xFF1F;\\n  t['questionsmall'] = 0xF73F;\\n  t['quotedbl'] = 0x0022;\\n  t['quotedblbase'] = 0x201E;\\n  t['quotedblleft'] = 0x201C;\\n  t['quotedblmonospace'] = 0xFF02;\\n  t['quotedblprime'] = 0x301E;\\n  t['quotedblprimereversed'] = 0x301D;\\n  t['quotedblright'] = 0x201D;\\n  t['quoteleft'] = 0x2018;\\n  t['quoteleftreversed'] = 0x201B;\\n  t['quotereversed'] = 0x201B;\\n  t['quoteright'] = 0x2019;\\n  t['quoterightn'] = 0x0149;\\n  t['quotesinglbase'] = 0x201A;\\n  t['quotesingle'] = 0x0027;\\n  t['quotesinglemonospace'] = 0xFF07;\\n  t['r'] = 0x0072;\\n  t['raarmenian'] = 0x057C;\\n  t['rabengali'] = 0x09B0;\\n  t['racute'] = 0x0155;\\n  t['radeva'] = 0x0930;\\n  t['radical'] = 0x221A;\\n  t['radicalex'] = 0xF8E5;\\n  t['radoverssquare'] = 0x33AE;\\n  t['radoverssquaredsquare'] = 0x33AF;\\n  t['radsquare'] = 0x33AD;\\n  t['rafe'] = 0x05BF;\\n  t['rafehebrew'] = 0x05BF;\\n  t['ragujarati'] = 0x0AB0;\\n  t['ragurmukhi'] = 0x0A30;\\n  t['rahiragana'] = 0x3089;\\n  t['rakatakana'] = 0x30E9;\\n  t['rakatakanahalfwidth'] = 0xFF97;\\n  t['ralowerdiagonalbengali'] = 0x09F1;\\n  t['ramiddlediagonalbengali'] = 0x09F0;\\n  t['ramshorn'] = 0x0264;\\n  t['ratio'] = 0x2236;\\n  t['rbopomofo'] = 0x3116;\\n  t['rcaron'] = 0x0159;\\n  t['rcedilla'] = 0x0157;\\n  t['rcircle'] = 0x24E1;\\n  t['rcommaaccent'] = 0x0157;\\n  t['rdblgrave'] = 0x0211;\\n  t['rdotaccent'] = 0x1E59;\\n  t['rdotbelow'] = 0x1E5B;\\n  t['rdotbelowmacron'] = 0x1E5D;\\n  t['referencemark'] = 0x203B;\\n  t['reflexsubset'] = 0x2286;\\n  t['reflexsuperset'] = 0x2287;\\n  t['registered'] = 0x00AE;\\n  t['registersans'] = 0xF8E8;\\n  t['registerserif'] = 0xF6DA;\\n  t['reharabic'] = 0x0631;\\n  t['reharmenian'] = 0x0580;\\n  t['rehfinalarabic'] = 0xFEAE;\\n  t['rehiragana'] = 0x308C;\\n  t['rekatakana'] = 0x30EC;\\n  t['rekatakanahalfwidth'] = 0xFF9A;\\n  t['resh'] = 0x05E8;\\n  t['reshdageshhebrew'] = 0xFB48;\\n  t['reshhebrew'] = 0x05E8;\\n  t['reversedtilde'] = 0x223D;\\n  t['reviahebrew'] = 0x0597;\\n  t['reviamugrashhebrew'] = 0x0597;\\n  t['revlogicalnot'] = 0x2310;\\n  t['rfishhook'] = 0x027E;\\n  t['rfishhookreversed'] = 0x027F;\\n  t['rhabengali'] = 0x09DD;\\n  t['rhadeva'] = 0x095D;\\n  t['rho'] = 0x03C1;\\n  t['rhook'] = 0x027D;\\n  t['rhookturned'] = 0x027B;\\n  t['rhookturnedsuperior'] = 0x02B5;\\n  t['rhosymbolgreek'] = 0x03F1;\\n  t['rhotichookmod'] = 0x02DE;\\n  t['rieulacirclekorean'] = 0x3271;\\n  t['rieulaparenkorean'] = 0x3211;\\n  t['rieulcirclekorean'] = 0x3263;\\n  t['rieulhieuhkorean'] = 0x3140;\\n  t['rieulkiyeokkorean'] = 0x313A;\\n  t['rieulkiyeoksioskorean'] = 0x3169;\\n  t['rieulkorean'] = 0x3139;\\n  t['rieulmieumkorean'] = 0x313B;\\n  t['rieulpansioskorean'] = 0x316C;\\n  t['rieulparenkorean'] = 0x3203;\\n  t['rieulphieuphkorean'] = 0x313F;\\n  t['rieulpieupkorean'] = 0x313C;\\n  t['rieulpieupsioskorean'] = 0x316B;\\n  t['rieulsioskorean'] = 0x313D;\\n  t['rieulthieuthkorean'] = 0x313E;\\n  t['rieultikeutkorean'] = 0x316A;\\n  t['rieulyeorinhieuhkorean'] = 0x316D;\\n  t['rightangle'] = 0x221F;\\n  t['righttackbelowcmb'] = 0x0319;\\n  t['righttriangle'] = 0x22BF;\\n  t['rihiragana'] = 0x308A;\\n  t['rikatakana'] = 0x30EA;\\n  t['rikatakanahalfwidth'] = 0xFF98;\\n  t['ring'] = 0x02DA;\\n  t['ringbelowcmb'] = 0x0325;\\n  t['ringcmb'] = 0x030A;\\n  t['ringhalfleft'] = 0x02BF;\\n  t['ringhalfleftarmenian'] = 0x0559;\\n  t['ringhalfleftbelowcmb'] = 0x031C;\\n  t['ringhalfleftcentered'] = 0x02D3;\\n  t['ringhalfright'] = 0x02BE;\\n  t['ringhalfrightbelowcmb'] = 0x0339;\\n  t['ringhalfrightcentered'] = 0x02D2;\\n  t['rinvertedbreve'] = 0x0213;\\n  t['rittorusquare'] = 0x3351;\\n  t['rlinebelow'] = 0x1E5F;\\n  t['rlongleg'] = 0x027C;\\n  t['rlonglegturned'] = 0x027A;\\n  t['rmonospace'] = 0xFF52;\\n  t['rohiragana'] = 0x308D;\\n  t['rokatakana'] = 0x30ED;\\n  t['rokatakanahalfwidth'] = 0xFF9B;\\n  t['roruathai'] = 0x0E23;\\n  t['rparen'] = 0x24AD;\\n  t['rrabengali'] = 0x09DC;\\n  t['rradeva'] = 0x0931;\\n  t['rragurmukhi'] = 0x0A5C;\\n  t['rreharabic'] = 0x0691;\\n  t['rrehfinalarabic'] = 0xFB8D;\\n  t['rrvocalicbengali'] = 0x09E0;\\n  t['rrvocalicdeva'] = 0x0960;\\n  t['rrvocalicgujarati'] = 0x0AE0;\\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\\n  t['rrvocalicvowelsigndeva'] = 0x0944;\\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\\n  t['rsuperior'] = 0xF6F1;\\n  t['rtblock'] = 0x2590;\\n  t['rturned'] = 0x0279;\\n  t['rturnedsuperior'] = 0x02B4;\\n  t['ruhiragana'] = 0x308B;\\n  t['rukatakana'] = 0x30EB;\\n  t['rukatakanahalfwidth'] = 0xFF99;\\n  t['rupeemarkbengali'] = 0x09F2;\\n  t['rupeesignbengali'] = 0x09F3;\\n  t['rupiah'] = 0xF6DD;\\n  t['ruthai'] = 0x0E24;\\n  t['rvocalicbengali'] = 0x098B;\\n  t['rvocalicdeva'] = 0x090B;\\n  t['rvocalicgujarati'] = 0x0A8B;\\n  t['rvocalicvowelsignbengali'] = 0x09C3;\\n  t['rvocalicvowelsigndeva'] = 0x0943;\\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\\n  t['s'] = 0x0073;\\n  t['sabengali'] = 0x09B8;\\n  t['sacute'] = 0x015B;\\n  t['sacutedotaccent'] = 0x1E65;\\n  t['sadarabic'] = 0x0635;\\n  t['sadeva'] = 0x0938;\\n  t['sadfinalarabic'] = 0xFEBA;\\n  t['sadinitialarabic'] = 0xFEBB;\\n  t['sadmedialarabic'] = 0xFEBC;\\n  t['sagujarati'] = 0x0AB8;\\n  t['sagurmukhi'] = 0x0A38;\\n  t['sahiragana'] = 0x3055;\\n  t['sakatakana'] = 0x30B5;\\n  t['sakatakanahalfwidth'] = 0xFF7B;\\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\\n  t['samekh'] = 0x05E1;\\n  t['samekhdagesh'] = 0xFB41;\\n  t['samekhdageshhebrew'] = 0xFB41;\\n  t['samekhhebrew'] = 0x05E1;\\n  t['saraaathai'] = 0x0E32;\\n  t['saraaethai'] = 0x0E41;\\n  t['saraaimaimalaithai'] = 0x0E44;\\n  t['saraaimaimuanthai'] = 0x0E43;\\n  t['saraamthai'] = 0x0E33;\\n  t['saraathai'] = 0x0E30;\\n  t['saraethai'] = 0x0E40;\\n  t['saraiileftthai'] = 0xF886;\\n  t['saraiithai'] = 0x0E35;\\n  t['saraileftthai'] = 0xF885;\\n  t['saraithai'] = 0x0E34;\\n  t['saraothai'] = 0x0E42;\\n  t['saraueeleftthai'] = 0xF888;\\n  t['saraueethai'] = 0x0E37;\\n  t['saraueleftthai'] = 0xF887;\\n  t['sarauethai'] = 0x0E36;\\n  t['sarauthai'] = 0x0E38;\\n  t['sarauuthai'] = 0x0E39;\\n  t['sbopomofo'] = 0x3119;\\n  t['scaron'] = 0x0161;\\n  t['scarondotaccent'] = 0x1E67;\\n  t['scedilla'] = 0x015F;\\n  t['schwa'] = 0x0259;\\n  t['schwacyrillic'] = 0x04D9;\\n  t['schwadieresiscyrillic'] = 0x04DB;\\n  t['schwahook'] = 0x025A;\\n  t['scircle'] = 0x24E2;\\n  t['scircumflex'] = 0x015D;\\n  t['scommaaccent'] = 0x0219;\\n  t['sdotaccent'] = 0x1E61;\\n  t['sdotbelow'] = 0x1E63;\\n  t['sdotbelowdotaccent'] = 0x1E69;\\n  t['seagullbelowcmb'] = 0x033C;\\n  t['second'] = 0x2033;\\n  t['secondtonechinese'] = 0x02CA;\\n  t['section'] = 0x00A7;\\n  t['seenarabic'] = 0x0633;\\n  t['seenfinalarabic'] = 0xFEB2;\\n  t['seeninitialarabic'] = 0xFEB3;\\n  t['seenmedialarabic'] = 0xFEB4;\\n  t['segol'] = 0x05B6;\\n  t['segol13'] = 0x05B6;\\n  t['segol1f'] = 0x05B6;\\n  t['segol2c'] = 0x05B6;\\n  t['segolhebrew'] = 0x05B6;\\n  t['segolnarrowhebrew'] = 0x05B6;\\n  t['segolquarterhebrew'] = 0x05B6;\\n  t['segoltahebrew'] = 0x0592;\\n  t['segolwidehebrew'] = 0x05B6;\\n  t['seharmenian'] = 0x057D;\\n  t['sehiragana'] = 0x305B;\\n  t['sekatakana'] = 0x30BB;\\n  t['sekatakanahalfwidth'] = 0xFF7E;\\n  t['semicolon'] = 0x003B;\\n  t['semicolonarabic'] = 0x061B;\\n  t['semicolonmonospace'] = 0xFF1B;\\n  t['semicolonsmall'] = 0xFE54;\\n  t['semivoicedmarkkana'] = 0x309C;\\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\\n  t['sentisquare'] = 0x3322;\\n  t['sentosquare'] = 0x3323;\\n  t['seven'] = 0x0037;\\n  t['sevenarabic'] = 0x0667;\\n  t['sevenbengali'] = 0x09ED;\\n  t['sevencircle'] = 0x2466;\\n  t['sevencircleinversesansserif'] = 0x2790;\\n  t['sevendeva'] = 0x096D;\\n  t['seveneighths'] = 0x215E;\\n  t['sevengujarati'] = 0x0AED;\\n  t['sevengurmukhi'] = 0x0A6D;\\n  t['sevenhackarabic'] = 0x0667;\\n  t['sevenhangzhou'] = 0x3027;\\n  t['sevenideographicparen'] = 0x3226;\\n  t['seveninferior'] = 0x2087;\\n  t['sevenmonospace'] = 0xFF17;\\n  t['sevenoldstyle'] = 0xF737;\\n  t['sevenparen'] = 0x247A;\\n  t['sevenperiod'] = 0x248E;\\n  t['sevenpersian'] = 0x06F7;\\n  t['sevenroman'] = 0x2176;\\n  t['sevensuperior'] = 0x2077;\\n  t['seventeencircle'] = 0x2470;\\n  t['seventeenparen'] = 0x2484;\\n  t['seventeenperiod'] = 0x2498;\\n  t['seventhai'] = 0x0E57;\\n  t['sfthyphen'] = 0x00AD;\\n  t['shaarmenian'] = 0x0577;\\n  t['shabengali'] = 0x09B6;\\n  t['shacyrillic'] = 0x0448;\\n  t['shaddaarabic'] = 0x0651;\\n  t['shaddadammaarabic'] = 0xFC61;\\n  t['shaddadammatanarabic'] = 0xFC5E;\\n  t['shaddafathaarabic'] = 0xFC60;\\n  t['shaddakasraarabic'] = 0xFC62;\\n  t['shaddakasratanarabic'] = 0xFC5F;\\n  t['shade'] = 0x2592;\\n  t['shadedark'] = 0x2593;\\n  t['shadelight'] = 0x2591;\\n  t['shademedium'] = 0x2592;\\n  t['shadeva'] = 0x0936;\\n  t['shagujarati'] = 0x0AB6;\\n  t['shagurmukhi'] = 0x0A36;\\n  t['shalshelethebrew'] = 0x0593;\\n  t['shbopomofo'] = 0x3115;\\n  t['shchacyrillic'] = 0x0449;\\n  t['sheenarabic'] = 0x0634;\\n  t['sheenfinalarabic'] = 0xFEB6;\\n  t['sheeninitialarabic'] = 0xFEB7;\\n  t['sheenmedialarabic'] = 0xFEB8;\\n  t['sheicoptic'] = 0x03E3;\\n  t['sheqel'] = 0x20AA;\\n  t['sheqelhebrew'] = 0x20AA;\\n  t['sheva'] = 0x05B0;\\n  t['sheva115'] = 0x05B0;\\n  t['sheva15'] = 0x05B0;\\n  t['sheva22'] = 0x05B0;\\n  t['sheva2e'] = 0x05B0;\\n  t['shevahebrew'] = 0x05B0;\\n  t['shevanarrowhebrew'] = 0x05B0;\\n  t['shevaquarterhebrew'] = 0x05B0;\\n  t['shevawidehebrew'] = 0x05B0;\\n  t['shhacyrillic'] = 0x04BB;\\n  t['shimacoptic'] = 0x03ED;\\n  t['shin'] = 0x05E9;\\n  t['shindagesh'] = 0xFB49;\\n  t['shindageshhebrew'] = 0xFB49;\\n  t['shindageshshindot'] = 0xFB2C;\\n  t['shindageshshindothebrew'] = 0xFB2C;\\n  t['shindageshsindot'] = 0xFB2D;\\n  t['shindageshsindothebrew'] = 0xFB2D;\\n  t['shindothebrew'] = 0x05C1;\\n  t['shinhebrew'] = 0x05E9;\\n  t['shinshindot'] = 0xFB2A;\\n  t['shinshindothebrew'] = 0xFB2A;\\n  t['shinsindot'] = 0xFB2B;\\n  t['shinsindothebrew'] = 0xFB2B;\\n  t['shook'] = 0x0282;\\n  t['sigma'] = 0x03C3;\\n  t['sigma1'] = 0x03C2;\\n  t['sigmafinal'] = 0x03C2;\\n  t['sigmalunatesymbolgreek'] = 0x03F2;\\n  t['sihiragana'] = 0x3057;\\n  t['sikatakana'] = 0x30B7;\\n  t['sikatakanahalfwidth'] = 0xFF7C;\\n  t['siluqhebrew'] = 0x05BD;\\n  t['siluqlefthebrew'] = 0x05BD;\\n  t['similar'] = 0x223C;\\n  t['sindothebrew'] = 0x05C2;\\n  t['siosacirclekorean'] = 0x3274;\\n  t['siosaparenkorean'] = 0x3214;\\n  t['sioscieuckorean'] = 0x317E;\\n  t['sioscirclekorean'] = 0x3266;\\n  t['sioskiyeokkorean'] = 0x317A;\\n  t['sioskorean'] = 0x3145;\\n  t['siosnieunkorean'] = 0x317B;\\n  t['siosparenkorean'] = 0x3206;\\n  t['siospieupkorean'] = 0x317D;\\n  t['siostikeutkorean'] = 0x317C;\\n  t['six'] = 0x0036;\\n  t['sixarabic'] = 0x0666;\\n  t['sixbengali'] = 0x09EC;\\n  t['sixcircle'] = 0x2465;\\n  t['sixcircleinversesansserif'] = 0x278F;\\n  t['sixdeva'] = 0x096C;\\n  t['sixgujarati'] = 0x0AEC;\\n  t['sixgurmukhi'] = 0x0A6C;\\n  t['sixhackarabic'] = 0x0666;\\n  t['sixhangzhou'] = 0x3026;\\n  t['sixideographicparen'] = 0x3225;\\n  t['sixinferior'] = 0x2086;\\n  t['sixmonospace'] = 0xFF16;\\n  t['sixoldstyle'] = 0xF736;\\n  t['sixparen'] = 0x2479;\\n  t['sixperiod'] = 0x248D;\\n  t['sixpersian'] = 0x06F6;\\n  t['sixroman'] = 0x2175;\\n  t['sixsuperior'] = 0x2076;\\n  t['sixteencircle'] = 0x246F;\\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\\n  t['sixteenparen'] = 0x2483;\\n  t['sixteenperiod'] = 0x2497;\\n  t['sixthai'] = 0x0E56;\\n  t['slash'] = 0x002F;\\n  t['slashmonospace'] = 0xFF0F;\\n  t['slong'] = 0x017F;\\n  t['slongdotaccent'] = 0x1E9B;\\n  t['smileface'] = 0x263A;\\n  t['smonospace'] = 0xFF53;\\n  t['sofpasuqhebrew'] = 0x05C3;\\n  t['softhyphen'] = 0x00AD;\\n  t['softsigncyrillic'] = 0x044C;\\n  t['sohiragana'] = 0x305D;\\n  t['sokatakana'] = 0x30BD;\\n  t['sokatakanahalfwidth'] = 0xFF7F;\\n  t['soliduslongoverlaycmb'] = 0x0338;\\n  t['solidusshortoverlaycmb'] = 0x0337;\\n  t['sorusithai'] = 0x0E29;\\n  t['sosalathai'] = 0x0E28;\\n  t['sosothai'] = 0x0E0B;\\n  t['sosuathai'] = 0x0E2A;\\n  t['space'] = 0x0020;\\n  t['spacehackarabic'] = 0x0020;\\n  t['spade'] = 0x2660;\\n  t['spadesuitblack'] = 0x2660;\\n  t['spadesuitwhite'] = 0x2664;\\n  t['sparen'] = 0x24AE;\\n  t['squarebelowcmb'] = 0x033B;\\n  t['squarecc'] = 0x33C4;\\n  t['squarecm'] = 0x339D;\\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\\n  t['squarehorizontalfill'] = 0x25A4;\\n  t['squarekg'] = 0x338F;\\n  t['squarekm'] = 0x339E;\\n  t['squarekmcapital'] = 0x33CE;\\n  t['squareln'] = 0x33D1;\\n  t['squarelog'] = 0x33D2;\\n  t['squaremg'] = 0x338E;\\n  t['squaremil'] = 0x33D5;\\n  t['squaremm'] = 0x339C;\\n  t['squaremsquared'] = 0x33A1;\\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\\n  t['squareverticalfill'] = 0x25A5;\\n  t['squarewhitewithsmallblack'] = 0x25A3;\\n  t['srsquare'] = 0x33DB;\\n  t['ssabengali'] = 0x09B7;\\n  t['ssadeva'] = 0x0937;\\n  t['ssagujarati'] = 0x0AB7;\\n  t['ssangcieuckorean'] = 0x3149;\\n  t['ssanghieuhkorean'] = 0x3185;\\n  t['ssangieungkorean'] = 0x3180;\\n  t['ssangkiyeokkorean'] = 0x3132;\\n  t['ssangnieunkorean'] = 0x3165;\\n  t['ssangpieupkorean'] = 0x3143;\\n  t['ssangsioskorean'] = 0x3146;\\n  t['ssangtikeutkorean'] = 0x3138;\\n  t['ssuperior'] = 0xF6F2;\\n  t['sterling'] = 0x00A3;\\n  t['sterlingmonospace'] = 0xFFE1;\\n  t['strokelongoverlaycmb'] = 0x0336;\\n  t['strokeshortoverlaycmb'] = 0x0335;\\n  t['subset'] = 0x2282;\\n  t['subsetnotequal'] = 0x228A;\\n  t['subsetorequal'] = 0x2286;\\n  t['succeeds'] = 0x227B;\\n  t['suchthat'] = 0x220B;\\n  t['suhiragana'] = 0x3059;\\n  t['sukatakana'] = 0x30B9;\\n  t['sukatakanahalfwidth'] = 0xFF7D;\\n  t['sukunarabic'] = 0x0652;\\n  t['summation'] = 0x2211;\\n  t['sun'] = 0x263C;\\n  t['superset'] = 0x2283;\\n  t['supersetnotequal'] = 0x228B;\\n  t['supersetorequal'] = 0x2287;\\n  t['svsquare'] = 0x33DC;\\n  t['syouwaerasquare'] = 0x337C;\\n  t['t'] = 0x0074;\\n  t['tabengali'] = 0x09A4;\\n  t['tackdown'] = 0x22A4;\\n  t['tackleft'] = 0x22A3;\\n  t['tadeva'] = 0x0924;\\n  t['tagujarati'] = 0x0AA4;\\n  t['tagurmukhi'] = 0x0A24;\\n  t['taharabic'] = 0x0637;\\n  t['tahfinalarabic'] = 0xFEC2;\\n  t['tahinitialarabic'] = 0xFEC3;\\n  t['tahiragana'] = 0x305F;\\n  t['tahmedialarabic'] = 0xFEC4;\\n  t['taisyouerasquare'] = 0x337D;\\n  t['takatakana'] = 0x30BF;\\n  t['takatakanahalfwidth'] = 0xFF80;\\n  t['tatweelarabic'] = 0x0640;\\n  t['tau'] = 0x03C4;\\n  t['tav'] = 0x05EA;\\n  t['tavdages'] = 0xFB4A;\\n  t['tavdagesh'] = 0xFB4A;\\n  t['tavdageshhebrew'] = 0xFB4A;\\n  t['tavhebrew'] = 0x05EA;\\n  t['tbar'] = 0x0167;\\n  t['tbopomofo'] = 0x310A;\\n  t['tcaron'] = 0x0165;\\n  t['tccurl'] = 0x02A8;\\n  t['tcedilla'] = 0x0163;\\n  t['tcheharabic'] = 0x0686;\\n  t['tchehfinalarabic'] = 0xFB7B;\\n  t['tchehinitialarabic'] = 0xFB7C;\\n  t['tchehmedialarabic'] = 0xFB7D;\\n  t['tcircle'] = 0x24E3;\\n  t['tcircumflexbelow'] = 0x1E71;\\n  t['tcommaaccent'] = 0x0163;\\n  t['tdieresis'] = 0x1E97;\\n  t['tdotaccent'] = 0x1E6B;\\n  t['tdotbelow'] = 0x1E6D;\\n  t['tecyrillic'] = 0x0442;\\n  t['tedescendercyrillic'] = 0x04AD;\\n  t['teharabic'] = 0x062A;\\n  t['tehfinalarabic'] = 0xFE96;\\n  t['tehhahinitialarabic'] = 0xFCA2;\\n  t['tehhahisolatedarabic'] = 0xFC0C;\\n  t['tehinitialarabic'] = 0xFE97;\\n  t['tehiragana'] = 0x3066;\\n  t['tehjeeminitialarabic'] = 0xFCA1;\\n  t['tehjeemisolatedarabic'] = 0xFC0B;\\n  t['tehmarbutaarabic'] = 0x0629;\\n  t['tehmarbutafinalarabic'] = 0xFE94;\\n  t['tehmedialarabic'] = 0xFE98;\\n  t['tehmeeminitialarabic'] = 0xFCA4;\\n  t['tehmeemisolatedarabic'] = 0xFC0E;\\n  t['tehnoonfinalarabic'] = 0xFC73;\\n  t['tekatakana'] = 0x30C6;\\n  t['tekatakanahalfwidth'] = 0xFF83;\\n  t['telephone'] = 0x2121;\\n  t['telephoneblack'] = 0x260E;\\n  t['telishagedolahebrew'] = 0x05A0;\\n  t['telishaqetanahebrew'] = 0x05A9;\\n  t['tencircle'] = 0x2469;\\n  t['tenideographicparen'] = 0x3229;\\n  t['tenparen'] = 0x247D;\\n  t['tenperiod'] = 0x2491;\\n  t['tenroman'] = 0x2179;\\n  t['tesh'] = 0x02A7;\\n  t['tet'] = 0x05D8;\\n  t['tetdagesh'] = 0xFB38;\\n  t['tetdageshhebrew'] = 0xFB38;\\n  t['tethebrew'] = 0x05D8;\\n  t['tetsecyrillic'] = 0x04B5;\\n  t['tevirhebrew'] = 0x059B;\\n  t['tevirlefthebrew'] = 0x059B;\\n  t['thabengali'] = 0x09A5;\\n  t['thadeva'] = 0x0925;\\n  t['thagujarati'] = 0x0AA5;\\n  t['thagurmukhi'] = 0x0A25;\\n  t['thalarabic'] = 0x0630;\\n  t['thalfinalarabic'] = 0xFEAC;\\n  t['thanthakhatlowleftthai'] = 0xF898;\\n  t['thanthakhatlowrightthai'] = 0xF897;\\n  t['thanthakhatthai'] = 0x0E4C;\\n  t['thanthakhatupperleftthai'] = 0xF896;\\n  t['theharabic'] = 0x062B;\\n  t['thehfinalarabic'] = 0xFE9A;\\n  t['thehinitialarabic'] = 0xFE9B;\\n  t['thehmedialarabic'] = 0xFE9C;\\n  t['thereexists'] = 0x2203;\\n  t['therefore'] = 0x2234;\\n  t['theta'] = 0x03B8;\\n  t['theta1'] = 0x03D1;\\n  t['thetasymbolgreek'] = 0x03D1;\\n  t['thieuthacirclekorean'] = 0x3279;\\n  t['thieuthaparenkorean'] = 0x3219;\\n  t['thieuthcirclekorean'] = 0x326B;\\n  t['thieuthkorean'] = 0x314C;\\n  t['thieuthparenkorean'] = 0x320B;\\n  t['thirteencircle'] = 0x246C;\\n  t['thirteenparen'] = 0x2480;\\n  t['thirteenperiod'] = 0x2494;\\n  t['thonangmonthothai'] = 0x0E11;\\n  t['thook'] = 0x01AD;\\n  t['thophuthaothai'] = 0x0E12;\\n  t['thorn'] = 0x00FE;\\n  t['thothahanthai'] = 0x0E17;\\n  t['thothanthai'] = 0x0E10;\\n  t['thothongthai'] = 0x0E18;\\n  t['thothungthai'] = 0x0E16;\\n  t['thousandcyrillic'] = 0x0482;\\n  t['thousandsseparatorarabic'] = 0x066C;\\n  t['thousandsseparatorpersian'] = 0x066C;\\n  t['three'] = 0x0033;\\n  t['threearabic'] = 0x0663;\\n  t['threebengali'] = 0x09E9;\\n  t['threecircle'] = 0x2462;\\n  t['threecircleinversesansserif'] = 0x278C;\\n  t['threedeva'] = 0x0969;\\n  t['threeeighths'] = 0x215C;\\n  t['threegujarati'] = 0x0AE9;\\n  t['threegurmukhi'] = 0x0A69;\\n  t['threehackarabic'] = 0x0663;\\n  t['threehangzhou'] = 0x3023;\\n  t['threeideographicparen'] = 0x3222;\\n  t['threeinferior'] = 0x2083;\\n  t['threemonospace'] = 0xFF13;\\n  t['threenumeratorbengali'] = 0x09F6;\\n  t['threeoldstyle'] = 0xF733;\\n  t['threeparen'] = 0x2476;\\n  t['threeperiod'] = 0x248A;\\n  t['threepersian'] = 0x06F3;\\n  t['threequarters'] = 0x00BE;\\n  t['threequartersemdash'] = 0xF6DE;\\n  t['threeroman'] = 0x2172;\\n  t['threesuperior'] = 0x00B3;\\n  t['threethai'] = 0x0E53;\\n  t['thzsquare'] = 0x3394;\\n  t['tihiragana'] = 0x3061;\\n  t['tikatakana'] = 0x30C1;\\n  t['tikatakanahalfwidth'] = 0xFF81;\\n  t['tikeutacirclekorean'] = 0x3270;\\n  t['tikeutaparenkorean'] = 0x3210;\\n  t['tikeutcirclekorean'] = 0x3262;\\n  t['tikeutkorean'] = 0x3137;\\n  t['tikeutparenkorean'] = 0x3202;\\n  t['tilde'] = 0x02DC;\\n  t['tildebelowcmb'] = 0x0330;\\n  t['tildecmb'] = 0x0303;\\n  t['tildecomb'] = 0x0303;\\n  t['tildedoublecmb'] = 0x0360;\\n  t['tildeoperator'] = 0x223C;\\n  t['tildeoverlaycmb'] = 0x0334;\\n  t['tildeverticalcmb'] = 0x033E;\\n  t['timescircle'] = 0x2297;\\n  t['tipehahebrew'] = 0x0596;\\n  t['tipehalefthebrew'] = 0x0596;\\n  t['tippigurmukhi'] = 0x0A70;\\n  t['titlocyrilliccmb'] = 0x0483;\\n  t['tiwnarmenian'] = 0x057F;\\n  t['tlinebelow'] = 0x1E6F;\\n  t['tmonospace'] = 0xFF54;\\n  t['toarmenian'] = 0x0569;\\n  t['tohiragana'] = 0x3068;\\n  t['tokatakana'] = 0x30C8;\\n  t['tokatakanahalfwidth'] = 0xFF84;\\n  t['tonebarextrahighmod'] = 0x02E5;\\n  t['tonebarextralowmod'] = 0x02E9;\\n  t['tonebarhighmod'] = 0x02E6;\\n  t['tonebarlowmod'] = 0x02E8;\\n  t['tonebarmidmod'] = 0x02E7;\\n  t['tonefive'] = 0x01BD;\\n  t['tonesix'] = 0x0185;\\n  t['tonetwo'] = 0x01A8;\\n  t['tonos'] = 0x0384;\\n  t['tonsquare'] = 0x3327;\\n  t['topatakthai'] = 0x0E0F;\\n  t['tortoiseshellbracketleft'] = 0x3014;\\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\\n  t['tortoiseshellbracketright'] = 0x3015;\\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\\n  t['totaothai'] = 0x0E15;\\n  t['tpalatalhook'] = 0x01AB;\\n  t['tparen'] = 0x24AF;\\n  t['trademark'] = 0x2122;\\n  t['trademarksans'] = 0xF8EA;\\n  t['trademarkserif'] = 0xF6DB;\\n  t['tretroflexhook'] = 0x0288;\\n  t['triagdn'] = 0x25BC;\\n  t['triaglf'] = 0x25C4;\\n  t['triagrt'] = 0x25BA;\\n  t['triagup'] = 0x25B2;\\n  t['ts'] = 0x02A6;\\n  t['tsadi'] = 0x05E6;\\n  t['tsadidagesh'] = 0xFB46;\\n  t['tsadidageshhebrew'] = 0xFB46;\\n  t['tsadihebrew'] = 0x05E6;\\n  t['tsecyrillic'] = 0x0446;\\n  t['tsere'] = 0x05B5;\\n  t['tsere12'] = 0x05B5;\\n  t['tsere1e'] = 0x05B5;\\n  t['tsere2b'] = 0x05B5;\\n  t['tserehebrew'] = 0x05B5;\\n  t['tserenarrowhebrew'] = 0x05B5;\\n  t['tserequarterhebrew'] = 0x05B5;\\n  t['tserewidehebrew'] = 0x05B5;\\n  t['tshecyrillic'] = 0x045B;\\n  t['tsuperior'] = 0xF6F3;\\n  t['ttabengali'] = 0x099F;\\n  t['ttadeva'] = 0x091F;\\n  t['ttagujarati'] = 0x0A9F;\\n  t['ttagurmukhi'] = 0x0A1F;\\n  t['tteharabic'] = 0x0679;\\n  t['ttehfinalarabic'] = 0xFB67;\\n  t['ttehinitialarabic'] = 0xFB68;\\n  t['ttehmedialarabic'] = 0xFB69;\\n  t['tthabengali'] = 0x09A0;\\n  t['tthadeva'] = 0x0920;\\n  t['tthagujarati'] = 0x0AA0;\\n  t['tthagurmukhi'] = 0x0A20;\\n  t['tturned'] = 0x0287;\\n  t['tuhiragana'] = 0x3064;\\n  t['tukatakana'] = 0x30C4;\\n  t['tukatakanahalfwidth'] = 0xFF82;\\n  t['tusmallhiragana'] = 0x3063;\\n  t['tusmallkatakana'] = 0x30C3;\\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\\n  t['twelvecircle'] = 0x246B;\\n  t['twelveparen'] = 0x247F;\\n  t['twelveperiod'] = 0x2493;\\n  t['twelveroman'] = 0x217B;\\n  t['twentycircle'] = 0x2473;\\n  t['twentyhangzhou'] = 0x5344;\\n  t['twentyparen'] = 0x2487;\\n  t['twentyperiod'] = 0x249B;\\n  t['two'] = 0x0032;\\n  t['twoarabic'] = 0x0662;\\n  t['twobengali'] = 0x09E8;\\n  t['twocircle'] = 0x2461;\\n  t['twocircleinversesansserif'] = 0x278B;\\n  t['twodeva'] = 0x0968;\\n  t['twodotenleader'] = 0x2025;\\n  t['twodotleader'] = 0x2025;\\n  t['twodotleadervertical'] = 0xFE30;\\n  t['twogujarati'] = 0x0AE8;\\n  t['twogurmukhi'] = 0x0A68;\\n  t['twohackarabic'] = 0x0662;\\n  t['twohangzhou'] = 0x3022;\\n  t['twoideographicparen'] = 0x3221;\\n  t['twoinferior'] = 0x2082;\\n  t['twomonospace'] = 0xFF12;\\n  t['twonumeratorbengali'] = 0x09F5;\\n  t['twooldstyle'] = 0xF732;\\n  t['twoparen'] = 0x2475;\\n  t['twoperiod'] = 0x2489;\\n  t['twopersian'] = 0x06F2;\\n  t['tworoman'] = 0x2171;\\n  t['twostroke'] = 0x01BB;\\n  t['twosuperior'] = 0x00B2;\\n  t['twothai'] = 0x0E52;\\n  t['twothirds'] = 0x2154;\\n  t['u'] = 0x0075;\\n  t['uacute'] = 0x00FA;\\n  t['ubar'] = 0x0289;\\n  t['ubengali'] = 0x0989;\\n  t['ubopomofo'] = 0x3128;\\n  t['ubreve'] = 0x016D;\\n  t['ucaron'] = 0x01D4;\\n  t['ucircle'] = 0x24E4;\\n  t['ucircumflex'] = 0x00FB;\\n  t['ucircumflexbelow'] = 0x1E77;\\n  t['ucyrillic'] = 0x0443;\\n  t['udattadeva'] = 0x0951;\\n  t['udblacute'] = 0x0171;\\n  t['udblgrave'] = 0x0215;\\n  t['udeva'] = 0x0909;\\n  t['udieresis'] = 0x00FC;\\n  t['udieresisacute'] = 0x01D8;\\n  t['udieresisbelow'] = 0x1E73;\\n  t['udieresiscaron'] = 0x01DA;\\n  t['udieresiscyrillic'] = 0x04F1;\\n  t['udieresisgrave'] = 0x01DC;\\n  t['udieresismacron'] = 0x01D6;\\n  t['udotbelow'] = 0x1EE5;\\n  t['ugrave'] = 0x00F9;\\n  t['ugujarati'] = 0x0A89;\\n  t['ugurmukhi'] = 0x0A09;\\n  t['uhiragana'] = 0x3046;\\n  t['uhookabove'] = 0x1EE7;\\n  t['uhorn'] = 0x01B0;\\n  t['uhornacute'] = 0x1EE9;\\n  t['uhorndotbelow'] = 0x1EF1;\\n  t['uhorngrave'] = 0x1EEB;\\n  t['uhornhookabove'] = 0x1EED;\\n  t['uhorntilde'] = 0x1EEF;\\n  t['uhungarumlaut'] = 0x0171;\\n  t['uhungarumlautcyrillic'] = 0x04F3;\\n  t['uinvertedbreve'] = 0x0217;\\n  t['ukatakana'] = 0x30A6;\\n  t['ukatakanahalfwidth'] = 0xFF73;\\n  t['ukcyrillic'] = 0x0479;\\n  t['ukorean'] = 0x315C;\\n  t['umacron'] = 0x016B;\\n  t['umacroncyrillic'] = 0x04EF;\\n  t['umacrondieresis'] = 0x1E7B;\\n  t['umatragurmukhi'] = 0x0A41;\\n  t['umonospace'] = 0xFF55;\\n  t['underscore'] = 0x005F;\\n  t['underscoredbl'] = 0x2017;\\n  t['underscoremonospace'] = 0xFF3F;\\n  t['underscorevertical'] = 0xFE33;\\n  t['underscorewavy'] = 0xFE4F;\\n  t['union'] = 0x222A;\\n  t['universal'] = 0x2200;\\n  t['uogonek'] = 0x0173;\\n  t['uparen'] = 0x24B0;\\n  t['upblock'] = 0x2580;\\n  t['upperdothebrew'] = 0x05C4;\\n  t['upsilon'] = 0x03C5;\\n  t['upsilondieresis'] = 0x03CB;\\n  t['upsilondieresistonos'] = 0x03B0;\\n  t['upsilonlatin'] = 0x028A;\\n  t['upsilontonos'] = 0x03CD;\\n  t['uptackbelowcmb'] = 0x031D;\\n  t['uptackmod'] = 0x02D4;\\n  t['uragurmukhi'] = 0x0A73;\\n  t['uring'] = 0x016F;\\n  t['ushortcyrillic'] = 0x045E;\\n  t['usmallhiragana'] = 0x3045;\\n  t['usmallkatakana'] = 0x30A5;\\n  t['usmallkatakanahalfwidth'] = 0xFF69;\\n  t['ustraightcyrillic'] = 0x04AF;\\n  t['ustraightstrokecyrillic'] = 0x04B1;\\n  t['utilde'] = 0x0169;\\n  t['utildeacute'] = 0x1E79;\\n  t['utildebelow'] = 0x1E75;\\n  t['uubengali'] = 0x098A;\\n  t['uudeva'] = 0x090A;\\n  t['uugujarati'] = 0x0A8A;\\n  t['uugurmukhi'] = 0x0A0A;\\n  t['uumatragurmukhi'] = 0x0A42;\\n  t['uuvowelsignbengali'] = 0x09C2;\\n  t['uuvowelsigndeva'] = 0x0942;\\n  t['uuvowelsigngujarati'] = 0x0AC2;\\n  t['uvowelsignbengali'] = 0x09C1;\\n  t['uvowelsigndeva'] = 0x0941;\\n  t['uvowelsigngujarati'] = 0x0AC1;\\n  t['v'] = 0x0076;\\n  t['vadeva'] = 0x0935;\\n  t['vagujarati'] = 0x0AB5;\\n  t['vagurmukhi'] = 0x0A35;\\n  t['vakatakana'] = 0x30F7;\\n  t['vav'] = 0x05D5;\\n  t['vavdagesh'] = 0xFB35;\\n  t['vavdagesh65'] = 0xFB35;\\n  t['vavdageshhebrew'] = 0xFB35;\\n  t['vavhebrew'] = 0x05D5;\\n  t['vavholam'] = 0xFB4B;\\n  t['vavholamhebrew'] = 0xFB4B;\\n  t['vavvavhebrew'] = 0x05F0;\\n  t['vavyodhebrew'] = 0x05F1;\\n  t['vcircle'] = 0x24E5;\\n  t['vdotbelow'] = 0x1E7F;\\n  t['vecyrillic'] = 0x0432;\\n  t['veharabic'] = 0x06A4;\\n  t['vehfinalarabic'] = 0xFB6B;\\n  t['vehinitialarabic'] = 0xFB6C;\\n  t['vehmedialarabic'] = 0xFB6D;\\n  t['vekatakana'] = 0x30F9;\\n  t['venus'] = 0x2640;\\n  t['verticalbar'] = 0x007C;\\n  t['verticallineabovecmb'] = 0x030D;\\n  t['verticallinebelowcmb'] = 0x0329;\\n  t['verticallinelowmod'] = 0x02CC;\\n  t['verticallinemod'] = 0x02C8;\\n  t['vewarmenian'] = 0x057E;\\n  t['vhook'] = 0x028B;\\n  t['vikatakana'] = 0x30F8;\\n  t['viramabengali'] = 0x09CD;\\n  t['viramadeva'] = 0x094D;\\n  t['viramagujarati'] = 0x0ACD;\\n  t['visargabengali'] = 0x0983;\\n  t['visargadeva'] = 0x0903;\\n  t['visargagujarati'] = 0x0A83;\\n  t['vmonospace'] = 0xFF56;\\n  t['voarmenian'] = 0x0578;\\n  t['voicediterationhiragana'] = 0x309E;\\n  t['voicediterationkatakana'] = 0x30FE;\\n  t['voicedmarkkana'] = 0x309B;\\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\\n  t['vokatakana'] = 0x30FA;\\n  t['vparen'] = 0x24B1;\\n  t['vtilde'] = 0x1E7D;\\n  t['vturned'] = 0x028C;\\n  t['vuhiragana'] = 0x3094;\\n  t['vukatakana'] = 0x30F4;\\n  t['w'] = 0x0077;\\n  t['wacute'] = 0x1E83;\\n  t['waekorean'] = 0x3159;\\n  t['wahiragana'] = 0x308F;\\n  t['wakatakana'] = 0x30EF;\\n  t['wakatakanahalfwidth'] = 0xFF9C;\\n  t['wakorean'] = 0x3158;\\n  t['wasmallhiragana'] = 0x308E;\\n  t['wasmallkatakana'] = 0x30EE;\\n  t['wattosquare'] = 0x3357;\\n  t['wavedash'] = 0x301C;\\n  t['wavyunderscorevertical'] = 0xFE34;\\n  t['wawarabic'] = 0x0648;\\n  t['wawfinalarabic'] = 0xFEEE;\\n  t['wawhamzaabovearabic'] = 0x0624;\\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\\n  t['wbsquare'] = 0x33DD;\\n  t['wcircle'] = 0x24E6;\\n  t['wcircumflex'] = 0x0175;\\n  t['wdieresis'] = 0x1E85;\\n  t['wdotaccent'] = 0x1E87;\\n  t['wdotbelow'] = 0x1E89;\\n  t['wehiragana'] = 0x3091;\\n  t['weierstrass'] = 0x2118;\\n  t['wekatakana'] = 0x30F1;\\n  t['wekorean'] = 0x315E;\\n  t['weokorean'] = 0x315D;\\n  t['wgrave'] = 0x1E81;\\n  t['whitebullet'] = 0x25E6;\\n  t['whitecircle'] = 0x25CB;\\n  t['whitecircleinverse'] = 0x25D9;\\n  t['whitecornerbracketleft'] = 0x300E;\\n  t['whitecornerbracketleftvertical'] = 0xFE43;\\n  t['whitecornerbracketright'] = 0x300F;\\n  t['whitecornerbracketrightvertical'] = 0xFE44;\\n  t['whitediamond'] = 0x25C7;\\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\\n  t['whitedownpointingtriangle'] = 0x25BD;\\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\\n  t['whiteleftpointingtriangle'] = 0x25C1;\\n  t['whitelenticularbracketleft'] = 0x3016;\\n  t['whitelenticularbracketright'] = 0x3017;\\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\\n  t['whiterightpointingtriangle'] = 0x25B7;\\n  t['whitesmallsquare'] = 0x25AB;\\n  t['whitesmilingface'] = 0x263A;\\n  t['whitesquare'] = 0x25A1;\\n  t['whitestar'] = 0x2606;\\n  t['whitetelephone'] = 0x260F;\\n  t['whitetortoiseshellbracketleft'] = 0x3018;\\n  t['whitetortoiseshellbracketright'] = 0x3019;\\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\\n  t['whiteuppointingtriangle'] = 0x25B3;\\n  t['wihiragana'] = 0x3090;\\n  t['wikatakana'] = 0x30F0;\\n  t['wikorean'] = 0x315F;\\n  t['wmonospace'] = 0xFF57;\\n  t['wohiragana'] = 0x3092;\\n  t['wokatakana'] = 0x30F2;\\n  t['wokatakanahalfwidth'] = 0xFF66;\\n  t['won'] = 0x20A9;\\n  t['wonmonospace'] = 0xFFE6;\\n  t['wowaenthai'] = 0x0E27;\\n  t['wparen'] = 0x24B2;\\n  t['wring'] = 0x1E98;\\n  t['wsuperior'] = 0x02B7;\\n  t['wturned'] = 0x028D;\\n  t['wynn'] = 0x01BF;\\n  t['x'] = 0x0078;\\n  t['xabovecmb'] = 0x033D;\\n  t['xbopomofo'] = 0x3112;\\n  t['xcircle'] = 0x24E7;\\n  t['xdieresis'] = 0x1E8D;\\n  t['xdotaccent'] = 0x1E8B;\\n  t['xeharmenian'] = 0x056D;\\n  t['xi'] = 0x03BE;\\n  t['xmonospace'] = 0xFF58;\\n  t['xparen'] = 0x24B3;\\n  t['xsuperior'] = 0x02E3;\\n  t['y'] = 0x0079;\\n  t['yaadosquare'] = 0x334E;\\n  t['yabengali'] = 0x09AF;\\n  t['yacute'] = 0x00FD;\\n  t['yadeva'] = 0x092F;\\n  t['yaekorean'] = 0x3152;\\n  t['yagujarati'] = 0x0AAF;\\n  t['yagurmukhi'] = 0x0A2F;\\n  t['yahiragana'] = 0x3084;\\n  t['yakatakana'] = 0x30E4;\\n  t['yakatakanahalfwidth'] = 0xFF94;\\n  t['yakorean'] = 0x3151;\\n  t['yamakkanthai'] = 0x0E4E;\\n  t['yasmallhiragana'] = 0x3083;\\n  t['yasmallkatakana'] = 0x30E3;\\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\\n  t['yatcyrillic'] = 0x0463;\\n  t['ycircle'] = 0x24E8;\\n  t['ycircumflex'] = 0x0177;\\n  t['ydieresis'] = 0x00FF;\\n  t['ydotaccent'] = 0x1E8F;\\n  t['ydotbelow'] = 0x1EF5;\\n  t['yeharabic'] = 0x064A;\\n  t['yehbarreearabic'] = 0x06D2;\\n  t['yehbarreefinalarabic'] = 0xFBAF;\\n  t['yehfinalarabic'] = 0xFEF2;\\n  t['yehhamzaabovearabic'] = 0x0626;\\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\\n  t['yehinitialarabic'] = 0xFEF3;\\n  t['yehmedialarabic'] = 0xFEF4;\\n  t['yehmeeminitialarabic'] = 0xFCDD;\\n  t['yehmeemisolatedarabic'] = 0xFC58;\\n  t['yehnoonfinalarabic'] = 0xFC94;\\n  t['yehthreedotsbelowarabic'] = 0x06D1;\\n  t['yekorean'] = 0x3156;\\n  t['yen'] = 0x00A5;\\n  t['yenmonospace'] = 0xFFE5;\\n  t['yeokorean'] = 0x3155;\\n  t['yeorinhieuhkorean'] = 0x3186;\\n  t['yerahbenyomohebrew'] = 0x05AA;\\n  t['yerahbenyomolefthebrew'] = 0x05AA;\\n  t['yericyrillic'] = 0x044B;\\n  t['yerudieresiscyrillic'] = 0x04F9;\\n  t['yesieungkorean'] = 0x3181;\\n  t['yesieungpansioskorean'] = 0x3183;\\n  t['yesieungsioskorean'] = 0x3182;\\n  t['yetivhebrew'] = 0x059A;\\n  t['ygrave'] = 0x1EF3;\\n  t['yhook'] = 0x01B4;\\n  t['yhookabove'] = 0x1EF7;\\n  t['yiarmenian'] = 0x0575;\\n  t['yicyrillic'] = 0x0457;\\n  t['yikorean'] = 0x3162;\\n  t['yinyang'] = 0x262F;\\n  t['yiwnarmenian'] = 0x0582;\\n  t['ymonospace'] = 0xFF59;\\n  t['yod'] = 0x05D9;\\n  t['yoddagesh'] = 0xFB39;\\n  t['yoddageshhebrew'] = 0xFB39;\\n  t['yodhebrew'] = 0x05D9;\\n  t['yodyodhebrew'] = 0x05F2;\\n  t['yodyodpatahhebrew'] = 0xFB1F;\\n  t['yohiragana'] = 0x3088;\\n  t['yoikorean'] = 0x3189;\\n  t['yokatakana'] = 0x30E8;\\n  t['yokatakanahalfwidth'] = 0xFF96;\\n  t['yokorean'] = 0x315B;\\n  t['yosmallhiragana'] = 0x3087;\\n  t['yosmallkatakana'] = 0x30E7;\\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\\n  t['yotgreek'] = 0x03F3;\\n  t['yoyaekorean'] = 0x3188;\\n  t['yoyakorean'] = 0x3187;\\n  t['yoyakthai'] = 0x0E22;\\n  t['yoyingthai'] = 0x0E0D;\\n  t['yparen'] = 0x24B4;\\n  t['ypogegrammeni'] = 0x037A;\\n  t['ypogegrammenigreekcmb'] = 0x0345;\\n  t['yr'] = 0x01A6;\\n  t['yring'] = 0x1E99;\\n  t['ysuperior'] = 0x02B8;\\n  t['ytilde'] = 0x1EF9;\\n  t['yturned'] = 0x028E;\\n  t['yuhiragana'] = 0x3086;\\n  t['yuikorean'] = 0x318C;\\n  t['yukatakana'] = 0x30E6;\\n  t['yukatakanahalfwidth'] = 0xFF95;\\n  t['yukorean'] = 0x3160;\\n  t['yusbigcyrillic'] = 0x046B;\\n  t['yusbigiotifiedcyrillic'] = 0x046D;\\n  t['yuslittlecyrillic'] = 0x0467;\\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\\n  t['yusmallhiragana'] = 0x3085;\\n  t['yusmallkatakana'] = 0x30E5;\\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\\n  t['yuyekorean'] = 0x318B;\\n  t['yuyeokorean'] = 0x318A;\\n  t['yyabengali'] = 0x09DF;\\n  t['yyadeva'] = 0x095F;\\n  t['z'] = 0x007A;\\n  t['zaarmenian'] = 0x0566;\\n  t['zacute'] = 0x017A;\\n  t['zadeva'] = 0x095B;\\n  t['zagurmukhi'] = 0x0A5B;\\n  t['zaharabic'] = 0x0638;\\n  t['zahfinalarabic'] = 0xFEC6;\\n  t['zahinitialarabic'] = 0xFEC7;\\n  t['zahiragana'] = 0x3056;\\n  t['zahmedialarabic'] = 0xFEC8;\\n  t['zainarabic'] = 0x0632;\\n  t['zainfinalarabic'] = 0xFEB0;\\n  t['zakatakana'] = 0x30B6;\\n  t['zaqefgadolhebrew'] = 0x0595;\\n  t['zaqefqatanhebrew'] = 0x0594;\\n  t['zarqahebrew'] = 0x0598;\\n  t['zayin'] = 0x05D6;\\n  t['zayindagesh'] = 0xFB36;\\n  t['zayindageshhebrew'] = 0xFB36;\\n  t['zayinhebrew'] = 0x05D6;\\n  t['zbopomofo'] = 0x3117;\\n  t['zcaron'] = 0x017E;\\n  t['zcircle'] = 0x24E9;\\n  t['zcircumflex'] = 0x1E91;\\n  t['zcurl'] = 0x0291;\\n  t['zdot'] = 0x017C;\\n  t['zdotaccent'] = 0x017C;\\n  t['zdotbelow'] = 0x1E93;\\n  t['zecyrillic'] = 0x0437;\\n  t['zedescendercyrillic'] = 0x0499;\\n  t['zedieresiscyrillic'] = 0x04DF;\\n  t['zehiragana'] = 0x305C;\\n  t['zekatakana'] = 0x30BC;\\n  t['zero'] = 0x0030;\\n  t['zeroarabic'] = 0x0660;\\n  t['zerobengali'] = 0x09E6;\\n  t['zerodeva'] = 0x0966;\\n  t['zerogujarati'] = 0x0AE6;\\n  t['zerogurmukhi'] = 0x0A66;\\n  t['zerohackarabic'] = 0x0660;\\n  t['zeroinferior'] = 0x2080;\\n  t['zeromonospace'] = 0xFF10;\\n  t['zerooldstyle'] = 0xF730;\\n  t['zeropersian'] = 0x06F0;\\n  t['zerosuperior'] = 0x2070;\\n  t['zerothai'] = 0x0E50;\\n  t['zerowidthjoiner'] = 0xFEFF;\\n  t['zerowidthnonjoiner'] = 0x200C;\\n  t['zerowidthspace'] = 0x200B;\\n  t['zeta'] = 0x03B6;\\n  t['zhbopomofo'] = 0x3113;\\n  t['zhearmenian'] = 0x056A;\\n  t['zhebrevecyrillic'] = 0x04C2;\\n  t['zhecyrillic'] = 0x0436;\\n  t['zhedescendercyrillic'] = 0x0497;\\n  t['zhedieresiscyrillic'] = 0x04DD;\\n  t['zihiragana'] = 0x3058;\\n  t['zikatakana'] = 0x30B8;\\n  t['zinorhebrew'] = 0x05AE;\\n  t['zlinebelow'] = 0x1E95;\\n  t['zmonospace'] = 0xFF5A;\\n  t['zohiragana'] = 0x305E;\\n  t['zokatakana'] = 0x30BE;\\n  t['zparen'] = 0x24B5;\\n  t['zretroflexhook'] = 0x0290;\\n  t['zstroke'] = 0x01B6;\\n  t['zuhiragana'] = 0x305A;\\n  t['zukatakana'] = 0x30BA;\\n  t['.notdef'] = 0x0000;\\n  t['angbracketleftbig'] = 0x2329;\\n  t['angbracketleftBig'] = 0x2329;\\n  t['angbracketleftbigg'] = 0x2329;\\n  t['angbracketleftBigg'] = 0x2329;\\n  t['angbracketrightBig'] = 0x232A;\\n  t['angbracketrightbig'] = 0x232A;\\n  t['angbracketrightBigg'] = 0x232A;\\n  t['angbracketrightbigg'] = 0x232A;\\n  t['arrowhookleft'] = 0x21AA;\\n  t['arrowhookright'] = 0x21A9;\\n  t['arrowlefttophalf'] = 0x21BC;\\n  t['arrowleftbothalf'] = 0x21BD;\\n  t['arrownortheast'] = 0x2197;\\n  t['arrownorthwest'] = 0x2196;\\n  t['arrowrighttophalf'] = 0x21C0;\\n  t['arrowrightbothalf'] = 0x21C1;\\n  t['arrowsoutheast'] = 0x2198;\\n  t['arrowsouthwest'] = 0x2199;\\n  t['backslashbig'] = 0x2216;\\n  t['backslashBig'] = 0x2216;\\n  t['backslashBigg'] = 0x2216;\\n  t['backslashbigg'] = 0x2216;\\n  t['bardbl'] = 0x2016;\\n  t['bracehtipdownleft'] = 0xFE37;\\n  t['bracehtipdownright'] = 0xFE37;\\n  t['bracehtipupleft'] = 0xFE38;\\n  t['bracehtipupright'] = 0xFE38;\\n  t['braceleftBig'] = 0x007B;\\n  t['braceleftbig'] = 0x007B;\\n  t['braceleftbigg'] = 0x007B;\\n  t['braceleftBigg'] = 0x007B;\\n  t['bracerightBig'] = 0x007D;\\n  t['bracerightbig'] = 0x007D;\\n  t['bracerightbigg'] = 0x007D;\\n  t['bracerightBigg'] = 0x007D;\\n  t['bracketleftbig'] = 0x005B;\\n  t['bracketleftBig'] = 0x005B;\\n  t['bracketleftbigg'] = 0x005B;\\n  t['bracketleftBigg'] = 0x005B;\\n  t['bracketrightBig'] = 0x005D;\\n  t['bracketrightbig'] = 0x005D;\\n  t['bracketrightbigg'] = 0x005D;\\n  t['bracketrightBigg'] = 0x005D;\\n  t['ceilingleftbig'] = 0x2308;\\n  t['ceilingleftBig'] = 0x2308;\\n  t['ceilingleftBigg'] = 0x2308;\\n  t['ceilingleftbigg'] = 0x2308;\\n  t['ceilingrightbig'] = 0x2309;\\n  t['ceilingrightBig'] = 0x2309;\\n  t['ceilingrightbigg'] = 0x2309;\\n  t['ceilingrightBigg'] = 0x2309;\\n  t['circledotdisplay'] = 0x2299;\\n  t['circledottext'] = 0x2299;\\n  t['circlemultiplydisplay'] = 0x2297;\\n  t['circlemultiplytext'] = 0x2297;\\n  t['circleplusdisplay'] = 0x2295;\\n  t['circleplustext'] = 0x2295;\\n  t['contintegraldisplay'] = 0x222E;\\n  t['contintegraltext'] = 0x222E;\\n  t['coproductdisplay'] = 0x2210;\\n  t['coproducttext'] = 0x2210;\\n  t['floorleftBig'] = 0x230A;\\n  t['floorleftbig'] = 0x230A;\\n  t['floorleftbigg'] = 0x230A;\\n  t['floorleftBigg'] = 0x230A;\\n  t['floorrightbig'] = 0x230B;\\n  t['floorrightBig'] = 0x230B;\\n  t['floorrightBigg'] = 0x230B;\\n  t['floorrightbigg'] = 0x230B;\\n  t['hatwide'] = 0x0302;\\n  t['hatwider'] = 0x0302;\\n  t['hatwidest'] = 0x0302;\\n  t['intercal'] = 0x1D40;\\n  t['integraldisplay'] = 0x222B;\\n  t['integraltext'] = 0x222B;\\n  t['intersectiondisplay'] = 0x22C2;\\n  t['intersectiontext'] = 0x22C2;\\n  t['logicalanddisplay'] = 0x2227;\\n  t['logicalandtext'] = 0x2227;\\n  t['logicalordisplay'] = 0x2228;\\n  t['logicalortext'] = 0x2228;\\n  t['parenleftBig'] = 0x0028;\\n  t['parenleftbig'] = 0x0028;\\n  t['parenleftBigg'] = 0x0028;\\n  t['parenleftbigg'] = 0x0028;\\n  t['parenrightBig'] = 0x0029;\\n  t['parenrightbig'] = 0x0029;\\n  t['parenrightBigg'] = 0x0029;\\n  t['parenrightbigg'] = 0x0029;\\n  t['prime'] = 0x2032;\\n  t['productdisplay'] = 0x220F;\\n  t['producttext'] = 0x220F;\\n  t['radicalbig'] = 0x221A;\\n  t['radicalBig'] = 0x221A;\\n  t['radicalBigg'] = 0x221A;\\n  t['radicalbigg'] = 0x221A;\\n  t['radicalbt'] = 0x221A;\\n  t['radicaltp'] = 0x221A;\\n  t['radicalvertex'] = 0x221A;\\n  t['slashbig'] = 0x002F;\\n  t['slashBig'] = 0x002F;\\n  t['slashBigg'] = 0x002F;\\n  t['slashbigg'] = 0x002F;\\n  t['summationdisplay'] = 0x2211;\\n  t['summationtext'] = 0x2211;\\n  t['tildewide'] = 0x02DC;\\n  t['tildewider'] = 0x02DC;\\n  t['tildewidest'] = 0x02DC;\\n  t['uniondisplay'] = 0x22C3;\\n  t['unionmultidisplay'] = 0x228E;\\n  t['unionmultitext'] = 0x228E;\\n  t['unionsqdisplay'] = 0x2294;\\n  t['unionsqtext'] = 0x2294;\\n  t['uniontext'] = 0x22C3;\\n  t['vextenddouble'] = 0x2225;\\n  t['vextendsingle'] = 0x2223;\\n});\\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\\n  t['space'] = 0x0020;\\n  t['a1'] = 0x2701;\\n  t['a2'] = 0x2702;\\n  t['a202'] = 0x2703;\\n  t['a3'] = 0x2704;\\n  t['a4'] = 0x260E;\\n  t['a5'] = 0x2706;\\n  t['a119'] = 0x2707;\\n  t['a118'] = 0x2708;\\n  t['a117'] = 0x2709;\\n  t['a11'] = 0x261B;\\n  t['a12'] = 0x261E;\\n  t['a13'] = 0x270C;\\n  t['a14'] = 0x270D;\\n  t['a15'] = 0x270E;\\n  t['a16'] = 0x270F;\\n  t['a105'] = 0x2710;\\n  t['a17'] = 0x2711;\\n  t['a18'] = 0x2712;\\n  t['a19'] = 0x2713;\\n  t['a20'] = 0x2714;\\n  t['a21'] = 0x2715;\\n  t['a22'] = 0x2716;\\n  t['a23'] = 0x2717;\\n  t['a24'] = 0x2718;\\n  t['a25'] = 0x2719;\\n  t['a26'] = 0x271A;\\n  t['a27'] = 0x271B;\\n  t['a28'] = 0x271C;\\n  t['a6'] = 0x271D;\\n  t['a7'] = 0x271E;\\n  t['a8'] = 0x271F;\\n  t['a9'] = 0x2720;\\n  t['a10'] = 0x2721;\\n  t['a29'] = 0x2722;\\n  t['a30'] = 0x2723;\\n  t['a31'] = 0x2724;\\n  t['a32'] = 0x2725;\\n  t['a33'] = 0x2726;\\n  t['a34'] = 0x2727;\\n  t['a35'] = 0x2605;\\n  t['a36'] = 0x2729;\\n  t['a37'] = 0x272A;\\n  t['a38'] = 0x272B;\\n  t['a39'] = 0x272C;\\n  t['a40'] = 0x272D;\\n  t['a41'] = 0x272E;\\n  t['a42'] = 0x272F;\\n  t['a43'] = 0x2730;\\n  t['a44'] = 0x2731;\\n  t['a45'] = 0x2732;\\n  t['a46'] = 0x2733;\\n  t['a47'] = 0x2734;\\n  t['a48'] = 0x2735;\\n  t['a49'] = 0x2736;\\n  t['a50'] = 0x2737;\\n  t['a51'] = 0x2738;\\n  t['a52'] = 0x2739;\\n  t['a53'] = 0x273A;\\n  t['a54'] = 0x273B;\\n  t['a55'] = 0x273C;\\n  t['a56'] = 0x273D;\\n  t['a57'] = 0x273E;\\n  t['a58'] = 0x273F;\\n  t['a59'] = 0x2740;\\n  t['a60'] = 0x2741;\\n  t['a61'] = 0x2742;\\n  t['a62'] = 0x2743;\\n  t['a63'] = 0x2744;\\n  t['a64'] = 0x2745;\\n  t['a65'] = 0x2746;\\n  t['a66'] = 0x2747;\\n  t['a67'] = 0x2748;\\n  t['a68'] = 0x2749;\\n  t['a69'] = 0x274A;\\n  t['a70'] = 0x274B;\\n  t['a71'] = 0x25CF;\\n  t['a72'] = 0x274D;\\n  t['a73'] = 0x25A0;\\n  t['a74'] = 0x274F;\\n  t['a203'] = 0x2750;\\n  t['a75'] = 0x2751;\\n  t['a204'] = 0x2752;\\n  t['a76'] = 0x25B2;\\n  t['a77'] = 0x25BC;\\n  t['a78'] = 0x25C6;\\n  t['a79'] = 0x2756;\\n  t['a81'] = 0x25D7;\\n  t['a82'] = 0x2758;\\n  t['a83'] = 0x2759;\\n  t['a84'] = 0x275A;\\n  t['a97'] = 0x275B;\\n  t['a98'] = 0x275C;\\n  t['a99'] = 0x275D;\\n  t['a100'] = 0x275E;\\n  t['a101'] = 0x2761;\\n  t['a102'] = 0x2762;\\n  t['a103'] = 0x2763;\\n  t['a104'] = 0x2764;\\n  t['a106'] = 0x2765;\\n  t['a107'] = 0x2766;\\n  t['a108'] = 0x2767;\\n  t['a112'] = 0x2663;\\n  t['a111'] = 0x2666;\\n  t['a110'] = 0x2665;\\n  t['a109'] = 0x2660;\\n  t['a120'] = 0x2460;\\n  t['a121'] = 0x2461;\\n  t['a122'] = 0x2462;\\n  t['a123'] = 0x2463;\\n  t['a124'] = 0x2464;\\n  t['a125'] = 0x2465;\\n  t['a126'] = 0x2466;\\n  t['a127'] = 0x2467;\\n  t['a128'] = 0x2468;\\n  t['a129'] = 0x2469;\\n  t['a130'] = 0x2776;\\n  t['a131'] = 0x2777;\\n  t['a132'] = 0x2778;\\n  t['a133'] = 0x2779;\\n  t['a134'] = 0x277A;\\n  t['a135'] = 0x277B;\\n  t['a136'] = 0x277C;\\n  t['a137'] = 0x277D;\\n  t['a138'] = 0x277E;\\n  t['a139'] = 0x277F;\\n  t['a140'] = 0x2780;\\n  t['a141'] = 0x2781;\\n  t['a142'] = 0x2782;\\n  t['a143'] = 0x2783;\\n  t['a144'] = 0x2784;\\n  t['a145'] = 0x2785;\\n  t['a146'] = 0x2786;\\n  t['a147'] = 0x2787;\\n  t['a148'] = 0x2788;\\n  t['a149'] = 0x2789;\\n  t['a150'] = 0x278A;\\n  t['a151'] = 0x278B;\\n  t['a152'] = 0x278C;\\n  t['a153'] = 0x278D;\\n  t['a154'] = 0x278E;\\n  t['a155'] = 0x278F;\\n  t['a156'] = 0x2790;\\n  t['a157'] = 0x2791;\\n  t['a158'] = 0x2792;\\n  t['a159'] = 0x2793;\\n  t['a160'] = 0x2794;\\n  t['a161'] = 0x2192;\\n  t['a163'] = 0x2194;\\n  t['a164'] = 0x2195;\\n  t['a196'] = 0x2798;\\n  t['a165'] = 0x2799;\\n  t['a192'] = 0x279A;\\n  t['a166'] = 0x279B;\\n  t['a167'] = 0x279C;\\n  t['a168'] = 0x279D;\\n  t['a169'] = 0x279E;\\n  t['a170'] = 0x279F;\\n  t['a171'] = 0x27A0;\\n  t['a172'] = 0x27A1;\\n  t['a173'] = 0x27A2;\\n  t['a162'] = 0x27A3;\\n  t['a174'] = 0x27A4;\\n  t['a175'] = 0x27A5;\\n  t['a176'] = 0x27A6;\\n  t['a177'] = 0x27A7;\\n  t['a178'] = 0x27A8;\\n  t['a179'] = 0x27A9;\\n  t['a193'] = 0x27AA;\\n  t['a180'] = 0x27AB;\\n  t['a199'] = 0x27AC;\\n  t['a181'] = 0x27AD;\\n  t['a200'] = 0x27AE;\\n  t['a182'] = 0x27AF;\\n  t['a201'] = 0x27B1;\\n  t['a183'] = 0x27B2;\\n  t['a184'] = 0x27B3;\\n  t['a197'] = 0x27B4;\\n  t['a185'] = 0x27B5;\\n  t['a194'] = 0x27B6;\\n  t['a198'] = 0x27B7;\\n  t['a186'] = 0x27B8;\\n  t['a195'] = 0x27B9;\\n  t['a187'] = 0x27BA;\\n  t['a188'] = 0x27BB;\\n  t['a189'] = 0x27BC;\\n  t['a190'] = 0x27BD;\\n  t['a191'] = 0x27BE;\\n  t['a89'] = 0x2768;\\n  t['a90'] = 0x2769;\\n  t['a93'] = 0x276A;\\n  t['a94'] = 0x276B;\\n  t['a91'] = 0x276C;\\n  t['a92'] = 0x276D;\\n  t['a205'] = 0x276E;\\n  t['a85'] = 0x276F;\\n  t['a206'] = 0x2770;\\n  t['a86'] = 0x2771;\\n  t['a87'] = 0x2772;\\n  t['a88'] = 0x2773;\\n  t['a95'] = 0x2774;\\n  t['a96'] = 0x2775;\\n  t['.notdef'] = 0x0000;\\n});\\nexports.getGlyphsUnicode = getGlyphsUnicode;\\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PDFImage = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _colorspace = require('./colorspace');\\n\\nvar _stream = require('./stream');\\n\\nvar _jpeg_stream = require('./jpeg_stream');\\n\\nvar _jpx = require('./jpx');\\n\\nvar PDFImage = function PDFImageClosure() {\\n  function handleImageData(image, nativeDecoder) {\\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\\n      return nativeDecoder.decode(image);\\n    }\\n    return Promise.resolve(image);\\n  }\\n  function decodeAndClamp(value, addend, coefficient, max) {\\n    value = addend + value * coefficient;\\n    return value < 0 ? 0 : value > max ? max : value;\\n  }\\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\\n    var length = w2 * h2;\\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\n    var xRatio = w1 / w2;\\n    var yRatio = h1 / h2;\\n    var i,\\n        j,\\n        py,\\n        newIndex = 0,\\n        oldIndex;\\n    var xScaled = new Uint16Array(w2);\\n    var w1Scanline = w1;\\n    for (i = 0; i < w2; i++) {\\n      xScaled[i] = Math.floor(i * xRatio);\\n    }\\n    for (i = 0; i < h2; i++) {\\n      py = Math.floor(i * yRatio) * w1Scanline;\\n      for (j = 0; j < w2; j++) {\\n        oldIndex = py + xScaled[j];\\n        dest[newIndex++] = src[oldIndex];\\n      }\\n    }\\n    return dest;\\n  }\\n  function PDFImage(_ref) {\\n    var xref = _ref.xref,\\n        res = _ref.res,\\n        image = _ref.image,\\n        _ref$isInline = _ref.isInline,\\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\\n        _ref$smask = _ref.smask,\\n        smask = _ref$smask === undefined ? null : _ref$smask,\\n        _ref$mask = _ref.mask,\\n        mask = _ref$mask === undefined ? null : _ref$mask,\\n        _ref$isMask = _ref.isMask,\\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\n\\n    this.image = image;\\n    var dict = image.dict;\\n    if (dict.has('Filter')) {\\n      var filter = dict.get('Filter').name;\\n      if (filter === 'JPXDecode') {\\n        var jpxImage = new _jpx.JpxImage();\\n        jpxImage.parseImageProperties(image.stream);\\n        image.stream.reset();\\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\\n        image.numComps = jpxImage.componentsCount;\\n      } else if (filter === 'JBIG2Decode') {\\n        image.bitsPerComponent = 1;\\n        image.numComps = 1;\\n      }\\n    }\\n    this.width = dict.get('Width', 'W');\\n    this.height = dict.get('Height', 'H');\\n    if (this.width < 1 || this.height < 1) {\\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\\n    }\\n    this.interpolate = dict.get('Interpolate', 'I') || false;\\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\\n    this.matte = dict.get('Matte') || false;\\n    var bitsPerComponent = image.bitsPerComponent;\\n    if (!bitsPerComponent) {\\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\\n      if (!bitsPerComponent) {\\n        if (this.imageMask) {\\n          bitsPerComponent = 1;\\n        } else {\\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\\n        }\\n      }\\n    }\\n    this.bpc = bitsPerComponent;\\n    if (!this.imageMask) {\\n      var colorSpace = dict.get('ColorSpace', 'CS');\\n      if (!colorSpace) {\\n        (0, _util.info)('JPX images (which do not require color spaces)');\\n        switch (image.numComps) {\\n          case 1:\\n            colorSpace = _primitives.Name.get('DeviceGray');\\n            break;\\n          case 3:\\n            colorSpace = _primitives.Name.get('DeviceRGB');\\n            break;\\n          case 4:\\n            colorSpace = _primitives.Name.get('DeviceCMYK');\\n            break;\\n          default:\\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\\n        }\\n      }\\n      var resources = isInline ? res : null;\\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\\n      this.numComps = this.colorSpace.numComps;\\n    }\\n    this.decode = dict.getArray('Decode', 'D');\\n    this.needsDecode = false;\\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\\n      this.needsDecode = true;\\n      var max = (1 << bitsPerComponent) - 1;\\n      this.decodeCoefficients = [];\\n      this.decodeAddends = [];\\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\\n        var dmin = this.decode[i];\\n        var dmax = this.decode[i + 1];\\n        this.decodeCoefficients[j] = dmax - dmin;\\n        this.decodeAddends[j] = max * dmin;\\n      }\\n    }\\n    if (smask) {\\n      this.smask = new PDFImage({\\n        xref: xref,\\n        res: res,\\n        image: smask,\\n        isInline: isInline,\\n        pdfFunctionFactory: pdfFunctionFactory\\n      });\\n    } else if (mask) {\\n      if ((0, _primitives.isStream)(mask)) {\\n        var maskDict = mask.dict,\\n            imageMask = maskDict.get('ImageMask', 'IM');\\n        if (!imageMask) {\\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\\n        } else {\\n          this.mask = new PDFImage({\\n            xref: xref,\\n            res: res,\\n            image: mask,\\n            isInline: isInline,\\n            isMask: true,\\n            pdfFunctionFactory: pdfFunctionFactory\\n          });\\n        }\\n      } else {\\n        this.mask = mask;\\n      }\\n    }\\n  }\\n  PDFImage.buildImage = function (_ref2) {\\n    var handler = _ref2.handler,\\n        xref = _ref2.xref,\\n        res = _ref2.res,\\n        image = _ref2.image,\\n        _ref2$isInline = _ref2.isInline,\\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\\n\\n    var imagePromise = handleImageData(image, nativeDecoder);\\n    var smaskPromise;\\n    var maskPromise;\\n    var smask = image.dict.get('SMask');\\n    var mask = image.dict.get('Mask');\\n    if (smask) {\\n      smaskPromise = handleImageData(smask, nativeDecoder);\\n      maskPromise = Promise.resolve(null);\\n    } else {\\n      smaskPromise = Promise.resolve(null);\\n      if (mask) {\\n        if ((0, _primitives.isStream)(mask)) {\\n          maskPromise = handleImageData(mask, nativeDecoder);\\n        } else if (Array.isArray(mask)) {\\n          maskPromise = Promise.resolve(mask);\\n        } else {\\n          (0, _util.warn)('Unsupported mask format.');\\n          maskPromise = Promise.resolve(null);\\n        }\\n      } else {\\n        maskPromise = Promise.resolve(null);\\n      }\\n    }\\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\\n      var _ref4 = _slicedToArray(_ref3, 3),\\n          imageData = _ref4[0],\\n          smaskData = _ref4[1],\\n          maskData = _ref4[2];\\n\\n      return new PDFImage({\\n        xref: xref,\\n        res: res,\\n        image: imageData,\\n        isInline: isInline,\\n        smask: smaskData,\\n        mask: maskData,\\n        pdfFunctionFactory: pdfFunctionFactory\\n      });\\n    });\\n  };\\n  PDFImage.createMask = function (_ref5) {\\n    var imgArray = _ref5.imgArray,\\n        width = _ref5.width,\\n        height = _ref5.height,\\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\\n        inverseDecode = _ref5.inverseDecode;\\n\\n    var computedLength = (width + 7 >> 3) * height;\\n    var actualLength = imgArray.byteLength;\\n    var haveFullData = computedLength === actualLength;\\n    var data, i;\\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\\n      data = imgArray;\\n    } else if (!inverseDecode) {\\n      data = new Uint8Array(actualLength);\\n      data.set(imgArray);\\n    } else {\\n      data = new Uint8Array(computedLength);\\n      data.set(imgArray);\\n      for (i = actualLength; i < computedLength; i++) {\\n        data[i] = 0xff;\\n      }\\n    }\\n    if (inverseDecode) {\\n      for (i = 0; i < actualLength; i++) {\\n        data[i] ^= 0xFF;\\n      }\\n    }\\n    return {\\n      data: data,\\n      width: width,\\n      height: height\\n    };\\n  };\\n  PDFImage.prototype = {\\n    get drawWidth() {\\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\\n    },\\n    get drawHeight() {\\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\\n    },\\n    decodeBuffer: function decodeBuffer(buffer) {\\n      var bpc = this.bpc;\\n      var numComps = this.numComps;\\n      var decodeAddends = this.decodeAddends;\\n      var decodeCoefficients = this.decodeCoefficients;\\n      var max = (1 << bpc) - 1;\\n      var i, ii;\\n      if (bpc === 1) {\\n        for (i = 0, ii = buffer.length; i < ii; i++) {\\n          buffer[i] = +!buffer[i];\\n        }\\n        return;\\n      }\\n      var index = 0;\\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\\n        for (var j = 0; j < numComps; j++) {\\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\\n          index++;\\n        }\\n      }\\n    },\\n    getComponents: function getComponents(buffer) {\\n      var bpc = this.bpc;\\n      if (bpc === 8) {\\n        return buffer;\\n      }\\n      var width = this.width;\\n      var height = this.height;\\n      var numComps = this.numComps;\\n      var length = width * height * numComps;\\n      var bufferPos = 0;\\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\n      var rowComps = width * numComps;\\n      var max = (1 << bpc) - 1;\\n      var i = 0,\\n          ii,\\n          buf;\\n      if (bpc === 1) {\\n        var mask, loop1End, loop2End;\\n        for (var j = 0; j < height; j++) {\\n          loop1End = i + (rowComps & ~7);\\n          loop2End = i + rowComps;\\n          while (i < loop1End) {\\n            buf = buffer[bufferPos++];\\n            output[i] = buf >> 7 & 1;\\n            output[i + 1] = buf >> 6 & 1;\\n            output[i + 2] = buf >> 5 & 1;\\n            output[i + 3] = buf >> 4 & 1;\\n            output[i + 4] = buf >> 3 & 1;\\n            output[i + 5] = buf >> 2 & 1;\\n            output[i + 6] = buf >> 1 & 1;\\n            output[i + 7] = buf & 1;\\n            i += 8;\\n          }\\n          if (i < loop2End) {\\n            buf = buffer[bufferPos++];\\n            mask = 128;\\n            while (i < loop2End) {\\n              output[i++] = +!!(buf & mask);\\n              mask >>= 1;\\n            }\\n          }\\n        }\\n      } else {\\n        var bits = 0;\\n        buf = 0;\\n        for (i = 0, ii = length; i < ii; ++i) {\\n          if (i % rowComps === 0) {\\n            buf = 0;\\n            bits = 0;\\n          }\\n          while (bits < bpc) {\\n            buf = buf << 8 | buffer[bufferPos++];\\n            bits += 8;\\n          }\\n          var remainingBits = bits - bpc;\\n          var value = buf >> remainingBits;\\n          output[i] = value < 0 ? 0 : value > max ? max : value;\\n          buf = buf & (1 << remainingBits) - 1;\\n          bits = remainingBits;\\n        }\\n      }\\n      return output;\\n    },\\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\\n      var smask = this.smask;\\n      var mask = this.mask;\\n      var alphaBuf, sw, sh, i, ii, j;\\n      if (smask) {\\n        sw = smask.width;\\n        sh = smask.height;\\n        alphaBuf = new Uint8Array(sw * sh);\\n        smask.fillGrayBuffer(alphaBuf);\\n        if (sw !== width || sh !== height) {\\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\\n        }\\n      } else if (mask) {\\n        if (mask instanceof PDFImage) {\\n          sw = mask.width;\\n          sh = mask.height;\\n          alphaBuf = new Uint8Array(sw * sh);\\n          mask.numComps = 1;\\n          mask.fillGrayBuffer(alphaBuf);\\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\\n            alphaBuf[i] = 255 - alphaBuf[i];\\n          }\\n          if (sw !== width || sh !== height) {\\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\\n          }\\n        } else if (Array.isArray(mask)) {\\n          alphaBuf = new Uint8Array(width * height);\\n          var numComps = this.numComps;\\n          for (i = 0, ii = width * height; i < ii; ++i) {\\n            var opacity = 0;\\n            var imageOffset = i * numComps;\\n            for (j = 0; j < numComps; ++j) {\\n              var color = image[imageOffset + j];\\n              var maskOffset = j * 2;\\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\\n                opacity = 255;\\n                break;\\n              }\\n            }\\n            alphaBuf[i] = opacity;\\n          }\\n        } else {\\n          throw new _util.FormatError('Unknown mask format.');\\n        }\\n      }\\n      if (alphaBuf) {\\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\n          rgbaBuf[j] = alphaBuf[i];\\n        }\\n      } else {\\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\n          rgbaBuf[j] = 255;\\n        }\\n      }\\n    },\\n    undoPreblend: function undoPreblend(buffer, width, height) {\\n      var matte = this.smask && this.smask.matte;\\n      if (!matte) {\\n        return;\\n      }\\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\\n      var matteR = matteRgb[0];\\n      var matteG = matteRgb[1];\\n      var matteB = matteRgb[2];\\n      var length = width * height * 4;\\n      var r, g, b;\\n      for (var i = 0; i < length; i += 4) {\\n        var alpha = buffer[i + 3];\\n        if (alpha === 0) {\\n          buffer[i] = 255;\\n          buffer[i + 1] = 255;\\n          buffer[i + 2] = 255;\\n          continue;\\n        }\\n        var k = 255 / alpha;\\n        r = (buffer[i] - matteR) * k + matteR;\\n        g = (buffer[i + 1] - matteG) * k + matteG;\\n        b = (buffer[i + 2] - matteB) * k + matteB;\\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\\n      }\\n    },\\n    createImageData: function createImageData() {\\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n\\n      var drawWidth = this.drawWidth;\\n      var drawHeight = this.drawHeight;\\n      var imgData = {\\n        width: drawWidth,\\n        height: drawHeight\\n      };\\n      var numComps = this.numComps;\\n      var originalWidth = this.width;\\n      var originalHeight = this.height;\\n      var bpc = this.bpc;\\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\\n      var imgArray;\\n      if (!forceRGBA) {\\n        var kind;\\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\\n          kind = _util.ImageKind.RGB_24BPP;\\n        }\\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\\n          imgData.kind = kind;\\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\\n          if (this.image instanceof _stream.DecodeStream) {\\n            imgData.data = imgArray;\\n          } else {\\n            var newArray = new Uint8Array(imgArray.length);\\n            newArray.set(imgArray);\\n            imgData.data = newArray;\\n          }\\n          if (this.needsDecode) {\\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\\n            var buffer = imgData.data;\\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\\n              buffer[i] ^= 0xff;\\n            }\\n          }\\n          return imgData;\\n        }\\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\\n          var imageLength = originalHeight * rowBytes;\\n          switch (this.colorSpace.name) {\\n            case 'DeviceGray':\\n              imageLength *= 3;\\n            case 'DeviceRGB':\\n            case 'DeviceCMYK':\\n              imgData.kind = _util.ImageKind.RGB_24BPP;\\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\\n              return imgData;\\n          }\\n        }\\n      }\\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\\n      var comps = this.getComponents(imgArray);\\n      var alpha01, maybeUndoPreblend;\\n      if (!forceRGBA && !this.smask && !this.mask) {\\n        imgData.kind = _util.ImageKind.RGB_24BPP;\\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\\n        alpha01 = 0;\\n        maybeUndoPreblend = false;\\n      } else {\\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\\n        alpha01 = 1;\\n        maybeUndoPreblend = true;\\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\\n      }\\n      if (this.needsDecode) {\\n        this.decodeBuffer(comps);\\n      }\\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\\n      if (maybeUndoPreblend) {\\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\\n      }\\n      return imgData;\\n    },\\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\\n      var numComps = this.numComps;\\n      if (numComps !== 1) {\\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\\n      }\\n      var width = this.width;\\n      var height = this.height;\\n      var bpc = this.bpc;\\n      var rowBytes = width * numComps * bpc + 7 >> 3;\\n      var imgArray = this.getImageBytes(height * rowBytes);\\n      var comps = this.getComponents(imgArray);\\n      var i, length;\\n      if (bpc === 1) {\\n        length = width * height;\\n        if (this.needsDecode) {\\n          for (i = 0; i < length; ++i) {\\n            buffer[i] = comps[i] - 1 & 255;\\n          }\\n        } else {\\n          for (i = 0; i < length; ++i) {\\n            buffer[i] = -comps[i] & 255;\\n          }\\n        }\\n        return;\\n      }\\n      if (this.needsDecode) {\\n        this.decodeBuffer(comps);\\n      }\\n      length = width * height;\\n      var scale = 255 / ((1 << bpc) - 1);\\n      for (i = 0; i < length; ++i) {\\n        buffer[i] = scale * comps[i] | 0;\\n      }\\n    },\\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\\n\\n      this.image.reset();\\n      this.image.drawWidth = drawWidth || this.width;\\n      this.image.drawHeight = drawHeight || this.height;\\n      this.image.forceRGB = !!forceRGB;\\n      return this.image.getBytes(length);\\n    }\\n  };\\n  return PDFImage;\\n}();\\nexports.PDFImage = PDFImage;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Jbig2Image = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _arithmetic_decoder = require('./arithmetic_decoder');\\n\\nvar _ccitt = require('./ccitt');\\n\\nvar Jbig2Error = function Jbig2ErrorClosure() {\\n  function Jbig2Error(msg) {\\n    this.message = 'JBIG2 error: ' + msg;\\n  }\\n  Jbig2Error.prototype = new Error();\\n  Jbig2Error.prototype.name = 'Jbig2Error';\\n  Jbig2Error.constructor = Jbig2Error;\\n  return Jbig2Error;\\n}();\\nvar Jbig2Image = function Jbig2ImageClosure() {\\n  function ContextCache() {}\\n  ContextCache.prototype = {\\n    getContexts: function getContexts(id) {\\n      if (id in this) {\\n        return this[id];\\n      }\\n      return this[id] = new Int8Array(1 << 16);\\n    }\\n  };\\n  function DecodingContext(data, start, end) {\\n    this.data = data;\\n    this.start = start;\\n    this.end = end;\\n  }\\n  DecodingContext.prototype = {\\n    get decoder() {\\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\\n      return (0, _util.shadow)(this, 'decoder', decoder);\\n    },\\n    get contextCache() {\\n      var cache = new ContextCache();\\n      return (0, _util.shadow)(this, 'contextCache', cache);\\n    }\\n  };\\n  function decodeInteger(contextCache, procedure, decoder) {\\n    var contexts = contextCache.getContexts(procedure);\\n    var prev = 1;\\n    function readBits(length) {\\n      var v = 0;\\n      for (var i = 0; i < length; i++) {\\n        var bit = decoder.readBit(contexts, prev);\\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\\n        v = v << 1 | bit;\\n      }\\n      return v >>> 0;\\n    }\\n    var sign = readBits(1);\\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\\n    return sign === 0 ? value : value > 0 ? -value : null;\\n  }\\n  function decodeIAID(contextCache, decoder, codeLength) {\\n    var contexts = contextCache.getContexts('IAID');\\n    var prev = 1;\\n    for (var i = 0; i < codeLength; i++) {\\n      var bit = decoder.readBit(contexts, prev);\\n      prev = prev << 1 | bit;\\n    }\\n    if (codeLength < 31) {\\n      return prev & (1 << codeLength) - 1;\\n    }\\n    return prev & 0x7FFFFFFF;\\n  }\\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\\n  var CodingTemplates = [[{\\n    x: -1,\\n    y: -2\\n  }, {\\n    x: 0,\\n    y: -2\\n  }, {\\n    x: 1,\\n    y: -2\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: 2,\\n    y: -1\\n  }, {\\n    x: -4,\\n    y: 0\\n  }, {\\n    x: -3,\\n    y: 0\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }], [{\\n    x: -1,\\n    y: -2\\n  }, {\\n    x: 0,\\n    y: -2\\n  }, {\\n    x: 1,\\n    y: -2\\n  }, {\\n    x: 2,\\n    y: -2\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: 2,\\n    y: -1\\n  }, {\\n    x: -3,\\n    y: 0\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }], [{\\n    x: -1,\\n    y: -2\\n  }, {\\n    x: 0,\\n    y: -2\\n  }, {\\n    x: 1,\\n    y: -2\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }], [{\\n    x: -3,\\n    y: -1\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: -4,\\n    y: 0\\n  }, {\\n    x: -3,\\n    y: 0\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }]];\\n  var RefinementTemplates = [{\\n    coding: [{\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: 1,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }],\\n    reference: [{\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: 1,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }, {\\n      x: 0,\\n      y: 0\\n    }, {\\n      x: 1,\\n      y: 0\\n    }, {\\n      x: -1,\\n      y: 1\\n    }, {\\n      x: 0,\\n      y: 1\\n    }, {\\n      x: 1,\\n      y: 1\\n    }]\\n  }, {\\n    coding: [{\\n      x: -1,\\n      y: -1\\n    }, {\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: 1,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }],\\n    reference: [{\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }, {\\n      x: 0,\\n      y: 0\\n    }, {\\n      x: 1,\\n      y: 0\\n    }, {\\n      x: 0,\\n      y: 1\\n    }, {\\n      x: 1,\\n      y: 1\\n    }]\\n  }];\\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\\n  var RefinementReusedContexts = [0x0020, 0x0008];\\n  function decodeBitmapTemplate0(width, height, decodingContext) {\\n    var decoder = decodingContext.decoder;\\n    var contexts = decodingContext.contextCache.getContexts('GB');\\n    var contextLabel,\\n        i,\\n        j,\\n        pixel,\\n        row,\\n        row1,\\n        row2,\\n        bitmap = [];\\n    var OLD_PIXEL_MASK = 0x7BF7;\\n    for (i = 0; i < height; i++) {\\n      row = bitmap[i] = new Uint8Array(width);\\n      row1 = i < 1 ? row : bitmap[i - 1];\\n      row2 = i < 2 ? row : bitmap[i - 2];\\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\\n      for (j = 0; j < width; j++) {\\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\\n    if (mmr) {\\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\\n      return decodeMMRBitmap(input, width, height, false);\\n    }\\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\\n      return decodeBitmapTemplate0(width, height, decodingContext);\\n    }\\n    var useskip = !!skip;\\n    var template = CodingTemplates[templateIndex].concat(at);\\n    template.sort(function (a, b) {\\n      return a.y - b.y || a.x - b.x;\\n    });\\n    var templateLength = template.length;\\n    var templateX = new Int8Array(templateLength);\\n    var templateY = new Int8Array(templateLength);\\n    var changingTemplateEntries = [];\\n    var reuseMask = 0,\\n        minX = 0,\\n        maxX = 0,\\n        minY = 0;\\n    var c, k;\\n    for (k = 0; k < templateLength; k++) {\\n      templateX[k] = template[k].x;\\n      templateY[k] = template[k].y;\\n      minX = Math.min(minX, template[k].x);\\n      maxX = Math.max(maxX, template[k].x);\\n      minY = Math.min(minY, template[k].y);\\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\\n        reuseMask |= 1 << templateLength - 1 - k;\\n      } else {\\n        changingTemplateEntries.push(k);\\n      }\\n    }\\n    var changingEntriesLength = changingTemplateEntries.length;\\n    var changingTemplateX = new Int8Array(changingEntriesLength);\\n    var changingTemplateY = new Int8Array(changingEntriesLength);\\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\\n    for (c = 0; c < changingEntriesLength; c++) {\\n      k = changingTemplateEntries[c];\\n      changingTemplateX[c] = template[k].x;\\n      changingTemplateY[c] = template[k].y;\\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\\n    }\\n    var sbb_left = -minX;\\n    var sbb_top = -minY;\\n    var sbb_right = width - maxX;\\n    var pseudoPixelContext = ReusedContexts[templateIndex];\\n    var row = new Uint8Array(width);\\n    var bitmap = [];\\n    var decoder = decodingContext.decoder;\\n    var contexts = decodingContext.contextCache.getContexts('GB');\\n    var ltp = 0,\\n        j,\\n        i0,\\n        j0,\\n        contextLabel = 0,\\n        bit,\\n        shift;\\n    for (var i = 0; i < height; i++) {\\n      if (prediction) {\\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\\n        ltp ^= sltp;\\n        if (ltp) {\\n          bitmap.push(row);\\n          continue;\\n        }\\n      }\\n      row = new Uint8Array(row);\\n      bitmap.push(row);\\n      for (j = 0; j < width; j++) {\\n        if (useskip && skip[i][j]) {\\n          row[j] = 0;\\n          continue;\\n        }\\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\\n          contextLabel = contextLabel << 1 & reuseMask;\\n          for (k = 0; k < changingEntriesLength; k++) {\\n            i0 = i + changingTemplateY[k];\\n            j0 = j + changingTemplateX[k];\\n            bit = bitmap[i0][j0];\\n            if (bit) {\\n              bit = changingTemplateBit[k];\\n              contextLabel |= bit;\\n            }\\n          }\\n        } else {\\n          contextLabel = 0;\\n          shift = templateLength - 1;\\n          for (k = 0; k < templateLength; k++, shift--) {\\n            j0 = j + templateX[k];\\n            if (j0 >= 0 && j0 < width) {\\n              i0 = i + templateY[k];\\n              if (i0 >= 0) {\\n                bit = bitmap[i0][j0];\\n                if (bit) {\\n                  contextLabel |= bit << shift;\\n                }\\n              }\\n            }\\n          }\\n        }\\n        var pixel = decoder.readBit(contexts, contextLabel);\\n        row[j] = pixel;\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\\n    if (templateIndex === 0) {\\n      codingTemplate = codingTemplate.concat([at[0]]);\\n    }\\n    var codingTemplateLength = codingTemplate.length;\\n    var codingTemplateX = new Int32Array(codingTemplateLength);\\n    var codingTemplateY = new Int32Array(codingTemplateLength);\\n    var k;\\n    for (k = 0; k < codingTemplateLength; k++) {\\n      codingTemplateX[k] = codingTemplate[k].x;\\n      codingTemplateY[k] = codingTemplate[k].y;\\n    }\\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\\n    if (templateIndex === 0) {\\n      referenceTemplate = referenceTemplate.concat([at[1]]);\\n    }\\n    var referenceTemplateLength = referenceTemplate.length;\\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\\n    for (k = 0; k < referenceTemplateLength; k++) {\\n      referenceTemplateX[k] = referenceTemplate[k].x;\\n      referenceTemplateY[k] = referenceTemplate[k].y;\\n    }\\n    var referenceWidth = referenceBitmap[0].length;\\n    var referenceHeight = referenceBitmap.length;\\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\\n    var bitmap = [];\\n    var decoder = decodingContext.decoder;\\n    var contexts = decodingContext.contextCache.getContexts('GR');\\n    var ltp = 0;\\n    for (var i = 0; i < height; i++) {\\n      if (prediction) {\\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\\n        ltp ^= sltp;\\n        if (ltp) {\\n          throw new Jbig2Error('prediction is not supported');\\n        }\\n      }\\n      var row = new Uint8Array(width);\\n      bitmap.push(row);\\n      for (var j = 0; j < width; j++) {\\n        var i0, j0;\\n        var contextLabel = 0;\\n        for (k = 0; k < codingTemplateLength; k++) {\\n          i0 = i + codingTemplateY[k];\\n          j0 = j + codingTemplateX[k];\\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\\n            contextLabel <<= 1;\\n          } else {\\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\\n          }\\n        }\\n        for (k = 0; k < referenceTemplateLength; k++) {\\n          i0 = i + referenceTemplateY[k] - offsetY;\\n          j0 = j + referenceTemplateX[k] - offsetX;\\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\\n            contextLabel <<= 1;\\n          } else {\\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\\n          }\\n        }\\n        var pixel = decoder.readBit(contexts, contextLabel);\\n        row[j] = pixel;\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\\n    if (huffman && refinement) {\\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\\n    }\\n    var newSymbols = [];\\n    var currentHeight = 0;\\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\\n    var decoder = decodingContext.decoder;\\n    var contextCache = decodingContext.contextCache;\\n    var tableB1 = void 0,\\n        symbolWidths = void 0;\\n    if (huffman) {\\n      tableB1 = getStandardTable(1);\\n      symbolWidths = [];\\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\\n    }\\n    while (newSymbols.length < numberOfNewSymbols) {\\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\\n      currentHeight += deltaHeight;\\n      var currentWidth = 0,\\n          totalWidth = 0;\\n      var firstSymbol = huffman ? symbolWidths.length : 0;\\n      while (true) {\\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\\n        if (deltaWidth === null) {\\n          break;\\n        }\\n        currentWidth += deltaWidth;\\n        totalWidth += currentWidth;\\n        var bitmap;\\n        if (refinement) {\\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\\n          if (numberOfInstances > 1) {\\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\\n          } else {\\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\\n          }\\n          newSymbols.push(bitmap);\\n        } else if (huffman) {\\n          symbolWidths.push(currentWidth);\\n        } else {\\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\\n          newSymbols.push(bitmap);\\n        }\\n      }\\n      if (huffman && !refinement) {\\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\\n        huffmanInput.byteAlign();\\n        var collectiveBitmap = void 0;\\n        if (bitmapSize === 0) {\\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\\n        } else {\\n          var originalEnd = huffmanInput.end;\\n          var bitmapEnd = huffmanInput.position + bitmapSize;\\n          huffmanInput.end = bitmapEnd;\\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\\n          huffmanInput.end = originalEnd;\\n          huffmanInput.position = bitmapEnd;\\n        }\\n        var numberOfSymbolsDecoded = symbolWidths.length;\\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\\n          newSymbols.push(collectiveBitmap);\\n        } else {\\n          var _i = void 0,\\n              y = void 0,\\n              xMin = 0,\\n              xMax = void 0,\\n              bitmapWidth = void 0,\\n              symbolBitmap = void 0;\\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\\n            bitmapWidth = symbolWidths[_i];\\n            xMax = xMin + bitmapWidth;\\n            symbolBitmap = [];\\n            for (y = 0; y < currentHeight; y++) {\\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\\n            }\\n            newSymbols.push(symbolBitmap);\\n            xMin = xMax;\\n          }\\n        }\\n      }\\n    }\\n    var exportedSymbols = [];\\n    var flags = [],\\n        currentFlag = false;\\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\\n    while (flags.length < totalSymbolsLength) {\\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\\n      while (runLength--) {\\n        flags.push(currentFlag);\\n      }\\n      currentFlag = !currentFlag;\\n    }\\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\\n      if (flags[i]) {\\n        exportedSymbols.push(symbols[i]);\\n      }\\n    }\\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\\n      if (flags[i]) {\\n        exportedSymbols.push(newSymbols[j]);\\n      }\\n    }\\n    return exportedSymbols;\\n  }\\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\\n    if (huffman && refinement) {\\n      throw new Jbig2Error('refinement with Huffman is not supported');\\n    }\\n    var bitmap = [];\\n    var i, row;\\n    for (i = 0; i < height; i++) {\\n      row = new Uint8Array(width);\\n      if (defaultPixelValue) {\\n        for (var j = 0; j < width; j++) {\\n          row[j] = defaultPixelValue;\\n        }\\n      }\\n      bitmap.push(row);\\n    }\\n    var decoder = decodingContext.decoder;\\n    var contextCache = decodingContext.contextCache;\\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\\n    var firstS = 0;\\n    i = 0;\\n    while (i < numberOfSymbolInstances) {\\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\\n      stripT += deltaT;\\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\\n      firstS += deltaFirstS;\\n      var currentS = firstS;\\n      do {\\n        var currentT = 0;\\n        if (stripSize > 1) {\\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\\n        }\\n        var t = stripSize * stripT + currentT;\\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\\n        var symbolBitmap = inputSymbols[symbolId];\\n        var symbolWidth = symbolBitmap[0].length;\\n        var symbolHeight = symbolBitmap.length;\\n        if (applyRefinement) {\\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\n          symbolWidth += rdw;\\n          symbolHeight += rdh;\\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\\n        }\\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\\n        var s2, t2, symbolRow;\\n        if (transposed) {\\n          for (s2 = 0; s2 < symbolHeight; s2++) {\\n            row = bitmap[offsetS + s2];\\n            if (!row) {\\n              continue;\\n            }\\n            symbolRow = symbolBitmap[s2];\\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\\n            switch (combinationOperator) {\\n              case 0:\\n                for (t2 = 0; t2 < maxWidth; t2++) {\\n                  row[offsetT + t2] |= symbolRow[t2];\\n                }\\n                break;\\n              case 2:\\n                for (t2 = 0; t2 < maxWidth; t2++) {\\n                  row[offsetT + t2] ^= symbolRow[t2];\\n                }\\n                break;\\n              default:\\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\n            }\\n          }\\n          currentS += symbolHeight - 1;\\n        } else {\\n          for (t2 = 0; t2 < symbolHeight; t2++) {\\n            row = bitmap[offsetT + t2];\\n            if (!row) {\\n              continue;\\n            }\\n            symbolRow = symbolBitmap[t2];\\n            switch (combinationOperator) {\\n              case 0:\\n                for (s2 = 0; s2 < symbolWidth; s2++) {\\n                  row[offsetS + s2] |= symbolRow[s2];\\n                }\\n                break;\\n              case 2:\\n                for (s2 = 0; s2 < symbolWidth; s2++) {\\n                  row[offsetS + s2] ^= symbolRow[s2];\\n                }\\n                break;\\n              default:\\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\n            }\\n          }\\n          currentS += symbolWidth - 1;\\n        }\\n        i++;\\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\\n        if (deltaS === null) {\\n          break;\\n        }\\n        currentS += deltaS + dsOffset;\\n      } while (true);\\n    }\\n    return bitmap;\\n  }\\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\\n    var at = [];\\n    if (!mmr) {\\n      at.push({\\n        x: -patternWidth,\\n        y: 0\\n      });\\n      if (template === 0) {\\n        at.push({\\n          x: -3,\\n          y: -1\\n        });\\n        at.push({\\n          x: 2,\\n          y: -2\\n        });\\n        at.push({\\n          x: -2,\\n          y: -2\\n        });\\n      }\\n    }\\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\\n    var patterns = [],\\n        i = 0,\\n        patternBitmap = void 0,\\n        xMin = void 0,\\n        xMax = void 0,\\n        y = void 0;\\n    while (i <= maxPatternIndex) {\\n      patternBitmap = [];\\n      xMin = patternWidth * i;\\n      xMax = xMin + patternWidth;\\n      for (y = 0; y < patternHeight; y++) {\\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\\n      }\\n      patterns.push(patternBitmap);\\n      i++;\\n    }\\n    return patterns;\\n  }\\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\\n    var skip = null;\\n    if (enableSkip) {\\n      throw new Jbig2Error('skip is not supported');\\n    }\\n    if (combinationOperator !== 0) {\\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\\n    }\\n    var regionBitmap = [];\\n    var i = void 0,\\n        j = void 0,\\n        row = void 0;\\n    for (i = 0; i < regionHeight; i++) {\\n      row = new Uint8Array(regionWidth);\\n      if (defaultPixelValue) {\\n        for (j = 0; j < regionWidth; j++) {\\n          row[j] = defaultPixelValue;\\n        }\\n      }\\n      regionBitmap.push(row);\\n    }\\n    var numberOfPatterns = patterns.length;\\n    var pattern0 = patterns[0];\\n    var patternWidth = pattern0[0].length,\\n        patternHeight = pattern0.length;\\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\\n    var at = [];\\n    if (!mmr) {\\n      at.push({\\n        x: template <= 1 ? 3 : 2,\\n        y: -1\\n      });\\n      if (template === 0) {\\n        at.push({\\n          x: -3,\\n          y: -1\\n        });\\n        at.push({\\n          x: 2,\\n          y: -2\\n        });\\n        at.push({\\n          x: -2,\\n          y: -2\\n        });\\n      }\\n    }\\n    var grayScaleBitPlanes = [],\\n        mmrInput = void 0,\\n        bitmap = void 0;\\n    if (mmr) {\\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\\n    }\\n    for (i = bitsPerValue - 1; i >= 0; i--) {\\n      if (mmr) {\\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\\n      } else {\\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\\n      }\\n      grayScaleBitPlanes[i] = bitmap;\\n    }\\n    var mg = void 0,\\n        ng = void 0,\\n        bit = void 0,\\n        patternIndex = void 0,\\n        patternBitmap = void 0,\\n        x = void 0,\\n        y = void 0,\\n        patternRow = void 0,\\n        regionRow = void 0;\\n    for (mg = 0; mg < gridHeight; mg++) {\\n      for (ng = 0; ng < gridWidth; ng++) {\\n        bit = 0;\\n        patternIndex = 0;\\n        for (j = bitsPerValue - 1; j >= 0; j--) {\\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\\n          patternIndex |= bit << j;\\n        }\\n        patternBitmap = patterns[patternIndex];\\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\\n          for (i = 0; i < patternHeight; i++) {\\n            regionRow = regionBitmap[y + i];\\n            patternRow = patternBitmap[i];\\n            for (j = 0; j < patternWidth; j++) {\\n              regionRow[x + j] |= patternRow[j];\\n            }\\n          }\\n        } else {\\n          var regionX = void 0,\\n              regionY = void 0;\\n          for (i = 0; i < patternHeight; i++) {\\n            regionY = y + i;\\n            if (regionY < 0 || regionY >= regionHeight) {\\n              continue;\\n            }\\n            regionRow = regionBitmap[regionY];\\n            patternRow = patternBitmap[i];\\n            for (j = 0; j < patternWidth; j++) {\\n              regionX = x + j;\\n              if (regionX >= 0 && regionX < regionWidth) {\\n                regionRow[regionX] |= patternRow[j];\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n    return regionBitmap;\\n  }\\n  function readSegmentHeader(data, start) {\\n    var segmentHeader = {};\\n    segmentHeader.number = (0, _util.readUint32)(data, start);\\n    var flags = data[start + 4];\\n    var segmentType = flags & 0x3F;\\n    if (!SegmentTypes[segmentType]) {\\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\\n    }\\n    segmentHeader.type = segmentType;\\n    segmentHeader.typeName = SegmentTypes[segmentType];\\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\\n    var pageAssociationFieldSize = !!(flags & 0x40);\\n    var referredFlags = data[start + 5];\\n    var referredToCount = referredFlags >> 5 & 7;\\n    var retainBits = [referredFlags & 31];\\n    var position = start + 6;\\n    if (referredFlags === 7) {\\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\\n      position += 3;\\n      var bytes = referredToCount + 7 >> 3;\\n      retainBits[0] = data[position++];\\n      while (--bytes > 0) {\\n        retainBits.push(data[position++]);\\n      }\\n    } else if (referredFlags === 5 || referredFlags === 6) {\\n      throw new Jbig2Error('invalid referred-to flags');\\n    }\\n    segmentHeader.retainBits = retainBits;\\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\\n    var referredTo = [];\\n    var i, ii;\\n    for (i = 0; i < referredToCount; i++) {\\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\\n      referredTo.push(number);\\n      position += referredToSegmentNumberSize;\\n    }\\n    segmentHeader.referredTo = referredTo;\\n    if (!pageAssociationFieldSize) {\\n      segmentHeader.pageAssociation = data[position++];\\n    } else {\\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\\n      position += 4;\\n    }\\n    segmentHeader.length = (0, _util.readUint32)(data, position);\\n    position += 4;\\n    if (segmentHeader.length === 0xFFFFFFFF) {\\n      if (segmentType === 38) {\\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\\n        var searchPatternLength = 6;\\n        var searchPattern = new Uint8Array(searchPatternLength);\\n        if (!genericRegionMmr) {\\n          searchPattern[0] = 0xFF;\\n          searchPattern[1] = 0xAC;\\n        }\\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\\n        for (i = position, ii = data.length; i < ii; i++) {\\n          var j = 0;\\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\\n            j++;\\n          }\\n          if (j === searchPatternLength) {\\n            segmentHeader.length = i + searchPatternLength;\\n            break;\\n          }\\n        }\\n        if (segmentHeader.length === 0xFFFFFFFF) {\\n          throw new Jbig2Error('segment end was not found');\\n        }\\n      } else {\\n        throw new Jbig2Error('invalid unknown segment length');\\n      }\\n    }\\n    segmentHeader.headerEnd = position;\\n    return segmentHeader;\\n  }\\n  function readSegments(header, data, start, end) {\\n    var segments = [];\\n    var position = start;\\n    while (position < end) {\\n      var segmentHeader = readSegmentHeader(data, position);\\n      position = segmentHeader.headerEnd;\\n      var segment = {\\n        header: segmentHeader,\\n        data: data\\n      };\\n      if (!header.randomAccess) {\\n        segment.start = position;\\n        position += segmentHeader.length;\\n        segment.end = position;\\n      }\\n      segments.push(segment);\\n      if (segmentHeader.type === 51) {\\n        break;\\n      }\\n    }\\n    if (header.randomAccess) {\\n      for (var i = 0, ii = segments.length; i < ii; i++) {\\n        segments[i].start = position;\\n        position += segments[i].header.length;\\n        segments[i].end = position;\\n      }\\n    }\\n    return segments;\\n  }\\n  function readRegionSegmentInformation(data, start) {\\n    return {\\n      width: (0, _util.readUint32)(data, start),\\n      height: (0, _util.readUint32)(data, start + 4),\\n      x: (0, _util.readUint32)(data, start + 8),\\n      y: (0, _util.readUint32)(data, start + 12),\\n      combinationOperator: data[start + 16] & 7\\n    };\\n  }\\n  var RegionSegmentInformationFieldLength = 17;\\n  function processSegment(segment, visitor) {\\n    var header = segment.header;\\n    var data = segment.data,\\n        position = segment.start,\\n        end = segment.end;\\n    var args, at, i, atLength;\\n    switch (header.type) {\\n      case 0:\\n        var dictionary = {};\\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\\n        dictionary.huffman = !!(dictionaryFlags & 1);\\n        dictionary.refinement = !!(dictionaryFlags & 2);\\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\\n        dictionary.template = dictionaryFlags >> 10 & 3;\\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\\n        position += 2;\\n        if (!dictionary.huffman) {\\n          atLength = dictionary.template === 0 ? 4 : 1;\\n          at = [];\\n          for (i = 0; i < atLength; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          dictionary.at = at;\\n        }\\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\\n          at = [];\\n          for (i = 0; i < 2; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          dictionary.refinementAt = at;\\n        }\\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        args = [dictionary, header.number, header.referredTo, data, position, end];\\n        break;\\n      case 6:\\n      case 7:\\n        var textRegion = {};\\n        textRegion.info = readRegionSegmentInformation(data, position);\\n        position += RegionSegmentInformationFieldLength;\\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\\n        position += 2;\\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\\n        textRegion.stripSize = 1 << textRegion.logStripSize;\\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\\n        if (textRegion.huffman) {\\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\\n          position += 2;\\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\\n        }\\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\\n          at = [];\\n          for (i = 0; i < 2; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          textRegion.refinementAt = at;\\n        }\\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        args = [textRegion, header.referredTo, data, position, end];\\n        break;\\n      case 16:\\n        var patternDictionary = {};\\n        var patternDictionaryFlags = data[position++];\\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\\n        patternDictionary.patternWidth = data[position++];\\n        patternDictionary.patternHeight = data[position++];\\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        args = [patternDictionary, header.number, data, position, end];\\n        break;\\n      case 22:\\n      case 23:\\n        var halftoneRegion = {};\\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\\n        position += RegionSegmentInformationFieldLength;\\n        var halftoneRegionFlags = data[position++];\\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\n        position += 4;\\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\n        position += 4;\\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\\n        position += 2;\\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\\n        position += 2;\\n        args = [halftoneRegion, header.referredTo, data, position, end];\\n        break;\\n      case 38:\\n      case 39:\\n        var genericRegion = {};\\n        genericRegion.info = readRegionSegmentInformation(data, position);\\n        position += RegionSegmentInformationFieldLength;\\n        var genericRegionSegmentFlags = data[position++];\\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\\n        if (!genericRegion.mmr) {\\n          atLength = genericRegion.template === 0 ? 4 : 1;\\n          at = [];\\n          for (i = 0; i < atLength; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          genericRegion.at = at;\\n        }\\n        args = [genericRegion, data, position, end];\\n        break;\\n      case 48:\\n        var pageInfo = {\\n          width: (0, _util.readUint32)(data, position),\\n          height: (0, _util.readUint32)(data, position + 4),\\n          resolutionX: (0, _util.readUint32)(data, position + 8),\\n          resolutionY: (0, _util.readUint32)(data, position + 12)\\n        };\\n        if (pageInfo.height === 0xFFFFFFFF) {\\n          delete pageInfo.height;\\n        }\\n        var pageSegmentFlags = data[position + 16];\\n        (0, _util.readUint16)(data, position + 17);\\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\\n        args = [pageInfo];\\n        break;\\n      case 49:\\n        break;\\n      case 50:\\n        break;\\n      case 51:\\n        break;\\n      case 53:\\n        args = [header.number, data, position, end];\\n        break;\\n      case 62:\\n        break;\\n      default:\\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\\n    }\\n    var callbackName = 'on' + header.typeName;\\n    if (callbackName in visitor) {\\n      visitor[callbackName].apply(visitor, args);\\n    }\\n  }\\n  function processSegments(segments, visitor) {\\n    for (var i = 0, ii = segments.length; i < ii; i++) {\\n      processSegment(segments[i], visitor);\\n    }\\n  }\\n  function parseJbig2Chunks(chunks) {\\n    var visitor = new SimpleSegmentVisitor();\\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\\n      var chunk = chunks[i];\\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\\n      processSegments(segments, visitor);\\n    }\\n    return visitor.buffer;\\n  }\\n  function SimpleSegmentVisitor() {}\\n  SimpleSegmentVisitor.prototype = {\\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\\n      this.currentPageInfo = info;\\n      var rowSize = info.width + 7 >> 3;\\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\\n      if (info.defaultPixelValue) {\\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\\n          buffer[i] = 0xFF;\\n        }\\n      }\\n      this.buffer = buffer;\\n    },\\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\\n      var pageInfo = this.currentPageInfo;\\n      var width = regionInfo.width,\\n          height = regionInfo.height;\\n      var rowSize = pageInfo.width + 7 >> 3;\\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\\n      var buffer = this.buffer;\\n      var mask0 = 128 >> (regionInfo.x & 7);\\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\\n      var i, j, mask, offset;\\n      switch (combinationOperator) {\\n        case 0:\\n          for (i = 0; i < height; i++) {\\n            mask = mask0;\\n            offset = offset0;\\n            for (j = 0; j < width; j++) {\\n              if (bitmap[i][j]) {\\n                buffer[offset] |= mask;\\n              }\\n              mask >>= 1;\\n              if (!mask) {\\n                mask = 128;\\n                offset++;\\n              }\\n            }\\n            offset0 += rowSize;\\n          }\\n          break;\\n        case 2:\\n          for (i = 0; i < height; i++) {\\n            mask = mask0;\\n            offset = offset0;\\n            for (j = 0; j < width; j++) {\\n              if (bitmap[i][j]) {\\n                buffer[offset] ^= mask;\\n              }\\n              mask >>= 1;\\n              if (!mask) {\\n                mask = 128;\\n                offset++;\\n              }\\n            }\\n            offset0 += rowSize;\\n          }\\n          break;\\n        default:\\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\n      }\\n    },\\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\\n      var regionInfo = region.info;\\n      var decodingContext = new DecodingContext(data, start, end);\\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\\n      this.drawBitmap(regionInfo, bitmap);\\n    },\\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\\n      this.onImmediateGenericRegion.apply(this, arguments);\\n    },\\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\\n      var huffmanTables = void 0,\\n          huffmanInput = void 0;\\n      if (dictionary.huffman) {\\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\\n        huffmanInput = new Reader(data, start, end);\\n      }\\n      var symbols = this.symbols;\\n      if (!symbols) {\\n        this.symbols = symbols = {};\\n      }\\n      var inputSymbols = [];\\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\n        var referredSymbols = symbols[referredSegments[i]];\\n        if (referredSymbols) {\\n          inputSymbols = inputSymbols.concat(referredSymbols);\\n        }\\n      }\\n      var decodingContext = new DecodingContext(data, start, end);\\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\\n    },\\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\\n      var regionInfo = region.info;\\n      var huffmanTables = void 0,\\n          huffmanInput = void 0;\\n      var symbols = this.symbols;\\n      var inputSymbols = [];\\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\n        var referredSymbols = symbols[referredSegments[i]];\\n        if (referredSymbols) {\\n          inputSymbols = inputSymbols.concat(referredSymbols);\\n        }\\n      }\\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\\n      if (region.huffman) {\\n        huffmanInput = new Reader(data, start, end);\\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\\n      }\\n      var decodingContext = new DecodingContext(data, start, end);\\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\\n      this.drawBitmap(regionInfo, bitmap);\\n    },\\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\\n      this.onImmediateTextRegion.apply(this, arguments);\\n    },\\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\\n      var patterns = this.patterns;\\n      if (!patterns) {\\n        this.patterns = patterns = {};\\n      }\\n      var decodingContext = new DecodingContext(data, start, end);\\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\\n    },\\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\\n      var patterns = this.patterns[referredSegments[0]];\\n      var regionInfo = region.info;\\n      var decodingContext = new DecodingContext(data, start, end);\\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\\n      this.drawBitmap(regionInfo, bitmap);\\n    },\\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\\n      this.onImmediateHalftoneRegion.apply(this, arguments);\\n    },\\n    onTables: function onTables(currentSegment, data, start, end) {\\n      var customTables = this.customTables;\\n      if (!customTables) {\\n        this.customTables = customTables = {};\\n      }\\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\\n    }\\n  };\\n  function HuffmanLine(lineData) {\\n    if (lineData.length === 2) {\\n      this.isOOB = true;\\n      this.rangeLow = 0;\\n      this.prefixLength = lineData[0];\\n      this.rangeLength = 0;\\n      this.prefixCode = lineData[1];\\n      this.isLowerRange = false;\\n    } else {\\n      this.isOOB = false;\\n      this.rangeLow = lineData[0];\\n      this.prefixLength = lineData[1];\\n      this.rangeLength = lineData[2];\\n      this.prefixCode = lineData[3];\\n      this.isLowerRange = lineData[4] === 'lower';\\n    }\\n  }\\n  function HuffmanTreeNode(line) {\\n    this.children = [];\\n    if (line) {\\n      this.isLeaf = true;\\n      this.rangeLength = line.rangeLength;\\n      this.rangeLow = line.rangeLow;\\n      this.isLowerRange = line.isLowerRange;\\n      this.isOOB = line.isOOB;\\n    } else {\\n      this.isLeaf = false;\\n    }\\n  }\\n  HuffmanTreeNode.prototype = {\\n    buildTree: function buildTree(line, shift) {\\n      var bit = line.prefixCode >> shift & 1;\\n      if (shift <= 0) {\\n        this.children[bit] = new HuffmanTreeNode(line);\\n      } else {\\n        var node = this.children[bit];\\n        if (!node) {\\n          this.children[bit] = node = new HuffmanTreeNode(null);\\n        }\\n        node.buildTree(line, shift - 1);\\n      }\\n    },\\n    decodeNode: function decodeNode(reader) {\\n      if (this.isLeaf) {\\n        if (this.isOOB) {\\n          return null;\\n        }\\n        var htOffset = reader.readBits(this.rangeLength);\\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\\n      }\\n      var node = this.children[reader.readBit()];\\n      if (!node) {\\n        throw new Jbig2Error('invalid Huffman data');\\n      }\\n      return node.decodeNode(reader);\\n    }\\n  };\\n  function HuffmanTable(lines, prefixCodesDone) {\\n    if (!prefixCodesDone) {\\n      this.assignPrefixCodes(lines);\\n    }\\n    this.rootNode = new HuffmanTreeNode(null);\\n    var i = void 0,\\n        ii = lines.length,\\n        line = void 0;\\n    for (i = 0; i < ii; i++) {\\n      line = lines[i];\\n      if (line.prefixLength > 0) {\\n        this.rootNode.buildTree(line, line.prefixLength - 1);\\n      }\\n    }\\n  }\\n  HuffmanTable.prototype = {\\n    decode: function decode(reader) {\\n      return this.rootNode.decodeNode(reader);\\n    },\\n    assignPrefixCodes: function assignPrefixCodes(lines) {\\n      var linesLength = lines.length,\\n          prefixLengthMax = 0,\\n          i = void 0;\\n      for (i = 0; i < linesLength; i++) {\\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\\n      }\\n      var histogram = new Uint32Array(prefixLengthMax + 1);\\n      for (i = 0; i < linesLength; i++) {\\n        histogram[lines[i].prefixLength]++;\\n      }\\n      var currentLength = 1,\\n          firstCode = 0,\\n          currentCode = void 0,\\n          currentTemp = void 0,\\n          line = void 0;\\n      histogram[0] = 0;\\n      while (currentLength <= prefixLengthMax) {\\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\\n        currentCode = firstCode;\\n        currentTemp = 0;\\n        while (currentTemp < linesLength) {\\n          line = lines[currentTemp];\\n          if (line.prefixLength === currentLength) {\\n            line.prefixCode = currentCode;\\n            currentCode++;\\n          }\\n          currentTemp++;\\n        }\\n        currentLength++;\\n      }\\n    }\\n  };\\n  function decodeTablesSegment(data, start, end) {\\n    var flags = data[start];\\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\\n    var reader = new Reader(data, start + 9, end);\\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\\n    var lines = [];\\n    var prefixLength = void 0,\\n        rangeLength = void 0,\\n        currentRangeLow = lowestValue;\\n    do {\\n      prefixLength = reader.readBits(prefixSizeBits);\\n      rangeLength = reader.readBits(rangeSizeBits);\\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\\n      currentRangeLow += 1 << rangeLength;\\n    } while (currentRangeLow < highestValue);\\n    prefixLength = reader.readBits(prefixSizeBits);\\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\\n    prefixLength = reader.readBits(prefixSizeBits);\\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\\n    if (flags & 1) {\\n      prefixLength = reader.readBits(prefixSizeBits);\\n      lines.push(new HuffmanLine([prefixLength, 0]));\\n    }\\n    return new HuffmanTable(lines, false);\\n  }\\n  var standardTablesCache = {};\\n  function getStandardTable(number) {\\n    var table = standardTablesCache[number];\\n    if (table) {\\n      return table;\\n    }\\n    var lines = void 0;\\n    switch (number) {\\n      case 1:\\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\\n        break;\\n      case 2:\\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\\n        break;\\n      case 3:\\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\\n        break;\\n      case 4:\\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\\n        break;\\n      case 5:\\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\\n        break;\\n      case 6:\\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\\n        break;\\n      case 7:\\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\\n        break;\\n      case 8:\\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\\n        break;\\n      case 9:\\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\\n        break;\\n      case 10:\\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\\n        break;\\n      case 11:\\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\\n        break;\\n      case 12:\\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\\n        break;\\n      case 13:\\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\\n        break;\\n      case 14:\\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\\n        break;\\n      case 15:\\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\\n        break;\\n      default:\\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\\n    }\\n    var length = lines.length,\\n        i = void 0;\\n    for (i = 0; i < length; i++) {\\n      lines[i] = new HuffmanLine(lines[i]);\\n    }\\n    table = new HuffmanTable(lines, true);\\n    standardTablesCache[number] = table;\\n    return table;\\n  }\\n  function Reader(data, start, end) {\\n    this.data = data;\\n    this.start = start;\\n    this.end = end;\\n    this.position = start;\\n    this.shift = -1;\\n    this.currentByte = 0;\\n  }\\n  Reader.prototype = {\\n    readBit: function readBit() {\\n      if (this.shift < 0) {\\n        if (this.position >= this.end) {\\n          throw new Jbig2Error('end of data while reading bit');\\n        }\\n        this.currentByte = this.data[this.position++];\\n        this.shift = 7;\\n      }\\n      var bit = this.currentByte >> this.shift & 1;\\n      this.shift--;\\n      return bit;\\n    },\\n    readBits: function readBits(numBits) {\\n      var result = 0,\\n          i = void 0;\\n      for (i = numBits - 1; i >= 0; i--) {\\n        result |= this.readBit() << i;\\n      }\\n      return result;\\n    },\\n    byteAlign: function byteAlign() {\\n      this.shift = -1;\\n    },\\n    next: function next() {\\n      if (this.position >= this.end) {\\n        return -1;\\n      }\\n      return this.data[this.position++];\\n    }\\n  };\\n  function getCustomHuffmanTable(index, referredTo, customTables) {\\n    var currentIndex = 0,\\n        i = void 0,\\n        ii = referredTo.length,\\n        table = void 0;\\n    for (i = 0; i < ii; i++) {\\n      table = customTables[referredTo[i]];\\n      if (table) {\\n        if (index === currentIndex) {\\n          return table;\\n        }\\n        currentIndex++;\\n      }\\n    }\\n    throw new Jbig2Error('can\\\\'t find custom Huffman table');\\n  }\\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\\n    var codes = [],\\n        i = void 0,\\n        codeLength = void 0;\\n    for (i = 0; i <= 34; i++) {\\n      codeLength = reader.readBits(4);\\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\\n    }\\n    var runCodesTable = new HuffmanTable(codes, false);\\n    codes.length = 0;\\n    for (i = 0; i < numberOfSymbols;) {\\n      codeLength = runCodesTable.decode(reader);\\n      if (codeLength >= 32) {\\n        var repeatedLength = void 0,\\n            numberOfRepeats = void 0,\\n            j = void 0;\\n        switch (codeLength) {\\n          case 32:\\n            if (i === 0) {\\n              throw new Jbig2Error('no previous value in symbol ID table');\\n            }\\n            numberOfRepeats = reader.readBits(2) + 3;\\n            repeatedLength = codes[i - 1].prefixLength;\\n            break;\\n          case 33:\\n            numberOfRepeats = reader.readBits(3) + 3;\\n            repeatedLength = 0;\\n            break;\\n          case 34:\\n            numberOfRepeats = reader.readBits(7) + 11;\\n            repeatedLength = 0;\\n            break;\\n          default:\\n            throw new Jbig2Error('invalid code length in symbol ID table');\\n        }\\n        for (j = 0; j < numberOfRepeats; j++) {\\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\\n          i++;\\n        }\\n      } else {\\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\\n        i++;\\n      }\\n    }\\n    reader.byteAlign();\\n    var symbolIDTable = new HuffmanTable(codes, false);\\n    var customIndex = 0,\\n        tableFirstS = void 0,\\n        tableDeltaS = void 0,\\n        tableDeltaT = void 0;\\n    switch (textRegion.huffmanFS) {\\n      case 0:\\n      case 1:\\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\\n        break;\\n      case 3:\\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman FS selector');\\n    }\\n    switch (textRegion.huffmanDS) {\\n      case 0:\\n      case 1:\\n      case 2:\\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\\n        break;\\n      case 3:\\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DS selector');\\n    }\\n    switch (textRegion.huffmanDT) {\\n      case 0:\\n      case 1:\\n      case 2:\\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\\n        break;\\n      case 3:\\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DT selector');\\n    }\\n    if (textRegion.refinement) {\\n      throw new Jbig2Error('refinement with Huffman is not supported');\\n    }\\n    return {\\n      symbolIDTable: symbolIDTable,\\n      tableFirstS: tableFirstS,\\n      tableDeltaS: tableDeltaS,\\n      tableDeltaT: tableDeltaT\\n    };\\n  }\\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\\n    var customIndex = 0,\\n        tableDeltaHeight = void 0,\\n        tableDeltaWidth = void 0;\\n    switch (dictionary.huffmanDHSelector) {\\n      case 0:\\n      case 1:\\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\\n        break;\\n      case 3:\\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DH selector');\\n    }\\n    switch (dictionary.huffmanDWSelector) {\\n      case 0:\\n      case 1:\\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\\n        break;\\n      case 3:\\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DW selector');\\n    }\\n    var tableBitmapSize = void 0,\\n        tableAggregateInstances = void 0;\\n    if (dictionary.bitmapSizeSelector) {\\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n      customIndex++;\\n    } else {\\n      tableBitmapSize = getStandardTable(1);\\n    }\\n    if (dictionary.aggregationInstancesSelector) {\\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n    } else {\\n      tableAggregateInstances = getStandardTable(1);\\n    }\\n    return {\\n      tableDeltaHeight: tableDeltaHeight,\\n      tableDeltaWidth: tableDeltaWidth,\\n      tableBitmapSize: tableBitmapSize,\\n      tableAggregateInstances: tableAggregateInstances\\n    };\\n  }\\n  function readUncompressedBitmap(reader, width, height) {\\n    var bitmap = [],\\n        x = void 0,\\n        y = void 0,\\n        row = void 0;\\n    for (y = 0; y < height; y++) {\\n      row = new Uint8Array(width);\\n      bitmap.push(row);\\n      for (x = 0; x < width; x++) {\\n        row[x] = reader.readBit();\\n      }\\n      reader.byteAlign();\\n    }\\n    return bitmap;\\n  }\\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\\n    var params = {\\n      K: -1,\\n      Columns: width,\\n      Rows: height,\\n      BlackIs1: true,\\n      EndOfBlock: endOfBlock\\n    };\\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\\n    var bitmap = [],\\n        x = void 0,\\n        y = void 0,\\n        row = void 0,\\n        currentByte = void 0,\\n        shift = void 0,\\n        eof = false;\\n    for (y = 0; y < height; y++) {\\n      row = new Uint8Array(width);\\n      bitmap.push(row);\\n      shift = -1;\\n      for (x = 0; x < width; x++) {\\n        if (shift < 0) {\\n          currentByte = decoder.readNextChar();\\n          if (currentByte === -1) {\\n            currentByte = 0;\\n            eof = true;\\n          }\\n          shift = 7;\\n        }\\n        row[x] = currentByte >> shift & 1;\\n        shift--;\\n      }\\n    }\\n    if (endOfBlock && !eof) {\\n      var lookForEOFLimit = 5;\\n      for (var i = 0; i < lookForEOFLimit; i++) {\\n        if (decoder.readNextChar() === -1) {\\n          break;\\n        }\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function Jbig2Image() {}\\n  Jbig2Image.prototype = {\\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\\n      return parseJbig2Chunks(chunks);\\n    }\\n  };\\n  return Jbig2Image;\\n}();\\nexports.Jbig2Image = Jbig2Image;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Jbig2Stream = undefined;\\n\\nvar _primitives = require('./primitives');\\n\\nvar _stream = require('./stream');\\n\\nvar _jbig = require('./jbig2');\\n\\nvar _util = require('../shared/util');\\n\\nvar Jbig2Stream = function Jbig2StreamClosure() {\\n  function Jbig2Stream(stream, maybeLength, dict, params) {\\n    this.stream = stream;\\n    this.maybeLength = maybeLength;\\n    this.dict = dict;\\n    this.params = params;\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\\n    get: function get() {\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n    },\\n\\n    configurable: true\\n  });\\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\\n  Jbig2Stream.prototype.readBlock = function () {\\n    if (this.eof) {\\n      return;\\n    }\\n    var jbig2Image = new _jbig.Jbig2Image();\\n    var chunks = [];\\n    if ((0, _primitives.isDict)(this.params)) {\\n      var globalsStream = this.params.get('JBIG2Globals');\\n      if ((0, _primitives.isStream)(globalsStream)) {\\n        var globals = globalsStream.getBytes();\\n        chunks.push({\\n          data: globals,\\n          start: 0,\\n          end: globals.length\\n        });\\n      }\\n    }\\n    chunks.push({\\n      data: this.bytes,\\n      start: 0,\\n      end: this.bytes.length\\n    });\\n    var data = jbig2Image.parseChunks(chunks);\\n    var dataLength = data.length;\\n    for (var i = 0; i < dataLength; i++) {\\n      data[i] ^= 0xFF;\\n    }\\n    this.buffer = data;\\n    this.bufferLength = dataLength;\\n    this.eof = true;\\n  };\\n  return Jbig2Stream;\\n}();\\nexports.Jbig2Stream = Jbig2Stream;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpegStream = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _stream = require('./stream');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _jpg = require('./jpg');\\n\\nvar JpegStream = function JpegStreamClosure() {\\n  function JpegStream(stream, maybeLength, dict, params) {\\n    var ch = void 0;\\n    while ((ch = stream.getByte()) !== -1) {\\n      if (ch === 0xFF) {\\n        stream.skip(-1);\\n        break;\\n      }\\n    }\\n    this.stream = stream;\\n    this.maybeLength = maybeLength;\\n    this.dict = dict;\\n    this.params = params;\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\\n    get: function JpegStream_bytes() {\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n    },\\n    configurable: true\\n  });\\n  JpegStream.prototype.ensureBuffer = function (requested) {};\\n  JpegStream.prototype.readBlock = function () {\\n    if (this.eof) {\\n      return;\\n    }\\n    var jpegImage = new _jpg.JpegImage();\\n    var decodeArr = this.dict.getArray('Decode', 'D');\\n    if (this.forceRGB && Array.isArray(decodeArr)) {\\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\\n      var decodeArrLength = decodeArr.length;\\n      var transform = new Int32Array(decodeArrLength);\\n      var transformNeeded = false;\\n      var maxValue = (1 << bitsPerComponent) - 1;\\n      for (var i = 0; i < decodeArrLength; i += 2) {\\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\\n          transformNeeded = true;\\n        }\\n      }\\n      if (transformNeeded) {\\n        jpegImage.decodeTransform = transform;\\n      }\\n    }\\n    if ((0, _primitives.isDict)(this.params)) {\\n      var colorTransform = this.params.get('ColorTransform');\\n      if (Number.isInteger(colorTransform)) {\\n        jpegImage.colorTransform = colorTransform;\\n      }\\n    }\\n    jpegImage.parse(this.bytes);\\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\\n    this.buffer = data;\\n    this.bufferLength = data.length;\\n    this.eof = true;\\n  };\\n  JpegStream.prototype.getIR = function () {\\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n\\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\\n  };\\n  return JpegStream;\\n}();\\nexports.JpegStream = JpegStream;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpegImage = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _util = require('../shared/util');\\n\\nvar JpegError = function JpegErrorClosure() {\\n  function JpegError(msg) {\\n    this.message = 'JPEG error: ' + msg;\\n  }\\n  JpegError.prototype = new Error();\\n  JpegError.prototype.name = 'JpegError';\\n  JpegError.constructor = JpegError;\\n  return JpegError;\\n}();\\nvar JpegImage = function JpegImageClosure() {\\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\\n  var dctCos1 = 4017;\\n  var dctSin1 = 799;\\n  var dctCos3 = 3406;\\n  var dctSin3 = 2276;\\n  var dctCos6 = 1567;\\n  var dctSin6 = 3784;\\n  var dctSqrt2 = 5793;\\n  var dctSqrt1d2 = 2896;\\n  function JpegImage() {\\n    this.decodeTransform = null;\\n    this.colorTransform = -1;\\n  }\\n  function buildHuffmanTable(codeLengths, values) {\\n    var k = 0,\\n        code = [],\\n        i,\\n        j,\\n        length = 16;\\n    while (length > 0 && !codeLengths[length - 1]) {\\n      length--;\\n    }\\n    code.push({\\n      children: [],\\n      index: 0\\n    });\\n    var p = code[0],\\n        q;\\n    for (i = 0; i < length; i++) {\\n      for (j = 0; j < codeLengths[i]; j++) {\\n        p = code.pop();\\n        p.children[p.index] = values[k];\\n        while (p.index > 0) {\\n          p = code.pop();\\n        }\\n        p.index++;\\n        code.push(p);\\n        while (code.length <= i) {\\n          code.push(q = {\\n            children: [],\\n            index: 0\\n          });\\n          p.children[p.index] = q.children;\\n          p = q;\\n        }\\n        k++;\\n      }\\n      if (i + 1 < length) {\\n        code.push(q = {\\n          children: [],\\n          index: 0\\n        });\\n        p.children[p.index] = q.children;\\n        p = q;\\n      }\\n    }\\n    return code[0].children;\\n  }\\n  function getBlockBufferOffset(component, row, col) {\\n    return 64 * ((component.blocksPerLine + 1) * row + col);\\n  }\\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\\n    var mcusPerLine = frame.mcusPerLine;\\n    var progressive = frame.progressive;\\n    var startOffset = offset,\\n        bitsData = 0,\\n        bitsCount = 0;\\n    function readBit() {\\n      if (bitsCount > 0) {\\n        bitsCount--;\\n        return bitsData >> bitsCount & 1;\\n      }\\n      bitsData = data[offset++];\\n      if (bitsData === 0xFF) {\\n        var nextByte = data[offset++];\\n        if (nextByte) {\\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\\n        }\\n      }\\n      bitsCount = 7;\\n      return bitsData >>> 7;\\n    }\\n    function decodeHuffman(tree) {\\n      var node = tree;\\n      while (true) {\\n        node = node[readBit()];\\n        if (typeof node === 'number') {\\n          return node;\\n        }\\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\\n          throw new JpegError('invalid huffman sequence');\\n        }\\n      }\\n    }\\n    function receive(length) {\\n      var n = 0;\\n      while (length > 0) {\\n        n = n << 1 | readBit();\\n        length--;\\n      }\\n      return n;\\n    }\\n    function receiveAndExtend(length) {\\n      if (length === 1) {\\n        return readBit() === 1 ? 1 : -1;\\n      }\\n      var n = receive(length);\\n      if (n >= 1 << length - 1) {\\n        return n;\\n      }\\n      return n + (-1 << length) + 1;\\n    }\\n    function decodeBaseline(component, offset) {\\n      var t = decodeHuffman(component.huffmanTableDC);\\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\\n      component.blockData[offset] = component.pred += diff;\\n      var k = 1;\\n      while (k < 64) {\\n        var rs = decodeHuffman(component.huffmanTableAC);\\n        var s = rs & 15,\\n            r = rs >> 4;\\n        if (s === 0) {\\n          if (r < 15) {\\n            break;\\n          }\\n          k += 16;\\n          continue;\\n        }\\n        k += r;\\n        var z = dctZigZag[k];\\n        component.blockData[offset + z] = receiveAndExtend(s);\\n        k++;\\n      }\\n    }\\n    function decodeDCFirst(component, offset) {\\n      var t = decodeHuffman(component.huffmanTableDC);\\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\\n      component.blockData[offset] = component.pred += diff;\\n    }\\n    function decodeDCSuccessive(component, offset) {\\n      component.blockData[offset] |= readBit() << successive;\\n    }\\n    var eobrun = 0;\\n    function decodeACFirst(component, offset) {\\n      if (eobrun > 0) {\\n        eobrun--;\\n        return;\\n      }\\n      var k = spectralStart,\\n          e = spectralEnd;\\n      while (k <= e) {\\n        var rs = decodeHuffman(component.huffmanTableAC);\\n        var s = rs & 15,\\n            r = rs >> 4;\\n        if (s === 0) {\\n          if (r < 15) {\\n            eobrun = receive(r) + (1 << r) - 1;\\n            break;\\n          }\\n          k += 16;\\n          continue;\\n        }\\n        k += r;\\n        var z = dctZigZag[k];\\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\\n        k++;\\n      }\\n    }\\n    var successiveACState = 0,\\n        successiveACNextValue;\\n    function decodeACSuccessive(component, offset) {\\n      var k = spectralStart;\\n      var e = spectralEnd;\\n      var r = 0;\\n      var s;\\n      var rs;\\n      while (k <= e) {\\n        var offsetZ = offset + dctZigZag[k];\\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\\n        switch (successiveACState) {\\n          case 0:\\n            rs = decodeHuffman(component.huffmanTableAC);\\n            s = rs & 15;\\n            r = rs >> 4;\\n            if (s === 0) {\\n              if (r < 15) {\\n                eobrun = receive(r) + (1 << r);\\n                successiveACState = 4;\\n              } else {\\n                r = 16;\\n                successiveACState = 1;\\n              }\\n            } else {\\n              if (s !== 1) {\\n                throw new JpegError('invalid ACn encoding');\\n              }\\n              successiveACNextValue = receiveAndExtend(s);\\n              successiveACState = r ? 2 : 3;\\n            }\\n            continue;\\n          case 1:\\n          case 2:\\n            if (component.blockData[offsetZ]) {\\n              component.blockData[offsetZ] += sign * (readBit() << successive);\\n            } else {\\n              r--;\\n              if (r === 0) {\\n                successiveACState = successiveACState === 2 ? 3 : 0;\\n              }\\n            }\\n            break;\\n          case 3:\\n            if (component.blockData[offsetZ]) {\\n              component.blockData[offsetZ] += sign * (readBit() << successive);\\n            } else {\\n              component.blockData[offsetZ] = successiveACNextValue << successive;\\n              successiveACState = 0;\\n            }\\n            break;\\n          case 4:\\n            if (component.blockData[offsetZ]) {\\n              component.blockData[offsetZ] += sign * (readBit() << successive);\\n            }\\n            break;\\n        }\\n        k++;\\n      }\\n      if (successiveACState === 4) {\\n        eobrun--;\\n        if (eobrun === 0) {\\n          successiveACState = 0;\\n        }\\n      }\\n    }\\n    function decodeMcu(component, decode, mcu, row, col) {\\n      var mcuRow = mcu / mcusPerLine | 0;\\n      var mcuCol = mcu % mcusPerLine;\\n      var blockRow = mcuRow * component.v + row;\\n      var blockCol = mcuCol * component.h + col;\\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n      decode(component, offset);\\n    }\\n    function decodeBlock(component, decode, mcu) {\\n      var blockRow = mcu / component.blocksPerLine | 0;\\n      var blockCol = mcu % component.blocksPerLine;\\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n      decode(component, offset);\\n    }\\n    var componentsLength = components.length;\\n    var component, i, j, k, n;\\n    var decodeFn;\\n    if (progressive) {\\n      if (spectralStart === 0) {\\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\\n      } else {\\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\\n      }\\n    } else {\\n      decodeFn = decodeBaseline;\\n    }\\n    var mcu = 0,\\n        fileMarker;\\n    var mcuExpected;\\n    if (componentsLength === 1) {\\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\\n    } else {\\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\\n    }\\n    var h, v;\\n    while (mcu < mcuExpected) {\\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\\n      for (i = 0; i < componentsLength; i++) {\\n        components[i].pred = 0;\\n      }\\n      eobrun = 0;\\n      if (componentsLength === 1) {\\n        component = components[0];\\n        for (n = 0; n < mcuToRead; n++) {\\n          decodeBlock(component, decodeFn, mcu);\\n          mcu++;\\n        }\\n      } else {\\n        for (n = 0; n < mcuToRead; n++) {\\n          for (i = 0; i < componentsLength; i++) {\\n            component = components[i];\\n            h = component.h;\\n            v = component.v;\\n            for (j = 0; j < v; j++) {\\n              for (k = 0; k < h; k++) {\\n                decodeMcu(component, decodeFn, mcu, j, k);\\n              }\\n            }\\n          }\\n          mcu++;\\n        }\\n      }\\n      bitsCount = 0;\\n      fileMarker = findNextFileMarker(data, offset);\\n      if (fileMarker && fileMarker.invalid) {\\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\\n        offset = fileMarker.offset;\\n      }\\n      var marker = fileMarker && fileMarker.marker;\\n      if (!marker || marker <= 0xFF00) {\\n        throw new JpegError('marker was not found');\\n      }\\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\\n        offset += 2;\\n      } else {\\n        break;\\n      }\\n    }\\n    fileMarker = findNextFileMarker(data, offset);\\n    if (fileMarker && fileMarker.invalid) {\\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\\n      offset = fileMarker.offset;\\n    }\\n    return offset - startOffset;\\n  }\\n  function quantizeAndInverse(component, blockBufferOffset, p) {\\n    var qt = component.quantizationTable,\\n        blockData = component.blockData;\\n    var v0, v1, v2, v3, v4, v5, v6, v7;\\n    var p0, p1, p2, p3, p4, p5, p6, p7;\\n    var t;\\n    if (!qt) {\\n      throw new JpegError('missing required Quantization Table.');\\n    }\\n    for (var row = 0; row < 64; row += 8) {\\n      p0 = blockData[blockBufferOffset + row];\\n      p1 = blockData[blockBufferOffset + row + 1];\\n      p2 = blockData[blockBufferOffset + row + 2];\\n      p3 = blockData[blockBufferOffset + row + 3];\\n      p4 = blockData[blockBufferOffset + row + 4];\\n      p5 = blockData[blockBufferOffset + row + 5];\\n      p6 = blockData[blockBufferOffset + row + 6];\\n      p7 = blockData[blockBufferOffset + row + 7];\\n      p0 *= qt[row];\\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\n        t = dctSqrt2 * p0 + 512 >> 10;\\n        p[row] = t;\\n        p[row + 1] = t;\\n        p[row + 2] = t;\\n        p[row + 3] = t;\\n        p[row + 4] = t;\\n        p[row + 5] = t;\\n        p[row + 6] = t;\\n        p[row + 7] = t;\\n        continue;\\n      }\\n      p1 *= qt[row + 1];\\n      p2 *= qt[row + 2];\\n      p3 *= qt[row + 3];\\n      p4 *= qt[row + 4];\\n      p5 *= qt[row + 5];\\n      p6 *= qt[row + 6];\\n      p7 *= qt[row + 7];\\n      v0 = dctSqrt2 * p0 + 128 >> 8;\\n      v1 = dctSqrt2 * p4 + 128 >> 8;\\n      v2 = p2;\\n      v3 = p6;\\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\\n      v5 = p3 << 4;\\n      v6 = p5 << 4;\\n      v0 = v0 + v1 + 1 >> 1;\\n      v1 = v0 - v1;\\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\\n      v3 = t;\\n      v4 = v4 + v6 + 1 >> 1;\\n      v6 = v4 - v6;\\n      v7 = v7 + v5 + 1 >> 1;\\n      v5 = v7 - v5;\\n      v0 = v0 + v3 + 1 >> 1;\\n      v3 = v0 - v3;\\n      v1 = v1 + v2 + 1 >> 1;\\n      v2 = v1 - v2;\\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\n      v7 = t;\\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\n      v6 = t;\\n      p[row] = v0 + v7;\\n      p[row + 7] = v0 - v7;\\n      p[row + 1] = v1 + v6;\\n      p[row + 6] = v1 - v6;\\n      p[row + 2] = v2 + v5;\\n      p[row + 5] = v2 - v5;\\n      p[row + 3] = v3 + v4;\\n      p[row + 4] = v3 - v4;\\n    }\\n    for (var col = 0; col < 8; ++col) {\\n      p0 = p[col];\\n      p1 = p[col + 8];\\n      p2 = p[col + 16];\\n      p3 = p[col + 24];\\n      p4 = p[col + 32];\\n      p5 = p[col + 40];\\n      p6 = p[col + 48];\\n      p7 = p[col + 56];\\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\n        t = dctSqrt2 * p0 + 8192 >> 14;\\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\\n        blockData[blockBufferOffset + col] = t;\\n        blockData[blockBufferOffset + col + 8] = t;\\n        blockData[blockBufferOffset + col + 16] = t;\\n        blockData[blockBufferOffset + col + 24] = t;\\n        blockData[blockBufferOffset + col + 32] = t;\\n        blockData[blockBufferOffset + col + 40] = t;\\n        blockData[blockBufferOffset + col + 48] = t;\\n        blockData[blockBufferOffset + col + 56] = t;\\n        continue;\\n      }\\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\\n      v2 = p2;\\n      v3 = p6;\\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\\n      v5 = p3;\\n      v6 = p5;\\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\\n      v1 = v0 - v1;\\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\\n      v3 = t;\\n      v4 = v4 + v6 + 1 >> 1;\\n      v6 = v4 - v6;\\n      v7 = v7 + v5 + 1 >> 1;\\n      v5 = v7 - v5;\\n      v0 = v0 + v3 + 1 >> 1;\\n      v3 = v0 - v3;\\n      v1 = v1 + v2 + 1 >> 1;\\n      v2 = v1 - v2;\\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\n      v7 = t;\\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\n      v6 = t;\\n      p0 = v0 + v7;\\n      p7 = v0 - v7;\\n      p1 = v1 + v6;\\n      p6 = v1 - v6;\\n      p2 = v2 + v5;\\n      p5 = v2 - v5;\\n      p3 = v3 + v4;\\n      p4 = v3 - v4;\\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\\n      blockData[blockBufferOffset + col] = p0;\\n      blockData[blockBufferOffset + col + 8] = p1;\\n      blockData[blockBufferOffset + col + 16] = p2;\\n      blockData[blockBufferOffset + col + 24] = p3;\\n      blockData[blockBufferOffset + col + 32] = p4;\\n      blockData[blockBufferOffset + col + 40] = p5;\\n      blockData[blockBufferOffset + col + 48] = p6;\\n      blockData[blockBufferOffset + col + 56] = p7;\\n    }\\n  }\\n  function buildComponentData(frame, component) {\\n    var blocksPerLine = component.blocksPerLine;\\n    var blocksPerColumn = component.blocksPerColumn;\\n    var computationBuffer = new Int16Array(64);\\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n        quantizeAndInverse(component, offset, computationBuffer);\\n      }\\n    }\\n    return component.blockData;\\n  }\\n  function findNextFileMarker(data, currentPos, startPos) {\\n    function peekUint16(pos) {\\n      return data[pos] << 8 | data[pos + 1];\\n    }\\n    var maxPos = data.length - 1;\\n    var newPos = startPos < currentPos ? startPos : currentPos;\\n    if (currentPos >= maxPos) {\\n      return null;\\n    }\\n    var currentMarker = peekUint16(currentPos);\\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\\n      return {\\n        invalid: null,\\n        marker: currentMarker,\\n        offset: currentPos\\n      };\\n    }\\n    var newMarker = peekUint16(newPos);\\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\\n      if (++newPos >= maxPos) {\\n        return null;\\n      }\\n      newMarker = peekUint16(newPos);\\n    }\\n    return {\\n      invalid: currentMarker.toString(16),\\n      marker: newMarker,\\n      offset: newPos\\n    };\\n  }\\n  JpegImage.prototype = {\\n    parse: function parse(data) {\\n      function readUint16() {\\n        var value = data[offset] << 8 | data[offset + 1];\\n        offset += 2;\\n        return value;\\n      }\\n      function readDataBlock() {\\n        var length = readUint16();\\n        var endOffset = offset + length - 2;\\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\\n        if (fileMarker && fileMarker.invalid) {\\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\\n          endOffset = fileMarker.offset;\\n        }\\n        var array = data.subarray(offset, endOffset);\\n        offset += array.length;\\n        return array;\\n      }\\n      function prepareComponents(frame) {\\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\\n        for (var i = 0; i < frame.components.length; i++) {\\n          component = frame.components[i];\\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\\n          var blocksPerLineForMcu = mcusPerLine * component.h;\\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\\n          component.blockData = new Int16Array(blocksBufferSize);\\n          component.blocksPerLine = blocksPerLine;\\n          component.blocksPerColumn = blocksPerColumn;\\n        }\\n        frame.mcusPerLine = mcusPerLine;\\n        frame.mcusPerColumn = mcusPerColumn;\\n      }\\n      var offset = 0;\\n      var jfif = null;\\n      var adobe = null;\\n      var frame, resetInterval;\\n      var quantizationTables = [];\\n      var huffmanTablesAC = [],\\n          huffmanTablesDC = [];\\n      var fileMarker = readUint16();\\n      if (fileMarker !== 0xFFD8) {\\n        throw new JpegError('SOI not found');\\n      }\\n      fileMarker = readUint16();\\n      while (fileMarker !== 0xFFD9) {\\n        var i, j, l;\\n        switch (fileMarker) {\\n          case 0xFFE0:\\n          case 0xFFE1:\\n          case 0xFFE2:\\n          case 0xFFE3:\\n          case 0xFFE4:\\n          case 0xFFE5:\\n          case 0xFFE6:\\n          case 0xFFE7:\\n          case 0xFFE8:\\n          case 0xFFE9:\\n          case 0xFFEA:\\n          case 0xFFEB:\\n          case 0xFFEC:\\n          case 0xFFED:\\n          case 0xFFEE:\\n          case 0xFFEF:\\n          case 0xFFFE:\\n            var appData = readDataBlock();\\n            if (fileMarker === 0xFFE0) {\\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\\n                jfif = {\\n                  version: {\\n                    major: appData[5],\\n                    minor: appData[6]\\n                  },\\n                  densityUnits: appData[7],\\n                  xDensity: appData[8] << 8 | appData[9],\\n                  yDensity: appData[10] << 8 | appData[11],\\n                  thumbWidth: appData[12],\\n                  thumbHeight: appData[13],\\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\\n                };\\n              }\\n            }\\n            if (fileMarker === 0xFFEE) {\\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\\n                adobe = {\\n                  version: appData[5] << 8 | appData[6],\\n                  flags0: appData[7] << 8 | appData[8],\\n                  flags1: appData[9] << 8 | appData[10],\\n                  transformCode: appData[11]\\n                };\\n              }\\n            }\\n            break;\\n          case 0xFFDB:\\n            var quantizationTablesLength = readUint16();\\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\\n            var z;\\n            while (offset < quantizationTablesEnd) {\\n              var quantizationTableSpec = data[offset++];\\n              var tableData = new Uint16Array(64);\\n              if (quantizationTableSpec >> 4 === 0) {\\n                for (j = 0; j < 64; j++) {\\n                  z = dctZigZag[j];\\n                  tableData[z] = data[offset++];\\n                }\\n              } else if (quantizationTableSpec >> 4 === 1) {\\n                for (j = 0; j < 64; j++) {\\n                  z = dctZigZag[j];\\n                  tableData[z] = readUint16();\\n                }\\n              } else {\\n                throw new JpegError('DQT - invalid table spec');\\n              }\\n              quantizationTables[quantizationTableSpec & 15] = tableData;\\n            }\\n            break;\\n          case 0xFFC0:\\n          case 0xFFC1:\\n          case 0xFFC2:\\n            if (frame) {\\n              throw new JpegError('Only single frame JPEGs supported');\\n            }\\n            readUint16();\\n            frame = {};\\n            frame.extended = fileMarker === 0xFFC1;\\n            frame.progressive = fileMarker === 0xFFC2;\\n            frame.precision = data[offset++];\\n            frame.scanLines = readUint16();\\n            frame.samplesPerLine = readUint16();\\n            frame.components = [];\\n            frame.componentIds = {};\\n            var componentsCount = data[offset++],\\n                componentId;\\n            var maxH = 0,\\n                maxV = 0;\\n            for (i = 0; i < componentsCount; i++) {\\n              componentId = data[offset];\\n              var h = data[offset + 1] >> 4;\\n              var v = data[offset + 1] & 15;\\n              if (maxH < h) {\\n                maxH = h;\\n              }\\n              if (maxV < v) {\\n                maxV = v;\\n              }\\n              var qId = data[offset + 2];\\n              l = frame.components.push({\\n                h: h,\\n                v: v,\\n                quantizationId: qId,\\n                quantizationTable: null\\n              });\\n              frame.componentIds[componentId] = l - 1;\\n              offset += 3;\\n            }\\n            frame.maxH = maxH;\\n            frame.maxV = maxV;\\n            prepareComponents(frame);\\n            break;\\n          case 0xFFC4:\\n            var huffmanLength = readUint16();\\n            for (i = 2; i < huffmanLength;) {\\n              var huffmanTableSpec = data[offset++];\\n              var codeLengths = new Uint8Array(16);\\n              var codeLengthSum = 0;\\n              for (j = 0; j < 16; j++, offset++) {\\n                codeLengthSum += codeLengths[j] = data[offset];\\n              }\\n              var huffmanValues = new Uint8Array(codeLengthSum);\\n              for (j = 0; j < codeLengthSum; j++, offset++) {\\n                huffmanValues[j] = data[offset];\\n              }\\n              i += 17 + codeLengthSum;\\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\\n            }\\n            break;\\n          case 0xFFDD:\\n            readUint16();\\n            resetInterval = readUint16();\\n            break;\\n          case 0xFFDA:\\n            readUint16();\\n            var selectorsCount = data[offset++];\\n            var components = [],\\n                component;\\n            for (i = 0; i < selectorsCount; i++) {\\n              var componentIndex = frame.componentIds[data[offset++]];\\n              component = frame.components[componentIndex];\\n              var tableSpec = data[offset++];\\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\\n              components.push(component);\\n            }\\n            var spectralStart = data[offset++];\\n            var spectralEnd = data[offset++];\\n            var successiveApproximation = data[offset++];\\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\\n            offset += processed;\\n            break;\\n          case 0xFFFF:\\n            if (data[offset] !== 0xFF) {\\n              offset--;\\n            }\\n            break;\\n          default:\\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\\n              offset -= 3;\\n              break;\\n            }\\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\\n        }\\n        fileMarker = readUint16();\\n      }\\n      this.width = frame.samplesPerLine;\\n      this.height = frame.scanLines;\\n      this.jfif = jfif;\\n      this.adobe = adobe;\\n      this.components = [];\\n      for (i = 0; i < frame.components.length; i++) {\\n        component = frame.components[i];\\n        var quantizationTable = quantizationTables[component.quantizationId];\\n        if (quantizationTable) {\\n          component.quantizationTable = quantizationTable;\\n        }\\n        this.components.push({\\n          output: buildComponentData(frame, component),\\n          scaleX: component.h / frame.maxH,\\n          scaleY: component.v / frame.maxV,\\n          blocksPerLine: component.blocksPerLine,\\n          blocksPerColumn: component.blocksPerColumn\\n        });\\n      }\\n      this.numComponents = this.components.length;\\n    },\\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\\n      var scaleX = this.width / width,\\n          scaleY = this.height / height;\\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\\n      var x, y, i, j, k;\\n      var index;\\n      var offset = 0;\\n      var output;\\n      var numComponents = this.components.length;\\n      var dataLength = width * height * numComponents;\\n      var data = new Uint8ClampedArray(dataLength);\\n      var xScaleBlockOffset = new Uint32Array(width);\\n      var mask3LSB = 0xfffffff8;\\n      for (i = 0; i < numComponents; i++) {\\n        component = this.components[i];\\n        componentScaleX = component.scaleX * scaleX;\\n        componentScaleY = component.scaleY * scaleY;\\n        offset = i;\\n        output = component.output;\\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\\n        for (x = 0; x < width; x++) {\\n          j = 0 | x * componentScaleX;\\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\\n        }\\n        for (y = 0; y < height; y++) {\\n          j = 0 | y * componentScaleY;\\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\\n          for (x = 0; x < width; x++) {\\n            data[offset] = output[index + xScaleBlockOffset[x]];\\n            offset += numComponents;\\n          }\\n        }\\n      }\\n      var transform = this.decodeTransform;\\n      if (transform) {\\n        for (i = 0; i < dataLength;) {\\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\\n          }\\n        }\\n      }\\n      return data;\\n    },\\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\\n      if (this.adobe) {\\n        return !!this.adobe.transformCode;\\n      }\\n      if (this.numComponents === 3) {\\n        if (this.colorTransform === 0) {\\n          return false;\\n        }\\n        return true;\\n      }\\n      if (this.colorTransform === 1) {\\n        return true;\\n      }\\n      return false;\\n    },\\n\\n    _convertYccToRgb: function convertYccToRgb(data) {\\n      var Y, Cb, Cr;\\n      for (var i = 0, length = data.length; i < length; i += 3) {\\n        Y = data[i];\\n        Cb = data[i + 1];\\n        Cr = data[i + 2];\\n        data[i] = Y - 179.456 + 1.402 * Cr;\\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\\n      }\\n      return data;\\n    },\\n    _convertYcckToRgb: function convertYcckToRgb(data) {\\n      var Y, Cb, Cr, k;\\n      var offset = 0;\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\n        Y = data[i];\\n        Cb = data[i + 1];\\n        Cr = data[i + 2];\\n        k = data[i + 3];\\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\\n      }\\n      return data;\\n    },\\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\\n      var Y, Cb, Cr;\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\n        Y = data[i];\\n        Cb = data[i + 1];\\n        Cr = data[i + 2];\\n        data[i] = 434.456 - Y - 1.402 * Cr;\\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\\n      }\\n      return data;\\n    },\\n    _convertCmykToRgb: function convertCmykToRgb(data) {\\n      var c, m, y, k;\\n      var offset = 0;\\n      var scale = 1 / 255;\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\n        c = data[i] * scale;\\n        m = data[i + 1] * scale;\\n        y = data[i + 2] * scale;\\n        k = data[i + 3] * scale;\\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\\n      }\\n      return data;\\n    },\\n    getData: function getData(width, height, forceRGBoutput) {\\n      if (this.numComponents > 4) {\\n        throw new JpegError('Unsupported color mode');\\n      }\\n      var data = this._getLinearizedBlockData(width, height);\\n      if (this.numComponents === 1 && forceRGBoutput) {\\n        var dataLength = data.length;\\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\\n        var offset = 0;\\n        for (var i = 0; i < dataLength; i++) {\\n          var grayColor = data[i];\\n          rgbData[offset++] = grayColor;\\n          rgbData[offset++] = grayColor;\\n          rgbData[offset++] = grayColor;\\n        }\\n        return rgbData;\\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\\n        return this._convertYccToRgb(data);\\n      } else if (this.numComponents === 4) {\\n        if (this._isColorConversionNeeded()) {\\n          if (forceRGBoutput) {\\n            return this._convertYcckToRgb(data);\\n          }\\n          return this._convertYcckToCmyk(data);\\n        } else if (forceRGBoutput) {\\n          return this._convertCmykToRgb(data);\\n        }\\n      }\\n      return data;\\n    }\\n  };\\n  return JpegImage;\\n}();\\nexports.JpegImage = JpegImage;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpxImage = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _arithmetic_decoder = require('./arithmetic_decoder');\\n\\nvar JpxError = function JpxErrorClosure() {\\n  function JpxError(msg) {\\n    this.message = 'JPX error: ' + msg;\\n  }\\n  JpxError.prototype = new Error();\\n  JpxError.prototype.name = 'JpxError';\\n  JpxError.constructor = JpxError;\\n  return JpxError;\\n}();\\nvar JpxImage = function JpxImageClosure() {\\n  var SubbandsGainLog2 = {\\n    'LL': 0,\\n    'LH': 1,\\n    'HL': 1,\\n    'HH': 2\\n  };\\n  function JpxImage() {\\n    this.failOnCorruptedImage = false;\\n  }\\n  JpxImage.prototype = {\\n    parse: function JpxImage_parse(data) {\\n      var head = (0, _util.readUint16)(data, 0);\\n      if (head === 0xFF4F) {\\n        this.parseCodestream(data, 0, data.length);\\n        return;\\n      }\\n      var position = 0,\\n          length = data.length;\\n      while (position < length) {\\n        var headerSize = 8;\\n        var lbox = (0, _util.readUint32)(data, position);\\n        var tbox = (0, _util.readUint32)(data, position + 4);\\n        position += headerSize;\\n        if (lbox === 1) {\\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\\n          position += 8;\\n          headerSize += 8;\\n        }\\n        if (lbox === 0) {\\n          lbox = length - position + headerSize;\\n        }\\n        if (lbox < headerSize) {\\n          throw new JpxError('Invalid box field size');\\n        }\\n        var dataLength = lbox - headerSize;\\n        var jumpDataLength = true;\\n        switch (tbox) {\\n          case 0x6A703268:\\n            jumpDataLength = false;\\n            break;\\n          case 0x636F6C72:\\n            var method = data[position];\\n            if (method === 1) {\\n              var colorspace = (0, _util.readUint32)(data, position + 3);\\n              switch (colorspace) {\\n                case 16:\\n                case 17:\\n                case 18:\\n                  break;\\n                default:\\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\\n                  break;\\n              }\\n            } else if (method === 2) {\\n              (0, _util.info)('ICC profile not supported');\\n            }\\n            break;\\n          case 0x6A703263:\\n            this.parseCodestream(data, position, position + dataLength);\\n            break;\\n          case 0x6A502020:\\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\\n              (0, _util.warn)('Invalid JP2 signature');\\n            }\\n            break;\\n          case 0x6A501A1A:\\n          case 0x66747970:\\n          case 0x72726571:\\n          case 0x72657320:\\n          case 0x69686472:\\n            break;\\n          default:\\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\\n            break;\\n        }\\n        if (jumpDataLength) {\\n          position += dataLength;\\n        }\\n      }\\n    },\\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\\n      var newByte = stream.getByte();\\n      while (newByte >= 0) {\\n        var oldByte = newByte;\\n        newByte = stream.getByte();\\n        var code = oldByte << 8 | newByte;\\n        if (code === 0xFF51) {\\n          stream.skip(4);\\n          var Xsiz = stream.getInt32() >>> 0;\\n          var Ysiz = stream.getInt32() >>> 0;\\n          var XOsiz = stream.getInt32() >>> 0;\\n          var YOsiz = stream.getInt32() >>> 0;\\n          stream.skip(16);\\n          var Csiz = stream.getUint16();\\n          this.width = Xsiz - XOsiz;\\n          this.height = Ysiz - YOsiz;\\n          this.componentsCount = Csiz;\\n          this.bitsPerComponent = 8;\\n          return;\\n        }\\n      }\\n      throw new JpxError('No size marker found in JPX stream');\\n    },\\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\\n      var context = {};\\n      var doNotRecover = false;\\n      try {\\n        var position = start;\\n        while (position + 1 < end) {\\n          var code = (0, _util.readUint16)(data, position);\\n          position += 2;\\n          var length = 0,\\n              j,\\n              sqcd,\\n              spqcds,\\n              spqcdSize,\\n              scalarExpounded,\\n              tile;\\n          switch (code) {\\n            case 0xFF4F:\\n              context.mainHeader = true;\\n              break;\\n            case 0xFFD9:\\n              break;\\n            case 0xFF51:\\n              length = (0, _util.readUint16)(data, position);\\n              var siz = {};\\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\\n              siz.Csiz = componentsCount;\\n              var components = [];\\n              j = position + 38;\\n              for (var i = 0; i < componentsCount; i++) {\\n                var component = {\\n                  precision: (data[j] & 0x7F) + 1,\\n                  isSigned: !!(data[j] & 0x80),\\n                  XRsiz: data[j + 1],\\n                  YRsiz: data[j + 2]\\n                };\\n                j += 3;\\n                calculateComponentDimensions(component, siz);\\n                components.push(component);\\n              }\\n              context.SIZ = siz;\\n              context.components = components;\\n              calculateTileGrids(context, components);\\n              context.QCC = [];\\n              context.COC = [];\\n              break;\\n            case 0xFF5C:\\n              length = (0, _util.readUint16)(data, position);\\n              var qcd = {};\\n              j = position + 2;\\n              sqcd = data[j++];\\n              switch (sqcd & 0x1F) {\\n                case 0:\\n                  spqcdSize = 8;\\n                  scalarExpounded = true;\\n                  break;\\n                case 1:\\n                  spqcdSize = 16;\\n                  scalarExpounded = false;\\n                  break;\\n                case 2:\\n                  spqcdSize = 16;\\n                  scalarExpounded = true;\\n                  break;\\n                default:\\n                  throw new Error('Invalid SQcd value ' + sqcd);\\n              }\\n              qcd.noQuantization = spqcdSize === 8;\\n              qcd.scalarExpounded = scalarExpounded;\\n              qcd.guardBits = sqcd >> 5;\\n              spqcds = [];\\n              while (j < length + position) {\\n                var spqcd = {};\\n                if (spqcdSize === 8) {\\n                  spqcd.epsilon = data[j++] >> 3;\\n                  spqcd.mu = 0;\\n                } else {\\n                  spqcd.epsilon = data[j] >> 3;\\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\n                  j += 2;\\n                }\\n                spqcds.push(spqcd);\\n              }\\n              qcd.SPqcds = spqcds;\\n              if (context.mainHeader) {\\n                context.QCD = qcd;\\n              } else {\\n                context.currentTile.QCD = qcd;\\n                context.currentTile.QCC = [];\\n              }\\n              break;\\n            case 0xFF5D:\\n              length = (0, _util.readUint16)(data, position);\\n              var qcc = {};\\n              j = position + 2;\\n              var cqcc;\\n              if (context.SIZ.Csiz < 257) {\\n                cqcc = data[j++];\\n              } else {\\n                cqcc = (0, _util.readUint16)(data, j);\\n                j += 2;\\n              }\\n              sqcd = data[j++];\\n              switch (sqcd & 0x1F) {\\n                case 0:\\n                  spqcdSize = 8;\\n                  scalarExpounded = true;\\n                  break;\\n                case 1:\\n                  spqcdSize = 16;\\n                  scalarExpounded = false;\\n                  break;\\n                case 2:\\n                  spqcdSize = 16;\\n                  scalarExpounded = true;\\n                  break;\\n                default:\\n                  throw new Error('Invalid SQcd value ' + sqcd);\\n              }\\n              qcc.noQuantization = spqcdSize === 8;\\n              qcc.scalarExpounded = scalarExpounded;\\n              qcc.guardBits = sqcd >> 5;\\n              spqcds = [];\\n              while (j < length + position) {\\n                spqcd = {};\\n                if (spqcdSize === 8) {\\n                  spqcd.epsilon = data[j++] >> 3;\\n                  spqcd.mu = 0;\\n                } else {\\n                  spqcd.epsilon = data[j] >> 3;\\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\n                  j += 2;\\n                }\\n                spqcds.push(spqcd);\\n              }\\n              qcc.SPqcds = spqcds;\\n              if (context.mainHeader) {\\n                context.QCC[cqcc] = qcc;\\n              } else {\\n                context.currentTile.QCC[cqcc] = qcc;\\n              }\\n              break;\\n            case 0xFF52:\\n              length = (0, _util.readUint16)(data, position);\\n              var cod = {};\\n              j = position + 2;\\n              var scod = data[j++];\\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\\n              cod.sopMarkerUsed = !!(scod & 2);\\n              cod.ephMarkerUsed = !!(scod & 4);\\n              cod.progressionOrder = data[j++];\\n              cod.layersCount = (0, _util.readUint16)(data, j);\\n              j += 2;\\n              cod.multipleComponentTransform = data[j++];\\n              cod.decompositionLevelsCount = data[j++];\\n              cod.xcb = (data[j++] & 0xF) + 2;\\n              cod.ycb = (data[j++] & 0xF) + 2;\\n              var blockStyle = data[j++];\\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\\n              cod.resetContextProbabilities = !!(blockStyle & 2);\\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\\n              cod.verticalyStripe = !!(blockStyle & 8);\\n              cod.predictableTermination = !!(blockStyle & 16);\\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\\n              cod.reversibleTransformation = data[j++];\\n              if (cod.entropyCoderWithCustomPrecincts) {\\n                var precinctsSizes = [];\\n                while (j < length + position) {\\n                  var precinctsSize = data[j++];\\n                  precinctsSizes.push({\\n                    PPx: precinctsSize & 0xF,\\n                    PPy: precinctsSize >> 4\\n                  });\\n                }\\n                cod.precinctsSizes = precinctsSizes;\\n              }\\n              var unsupported = [];\\n              if (cod.selectiveArithmeticCodingBypass) {\\n                unsupported.push('selectiveArithmeticCodingBypass');\\n              }\\n              if (cod.resetContextProbabilities) {\\n                unsupported.push('resetContextProbabilities');\\n              }\\n              if (cod.terminationOnEachCodingPass) {\\n                unsupported.push('terminationOnEachCodingPass');\\n              }\\n              if (cod.verticalyStripe) {\\n                unsupported.push('verticalyStripe');\\n              }\\n              if (cod.predictableTermination) {\\n                unsupported.push('predictableTermination');\\n              }\\n              if (unsupported.length > 0) {\\n                doNotRecover = true;\\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\\n              }\\n              if (context.mainHeader) {\\n                context.COD = cod;\\n              } else {\\n                context.currentTile.COD = cod;\\n                context.currentTile.COC = [];\\n              }\\n              break;\\n            case 0xFF90:\\n              length = (0, _util.readUint16)(data, position);\\n              tile = {};\\n              tile.index = (0, _util.readUint16)(data, position + 2);\\n              tile.length = (0, _util.readUint32)(data, position + 4);\\n              tile.dataEnd = tile.length + position - 2;\\n              tile.partIndex = data[position + 8];\\n              tile.partsCount = data[position + 9];\\n              context.mainHeader = false;\\n              if (tile.partIndex === 0) {\\n                tile.COD = context.COD;\\n                tile.COC = context.COC.slice(0);\\n                tile.QCD = context.QCD;\\n                tile.QCC = context.QCC.slice(0);\\n              }\\n              context.currentTile = tile;\\n              break;\\n            case 0xFF93:\\n              tile = context.currentTile;\\n              if (tile.partIndex === 0) {\\n                initializeTile(context, tile.index);\\n                buildPackets(context);\\n              }\\n              length = tile.dataEnd - position;\\n              parseTilePackets(context, data, position, length);\\n              break;\\n            case 0xFF55:\\n            case 0xFF57:\\n            case 0xFF58:\\n            case 0xFF64:\\n              length = (0, _util.readUint16)(data, position);\\n              break;\\n            case 0xFF53:\\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\\n            default:\\n              throw new Error('Unknown codestream code: ' + code.toString(16));\\n          }\\n          position += length;\\n        }\\n      } catch (e) {\\n        if (doNotRecover || this.failOnCorruptedImage) {\\n          throw new JpxError(e.message);\\n        } else {\\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\\n        }\\n      }\\n      this.tiles = transformComponents(context);\\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\\n      this.componentsCount = context.SIZ.Csiz;\\n    }\\n  };\\n  function calculateComponentDimensions(component, siz) {\\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\\n    component.width = component.x1 - component.x0;\\n    component.height = component.y1 - component.y0;\\n  }\\n  function calculateTileGrids(context, components) {\\n    var siz = context.SIZ;\\n    var tile,\\n        tiles = [];\\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\\n    for (var q = 0; q < numYtiles; q++) {\\n      for (var p = 0; p < numXtiles; p++) {\\n        tile = {};\\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\\n        tile.width = tile.tx1 - tile.tx0;\\n        tile.height = tile.ty1 - tile.ty0;\\n        tile.components = [];\\n        tiles.push(tile);\\n      }\\n    }\\n    context.tiles = tiles;\\n    var componentsCount = siz.Csiz;\\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\\n      var component = components[i];\\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\\n        var tileComponent = {};\\n        tile = tiles[j];\\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\\n        tile.components[i] = tileComponent;\\n      }\\n    }\\n  }\\n  function getBlocksDimensions(context, component, r) {\\n    var codOrCoc = component.codingStyleParameters;\\n    var result = {};\\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\\n      result.PPx = 15;\\n      result.PPy = 15;\\n    } else {\\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\\n    }\\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\\n    return result;\\n  }\\n  function buildPrecincts(context, resolution, dimensions) {\\n    var precinctWidth = 1 << dimensions.PPx;\\n    var precinctHeight = 1 << dimensions.PPy;\\n    var isZeroRes = resolution.resLevel === 0;\\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\\n    var numprecincts = numprecinctswide * numprecinctshigh;\\n    resolution.precinctParameters = {\\n      precinctWidth: precinctWidth,\\n      precinctHeight: precinctHeight,\\n      numprecinctswide: numprecinctswide,\\n      numprecinctshigh: numprecinctshigh,\\n      numprecincts: numprecincts,\\n      precinctWidthInSubband: precinctWidthInSubband,\\n      precinctHeightInSubband: precinctHeightInSubband\\n    };\\n  }\\n  function buildCodeblocks(context, subband, dimensions) {\\n    var xcb_ = dimensions.xcb_;\\n    var ycb_ = dimensions.ycb_;\\n    var codeblockWidth = 1 << xcb_;\\n    var codeblockHeight = 1 << ycb_;\\n    var cbx0 = subband.tbx0 >> xcb_;\\n    var cby0 = subband.tby0 >> ycb_;\\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\\n    var precinctParameters = subband.resolution.precinctParameters;\\n    var codeblocks = [];\\n    var precincts = [];\\n    var i, j, codeblock, precinctNumber;\\n    for (j = cby0; j < cby1; j++) {\\n      for (i = cbx0; i < cbx1; i++) {\\n        codeblock = {\\n          cbx: i,\\n          cby: j,\\n          tbx0: codeblockWidth * i,\\n          tby0: codeblockHeight * j,\\n          tbx1: codeblockWidth * (i + 1),\\n          tby1: codeblockHeight * (j + 1)\\n        };\\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\\n        codeblock.precinctNumber = precinctNumber;\\n        codeblock.subbandType = subband.type;\\n        codeblock.Lblock = 3;\\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\\n          continue;\\n        }\\n        codeblocks.push(codeblock);\\n        var precinct = precincts[precinctNumber];\\n        if (precinct !== undefined) {\\n          if (i < precinct.cbxMin) {\\n            precinct.cbxMin = i;\\n          } else if (i > precinct.cbxMax) {\\n            precinct.cbxMax = i;\\n          }\\n          if (j < precinct.cbyMin) {\\n            precinct.cbxMin = j;\\n          } else if (j > precinct.cbyMax) {\\n            precinct.cbyMax = j;\\n          }\\n        } else {\\n          precincts[precinctNumber] = precinct = {\\n            cbxMin: i,\\n            cbyMin: j,\\n            cbxMax: i,\\n            cbyMax: j\\n          };\\n        }\\n        codeblock.precinct = precinct;\\n      }\\n    }\\n    subband.codeblockParameters = {\\n      codeblockWidth: xcb_,\\n      codeblockHeight: ycb_,\\n      numcodeblockwide: cbx1 - cbx0 + 1,\\n      numcodeblockhigh: cby1 - cby0 + 1\\n    };\\n    subband.codeblocks = codeblocks;\\n    subband.precincts = precincts;\\n  }\\n  function createPacket(resolution, precinctNumber, layerNumber) {\\n    var precinctCodeblocks = [];\\n    var subbands = resolution.subbands;\\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\\n      var subband = subbands[i];\\n      var codeblocks = subband.codeblocks;\\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\\n        var codeblock = codeblocks[j];\\n        if (codeblock.precinctNumber !== precinctNumber) {\\n          continue;\\n        }\\n        precinctCodeblocks.push(codeblock);\\n      }\\n    }\\n    return {\\n      layerNumber: layerNumber,\\n      codeblocks: precinctCodeblocks\\n    };\\n  }\\n  function LayerResolutionComponentPositionIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var maxDecompositionLevelsCount = 0;\\n    for (var q = 0; q < componentsCount; q++) {\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\\n    }\\n    var l = 0,\\n        r = 0,\\n        i = 0,\\n        k = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; l < layersCount; l++) {\\n        for (; r <= maxDecompositionLevelsCount; r++) {\\n          for (; i < componentsCount; i++) {\\n            var component = tile.components[i];\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n              continue;\\n            }\\n            var resolution = component.resolutions[r];\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\n            for (; k < numprecincts;) {\\n              var packet = createPacket(resolution, k, l);\\n              k++;\\n              return packet;\\n            }\\n            k = 0;\\n          }\\n          i = 0;\\n        }\\n        r = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function ResolutionLayerComponentPositionIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var maxDecompositionLevelsCount = 0;\\n    for (var q = 0; q < componentsCount; q++) {\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\\n    }\\n    var r = 0,\\n        l = 0,\\n        i = 0,\\n        k = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; r <= maxDecompositionLevelsCount; r++) {\\n        for (; l < layersCount; l++) {\\n          for (; i < componentsCount; i++) {\\n            var component = tile.components[i];\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n              continue;\\n            }\\n            var resolution = component.resolutions[r];\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\n            for (; k < numprecincts;) {\\n              var packet = createPacket(resolution, k, l);\\n              k++;\\n              return packet;\\n            }\\n            k = 0;\\n          }\\n          i = 0;\\n        }\\n        l = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function ResolutionPositionComponentLayerIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var l, r, c, p;\\n    var maxDecompositionLevelsCount = 0;\\n    for (c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\\n    }\\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\\n      var maxNumPrecincts = 0;\\n      for (c = 0; c < componentsCount; ++c) {\\n        var resolutions = tile.components[c].resolutions;\\n        if (r < resolutions.length) {\\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\\n        }\\n      }\\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\\n    }\\n    l = 0;\\n    r = 0;\\n    c = 0;\\n    p = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; r <= maxDecompositionLevelsCount; r++) {\\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\\n          for (; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n              continue;\\n            }\\n            var resolution = component.resolutions[r];\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\n            if (p >= numprecincts) {\\n              continue;\\n            }\\n            for (; l < layersCount;) {\\n              var packet = createPacket(resolution, p, l);\\n              l++;\\n              return packet;\\n            }\\n            l = 0;\\n          }\\n          c = 0;\\n        }\\n        p = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function PositionComponentResolutionLayerIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\\n    var precinctsIterationSizes = precinctsSizes;\\n    var l = 0,\\n        r = 0,\\n        c = 0,\\n        px = 0,\\n        py = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\\n          for (; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n            for (; r <= decompositionLevelsCount; r++) {\\n              var resolution = component.resolutions[r];\\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\n              if (k === null) {\\n                continue;\\n              }\\n              for (; l < layersCount;) {\\n                var packet = createPacket(resolution, k, l);\\n                l++;\\n                return packet;\\n              }\\n              l = 0;\\n            }\\n            r = 0;\\n          }\\n          c = 0;\\n        }\\n        px = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function ComponentPositionResolutionLayerIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\\n    var l = 0,\\n        r = 0,\\n        c = 0,\\n        px = 0,\\n        py = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; c < componentsCount; ++c) {\\n        var component = tile.components[c];\\n        var precinctsIterationSizes = precinctsSizes.components[c];\\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\\n            for (; r <= decompositionLevelsCount; r++) {\\n              var resolution = component.resolutions[r];\\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\n              if (k === null) {\\n                continue;\\n              }\\n              for (; l < layersCount;) {\\n                var packet = createPacket(resolution, k, l);\\n                l++;\\n                return packet;\\n              }\\n              l = 0;\\n            }\\n            r = 0;\\n          }\\n          px = 0;\\n        }\\n        py = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\\n    var posX = pxIndex * precinctIterationSizes.minWidth;\\n    var posY = pyIndex * precinctIterationSizes.minHeight;\\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\\n      return null;\\n    }\\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\\n  }\\n  function getPrecinctSizesInImageScale(tile) {\\n    var componentsCount = tile.components.length;\\n    var minWidth = Number.MAX_VALUE;\\n    var minHeight = Number.MAX_VALUE;\\n    var maxNumWide = 0;\\n    var maxNumHigh = 0;\\n    var sizePerComponent = new Array(componentsCount);\\n    for (var c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\\n      var minWidthCurrentComponent = Number.MAX_VALUE;\\n      var minHeightCurrentComponent = Number.MAX_VALUE;\\n      var maxNumWideCurrentComponent = 0;\\n      var maxNumHighCurrentComponent = 0;\\n      var scale = 1;\\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\\n        var resolution = component.resolutions[r];\\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\\n        sizePerResolution[r] = {\\n          width: widthCurrentResolution,\\n          height: heightCurrentResolution\\n        };\\n        scale <<= 1;\\n      }\\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\\n      sizePerComponent[c] = {\\n        resolutions: sizePerResolution,\\n        minWidth: minWidthCurrentComponent,\\n        minHeight: minHeightCurrentComponent,\\n        maxNumWide: maxNumWideCurrentComponent,\\n        maxNumHigh: maxNumHighCurrentComponent\\n      };\\n    }\\n    return {\\n      components: sizePerComponent,\\n      minWidth: minWidth,\\n      minHeight: minHeight,\\n      maxNumWide: maxNumWide,\\n      maxNumHigh: maxNumHigh\\n    };\\n  }\\n  function buildPackets(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var componentsCount = siz.Csiz;\\n    for (var c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n      var resolutions = [];\\n      var subbands = [];\\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\\n        var blocksDimensions = getBlocksDimensions(context, component, r);\\n        var resolution = {};\\n        var scale = 1 << decompositionLevelsCount - r;\\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\\n        resolution.resLevel = r;\\n        buildPrecincts(context, resolution, blocksDimensions);\\n        resolutions.push(resolution);\\n        var subband;\\n        if (r === 0) {\\n          subband = {};\\n          subband.type = 'LL';\\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolution.subbands = [subband];\\n        } else {\\n          var bscale = 1 << decompositionLevelsCount - r + 1;\\n          var resolutionSubbands = [];\\n          subband = {};\\n          subband.type = 'HL';\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolutionSubbands.push(subband);\\n          subband = {};\\n          subband.type = 'LH';\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolutionSubbands.push(subband);\\n          subband = {};\\n          subband.type = 'HH';\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolutionSubbands.push(subband);\\n          resolution.subbands = resolutionSubbands;\\n        }\\n      }\\n      component.resolutions = resolutions;\\n      component.subbands = subbands;\\n    }\\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\\n    switch (progressionOrder) {\\n      case 0:\\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\\n        break;\\n      case 1:\\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\\n        break;\\n      case 2:\\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\\n        break;\\n      case 3:\\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\\n        break;\\n      case 4:\\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\\n        break;\\n      default:\\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\\n    }\\n  }\\n  function parseTilePackets(context, data, offset, dataLength) {\\n    var position = 0;\\n    var buffer,\\n        bufferSize = 0,\\n        skipNextBit = false;\\n    function readBits(count) {\\n      while (bufferSize < count) {\\n        var b = data[offset + position];\\n        position++;\\n        if (skipNextBit) {\\n          buffer = buffer << 7 | b;\\n          bufferSize += 7;\\n          skipNextBit = false;\\n        } else {\\n          buffer = buffer << 8 | b;\\n          bufferSize += 8;\\n        }\\n        if (b === 0xFF) {\\n          skipNextBit = true;\\n        }\\n      }\\n      bufferSize -= count;\\n      return buffer >>> bufferSize & (1 << count) - 1;\\n    }\\n    function skipMarkerIfEqual(value) {\\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\\n        skipBytes(1);\\n        return true;\\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\\n        skipBytes(2);\\n        return true;\\n      }\\n      return false;\\n    }\\n    function skipBytes(count) {\\n      position += count;\\n    }\\n    function alignToByte() {\\n      bufferSize = 0;\\n      if (skipNextBit) {\\n        position++;\\n        skipNextBit = false;\\n      }\\n    }\\n    function readCodingpasses() {\\n      if (readBits(1) === 0) {\\n        return 1;\\n      }\\n      if (readBits(1) === 0) {\\n        return 2;\\n      }\\n      var value = readBits(2);\\n      if (value < 3) {\\n        return value + 3;\\n      }\\n      value = readBits(5);\\n      if (value < 31) {\\n        return value + 6;\\n      }\\n      value = readBits(7);\\n      return value + 37;\\n    }\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\\n    var packetsIterator = tile.packetsIterator;\\n    while (position < dataLength) {\\n      alignToByte();\\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\\n        skipBytes(4);\\n      }\\n      var packet = packetsIterator.nextPacket();\\n      if (!readBits(1)) {\\n        continue;\\n      }\\n      var layerNumber = packet.layerNumber;\\n      var queue = [],\\n          codeblock;\\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\\n        codeblock = packet.codeblocks[i];\\n        var precinct = codeblock.precinct;\\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\\n        var codeblockIncluded = false;\\n        var firstTimeInclusion = false;\\n        var valueReady;\\n        if (codeblock['included'] !== undefined) {\\n          codeblockIncluded = !!readBits(1);\\n        } else {\\n          precinct = codeblock.precinct;\\n          var inclusionTree, zeroBitPlanesTree;\\n          if (precinct['inclusionTree'] !== undefined) {\\n            inclusionTree = precinct.inclusionTree;\\n          } else {\\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\\n            inclusionTree = new InclusionTree(width, height, layerNumber);\\n            zeroBitPlanesTree = new TagTree(width, height);\\n            precinct.inclusionTree = inclusionTree;\\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\\n          }\\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\\n            while (true) {\\n              if (readBits(1)) {\\n                valueReady = !inclusionTree.nextLevel();\\n                if (valueReady) {\\n                  codeblock.included = true;\\n                  codeblockIncluded = firstTimeInclusion = true;\\n                  break;\\n                }\\n              } else {\\n                inclusionTree.incrementValue(layerNumber);\\n                break;\\n              }\\n            }\\n          }\\n        }\\n        if (!codeblockIncluded) {\\n          continue;\\n        }\\n        if (firstTimeInclusion) {\\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\\n          while (true) {\\n            if (readBits(1)) {\\n              valueReady = !zeroBitPlanesTree.nextLevel();\\n              if (valueReady) {\\n                break;\\n              }\\n            } else {\\n              zeroBitPlanesTree.incrementValue();\\n            }\\n          }\\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\\n        }\\n        var codingpasses = readCodingpasses();\\n        while (readBits(1)) {\\n          codeblock.Lblock++;\\n        }\\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\\n        var codedDataLength = readBits(bits);\\n        queue.push({\\n          codeblock: codeblock,\\n          codingpasses: codingpasses,\\n          dataLength: codedDataLength\\n        });\\n      }\\n      alignToByte();\\n      if (ephMarkerUsed) {\\n        skipMarkerIfEqual(0x92);\\n      }\\n      while (queue.length > 0) {\\n        var packetItem = queue.shift();\\n        codeblock = packetItem.codeblock;\\n        if (codeblock['data'] === undefined) {\\n          codeblock.data = [];\\n        }\\n        codeblock.data.push({\\n          data: data,\\n          start: offset + position,\\n          end: offset + position + packetItem.dataLength,\\n          codingpasses: packetItem.codingpasses\\n        });\\n        position += packetItem.dataLength;\\n      }\\n    }\\n    return position;\\n  }\\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\\n    var x0 = subband.tbx0;\\n    var y0 = subband.tby0;\\n    var width = subband.tbx1 - subband.tbx0;\\n    var codeblocks = subband.codeblocks;\\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\\n      var codeblock = codeblocks[i];\\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\\n      if (blockWidth === 0 || blockHeight === 0) {\\n        continue;\\n      }\\n      if (codeblock['data'] === undefined) {\\n        continue;\\n      }\\n      var bitModel, currentCodingpassType;\\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\\n      currentCodingpassType = 2;\\n      var data = codeblock.data,\\n          totalLength = 0,\\n          codingpasses = 0;\\n      var j, jj, dataItem;\\n      for (j = 0, jj = data.length; j < jj; j++) {\\n        dataItem = data[j];\\n        totalLength += dataItem.end - dataItem.start;\\n        codingpasses += dataItem.codingpasses;\\n      }\\n      var encodedData = new Uint8Array(totalLength);\\n      var position = 0;\\n      for (j = 0, jj = data.length; j < jj; j++) {\\n        dataItem = data[j];\\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\\n        encodedData.set(chunk, position);\\n        position += chunk.length;\\n      }\\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\\n      bitModel.setDecoder(decoder);\\n      for (j = 0; j < codingpasses; j++) {\\n        switch (currentCodingpassType) {\\n          case 0:\\n            bitModel.runSignificancePropagationPass();\\n            break;\\n          case 1:\\n            bitModel.runMagnitudeRefinementPass();\\n            break;\\n          case 2:\\n            bitModel.runCleanupPass();\\n            if (segmentationSymbolUsed) {\\n              bitModel.checkSegmentationSymbol();\\n            }\\n            break;\\n        }\\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\\n      }\\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\\n      var sign = bitModel.coefficentsSign;\\n      var magnitude = bitModel.coefficentsMagnitude;\\n      var bitsDecoded = bitModel.bitsDecoded;\\n      var magnitudeCorrection = reversible ? 0 : 0.5;\\n      var k, n, nb;\\n      position = 0;\\n      var interleave = subband.type !== 'LL';\\n      for (j = 0; j < blockHeight; j++) {\\n        var row = offset / width | 0;\\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\\n        for (k = 0; k < blockWidth; k++) {\\n          n = magnitude[position];\\n          if (n !== 0) {\\n            n = (n + magnitudeCorrection) * delta;\\n            if (sign[position] !== 0) {\\n              n = -n;\\n            }\\n            nb = bitsDecoded[position];\\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\\n            if (reversible && nb >= mb) {\\n              coefficients[pos] = n;\\n            } else {\\n              coefficients[pos] = n * (1 << mb - nb);\\n            }\\n          }\\n          offset++;\\n          position++;\\n        }\\n        offset += width - blockWidth;\\n      }\\n    }\\n  }\\n  function transformTile(context, tile, c) {\\n    var component = tile.components[c];\\n    var codingStyleParameters = component.codingStyleParameters;\\n    var quantizationParameters = component.quantizationParameters;\\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\\n    var spqcds = quantizationParameters.SPqcds;\\n    var scalarExpounded = quantizationParameters.scalarExpounded;\\n    var guardBits = quantizationParameters.guardBits;\\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\\n    var precision = context.components[c].precision;\\n    var reversible = codingStyleParameters.reversibleTransformation;\\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\\n    var subbandCoefficients = [];\\n    var b = 0;\\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\\n      var resolution = component.resolutions[i];\\n      var width = resolution.trx1 - resolution.trx0;\\n      var height = resolution.try1 - resolution.try0;\\n      var coefficients = new Float32Array(width * height);\\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\\n        var mu, epsilon;\\n        if (!scalarExpounded) {\\n          mu = spqcds[0].mu;\\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\\n        } else {\\n          mu = spqcds[b].mu;\\n          epsilon = spqcds[b].epsilon;\\n          b++;\\n        }\\n        var subband = resolution.subbands[j];\\n        var gainLog2 = SubbandsGainLog2[subband.type];\\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\\n        var mb = guardBits + epsilon - 1;\\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\\n      }\\n      subbandCoefficients.push({\\n        width: width,\\n        height: height,\\n        items: coefficients\\n      });\\n    }\\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\\n    return {\\n      left: component.tcx0,\\n      top: component.tcy0,\\n      width: result.width,\\n      height: result.height,\\n      items: result.items\\n    };\\n  }\\n  function transformComponents(context) {\\n    var siz = context.SIZ;\\n    var components = context.components;\\n    var componentsCount = siz.Csiz;\\n    var resultImages = [];\\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\\n      var tile = context.tiles[i];\\n      var transformedTiles = [];\\n      var c;\\n      for (c = 0; c < componentsCount; c++) {\\n        transformedTiles[c] = transformTile(context, tile, c);\\n      }\\n      var tile0 = transformedTiles[0];\\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\\n      var result = {\\n        left: tile0.left,\\n        top: tile0.top,\\n        width: tile0.width,\\n        height: tile0.height,\\n        items: out\\n      };\\n      var shift, offset;\\n      var pos = 0,\\n          j,\\n          jj,\\n          y0,\\n          y1,\\n          y2;\\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\\n        var fourComponents = componentsCount === 4;\\n        var y0items = transformedTiles[0].items;\\n        var y1items = transformedTiles[1].items;\\n        var y2items = transformedTiles[2].items;\\n        var y3items = fourComponents ? transformedTiles[3].items : null;\\n        shift = components[0].precision - 8;\\n        offset = (128 << shift) + 0.5;\\n        var component0 = tile.components[0];\\n        var alpha01 = componentsCount - 3;\\n        jj = y0items.length;\\n        if (!component0.codingStyleParameters.reversibleTransformation) {\\n          for (j = 0; j < jj; j++, pos += alpha01) {\\n            y0 = y0items[j] + offset;\\n            y1 = y1items[j];\\n            y2 = y2items[j];\\n            out[pos++] = y0 + 1.402 * y2 >> shift;\\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\\n            out[pos++] = y0 + 1.772 * y1 >> shift;\\n          }\\n        } else {\\n          for (j = 0; j < jj; j++, pos += alpha01) {\\n            y0 = y0items[j] + offset;\\n            y1 = y1items[j];\\n            y2 = y2items[j];\\n            var g = y0 - (y2 + y1 >> 2);\\n            out[pos++] = g + y2 >> shift;\\n            out[pos++] = g >> shift;\\n            out[pos++] = g + y1 >> shift;\\n          }\\n        }\\n        if (fourComponents) {\\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\\n            out[pos] = y3items[j] + offset >> shift;\\n          }\\n        }\\n      } else {\\n        for (c = 0; c < componentsCount; c++) {\\n          var items = transformedTiles[c].items;\\n          shift = components[c].precision - 8;\\n          offset = (128 << shift) + 0.5;\\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\\n            out[pos] = items[j] + offset >> shift;\\n            pos += componentsCount;\\n          }\\n        }\\n      }\\n      resultImages.push(result);\\n    }\\n    return resultImages;\\n  }\\n  function initializeTile(context, tileIndex) {\\n    var siz = context.SIZ;\\n    var componentsCount = siz.Csiz;\\n    var tile = context.tiles[tileIndex];\\n    for (var c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\\n      component.quantizationParameters = qcdOrQcc;\\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\\n      component.codingStyleParameters = codOrCoc;\\n    }\\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\\n  }\\n  var TagTree = function TagTreeClosure() {\\n    function TagTree(width, height) {\\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\n      this.levels = [];\\n      for (var i = 0; i < levelsLength; i++) {\\n        var level = {\\n          width: width,\\n          height: height,\\n          items: []\\n        };\\n        this.levels.push(level);\\n        width = Math.ceil(width / 2);\\n        height = Math.ceil(height / 2);\\n      }\\n    }\\n    TagTree.prototype = {\\n      reset: function TagTree_reset(i, j) {\\n        var currentLevel = 0,\\n            value = 0,\\n            level;\\n        while (currentLevel < this.levels.length) {\\n          level = this.levels[currentLevel];\\n          var index = i + j * level.width;\\n          if (level.items[index] !== undefined) {\\n            value = level.items[index];\\n            break;\\n          }\\n          level.index = index;\\n          i >>= 1;\\n          j >>= 1;\\n          currentLevel++;\\n        }\\n        currentLevel--;\\n        level = this.levels[currentLevel];\\n        level.items[level.index] = value;\\n        this.currentLevel = currentLevel;\\n        delete this.value;\\n      },\\n      incrementValue: function TagTree_incrementValue() {\\n        var level = this.levels[this.currentLevel];\\n        level.items[level.index]++;\\n      },\\n      nextLevel: function TagTree_nextLevel() {\\n        var currentLevel = this.currentLevel;\\n        var level = this.levels[currentLevel];\\n        var value = level.items[level.index];\\n        currentLevel--;\\n        if (currentLevel < 0) {\\n          this.value = value;\\n          return false;\\n        }\\n        this.currentLevel = currentLevel;\\n        level = this.levels[currentLevel];\\n        level.items[level.index] = value;\\n        return true;\\n      }\\n    };\\n    return TagTree;\\n  }();\\n  var InclusionTree = function InclusionTreeClosure() {\\n    function InclusionTree(width, height, defaultValue) {\\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\n      this.levels = [];\\n      for (var i = 0; i < levelsLength; i++) {\\n        var items = new Uint8Array(width * height);\\n        for (var j = 0, jj = items.length; j < jj; j++) {\\n          items[j] = defaultValue;\\n        }\\n        var level = {\\n          width: width,\\n          height: height,\\n          items: items\\n        };\\n        this.levels.push(level);\\n        width = Math.ceil(width / 2);\\n        height = Math.ceil(height / 2);\\n      }\\n    }\\n    InclusionTree.prototype = {\\n      reset: function InclusionTree_reset(i, j, stopValue) {\\n        var currentLevel = 0;\\n        while (currentLevel < this.levels.length) {\\n          var level = this.levels[currentLevel];\\n          var index = i + j * level.width;\\n          level.index = index;\\n          var value = level.items[index];\\n          if (value === 0xFF) {\\n            break;\\n          }\\n          if (value > stopValue) {\\n            this.currentLevel = currentLevel;\\n            this.propagateValues();\\n            return false;\\n          }\\n          i >>= 1;\\n          j >>= 1;\\n          currentLevel++;\\n        }\\n        this.currentLevel = currentLevel - 1;\\n        return true;\\n      },\\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\\n        var level = this.levels[this.currentLevel];\\n        level.items[level.index] = stopValue + 1;\\n        this.propagateValues();\\n      },\\n      propagateValues: function InclusionTree_propagateValues() {\\n        var levelIndex = this.currentLevel;\\n        var level = this.levels[levelIndex];\\n        var currentValue = level.items[level.index];\\n        while (--levelIndex >= 0) {\\n          level = this.levels[levelIndex];\\n          level.items[level.index] = currentValue;\\n        }\\n      },\\n      nextLevel: function InclusionTree_nextLevel() {\\n        var currentLevel = this.currentLevel;\\n        var level = this.levels[currentLevel];\\n        var value = level.items[level.index];\\n        level.items[level.index] = 0xFF;\\n        currentLevel--;\\n        if (currentLevel < 0) {\\n          return false;\\n        }\\n        this.currentLevel = currentLevel;\\n        level = this.levels[currentLevel];\\n        level.items[level.index] = value;\\n        return true;\\n      }\\n    };\\n    return InclusionTree;\\n  }();\\n  var BitModel = function BitModelClosure() {\\n    var UNIFORM_CONTEXT = 17;\\n    var RUNLENGTH_CONTEXT = 18;\\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\\n      this.width = width;\\n      this.height = height;\\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\\n      var coefficientCount = width * height;\\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\\n      this.coefficentsSign = new Uint8Array(coefficientCount);\\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\\n      this.processingFlags = new Uint8Array(coefficientCount);\\n      var bitsDecoded = new Uint8Array(coefficientCount);\\n      if (zeroBitPlanes !== 0) {\\n        for (var i = 0; i < coefficientCount; i++) {\\n          bitsDecoded[i] = zeroBitPlanes;\\n        }\\n      }\\n      this.bitsDecoded = bitsDecoded;\\n      this.reset();\\n    }\\n    BitModel.prototype = {\\n      setDecoder: function BitModel_setDecoder(decoder) {\\n        this.decoder = decoder;\\n      },\\n      reset: function BitModel_reset() {\\n        this.contexts = new Int8Array(19);\\n        this.contexts[0] = 4 << 1 | 0;\\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\\n      },\\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var width = this.width,\\n            height = this.height;\\n        var left = column > 0;\\n        var right = column + 1 < width;\\n        var i;\\n        if (row > 0) {\\n          i = index - width;\\n          if (left) {\\n            neighborsSignificance[i - 1] += 0x10;\\n          }\\n          if (right) {\\n            neighborsSignificance[i + 1] += 0x10;\\n          }\\n          neighborsSignificance[i] += 0x04;\\n        }\\n        if (row + 1 < height) {\\n          i = index + width;\\n          if (left) {\\n            neighborsSignificance[i - 1] += 0x10;\\n          }\\n          if (right) {\\n            neighborsSignificance[i + 1] += 0x10;\\n          }\\n          neighborsSignificance[i] += 0x04;\\n        }\\n        if (left) {\\n          neighborsSignificance[index - 1] += 0x01;\\n        }\\n        if (right) {\\n          neighborsSignificance[index + 1] += 0x01;\\n        }\\n        neighborsSignificance[index] |= 0x80;\\n      },\\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\\n        var decoder = this.decoder;\\n        var width = this.width,\\n            height = this.height;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var coefficentsSign = this.coefficentsSign;\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var processingFlags = this.processingFlags;\\n        var contexts = this.contexts;\\n        var labels = this.contextLabelTable;\\n        var bitsDecoded = this.bitsDecoded;\\n        var processedInverseMask = ~1;\\n        var processedMask = 1;\\n        var firstMagnitudeBitMask = 2;\\n        for (var i0 = 0; i0 < height; i0 += 4) {\\n          for (var j = 0; j < width; j++) {\\n            var index = i0 * width + j;\\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\\n              var i = i0 + i1;\\n              if (i >= height) {\\n                break;\\n              }\\n              processingFlags[index] &= processedInverseMask;\\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\\n                continue;\\n              }\\n              var contextLabel = labels[neighborsSignificance[index]];\\n              var decision = decoder.readBit(contexts, contextLabel);\\n              if (decision) {\\n                var sign = this.decodeSignBit(i, j, index);\\n                coefficentsSign[index] = sign;\\n                coefficentsMagnitude[index] = 1;\\n                this.setNeighborsSignificance(i, j, index);\\n                processingFlags[index] |= firstMagnitudeBitMask;\\n              }\\n              bitsDecoded[index]++;\\n              processingFlags[index] |= processedMask;\\n            }\\n          }\\n        }\\n      },\\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\\n        var width = this.width,\\n            height = this.height;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var coefficentsSign = this.coefficentsSign;\\n        var contribution, sign0, sign1, significance1;\\n        var contextLabel, decoded;\\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\\n          sign1 = coefficentsSign[index + 1];\\n          if (significance1) {\\n            sign0 = coefficentsSign[index - 1];\\n            contribution = 1 - sign1 - sign0;\\n          } else {\\n            contribution = 1 - sign1 - sign1;\\n          }\\n        } else if (significance1) {\\n          sign0 = coefficentsSign[index - 1];\\n          contribution = 1 - sign0 - sign0;\\n        } else {\\n          contribution = 0;\\n        }\\n        var horizontalContribution = 3 * contribution;\\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\\n          sign1 = coefficentsSign[index + width];\\n          if (significance1) {\\n            sign0 = coefficentsSign[index - width];\\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\\n          } else {\\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\\n          }\\n        } else if (significance1) {\\n          sign0 = coefficentsSign[index - width];\\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\\n        } else {\\n          contribution = horizontalContribution;\\n        }\\n        if (contribution >= 0) {\\n          contextLabel = 9 + contribution;\\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\\n        } else {\\n          contextLabel = 9 - contribution;\\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\\n        }\\n        return decoded;\\n      },\\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\\n        var decoder = this.decoder;\\n        var width = this.width,\\n            height = this.height;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var contexts = this.contexts;\\n        var bitsDecoded = this.bitsDecoded;\\n        var processingFlags = this.processingFlags;\\n        var processedMask = 1;\\n        var firstMagnitudeBitMask = 2;\\n        var length = width * height;\\n        var width4 = width * 4;\\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\\n          indexNext = Math.min(length, index0 + width4);\\n          for (var j = 0; j < width; j++) {\\n            for (var index = index0 + j; index < indexNext; index += width) {\\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\n                continue;\\n              }\\n              var contextLabel = 16;\\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\\n                processingFlags[index] ^= firstMagnitudeBitMask;\\n                var significance = neighborsSignificance[index] & 127;\\n                contextLabel = significance === 0 ? 15 : 14;\\n              }\\n              var bit = decoder.readBit(contexts, contextLabel);\\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\\n              bitsDecoded[index]++;\\n              processingFlags[index] |= processedMask;\\n            }\\n          }\\n        }\\n      },\\n      runCleanupPass: function BitModel_runCleanupPass() {\\n        var decoder = this.decoder;\\n        var width = this.width,\\n            height = this.height;\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var coefficentsSign = this.coefficentsSign;\\n        var contexts = this.contexts;\\n        var labels = this.contextLabelTable;\\n        var bitsDecoded = this.bitsDecoded;\\n        var processingFlags = this.processingFlags;\\n        var processedMask = 1;\\n        var firstMagnitudeBitMask = 2;\\n        var oneRowDown = width;\\n        var twoRowsDown = width * 2;\\n        var threeRowsDown = width * 3;\\n        var iNext;\\n        for (var i0 = 0; i0 < height; i0 = iNext) {\\n          iNext = Math.min(i0 + 4, height);\\n          var indexBase = i0 * width;\\n          var checkAllEmpty = i0 + 3 < height;\\n          for (var j = 0; j < width; j++) {\\n            var index0 = indexBase + j;\\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\\n            var i1 = 0,\\n                index = index0;\\n            var i = i0,\\n                sign;\\n            if (allEmpty) {\\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\\n              if (!hasSignificantCoefficent) {\\n                bitsDecoded[index0]++;\\n                bitsDecoded[index0 + oneRowDown]++;\\n                bitsDecoded[index0 + twoRowsDown]++;\\n                bitsDecoded[index0 + threeRowsDown]++;\\n                continue;\\n              }\\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\n              if (i1 !== 0) {\\n                i = i0 + i1;\\n                index += i1 * width;\\n              }\\n              sign = this.decodeSignBit(i, j, index);\\n              coefficentsSign[index] = sign;\\n              coefficentsMagnitude[index] = 1;\\n              this.setNeighborsSignificance(i, j, index);\\n              processingFlags[index] |= firstMagnitudeBitMask;\\n              index = index0;\\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\\n                bitsDecoded[index]++;\\n              }\\n              i1++;\\n            }\\n            for (i = i0 + i1; i < iNext; i++, index += width) {\\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\n                continue;\\n              }\\n              var contextLabel = labels[neighborsSignificance[index]];\\n              var decision = decoder.readBit(contexts, contextLabel);\\n              if (decision === 1) {\\n                sign = this.decodeSignBit(i, j, index);\\n                coefficentsSign[index] = sign;\\n                coefficentsMagnitude[index] = 1;\\n                this.setNeighborsSignificance(i, j, index);\\n                processingFlags[index] |= firstMagnitudeBitMask;\\n              }\\n              bitsDecoded[index]++;\\n            }\\n          }\\n        }\\n      },\\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\\n        var decoder = this.decoder;\\n        var contexts = this.contexts;\\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\n        if (symbol !== 0xA) {\\n          throw new JpxError('Invalid segmentation symbol');\\n        }\\n      }\\n    };\\n    return BitModel;\\n  }();\\n  var Transform = function TransformClosure() {\\n    function Transform() {}\\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\\n      var ll = subbands[0];\\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\\n        ll = this.iterate(ll, subbands[i], u0, v0);\\n      }\\n      return ll;\\n    };\\n    Transform.prototype.extend = function extend(buffer, offset, size) {\\n      var i1 = offset - 1,\\n          j1 = offset + 1;\\n      var i2 = offset + size - 2,\\n          j2 = offset + size;\\n      buffer[i1--] = buffer[j1++];\\n      buffer[j2++] = buffer[i2--];\\n      buffer[i1--] = buffer[j1++];\\n      buffer[j2++] = buffer[i2--];\\n      buffer[i1--] = buffer[j1++];\\n      buffer[j2++] = buffer[i2--];\\n      buffer[i1] = buffer[j1];\\n      buffer[j2] = buffer[i2];\\n    };\\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\\n      var llWidth = ll.width,\\n          llHeight = ll.height,\\n          llItems = ll.items;\\n      var width = hl_lh_hh.width;\\n      var height = hl_lh_hh.height;\\n      var items = hl_lh_hh.items;\\n      var i, j, k, l, u, v;\\n      for (k = 0, i = 0; i < llHeight; i++) {\\n        l = i * 2 * width;\\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\\n          items[l] = llItems[k];\\n        }\\n      }\\n      llItems = ll.items = null;\\n      var bufferPadding = 4;\\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\\n      if (width === 1) {\\n        if ((u0 & 1) !== 0) {\\n          for (v = 0, k = 0; v < height; v++, k += width) {\\n            items[k] *= 0.5;\\n          }\\n        }\\n      } else {\\n        for (v = 0, k = 0; v < height; v++, k += width) {\\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\\n          this.extend(rowBuffer, bufferPadding, width);\\n          this.filter(rowBuffer, bufferPadding, width);\\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\\n        }\\n      }\\n      var numBuffers = 16;\\n      var colBuffers = [];\\n      for (i = 0; i < numBuffers; i++) {\\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\\n      }\\n      var b,\\n          currentBuffer = 0;\\n      ll = bufferPadding + height;\\n      if (height === 1) {\\n        if ((v0 & 1) !== 0) {\\n          for (u = 0; u < width; u++) {\\n            items[u] *= 0.5;\\n          }\\n        }\\n      } else {\\n        for (u = 0; u < width; u++) {\\n          if (currentBuffer === 0) {\\n            numBuffers = Math.min(width - u, numBuffers);\\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\\n              for (b = 0; b < numBuffers; b++) {\\n                colBuffers[b][l] = items[k + b];\\n              }\\n            }\\n            currentBuffer = numBuffers;\\n          }\\n          currentBuffer--;\\n          var buffer = colBuffers[currentBuffer];\\n          this.extend(buffer, bufferPadding, height);\\n          this.filter(buffer, bufferPadding, height);\\n          if (currentBuffer === 0) {\\n            k = u - numBuffers + 1;\\n            for (l = bufferPadding; l < ll; k += width, l++) {\\n              for (b = 0; b < numBuffers; b++) {\\n                items[k + b] = colBuffers[b][l];\\n              }\\n            }\\n          }\\n        }\\n      }\\n      return {\\n        width: width,\\n        height: height,\\n        items: items\\n      };\\n    };\\n    return Transform;\\n  }();\\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\\n    function IrreversibleTransform() {\\n      Transform.call(this);\\n    }\\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\\n      var len = length >> 1;\\n      offset = offset | 0;\\n      var j, n, current, next;\\n      var alpha = -1.586134342059924;\\n      var beta = -0.052980118572961;\\n      var gamma = 0.882911075530934;\\n      var delta = 0.443506852043971;\\n      var K = 1.230174104914001;\\n      var K_ = 1 / K;\\n      j = offset - 3;\\n      for (n = len + 4; n--; j += 2) {\\n        x[j] *= K_;\\n      }\\n      j = offset - 2;\\n      current = delta * x[j - 1];\\n      for (n = len + 3; n--; j += 2) {\\n        next = delta * x[j + 1];\\n        x[j] = K * x[j] - current - next;\\n        if (n--) {\\n          j += 2;\\n          current = delta * x[j + 1];\\n          x[j] = K * x[j] - current - next;\\n        } else {\\n          break;\\n        }\\n      }\\n      j = offset - 1;\\n      current = gamma * x[j - 1];\\n      for (n = len + 2; n--; j += 2) {\\n        next = gamma * x[j + 1];\\n        x[j] -= current + next;\\n        if (n--) {\\n          j += 2;\\n          current = gamma * x[j + 1];\\n          x[j] -= current + next;\\n        } else {\\n          break;\\n        }\\n      }\\n      j = offset;\\n      current = beta * x[j - 1];\\n      for (n = len + 1; n--; j += 2) {\\n        next = beta * x[j + 1];\\n        x[j] -= current + next;\\n        if (n--) {\\n          j += 2;\\n          current = beta * x[j + 1];\\n          x[j] -= current + next;\\n        } else {\\n          break;\\n        }\\n      }\\n      if (len !== 0) {\\n        j = offset + 1;\\n        current = alpha * x[j - 1];\\n        for (n = len; n--; j += 2) {\\n          next = alpha * x[j + 1];\\n          x[j] -= current + next;\\n          if (n--) {\\n            j += 2;\\n            current = alpha * x[j + 1];\\n            x[j] -= current + next;\\n          } else {\\n            break;\\n          }\\n        }\\n      }\\n    };\\n    return IrreversibleTransform;\\n  }();\\n  var ReversibleTransform = function ReversibleTransformClosure() {\\n    function ReversibleTransform() {\\n      Transform.call(this);\\n    }\\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\\n      var len = length >> 1;\\n      offset = offset | 0;\\n      var j, n;\\n      for (j = offset, n = len + 1; n--; j += 2) {\\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\\n      }\\n      for (j = offset + 1, n = len; n--; j += 2) {\\n        x[j] += x[j - 1] + x[j + 1] >> 1;\\n      }\\n    };\\n    return ReversibleTransform;\\n  }();\\n  return JpxImage;\\n}();\\nexports.JpxImage = JpxImage;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpxStream = undefined;\\n\\nvar _stream = require('./stream');\\n\\nvar _jpx = require('./jpx');\\n\\nvar _util = require('../shared/util');\\n\\nvar JpxStream = function JpxStreamClosure() {\\n  function JpxStream(stream, maybeLength, dict, params) {\\n    this.stream = stream;\\n    this.maybeLength = maybeLength;\\n    this.dict = dict;\\n    this.params = params;\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\\n    get: function JpxStream_bytes() {\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n    },\\n    configurable: true\\n  });\\n  JpxStream.prototype.ensureBuffer = function (requested) {};\\n  JpxStream.prototype.readBlock = function () {\\n    if (this.eof) {\\n      return;\\n    }\\n    var jpxImage = new _jpx.JpxImage();\\n    jpxImage.parse(this.bytes);\\n    var width = jpxImage.width;\\n    var height = jpxImage.height;\\n    var componentsCount = jpxImage.componentsCount;\\n    var tileCount = jpxImage.tiles.length;\\n    if (tileCount === 1) {\\n      this.buffer = jpxImage.tiles[0].items;\\n    } else {\\n      var data = new Uint8ClampedArray(width * height * componentsCount);\\n      for (var k = 0; k < tileCount; k++) {\\n        var tileComponents = jpxImage.tiles[k];\\n        var tileWidth = tileComponents.width;\\n        var tileHeight = tileComponents.height;\\n        var tileLeft = tileComponents.left;\\n        var tileTop = tileComponents.top;\\n        var src = tileComponents.items;\\n        var srcPosition = 0;\\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\\n        var imgRowSize = width * componentsCount;\\n        var tileRowSize = tileWidth * componentsCount;\\n        for (var j = 0; j < tileHeight; j++) {\\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\\n          data.set(rowBytes, dataPosition);\\n          srcPosition += tileRowSize;\\n          dataPosition += imgRowSize;\\n        }\\n      }\\n      this.buffer = data;\\n    }\\n    this.bufferLength = this.buffer.length;\\n    this.eof = true;\\n  };\\n  return JpxStream;\\n}();\\nexports.JpxStream = JpxStream;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getMetrics = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Courier'] = 600;\\n  t['Courier-Bold'] = 600;\\n  t['Courier-BoldOblique'] = 600;\\n  t['Courier-Oblique'] = 600;\\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 278;\\n    t['quotedbl'] = 355;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 667;\\n    t['quoteright'] = 222;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 556;\\n    t['at'] = 1015;\\n    t['A'] = 667;\\n    t['B'] = 667;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 500;\\n    t['K'] = 667;\\n    t['L'] = 556;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 278;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 278;\\n    t['asciicircum'] = 469;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 222;\\n    t['a'] = 556;\\n    t['b'] = 556;\\n    t['c'] = 500;\\n    t['d'] = 556;\\n    t['e'] = 556;\\n    t['f'] = 278;\\n    t['g'] = 556;\\n    t['h'] = 556;\\n    t['i'] = 222;\\n    t['j'] = 222;\\n    t['k'] = 500;\\n    t['l'] = 222;\\n    t['m'] = 833;\\n    t['n'] = 556;\\n    t['o'] = 556;\\n    t['p'] = 556;\\n    t['q'] = 556;\\n    t['r'] = 333;\\n    t['s'] = 500;\\n    t['t'] = 278;\\n    t['u'] = 556;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 500;\\n    t['braceleft'] = 334;\\n    t['bar'] = 260;\\n    t['braceright'] = 334;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 191;\\n    t['quotedblleft'] = 333;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 500;\\n    t['fl'] = 500;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 537;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 222;\\n    t['quotedblbase'] = 333;\\n    t['quotedblright'] = 333;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 556;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 222;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 667;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 500;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 500;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 222;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 500;\\n    t['scedilla'] = 500;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 667;\\n    t['rcaron'] = 333;\\n    t['ccedilla'] = 500;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 643;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 667;\\n    t['Abreve'] = 667;\\n    t['multiply'] = 584;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 500;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 260;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 333;\\n    t['omacron'] = 556;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 222;\\n    t['tcaron'] = 317;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 667;\\n    t['Adieresis'] = 667;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 222;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 556;\\n    t['amacron'] = 556;\\n    t['sacute'] = 500;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 556;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 556;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 556;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 556;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 299;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 556;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 556;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 556;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 556;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 556;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 556;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 333;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 556;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 556;\\n    t['Atilde'] = 667;\\n    t['Aogonek'] = 667;\\n    t['Aring'] = 667;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 556;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 556;\\n    t['eth'] = 556;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 474;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 722;\\n    t['quoteright'] = 278;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 611;\\n    t['at'] = 975;\\n    t['A'] = 722;\\n    t['B'] = 722;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 556;\\n    t['K'] = 722;\\n    t['L'] = 611;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 584;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 278;\\n    t['a'] = 556;\\n    t['b'] = 611;\\n    t['c'] = 556;\\n    t['d'] = 611;\\n    t['e'] = 556;\\n    t['f'] = 333;\\n    t['g'] = 611;\\n    t['h'] = 611;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 556;\\n    t['l'] = 278;\\n    t['m'] = 889;\\n    t['n'] = 611;\\n    t['o'] = 611;\\n    t['p'] = 611;\\n    t['q'] = 611;\\n    t['r'] = 389;\\n    t['s'] = 556;\\n    t['t'] = 333;\\n    t['u'] = 611;\\n    t['v'] = 556;\\n    t['w'] = 778;\\n    t['x'] = 556;\\n    t['y'] = 556;\\n    t['z'] = 500;\\n    t['braceleft'] = 389;\\n    t['bar'] = 280;\\n    t['braceright'] = 389;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 238;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 611;\\n    t['fl'] = 611;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 556;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 278;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 611;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 556;\\n    t['scommaaccent'] = 556;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 611;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 556;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 556;\\n    t['scedilla'] = 556;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 611;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 556;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 743;\\n    t['Umacron'] = 722;\\n    t['uring'] = 611;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 584;\\n    t['uacute'] = 611;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 556;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 556;\\n    t['nacute'] = 611;\\n    t['umacron'] = 611;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 280;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 389;\\n    t['omacron'] = 611;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 389;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 611;\\n    t['amacron'] = 556;\\n    t['sacute'] = 556;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 611;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 611;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 611;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 611;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 400;\\n    t['Kcommaaccent'] = 722;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 611;\\n    t['ntilde'] = 611;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 611;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 611;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 611;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 611;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 556;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 611;\\n    t['tcommaaccent'] = 333;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 611;\\n    t['udieresis'] = 611;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 611;\\n    t['eth'] = 611;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 611;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 474;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 722;\\n    t['quoteright'] = 278;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 611;\\n    t['at'] = 975;\\n    t['A'] = 722;\\n    t['B'] = 722;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 556;\\n    t['K'] = 722;\\n    t['L'] = 611;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 584;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 278;\\n    t['a'] = 556;\\n    t['b'] = 611;\\n    t['c'] = 556;\\n    t['d'] = 611;\\n    t['e'] = 556;\\n    t['f'] = 333;\\n    t['g'] = 611;\\n    t['h'] = 611;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 556;\\n    t['l'] = 278;\\n    t['m'] = 889;\\n    t['n'] = 611;\\n    t['o'] = 611;\\n    t['p'] = 611;\\n    t['q'] = 611;\\n    t['r'] = 389;\\n    t['s'] = 556;\\n    t['t'] = 333;\\n    t['u'] = 611;\\n    t['v'] = 556;\\n    t['w'] = 778;\\n    t['x'] = 556;\\n    t['y'] = 556;\\n    t['z'] = 500;\\n    t['braceleft'] = 389;\\n    t['bar'] = 280;\\n    t['braceright'] = 389;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 238;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 611;\\n    t['fl'] = 611;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 556;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 278;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 611;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 556;\\n    t['scommaaccent'] = 556;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 611;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 556;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 556;\\n    t['scedilla'] = 556;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 611;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 556;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 743;\\n    t['Umacron'] = 722;\\n    t['uring'] = 611;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 584;\\n    t['uacute'] = 611;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 556;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 556;\\n    t['nacute'] = 611;\\n    t['umacron'] = 611;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 280;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 389;\\n    t['omacron'] = 611;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 389;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 611;\\n    t['amacron'] = 556;\\n    t['sacute'] = 556;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 611;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 611;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 611;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 611;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 400;\\n    t['Kcommaaccent'] = 722;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 611;\\n    t['ntilde'] = 611;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 611;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 611;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 611;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 611;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 556;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 611;\\n    t['tcommaaccent'] = 333;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 611;\\n    t['udieresis'] = 611;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 611;\\n    t['eth'] = 611;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 611;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 278;\\n    t['quotedbl'] = 355;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 667;\\n    t['quoteright'] = 222;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 556;\\n    t['at'] = 1015;\\n    t['A'] = 667;\\n    t['B'] = 667;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 500;\\n    t['K'] = 667;\\n    t['L'] = 556;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 278;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 278;\\n    t['asciicircum'] = 469;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 222;\\n    t['a'] = 556;\\n    t['b'] = 556;\\n    t['c'] = 500;\\n    t['d'] = 556;\\n    t['e'] = 556;\\n    t['f'] = 278;\\n    t['g'] = 556;\\n    t['h'] = 556;\\n    t['i'] = 222;\\n    t['j'] = 222;\\n    t['k'] = 500;\\n    t['l'] = 222;\\n    t['m'] = 833;\\n    t['n'] = 556;\\n    t['o'] = 556;\\n    t['p'] = 556;\\n    t['q'] = 556;\\n    t['r'] = 333;\\n    t['s'] = 500;\\n    t['t'] = 278;\\n    t['u'] = 556;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 500;\\n    t['braceleft'] = 334;\\n    t['bar'] = 260;\\n    t['braceright'] = 334;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 191;\\n    t['quotedblleft'] = 333;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 500;\\n    t['fl'] = 500;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 537;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 222;\\n    t['quotedblbase'] = 333;\\n    t['quotedblright'] = 333;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 556;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 222;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 667;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 500;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 500;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 222;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 500;\\n    t['scedilla'] = 500;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 667;\\n    t['rcaron'] = 333;\\n    t['ccedilla'] = 500;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 643;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 667;\\n    t['Abreve'] = 667;\\n    t['multiply'] = 584;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 500;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 260;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 333;\\n    t['omacron'] = 556;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 222;\\n    t['tcaron'] = 317;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 667;\\n    t['Adieresis'] = 667;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 222;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 556;\\n    t['amacron'] = 556;\\n    t['sacute'] = 500;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 556;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 556;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 556;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 556;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 299;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 556;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 556;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 556;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 556;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 556;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 556;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 333;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 556;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 556;\\n    t['Atilde'] = 667;\\n    t['Aogonek'] = 667;\\n    t['Aring'] = 667;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 556;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 556;\\n    t['eth'] = 556;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['universal'] = 713;\\n    t['numbersign'] = 500;\\n    t['existential'] = 549;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['suchthat'] = 439;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asteriskmath'] = 500;\\n    t['plus'] = 549;\\n    t['comma'] = 250;\\n    t['minus'] = 549;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 549;\\n    t['equal'] = 549;\\n    t['greater'] = 549;\\n    t['question'] = 444;\\n    t['congruent'] = 549;\\n    t['Alpha'] = 722;\\n    t['Beta'] = 667;\\n    t['Chi'] = 722;\\n    t['Delta'] = 612;\\n    t['Epsilon'] = 611;\\n    t['Phi'] = 763;\\n    t['Gamma'] = 603;\\n    t['Eta'] = 722;\\n    t['Iota'] = 333;\\n    t['theta1'] = 631;\\n    t['Kappa'] = 722;\\n    t['Lambda'] = 686;\\n    t['Mu'] = 889;\\n    t['Nu'] = 722;\\n    t['Omicron'] = 722;\\n    t['Pi'] = 768;\\n    t['Theta'] = 741;\\n    t['Rho'] = 556;\\n    t['Sigma'] = 592;\\n    t['Tau'] = 611;\\n    t['Upsilon'] = 690;\\n    t['sigma1'] = 439;\\n    t['Omega'] = 768;\\n    t['Xi'] = 645;\\n    t['Psi'] = 795;\\n    t['Zeta'] = 611;\\n    t['bracketleft'] = 333;\\n    t['therefore'] = 863;\\n    t['bracketright'] = 333;\\n    t['perpendicular'] = 658;\\n    t['underscore'] = 500;\\n    t['radicalex'] = 500;\\n    t['alpha'] = 631;\\n    t['beta'] = 549;\\n    t['chi'] = 549;\\n    t['delta'] = 494;\\n    t['epsilon'] = 439;\\n    t['phi'] = 521;\\n    t['gamma'] = 411;\\n    t['eta'] = 603;\\n    t['iota'] = 329;\\n    t['phi1'] = 603;\\n    t['kappa'] = 549;\\n    t['lambda'] = 549;\\n    t['mu'] = 576;\\n    t['nu'] = 521;\\n    t['omicron'] = 549;\\n    t['pi'] = 549;\\n    t['theta'] = 521;\\n    t['rho'] = 549;\\n    t['sigma'] = 603;\\n    t['tau'] = 439;\\n    t['upsilon'] = 576;\\n    t['omega1'] = 713;\\n    t['omega'] = 686;\\n    t['xi'] = 493;\\n    t['psi'] = 686;\\n    t['zeta'] = 494;\\n    t['braceleft'] = 480;\\n    t['bar'] = 200;\\n    t['braceright'] = 480;\\n    t['similar'] = 549;\\n    t['Euro'] = 750;\\n    t['Upsilon1'] = 620;\\n    t['minute'] = 247;\\n    t['lessequal'] = 549;\\n    t['fraction'] = 167;\\n    t['infinity'] = 713;\\n    t['florin'] = 500;\\n    t['club'] = 753;\\n    t['diamond'] = 753;\\n    t['heart'] = 753;\\n    t['spade'] = 753;\\n    t['arrowboth'] = 1042;\\n    t['arrowleft'] = 987;\\n    t['arrowup'] = 603;\\n    t['arrowright'] = 987;\\n    t['arrowdown'] = 603;\\n    t['degree'] = 400;\\n    t['plusminus'] = 549;\\n    t['second'] = 411;\\n    t['greaterequal'] = 549;\\n    t['multiply'] = 549;\\n    t['proportional'] = 713;\\n    t['partialdiff'] = 494;\\n    t['bullet'] = 460;\\n    t['divide'] = 549;\\n    t['notequal'] = 549;\\n    t['equivalence'] = 549;\\n    t['approxequal'] = 549;\\n    t['ellipsis'] = 1000;\\n    t['arrowvertex'] = 603;\\n    t['arrowhorizex'] = 1000;\\n    t['carriagereturn'] = 658;\\n    t['aleph'] = 823;\\n    t['Ifraktur'] = 686;\\n    t['Rfraktur'] = 795;\\n    t['weierstrass'] = 987;\\n    t['circlemultiply'] = 768;\\n    t['circleplus'] = 768;\\n    t['emptyset'] = 823;\\n    t['intersection'] = 768;\\n    t['union'] = 768;\\n    t['propersuperset'] = 713;\\n    t['reflexsuperset'] = 713;\\n    t['notsubset'] = 713;\\n    t['propersubset'] = 713;\\n    t['reflexsubset'] = 713;\\n    t['element'] = 713;\\n    t['notelement'] = 713;\\n    t['angle'] = 768;\\n    t['gradient'] = 713;\\n    t['registerserif'] = 790;\\n    t['copyrightserif'] = 790;\\n    t['trademarkserif'] = 890;\\n    t['product'] = 823;\\n    t['radical'] = 549;\\n    t['dotmath'] = 250;\\n    t['logicalnot'] = 713;\\n    t['logicaland'] = 603;\\n    t['logicalor'] = 603;\\n    t['arrowdblboth'] = 1042;\\n    t['arrowdblleft'] = 987;\\n    t['arrowdblup'] = 603;\\n    t['arrowdblright'] = 987;\\n    t['arrowdbldown'] = 603;\\n    t['lozenge'] = 494;\\n    t['angleleft'] = 329;\\n    t['registersans'] = 790;\\n    t['copyrightsans'] = 790;\\n    t['trademarksans'] = 786;\\n    t['summation'] = 713;\\n    t['parenlefttp'] = 384;\\n    t['parenleftex'] = 384;\\n    t['parenleftbt'] = 384;\\n    t['bracketlefttp'] = 384;\\n    t['bracketleftex'] = 384;\\n    t['bracketleftbt'] = 384;\\n    t['bracelefttp'] = 494;\\n    t['braceleftmid'] = 494;\\n    t['braceleftbt'] = 494;\\n    t['braceex'] = 494;\\n    t['angleright'] = 329;\\n    t['integral'] = 274;\\n    t['integraltp'] = 686;\\n    t['integralex'] = 686;\\n    t['integralbt'] = 686;\\n    t['parenrighttp'] = 384;\\n    t['parenrightex'] = 384;\\n    t['parenrightbt'] = 384;\\n    t['bracketrighttp'] = 384;\\n    t['bracketrightex'] = 384;\\n    t['bracketrightbt'] = 384;\\n    t['bracerighttp'] = 494;\\n    t['bracerightmid'] = 494;\\n    t['bracerightbt'] = 494;\\n    t['apple'] = 790;\\n  });\\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 408;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 564;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 564;\\n    t['equal'] = 564;\\n    t['greater'] = 564;\\n    t['question'] = 444;\\n    t['at'] = 921;\\n    t['A'] = 722;\\n    t['B'] = 667;\\n    t['C'] = 667;\\n    t['D'] = 722;\\n    t['E'] = 611;\\n    t['F'] = 556;\\n    t['G'] = 722;\\n    t['H'] = 722;\\n    t['I'] = 333;\\n    t['J'] = 389;\\n    t['K'] = 722;\\n    t['L'] = 611;\\n    t['M'] = 889;\\n    t['N'] = 722;\\n    t['O'] = 722;\\n    t['P'] = 556;\\n    t['Q'] = 722;\\n    t['R'] = 667;\\n    t['S'] = 556;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 722;\\n    t['W'] = 944;\\n    t['X'] = 722;\\n    t['Y'] = 722;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 469;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 444;\\n    t['b'] = 500;\\n    t['c'] = 444;\\n    t['d'] = 500;\\n    t['e'] = 444;\\n    t['f'] = 333;\\n    t['g'] = 500;\\n    t['h'] = 500;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 500;\\n    t['l'] = 278;\\n    t['m'] = 778;\\n    t['n'] = 500;\\n    t['o'] = 500;\\n    t['p'] = 500;\\n    t['q'] = 500;\\n    t['r'] = 333;\\n    t['s'] = 389;\\n    t['t'] = 278;\\n    t['u'] = 500;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 444;\\n    t['braceleft'] = 480;\\n    t['bar'] = 200;\\n    t['braceright'] = 480;\\n    t['asciitilde'] = 541;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 180;\\n    t['quotedblleft'] = 444;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 556;\\n    t['fl'] = 556;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 453;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 444;\\n    t['quotedblright'] = 444;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 444;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 889;\\n    t['ordfeminine'] = 276;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 722;\\n    t['OE'] = 889;\\n    t['ordmasculine'] = 310;\\n    t['ae'] = 667;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 722;\\n    t['germandbls'] = 500;\\n    t['Idieresis'] = 333;\\n    t['eacute'] = 444;\\n    t['abreve'] = 444;\\n    t['uhungarumlaut'] = 500;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 722;\\n    t['divide'] = 564;\\n    t['Yacute'] = 722;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 444;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 444;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 500;\\n    t['Edieresis'] = 611;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 760;\\n    t['Emacron'] = 611;\\n    t['ccaron'] = 444;\\n    t['aring'] = 444;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 444;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 667;\\n    t['atilde'] = 444;\\n    t['Edotaccent'] = 611;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 667;\\n    t['Gcommaaccent'] = 722;\\n    t['ucircumflex'] = 500;\\n    t['acircumflex'] = 444;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 333;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 556;\\n    t['Omacron'] = 722;\\n    t['Racute'] = 667;\\n    t['Sacute'] = 556;\\n    t['dcaron'] = 588;\\n    t['Umacron'] = 722;\\n    t['uring'] = 500;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 722;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 564;\\n    t['uacute'] = 500;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 611;\\n    t['adieresis'] = 444;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 500;\\n    t['umacron'] = 500;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 333;\\n    t['plusminus'] = 564;\\n    t['brokenbar'] = 200;\\n    t['registered'] = 760;\\n    t['Gbreve'] = 722;\\n    t['Idotaccent'] = 333;\\n    t['summation'] = 600;\\n    t['Egrave'] = 611;\\n    t['racute'] = 333;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 667;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 326;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 444;\\n    t['zacute'] = 444;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 722;\\n    t['oacute'] = 500;\\n    t['amacron'] = 444;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 722;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 500;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 722;\\n    t['mu'] = 500;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 611;\\n    t['dcroat'] = 500;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 556;\\n    t['lcaron'] = 344;\\n    t['Kcommaaccent'] = 722;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 980;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 333;\\n    t['Imacron'] = 333;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 500;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 611;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 556;\\n    t['Scommaaccent'] = 556;\\n    t['Ohungarumlaut'] = 722;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 667;\\n    t['ugrave'] = 500;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 333;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 667;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 722;\\n    t['zdotaccent'] = 444;\\n    t['Ecaron'] = 611;\\n    t['Iogonek'] = 333;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 564;\\n    t['Icircumflex'] = 333;\\n    t['ncaron'] = 500;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 564;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 500;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 444;\\n    t['ncommaaccent'] = 500;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 555;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 1000;\\n    t['ampersand'] = 833;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 570;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 570;\\n    t['equal'] = 570;\\n    t['greater'] = 570;\\n    t['question'] = 500;\\n    t['at'] = 930;\\n    t['A'] = 722;\\n    t['B'] = 667;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 778;\\n    t['I'] = 389;\\n    t['J'] = 500;\\n    t['K'] = 778;\\n    t['L'] = 667;\\n    t['M'] = 944;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 611;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 556;\\n    t['T'] = 667;\\n    t['U'] = 722;\\n    t['V'] = 722;\\n    t['W'] = 1000;\\n    t['X'] = 722;\\n    t['Y'] = 722;\\n    t['Z'] = 667;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 581;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 500;\\n    t['b'] = 556;\\n    t['c'] = 444;\\n    t['d'] = 556;\\n    t['e'] = 444;\\n    t['f'] = 333;\\n    t['g'] = 500;\\n    t['h'] = 556;\\n    t['i'] = 278;\\n    t['j'] = 333;\\n    t['k'] = 556;\\n    t['l'] = 278;\\n    t['m'] = 833;\\n    t['n'] = 556;\\n    t['o'] = 500;\\n    t['p'] = 556;\\n    t['q'] = 556;\\n    t['r'] = 444;\\n    t['s'] = 389;\\n    t['t'] = 333;\\n    t['u'] = 556;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 444;\\n    t['braceleft'] = 394;\\n    t['bar'] = 220;\\n    t['braceright'] = 394;\\n    t['asciitilde'] = 520;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 278;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 556;\\n    t['fl'] = 556;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 540;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 500;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 300;\\n    t['Lslash'] = 667;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 330;\\n    t['ae'] = 722;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 722;\\n    t['germandbls'] = 556;\\n    t['Idieresis'] = 389;\\n    t['eacute'] = 444;\\n    t['abreve'] = 500;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 722;\\n    t['divide'] = 570;\\n    t['Yacute'] = 722;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 500;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 500;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 747;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 444;\\n    t['aring'] = 500;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 500;\\n    t['Tcommaaccent'] = 667;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 500;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 500;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 444;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 667;\\n    t['Thorn'] = 611;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 556;\\n    t['dcaron'] = 672;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 570;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 667;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 500;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 389;\\n    t['plusminus'] = 570;\\n    t['brokenbar'] = 220;\\n    t['registered'] = 747;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 389;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 444;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 667;\\n    t['Zcaron'] = 667;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 416;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 444;\\n    t['zacute'] = 444;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 500;\\n    t['amacron'] = 500;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 556;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 556;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 556;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 556;\\n    t['lcaron'] = 394;\\n    t['Kcommaaccent'] = 778;\\n    t['Lacute'] = 667;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 389;\\n    t['Imacron'] = 389;\\n    t['Lcaron'] = 667;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 556;\\n    t['Scommaaccent'] = 556;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 556;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 444;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 667;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 444;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 389;\\n    t['kcommaaccent'] = 556;\\n    t['minus'] = 570;\\n    t['Icircumflex'] = 389;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 333;\\n    t['logicalnot'] = 570;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 444;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 389;\\n    t['quotedbl'] = 555;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 570;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 570;\\n    t['equal'] = 570;\\n    t['greater'] = 570;\\n    t['question'] = 500;\\n    t['at'] = 832;\\n    t['A'] = 667;\\n    t['B'] = 667;\\n    t['C'] = 667;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 667;\\n    t['G'] = 722;\\n    t['H'] = 778;\\n    t['I'] = 389;\\n    t['J'] = 500;\\n    t['K'] = 667;\\n    t['L'] = 611;\\n    t['M'] = 889;\\n    t['N'] = 722;\\n    t['O'] = 722;\\n    t['P'] = 611;\\n    t['Q'] = 722;\\n    t['R'] = 667;\\n    t['S'] = 556;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 889;\\n    t['X'] = 667;\\n    t['Y'] = 611;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 570;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 500;\\n    t['b'] = 500;\\n    t['c'] = 444;\\n    t['d'] = 500;\\n    t['e'] = 444;\\n    t['f'] = 333;\\n    t['g'] = 500;\\n    t['h'] = 556;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 500;\\n    t['l'] = 278;\\n    t['m'] = 778;\\n    t['n'] = 556;\\n    t['o'] = 500;\\n    t['p'] = 500;\\n    t['q'] = 500;\\n    t['r'] = 389;\\n    t['s'] = 389;\\n    t['t'] = 278;\\n    t['u'] = 556;\\n    t['v'] = 444;\\n    t['w'] = 667;\\n    t['x'] = 500;\\n    t['y'] = 444;\\n    t['z'] = 389;\\n    t['braceleft'] = 348;\\n    t['bar'] = 220;\\n    t['braceright'] = 348;\\n    t['asciitilde'] = 570;\\n    t['exclamdown'] = 389;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 278;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 556;\\n    t['fl'] = 556;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 500;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 500;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 944;\\n    t['ordfeminine'] = 266;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 722;\\n    t['OE'] = 944;\\n    t['ordmasculine'] = 300;\\n    t['ae'] = 722;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 722;\\n    t['germandbls'] = 500;\\n    t['Idieresis'] = 389;\\n    t['eacute'] = 444;\\n    t['abreve'] = 500;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 611;\\n    t['divide'] = 570;\\n    t['Yacute'] = 611;\\n    t['Acircumflex'] = 667;\\n    t['aacute'] = 500;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 444;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 500;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 747;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 444;\\n    t['aring'] = 500;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 500;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 667;\\n    t['atilde'] = 500;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 667;\\n    t['Gcommaaccent'] = 722;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 500;\\n    t['Amacron'] = 667;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 611;\\n    t['Omacron'] = 722;\\n    t['Racute'] = 667;\\n    t['Sacute'] = 556;\\n    t['dcaron'] = 608;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 722;\\n    t['Agrave'] = 667;\\n    t['Abreve'] = 667;\\n    t['multiply'] = 570;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 444;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 500;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 389;\\n    t['plusminus'] = 570;\\n    t['brokenbar'] = 220;\\n    t['registered'] = 747;\\n    t['Gbreve'] = 722;\\n    t['Idotaccent'] = 389;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 389;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 667;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 366;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 667;\\n    t['Adieresis'] = 667;\\n    t['egrave'] = 444;\\n    t['zacute'] = 389;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 722;\\n    t['oacute'] = 500;\\n    t['amacron'] = 500;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 722;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 500;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 722;\\n    t['mu'] = 576;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 500;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 556;\\n    t['lcaron'] = 382;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 389;\\n    t['Imacron'] = 389;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 556;\\n    t['Scommaaccent'] = 556;\\n    t['Ohungarumlaut'] = 722;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 667;\\n    t['ugrave'] = 556;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 667;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 667;\\n    t['Aogonek'] = 667;\\n    t['Aring'] = 667;\\n    t['Otilde'] = 722;\\n    t['zdotaccent'] = 389;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 389;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 606;\\n    t['Icircumflex'] = 389;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 606;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 389;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 420;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 675;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 675;\\n    t['equal'] = 675;\\n    t['greater'] = 675;\\n    t['question'] = 500;\\n    t['at'] = 920;\\n    t['A'] = 611;\\n    t['B'] = 611;\\n    t['C'] = 667;\\n    t['D'] = 722;\\n    t['E'] = 611;\\n    t['F'] = 611;\\n    t['G'] = 722;\\n    t['H'] = 722;\\n    t['I'] = 333;\\n    t['J'] = 444;\\n    t['K'] = 667;\\n    t['L'] = 556;\\n    t['M'] = 833;\\n    t['N'] = 667;\\n    t['O'] = 722;\\n    t['P'] = 611;\\n    t['Q'] = 722;\\n    t['R'] = 611;\\n    t['S'] = 500;\\n    t['T'] = 556;\\n    t['U'] = 722;\\n    t['V'] = 611;\\n    t['W'] = 833;\\n    t['X'] = 611;\\n    t['Y'] = 556;\\n    t['Z'] = 556;\\n    t['bracketleft'] = 389;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 389;\\n    t['asciicircum'] = 422;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 500;\\n    t['b'] = 500;\\n    t['c'] = 444;\\n    t['d'] = 500;\\n    t['e'] = 444;\\n    t['f'] = 278;\\n    t['g'] = 500;\\n    t['h'] = 500;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 444;\\n    t['l'] = 278;\\n    t['m'] = 722;\\n    t['n'] = 500;\\n    t['o'] = 500;\\n    t['p'] = 500;\\n    t['q'] = 500;\\n    t['r'] = 389;\\n    t['s'] = 389;\\n    t['t'] = 278;\\n    t['u'] = 500;\\n    t['v'] = 444;\\n    t['w'] = 667;\\n    t['x'] = 444;\\n    t['y'] = 444;\\n    t['z'] = 389;\\n    t['braceleft'] = 400;\\n    t['bar'] = 275;\\n    t['braceright'] = 400;\\n    t['asciitilde'] = 541;\\n    t['exclamdown'] = 389;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 214;\\n    t['quotedblleft'] = 556;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 500;\\n    t['fl'] = 500;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 523;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 556;\\n    t['quotedblright'] = 556;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 889;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 500;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 889;\\n    t['AE'] = 889;\\n    t['ordfeminine'] = 276;\\n    t['Lslash'] = 556;\\n    t['Oslash'] = 722;\\n    t['OE'] = 944;\\n    t['ordmasculine'] = 310;\\n    t['ae'] = 667;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 667;\\n    t['germandbls'] = 500;\\n    t['Idieresis'] = 333;\\n    t['eacute'] = 444;\\n    t['abreve'] = 500;\\n    t['uhungarumlaut'] = 500;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 556;\\n    t['divide'] = 675;\\n    t['Yacute'] = 556;\\n    t['Acircumflex'] = 611;\\n    t['aacute'] = 500;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 444;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 500;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 500;\\n    t['Edieresis'] = 611;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 760;\\n    t['Emacron'] = 611;\\n    t['ccaron'] = 444;\\n    t['aring'] = 500;\\n    t['Ncommaaccent'] = 667;\\n    t['lacute'] = 278;\\n    t['agrave'] = 500;\\n    t['Tcommaaccent'] = 556;\\n    t['Cacute'] = 667;\\n    t['atilde'] = 500;\\n    t['Edotaccent'] = 611;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 611;\\n    t['Gcommaaccent'] = 722;\\n    t['ucircumflex'] = 500;\\n    t['acircumflex'] = 500;\\n    t['Amacron'] = 611;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 556;\\n    t['Thorn'] = 611;\\n    t['Omacron'] = 722;\\n    t['Racute'] = 611;\\n    t['Sacute'] = 500;\\n    t['dcaron'] = 544;\\n    t['Umacron'] = 722;\\n    t['uring'] = 500;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 722;\\n    t['Agrave'] = 611;\\n    t['Abreve'] = 611;\\n    t['multiply'] = 675;\\n    t['uacute'] = 500;\\n    t['Tcaron'] = 556;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 444;\\n    t['Nacute'] = 667;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 611;\\n    t['adieresis'] = 500;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 500;\\n    t['umacron'] = 500;\\n    t['Ncaron'] = 667;\\n    t['Iacute'] = 333;\\n    t['plusminus'] = 675;\\n    t['brokenbar'] = 275;\\n    t['registered'] = 760;\\n    t['Gbreve'] = 722;\\n    t['Idotaccent'] = 333;\\n    t['summation'] = 600;\\n    t['Egrave'] = 611;\\n    t['racute'] = 389;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 556;\\n    t['Zcaron'] = 556;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 667;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 300;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 611;\\n    t['Adieresis'] = 611;\\n    t['egrave'] = 444;\\n    t['zacute'] = 389;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 722;\\n    t['oacute'] = 500;\\n    t['amacron'] = 500;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 722;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 500;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 722;\\n    t['mu'] = 500;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 611;\\n    t['dcroat'] = 500;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 500;\\n    t['lcaron'] = 300;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 556;\\n    t['trademark'] = 980;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 333;\\n    t['Imacron'] = 333;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 500;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 611;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 500;\\n    t['Scommaaccent'] = 500;\\n    t['Ohungarumlaut'] = 722;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 667;\\n    t['ugrave'] = 500;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 667;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 611;\\n    t['Lcommaaccent'] = 556;\\n    t['Atilde'] = 611;\\n    t['Aogonek'] = 611;\\n    t['Aring'] = 611;\\n    t['Otilde'] = 722;\\n    t['zdotaccent'] = 389;\\n    t['Ecaron'] = 611;\\n    t['Iogonek'] = 333;\\n    t['kcommaaccent'] = 444;\\n    t['minus'] = 675;\\n    t['Icircumflex'] = 333;\\n    t['ncaron'] = 500;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 675;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 500;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 389;\\n    t['ncommaaccent'] = 500;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['a1'] = 974;\\n    t['a2'] = 961;\\n    t['a202'] = 974;\\n    t['a3'] = 980;\\n    t['a4'] = 719;\\n    t['a5'] = 789;\\n    t['a119'] = 790;\\n    t['a118'] = 791;\\n    t['a117'] = 690;\\n    t['a11'] = 960;\\n    t['a12'] = 939;\\n    t['a13'] = 549;\\n    t['a14'] = 855;\\n    t['a15'] = 911;\\n    t['a16'] = 933;\\n    t['a105'] = 911;\\n    t['a17'] = 945;\\n    t['a18'] = 974;\\n    t['a19'] = 755;\\n    t['a20'] = 846;\\n    t['a21'] = 762;\\n    t['a22'] = 761;\\n    t['a23'] = 571;\\n    t['a24'] = 677;\\n    t['a25'] = 763;\\n    t['a26'] = 760;\\n    t['a27'] = 759;\\n    t['a28'] = 754;\\n    t['a6'] = 494;\\n    t['a7'] = 552;\\n    t['a8'] = 537;\\n    t['a9'] = 577;\\n    t['a10'] = 692;\\n    t['a29'] = 786;\\n    t['a30'] = 788;\\n    t['a31'] = 788;\\n    t['a32'] = 790;\\n    t['a33'] = 793;\\n    t['a34'] = 794;\\n    t['a35'] = 816;\\n    t['a36'] = 823;\\n    t['a37'] = 789;\\n    t['a38'] = 841;\\n    t['a39'] = 823;\\n    t['a40'] = 833;\\n    t['a41'] = 816;\\n    t['a42'] = 831;\\n    t['a43'] = 923;\\n    t['a44'] = 744;\\n    t['a45'] = 723;\\n    t['a46'] = 749;\\n    t['a47'] = 790;\\n    t['a48'] = 792;\\n    t['a49'] = 695;\\n    t['a50'] = 776;\\n    t['a51'] = 768;\\n    t['a52'] = 792;\\n    t['a53'] = 759;\\n    t['a54'] = 707;\\n    t['a55'] = 708;\\n    t['a56'] = 682;\\n    t['a57'] = 701;\\n    t['a58'] = 826;\\n    t['a59'] = 815;\\n    t['a60'] = 789;\\n    t['a61'] = 789;\\n    t['a62'] = 707;\\n    t['a63'] = 687;\\n    t['a64'] = 696;\\n    t['a65'] = 689;\\n    t['a66'] = 786;\\n    t['a67'] = 787;\\n    t['a68'] = 713;\\n    t['a69'] = 791;\\n    t['a70'] = 785;\\n    t['a71'] = 791;\\n    t['a72'] = 873;\\n    t['a73'] = 761;\\n    t['a74'] = 762;\\n    t['a203'] = 762;\\n    t['a75'] = 759;\\n    t['a204'] = 759;\\n    t['a76'] = 892;\\n    t['a77'] = 892;\\n    t['a78'] = 788;\\n    t['a79'] = 784;\\n    t['a81'] = 438;\\n    t['a82'] = 138;\\n    t['a83'] = 277;\\n    t['a84'] = 415;\\n    t['a97'] = 392;\\n    t['a98'] = 392;\\n    t['a99'] = 668;\\n    t['a100'] = 668;\\n    t['a89'] = 390;\\n    t['a90'] = 390;\\n    t['a93'] = 317;\\n    t['a94'] = 317;\\n    t['a91'] = 276;\\n    t['a92'] = 276;\\n    t['a205'] = 509;\\n    t['a85'] = 509;\\n    t['a206'] = 410;\\n    t['a86'] = 410;\\n    t['a87'] = 234;\\n    t['a88'] = 234;\\n    t['a95'] = 334;\\n    t['a96'] = 334;\\n    t['a101'] = 732;\\n    t['a102'] = 544;\\n    t['a103'] = 544;\\n    t['a104'] = 910;\\n    t['a106'] = 667;\\n    t['a107'] = 760;\\n    t['a108'] = 760;\\n    t['a112'] = 776;\\n    t['a111'] = 595;\\n    t['a110'] = 694;\\n    t['a109'] = 626;\\n    t['a120'] = 788;\\n    t['a121'] = 788;\\n    t['a122'] = 788;\\n    t['a123'] = 788;\\n    t['a124'] = 788;\\n    t['a125'] = 788;\\n    t['a126'] = 788;\\n    t['a127'] = 788;\\n    t['a128'] = 788;\\n    t['a129'] = 788;\\n    t['a130'] = 788;\\n    t['a131'] = 788;\\n    t['a132'] = 788;\\n    t['a133'] = 788;\\n    t['a134'] = 788;\\n    t['a135'] = 788;\\n    t['a136'] = 788;\\n    t['a137'] = 788;\\n    t['a138'] = 788;\\n    t['a139'] = 788;\\n    t['a140'] = 788;\\n    t['a141'] = 788;\\n    t['a142'] = 788;\\n    t['a143'] = 788;\\n    t['a144'] = 788;\\n    t['a145'] = 788;\\n    t['a146'] = 788;\\n    t['a147'] = 788;\\n    t['a148'] = 788;\\n    t['a149'] = 788;\\n    t['a150'] = 788;\\n    t['a151'] = 788;\\n    t['a152'] = 788;\\n    t['a153'] = 788;\\n    t['a154'] = 788;\\n    t['a155'] = 788;\\n    t['a156'] = 788;\\n    t['a157'] = 788;\\n    t['a158'] = 788;\\n    t['a159'] = 788;\\n    t['a160'] = 894;\\n    t['a161'] = 838;\\n    t['a163'] = 1016;\\n    t['a164'] = 458;\\n    t['a196'] = 748;\\n    t['a165'] = 924;\\n    t['a192'] = 748;\\n    t['a166'] = 918;\\n    t['a167'] = 927;\\n    t['a168'] = 928;\\n    t['a169'] = 928;\\n    t['a170'] = 834;\\n    t['a171'] = 873;\\n    t['a172'] = 828;\\n    t['a173'] = 924;\\n    t['a162'] = 924;\\n    t['a174'] = 917;\\n    t['a175'] = 930;\\n    t['a176'] = 931;\\n    t['a177'] = 463;\\n    t['a178'] = 883;\\n    t['a179'] = 836;\\n    t['a193'] = 836;\\n    t['a180'] = 867;\\n    t['a199'] = 867;\\n    t['a181'] = 696;\\n    t['a200'] = 696;\\n    t['a182'] = 874;\\n    t['a201'] = 874;\\n    t['a183'] = 760;\\n    t['a184'] = 946;\\n    t['a197'] = 771;\\n    t['a185'] = 865;\\n    t['a194'] = 771;\\n    t['a198'] = 888;\\n    t['a186'] = 967;\\n    t['a195'] = 888;\\n    t['a187'] = 831;\\n    t['a188'] = 873;\\n    t['a189'] = 927;\\n    t['a190'] = 970;\\n    t['a191'] = 918;\\n  });\\n});\\nexports.getMetrics = getMetrics;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MurmurHash3_64 = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\\n  var MASK_HIGH = 0xffff0000;\\n  var MASK_LOW = 0xffff;\\n  function MurmurHash3_64(seed) {\\n    var SEED = 0xc3d2e1f0;\\n    this.h1 = seed ? seed & 0xffffffff : SEED;\\n    this.h2 = seed ? seed & 0xffffffff : SEED;\\n  }\\n  MurmurHash3_64.prototype = {\\n    update: function MurmurHash3_64_update(input) {\\n      var data = void 0,\\n          length = void 0;\\n      if ((0, _util.isString)(input)) {\\n        data = new Uint8Array(input.length * 2);\\n        length = 0;\\n        for (var i = 0, ii = input.length; i < ii; i++) {\\n          var code = input.charCodeAt(i);\\n          if (code <= 0xff) {\\n            data[length++] = code;\\n          } else {\\n            data[length++] = code >>> 8;\\n            data[length++] = code & 0xff;\\n          }\\n        }\\n      } else if ((0, _util.isArrayBuffer)(input)) {\\n        data = input;\\n        length = data.byteLength;\\n      } else {\\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\\n      }\\n      var blockCounts = length >> 2;\\n      var tailLength = length - blockCounts * 4;\\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\\n      var k1 = 0;\\n      var k2 = 0;\\n      var h1 = this.h1;\\n      var h2 = this.h2;\\n      var C1 = 0xcc9e2d51;\\n      var C2 = 0x1b873593;\\n      var C1_LOW = C1 & MASK_LOW;\\n      var C2_LOW = C2 & MASK_LOW;\\n      for (var _i = 0; _i < blockCounts; _i++) {\\n        if (_i & 1) {\\n          k1 = dataUint32[_i];\\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\n          k1 = k1 << 15 | k1 >>> 17;\\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\n          h1 ^= k1;\\n          h1 = h1 << 13 | h1 >>> 19;\\n          h1 = h1 * 5 + 0xe6546b64;\\n        } else {\\n          k2 = dataUint32[_i];\\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\\n          k2 = k2 << 15 | k2 >>> 17;\\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\\n          h2 ^= k2;\\n          h2 = h2 << 13 | h2 >>> 19;\\n          h2 = h2 * 5 + 0xe6546b64;\\n        }\\n      }\\n      k1 = 0;\\n      switch (tailLength) {\\n        case 3:\\n          k1 ^= data[blockCounts * 4 + 2] << 16;\\n        case 2:\\n          k1 ^= data[blockCounts * 4 + 1] << 8;\\n        case 1:\\n          k1 ^= data[blockCounts * 4];\\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\n          k1 = k1 << 15 | k1 >>> 17;\\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\n          if (blockCounts & 1) {\\n            h1 ^= k1;\\n          } else {\\n            h2 ^= k1;\\n          }\\n      }\\n      this.h1 = h1;\\n      this.h2 = h2;\\n      return this;\\n    },\\n    hexdigest: function MurmurHash3_64_hexdigest() {\\n      var h1 = this.h1;\\n      var h2 = this.h2;\\n      h1 ^= h2 >>> 1;\\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\\n      h1 ^= h2 >>> 1;\\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\\n      h1 ^= h2 >>> 1;\\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\\n        var hex = (arr[i] >>> 0).toString(16);\\n        while (hex.length < 8) {\\n          hex = '0' + hex;\\n        }\\n        str += hex;\\n      }\\n      return str;\\n    }\\n  };\\n  return MurmurHash3_64;\\n}();\\nexports.MurmurHash3_64 = MurmurHash3_64;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _parser = require('./parser');\\n\\nvar _chunked_stream = require('./chunked_stream');\\n\\nvar _crypto = require('./crypto');\\n\\nvar _colorspace = require('./colorspace');\\n\\nvar Catalog = function CatalogClosure() {\\n  function Catalog(pdfManager, xref, pageFactory) {\\n    this.pdfManager = pdfManager;\\n    this.xref = xref;\\n    this.catDict = xref.getCatalogObj();\\n    if (!(0, _primitives.isDict)(this.catDict)) {\\n      throw new _util.FormatError('catalog object is not a dictionary');\\n    }\\n    this.fontCache = new _primitives.RefSetCache();\\n    this.builtInCMapCache = Object.create(null);\\n    this.pageKidsCountCache = new _primitives.RefSetCache();\\n    this.pageFactory = pageFactory;\\n    this.pagePromises = [];\\n  }\\n  Catalog.prototype = {\\n    get metadata() {\\n      var streamRef = this.catDict.getRaw('Metadata');\\n      if (!(0, _primitives.isRef)(streamRef)) {\\n        return (0, _util.shadow)(this, 'metadata', null);\\n      }\\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\\n      var metadata;\\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\\n        var type = stream.dict.get('Type');\\n        var subtype = stream.dict.get('Subtype');\\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\\n          try {\\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\\n          } catch (e) {\\n            if (e instanceof _util.MissingDataException) {\\n              throw e;\\n            }\\n            (0, _util.info)('Skipping invalid metadata.');\\n          }\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'metadata', metadata);\\n    },\\n    get toplevelPagesDict() {\\n      var pagesObj = this.catDict.get('Pages');\\n      if (!(0, _primitives.isDict)(pagesObj)) {\\n        throw new _util.FormatError('invalid top-level pages dictionary');\\n      }\\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\\n    },\\n    get documentOutline() {\\n      var obj = null;\\n      try {\\n        obj = this.readDocumentOutline();\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Unable to read document outline');\\n      }\\n      return (0, _util.shadow)(this, 'documentOutline', obj);\\n    },\\n    readDocumentOutline: function Catalog_readDocumentOutline() {\\n      var obj = this.catDict.get('Outlines');\\n      if (!(0, _primitives.isDict)(obj)) {\\n        return null;\\n      }\\n      obj = obj.getRaw('First');\\n      if (!(0, _primitives.isRef)(obj)) {\\n        return null;\\n      }\\n      var root = { items: [] };\\n      var queue = [{\\n        obj: obj,\\n        parent: root\\n      }];\\n      var processed = new _primitives.RefSet();\\n      processed.put(obj);\\n      var xref = this.xref,\\n          blackColor = new Uint8Array(3);\\n      while (queue.length > 0) {\\n        var i = queue.shift();\\n        var outlineDict = xref.fetchIfRef(i.obj);\\n        if (outlineDict === null) {\\n          continue;\\n        }\\n        if (!outlineDict.has('Title')) {\\n          throw new _util.FormatError('Invalid outline item');\\n        }\\n        var data = {\\n          url: null,\\n          dest: null\\n        };\\n        Catalog.parseDestDictionary({\\n          destDict: outlineDict,\\n          resultObj: data,\\n          docBaseUrl: this.pdfManager.docBaseUrl\\n        });\\n        var title = outlineDict.get('Title');\\n        var flags = outlineDict.get('F') || 0;\\n        var color = outlineDict.getArray('C'),\\n            rgbColor = blackColor;\\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\\n        }\\n        var outlineItem = {\\n          dest: data.dest,\\n          url: data.url,\\n          unsafeUrl: data.unsafeUrl,\\n          newWindow: data.newWindow,\\n          title: (0, _util.stringToPDFString)(title),\\n          color: rgbColor,\\n          count: outlineDict.get('Count'),\\n          bold: !!(flags & 2),\\n          italic: !!(flags & 1),\\n          items: []\\n        };\\n        i.parent.items.push(outlineItem);\\n        obj = outlineDict.getRaw('First');\\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\n          queue.push({\\n            obj: obj,\\n            parent: outlineItem\\n          });\\n          processed.put(obj);\\n        }\\n        obj = outlineDict.getRaw('Next');\\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\n          queue.push({\\n            obj: obj,\\n            parent: i.parent\\n          });\\n          processed.put(obj);\\n        }\\n      }\\n      return root.items.length > 0 ? root.items : null;\\n    },\\n    get numPages() {\\n      var obj = this.toplevelPagesDict.get('Count');\\n      if (!Number.isInteger(obj)) {\\n        throw new _util.FormatError('page count in top level pages object is not an integer');\\n      }\\n      return (0, _util.shadow)(this, 'numPages', obj);\\n    },\\n    get destinations() {\\n      function fetchDestination(dest) {\\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\\n      }\\n      var xref = this.xref;\\n      var dests = {},\\n          nameTreeRef,\\n          nameDictionaryRef;\\n      var obj = this.catDict.get('Names');\\n      if (obj && obj.has('Dests')) {\\n        nameTreeRef = obj.getRaw('Dests');\\n      } else if (this.catDict.has('Dests')) {\\n        nameDictionaryRef = this.catDict.get('Dests');\\n      }\\n      if (nameDictionaryRef) {\\n        obj = nameDictionaryRef;\\n        obj.forEach(function catalogForEach(key, value) {\\n          if (!value) {\\n            return;\\n          }\\n          dests[key] = fetchDestination(value);\\n        });\\n      }\\n      if (nameTreeRef) {\\n        var nameTree = new NameTree(nameTreeRef, xref);\\n        var names = nameTree.getAll();\\n        for (var name in names) {\\n          dests[name] = fetchDestination(names[name]);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'destinations', dests);\\n    },\\n    getDestination: function Catalog_getDestination(destinationId) {\\n      function fetchDestination(dest) {\\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\\n      }\\n      var xref = this.xref;\\n      var dest = null,\\n          nameTreeRef,\\n          nameDictionaryRef;\\n      var obj = this.catDict.get('Names');\\n      if (obj && obj.has('Dests')) {\\n        nameTreeRef = obj.getRaw('Dests');\\n      } else if (this.catDict.has('Dests')) {\\n        nameDictionaryRef = this.catDict.get('Dests');\\n      }\\n      if (nameDictionaryRef) {\\n        var value = nameDictionaryRef.get(destinationId);\\n        if (value) {\\n          dest = fetchDestination(value);\\n        }\\n      }\\n      if (nameTreeRef) {\\n        var nameTree = new NameTree(nameTreeRef, xref);\\n        dest = fetchDestination(nameTree.get(destinationId));\\n      }\\n      return dest;\\n    },\\n    get pageLabels() {\\n      var obj = null;\\n      try {\\n        obj = this.readPageLabels();\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Unable to read page labels.');\\n      }\\n      return (0, _util.shadow)(this, 'pageLabels', obj);\\n    },\\n    readPageLabels: function Catalog_readPageLabels() {\\n      var obj = this.catDict.getRaw('PageLabels');\\n      if (!obj) {\\n        return null;\\n      }\\n      var pageLabels = new Array(this.numPages);\\n      var style = null;\\n      var prefix = '';\\n      var numberTree = new NumberTree(obj, this.xref);\\n      var nums = numberTree.getAll();\\n      var currentLabel = '',\\n          currentIndex = 1;\\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\\n        if (i in nums) {\\n          var labelDict = nums[i];\\n          if (!(0, _primitives.isDict)(labelDict)) {\\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\\n          }\\n          var type = labelDict.get('Type');\\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\\n          }\\n          var s = labelDict.get('S');\\n          if (s && !(0, _primitives.isName)(s)) {\\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\\n          }\\n          style = s ? s.name : null;\\n          var p = labelDict.get('P');\\n          if (p && !(0, _util.isString)(p)) {\\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\\n          }\\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\\n          var st = labelDict.get('St');\\n          if (st && !(Number.isInteger(st) && st >= 1)) {\\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\\n          }\\n          currentIndex = st || 1;\\n        }\\n        switch (style) {\\n          case 'D':\\n            currentLabel = currentIndex;\\n            break;\\n          case 'R':\\n          case 'r':\\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\\n            break;\\n          case 'A':\\n          case 'a':\\n            var LIMIT = 26;\\n            var A_UPPER_CASE = 0x41,\\n                A_LOWER_CASE = 0x61;\\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\\n            var letterIndex = currentIndex - 1;\\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\\n            var charBuf = [];\\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\\n              charBuf.push(character);\\n            }\\n            currentLabel = charBuf.join('');\\n            break;\\n          default:\\n            if (style) {\\n              throw new _util.FormatError('Invalid style \\\"' + style + '\\\" in PageLabel dictionary.');\\n            }\\n        }\\n        pageLabels[i] = prefix + currentLabel;\\n        currentLabel = '';\\n        currentIndex++;\\n      }\\n      return pageLabels;\\n    },\\n    get pageMode() {\\n      var obj = this.catDict.get('PageMode');\\n      var pageMode = 'UseNone';\\n      if ((0, _primitives.isName)(obj)) {\\n        switch (obj.name) {\\n          case 'UseNone':\\n          case 'UseOutlines':\\n          case 'UseThumbs':\\n          case 'FullScreen':\\n          case 'UseOC':\\n          case 'UseAttachments':\\n            pageMode = obj.name;\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\\n    },\\n    get attachments() {\\n      var xref = this.xref;\\n      var attachments = null,\\n          nameTreeRef;\\n      var obj = this.catDict.get('Names');\\n      if (obj) {\\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\\n      }\\n      if (nameTreeRef) {\\n        var nameTree = new NameTree(nameTreeRef, xref);\\n        var names = nameTree.getAll();\\n        for (var name in names) {\\n          var fs = new FileSpec(names[name], xref);\\n          if (!attachments) {\\n            attachments = Object.create(null);\\n          }\\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'attachments', attachments);\\n    },\\n    get javaScript() {\\n      var xref = this.xref;\\n      var obj = this.catDict.get('Names');\\n      var javaScript = null;\\n      function appendIfJavaScriptDict(jsDict) {\\n        var type = jsDict.get('S');\\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\\n          return;\\n        }\\n        var js = jsDict.get('JS');\\n        if ((0, _primitives.isStream)(js)) {\\n          js = (0, _util.bytesToString)(js.getBytes());\\n        } else if (!(0, _util.isString)(js)) {\\n          return;\\n        }\\n        if (!javaScript) {\\n          javaScript = [];\\n        }\\n        javaScript.push((0, _util.stringToPDFString)(js));\\n      }\\n      if (obj && obj.has('JavaScript')) {\\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\\n        var names = nameTree.getAll();\\n        for (var name in names) {\\n          var jsDict = names[name];\\n          if ((0, _primitives.isDict)(jsDict)) {\\n            appendIfJavaScriptDict(jsDict);\\n          }\\n        }\\n      }\\n      var openactionDict = this.catDict.get('OpenAction');\\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\\n        var actionType = openactionDict.get('S');\\n        if ((0, _primitives.isName)(actionType, 'Named')) {\\n          var action = openactionDict.get('N');\\n          if ((0, _primitives.isName)(action, 'Print')) {\\n            if (!javaScript) {\\n              javaScript = [];\\n            }\\n            javaScript.push('print({});');\\n          }\\n        } else {\\n          appendIfJavaScriptDict(openactionDict);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\\n    },\\n    cleanup: function Catalog_cleanup() {\\n      var _this = this;\\n\\n      this.pageKidsCountCache.clear();\\n      var promises = [];\\n      this.fontCache.forEach(function (promise) {\\n        promises.push(promise);\\n      });\\n      return Promise.all(promises).then(function (translatedFonts) {\\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\\n          var font = translatedFonts[i].dict;\\n          delete font.translated;\\n        }\\n        _this.fontCache.clear();\\n        _this.builtInCMapCache = Object.create(null);\\n      });\\n    },\\n    getPage: function Catalog_getPage(pageIndex) {\\n      var _this2 = this;\\n\\n      if (!(pageIndex in this.pagePromises)) {\\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\\n          var _ref2 = _slicedToArray(_ref, 2),\\n              dict = _ref2[0],\\n              ref = _ref2[1];\\n\\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\\n        });\\n      }\\n      return this.pagePromises[pageIndex];\\n    },\\n    getPageDict: function Catalog_getPageDict(pageIndex) {\\n      var capability = (0, _util.createPromiseCapability)();\\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\\n      var count,\\n          currentPageIndex = 0;\\n      var xref = this.xref,\\n          pageKidsCountCache = this.pageKidsCountCache;\\n      function next() {\\n        while (nodesToVisit.length) {\\n          var currentNode = nodesToVisit.pop();\\n          if ((0, _primitives.isRef)(currentNode)) {\\n            count = pageKidsCountCache.get(currentNode);\\n            if (count > 0 && currentPageIndex + count < pageIndex) {\\n              currentPageIndex += count;\\n              continue;\\n            }\\n            xref.fetchAsync(currentNode).then(function (obj) {\\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\\n                if (pageIndex === currentPageIndex) {\\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\\n                    pageKidsCountCache.put(currentNode, 1);\\n                  }\\n                  capability.resolve([obj, currentNode]);\\n                } else {\\n                  currentPageIndex++;\\n                  next();\\n                }\\n                return;\\n              }\\n              nodesToVisit.push(obj);\\n              next();\\n            }, capability.reject);\\n            return;\\n          }\\n          if (!(0, _primitives.isDict)(currentNode)) {\\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\\n            return;\\n          }\\n          count = currentNode.get('Count');\\n          var objId = currentNode.objId;\\n          if (objId && !pageKidsCountCache.has(objId)) {\\n            pageKidsCountCache.put(objId, count);\\n          }\\n          if (currentPageIndex + count <= pageIndex) {\\n            currentPageIndex += count;\\n            continue;\\n          }\\n          var kids = currentNode.get('Kids');\\n          if (!Array.isArray(kids)) {\\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\\n            return;\\n          }\\n          for (var last = kids.length - 1; last >= 0; last--) {\\n            nodesToVisit.push(kids[last]);\\n          }\\n        }\\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\\n      }\\n      next();\\n      return capability.promise;\\n    },\\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\\n      var xref = this.xref;\\n      function pagesBeforeRef(kidRef) {\\n        var total = 0;\\n        var parentRef;\\n        return xref.fetchAsync(kidRef).then(function (node) {\\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\\n          }\\n          if (!node) {\\n            return null;\\n          }\\n          if (!(0, _primitives.isDict)(node)) {\\n            throw new _util.FormatError('node must be a Dict.');\\n          }\\n          parentRef = node.getRaw('Parent');\\n          return node.getAsync('Parent');\\n        }).then(function (parent) {\\n          if (!parent) {\\n            return null;\\n          }\\n          if (!(0, _primitives.isDict)(parent)) {\\n            throw new _util.FormatError('parent must be a Dict.');\\n          }\\n          return parent.getAsync('Kids');\\n        }).then(function (kids) {\\n          if (!kids) {\\n            return null;\\n          }\\n          var kidPromises = [];\\n          var found = false;\\n          for (var i = 0; i < kids.length; i++) {\\n            var kid = kids[i];\\n            if (!(0, _primitives.isRef)(kid)) {\\n              throw new _util.FormatError('kid must be a Ref.');\\n            }\\n            if (kid.num === kidRef.num) {\\n              found = true;\\n              break;\\n            }\\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\\n              if (kid.has('Count')) {\\n                var count = kid.get('Count');\\n                total += count;\\n              } else {\\n                total++;\\n              }\\n            }));\\n          }\\n          if (!found) {\\n            throw new _util.FormatError('kid ref not found in parents kids');\\n          }\\n          return Promise.all(kidPromises).then(function () {\\n            return [total, parentRef];\\n          });\\n        });\\n      }\\n      var total = 0;\\n      function next(ref) {\\n        return pagesBeforeRef(ref).then(function (args) {\\n          if (!args) {\\n            return total;\\n          }\\n          var count = args[0];\\n          var parentRef = args[1];\\n          total += count;\\n          return next(parentRef);\\n        });\\n      }\\n      return next(pageRef);\\n    }\\n  };\\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\\n    function addDefaultProtocolToUrl(url) {\\n      if (url.indexOf('www.') === 0) {\\n        return 'http://' + url;\\n      }\\n      return url;\\n    }\\n    function tryConvertUrlEncoding(url) {\\n      try {\\n        return (0, _util.stringToUTF8String)(url);\\n      } catch (e) {\\n        return url;\\n      }\\n    }\\n    var destDict = params.destDict;\\n    if (!(0, _primitives.isDict)(destDict)) {\\n      (0, _util.warn)('parseDestDictionary: \\\"destDict\\\" must be a dictionary.');\\n      return;\\n    }\\n    var resultObj = params.resultObj;\\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\\n      (0, _util.warn)('parseDestDictionary: \\\"resultObj\\\" must be an object.');\\n      return;\\n    }\\n    var docBaseUrl = params.docBaseUrl || null;\\n    var action = destDict.get('A'),\\n        url,\\n        dest;\\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\\n      action = destDict.get('Dest');\\n    }\\n    if ((0, _primitives.isDict)(action)) {\\n      var actionType = action.get('S');\\n      if (!(0, _primitives.isName)(actionType)) {\\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\\n        return;\\n      }\\n      var actionName = actionType.name;\\n      switch (actionName) {\\n        case 'URI':\\n          url = action.get('URI');\\n          if ((0, _primitives.isName)(url)) {\\n            url = '/' + url.name;\\n          } else if ((0, _util.isString)(url)) {\\n            url = addDefaultProtocolToUrl(url);\\n          }\\n          break;\\n        case 'GoTo':\\n          dest = action.get('D');\\n          break;\\n        case 'Launch':\\n        case 'GoToR':\\n          var urlDict = action.get('F');\\n          if ((0, _primitives.isDict)(urlDict)) {\\n            url = urlDict.get('F') || null;\\n          } else if ((0, _util.isString)(urlDict)) {\\n            url = urlDict;\\n          }\\n          var remoteDest = action.get('D');\\n          if (remoteDest) {\\n            if ((0, _primitives.isName)(remoteDest)) {\\n              remoteDest = remoteDest.name;\\n            }\\n            if ((0, _util.isString)(url)) {\\n              var baseUrl = url.split('#')[0];\\n              if ((0, _util.isString)(remoteDest)) {\\n                url = baseUrl + '#' + remoteDest;\\n              } else if (Array.isArray(remoteDest)) {\\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\\n              }\\n            }\\n          }\\n          var newWindow = action.get('NewWindow');\\n          if ((0, _util.isBool)(newWindow)) {\\n            resultObj.newWindow = newWindow;\\n          }\\n          break;\\n        case 'Named':\\n          var namedAction = action.get('N');\\n          if ((0, _primitives.isName)(namedAction)) {\\n            resultObj.action = namedAction.name;\\n          }\\n          break;\\n        case 'JavaScript':\\n          var jsAction = action.get('JS'),\\n              js;\\n          if ((0, _primitives.isStream)(jsAction)) {\\n            js = (0, _util.bytesToString)(jsAction.getBytes());\\n          } else if ((0, _util.isString)(jsAction)) {\\n            js = jsAction;\\n          }\\n          if (js) {\\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\\n            var regex = new RegExp('^\\\\\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\\\\\.') + ')\\\\\\\\((?:\\\\'|\\\\\\\")([^\\\\'\\\\\\\"]*)(?:\\\\'|\\\\\\\")(?:,\\\\\\\\s*(\\\\\\\\w+)\\\\\\\\)|\\\\\\\\))', 'i');\\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\\n            if (jsUrl && jsUrl[2]) {\\n              url = jsUrl[2];\\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\\n                resultObj.newWindow = true;\\n              }\\n              break;\\n            }\\n          }\\n        default:\\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \\\"' + actionName + '\\\".');\\n          break;\\n      }\\n    } else if (destDict.has('Dest')) {\\n      dest = destDict.get('Dest');\\n    }\\n    if ((0, _util.isString)(url)) {\\n      url = tryConvertUrlEncoding(url);\\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\\n      if (absoluteUrl) {\\n        resultObj.url = absoluteUrl.href;\\n      }\\n      resultObj.unsafeUrl = url;\\n    }\\n    if (dest) {\\n      if ((0, _primitives.isName)(dest)) {\\n        dest = dest.name;\\n      }\\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\\n        resultObj.dest = dest;\\n      }\\n    }\\n  };\\n  return Catalog;\\n}();\\nvar XRef = function XRefClosure() {\\n  function XRef(stream, pdfManager) {\\n    this.stream = stream;\\n    this.pdfManager = pdfManager;\\n    this.entries = [];\\n    this.xrefstms = Object.create(null);\\n    this.cache = [];\\n    this.stats = {\\n      streamTypes: [],\\n      fontTypes: []\\n    };\\n  }\\n  XRef.prototype = {\\n    setStartXRef: function XRef_setStartXRef(startXRef) {\\n      this.startXRefQueue = [startXRef];\\n    },\\n    parse: function XRef_parse(recoveryMode) {\\n      var trailerDict;\\n      if (!recoveryMode) {\\n        trailerDict = this.readXRef();\\n      } else {\\n        (0, _util.warn)('Indexing all PDF objects');\\n        trailerDict = this.indexObjects();\\n      }\\n      trailerDict.assignXref(this);\\n      this.trailer = trailerDict;\\n      var encrypt = trailerDict.get('Encrypt');\\n      if ((0, _primitives.isDict)(encrypt)) {\\n        var ids = trailerDict.get('ID');\\n        var fileId = ids && ids.length ? ids[0] : '';\\n        encrypt.suppressEncryption = true;\\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\\n      }\\n      if (!(this.root = trailerDict.get('Root'))) {\\n        throw new _util.FormatError('Invalid root reference');\\n      }\\n    },\\n    processXRefTable: function XRef_processXRefTable(parser) {\\n      if (!('tableState' in this)) {\\n        this.tableState = {\\n          entryNum: 0,\\n          streamPos: parser.lexer.stream.pos,\\n          parserBuf1: parser.buf1,\\n          parserBuf2: parser.buf2\\n        };\\n      }\\n      var obj = this.readXRefTable(parser);\\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\\n      }\\n      var dict = parser.getObj();\\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\\n        dict = dict.dict;\\n      }\\n      if (!(0, _primitives.isDict)(dict)) {\\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\\n      }\\n      delete this.tableState;\\n      return dict;\\n    },\\n    readXRefTable: function XRef_readXRefTable(parser) {\\n      var stream = parser.lexer.stream;\\n      var tableState = this.tableState;\\n      stream.pos = tableState.streamPos;\\n      parser.buf1 = tableState.parserBuf1;\\n      parser.buf2 = tableState.parserBuf2;\\n      var obj;\\n      while (true) {\\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\\n            break;\\n          }\\n          tableState.firstEntryNum = obj;\\n          tableState.entryCount = parser.getObj();\\n        }\\n        var first = tableState.firstEntryNum;\\n        var count = tableState.entryCount;\\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\\n        }\\n        for (var i = tableState.entryNum; i < count; i++) {\\n          tableState.streamPos = stream.pos;\\n          tableState.entryNum = i;\\n          tableState.parserBuf1 = parser.buf1;\\n          tableState.parserBuf2 = parser.buf2;\\n          var entry = {};\\n          entry.offset = parser.getObj();\\n          entry.gen = parser.getObj();\\n          var type = parser.getObj();\\n          if ((0, _primitives.isCmd)(type, 'f')) {\\n            entry.free = true;\\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\\n            entry.uncompressed = true;\\n          }\\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\\n          }\\n          if (i === 0 && entry.free && first === 1) {\\n            first = 0;\\n          }\\n          if (!this.entries[i + first]) {\\n            this.entries[i + first] = entry;\\n          }\\n        }\\n        tableState.entryNum = 0;\\n        tableState.streamPos = stream.pos;\\n        tableState.parserBuf1 = parser.buf1;\\n        tableState.parserBuf2 = parser.buf2;\\n        delete tableState.firstEntryNum;\\n        delete tableState.entryCount;\\n      }\\n      if (this.entries[0] && !this.entries[0].free) {\\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\\n      }\\n      return obj;\\n    },\\n    processXRefStream: function XRef_processXRefStream(stream) {\\n      if (!('streamState' in this)) {\\n        var streamParameters = stream.dict;\\n        var byteWidths = streamParameters.get('W');\\n        var range = streamParameters.get('Index');\\n        if (!range) {\\n          range = [0, streamParameters.get('Size')];\\n        }\\n        this.streamState = {\\n          entryRanges: range,\\n          byteWidths: byteWidths,\\n          entryNum: 0,\\n          streamPos: stream.pos\\n        };\\n      }\\n      this.readXRefStream(stream);\\n      delete this.streamState;\\n      return stream.dict;\\n    },\\n    readXRefStream: function XRef_readXRefStream(stream) {\\n      var i, j;\\n      var streamState = this.streamState;\\n      stream.pos = streamState.streamPos;\\n      var byteWidths = streamState.byteWidths;\\n      var typeFieldWidth = byteWidths[0];\\n      var offsetFieldWidth = byteWidths[1];\\n      var generationFieldWidth = byteWidths[2];\\n      var entryRanges = streamState.entryRanges;\\n      while (entryRanges.length > 0) {\\n        var first = entryRanges[0];\\n        var n = entryRanges[1];\\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\\n        }\\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\\n        }\\n        for (i = streamState.entryNum; i < n; ++i) {\\n          streamState.entryNum = i;\\n          streamState.streamPos = stream.pos;\\n          var type = 0,\\n              offset = 0,\\n              generation = 0;\\n          for (j = 0; j < typeFieldWidth; ++j) {\\n            type = type << 8 | stream.getByte();\\n          }\\n          if (typeFieldWidth === 0) {\\n            type = 1;\\n          }\\n          for (j = 0; j < offsetFieldWidth; ++j) {\\n            offset = offset << 8 | stream.getByte();\\n          }\\n          for (j = 0; j < generationFieldWidth; ++j) {\\n            generation = generation << 8 | stream.getByte();\\n          }\\n          var entry = {};\\n          entry.offset = offset;\\n          entry.gen = generation;\\n          switch (type) {\\n            case 0:\\n              entry.free = true;\\n              break;\\n            case 1:\\n              entry.uncompressed = true;\\n              break;\\n            case 2:\\n              break;\\n            default:\\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\\n          }\\n          if (!this.entries[first + i]) {\\n            this.entries[first + i] = entry;\\n          }\\n        }\\n        streamState.entryNum = 0;\\n        streamState.streamPos = stream.pos;\\n        entryRanges.splice(0, 2);\\n      }\\n    },\\n    indexObjects: function XRef_indexObjects() {\\n      var TAB = 0x9,\\n          LF = 0xA,\\n          CR = 0xD,\\n          SPACE = 0x20;\\n      var PERCENT = 0x25,\\n          LT = 0x3C;\\n      function readToken(data, offset) {\\n        var token = '',\\n            ch = data[offset];\\n        while (ch !== LF && ch !== CR && ch !== LT) {\\n          if (++offset >= data.length) {\\n            break;\\n          }\\n          token += String.fromCharCode(ch);\\n          ch = data[offset];\\n        }\\n        return token;\\n      }\\n      function skipUntil(data, offset, what) {\\n        var length = what.length,\\n            dataLength = data.length;\\n        var skipped = 0;\\n        while (offset < dataLength) {\\n          var i = 0;\\n          while (i < length && data[offset + i] === what[i]) {\\n            ++i;\\n          }\\n          if (i >= length) {\\n            break;\\n          }\\n          offset++;\\n          skipped++;\\n        }\\n        return skipped;\\n      }\\n      var objRegExp = /^(\\\\d+)\\\\s+(\\\\d+)\\\\s+obj\\\\b/;\\n      var endobjRegExp = /\\\\bendobj[\\\\b\\\\s]$/;\\n      var nestedObjRegExp = /\\\\s+(\\\\d+\\\\s+\\\\d+\\\\s+obj[\\\\b\\\\s])$/;\\n      var CHECK_CONTENT_LENGTH = 25;\\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\\n      var objBytes = new Uint8Array([111, 98, 106]);\\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\\n      this.entries.length = 0;\\n      var stream = this.stream;\\n      stream.pos = 0;\\n      var buffer = stream.getBytes();\\n      var position = stream.start,\\n          length = buffer.length;\\n      var trailers = [],\\n          xrefStms = [];\\n      while (position < length) {\\n        var ch = buffer[position];\\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\\n          ++position;\\n          continue;\\n        }\\n        if (ch === PERCENT) {\\n          do {\\n            ++position;\\n            if (position >= length) {\\n              break;\\n            }\\n            ch = buffer[position];\\n          } while (ch !== LF && ch !== CR);\\n          continue;\\n        }\\n        var token = readToken(buffer, position);\\n        var m;\\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\\\s/.test(token[4]))) {\\n          position += skipUntil(buffer, position, trailerBytes);\\n          trailers.push(position);\\n          position += skipUntil(buffer, position, startxrefBytes);\\n        } else if (m = objRegExp.exec(token)) {\\n          if (typeof this.entries[m[1]] === 'undefined') {\\n            this.entries[m[1]] = {\\n              offset: position - stream.start,\\n              gen: m[2] | 0,\\n              uncompressed: true\\n            };\\n          }\\n          var contentLength = void 0,\\n              startPos = position + token.length;\\n          while (startPos < buffer.length) {\\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\\n            contentLength = endPos - position;\\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\\n            if (endobjRegExp.test(tokenStr)) {\\n              break;\\n            } else {\\n              var objToken = nestedObjRegExp.exec(tokenStr);\\n              if (objToken && objToken[1]) {\\n                (0, _util.warn)('indexObjects: Found new \\\"obj\\\" inside of another \\\"obj\\\", ' + 'caused by missing \\\"endobj\\\" -- trying to recover.');\\n                contentLength -= objToken[1].length;\\n                break;\\n              }\\n            }\\n            startPos += contentLength;\\n          }\\n          var content = buffer.subarray(position, position + contentLength);\\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\\n            xrefStms.push(position - stream.start);\\n            this.xrefstms[position - stream.start] = 1;\\n          }\\n          position += contentLength;\\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\\\s/.test(token[7]))) {\\n          trailers.push(position);\\n          position += skipUntil(buffer, position, startxrefBytes);\\n        } else {\\n          position += token.length + 1;\\n        }\\n      }\\n      var i, ii;\\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\\n        this.startXRefQueue.push(xrefStms[i]);\\n        this.readXRef(true);\\n      }\\n      var dict;\\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\\n        stream.pos = trailers[i];\\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\\n        var obj = parser.getObj();\\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\n          continue;\\n        }\\n        dict = parser.getObj();\\n        if (!(0, _primitives.isDict)(dict)) {\\n          continue;\\n        }\\n        if (dict.has('ID')) {\\n          return dict;\\n        }\\n      }\\n      if (dict) {\\n        return dict;\\n      }\\n      throw new _util.InvalidPDFException('Invalid PDF structure');\\n    },\\n    readXRef: function XRef_readXRef(recoveryMode) {\\n      var stream = this.stream;\\n      var startXRefParsedCache = Object.create(null);\\n      try {\\n        while (this.startXRefQueue.length) {\\n          var startXRef = this.startXRefQueue[0];\\n          if (startXRefParsedCache[startXRef]) {\\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\\n            this.startXRefQueue.shift();\\n            continue;\\n          }\\n          startXRefParsedCache[startXRef] = true;\\n          stream.pos = startXRef + stream.start;\\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\n          var obj = parser.getObj();\\n          var dict;\\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\\n            dict = this.processXRefTable(parser);\\n            if (!this.topDict) {\\n              this.topDict = dict;\\n            }\\n            obj = dict.get('XRefStm');\\n            if (Number.isInteger(obj)) {\\n              var pos = obj;\\n              if (!(pos in this.xrefstms)) {\\n                this.xrefstms[pos] = 1;\\n                this.startXRefQueue.push(pos);\\n              }\\n            }\\n          } else if (Number.isInteger(obj)) {\\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\\n              throw new _util.FormatError('Invalid XRef stream');\\n            }\\n            dict = this.processXRefStream(obj);\\n            if (!this.topDict) {\\n              this.topDict = dict;\\n            }\\n            if (!dict) {\\n              throw new _util.FormatError('Failed to read XRef stream');\\n            }\\n          } else {\\n            throw new _util.FormatError('Invalid XRef stream header');\\n          }\\n          obj = dict.get('Prev');\\n          if (Number.isInteger(obj)) {\\n            this.startXRefQueue.push(obj);\\n          } else if ((0, _primitives.isRef)(obj)) {\\n            this.startXRefQueue.push(obj.num);\\n          }\\n          this.startXRefQueue.shift();\\n        }\\n        return this.topDict;\\n      } catch (e) {\\n        if (e instanceof _util.MissingDataException) {\\n          throw e;\\n        }\\n        (0, _util.info)('(while reading XRef): ' + e);\\n      }\\n      if (recoveryMode) {\\n        return;\\n      }\\n      throw new _util.XRefParseException();\\n    },\\n    getEntry: function XRef_getEntry(i) {\\n      var xrefEntry = this.entries[i];\\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\\n        return xrefEntry;\\n      }\\n      return null;\\n    },\\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\\n      if (!(0, _primitives.isRef)(obj)) {\\n        return obj;\\n      }\\n      return this.fetch(obj, suppressEncryption);\\n    },\\n    fetch: function XRef_fetch(ref, suppressEncryption) {\\n      if (!(0, _primitives.isRef)(ref)) {\\n        throw new Error('ref object is not a reference');\\n      }\\n      var num = ref.num;\\n      if (num in this.cache) {\\n        var cacheEntry = this.cache[num];\\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\\n          cacheEntry.objId = ref.toString();\\n        }\\n        return cacheEntry;\\n      }\\n      var xrefEntry = this.getEntry(num);\\n      if (xrefEntry === null) {\\n        return this.cache[num] = null;\\n      }\\n      if (xrefEntry.uncompressed) {\\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\\n      } else {\\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\\n      }\\n      if ((0, _primitives.isDict)(xrefEntry)) {\\n        xrefEntry.objId = ref.toString();\\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\\n        xrefEntry.dict.objId = ref.toString();\\n      }\\n      return xrefEntry;\\n    },\\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\\n      var gen = ref.gen;\\n      var num = ref.num;\\n      if (xrefEntry.gen !== gen) {\\n        throw new _util.FormatError('inconsistent generation in XRef');\\n      }\\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\n      var obj1 = parser.getObj();\\n      var obj2 = parser.getObj();\\n      var obj3 = parser.getObj();\\n      if (!Number.isInteger(obj1)) {\\n        obj1 = parseInt(obj1, 10);\\n      }\\n      if (!Number.isInteger(obj2)) {\\n        obj2 = parseInt(obj2, 10);\\n      }\\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\\n        throw new _util.FormatError('bad XRef entry');\\n      }\\n      if (obj3.cmd !== 'obj') {\\n        if (obj3.cmd.indexOf('obj') === 0) {\\n          num = parseInt(obj3.cmd.substring(3), 10);\\n          if (!Number.isNaN(num)) {\\n            return num;\\n          }\\n        }\\n        throw new _util.FormatError('bad XRef entry');\\n      }\\n      if (this.encrypt && !suppressEncryption) {\\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\\n      } else {\\n        xrefEntry = parser.getObj();\\n      }\\n      if (!(0, _primitives.isStream)(xrefEntry)) {\\n        this.cache[num] = xrefEntry;\\n      }\\n      return xrefEntry;\\n    },\\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\\n      var tableOffset = xrefEntry.offset;\\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\\n      if (!(0, _primitives.isStream)(stream)) {\\n        throw new _util.FormatError('bad ObjStm stream');\\n      }\\n      var first = stream.dict.get('First');\\n      var n = stream.dict.get('N');\\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\\n      }\\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\\n      parser.allowStreams = true;\\n      var i,\\n          entries = [],\\n          num,\\n          nums = [];\\n      for (i = 0; i < n; ++i) {\\n        num = parser.getObj();\\n        if (!Number.isInteger(num)) {\\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\\n        }\\n        nums.push(num);\\n        var offset = parser.getObj();\\n        if (!Number.isInteger(offset)) {\\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\\n        }\\n      }\\n      for (i = 0; i < n; ++i) {\\n        entries.push(parser.getObj());\\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\\n          parser.shift();\\n        }\\n        num = nums[i];\\n        var entry = this.entries[num];\\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\\n          this.cache[num] = entries[i];\\n        }\\n      }\\n      xrefEntry = entries[xrefEntry.gen];\\n      if (xrefEntry === undefined) {\\n        throw new _util.FormatError('bad XRef entry for compressed object');\\n      }\\n      return xrefEntry;\\n    },\\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\\n      if (!(0, _primitives.isRef)(obj)) {\\n        return Promise.resolve(obj);\\n      }\\n      return this.fetchAsync(obj, suppressEncryption);\\n    },\\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\\n      var streamManager = this.stream.manager;\\n      var xref = this;\\n      return new Promise(function tryFetch(resolve, reject) {\\n        try {\\n          resolve(xref.fetch(ref, suppressEncryption));\\n        } catch (e) {\\n          if (e instanceof _util.MissingDataException) {\\n            streamManager.requestRange(e.begin, e.end).then(function () {\\n              tryFetch(resolve, reject);\\n            }, reject);\\n            return;\\n          }\\n          reject(e);\\n        }\\n      });\\n    },\\n    getCatalogObj: function XRef_getCatalogObj() {\\n      return this.root;\\n    }\\n  };\\n  return XRef;\\n}();\\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\\n  function NameOrNumberTree(root, xref) {\\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\\n  }\\n  NameOrNumberTree.prototype = {\\n    getAll: function NameOrNumberTree_getAll() {\\n      var dict = Object.create(null);\\n      if (!this.root) {\\n        return dict;\\n      }\\n      var xref = this.xref;\\n      var processed = new _primitives.RefSet();\\n      processed.put(this.root);\\n      var queue = [this.root];\\n      while (queue.length > 0) {\\n        var i, n;\\n        var obj = xref.fetchIfRef(queue.shift());\\n        if (!(0, _primitives.isDict)(obj)) {\\n          continue;\\n        }\\n        if (obj.has('Kids')) {\\n          var kids = obj.get('Kids');\\n          for (i = 0, n = kids.length; i < n; i++) {\\n            var kid = kids[i];\\n            if (processed.has(kid)) {\\n              throw new _util.FormatError('Duplicate entry in \\\"' + this._type + '\\\" tree.');\\n            }\\n            queue.push(kid);\\n            processed.put(kid);\\n          }\\n          continue;\\n        }\\n        var entries = obj.get(this._type);\\n        if (Array.isArray(entries)) {\\n          for (i = 0, n = entries.length; i < n; i += 2) {\\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\\n          }\\n        }\\n      }\\n      return dict;\\n    },\\n    get: function NameOrNumberTree_get(key) {\\n      if (!this.root) {\\n        return null;\\n      }\\n      var xref = this.xref;\\n      var kidsOrEntries = xref.fetchIfRef(this.root);\\n      var loopCount = 0;\\n      var MAX_LEVELS = 10;\\n      var l, r, m;\\n      while (kidsOrEntries.has('Kids')) {\\n        if (++loopCount > MAX_LEVELS) {\\n          (0, _util.warn)('Search depth limit reached for \\\"' + this._type + '\\\" tree.');\\n          return null;\\n        }\\n        var kids = kidsOrEntries.get('Kids');\\n        if (!Array.isArray(kids)) {\\n          return null;\\n        }\\n        l = 0;\\n        r = kids.length - 1;\\n        while (l <= r) {\\n          m = l + r >> 1;\\n          var kid = xref.fetchIfRef(kids[m]);\\n          var limits = kid.get('Limits');\\n          if (key < xref.fetchIfRef(limits[0])) {\\n            r = m - 1;\\n          } else if (key > xref.fetchIfRef(limits[1])) {\\n            l = m + 1;\\n          } else {\\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\\n            break;\\n          }\\n        }\\n        if (l > r) {\\n          return null;\\n        }\\n      }\\n      var entries = kidsOrEntries.get(this._type);\\n      if (Array.isArray(entries)) {\\n        l = 0;\\n        r = entries.length - 2;\\n        while (l <= r) {\\n          m = l + r & ~1;\\n          var currentKey = xref.fetchIfRef(entries[m]);\\n          if (key < currentKey) {\\n            r = m - 2;\\n          } else if (key > currentKey) {\\n            l = m + 2;\\n          } else {\\n            return xref.fetchIfRef(entries[m + 1]);\\n          }\\n        }\\n      }\\n      return null;\\n    }\\n  };\\n  return NameOrNumberTree;\\n}();\\nvar NameTree = function NameTreeClosure() {\\n  function NameTree(root, xref) {\\n    this.root = root;\\n    this.xref = xref;\\n    this._type = 'Names';\\n  }\\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\\n  return NameTree;\\n}();\\nvar NumberTree = function NumberTreeClosure() {\\n  function NumberTree(root, xref) {\\n    this.root = root;\\n    this.xref = xref;\\n    this._type = 'Nums';\\n  }\\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\\n  return NumberTree;\\n}();\\nvar FileSpec = function FileSpecClosure() {\\n  function FileSpec(root, xref) {\\n    if (!root || !(0, _primitives.isDict)(root)) {\\n      return;\\n    }\\n    this.xref = xref;\\n    this.root = root;\\n    if (root.has('FS')) {\\n      this.fs = root.get('FS');\\n    }\\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\\n    if (root.has('RF')) {\\n      (0, _util.warn)('Related file specifications are not supported');\\n    }\\n    this.contentAvailable = true;\\n    if (!root.has('EF')) {\\n      this.contentAvailable = false;\\n      (0, _util.warn)('Non-embedded file specifications are not supported');\\n    }\\n  }\\n  function pickPlatformItem(dict) {\\n    if (dict.has('UF')) {\\n      return dict.get('UF');\\n    } else if (dict.has('F')) {\\n      return dict.get('F');\\n    } else if (dict.has('Unix')) {\\n      return dict.get('Unix');\\n    } else if (dict.has('Mac')) {\\n      return dict.get('Mac');\\n    } else if (dict.has('DOS')) {\\n      return dict.get('DOS');\\n    }\\n    return null;\\n  }\\n  FileSpec.prototype = {\\n    get filename() {\\n      if (!this._filename && this.root) {\\n        var filename = pickPlatformItem(this.root) || 'unnamed';\\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\\\\\\\\\/g, '\\\\\\\\').replace(/\\\\\\\\\\\\//g, '/').replace(/\\\\\\\\/g, '/');\\n      }\\n      return this._filename;\\n    },\\n    get content() {\\n      if (!this.contentAvailable) {\\n        return null;\\n      }\\n      if (!this.contentRef && this.root) {\\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\\n      }\\n      var content = null;\\n      if (this.contentRef) {\\n        var xref = this.xref;\\n        var fileObj = xref.fetchIfRef(this.contentRef);\\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\\n          content = fileObj.getBytes();\\n        } else {\\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\\n        }\\n      } else {\\n        (0, _util.warn)('Embedded file specification does not have a content');\\n      }\\n      return content;\\n    },\\n    get serializable() {\\n      return {\\n        filename: this.filename,\\n        content: this.content\\n      };\\n    }\\n  };\\n  return FileSpec;\\n}();\\nvar ObjectLoader = function () {\\n  function mayHaveChildren(value) {\\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\\n  }\\n  function addChildren(node, nodesToVisit) {\\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\\n      var dictKeys = dict.getKeys();\\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\\n        var rawValue = dict.getRaw(dictKeys[i]);\\n        if (mayHaveChildren(rawValue)) {\\n          nodesToVisit.push(rawValue);\\n        }\\n      }\\n    } else if (Array.isArray(node)) {\\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\\n        var value = node[_i];\\n        if (mayHaveChildren(value)) {\\n          nodesToVisit.push(value);\\n        }\\n      }\\n    }\\n  }\\n  function ObjectLoader(dict, keys, xref) {\\n    this.dict = dict;\\n    this.keys = keys;\\n    this.xref = xref;\\n    this.refSet = null;\\n    this.capability = null;\\n  }\\n  ObjectLoader.prototype = {\\n    load: function load() {\\n      this.capability = (0, _util.createPromiseCapability)();\\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\\n        this.capability.resolve();\\n        return this.capability.promise;\\n      }\\n      var keys = this.keys,\\n          dict = this.dict;\\n\\n      this.refSet = new _primitives.RefSet();\\n      var nodesToVisit = [];\\n      for (var i = 0, ii = keys.length; i < ii; i++) {\\n        var rawValue = dict.getRaw(keys[i]);\\n        if (rawValue !== undefined) {\\n          nodesToVisit.push(rawValue);\\n        }\\n      }\\n      this._walk(nodesToVisit);\\n      return this.capability.promise;\\n    },\\n    _walk: function _walk(nodesToVisit) {\\n      var _this3 = this;\\n\\n      var nodesToRevisit = [];\\n      var pendingRequests = [];\\n      while (nodesToVisit.length) {\\n        var currentNode = nodesToVisit.pop();\\n        if ((0, _primitives.isRef)(currentNode)) {\\n          if (this.refSet.has(currentNode)) {\\n            continue;\\n          }\\n          try {\\n            this.refSet.put(currentNode);\\n            currentNode = this.xref.fetch(currentNode);\\n          } catch (ex) {\\n            if (!(ex instanceof _util.MissingDataException)) {\\n              throw ex;\\n            }\\n            nodesToRevisit.push(currentNode);\\n            pendingRequests.push({\\n              begin: ex.begin,\\n              end: ex.end\\n            });\\n          }\\n        }\\n        if (currentNode && currentNode.getBaseStreams) {\\n          var baseStreams = currentNode.getBaseStreams();\\n          var foundMissingData = false;\\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\\n            var stream = baseStreams[i];\\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\\n              foundMissingData = true;\\n              pendingRequests.push({\\n                begin: stream.start,\\n                end: stream.end\\n              });\\n            }\\n          }\\n          if (foundMissingData) {\\n            nodesToRevisit.push(currentNode);\\n          }\\n        }\\n        addChildren(currentNode, nodesToVisit);\\n      }\\n      if (pendingRequests.length) {\\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\\n            var node = nodesToRevisit[_i2];\\n            if ((0, _primitives.isRef)(node)) {\\n              _this3.refSet.remove(node);\\n            }\\n          }\\n          _this3._walk(nodesToRevisit);\\n        }, this.capability.reject);\\n        return;\\n      }\\n      this.refSet = null;\\n      this.capability.resolve();\\n    }\\n  };\\n  return ObjectLoader;\\n}();\\nexports.Catalog = Catalog;\\nexports.ObjectLoader = ObjectLoader;\\nexports.XRef = XRef;\\nexports.FileSpec = FileSpec;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.OperatorList = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar QueueOptimizer = function QueueOptimizerClosure() {\\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\\n    var state = parentState;\\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\\n      var item = pattern[i];\\n      state = state[item] || (state[item] = []);\\n    }\\n    state[pattern[pattern.length - 1]] = {\\n      checkFn: checkFn,\\n      iterateFn: iterateFn,\\n      processFn: processFn\\n    };\\n  }\\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\\n    var iFirstPIMXO = iFirstSave + 2;\\n    for (var i = 0; i < count; i++) {\\n      var arg = argsArray[iFirstPIMXO + 4 * i];\\n      var imageMask = arg.length === 1 && arg[0];\\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\\n        continue;\\n      }\\n      break;\\n    }\\n    return count - i;\\n  }\\n  var InitialState = [];\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\\n    var fnArray = context.fnArray;\\n    var iFirstSave = context.iCurr - 3;\\n    var pos = (i - iFirstSave) % 4;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.save;\\n      case 1:\\n        return fnArray[i] === _util.OPS.transform;\\n      case 2:\\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\\n      case 3:\\n        return fnArray[i] === _util.OPS.restore;\\n    }\\n  }, function foundInlineImageGroup(context, i) {\\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\\n    var MAX_WIDTH = 1000;\\n    var IMAGE_PADDING = 1;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstSave = curr - 3;\\n    var iFirstTransform = curr - 2;\\n    var iFirstPIIXO = curr - 1;\\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\\n      return i - (i - iFirstSave) % 4;\\n    }\\n    var maxX = 0;\\n    var map = [],\\n        maxLineHeight = 0;\\n    var currentX = IMAGE_PADDING,\\n        currentY = IMAGE_PADDING;\\n    var q;\\n    for (q = 0; q < count; q++) {\\n      var transform = argsArray[iFirstTransform + (q << 2)];\\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\\n      if (currentX + img.width > MAX_WIDTH) {\\n        maxX = Math.max(maxX, currentX);\\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\\n        currentX = 0;\\n        maxLineHeight = 0;\\n      }\\n      map.push({\\n        transform: transform,\\n        x: currentX,\\n        y: currentY,\\n        w: img.width,\\n        h: img.height\\n      });\\n      currentX += img.width + 2 * IMAGE_PADDING;\\n      maxLineHeight = Math.max(maxLineHeight, img.height);\\n    }\\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\\n    var imgRowSize = imgWidth << 2;\\n    for (q = 0; q < count; q++) {\\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\\n      var rowSize = map[q].w << 2;\\n      var dataOffset = 0;\\n      var offset = map[q].x + map[q].y * imgWidth << 2;\\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\\n        dataOffset += rowSize;\\n        offset += imgRowSize;\\n      }\\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\\n      while (offset >= 0) {\\n        data[offset - 4] = data[offset];\\n        data[offset - 3] = data[offset + 1];\\n        data[offset - 2] = data[offset + 2];\\n        data[offset - 1] = data[offset + 3];\\n        data[offset + rowSize] = data[offset + rowSize - 4];\\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\\n        offset -= imgRowSize;\\n      }\\n    }\\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\\n    argsArray.splice(iFirstSave, count * 4, [{\\n      width: imgWidth,\\n      height: imgHeight,\\n      kind: _util.ImageKind.RGBA_32BPP,\\n      data: imgData\\n    }, map]);\\n    return iFirstSave + 1;\\n  });\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\\n    var fnArray = context.fnArray;\\n    var iFirstSave = context.iCurr - 3;\\n    var pos = (i - iFirstSave) % 4;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.save;\\n      case 1:\\n        return fnArray[i] === _util.OPS.transform;\\n      case 2:\\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\\n      case 3:\\n        return fnArray[i] === _util.OPS.restore;\\n    }\\n  }, function foundImageMaskGroup(context, i) {\\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstSave = curr - 3;\\n    var iFirstTransform = curr - 2;\\n    var iFirstPIMXO = curr - 1;\\n    var count = Math.floor((i - iFirstSave) / 4);\\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\\n      return i - (i - iFirstSave) % 4;\\n    }\\n    var q;\\n    var isSameImage = false;\\n    var iTransform, transformArgs;\\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\\n      isSameImage = true;\\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\\n      iTransform = iFirstTransform + 4;\\n      var iPIMXO = iFirstPIMXO + 4;\\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\\n        transformArgs = argsArray[iTransform];\\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\\n            isSameImage = false;\\n          } else {\\n            count = q;\\n          }\\n          break;\\n        }\\n      }\\n    }\\n    if (isSameImage) {\\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\\n      var positions = new Float32Array(count * 2);\\n      iTransform = iFirstTransform;\\n      for (q = 0; q < count; q++, iTransform += 4) {\\n        transformArgs = argsArray[iTransform];\\n        positions[q << 1] = transformArgs[4];\\n        positions[(q << 1) + 1] = transformArgs[5];\\n      }\\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\\n    } else {\\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\\n      var images = [];\\n      for (q = 0; q < count; q++) {\\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\\n        images.push({\\n          data: maskParams.data,\\n          width: maskParams.width,\\n          height: maskParams.height,\\n          transform: transformArgs\\n        });\\n      }\\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\\n      argsArray.splice(iFirstSave, count * 4, [images]);\\n    }\\n    return iFirstSave + 1;\\n  });\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\\n    var argsArray = context.argsArray;\\n    var iFirstTransform = context.iCurr - 2;\\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\\n  }, function (context, i) {\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var iFirstSave = context.iCurr - 3;\\n    var pos = (i - iFirstSave) % 4;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.save;\\n      case 1:\\n        if (fnArray[i] !== _util.OPS.transform) {\\n          return false;\\n        }\\n        var iFirstTransform = context.iCurr - 2;\\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\\n          return false;\\n        }\\n        return true;\\n      case 2:\\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\\n          return false;\\n        }\\n        var iFirstPIXO = context.iCurr - 1;\\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\\n        if (argsArray[i][0] !== firstPIXOArg0) {\\n          return false;\\n        }\\n        return true;\\n      case 3:\\n        return fnArray[i] === _util.OPS.restore;\\n    }\\n  }, function (context, i) {\\n    var MIN_IMAGES_IN_BLOCK = 3;\\n    var MAX_IMAGES_IN_BLOCK = 1000;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstSave = curr - 3;\\n    var iFirstTransform = curr - 2;\\n    var iFirstPIXO = curr - 1;\\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\\n    if (count < MIN_IMAGES_IN_BLOCK) {\\n      return i - (i - iFirstSave) % 4;\\n    }\\n    var positions = new Float32Array(count * 2);\\n    var iTransform = iFirstTransform;\\n    for (var q = 0; q < count; q++, iTransform += 4) {\\n      var transformArgs = argsArray[iTransform];\\n      positions[q << 1] = transformArgs[4];\\n      positions[(q << 1) + 1] = transformArgs[5];\\n    }\\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\\n    argsArray.splice(iFirstSave, count * 4, args);\\n    return iFirstSave + 1;\\n  });\\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var iFirstSave = context.iCurr - 4;\\n    var pos = (i - iFirstSave) % 5;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.beginText;\\n      case 1:\\n        return fnArray[i] === _util.OPS.setFont;\\n      case 2:\\n        return fnArray[i] === _util.OPS.setTextMatrix;\\n      case 3:\\n        if (fnArray[i] !== _util.OPS.showText) {\\n          return false;\\n        }\\n        var iFirstSetFont = context.iCurr - 3;\\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\\n          return false;\\n        }\\n        return true;\\n      case 4:\\n        return fnArray[i] === _util.OPS.endText;\\n    }\\n  }, function (context, i) {\\n    var MIN_CHARS_IN_BLOCK = 3;\\n    var MAX_CHARS_IN_BLOCK = 1000;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstBeginText = curr - 4;\\n    var iFirstSetFont = curr - 3;\\n    var iFirstSetTextMatrix = curr - 2;\\n    var iFirstShowText = curr - 1;\\n    var iFirstEndText = curr;\\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\\n    if (count < MIN_CHARS_IN_BLOCK) {\\n      return i - (i - iFirstBeginText) % 5;\\n    }\\n    var iFirst = iFirstBeginText;\\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\\n      count++;\\n      iFirst -= 5;\\n    }\\n    var iEndText = iFirst + 4;\\n    for (var q = 1; q < count; q++) {\\n      fnArray.splice(iEndText, 3);\\n      argsArray.splice(iEndText, 3);\\n      iEndText += 2;\\n    }\\n    return iEndText + 1;\\n  });\\n  function QueueOptimizer(queue) {\\n    this.queue = queue;\\n    this.state = null;\\n    this.context = {\\n      iCurr: 0,\\n      fnArray: queue.fnArray,\\n      argsArray: queue.argsArray\\n    };\\n    this.match = null;\\n    this.lastProcessed = 0;\\n  }\\n  QueueOptimizer.prototype = {\\n    _optimize: function _optimize() {\\n      var fnArray = this.queue.fnArray;\\n      var i = this.lastProcessed,\\n          ii = fnArray.length;\\n      var state = this.state;\\n      var match = this.match;\\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\\n        this.lastProcessed = ii;\\n        return;\\n      }\\n      var context = this.context;\\n      while (i < ii) {\\n        if (match) {\\n          var iterate = (0, match.iterateFn)(context, i);\\n          if (iterate) {\\n            i++;\\n            continue;\\n          }\\n          i = (0, match.processFn)(context, i + 1);\\n          ii = fnArray.length;\\n          match = null;\\n          state = null;\\n          if (i >= ii) {\\n            break;\\n          }\\n        }\\n        state = (state || InitialState)[fnArray[i]];\\n        if (!state || Array.isArray(state)) {\\n          i++;\\n          continue;\\n        }\\n        context.iCurr = i;\\n        i++;\\n        if (state.checkFn && !(0, state.checkFn)(context)) {\\n          state = null;\\n          continue;\\n        }\\n        match = state;\\n        state = null;\\n      }\\n      this.state = state;\\n      this.match = match;\\n      this.lastProcessed = i;\\n    },\\n    push: function push(fn, args) {\\n      this.queue.fnArray.push(fn);\\n      this.queue.argsArray.push(args);\\n      this._optimize();\\n    },\\n    flush: function flush() {\\n      while (this.match) {\\n        var length = this.queue.fnArray.length;\\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\\n        this.match = null;\\n        this.state = null;\\n        this._optimize();\\n      }\\n    },\\n    reset: function reset() {\\n      this.state = null;\\n      this.match = null;\\n      this.lastProcessed = 0;\\n    }\\n  };\\n  return QueueOptimizer;\\n}();\\nvar NullOptimizer = function NullOptimizerClosure() {\\n  function NullOptimizer(queue) {\\n    this.queue = queue;\\n  }\\n  NullOptimizer.prototype = {\\n    push: function push(fn, args) {\\n      this.queue.fnArray.push(fn);\\n      this.queue.argsArray.push(args);\\n    },\\n    flush: function flush() {}\\n  };\\n  return NullOptimizer;\\n}();\\nvar OperatorList = function OperatorListClosure() {\\n  var CHUNK_SIZE = 1000;\\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\\n  function getTransfers(queue) {\\n    var transfers = [];\\n    var fnArray = queue.fnArray,\\n        argsArray = queue.argsArray;\\n    for (var i = 0, ii = queue.length; i < ii; i++) {\\n      switch (fnArray[i]) {\\n        case _util.OPS.paintInlineImageXObject:\\n        case _util.OPS.paintInlineImageXObjectGroup:\\n        case _util.OPS.paintImageMaskXObject:\\n          var arg = argsArray[i][0];\\n          if (!arg.cached) {\\n            transfers.push(arg.data.buffer);\\n          }\\n          break;\\n      }\\n    }\\n    return transfers;\\n  }\\n  function OperatorList(intent, messageHandler, pageIndex) {\\n    this.messageHandler = messageHandler;\\n    this.fnArray = [];\\n    this.argsArray = [];\\n    if (messageHandler && this.intent !== 'oplist') {\\n      this.optimizer = new QueueOptimizer(this);\\n    } else {\\n      this.optimizer = new NullOptimizer(this);\\n    }\\n    this.dependencies = Object.create(null);\\n    this._totalLength = 0;\\n    this.pageIndex = pageIndex;\\n    this.intent = intent;\\n    this.weight = 0;\\n  }\\n  OperatorList.prototype = {\\n    get length() {\\n      return this.argsArray.length;\\n    },\\n    get totalLength() {\\n      return this._totalLength + this.length;\\n    },\\n    addOp: function addOp(fn, args) {\\n      this.optimizer.push(fn, args);\\n      this.weight++;\\n      if (this.messageHandler) {\\n        if (this.weight >= CHUNK_SIZE) {\\n          this.flush();\\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\\n          this.flush();\\n        }\\n      }\\n    },\\n    addDependency: function addDependency(dependency) {\\n      if (dependency in this.dependencies) {\\n        return;\\n      }\\n      this.dependencies[dependency] = true;\\n      this.addOp(_util.OPS.dependency, [dependency]);\\n    },\\n    addDependencies: function addDependencies(dependencies) {\\n      for (var key in dependencies) {\\n        this.addDependency(key);\\n      }\\n    },\\n    addOpList: function addOpList(opList) {\\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\\n      for (var i = 0, ii = opList.length; i < ii; i++) {\\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\\n      }\\n    },\\n    getIR: function getIR() {\\n      return {\\n        fnArray: this.fnArray,\\n        argsArray: this.argsArray,\\n        length: this.length\\n      };\\n    },\\n    flush: function flush(lastChunk) {\\n      this.optimizer.flush();\\n      var transfers = getTransfers(this);\\n      var length = this.length;\\n      this._totalLength += length;\\n      this.messageHandler.send('RenderPageChunk', {\\n        operatorList: {\\n          fnArray: this.fnArray,\\n          argsArray: this.argsArray,\\n          lastChunk: lastChunk,\\n          length: length\\n        },\\n        pageIndex: this.pageIndex,\\n        intent: this.intent\\n      }, transfers);\\n      this.dependencies = Object.create(null);\\n      this.fnArray.length = 0;\\n      this.argsArray.length = 0;\\n      this.weight = 0;\\n      this.optimizer.reset();\\n    }\\n  };\\n  return OperatorList;\\n}();\\nexports.OperatorList = OperatorList;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\\n\\nvar _stream = require('./stream');\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar _ccitt_stream = require('./ccitt_stream');\\n\\nvar _jbig2_stream = require('./jbig2_stream');\\n\\nvar _jpeg_stream = require('./jpeg_stream');\\n\\nvar _jpx_stream = require('./jpx_stream');\\n\\nvar MAX_LENGTH_TO_CACHE = 1000;\\nvar Parser = function ParserClosure() {\\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\\n    this.lexer = lexer;\\n    this.allowStreams = allowStreams;\\n    this.xref = xref;\\n    this.recoveryMode = recoveryMode || false;\\n    this.imageCache = Object.create(null);\\n    this.refill();\\n  }\\n  Parser.prototype = {\\n    refill: function Parser_refill() {\\n      this.buf1 = this.lexer.getObj();\\n      this.buf2 = this.lexer.getObj();\\n    },\\n    shift: function Parser_shift() {\\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\\n        this.buf1 = this.buf2;\\n        this.buf2 = null;\\n      } else {\\n        this.buf1 = this.buf2;\\n        this.buf2 = this.lexer.getObj();\\n      }\\n    },\\n    tryShift: function Parser_tryShift() {\\n      try {\\n        this.shift();\\n        return true;\\n      } catch (e) {\\n        if (e instanceof _util.MissingDataException) {\\n          throw e;\\n        }\\n        return false;\\n      }\\n    },\\n    getObj: function Parser_getObj(cipherTransform) {\\n      var buf1 = this.buf1;\\n      this.shift();\\n      if (buf1 instanceof _primitives.Cmd) {\\n        switch (buf1.cmd) {\\n          case 'BI':\\n            return this.makeInlineImage(cipherTransform);\\n          case '[':\\n            var array = [];\\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\\n              array.push(this.getObj(cipherTransform));\\n            }\\n            if ((0, _primitives.isEOF)(this.buf1)) {\\n              if (!this.recoveryMode) {\\n                throw new _util.FormatError('End of file inside array');\\n              }\\n              return array;\\n            }\\n            this.shift();\\n            return array;\\n          case '<<':\\n            var dict = new _primitives.Dict(this.xref);\\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\\n              if (!(0, _primitives.isName)(this.buf1)) {\\n                (0, _util.info)('Malformed dictionary: key must be a name object');\\n                this.shift();\\n                continue;\\n              }\\n              var key = this.buf1.name;\\n              this.shift();\\n              if ((0, _primitives.isEOF)(this.buf1)) {\\n                break;\\n              }\\n              dict.set(key, this.getObj(cipherTransform));\\n            }\\n            if ((0, _primitives.isEOF)(this.buf1)) {\\n              if (!this.recoveryMode) {\\n                throw new _util.FormatError('End of file inside dictionary');\\n              }\\n              return dict;\\n            }\\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\\n            }\\n            this.shift();\\n            return dict;\\n          default:\\n            return buf1;\\n        }\\n      }\\n      if (Number.isInteger(buf1)) {\\n        var num = buf1;\\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\\n          var ref = new _primitives.Ref(num, this.buf1);\\n          this.shift();\\n          this.shift();\\n          return ref;\\n        }\\n        return num;\\n      }\\n      if ((0, _util.isString)(buf1)) {\\n        var str = buf1;\\n        if (cipherTransform) {\\n          str = cipherTransform.decryptString(str);\\n        }\\n        return str;\\n      }\\n      return buf1;\\n    },\\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\\n      var E = 0x45,\\n          I = 0x49,\\n          SPACE = 0x20,\\n          LF = 0xA,\\n          CR = 0xD;\\n      var n = 10,\\n          NUL = 0x0;\\n      var startPos = stream.pos,\\n          state = 0,\\n          ch = void 0,\\n          maybeEIPos = void 0;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (state === 0) {\\n          state = ch === E ? 1 : 0;\\n        } else if (state === 1) {\\n          state = ch === I ? 2 : 0;\\n        } else {\\n          (0, _util.assert)(state === 2);\\n          if (ch === SPACE || ch === LF || ch === CR) {\\n            maybeEIPos = stream.pos;\\n            var followingBytes = stream.peekBytes(n);\\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\\n              ch = followingBytes[i];\\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\\n                continue;\\n              }\\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\\n                state = 0;\\n                break;\\n              }\\n            }\\n            if (state === 2) {\\n              break;\\n            }\\n          } else {\\n            state = 0;\\n          }\\n        }\\n      }\\n      if (ch === -1) {\\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\\n        if (maybeEIPos) {\\n          (0, _util.warn)('... trying to recover by using the last \\\"EI\\\" occurrence.');\\n          stream.skip(-(stream.pos - maybeEIPos));\\n        }\\n      }\\n      return stream.pos - 4 - startPos;\\n    },\\n\\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\\n      var startPos = stream.pos,\\n          foundEOI = false,\\n          b,\\n          markerLength,\\n          length;\\n      while ((b = stream.getByte()) !== -1) {\\n        if (b !== 0xFF) {\\n          continue;\\n        }\\n        switch (stream.getByte()) {\\n          case 0x00:\\n            break;\\n          case 0xFF:\\n            stream.skip(-1);\\n            break;\\n          case 0xD9:\\n            foundEOI = true;\\n            break;\\n          case 0xC0:\\n          case 0xC1:\\n          case 0xC2:\\n          case 0xC3:\\n          case 0xC5:\\n          case 0xC6:\\n          case 0xC7:\\n          case 0xC9:\\n          case 0xCA:\\n          case 0xCB:\\n          case 0xCD:\\n          case 0xCE:\\n          case 0xCF:\\n          case 0xC4:\\n          case 0xCC:\\n          case 0xDA:\\n          case 0xDB:\\n          case 0xDC:\\n          case 0xDD:\\n          case 0xDE:\\n          case 0xDF:\\n          case 0xE0:\\n          case 0xE1:\\n          case 0xE2:\\n          case 0xE3:\\n          case 0xE4:\\n          case 0xE5:\\n          case 0xE6:\\n          case 0xE7:\\n          case 0xE8:\\n          case 0xE9:\\n          case 0xEA:\\n          case 0xEB:\\n          case 0xEC:\\n          case 0xED:\\n          case 0xEE:\\n          case 0xEF:\\n          case 0xFE:\\n            markerLength = stream.getUint16();\\n            if (markerLength > 2) {\\n              stream.skip(markerLength - 2);\\n            } else {\\n              stream.skip(-2);\\n            }\\n            break;\\n        }\\n        if (foundEOI) {\\n          break;\\n        }\\n      }\\n      length = stream.pos - startPos;\\n      if (b === -1) {\\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\\n        stream.skip(-length);\\n        return this.findDefaultInlineStreamEnd(stream);\\n      }\\n      this.inlineStreamSkipEI(stream);\\n      return length;\\n    },\\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\\n      var TILDE = 0x7E,\\n          GT = 0x3E;\\n      var startPos = stream.pos,\\n          ch,\\n          length;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (ch === TILDE && stream.peekByte() === GT) {\\n          stream.skip();\\n          break;\\n        }\\n      }\\n      length = stream.pos - startPos;\\n      if (ch === -1) {\\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\n        stream.skip(-length);\\n        return this.findDefaultInlineStreamEnd(stream);\\n      }\\n      this.inlineStreamSkipEI(stream);\\n      return length;\\n    },\\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\\n      var GT = 0x3E;\\n      var startPos = stream.pos,\\n          ch,\\n          length;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (ch === GT) {\\n          break;\\n        }\\n      }\\n      length = stream.pos - startPos;\\n      if (ch === -1) {\\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\n        stream.skip(-length);\\n        return this.findDefaultInlineStreamEnd(stream);\\n      }\\n      this.inlineStreamSkipEI(stream);\\n      return length;\\n    },\\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\\n      var E = 0x45,\\n          I = 0x49;\\n      var state = 0,\\n          ch;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (state === 0) {\\n          state = ch === E ? 1 : 0;\\n        } else if (state === 1) {\\n          state = ch === I ? 2 : 0;\\n        } else if (state === 2) {\\n          break;\\n        }\\n      }\\n    },\\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\\n      var lexer = this.lexer;\\n      var stream = lexer.stream;\\n      var dict = new _primitives.Dict(this.xref);\\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\\n        if (!(0, _primitives.isName)(this.buf1)) {\\n          throw new _util.FormatError('Dictionary key must be a name object');\\n        }\\n        var key = this.buf1.name;\\n        this.shift();\\n        if ((0, _primitives.isEOF)(this.buf1)) {\\n          break;\\n        }\\n        dict.set(key, this.getObj(cipherTransform));\\n      }\\n      var filter = dict.get('Filter', 'F'),\\n          filterName;\\n      if ((0, _primitives.isName)(filter)) {\\n        filterName = filter.name;\\n      } else if (Array.isArray(filter)) {\\n        var filterZero = this.xref.fetchIfRef(filter[0]);\\n        if ((0, _primitives.isName)(filterZero)) {\\n          filterName = filterZero.name;\\n        }\\n      }\\n      var startPos = stream.pos,\\n          length,\\n          i,\\n          ii;\\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\\n        length = this.findDCTDecodeInlineStreamEnd(stream);\\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\\n      } else {\\n        length = this.findDefaultInlineStreamEnd(stream);\\n      }\\n      var imageStream = stream.makeSubStream(startPos, length, dict);\\n      var adler32;\\n      if (length < MAX_LENGTH_TO_CACHE) {\\n        var imageBytes = imageStream.getBytes();\\n        imageStream.reset();\\n        var a = 1;\\n        var b = 0;\\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\\n          a += imageBytes[i] & 0xff;\\n          b += a;\\n        }\\n        adler32 = b % 65521 << 16 | a % 65521;\\n        var cacheEntry = this.imageCache[adler32];\\n        if (cacheEntry !== undefined) {\\n          this.buf2 = _primitives.Cmd.get('EI');\\n          this.shift();\\n          cacheEntry.reset();\\n          return cacheEntry;\\n        }\\n      }\\n      if (cipherTransform) {\\n        imageStream = cipherTransform.createStream(imageStream, length);\\n      }\\n      imageStream = this.filter(imageStream, dict, length);\\n      imageStream.dict = dict;\\n      if (adler32 !== undefined) {\\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\\n        this.imageCache[adler32] = imageStream;\\n      }\\n      this.buf2 = _primitives.Cmd.get('EI');\\n      this.shift();\\n      return imageStream;\\n    },\\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\\n      var lexer = this.lexer;\\n      var stream = lexer.stream;\\n      lexer.skipToNextLine();\\n      var pos = stream.pos - 1;\\n      var length = dict.get('Length');\\n      if (!Number.isInteger(length)) {\\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\\n        length = 0;\\n      }\\n      stream.pos = pos + length;\\n      lexer.nextChar();\\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\\n        this.shift();\\n      } else {\\n        stream.pos = pos;\\n        var SCAN_BLOCK_SIZE = 2048;\\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\\n        var skipped = 0,\\n            found = false,\\n            i,\\n            j;\\n        while (stream.pos < stream.end) {\\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\\n          if (scanLength <= 0) {\\n            break;\\n          }\\n          found = false;\\n          i = 0;\\n          while (i < scanLength) {\\n            j = 0;\\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\\n              j++;\\n            }\\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\\n              found = true;\\n              break;\\n            }\\n            i++;\\n          }\\n          if (found) {\\n            skipped += i;\\n            stream.pos += i;\\n            break;\\n          }\\n          skipped += scanLength;\\n          stream.pos += scanLength;\\n        }\\n        if (!found) {\\n          throw new _util.FormatError('Missing endstream');\\n        }\\n        length = skipped;\\n        lexer.nextChar();\\n        this.shift();\\n        this.shift();\\n      }\\n      this.shift();\\n      stream = stream.makeSubStream(pos, length, dict);\\n      if (cipherTransform) {\\n        stream = cipherTransform.createStream(stream, length);\\n      }\\n      stream = this.filter(stream, dict, length);\\n      stream.dict = dict;\\n      return stream;\\n    },\\n    filter: function Parser_filter(stream, dict, length) {\\n      var filter = dict.get('Filter', 'F');\\n      var params = dict.get('DecodeParms', 'DP');\\n      if ((0, _primitives.isName)(filter)) {\\n        if (Array.isArray(params)) {\\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\\n        }\\n        return this.makeFilter(stream, filter.name, length, params);\\n      }\\n      var maybeLength = length;\\n      if (Array.isArray(filter)) {\\n        var filterArray = filter;\\n        var paramsArray = params;\\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\\n          filter = this.xref.fetchIfRef(filterArray[i]);\\n          if (!(0, _primitives.isName)(filter)) {\\n            throw new _util.FormatError('Bad filter name: ' + filter);\\n          }\\n          params = null;\\n          if (Array.isArray(paramsArray) && i in paramsArray) {\\n            params = this.xref.fetchIfRef(paramsArray[i]);\\n          }\\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\\n          maybeLength = null;\\n        }\\n      }\\n      return stream;\\n    },\\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\\n      if (maybeLength === 0) {\\n        (0, _util.warn)('Empty \\\"' + name + '\\\" stream.');\\n        return new _stream.NullStream();\\n      }\\n      try {\\n        var xrefStreamStats = this.xref.stats.streamTypes;\\n        if (name === 'FlateDecode' || name === 'Fl') {\\n          xrefStreamStats[_util.StreamType.FLATE] = true;\\n          if (params) {\\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\\n          }\\n          return new _stream.FlateStream(stream, maybeLength);\\n        }\\n        if (name === 'LZWDecode' || name === 'LZW') {\\n          xrefStreamStats[_util.StreamType.LZW] = true;\\n          var earlyChange = 1;\\n          if (params) {\\n            if (params.has('EarlyChange')) {\\n              earlyChange = params.get('EarlyChange');\\n            }\\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\\n          }\\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\\n        }\\n        if (name === 'DCTDecode' || name === 'DCT') {\\n          xrefStreamStats[_util.StreamType.DCT] = true;\\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\\n        }\\n        if (name === 'JPXDecode' || name === 'JPX') {\\n          xrefStreamStats[_util.StreamType.JPX] = true;\\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\\n        }\\n        if (name === 'ASCII85Decode' || name === 'A85') {\\n          xrefStreamStats[_util.StreamType.A85] = true;\\n          return new _stream.Ascii85Stream(stream, maybeLength);\\n        }\\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\\n          xrefStreamStats[_util.StreamType.AHX] = true;\\n          return new _stream.AsciiHexStream(stream, maybeLength);\\n        }\\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\\n          xrefStreamStats[_util.StreamType.CCF] = true;\\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\\n        }\\n        if (name === 'RunLengthDecode' || name === 'RL') {\\n          xrefStreamStats[_util.StreamType.RL] = true;\\n          return new _stream.RunLengthStream(stream, maybeLength);\\n        }\\n        if (name === 'JBIG2Decode') {\\n          xrefStreamStats[_util.StreamType.JBIG] = true;\\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\\n        }\\n        (0, _util.warn)('filter \\\"' + name + '\\\" not supported yet');\\n        return stream;\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Invalid stream: \\\\\\\"' + ex + '\\\\\\\"');\\n        return new _stream.NullStream();\\n      }\\n    }\\n  };\\n  return Parser;\\n}();\\nvar Lexer = function LexerClosure() {\\n  function Lexer(stream, knownCommands) {\\n    this.stream = stream;\\n    this.nextChar();\\n    this.strBuf = [];\\n    this.knownCommands = knownCommands;\\n  }\\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n  function toHexDigit(ch) {\\n    if (ch >= 0x30 && ch <= 0x39) {\\n      return ch & 0x0F;\\n    }\\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\n      return (ch & 0x0F) + 9;\\n    }\\n    return -1;\\n  }\\n  Lexer.prototype = {\\n    nextChar: function Lexer_nextChar() {\\n      return this.currentChar = this.stream.getByte();\\n    },\\n    peekChar: function Lexer_peekChar() {\\n      return this.stream.peekByte();\\n    },\\n    getNumber: function Lexer_getNumber() {\\n      var ch = this.currentChar;\\n      var eNotation = false;\\n      var divideBy = 0;\\n      var sign = 1;\\n      if (ch === 0x2D) {\\n        sign = -1;\\n        ch = this.nextChar();\\n        if (ch === 0x2D) {\\n          ch = this.nextChar();\\n        }\\n      } else if (ch === 0x2B) {\\n        ch = this.nextChar();\\n      }\\n      if (ch === 0x2E) {\\n        divideBy = 10;\\n        ch = this.nextChar();\\n      }\\n      if (ch === 0x0A || ch === 0x0D) {\\n        do {\\n          ch = this.nextChar();\\n        } while (ch === 0x0A || ch === 0x0D);\\n      }\\n      if (ch < 0x30 || ch > 0x39) {\\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\\n      }\\n      var baseValue = ch - 0x30;\\n      var powerValue = 0;\\n      var powerValueSign = 1;\\n      while ((ch = this.nextChar()) >= 0) {\\n        if (0x30 <= ch && ch <= 0x39) {\\n          var currentDigit = ch - 0x30;\\n          if (eNotation) {\\n            powerValue = powerValue * 10 + currentDigit;\\n          } else {\\n            if (divideBy !== 0) {\\n              divideBy *= 10;\\n            }\\n            baseValue = baseValue * 10 + currentDigit;\\n          }\\n        } else if (ch === 0x2E) {\\n          if (divideBy === 0) {\\n            divideBy = 1;\\n          } else {\\n            break;\\n          }\\n        } else if (ch === 0x2D) {\\n          (0, _util.warn)('Badly formatted number');\\n        } else if (ch === 0x45 || ch === 0x65) {\\n          ch = this.peekChar();\\n          if (ch === 0x2B || ch === 0x2D) {\\n            powerValueSign = ch === 0x2D ? -1 : 1;\\n            this.nextChar();\\n          } else if (ch < 0x30 || ch > 0x39) {\\n            break;\\n          }\\n          eNotation = true;\\n        } else {\\n          break;\\n        }\\n      }\\n      if (divideBy !== 0) {\\n        baseValue /= divideBy;\\n      }\\n      if (eNotation) {\\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\\n      }\\n      return sign * baseValue;\\n    },\\n    getString: function Lexer_getString() {\\n      var numParen = 1;\\n      var done = false;\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      var ch = this.nextChar();\\n      while (true) {\\n        var charBuffered = false;\\n        switch (ch | 0) {\\n          case -1:\\n            (0, _util.warn)('Unterminated string');\\n            done = true;\\n            break;\\n          case 0x28:\\n            ++numParen;\\n            strBuf.push('(');\\n            break;\\n          case 0x29:\\n            if (--numParen === 0) {\\n              this.nextChar();\\n              done = true;\\n            } else {\\n              strBuf.push(')');\\n            }\\n            break;\\n          case 0x5C:\\n            ch = this.nextChar();\\n            switch (ch) {\\n              case -1:\\n                (0, _util.warn)('Unterminated string');\\n                done = true;\\n                break;\\n              case 0x6E:\\n                strBuf.push('\\\\n');\\n                break;\\n              case 0x72:\\n                strBuf.push('\\\\r');\\n                break;\\n              case 0x74:\\n                strBuf.push('\\\\t');\\n                break;\\n              case 0x62:\\n                strBuf.push('\\\\b');\\n                break;\\n              case 0x66:\\n                strBuf.push('\\\\f');\\n                break;\\n              case 0x5C:\\n              case 0x28:\\n              case 0x29:\\n                strBuf.push(String.fromCharCode(ch));\\n                break;\\n              case 0x30:\\n              case 0x31:\\n              case 0x32:\\n              case 0x33:\\n              case 0x34:\\n              case 0x35:\\n              case 0x36:\\n              case 0x37:\\n                var x = ch & 0x0F;\\n                ch = this.nextChar();\\n                charBuffered = true;\\n                if (ch >= 0x30 && ch <= 0x37) {\\n                  x = (x << 3) + (ch & 0x0F);\\n                  ch = this.nextChar();\\n                  if (ch >= 0x30 && ch <= 0x37) {\\n                    charBuffered = false;\\n                    x = (x << 3) + (ch & 0x0F);\\n                  }\\n                }\\n                strBuf.push(String.fromCharCode(x));\\n                break;\\n              case 0x0D:\\n                if (this.peekChar() === 0x0A) {\\n                  this.nextChar();\\n                }\\n                break;\\n              case 0x0A:\\n                break;\\n              default:\\n                strBuf.push(String.fromCharCode(ch));\\n                break;\\n            }\\n            break;\\n          default:\\n            strBuf.push(String.fromCharCode(ch));\\n            break;\\n        }\\n        if (done) {\\n          break;\\n        }\\n        if (!charBuffered) {\\n          ch = this.nextChar();\\n        }\\n      }\\n      return strBuf.join('');\\n    },\\n    getName: function Lexer_getName() {\\n      var ch, previousCh;\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\n        if (ch === 0x23) {\\n          ch = this.nextChar();\\n          if (specialChars[ch]) {\\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\\n            strBuf.push('#');\\n            break;\\n          }\\n          var x = toHexDigit(ch);\\n          if (x !== -1) {\\n            previousCh = ch;\\n            ch = this.nextChar();\\n            var x2 = toHexDigit(ch);\\n            if (x2 === -1) {\\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\\n              strBuf.push('#', String.fromCharCode(previousCh));\\n              if (specialChars[ch]) {\\n                break;\\n              }\\n              strBuf.push(String.fromCharCode(ch));\\n              continue;\\n            }\\n            strBuf.push(String.fromCharCode(x << 4 | x2));\\n          } else {\\n            strBuf.push('#', String.fromCharCode(ch));\\n          }\\n        } else {\\n          strBuf.push(String.fromCharCode(ch));\\n        }\\n      }\\n      if (strBuf.length > 127) {\\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\\n      }\\n      return _primitives.Name.get(strBuf.join(''));\\n    },\\n    getHexString: function Lexer_getHexString() {\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      var ch = this.currentChar;\\n      var isFirstHex = true;\\n      var firstDigit;\\n      var secondDigit;\\n      while (true) {\\n        if (ch < 0) {\\n          (0, _util.warn)('Unterminated hex string');\\n          break;\\n        } else if (ch === 0x3E) {\\n          this.nextChar();\\n          break;\\n        } else if (specialChars[ch] === 1) {\\n          ch = this.nextChar();\\n          continue;\\n        } else {\\n          if (isFirstHex) {\\n            firstDigit = toHexDigit(ch);\\n            if (firstDigit === -1) {\\n              (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\n              ch = this.nextChar();\\n              continue;\\n            }\\n          } else {\\n            secondDigit = toHexDigit(ch);\\n            if (secondDigit === -1) {\\n              (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\n              ch = this.nextChar();\\n              continue;\\n            }\\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\\n          }\\n          isFirstHex = !isFirstHex;\\n          ch = this.nextChar();\\n        }\\n      }\\n      return strBuf.join('');\\n    },\\n    getObj: function Lexer_getObj() {\\n      var comment = false;\\n      var ch = this.currentChar;\\n      while (true) {\\n        if (ch < 0) {\\n          return _primitives.EOF;\\n        }\\n        if (comment) {\\n          if (ch === 0x0A || ch === 0x0D) {\\n            comment = false;\\n          }\\n        } else if (ch === 0x25) {\\n          comment = true;\\n        } else if (specialChars[ch] !== 1) {\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n      switch (ch | 0) {\\n        case 0x30:\\n        case 0x31:\\n        case 0x32:\\n        case 0x33:\\n        case 0x34:\\n        case 0x35:\\n        case 0x36:\\n        case 0x37:\\n        case 0x38:\\n        case 0x39:\\n        case 0x2B:\\n        case 0x2D:\\n        case 0x2E:\\n          return this.getNumber();\\n        case 0x28:\\n          return this.getString();\\n        case 0x2F:\\n          return this.getName();\\n        case 0x5B:\\n          this.nextChar();\\n          return _primitives.Cmd.get('[');\\n        case 0x5D:\\n          this.nextChar();\\n          return _primitives.Cmd.get(']');\\n        case 0x3C:\\n          ch = this.nextChar();\\n          if (ch === 0x3C) {\\n            this.nextChar();\\n            return _primitives.Cmd.get('<<');\\n          }\\n          return this.getHexString();\\n        case 0x3E:\\n          ch = this.nextChar();\\n          if (ch === 0x3E) {\\n            this.nextChar();\\n            return _primitives.Cmd.get('>>');\\n          }\\n          return _primitives.Cmd.get('>');\\n        case 0x7B:\\n          this.nextChar();\\n          return _primitives.Cmd.get('{');\\n        case 0x7D:\\n          this.nextChar();\\n          return _primitives.Cmd.get('}');\\n        case 0x29:\\n          this.nextChar();\\n          throw new _util.FormatError('Illegal character: ' + ch);\\n      }\\n      var str = String.fromCharCode(ch);\\n      var knownCommands = this.knownCommands;\\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\n        var possibleCommand = str + String.fromCharCode(ch);\\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\\n          break;\\n        }\\n        if (str.length === 128) {\\n          throw new _util.FormatError('Command token too long: ' + str.length);\\n        }\\n        str = possibleCommand;\\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\n      }\\n      if (str === 'true') {\\n        return true;\\n      }\\n      if (str === 'false') {\\n        return false;\\n      }\\n      if (str === 'null') {\\n        return null;\\n      }\\n      return _primitives.Cmd.get(str);\\n    },\\n    skipToNextLine: function Lexer_skipToNextLine() {\\n      var ch = this.currentChar;\\n      while (ch >= 0) {\\n        if (ch === 0x0D) {\\n          ch = this.nextChar();\\n          if (ch === 0x0A) {\\n            this.nextChar();\\n          }\\n          break;\\n        } else if (ch === 0x0A) {\\n          this.nextChar();\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n    }\\n  };\\n  return Lexer;\\n}();\\nvar Linearization = {\\n  create: function LinearizationCreate(stream) {\\n    function getInt(name, allowZeroValue) {\\n      var obj = linDict.get(name);\\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\\n        return obj;\\n      }\\n      throw new Error('The \\\"' + name + '\\\" parameter in the linearization ' + 'dictionary is invalid.');\\n    }\\n    function getHints() {\\n      var hints = linDict.get('H'),\\n          hintsLength,\\n          item;\\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\\n        for (var index = 0; index < hintsLength; index++) {\\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\\n          }\\n        }\\n        return hints;\\n      }\\n      throw new Error('Hint array in the linearization dictionary is invalid.');\\n    }\\n    var parser = new Parser(new Lexer(stream), false, null);\\n    var obj1 = parser.getObj();\\n    var obj2 = parser.getObj();\\n    var obj3 = parser.getObj();\\n    var linDict = parser.getObj();\\n    var obj, length;\\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\\n      return null;\\n    } else if ((length = getInt('L')) !== stream.length) {\\n      throw new Error('The \\\"L\\\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\\n    }\\n    return {\\n      length: length,\\n      hints: getHints(),\\n      objectNumberFirst: getInt('O'),\\n      endFirst: getInt('E'),\\n      numPages: getInt('N'),\\n      mainXRefEntriesOffset: getInt('T'),\\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\\n    };\\n  }\\n};\\nexports.Lexer = Lexer;\\nexports.Linearization = Linearization;\\nexports.Parser = Parser;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getTilingPatternIR = exports.Pattern = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _colorspace = require('./colorspace');\\n\\nvar _primitives = require('./primitives');\\n\\nvar ShadingType = {\\n  FUNCTION_BASED: 1,\\n  AXIAL: 2,\\n  RADIAL: 3,\\n  FREE_FORM_MESH: 4,\\n  LATTICE_FORM_MESH: 5,\\n  COONS_PATCH_MESH: 6,\\n  TENSOR_PATCH_MESH: 7\\n};\\nvar Pattern = function PatternClosure() {\\n  function Pattern() {\\n    (0, _util.unreachable)('should not call Pattern constructor');\\n  }\\n  Pattern.prototype = {\\n    getPattern: function Pattern_getPattern(ctx) {\\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\\n    }\\n  };\\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\\n    var type = dict.get('ShadingType');\\n    try {\\n      switch (type) {\\n        case ShadingType.AXIAL:\\n        case ShadingType.RADIAL:\\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\\n        case ShadingType.FREE_FORM_MESH:\\n        case ShadingType.LATTICE_FORM_MESH:\\n        case ShadingType.COONS_PATCH_MESH:\\n        case ShadingType.TENSOR_PATCH_MESH:\\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\\n        default:\\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\\n      }\\n    } catch (ex) {\\n      if (ex instanceof _util.MissingDataException) {\\n        throw ex;\\n      }\\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\\n      (0, _util.warn)(ex);\\n      return new Shadings.Dummy();\\n    }\\n  };\\n  return Pattern;\\n}();\\nvar Shadings = {};\\nShadings.SMALL_NUMBER = 1e-6;\\nShadings.RadialAxial = function RadialAxialClosure() {\\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\\n    this.matrix = matrix;\\n    this.coordsArr = dict.getArray('Coords');\\n    this.shadingType = dict.get('ShadingType');\\n    this.type = 'Pattern';\\n    var cs = dict.get('ColorSpace', 'CS');\\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\n    this.cs = cs;\\n    var t0 = 0.0,\\n        t1 = 1.0;\\n    if (dict.has('Domain')) {\\n      var domainArr = dict.getArray('Domain');\\n      t0 = domainArr[0];\\n      t1 = domainArr[1];\\n    }\\n    var extendStart = false,\\n        extendEnd = false;\\n    if (dict.has('Extend')) {\\n      var extendArr = dict.getArray('Extend');\\n      extendStart = extendArr[0];\\n      extendEnd = extendArr[1];\\n    }\\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\\n      var x1 = this.coordsArr[0];\\n      var y1 = this.coordsArr[1];\\n      var r1 = this.coordsArr[2];\\n      var x2 = this.coordsArr[3];\\n      var y2 = this.coordsArr[4];\\n      var r2 = this.coordsArr[5];\\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\\n        (0, _util.warn)('Unsupported radial gradient.');\\n      }\\n    }\\n    this.extendStart = extendStart;\\n    this.extendEnd = extendEnd;\\n    var fnObj = dict.get('Function');\\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\\n    var diff = t1 - t0;\\n    var step = diff / 10;\\n    var colorStops = this.colorStops = [];\\n    if (t0 >= t1 || step <= 0) {\\n      (0, _util.info)('Bad shading domain.');\\n      return;\\n    }\\n    var color = new Float32Array(cs.numComps),\\n        ratio = new Float32Array(1);\\n    var rgbColor;\\n    for (var i = t0; i <= t1; i += step) {\\n      ratio[0] = i;\\n      fn(ratio, 0, color, 0);\\n      rgbColor = cs.getRgb(color, 0);\\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\n      colorStops.push([(i - t0) / diff, cssColor]);\\n    }\\n    var background = 'transparent';\\n    if (dict.has('Background')) {\\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\n    }\\n    if (!extendStart) {\\n      colorStops.unshift([0, background]);\\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\\n    }\\n    if (!extendEnd) {\\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\\n      colorStops.push([1, background]);\\n    }\\n    this.colorStops = colorStops;\\n  }\\n  RadialAxial.prototype = {\\n    getIR: function RadialAxial_getIR() {\\n      var coordsArr = this.coordsArr;\\n      var shadingType = this.shadingType;\\n      var type, p0, p1, r0, r1;\\n      if (shadingType === ShadingType.AXIAL) {\\n        p0 = [coordsArr[0], coordsArr[1]];\\n        p1 = [coordsArr[2], coordsArr[3]];\\n        r0 = null;\\n        r1 = null;\\n        type = 'axial';\\n      } else if (shadingType === ShadingType.RADIAL) {\\n        p0 = [coordsArr[0], coordsArr[1]];\\n        p1 = [coordsArr[3], coordsArr[4]];\\n        r0 = coordsArr[2];\\n        r1 = coordsArr[5];\\n        type = 'radial';\\n      } else {\\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\\n      }\\n      var matrix = this.matrix;\\n      if (matrix) {\\n        p0 = _util.Util.applyTransform(p0, matrix);\\n        p1 = _util.Util.applyTransform(p1, matrix);\\n        if (shadingType === ShadingType.RADIAL) {\\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\\n          r0 *= scale[0];\\n          r1 *= scale[1];\\n        }\\n      }\\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\\n    }\\n  };\\n  return RadialAxial;\\n}();\\nShadings.Mesh = function MeshClosure() {\\n  function MeshStreamReader(stream, context) {\\n    this.stream = stream;\\n    this.context = context;\\n    this.buffer = 0;\\n    this.bufferLength = 0;\\n    var numComps = context.numComps;\\n    this.tmpCompsBuf = new Float32Array(numComps);\\n    var csNumComps = context.colorSpace.numComps;\\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\\n  }\\n  MeshStreamReader.prototype = {\\n    get hasData() {\\n      if (this.stream.end) {\\n        return this.stream.pos < this.stream.end;\\n      }\\n      if (this.bufferLength > 0) {\\n        return true;\\n      }\\n      var nextByte = this.stream.getByte();\\n      if (nextByte < 0) {\\n        return false;\\n      }\\n      this.buffer = nextByte;\\n      this.bufferLength = 8;\\n      return true;\\n    },\\n    readBits: function MeshStreamReader_readBits(n) {\\n      var buffer = this.buffer;\\n      var bufferLength = this.bufferLength;\\n      if (n === 32) {\\n        if (bufferLength === 0) {\\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\\n        }\\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\\n        var nextByte = this.stream.getByte();\\n        this.buffer = nextByte & (1 << bufferLength) - 1;\\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\\n      }\\n      if (n === 8 && bufferLength === 0) {\\n        return this.stream.getByte();\\n      }\\n      while (bufferLength < n) {\\n        buffer = buffer << 8 | this.stream.getByte();\\n        bufferLength += 8;\\n      }\\n      bufferLength -= n;\\n      this.bufferLength = bufferLength;\\n      this.buffer = buffer & (1 << bufferLength) - 1;\\n      return buffer >> bufferLength;\\n    },\\n    align: function MeshStreamReader_align() {\\n      this.buffer = 0;\\n      this.bufferLength = 0;\\n    },\\n    readFlag: function MeshStreamReader_readFlag() {\\n      return this.readBits(this.context.bitsPerFlag);\\n    },\\n    readCoordinate: function MeshStreamReader_readCoordinate() {\\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\\n      var xi = this.readBits(bitsPerCoordinate);\\n      var yi = this.readBits(bitsPerCoordinate);\\n      var decode = this.context.decode;\\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\\n    },\\n    readComponents: function MeshStreamReader_readComponents() {\\n      var numComps = this.context.numComps;\\n      var bitsPerComponent = this.context.bitsPerComponent;\\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\\n      var decode = this.context.decode;\\n      var components = this.tmpCompsBuf;\\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\\n        var ci = this.readBits(bitsPerComponent);\\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\\n      }\\n      var color = this.tmpCsCompsBuf;\\n      if (this.context.colorFn) {\\n        this.context.colorFn(components, 0, color, 0);\\n      }\\n      return this.context.colorSpace.getRgb(color, 0);\\n    }\\n  };\\n  function decodeType4Shading(mesh, reader) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var operators = [];\\n    var ps = [];\\n    var verticesLeft = 0;\\n    while (reader.hasData) {\\n      var f = reader.readFlag();\\n      var coord = reader.readCoordinate();\\n      var color = reader.readComponents();\\n      if (verticesLeft === 0) {\\n        if (!(0 <= f && f <= 2)) {\\n          throw new _util.FormatError('Unknown type4 flag');\\n        }\\n        switch (f) {\\n          case 0:\\n            verticesLeft = 3;\\n            break;\\n          case 1:\\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\\n            verticesLeft = 1;\\n            break;\\n          case 2:\\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\\n            verticesLeft = 1;\\n            break;\\n        }\\n        operators.push(f);\\n      }\\n      ps.push(coords.length);\\n      coords.push(coord);\\n      colors.push(color);\\n      verticesLeft--;\\n      reader.align();\\n    }\\n    mesh.figures.push({\\n      type: 'triangles',\\n      coords: new Int32Array(ps),\\n      colors: new Int32Array(ps)\\n    });\\n  }\\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var ps = [];\\n    while (reader.hasData) {\\n      var coord = reader.readCoordinate();\\n      var color = reader.readComponents();\\n      ps.push(coords.length);\\n      coords.push(coord);\\n      colors.push(color);\\n    }\\n    mesh.figures.push({\\n      type: 'lattice',\\n      coords: new Int32Array(ps),\\n      colors: new Int32Array(ps),\\n      verticesPerRow: verticesPerRow\\n    });\\n  }\\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\\n  var TRIANGLE_DENSITY = 20;\\n  var getB = function getBClosure() {\\n    function buildB(count) {\\n      var lut = [];\\n      for (var i = 0; i <= count; i++) {\\n        var t = i / count,\\n            t_ = 1 - t;\\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\\n      }\\n      return lut;\\n    }\\n    var cache = [];\\n    return function getB(count) {\\n      if (!cache[count]) {\\n        cache[count] = buildB(count);\\n      }\\n      return cache[count];\\n    };\\n  }();\\n  function buildFigureFromPatch(mesh, index) {\\n    var figure = mesh.figures[index];\\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\\n    var coords = mesh.coords,\\n        colors = mesh.colors;\\n    var pi = figure.coords;\\n    var ci = figure.colors;\\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\\n    var verticesPerRow = splitXBy + 1;\\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\\n    var k = 0;\\n    var cl = new Uint8Array(3),\\n        cr = new Uint8Array(3);\\n    var c0 = colors[ci[0]],\\n        c1 = colors[ci[1]],\\n        c2 = colors[ci[2]],\\n        c3 = colors[ci[3]];\\n    var bRow = getB(splitYBy),\\n        bCol = getB(splitXBy);\\n    for (var row = 0; row <= splitYBy; row++) {\\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\\n      for (var col = 0; col <= splitXBy; col++, k++) {\\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\\n          continue;\\n        }\\n        var x = 0,\\n            y = 0;\\n        var q = 0;\\n        for (var i = 0; i <= 3; i++) {\\n          for (var j = 0; j <= 3; j++, q++) {\\n            var m = bRow[row][i] * bCol[col][j];\\n            x += coords[pi[q]][0] * m;\\n            y += coords[pi[q]][1] * m;\\n          }\\n        }\\n        figureCoords[k] = coords.length;\\n        coords.push([x, y]);\\n        figureColors[k] = colors.length;\\n        var newColor = new Uint8Array(3);\\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\\n        colors.push(newColor);\\n      }\\n    }\\n    figureCoords[0] = pi[0];\\n    figureColors[0] = ci[0];\\n    figureCoords[splitXBy] = pi[3];\\n    figureColors[splitXBy] = ci[1];\\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\\n    figureColors[verticesPerRow * splitYBy] = ci[2];\\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\\n    mesh.figures[index] = {\\n      type: 'lattice',\\n      coords: figureCoords,\\n      colors: figureColors,\\n      verticesPerRow: verticesPerRow\\n    };\\n  }\\n  function decodeType6Shading(mesh, reader) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var ps = new Int32Array(16);\\n    var cs = new Int32Array(4);\\n    while (reader.hasData) {\\n      var f = reader.readFlag();\\n      if (!(0 <= f && f <= 3)) {\\n        throw new _util.FormatError('Unknown type6 flag');\\n      }\\n      var i, ii;\\n      var pi = coords.length;\\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\\n        coords.push(reader.readCoordinate());\\n      }\\n      var ci = colors.length;\\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\n        colors.push(reader.readComponents());\\n      }\\n      var tmp1, tmp2, tmp3, tmp4;\\n      switch (f) {\\n        case 0:\\n          ps[12] = pi + 3;\\n          ps[13] = pi + 4;\\n          ps[14] = pi + 5;\\n          ps[15] = pi + 6;\\n          ps[8] = pi + 2;\\n          ps[11] = pi + 7;\\n          ps[4] = pi + 1;\\n          ps[7] = pi + 8;\\n          ps[0] = pi;\\n          ps[1] = pi + 11;\\n          ps[2] = pi + 10;\\n          ps[3] = pi + 9;\\n          cs[2] = ci + 1;\\n          cs[3] = ci + 2;\\n          cs[0] = ci;\\n          cs[1] = ci + 3;\\n          break;\\n        case 1:\\n          tmp1 = ps[12];\\n          tmp2 = ps[13];\\n          tmp3 = ps[14];\\n          tmp4 = ps[15];\\n          ps[12] = tmp4;\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = tmp3;\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[2];\\n          tmp2 = cs[3];\\n          cs[2] = tmp2;\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 2:\\n          tmp1 = ps[15];\\n          tmp2 = ps[11];\\n          ps[12] = ps[3];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[7];\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[3];\\n          cs[2] = cs[1];\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 3:\\n          ps[12] = ps[0];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[1];\\n          ps[11] = pi + 3;\\n          ps[4] = ps[2];\\n          ps[7] = pi + 4;\\n          ps[0] = ps[3];\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          cs[2] = cs[0];\\n          cs[3] = ci;\\n          cs[0] = cs[1];\\n          cs[1] = ci + 1;\\n          break;\\n      }\\n      ps[5] = coords.length;\\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\\n      ps[6] = coords.length;\\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\\n      ps[9] = coords.length;\\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\\n      ps[10] = coords.length;\\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\\n      mesh.figures.push({\\n        type: 'patch',\\n        coords: new Int32Array(ps),\\n        colors: new Int32Array(cs)\\n      });\\n    }\\n  }\\n  function decodeType7Shading(mesh, reader) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var ps = new Int32Array(16);\\n    var cs = new Int32Array(4);\\n    while (reader.hasData) {\\n      var f = reader.readFlag();\\n      if (!(0 <= f && f <= 3)) {\\n        throw new _util.FormatError('Unknown type7 flag');\\n      }\\n      var i, ii;\\n      var pi = coords.length;\\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\\n        coords.push(reader.readCoordinate());\\n      }\\n      var ci = colors.length;\\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\n        colors.push(reader.readComponents());\\n      }\\n      var tmp1, tmp2, tmp3, tmp4;\\n      switch (f) {\\n        case 0:\\n          ps[12] = pi + 3;\\n          ps[13] = pi + 4;\\n          ps[14] = pi + 5;\\n          ps[15] = pi + 6;\\n          ps[8] = pi + 2;\\n          ps[9] = pi + 13;\\n          ps[10] = pi + 14;\\n          ps[11] = pi + 7;\\n          ps[4] = pi + 1;\\n          ps[5] = pi + 12;\\n          ps[6] = pi + 15;\\n          ps[7] = pi + 8;\\n          ps[0] = pi;\\n          ps[1] = pi + 11;\\n          ps[2] = pi + 10;\\n          ps[3] = pi + 9;\\n          cs[2] = ci + 1;\\n          cs[3] = ci + 2;\\n          cs[0] = ci;\\n          cs[1] = ci + 3;\\n          break;\\n        case 1:\\n          tmp1 = ps[12];\\n          tmp2 = ps[13];\\n          tmp3 = ps[14];\\n          tmp4 = ps[15];\\n          ps[12] = tmp4;\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = tmp3;\\n          ps[9] = pi + 9;\\n          ps[10] = pi + 10;\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[5] = pi + 8;\\n          ps[6] = pi + 11;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[2];\\n          tmp2 = cs[3];\\n          cs[2] = tmp2;\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 2:\\n          tmp1 = ps[15];\\n          tmp2 = ps[11];\\n          ps[12] = ps[3];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[7];\\n          ps[9] = pi + 9;\\n          ps[10] = pi + 10;\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[5] = pi + 8;\\n          ps[6] = pi + 11;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[3];\\n          cs[2] = cs[1];\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 3:\\n          ps[12] = ps[0];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[1];\\n          ps[9] = pi + 9;\\n          ps[10] = pi + 10;\\n          ps[11] = pi + 3;\\n          ps[4] = ps[2];\\n          ps[5] = pi + 8;\\n          ps[6] = pi + 11;\\n          ps[7] = pi + 4;\\n          ps[0] = ps[3];\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          cs[2] = cs[0];\\n          cs[3] = ci;\\n          cs[0] = cs[1];\\n          cs[1] = ci + 1;\\n          break;\\n      }\\n      mesh.figures.push({\\n        type: 'patch',\\n        coords: new Int32Array(ps),\\n        colors: new Int32Array(cs)\\n      });\\n    }\\n  }\\n  function updateBounds(mesh) {\\n    var minX = mesh.coords[0][0],\\n        minY = mesh.coords[0][1],\\n        maxX = minX,\\n        maxY = minY;\\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\\n      var x = mesh.coords[i][0],\\n          y = mesh.coords[i][1];\\n      minX = minX > x ? x : minX;\\n      minY = minY > y ? y : minY;\\n      maxX = maxX < x ? x : maxX;\\n      maxY = maxY < y ? y : maxY;\\n    }\\n    mesh.bounds = [minX, minY, maxX, maxY];\\n  }\\n  function packData(mesh) {\\n    var i, ii, j, jj;\\n    var coords = mesh.coords;\\n    var coordsPacked = new Float32Array(coords.length * 2);\\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\\n      var xy = coords[i];\\n      coordsPacked[j++] = xy[0];\\n      coordsPacked[j++] = xy[1];\\n    }\\n    mesh.coords = coordsPacked;\\n    var colors = mesh.colors;\\n    var colorsPacked = new Uint8Array(colors.length * 3);\\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\\n      var c = colors[i];\\n      colorsPacked[j++] = c[0];\\n      colorsPacked[j++] = c[1];\\n      colorsPacked[j++] = c[2];\\n    }\\n    mesh.colors = colorsPacked;\\n    var figures = mesh.figures;\\n    for (i = 0, ii = figures.length; i < ii; i++) {\\n      var figure = figures[i],\\n          ps = figure.coords,\\n          cs = figure.colors;\\n      for (j = 0, jj = ps.length; j < jj; j++) {\\n        ps[j] *= 2;\\n        cs[j] *= 3;\\n      }\\n    }\\n  }\\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\\n    if (!(0, _primitives.isStream)(stream)) {\\n      throw new _util.FormatError('Mesh data is not a stream');\\n    }\\n    var dict = stream.dict;\\n    this.matrix = matrix;\\n    this.shadingType = dict.get('ShadingType');\\n    this.type = 'Pattern';\\n    this.bbox = dict.getArray('BBox');\\n    var cs = dict.get('ColorSpace', 'CS');\\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\n    this.cs = cs;\\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\\n    var fnObj = dict.get('Function');\\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\\n    this.coords = [];\\n    this.colors = [];\\n    this.figures = [];\\n    var decodeContext = {\\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\\n      bitsPerComponent: dict.get('BitsPerComponent'),\\n      bitsPerFlag: dict.get('BitsPerFlag'),\\n      decode: dict.getArray('Decode'),\\n      colorFn: fn,\\n      colorSpace: cs,\\n      numComps: fn ? 1 : cs.numComps\\n    };\\n    var reader = new MeshStreamReader(stream, decodeContext);\\n    var patchMesh = false;\\n    switch (this.shadingType) {\\n      case ShadingType.FREE_FORM_MESH:\\n        decodeType4Shading(this, reader);\\n        break;\\n      case ShadingType.LATTICE_FORM_MESH:\\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\\n        if (verticesPerRow < 2) {\\n          throw new _util.FormatError('Invalid VerticesPerRow');\\n        }\\n        decodeType5Shading(this, reader, verticesPerRow);\\n        break;\\n      case ShadingType.COONS_PATCH_MESH:\\n        decodeType6Shading(this, reader);\\n        patchMesh = true;\\n        break;\\n      case ShadingType.TENSOR_PATCH_MESH:\\n        decodeType7Shading(this, reader);\\n        patchMesh = true;\\n        break;\\n      default:\\n        (0, _util.unreachable)('Unsupported mesh type.');\\n        break;\\n    }\\n    if (patchMesh) {\\n      updateBounds(this);\\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\\n        buildFigureFromPatch(this, i);\\n      }\\n    }\\n    updateBounds(this);\\n    packData(this);\\n  }\\n  Mesh.prototype = {\\n    getIR: function Mesh_getIR() {\\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\\n    }\\n  };\\n  return Mesh;\\n}();\\nShadings.Dummy = function DummyClosure() {\\n  function Dummy() {\\n    this.type = 'Pattern';\\n  }\\n  Dummy.prototype = {\\n    getIR: function Dummy_getIR() {\\n      return ['Dummy'];\\n    }\\n  };\\n  return Dummy;\\n}();\\nfunction getTilingPatternIR(operatorList, dict, args) {\\n  var matrix = dict.getArray('Matrix');\\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\\n  var xstep = dict.get('XStep');\\n  var ystep = dict.get('YStep');\\n  var paintType = dict.get('PaintType');\\n  var tilingType = dict.get('TilingType');\\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\\n  }\\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\\n}\\nexports.Pattern = Pattern;\\nexports.getTilingPatternIR = getTilingPatternIR;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _chunked_stream = require('./chunked_stream');\\n\\nvar _document = require('./document');\\n\\nvar _stream = require('./stream');\\n\\nvar BasePdfManager = function BasePdfManagerClosure() {\\n  function BasePdfManager() {\\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\\n  }\\n  BasePdfManager.prototype = {\\n    get docId() {\\n      return this._docId;\\n    },\\n    get password() {\\n      return this._password;\\n    },\\n    get docBaseUrl() {\\n      var docBaseUrl = null;\\n      if (this._docBaseUrl) {\\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\\n        if (absoluteUrl) {\\n          docBaseUrl = absoluteUrl.href;\\n        } else {\\n          (0, _util.warn)('Invalid absolute docBaseUrl: \\\"' + this._docBaseUrl + '\\\".');\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\\n    },\\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\\n      throw new _util.NotImplementedException();\\n    },\\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\\n      return this.ensure(this.pdfDocument, prop, args);\\n    },\\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\\n      return this.ensure(this.pdfDocument.xref, prop, args);\\n    },\\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\\n      return this.ensure(this.pdfDocument.catalog, prop, args);\\n    },\\n    getPage: function BasePdfManager_getPage(pageIndex) {\\n      return this.pdfDocument.getPage(pageIndex);\\n    },\\n    cleanup: function BasePdfManager_cleanup() {\\n      return this.pdfDocument.cleanup();\\n    },\\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\\n      return new _util.NotImplementedException();\\n    },\\n    requestRange: function BasePdfManager_requestRange(begin, end) {\\n      return new _util.NotImplementedException();\\n    },\\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\\n      return new _util.NotImplementedException();\\n    },\\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\\n      return new _util.NotImplementedException();\\n    },\\n    updatePassword: function BasePdfManager_updatePassword(password) {\\n      this._password = password;\\n    },\\n    terminate: function BasePdfManager_terminate() {\\n      return new _util.NotImplementedException();\\n    }\\n  };\\n  return BasePdfManager;\\n}();\\nvar LocalPdfManager = function LocalPdfManagerClosure() {\\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\\n    this._docId = docId;\\n    this._password = password;\\n    this._docBaseUrl = docBaseUrl;\\n    this.evaluatorOptions = evaluatorOptions;\\n    var stream = new _stream.Stream(data);\\n    this.pdfDocument = new _document.PDFDocument(this, stream);\\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\\n    this._loadedStreamCapability.resolve(stream);\\n  }\\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\\n      return new Promise(function (resolve, reject) {\\n        try {\\n          var value = obj[prop];\\n          var result;\\n          if (typeof value === 'function') {\\n            result = value.apply(obj, args);\\n          } else {\\n            result = value;\\n          }\\n          resolve(result);\\n        } catch (e) {\\n          reject(e);\\n        }\\n      });\\n    },\\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\\n      return Promise.resolve();\\n    },\\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\\n      return this._loadedStreamCapability.promise;\\n    },\\n    terminate: function LocalPdfManager_terminate() {}\\n  });\\n  return LocalPdfManager;\\n}();\\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\\n    this._docId = docId;\\n    this._password = args.password;\\n    this._docBaseUrl = docBaseUrl;\\n    this.msgHandler = args.msgHandler;\\n    this.evaluatorOptions = evaluatorOptions;\\n    var params = {\\n      msgHandler: args.msgHandler,\\n      url: args.url,\\n      length: args.length,\\n      disableAutoFetch: args.disableAutoFetch,\\n      rangeChunkSize: args.rangeChunkSize\\n    };\\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\\n  }\\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\\n      var pdfManager = this;\\n      return new Promise(function (resolve, reject) {\\n        function ensureHelper() {\\n          try {\\n            var result;\\n            var value = obj[prop];\\n            if (typeof value === 'function') {\\n              result = value.apply(obj, args);\\n            } else {\\n              result = value;\\n            }\\n            resolve(result);\\n          } catch (e) {\\n            if (!(e instanceof _util.MissingDataException)) {\\n              reject(e);\\n              return;\\n            }\\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\\n          }\\n        }\\n        ensureHelper();\\n      });\\n    },\\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\\n      return this.streamManager.requestRange(begin, end);\\n    },\\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\\n      this.streamManager.requestAllChunks();\\n    },\\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\\n      this.streamManager.onReceiveData({ chunk: chunk });\\n    },\\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\\n      return this.streamManager.onLoadedStream();\\n    },\\n    terminate: function NetworkPdfManager_terminate() {\\n      this.streamManager.abort();\\n    }\\n  });\\n  return NetworkPdfManager;\\n}();\\nexports.LocalPdfManager = LocalPdfManager;\\nexports.NetworkPdfManager = NetworkPdfManager;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar EOF = {};\\nvar Name = function NameClosure() {\\n  function Name(name) {\\n    this.name = name;\\n  }\\n  Name.prototype = {};\\n  var nameCache = Object.create(null);\\n  Name.get = function Name_get(name) {\\n    var nameValue = nameCache[name];\\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\\n  };\\n  return Name;\\n}();\\nvar Cmd = function CmdClosure() {\\n  function Cmd(cmd) {\\n    this.cmd = cmd;\\n  }\\n  Cmd.prototype = {};\\n  var cmdCache = Object.create(null);\\n  Cmd.get = function Cmd_get(cmd) {\\n    var cmdValue = cmdCache[cmd];\\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\\n  };\\n  return Cmd;\\n}();\\nvar Dict = function DictClosure() {\\n  var nonSerializable = function nonSerializableClosure() {\\n    return nonSerializable;\\n  };\\n  function Dict(xref) {\\n    this._map = Object.create(null);\\n    this.xref = xref;\\n    this.objId = null;\\n    this.suppressEncryption = false;\\n    this.__nonSerializable__ = nonSerializable;\\n  }\\n  Dict.prototype = {\\n    assignXref: function Dict_assignXref(newXref) {\\n      this.xref = newXref;\\n    },\\n    get: function Dict_get(key1, key2, key3) {\\n      var value;\\n      var xref = this.xref,\\n          suppressEncryption = this.suppressEncryption;\\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n      }\\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n      }\\n      value = this._map[key3] || null;\\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n    },\\n    getAsync: function Dict_getAsync(key1, key2, key3) {\\n      var value;\\n      var xref = this.xref,\\n          suppressEncryption = this.suppressEncryption;\\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\n        if (xref) {\\n          return xref.fetchIfRefAsync(value, suppressEncryption);\\n        }\\n        return Promise.resolve(value);\\n      }\\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\n        if (xref) {\\n          return xref.fetchIfRefAsync(value, suppressEncryption);\\n        }\\n        return Promise.resolve(value);\\n      }\\n      value = this._map[key3] || null;\\n      if (xref) {\\n        return xref.fetchIfRefAsync(value, suppressEncryption);\\n      }\\n      return Promise.resolve(value);\\n    },\\n    getArray: function Dict_getArray(key1, key2, key3) {\\n      var value = this.get(key1, key2, key3);\\n      var xref = this.xref,\\n          suppressEncryption = this.suppressEncryption;\\n      if (!Array.isArray(value) || !xref) {\\n        return value;\\n      }\\n      value = value.slice();\\n      for (var i = 0, ii = value.length; i < ii; i++) {\\n        if (!isRef(value[i])) {\\n          continue;\\n        }\\n        value[i] = xref.fetch(value[i], suppressEncryption);\\n      }\\n      return value;\\n    },\\n    getRaw: function Dict_getRaw(key) {\\n      return this._map[key];\\n    },\\n    getKeys: function Dict_getKeys() {\\n      return Object.keys(this._map);\\n    },\\n    set: function Dict_set(key, value) {\\n      this._map[key] = value;\\n    },\\n    has: function Dict_has(key) {\\n      return key in this._map;\\n    },\\n    forEach: function Dict_forEach(callback) {\\n      for (var key in this._map) {\\n        callback(key, this.get(key));\\n      }\\n    }\\n  };\\n  Dict.empty = new Dict(null);\\n  Dict.merge = function (xref, dictArray) {\\n    var mergedDict = new Dict(xref);\\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\\n      var dict = dictArray[i];\\n      if (!isDict(dict)) {\\n        continue;\\n      }\\n      for (var keyName in dict._map) {\\n        if (mergedDict._map[keyName] !== undefined) {\\n          continue;\\n        }\\n        mergedDict._map[keyName] = dict._map[keyName];\\n      }\\n    }\\n    return mergedDict;\\n  };\\n  return Dict;\\n}();\\nvar Ref = function RefClosure() {\\n  function Ref(num, gen) {\\n    this.num = num;\\n    this.gen = gen;\\n  }\\n  Ref.prototype = {\\n    toString: function Ref_toString() {\\n      var str = this.num + 'R';\\n      if (this.gen !== 0) {\\n        str += this.gen;\\n      }\\n      return str;\\n    }\\n  };\\n  return Ref;\\n}();\\nvar RefSet = function RefSetClosure() {\\n  function RefSet() {\\n    this.dict = Object.create(null);\\n  }\\n  RefSet.prototype = {\\n    has: function RefSet_has(ref) {\\n      return ref.toString() in this.dict;\\n    },\\n    put: function RefSet_put(ref) {\\n      this.dict[ref.toString()] = true;\\n    },\\n    remove: function RefSet_remove(ref) {\\n      delete this.dict[ref.toString()];\\n    }\\n  };\\n  return RefSet;\\n}();\\nvar RefSetCache = function RefSetCacheClosure() {\\n  function RefSetCache() {\\n    this.dict = Object.create(null);\\n  }\\n  RefSetCache.prototype = {\\n    get: function RefSetCache_get(ref) {\\n      return this.dict[ref.toString()];\\n    },\\n    has: function RefSetCache_has(ref) {\\n      return ref.toString() in this.dict;\\n    },\\n    put: function RefSetCache_put(ref, obj) {\\n      this.dict[ref.toString()] = obj;\\n    },\\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\\n      this.dict[ref.toString()] = this.get(aliasRef);\\n    },\\n    forEach: function RefSetCache_forEach(fn, thisArg) {\\n      for (var i in this.dict) {\\n        fn.call(thisArg, this.dict[i]);\\n      }\\n    },\\n    clear: function RefSetCache_clear() {\\n      this.dict = Object.create(null);\\n    }\\n  };\\n  return RefSetCache;\\n}();\\nfunction isEOF(v) {\\n  return v === EOF;\\n}\\nfunction isName(v, name) {\\n  return v instanceof Name && (name === undefined || v.name === name);\\n}\\nfunction isCmd(v, cmd) {\\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\\n}\\nfunction isDict(v, type) {\\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\\n}\\nfunction isRef(v) {\\n  return v instanceof Ref;\\n}\\nfunction isRefsEqual(v1, v2) {\\n  return v1.num === v2.num && v1.gen === v2.gen;\\n}\\nfunction isStream(v) {\\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\\n}\\nexports.EOF = EOF;\\nexports.Cmd = Cmd;\\nexports.Dict = Dict;\\nexports.Name = Name;\\nexports.Ref = Ref;\\nexports.RefSet = RefSet;\\nexports.RefSetCache = RefSetCache;\\nexports.isEOF = isEOF;\\nexports.isCmd = isCmd;\\nexports.isDict = isDict;\\nexports.isName = isName;\\nexports.isRef = isRef;\\nexports.isRefsEqual = isRefsEqual;\\nexports.isStream = isStream;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar PostScriptParser = function PostScriptParserClosure() {\\n  function PostScriptParser(lexer) {\\n    this.lexer = lexer;\\n    this.operators = [];\\n    this.token = null;\\n    this.prev = null;\\n  }\\n  PostScriptParser.prototype = {\\n    nextToken: function PostScriptParser_nextToken() {\\n      this.prev = this.token;\\n      this.token = this.lexer.getToken();\\n    },\\n    accept: function PostScriptParser_accept(type) {\\n      if (this.token.type === type) {\\n        this.nextToken();\\n        return true;\\n      }\\n      return false;\\n    },\\n    expect: function PostScriptParser_expect(type) {\\n      if (this.accept(type)) {\\n        return true;\\n      }\\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\\n    },\\n    parse: function PostScriptParser_parse() {\\n      this.nextToken();\\n      this.expect(PostScriptTokenTypes.LBRACE);\\n      this.parseBlock();\\n      this.expect(PostScriptTokenTypes.RBRACE);\\n      return this.operators;\\n    },\\n    parseBlock: function PostScriptParser_parseBlock() {\\n      while (true) {\\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\\n          this.operators.push(this.prev.value);\\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\\n          this.operators.push(this.prev.value);\\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\n          this.parseCondition();\\n        } else {\\n          return;\\n        }\\n      }\\n    },\\n    parseCondition: function PostScriptParser_parseCondition() {\\n      var conditionLocation = this.operators.length;\\n      this.operators.push(null, null);\\n      this.parseBlock();\\n      this.expect(PostScriptTokenTypes.RBRACE);\\n      if (this.accept(PostScriptTokenTypes.IF)) {\\n        this.operators[conditionLocation] = this.operators.length;\\n        this.operators[conditionLocation + 1] = 'jz';\\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\n        var jumpLocation = this.operators.length;\\n        this.operators.push(null, null);\\n        var endOfTrue = this.operators.length;\\n        this.parseBlock();\\n        this.expect(PostScriptTokenTypes.RBRACE);\\n        this.expect(PostScriptTokenTypes.IFELSE);\\n        this.operators[jumpLocation] = this.operators.length;\\n        this.operators[jumpLocation + 1] = 'j';\\n        this.operators[conditionLocation] = endOfTrue;\\n        this.operators[conditionLocation + 1] = 'jz';\\n      } else {\\n        throw new _util.FormatError('PS Function: error parsing conditional.');\\n      }\\n    }\\n  };\\n  return PostScriptParser;\\n}();\\nvar PostScriptTokenTypes = {\\n  LBRACE: 0,\\n  RBRACE: 1,\\n  NUMBER: 2,\\n  OPERATOR: 3,\\n  IF: 4,\\n  IFELSE: 5\\n};\\nvar PostScriptToken = function PostScriptTokenClosure() {\\n  function PostScriptToken(type, value) {\\n    this.type = type;\\n    this.value = value;\\n  }\\n  var opCache = Object.create(null);\\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\\n    var opValue = opCache[op];\\n    if (opValue) {\\n      return opValue;\\n    }\\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\\n  };\\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\\n  return PostScriptToken;\\n}();\\nvar PostScriptLexer = function PostScriptLexerClosure() {\\n  function PostScriptLexer(stream) {\\n    this.stream = stream;\\n    this.nextChar();\\n    this.strBuf = [];\\n  }\\n  PostScriptLexer.prototype = {\\n    nextChar: function PostScriptLexer_nextChar() {\\n      return this.currentChar = this.stream.getByte();\\n    },\\n    getToken: function PostScriptLexer_getToken() {\\n      var comment = false;\\n      var ch = this.currentChar;\\n      while (true) {\\n        if (ch < 0) {\\n          return _primitives.EOF;\\n        }\\n        if (comment) {\\n          if (ch === 0x0A || ch === 0x0D) {\\n            comment = false;\\n          }\\n        } else if (ch === 0x25) {\\n          comment = true;\\n        } else if (!(0, _util.isSpace)(ch)) {\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n      switch (ch | 0) {\\n        case 0x30:\\n        case 0x31:\\n        case 0x32:\\n        case 0x33:\\n        case 0x34:\\n        case 0x35:\\n        case 0x36:\\n        case 0x37:\\n        case 0x38:\\n        case 0x39:\\n        case 0x2B:\\n        case 0x2D:\\n        case 0x2E:\\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\\n        case 0x7B:\\n          this.nextChar();\\n          return PostScriptToken.LBRACE;\\n        case 0x7D:\\n          this.nextChar();\\n          return PostScriptToken.RBRACE;\\n      }\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      strBuf[0] = String.fromCharCode(ch);\\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\\n        strBuf.push(String.fromCharCode(ch));\\n      }\\n      var str = strBuf.join('');\\n      switch (str.toLowerCase()) {\\n        case 'if':\\n          return PostScriptToken.IF;\\n        case 'ifelse':\\n          return PostScriptToken.IFELSE;\\n        default:\\n          return PostScriptToken.getOperator(str);\\n      }\\n    },\\n    getNumber: function PostScriptLexer_getNumber() {\\n      var ch = this.currentChar;\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      strBuf[0] = String.fromCharCode(ch);\\n      while ((ch = this.nextChar()) >= 0) {\\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\\n          strBuf.push(String.fromCharCode(ch));\\n        } else {\\n          break;\\n        }\\n      }\\n      var value = parseFloat(strBuf.join(''));\\n      if (isNaN(value)) {\\n        throw new _util.FormatError('Invalid floating point number: ' + value);\\n      }\\n      return value;\\n    }\\n  };\\n  return PostScriptLexer;\\n}();\\nexports.PostScriptLexer = PostScriptLexer;\\nexports.PostScriptParser = PostScriptParser;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\n  t['ArialNarrow'] = 'Helvetica';\\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\\n  t['ArialBlack'] = 'Helvetica';\\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\\n  t['Arial-Black'] = 'Helvetica';\\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\\n  t['Arial'] = 'Helvetica';\\n  t['Arial-Bold'] = 'Helvetica-Bold';\\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Arial-Italic'] = 'Helvetica-Oblique';\\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\\n  t['ArialMT'] = 'Helvetica';\\n  t['Courier-Bold'] = 'Courier-Bold';\\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\\n  t['Courier-Italic'] = 'Courier-Oblique';\\n  t['CourierNew'] = 'Courier';\\n  t['CourierNew-Bold'] = 'Courier-Bold';\\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\\n  t['CourierNew-Italic'] = 'Courier-Oblique';\\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\\n  t['CourierNewPSMT'] = 'Courier';\\n  t['Helvetica'] = 'Helvetica';\\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\\n  t['SegoeUISymbol'] = 'Helvetica';\\n  t['Symbol-Bold'] = 'Symbol';\\n  t['Symbol-BoldItalic'] = 'Symbol';\\n  t['Symbol-Italic'] = 'Symbol';\\n  t['TimesNewRoman'] = 'Times-Roman';\\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\\n  t['TimesNewRomanPS'] = 'Times-Roman';\\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\\n});\\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Calibri'] = 'Helvetica';\\n  t['Calibri-Bold'] = 'Helvetica-Bold';\\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\\n  t['CenturyGothic'] = 'Helvetica';\\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\\n  t['ComicSansMS'] = 'Comic Sans MS';\\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\\n  t['LucidaConsole'] = 'Courier';\\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\\n  t['MS-Gothic'] = 'MS Gothic';\\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\\n  t['MS-Mincho'] = 'MS Mincho';\\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\\n  t['MS-PGothic'] = 'MS PGothic';\\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\\n  t['MS-PMincho'] = 'MS PMincho';\\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\\n  t['NuptialScript'] = 'Times-Italic';\\n  t['Wingdings'] = 'ZapfDingbats';\\n});\\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Adobe Jenson'] = true;\\n  t['Adobe Text'] = true;\\n  t['Albertus'] = true;\\n  t['Aldus'] = true;\\n  t['Alexandria'] = true;\\n  t['Algerian'] = true;\\n  t['American Typewriter'] = true;\\n  t['Antiqua'] = true;\\n  t['Apex'] = true;\\n  t['Arno'] = true;\\n  t['Aster'] = true;\\n  t['Aurora'] = true;\\n  t['Baskerville'] = true;\\n  t['Bell'] = true;\\n  t['Bembo'] = true;\\n  t['Bembo Schoolbook'] = true;\\n  t['Benguiat'] = true;\\n  t['Berkeley Old Style'] = true;\\n  t['Bernhard Modern'] = true;\\n  t['Berthold City'] = true;\\n  t['Bodoni'] = true;\\n  t['Bauer Bodoni'] = true;\\n  t['Book Antiqua'] = true;\\n  t['Bookman'] = true;\\n  t['Bordeaux Roman'] = true;\\n  t['Californian FB'] = true;\\n  t['Calisto'] = true;\\n  t['Calvert'] = true;\\n  t['Capitals'] = true;\\n  t['Cambria'] = true;\\n  t['Cartier'] = true;\\n  t['Caslon'] = true;\\n  t['Catull'] = true;\\n  t['Centaur'] = true;\\n  t['Century Old Style'] = true;\\n  t['Century Schoolbook'] = true;\\n  t['Chaparral'] = true;\\n  t['Charis SIL'] = true;\\n  t['Cheltenham'] = true;\\n  t['Cholla Slab'] = true;\\n  t['Clarendon'] = true;\\n  t['Clearface'] = true;\\n  t['Cochin'] = true;\\n  t['Colonna'] = true;\\n  t['Computer Modern'] = true;\\n  t['Concrete Roman'] = true;\\n  t['Constantia'] = true;\\n  t['Cooper Black'] = true;\\n  t['Corona'] = true;\\n  t['Ecotype'] = true;\\n  t['Egyptienne'] = true;\\n  t['Elephant'] = true;\\n  t['Excelsior'] = true;\\n  t['Fairfield'] = true;\\n  t['FF Scala'] = true;\\n  t['Folkard'] = true;\\n  t['Footlight'] = true;\\n  t['FreeSerif'] = true;\\n  t['Friz Quadrata'] = true;\\n  t['Garamond'] = true;\\n  t['Gentium'] = true;\\n  t['Georgia'] = true;\\n  t['Gloucester'] = true;\\n  t['Goudy Old Style'] = true;\\n  t['Goudy Schoolbook'] = true;\\n  t['Goudy Pro Font'] = true;\\n  t['Granjon'] = true;\\n  t['Guardian Egyptian'] = true;\\n  t['Heather'] = true;\\n  t['Hercules'] = true;\\n  t['High Tower Text'] = true;\\n  t['Hiroshige'] = true;\\n  t['Hoefler Text'] = true;\\n  t['Humana Serif'] = true;\\n  t['Imprint'] = true;\\n  t['Ionic No. 5'] = true;\\n  t['Janson'] = true;\\n  t['Joanna'] = true;\\n  t['Korinna'] = true;\\n  t['Lexicon'] = true;\\n  t['Liberation Serif'] = true;\\n  t['Linux Libertine'] = true;\\n  t['Literaturnaya'] = true;\\n  t['Lucida'] = true;\\n  t['Lucida Bright'] = true;\\n  t['Melior'] = true;\\n  t['Memphis'] = true;\\n  t['Miller'] = true;\\n  t['Minion'] = true;\\n  t['Modern'] = true;\\n  t['Mona Lisa'] = true;\\n  t['Mrs Eaves'] = true;\\n  t['MS Serif'] = true;\\n  t['Museo Slab'] = true;\\n  t['New York'] = true;\\n  t['Nimbus Roman'] = true;\\n  t['NPS Rawlinson Roadway'] = true;\\n  t['NuptialScript'] = true;\\n  t['Palatino'] = true;\\n  t['Perpetua'] = true;\\n  t['Plantin'] = true;\\n  t['Plantin Schoolbook'] = true;\\n  t['Playbill'] = true;\\n  t['Poor Richard'] = true;\\n  t['Rawlinson Roadway'] = true;\\n  t['Renault'] = true;\\n  t['Requiem'] = true;\\n  t['Rockwell'] = true;\\n  t['Roman'] = true;\\n  t['Rotis Serif'] = true;\\n  t['Sabon'] = true;\\n  t['Scala'] = true;\\n  t['Seagull'] = true;\\n  t['Sistina'] = true;\\n  t['Souvenir'] = true;\\n  t['STIX'] = true;\\n  t['Stone Informal'] = true;\\n  t['Stone Serif'] = true;\\n  t['Sylfaen'] = true;\\n  t['Times'] = true;\\n  t['Trajan'] = true;\\n  t['Trinité'] = true;\\n  t['Trump Mediaeval'] = true;\\n  t['Utopia'] = true;\\n  t['Vale Type'] = true;\\n  t['Bitstream Vera'] = true;\\n  t['Vera Serif'] = true;\\n  t['Versailles'] = true;\\n  t['Wanted'] = true;\\n  t['Weiss'] = true;\\n  t['Wide Latin'] = true;\\n  t['Windsor'] = true;\\n  t['XITS'] = true;\\n});\\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Dingbats'] = true;\\n  t['Symbol'] = true;\\n  t['ZapfDingbats'] = true;\\n});\\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\\n  t[2] = 10;\\n  t[3] = 32;\\n  t[4] = 33;\\n  t[5] = 34;\\n  t[6] = 35;\\n  t[7] = 36;\\n  t[8] = 37;\\n  t[9] = 38;\\n  t[10] = 39;\\n  t[11] = 40;\\n  t[12] = 41;\\n  t[13] = 42;\\n  t[14] = 43;\\n  t[15] = 44;\\n  t[16] = 45;\\n  t[17] = 46;\\n  t[18] = 47;\\n  t[19] = 48;\\n  t[20] = 49;\\n  t[21] = 50;\\n  t[22] = 51;\\n  t[23] = 52;\\n  t[24] = 53;\\n  t[25] = 54;\\n  t[26] = 55;\\n  t[27] = 56;\\n  t[28] = 57;\\n  t[29] = 58;\\n  t[30] = 894;\\n  t[31] = 60;\\n  t[32] = 61;\\n  t[33] = 62;\\n  t[34] = 63;\\n  t[35] = 64;\\n  t[36] = 65;\\n  t[37] = 66;\\n  t[38] = 67;\\n  t[39] = 68;\\n  t[40] = 69;\\n  t[41] = 70;\\n  t[42] = 71;\\n  t[43] = 72;\\n  t[44] = 73;\\n  t[45] = 74;\\n  t[46] = 75;\\n  t[47] = 76;\\n  t[48] = 77;\\n  t[49] = 78;\\n  t[50] = 79;\\n  t[51] = 80;\\n  t[52] = 81;\\n  t[53] = 82;\\n  t[54] = 83;\\n  t[55] = 84;\\n  t[56] = 85;\\n  t[57] = 86;\\n  t[58] = 87;\\n  t[59] = 88;\\n  t[60] = 89;\\n  t[61] = 90;\\n  t[62] = 91;\\n  t[63] = 92;\\n  t[64] = 93;\\n  t[65] = 94;\\n  t[66] = 95;\\n  t[67] = 96;\\n  t[68] = 97;\\n  t[69] = 98;\\n  t[70] = 99;\\n  t[71] = 100;\\n  t[72] = 101;\\n  t[73] = 102;\\n  t[74] = 103;\\n  t[75] = 104;\\n  t[76] = 105;\\n  t[77] = 106;\\n  t[78] = 107;\\n  t[79] = 108;\\n  t[80] = 109;\\n  t[81] = 110;\\n  t[82] = 111;\\n  t[83] = 112;\\n  t[84] = 113;\\n  t[85] = 114;\\n  t[86] = 115;\\n  t[87] = 116;\\n  t[88] = 117;\\n  t[89] = 118;\\n  t[90] = 119;\\n  t[91] = 120;\\n  t[92] = 121;\\n  t[93] = 122;\\n  t[94] = 123;\\n  t[95] = 124;\\n  t[96] = 125;\\n  t[97] = 126;\\n  t[98] = 196;\\n  t[99] = 197;\\n  t[100] = 199;\\n  t[101] = 201;\\n  t[102] = 209;\\n  t[103] = 214;\\n  t[104] = 220;\\n  t[105] = 225;\\n  t[106] = 224;\\n  t[107] = 226;\\n  t[108] = 228;\\n  t[109] = 227;\\n  t[110] = 229;\\n  t[111] = 231;\\n  t[112] = 233;\\n  t[113] = 232;\\n  t[114] = 234;\\n  t[115] = 235;\\n  t[116] = 237;\\n  t[117] = 236;\\n  t[118] = 238;\\n  t[119] = 239;\\n  t[120] = 241;\\n  t[121] = 243;\\n  t[122] = 242;\\n  t[123] = 244;\\n  t[124] = 246;\\n  t[125] = 245;\\n  t[126] = 250;\\n  t[127] = 249;\\n  t[128] = 251;\\n  t[129] = 252;\\n  t[130] = 8224;\\n  t[131] = 176;\\n  t[132] = 162;\\n  t[133] = 163;\\n  t[134] = 167;\\n  t[135] = 8226;\\n  t[136] = 182;\\n  t[137] = 223;\\n  t[138] = 174;\\n  t[139] = 169;\\n  t[140] = 8482;\\n  t[141] = 180;\\n  t[142] = 168;\\n  t[143] = 8800;\\n  t[144] = 198;\\n  t[145] = 216;\\n  t[146] = 8734;\\n  t[147] = 177;\\n  t[148] = 8804;\\n  t[149] = 8805;\\n  t[150] = 165;\\n  t[151] = 181;\\n  t[152] = 8706;\\n  t[153] = 8721;\\n  t[154] = 8719;\\n  t[156] = 8747;\\n  t[157] = 170;\\n  t[158] = 186;\\n  t[159] = 8486;\\n  t[160] = 230;\\n  t[161] = 248;\\n  t[162] = 191;\\n  t[163] = 161;\\n  t[164] = 172;\\n  t[165] = 8730;\\n  t[166] = 402;\\n  t[167] = 8776;\\n  t[168] = 8710;\\n  t[169] = 171;\\n  t[170] = 187;\\n  t[171] = 8230;\\n  t[210] = 218;\\n  t[223] = 711;\\n  t[224] = 321;\\n  t[225] = 322;\\n  t[227] = 353;\\n  t[229] = 382;\\n  t[234] = 253;\\n  t[252] = 263;\\n  t[253] = 268;\\n  t[254] = 269;\\n  t[258] = 258;\\n  t[260] = 260;\\n  t[261] = 261;\\n  t[265] = 280;\\n  t[266] = 281;\\n  t[268] = 283;\\n  t[269] = 313;\\n  t[275] = 323;\\n  t[276] = 324;\\n  t[278] = 328;\\n  t[284] = 345;\\n  t[285] = 346;\\n  t[286] = 347;\\n  t[292] = 367;\\n  t[295] = 377;\\n  t[296] = 378;\\n  t[298] = 380;\\n  t[305] = 963;\\n  t[306] = 964;\\n  t[307] = 966;\\n  t[308] = 8215;\\n  t[309] = 8252;\\n  t[310] = 8319;\\n  t[311] = 8359;\\n  t[312] = 8592;\\n  t[313] = 8593;\\n  t[337] = 9552;\\n  t[493] = 1039;\\n  t[494] = 1040;\\n  t[705] = 1524;\\n  t[706] = 8362;\\n  t[710] = 64288;\\n  t[711] = 64298;\\n  t[759] = 1617;\\n  t[761] = 1776;\\n  t[763] = 1778;\\n  t[775] = 1652;\\n  t[777] = 1764;\\n  t[778] = 1780;\\n  t[779] = 1781;\\n  t[780] = 1782;\\n  t[782] = 771;\\n  t[783] = 64726;\\n  t[786] = 8363;\\n  t[788] = 8532;\\n  t[790] = 768;\\n  t[791] = 769;\\n  t[792] = 768;\\n  t[795] = 803;\\n  t[797] = 64336;\\n  t[798] = 64337;\\n  t[799] = 64342;\\n  t[800] = 64343;\\n  t[801] = 64344;\\n  t[802] = 64345;\\n  t[803] = 64362;\\n  t[804] = 64363;\\n  t[805] = 64364;\\n  t[2424] = 7821;\\n  t[2425] = 7822;\\n  t[2426] = 7823;\\n  t[2427] = 7824;\\n  t[2428] = 7825;\\n  t[2429] = 7826;\\n  t[2430] = 7827;\\n  t[2433] = 7682;\\n  t[2678] = 8045;\\n  t[2679] = 8046;\\n  t[2830] = 1552;\\n  t[2838] = 686;\\n  t[2840] = 751;\\n  t[2842] = 753;\\n  t[2843] = 754;\\n  t[2844] = 755;\\n  t[2846] = 757;\\n  t[2856] = 767;\\n  t[2857] = 848;\\n  t[2858] = 849;\\n  t[2862] = 853;\\n  t[2863] = 854;\\n  t[2864] = 855;\\n  t[2865] = 861;\\n  t[2866] = 862;\\n  t[2906] = 7460;\\n  t[2908] = 7462;\\n  t[2909] = 7463;\\n  t[2910] = 7464;\\n  t[2912] = 7466;\\n  t[2913] = 7467;\\n  t[2914] = 7468;\\n  t[2916] = 7470;\\n  t[2917] = 7471;\\n  t[2918] = 7472;\\n  t[2920] = 7474;\\n  t[2921] = 7475;\\n  t[2922] = 7476;\\n  t[2924] = 7478;\\n  t[2925] = 7479;\\n  t[2926] = 7480;\\n  t[2928] = 7482;\\n  t[2929] = 7483;\\n  t[2930] = 7484;\\n  t[2932] = 7486;\\n  t[2933] = 7487;\\n  t[2934] = 7488;\\n  t[2936] = 7490;\\n  t[2937] = 7491;\\n  t[2938] = 7492;\\n  t[2940] = 7494;\\n  t[2941] = 7495;\\n  t[2942] = 7496;\\n  t[2944] = 7498;\\n  t[2946] = 7500;\\n  t[2948] = 7502;\\n  t[2950] = 7504;\\n  t[2951] = 7505;\\n  t[2952] = 7506;\\n  t[2954] = 7508;\\n  t[2955] = 7509;\\n  t[2956] = 7510;\\n  t[2958] = 7512;\\n  t[2959] = 7513;\\n  t[2960] = 7514;\\n  t[2962] = 7516;\\n  t[2963] = 7517;\\n  t[2964] = 7518;\\n  t[2966] = 7520;\\n  t[2967] = 7521;\\n  t[2968] = 7522;\\n  t[2970] = 7524;\\n  t[2971] = 7525;\\n  t[2972] = 7526;\\n  t[2974] = 7528;\\n  t[2975] = 7529;\\n  t[2976] = 7530;\\n  t[2978] = 1537;\\n  t[2979] = 1538;\\n  t[2980] = 1539;\\n  t[2982] = 1549;\\n  t[2983] = 1551;\\n  t[2984] = 1552;\\n  t[2986] = 1554;\\n  t[2987] = 1555;\\n  t[2988] = 1556;\\n  t[2990] = 1623;\\n  t[2991] = 1624;\\n  t[2995] = 1775;\\n  t[2999] = 1791;\\n  t[3002] = 64290;\\n  t[3003] = 64291;\\n  t[3004] = 64292;\\n  t[3006] = 64294;\\n  t[3007] = 64295;\\n  t[3008] = 64296;\\n  t[3011] = 1900;\\n  t[3014] = 8223;\\n  t[3015] = 8244;\\n  t[3017] = 7532;\\n  t[3018] = 7533;\\n  t[3019] = 7534;\\n  t[3075] = 7590;\\n  t[3076] = 7591;\\n  t[3079] = 7594;\\n  t[3080] = 7595;\\n  t[3083] = 7598;\\n  t[3084] = 7599;\\n  t[3087] = 7602;\\n  t[3088] = 7603;\\n  t[3091] = 7606;\\n  t[3092] = 7607;\\n  t[3095] = 7610;\\n  t[3096] = 7611;\\n  t[3099] = 7614;\\n  t[3100] = 7615;\\n  t[3103] = 7618;\\n  t[3104] = 7619;\\n  t[3107] = 8337;\\n  t[3108] = 8338;\\n  t[3116] = 1884;\\n  t[3119] = 1885;\\n  t[3120] = 1885;\\n  t[3123] = 1886;\\n  t[3124] = 1886;\\n  t[3127] = 1887;\\n  t[3128] = 1887;\\n  t[3131] = 1888;\\n  t[3132] = 1888;\\n  t[3135] = 1889;\\n  t[3136] = 1889;\\n  t[3139] = 1890;\\n  t[3140] = 1890;\\n  t[3143] = 1891;\\n  t[3144] = 1891;\\n  t[3147] = 1892;\\n  t[3148] = 1892;\\n  t[3153] = 580;\\n  t[3154] = 581;\\n  t[3157] = 584;\\n  t[3158] = 585;\\n  t[3161] = 588;\\n  t[3162] = 589;\\n  t[3165] = 891;\\n  t[3166] = 892;\\n  t[3169] = 1274;\\n  t[3170] = 1275;\\n  t[3173] = 1278;\\n  t[3174] = 1279;\\n  t[3181] = 7622;\\n  t[3182] = 7623;\\n  t[3282] = 11799;\\n  t[3316] = 578;\\n  t[3379] = 42785;\\n  t[3393] = 1159;\\n  t[3416] = 8377;\\n});\\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\\n  t[227] = 322;\\n  t[264] = 261;\\n  t[291] = 346;\\n});\\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\\n  t[1] = 32;\\n  t[4] = 65;\\n  t[17] = 66;\\n  t[18] = 67;\\n  t[24] = 68;\\n  t[28] = 69;\\n  t[38] = 70;\\n  t[39] = 71;\\n  t[44] = 72;\\n  t[47] = 73;\\n  t[58] = 74;\\n  t[60] = 75;\\n  t[62] = 76;\\n  t[68] = 77;\\n  t[69] = 78;\\n  t[75] = 79;\\n  t[87] = 80;\\n  t[89] = 81;\\n  t[90] = 82;\\n  t[94] = 83;\\n  t[100] = 84;\\n  t[104] = 85;\\n  t[115] = 86;\\n  t[116] = 87;\\n  t[121] = 88;\\n  t[122] = 89;\\n  t[127] = 90;\\n  t[258] = 97;\\n  t[268] = 261;\\n  t[271] = 98;\\n  t[272] = 99;\\n  t[273] = 263;\\n  t[282] = 100;\\n  t[286] = 101;\\n  t[295] = 281;\\n  t[296] = 102;\\n  t[336] = 103;\\n  t[346] = 104;\\n  t[349] = 105;\\n  t[361] = 106;\\n  t[364] = 107;\\n  t[367] = 108;\\n  t[371] = 322;\\n  t[373] = 109;\\n  t[374] = 110;\\n  t[381] = 111;\\n  t[383] = 243;\\n  t[393] = 112;\\n  t[395] = 113;\\n  t[396] = 114;\\n  t[400] = 115;\\n  t[401] = 347;\\n  t[410] = 116;\\n  t[437] = 117;\\n  t[448] = 118;\\n  t[449] = 119;\\n  t[454] = 120;\\n  t[455] = 121;\\n  t[460] = 122;\\n  t[463] = 380;\\n  t[853] = 44;\\n  t[855] = 58;\\n  t[856] = 46;\\n  t[876] = 47;\\n  t[878] = 45;\\n  t[882] = 45;\\n  t[894] = 40;\\n  t[895] = 41;\\n  t[896] = 91;\\n  t[897] = 93;\\n  t[923] = 64;\\n  t[1004] = 48;\\n  t[1005] = 49;\\n  t[1006] = 50;\\n  t[1007] = 51;\\n  t[1008] = 52;\\n  t[1009] = 53;\\n  t[1010] = 54;\\n  t[1011] = 55;\\n  t[1012] = 56;\\n  t[1013] = 57;\\n  t[1081] = 37;\\n  t[1085] = 43;\\n  t[1086] = 45;\\n});\\nexports.getStdFontMap = getStdFontMap;\\nexports.getNonStdFontMap = getNonStdFontMap;\\nexports.getSerifFonts = getSerifFonts;\\nexports.getSymbolsFonts = getSymbolsFonts;\\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _primitives = require('./primitives');\\n\\nvar Stream = function StreamClosure() {\\n  function Stream(arrayBuffer, start, length, dict) {\\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\\n    this.start = start || 0;\\n    this.pos = this.start;\\n    this.end = start + length || this.bytes.length;\\n    this.dict = dict;\\n  }\\n  Stream.prototype = {\\n    get length() {\\n      return this.end - this.start;\\n    },\\n    get isEmpty() {\\n      return this.length === 0;\\n    },\\n    getByte: function Stream_getByte() {\\n      if (this.pos >= this.end) {\\n        return -1;\\n      }\\n      return this.bytes[this.pos++];\\n    },\\n    getUint16: function Stream_getUint16() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      if (b0 === -1 || b1 === -1) {\\n        return -1;\\n      }\\n      return (b0 << 8) + b1;\\n    },\\n    getInt32: function Stream_getInt32() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      var b2 = this.getByte();\\n      var b3 = this.getByte();\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n    },\\n    getBytes: function Stream_getBytes(length) {\\n      var bytes = this.bytes;\\n      var pos = this.pos;\\n      var strEnd = this.end;\\n      if (!length) {\\n        return bytes.subarray(pos, strEnd);\\n      }\\n      var end = pos + length;\\n      if (end > strEnd) {\\n        end = strEnd;\\n      }\\n      this.pos = end;\\n      return bytes.subarray(pos, end);\\n    },\\n    peekByte: function Stream_peekByte() {\\n      var peekedByte = this.getByte();\\n      this.pos--;\\n      return peekedByte;\\n    },\\n    peekBytes: function Stream_peekBytes(length) {\\n      var bytes = this.getBytes(length);\\n      this.pos -= bytes.length;\\n      return bytes;\\n    },\\n    skip: function Stream_skip(n) {\\n      if (!n) {\\n        n = 1;\\n      }\\n      this.pos += n;\\n    },\\n    reset: function Stream_reset() {\\n      this.pos = this.start;\\n    },\\n    moveStart: function Stream_moveStart() {\\n      this.start = this.pos;\\n    },\\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\\n      return new Stream(this.bytes.buffer, start, length, dict);\\n    }\\n  };\\n  return Stream;\\n}();\\nvar StringStream = function StringStreamClosure() {\\n  function StringStream(str) {\\n    var bytes = (0, _util.stringToBytes)(str);\\n    Stream.call(this, bytes);\\n  }\\n  StringStream.prototype = Stream.prototype;\\n  return StringStream;\\n}();\\nvar DecodeStream = function DecodeStreamClosure() {\\n  var emptyBuffer = new Uint8Array(0);\\n  function DecodeStream(maybeMinBufferLength) {\\n    this.pos = 0;\\n    this.bufferLength = 0;\\n    this.eof = false;\\n    this.buffer = emptyBuffer;\\n    this.minBufferLength = 512;\\n    if (maybeMinBufferLength) {\\n      while (this.minBufferLength < maybeMinBufferLength) {\\n        this.minBufferLength *= 2;\\n      }\\n    }\\n  }\\n  DecodeStream.prototype = {\\n    get isEmpty() {\\n      while (!this.eof && this.bufferLength === 0) {\\n        this.readBlock();\\n      }\\n      return this.bufferLength === 0;\\n    },\\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\\n      var buffer = this.buffer;\\n      if (requested <= buffer.byteLength) {\\n        return buffer;\\n      }\\n      var size = this.minBufferLength;\\n      while (size < requested) {\\n        size *= 2;\\n      }\\n      var buffer2 = new Uint8Array(size);\\n      buffer2.set(buffer);\\n      return this.buffer = buffer2;\\n    },\\n    getByte: function DecodeStream_getByte() {\\n      var pos = this.pos;\\n      while (this.bufferLength <= pos) {\\n        if (this.eof) {\\n          return -1;\\n        }\\n        this.readBlock();\\n      }\\n      return this.buffer[this.pos++];\\n    },\\n    getUint16: function DecodeStream_getUint16() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      if (b0 === -1 || b1 === -1) {\\n        return -1;\\n      }\\n      return (b0 << 8) + b1;\\n    },\\n    getInt32: function DecodeStream_getInt32() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      var b2 = this.getByte();\\n      var b3 = this.getByte();\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n    },\\n    getBytes: function DecodeStream_getBytes(length) {\\n      var end,\\n          pos = this.pos;\\n      if (length) {\\n        this.ensureBuffer(pos + length);\\n        end = pos + length;\\n        while (!this.eof && this.bufferLength < end) {\\n          this.readBlock();\\n        }\\n        var bufEnd = this.bufferLength;\\n        if (end > bufEnd) {\\n          end = bufEnd;\\n        }\\n      } else {\\n        while (!this.eof) {\\n          this.readBlock();\\n        }\\n        end = this.bufferLength;\\n      }\\n      this.pos = end;\\n      return this.buffer.subarray(pos, end);\\n    },\\n    peekByte: function DecodeStream_peekByte() {\\n      var peekedByte = this.getByte();\\n      this.pos--;\\n      return peekedByte;\\n    },\\n    peekBytes: function DecodeStream_peekBytes(length) {\\n      var bytes = this.getBytes(length);\\n      this.pos -= bytes.length;\\n      return bytes;\\n    },\\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\\n      var end = start + length;\\n      while (this.bufferLength <= end && !this.eof) {\\n        this.readBlock();\\n      }\\n      return new Stream(this.buffer, start, length, dict);\\n    },\\n    skip: function DecodeStream_skip(n) {\\n      if (!n) {\\n        n = 1;\\n      }\\n      this.pos += n;\\n    },\\n    reset: function DecodeStream_reset() {\\n      this.pos = 0;\\n    },\\n    getBaseStreams: function DecodeStream_getBaseStreams() {\\n      if (this.str && this.str.getBaseStreams) {\\n        return this.str.getBaseStreams();\\n      }\\n      return [];\\n    }\\n  };\\n  return DecodeStream;\\n}();\\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\\n  function StreamsSequenceStream(streams) {\\n    this.streams = streams;\\n    DecodeStream.call(this, null);\\n  }\\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\\n    var streams = this.streams;\\n    if (streams.length === 0) {\\n      this.eof = true;\\n      return;\\n    }\\n    var stream = streams.shift();\\n    var chunk = stream.getBytes();\\n    var bufferLength = this.bufferLength;\\n    var newLength = bufferLength + chunk.length;\\n    var buffer = this.ensureBuffer(newLength);\\n    buffer.set(chunk, bufferLength);\\n    this.bufferLength = newLength;\\n  };\\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\\n    var baseStreams = [];\\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\\n      var stream = this.streams[i];\\n      if (stream.getBaseStreams) {\\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\\n      }\\n    }\\n    return baseStreams;\\n  };\\n  return StreamsSequenceStream;\\n}();\\nvar FlateStream = function FlateStreamClosure() {\\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\\n  function FlateStream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    var cmf = str.getByte();\\n    var flg = str.getByte();\\n    if (cmf === -1 || flg === -1) {\\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    if ((cmf & 0x0f) !== 0x08) {\\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    if (((cmf << 8) + flg) % 31 !== 0) {\\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    if (flg & 0x20) {\\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    this.codeSize = 0;\\n    this.codeBuf = 0;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\\n    var str = this.str;\\n    var codeSize = this.codeSize;\\n    var codeBuf = this.codeBuf;\\n    var b;\\n    while (codeSize < bits) {\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad encoding in flate stream');\\n      }\\n      codeBuf |= b << codeSize;\\n      codeSize += 8;\\n    }\\n    b = codeBuf & (1 << bits) - 1;\\n    this.codeBuf = codeBuf >> bits;\\n    this.codeSize = codeSize -= bits;\\n    return b;\\n  };\\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\\n    var str = this.str;\\n    var codes = table[0];\\n    var maxLen = table[1];\\n    var codeSize = this.codeSize;\\n    var codeBuf = this.codeBuf;\\n    var b;\\n    while (codeSize < maxLen) {\\n      if ((b = str.getByte()) === -1) {\\n        break;\\n      }\\n      codeBuf |= b << codeSize;\\n      codeSize += 8;\\n    }\\n    var code = codes[codeBuf & (1 << maxLen) - 1];\\n    var codeLen = code >> 16;\\n    var codeVal = code & 0xffff;\\n    if (codeLen < 1 || codeSize < codeLen) {\\n      throw new _util.FormatError('Bad encoding in flate stream');\\n    }\\n    this.codeBuf = codeBuf >> codeLen;\\n    this.codeSize = codeSize - codeLen;\\n    return codeVal;\\n  };\\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\\n    var n = lengths.length;\\n    var maxLen = 0;\\n    var i;\\n    for (i = 0; i < n; ++i) {\\n      if (lengths[i] > maxLen) {\\n        maxLen = lengths[i];\\n      }\\n    }\\n    var size = 1 << maxLen;\\n    var codes = new Int32Array(size);\\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\\n      for (var val = 0; val < n; ++val) {\\n        if (lengths[val] === len) {\\n          var code2 = 0;\\n          var t = code;\\n          for (i = 0; i < len; ++i) {\\n            code2 = code2 << 1 | t & 1;\\n            t >>= 1;\\n          }\\n          for (i = code2; i < size; i += skip) {\\n            codes[i] = len << 16 | val;\\n          }\\n          ++code;\\n        }\\n      }\\n    }\\n    return [codes, maxLen];\\n  };\\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\\n    var buffer, len;\\n    var str = this.str;\\n    var hdr = this.getBits(3);\\n    if (hdr & 1) {\\n      this.eof = true;\\n    }\\n    hdr >>= 1;\\n    if (hdr === 0) {\\n      var b;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      var blockLen = b;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      blockLen |= b << 8;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      var check = b;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      check |= b << 8;\\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\\n      }\\n      this.codeBuf = 0;\\n      this.codeSize = 0;\\n      var bufferLength = this.bufferLength;\\n      buffer = this.ensureBuffer(bufferLength + blockLen);\\n      var end = bufferLength + blockLen;\\n      this.bufferLength = end;\\n      if (blockLen === 0) {\\n        if (str.peekByte() === -1) {\\n          this.eof = true;\\n        }\\n      } else {\\n        for (var n = bufferLength; n < end; ++n) {\\n          if ((b = str.getByte()) === -1) {\\n            this.eof = true;\\n            break;\\n          }\\n          buffer[n] = b;\\n        }\\n      }\\n      return;\\n    }\\n    var litCodeTable;\\n    var distCodeTable;\\n    if (hdr === 1) {\\n      litCodeTable = fixedLitCodeTab;\\n      distCodeTable = fixedDistCodeTab;\\n    } else if (hdr === 2) {\\n      var numLitCodes = this.getBits(5) + 257;\\n      var numDistCodes = this.getBits(5) + 1;\\n      var numCodeLenCodes = this.getBits(4) + 4;\\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\\n      var i;\\n      for (i = 0; i < numCodeLenCodes; ++i) {\\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\\n      }\\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\\n      len = 0;\\n      i = 0;\\n      var codes = numLitCodes + numDistCodes;\\n      var codeLengths = new Uint8Array(codes);\\n      var bitsLength, bitsOffset, what;\\n      while (i < codes) {\\n        var code = this.getCode(codeLenCodeTab);\\n        if (code === 16) {\\n          bitsLength = 2;\\n          bitsOffset = 3;\\n          what = len;\\n        } else if (code === 17) {\\n          bitsLength = 3;\\n          bitsOffset = 3;\\n          what = len = 0;\\n        } else if (code === 18) {\\n          bitsLength = 7;\\n          bitsOffset = 11;\\n          what = len = 0;\\n        } else {\\n          codeLengths[i++] = len = code;\\n          continue;\\n        }\\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\\n        while (repeatLength-- > 0) {\\n          codeLengths[i++] = what;\\n        }\\n      }\\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\\n    } else {\\n      throw new _util.FormatError('Unknown block type in flate stream');\\n    }\\n    buffer = this.buffer;\\n    var limit = buffer ? buffer.length : 0;\\n    var pos = this.bufferLength;\\n    while (true) {\\n      var code1 = this.getCode(litCodeTable);\\n      if (code1 < 256) {\\n        if (pos + 1 >= limit) {\\n          buffer = this.ensureBuffer(pos + 1);\\n          limit = buffer.length;\\n        }\\n        buffer[pos++] = code1;\\n        continue;\\n      }\\n      if (code1 === 256) {\\n        this.bufferLength = pos;\\n        return;\\n      }\\n      code1 -= 257;\\n      code1 = lengthDecode[code1];\\n      var code2 = code1 >> 16;\\n      if (code2 > 0) {\\n        code2 = this.getBits(code2);\\n      }\\n      len = (code1 & 0xffff) + code2;\\n      code1 = this.getCode(distCodeTable);\\n      code1 = distDecode[code1];\\n      code2 = code1 >> 16;\\n      if (code2 > 0) {\\n        code2 = this.getBits(code2);\\n      }\\n      var dist = (code1 & 0xffff) + code2;\\n      if (pos + len >= limit) {\\n        buffer = this.ensureBuffer(pos + len);\\n        limit = buffer.length;\\n      }\\n      for (var k = 0; k < len; ++k, ++pos) {\\n        buffer[pos] = buffer[pos - dist];\\n      }\\n    }\\n  };\\n  return FlateStream;\\n}();\\nvar PredictorStream = function PredictorStreamClosure() {\\n  function PredictorStream(str, maybeLength, params) {\\n    if (!(0, _primitives.isDict)(params)) {\\n      return str;\\n    }\\n    var predictor = this.predictor = params.get('Predictor') || 1;\\n    if (predictor <= 1) {\\n      return str;\\n    }\\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\\n    }\\n    if (predictor === 2) {\\n      this.readBlock = this.readBlockTiff;\\n    } else {\\n      this.readBlock = this.readBlockPng;\\n    }\\n    this.str = str;\\n    this.dict = str.dict;\\n    var colors = this.colors = params.get('Colors') || 1;\\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\\n    var columns = this.columns = params.get('Columns') || 1;\\n    this.pixBytes = colors * bits + 7 >> 3;\\n    this.rowBytes = columns * colors * bits + 7 >> 3;\\n    DecodeStream.call(this, maybeLength);\\n    return this;\\n  }\\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\\n    var rowBytes = this.rowBytes;\\n    var bufferLength = this.bufferLength;\\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\\n    var bits = this.bits;\\n    var colors = this.colors;\\n    var rawBytes = this.str.getBytes(rowBytes);\\n    this.eof = !rawBytes.length;\\n    if (this.eof) {\\n      return;\\n    }\\n    var inbuf = 0,\\n        outbuf = 0;\\n    var inbits = 0,\\n        outbits = 0;\\n    var pos = bufferLength;\\n    var i;\\n    if (bits === 1 && colors === 1) {\\n      for (i = 0; i < rowBytes; ++i) {\\n        var c = rawBytes[i] ^ inbuf;\\n        c ^= c >> 1;\\n        c ^= c >> 2;\\n        c ^= c >> 4;\\n        inbuf = (c & 1) << 7;\\n        buffer[pos++] = c;\\n      }\\n    } else if (bits === 8) {\\n      for (i = 0; i < colors; ++i) {\\n        buffer[pos++] = rawBytes[i];\\n      }\\n      for (; i < rowBytes; ++i) {\\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\\n        pos++;\\n      }\\n    } else if (bits === 16) {\\n      var bytesPerPixel = colors * 2;\\n      for (i = 0; i < bytesPerPixel; ++i) {\\n        buffer[pos++] = rawBytes[i];\\n      }\\n      for (; i < rowBytes; i += 2) {\\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\\n        buffer[pos++] = sum >> 8 & 0xFF;\\n        buffer[pos++] = sum & 0xFF;\\n      }\\n    } else {\\n      var compArray = new Uint8Array(colors + 1);\\n      var bitMask = (1 << bits) - 1;\\n      var j = 0,\\n          k = bufferLength;\\n      var columns = this.columns;\\n      for (i = 0; i < columns; ++i) {\\n        for (var kk = 0; kk < colors; ++kk) {\\n          if (inbits < bits) {\\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\\n            inbits += 8;\\n          }\\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\\n          inbits -= bits;\\n          outbuf = outbuf << bits | compArray[kk];\\n          outbits += bits;\\n          if (outbits >= 8) {\\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\\n            outbits -= 8;\\n          }\\n        }\\n      }\\n      if (outbits > 0) {\\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\\n      }\\n    }\\n    this.bufferLength += rowBytes;\\n  };\\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\\n    var rowBytes = this.rowBytes;\\n    var pixBytes = this.pixBytes;\\n    var predictor = this.str.getByte();\\n    var rawBytes = this.str.getBytes(rowBytes);\\n    this.eof = !rawBytes.length;\\n    if (this.eof) {\\n      return;\\n    }\\n    var bufferLength = this.bufferLength;\\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\\n    if (prevRow.length === 0) {\\n      prevRow = new Uint8Array(rowBytes);\\n    }\\n    var i,\\n        j = bufferLength,\\n        up,\\n        c;\\n    switch (predictor) {\\n      case 0:\\n        for (i = 0; i < rowBytes; ++i) {\\n          buffer[j++] = rawBytes[i];\\n        }\\n        break;\\n      case 1:\\n        for (i = 0; i < pixBytes; ++i) {\\n          buffer[j++] = rawBytes[i];\\n        }\\n        for (; i < rowBytes; ++i) {\\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\\n          j++;\\n        }\\n        break;\\n      case 2:\\n        for (i = 0; i < rowBytes; ++i) {\\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\\n        }\\n        break;\\n      case 3:\\n        for (i = 0; i < pixBytes; ++i) {\\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\\n        }\\n        for (; i < rowBytes; ++i) {\\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\\n          j++;\\n        }\\n        break;\\n      case 4:\\n        for (i = 0; i < pixBytes; ++i) {\\n          up = prevRow[i];\\n          c = rawBytes[i];\\n          buffer[j++] = up + c;\\n        }\\n        for (; i < rowBytes; ++i) {\\n          up = prevRow[i];\\n          var upLeft = prevRow[i - pixBytes];\\n          var left = buffer[j - pixBytes];\\n          var p = left + up - upLeft;\\n          var pa = p - left;\\n          if (pa < 0) {\\n            pa = -pa;\\n          }\\n          var pb = p - up;\\n          if (pb < 0) {\\n            pb = -pb;\\n          }\\n          var pc = p - upLeft;\\n          if (pc < 0) {\\n            pc = -pc;\\n          }\\n          c = rawBytes[i];\\n          if (pa <= pb && pa <= pc) {\\n            buffer[j++] = left + c;\\n          } else if (pb <= pc) {\\n            buffer[j++] = up + c;\\n          } else {\\n            buffer[j++] = upLeft + c;\\n          }\\n        }\\n        break;\\n      default:\\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\\n    }\\n    this.bufferLength += rowBytes;\\n  };\\n  return PredictorStream;\\n}();\\nvar DecryptStream = function DecryptStreamClosure() {\\n  function DecryptStream(str, maybeLength, decrypt) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.decrypt = decrypt;\\n    this.nextChunk = null;\\n    this.initialized = false;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  var chunkSize = 512;\\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\\n    var chunk;\\n    if (this.initialized) {\\n      chunk = this.nextChunk;\\n    } else {\\n      chunk = this.str.getBytes(chunkSize);\\n      this.initialized = true;\\n    }\\n    if (!chunk || chunk.length === 0) {\\n      this.eof = true;\\n      return;\\n    }\\n    this.nextChunk = this.str.getBytes(chunkSize);\\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\\n    var decrypt = this.decrypt;\\n    chunk = decrypt(chunk, !hasMoreData);\\n    var bufferLength = this.bufferLength;\\n    var i,\\n        n = chunk.length;\\n    var buffer = this.ensureBuffer(bufferLength + n);\\n    for (i = 0; i < n; i++) {\\n      buffer[bufferLength++] = chunk[i];\\n    }\\n    this.bufferLength = bufferLength;\\n  };\\n  return DecryptStream;\\n}();\\nvar Ascii85Stream = function Ascii85StreamClosure() {\\n  function Ascii85Stream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.input = new Uint8Array(5);\\n    if (maybeLength) {\\n      maybeLength = 0.8 * maybeLength;\\n    }\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\\n    var TILDA_CHAR = 0x7E;\\n    var Z_LOWER_CHAR = 0x7A;\\n    var EOF = -1;\\n    var str = this.str;\\n    var c = str.getByte();\\n    while ((0, _util.isSpace)(c)) {\\n      c = str.getByte();\\n    }\\n    if (c === EOF || c === TILDA_CHAR) {\\n      this.eof = true;\\n      return;\\n    }\\n    var bufferLength = this.bufferLength,\\n        buffer;\\n    var i;\\n    if (c === Z_LOWER_CHAR) {\\n      buffer = this.ensureBuffer(bufferLength + 4);\\n      for (i = 0; i < 4; ++i) {\\n        buffer[bufferLength + i] = 0;\\n      }\\n      this.bufferLength += 4;\\n    } else {\\n      var input = this.input;\\n      input[0] = c;\\n      for (i = 1; i < 5; ++i) {\\n        c = str.getByte();\\n        while ((0, _util.isSpace)(c)) {\\n          c = str.getByte();\\n        }\\n        input[i] = c;\\n        if (c === EOF || c === TILDA_CHAR) {\\n          break;\\n        }\\n      }\\n      buffer = this.ensureBuffer(bufferLength + i - 1);\\n      this.bufferLength += i - 1;\\n      if (i < 5) {\\n        for (; i < 5; ++i) {\\n          input[i] = 0x21 + 84;\\n        }\\n        this.eof = true;\\n      }\\n      var t = 0;\\n      for (i = 0; i < 5; ++i) {\\n        t = t * 85 + (input[i] - 0x21);\\n      }\\n      for (i = 3; i >= 0; --i) {\\n        buffer[bufferLength + i] = t & 0xFF;\\n        t >>= 8;\\n      }\\n    }\\n  };\\n  return Ascii85Stream;\\n}();\\nvar AsciiHexStream = function AsciiHexStreamClosure() {\\n  function AsciiHexStream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.firstDigit = -1;\\n    if (maybeLength) {\\n      maybeLength = 0.5 * maybeLength;\\n    }\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\\n    var UPSTREAM_BLOCK_SIZE = 8000;\\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\\n    if (!bytes.length) {\\n      this.eof = true;\\n      return;\\n    }\\n    var maxDecodeLength = bytes.length + 1 >> 1;\\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\\n    var bufferLength = this.bufferLength;\\n    var firstDigit = this.firstDigit;\\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\\n      var ch = bytes[i],\\n          digit;\\n      if (ch >= 0x30 && ch <= 0x39) {\\n        digit = ch & 0x0F;\\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\n        digit = (ch & 0x0F) + 9;\\n      } else if (ch === 0x3E) {\\n        this.eof = true;\\n        break;\\n      } else {\\n        continue;\\n      }\\n      if (firstDigit < 0) {\\n        firstDigit = digit;\\n      } else {\\n        buffer[bufferLength++] = firstDigit << 4 | digit;\\n        firstDigit = -1;\\n      }\\n    }\\n    if (firstDigit >= 0 && this.eof) {\\n      buffer[bufferLength++] = firstDigit << 4;\\n      firstDigit = -1;\\n    }\\n    this.firstDigit = firstDigit;\\n    this.bufferLength = bufferLength;\\n  };\\n  return AsciiHexStream;\\n}();\\nvar RunLengthStream = function RunLengthStreamClosure() {\\n  function RunLengthStream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\\n    var repeatHeader = this.str.getBytes(2);\\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\\n      this.eof = true;\\n      return;\\n    }\\n    var buffer;\\n    var bufferLength = this.bufferLength;\\n    var n = repeatHeader[0];\\n    if (n < 128) {\\n      buffer = this.ensureBuffer(bufferLength + n + 1);\\n      buffer[bufferLength++] = repeatHeader[1];\\n      if (n > 0) {\\n        var source = this.str.getBytes(n);\\n        buffer.set(source, bufferLength);\\n        bufferLength += n;\\n      }\\n    } else {\\n      n = 257 - n;\\n      var b = repeatHeader[1];\\n      buffer = this.ensureBuffer(bufferLength + n + 1);\\n      for (var i = 0; i < n; i++) {\\n        buffer[bufferLength++] = b;\\n      }\\n    }\\n    this.bufferLength = bufferLength;\\n  };\\n  return RunLengthStream;\\n}();\\nvar LZWStream = function LZWStreamClosure() {\\n  function LZWStream(str, maybeLength, earlyChange) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.cachedData = 0;\\n    this.bitsCached = 0;\\n    var maxLzwDictionarySize = 4096;\\n    var lzwState = {\\n      earlyChange: earlyChange,\\n      codeLength: 9,\\n      nextCode: 258,\\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\\n      currentSequenceLength: 0\\n    };\\n    for (var i = 0; i < 256; ++i) {\\n      lzwState.dictionaryValues[i] = i;\\n      lzwState.dictionaryLengths[i] = 1;\\n    }\\n    this.lzwState = lzwState;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\\n    var bitsCached = this.bitsCached;\\n    var cachedData = this.cachedData;\\n    while (bitsCached < n) {\\n      var c = this.str.getByte();\\n      if (c === -1) {\\n        this.eof = true;\\n        return null;\\n      }\\n      cachedData = cachedData << 8 | c;\\n      bitsCached += 8;\\n    }\\n    this.bitsCached = bitsCached -= n;\\n    this.cachedData = cachedData;\\n    this.lastCode = null;\\n    return cachedData >>> bitsCached & (1 << n) - 1;\\n  };\\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\\n    var blockSize = 512;\\n    var estimatedDecodedSize = blockSize * 2,\\n        decodedSizeDelta = blockSize;\\n    var i, j, q;\\n    var lzwState = this.lzwState;\\n    if (!lzwState) {\\n      return;\\n    }\\n    var earlyChange = lzwState.earlyChange;\\n    var nextCode = lzwState.nextCode;\\n    var dictionaryValues = lzwState.dictionaryValues;\\n    var dictionaryLengths = lzwState.dictionaryLengths;\\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\\n    var codeLength = lzwState.codeLength;\\n    var prevCode = lzwState.prevCode;\\n    var currentSequence = lzwState.currentSequence;\\n    var currentSequenceLength = lzwState.currentSequenceLength;\\n    var decodedLength = 0;\\n    var currentBufferLength = this.bufferLength;\\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\n    for (i = 0; i < blockSize; i++) {\\n      var code = this.readBits(codeLength);\\n      var hasPrev = currentSequenceLength > 0;\\n      if (code < 256) {\\n        currentSequence[0] = code;\\n        currentSequenceLength = 1;\\n      } else if (code >= 258) {\\n        if (code < nextCode) {\\n          currentSequenceLength = dictionaryLengths[code];\\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\\n            currentSequence[j] = dictionaryValues[q];\\n            q = dictionaryPrevCodes[q];\\n          }\\n        } else {\\n          currentSequence[currentSequenceLength++] = currentSequence[0];\\n        }\\n      } else if (code === 256) {\\n        codeLength = 9;\\n        nextCode = 258;\\n        currentSequenceLength = 0;\\n        continue;\\n      } else {\\n        this.eof = true;\\n        delete this.lzwState;\\n        break;\\n      }\\n      if (hasPrev) {\\n        dictionaryPrevCodes[nextCode] = prevCode;\\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\\n        dictionaryValues[nextCode] = currentSequence[0];\\n        nextCode++;\\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\\n      }\\n      prevCode = code;\\n      decodedLength += currentSequenceLength;\\n      if (estimatedDecodedSize < decodedLength) {\\n        do {\\n          estimatedDecodedSize += decodedSizeDelta;\\n        } while (estimatedDecodedSize < decodedLength);\\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\n      }\\n      for (j = 0; j < currentSequenceLength; j++) {\\n        buffer[currentBufferLength++] = currentSequence[j];\\n      }\\n    }\\n    lzwState.nextCode = nextCode;\\n    lzwState.codeLength = codeLength;\\n    lzwState.prevCode = prevCode;\\n    lzwState.currentSequenceLength = currentSequenceLength;\\n    this.bufferLength = currentBufferLength;\\n  };\\n  return LZWStream;\\n}();\\nvar NullStream = function NullStreamClosure() {\\n  function NullStream() {\\n    Stream.call(this, new Uint8Array(0));\\n  }\\n  NullStream.prototype = Stream.prototype;\\n  return NullStream;\\n}();\\nexports.Ascii85Stream = Ascii85Stream;\\nexports.AsciiHexStream = AsciiHexStream;\\nexports.DecryptStream = DecryptStream;\\nexports.DecodeStream = DecodeStream;\\nexports.FlateStream = FlateStream;\\nexports.NullStream = NullStream;\\nexports.PredictorStream = PredictorStream;\\nexports.RunLengthStream = RunLengthStream;\\nexports.Stream = Stream;\\nexports.StreamsSequenceStream = StreamsSequenceStream;\\nexports.StringStream = StringStream;\\nexports.LZWStream = LZWStream;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Type1Parser = undefined;\\n\\nvar _util = require('../shared/util');\\n\\nvar _encodings = require('./encodings');\\n\\nvar _stream = require('./stream');\\n\\nvar HINTING_ENABLED = false;\\nvar Type1CharString = function Type1CharStringClosure() {\\n  var COMMAND_MAP = {\\n    'hstem': [1],\\n    'vstem': [3],\\n    'vmoveto': [4],\\n    'rlineto': [5],\\n    'hlineto': [6],\\n    'vlineto': [7],\\n    'rrcurveto': [8],\\n    'callsubr': [10],\\n    'flex': [12, 35],\\n    'drop': [12, 18],\\n    'endchar': [14],\\n    'rmoveto': [21],\\n    'hmoveto': [22],\\n    'vhcurveto': [30],\\n    'hvcurveto': [31]\\n  };\\n  function Type1CharString() {\\n    this.width = 0;\\n    this.lsb = 0;\\n    this.flexing = false;\\n    this.output = [];\\n    this.stack = [];\\n  }\\n  Type1CharString.prototype = {\\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\\n      var count = encoded.length;\\n      var error = false;\\n      var wx, sbx, subrNumber;\\n      for (var i = 0; i < count; i++) {\\n        var value = encoded[i];\\n        if (value < 32) {\\n          if (value === 12) {\\n            value = (value << 8) + encoded[++i];\\n          }\\n          switch (value) {\\n            case 1:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\\n              break;\\n            case 3:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\\n              break;\\n            case 4:\\n              if (this.flexing) {\\n                if (this.stack.length < 1) {\\n                  error = true;\\n                  break;\\n                }\\n                var dy = this.stack.pop();\\n                this.stack.push(0, dy);\\n                break;\\n              }\\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\\n              break;\\n            case 5:\\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\\n              break;\\n            case 6:\\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\\n              break;\\n            case 7:\\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\\n              break;\\n            case 8:\\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\\n              break;\\n            case 9:\\n              this.stack = [];\\n              break;\\n            case 10:\\n              if (this.stack.length < 1) {\\n                error = true;\\n                break;\\n              }\\n              subrNumber = this.stack.pop();\\n              if (!subrs[subrNumber]) {\\n                error = true;\\n                break;\\n              }\\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\\n              break;\\n            case 11:\\n              return error;\\n            case 13:\\n              if (this.stack.length < 2) {\\n                error = true;\\n                break;\\n              }\\n              wx = this.stack.pop();\\n              sbx = this.stack.pop();\\n              this.lsb = sbx;\\n              this.width = wx;\\n              this.stack.push(wx, sbx);\\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\\n              break;\\n            case 14:\\n              this.output.push(COMMAND_MAP.endchar[0]);\\n              break;\\n            case 21:\\n              if (this.flexing) {\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\\n              break;\\n            case 22:\\n              if (this.flexing) {\\n                this.stack.push(0);\\n                break;\\n              }\\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\\n              break;\\n            case 30:\\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\\n              break;\\n            case 31:\\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\\n              break;\\n            case (12 << 8) + 0:\\n              this.stack = [];\\n              break;\\n            case (12 << 8) + 1:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\\n              break;\\n            case (12 << 8) + 2:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\\n              break;\\n            case (12 << 8) + 6:\\n              if (seacAnalysisEnabled) {\\n                this.seac = this.stack.splice(-4, 4);\\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\\n              } else {\\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\\n              }\\n              break;\\n            case (12 << 8) + 7:\\n              if (this.stack.length < 4) {\\n                error = true;\\n                break;\\n              }\\n              this.stack.pop();\\n              wx = this.stack.pop();\\n              var sby = this.stack.pop();\\n              sbx = this.stack.pop();\\n              this.lsb = sbx;\\n              this.width = wx;\\n              this.stack.push(wx, sbx, sby);\\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\\n              break;\\n            case (12 << 8) + 12:\\n              if (this.stack.length < 2) {\\n                error = true;\\n                break;\\n              }\\n              var num2 = this.stack.pop();\\n              var num1 = this.stack.pop();\\n              this.stack.push(num1 / num2);\\n              break;\\n            case (12 << 8) + 16:\\n              if (this.stack.length < 2) {\\n                error = true;\\n                break;\\n              }\\n              subrNumber = this.stack.pop();\\n              var numArgs = this.stack.pop();\\n              if (subrNumber === 0 && numArgs === 3) {\\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\\n                this.flexing = false;\\n                this.stack.push(flexArgs[15], flexArgs[16]);\\n              } else if (subrNumber === 1 && numArgs === 0) {\\n                this.flexing = true;\\n              }\\n              break;\\n            case (12 << 8) + 17:\\n              break;\\n            case (12 << 8) + 33:\\n              this.stack = [];\\n              break;\\n            default:\\n              (0, _util.warn)('Unknown type 1 charstring command of \\\"' + value + '\\\"');\\n              break;\\n          }\\n          if (error) {\\n            break;\\n          }\\n          continue;\\n        } else if (value <= 246) {\\n          value = value - 139;\\n        } else if (value <= 250) {\\n          value = (value - 247) * 256 + encoded[++i] + 108;\\n        } else if (value <= 254) {\\n          value = -((value - 251) * 256) - encoded[++i] - 108;\\n        } else {\\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\\n        }\\n        this.stack.push(value);\\n      }\\n      return error;\\n    },\\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\\n      var stackLength = this.stack.length;\\n      if (howManyArgs > stackLength) {\\n        return true;\\n      }\\n      var start = stackLength - howManyArgs;\\n      for (var i = start; i < stackLength; i++) {\\n        var value = this.stack[i];\\n        if (Number.isInteger(value)) {\\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\\n        } else {\\n          value = 65536 * value | 0;\\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\\n        }\\n      }\\n      this.output.push.apply(this.output, command);\\n      if (keepStack) {\\n        this.stack.splice(start, howManyArgs);\\n      } else {\\n        this.stack.length = 0;\\n      }\\n      return false;\\n    }\\n  };\\n  return Type1CharString;\\n}();\\nvar Type1Parser = function Type1ParserClosure() {\\n  var EEXEC_ENCRYPT_KEY = 55665;\\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\\n  function isHexDigit(code) {\\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\\n  }\\n  function decrypt(data, key, discardNumber) {\\n    if (discardNumber >= data.length) {\\n      return new Uint8Array(0);\\n    }\\n    var r = key | 0,\\n        c1 = 52845,\\n        c2 = 22719,\\n        i,\\n        j;\\n    for (i = 0; i < discardNumber; i++) {\\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\\n    }\\n    var count = data.length - discardNumber;\\n    var decrypted = new Uint8Array(count);\\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\\n      var value = data[i];\\n      decrypted[j] = value ^ r >> 8;\\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\\n    }\\n    return decrypted;\\n  }\\n  function decryptAscii(data, key, discardNumber) {\\n    var r = key | 0,\\n        c1 = 52845,\\n        c2 = 22719;\\n    var count = data.length,\\n        maybeLength = count >>> 1;\\n    var decrypted = new Uint8Array(maybeLength);\\n    var i, j;\\n    for (i = 0, j = 0; i < count; i++) {\\n      var digit1 = data[i];\\n      if (!isHexDigit(digit1)) {\\n        continue;\\n      }\\n      i++;\\n      var digit2;\\n      while (i < count && !isHexDigit(digit2 = data[i])) {\\n        i++;\\n      }\\n      if (i < count) {\\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\\n        decrypted[j++] = value ^ r >> 8;\\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\\n      }\\n    }\\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\\n  }\\n  function isSpecial(c) {\\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\\n  }\\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\\n    if (encrypted) {\\n      var data = stream.getBytes();\\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\\n    }\\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\n    this.stream = stream;\\n    this.nextChar();\\n  }\\n  Type1Parser.prototype = {\\n    readNumberArray: function Type1Parser_readNumberArray() {\\n      this.getToken();\\n      var array = [];\\n      while (true) {\\n        var token = this.getToken();\\n        if (token === null || token === ']' || token === '}') {\\n          break;\\n        }\\n        array.push(parseFloat(token || 0));\\n      }\\n      return array;\\n    },\\n    readNumber: function Type1Parser_readNumber() {\\n      var token = this.getToken();\\n      return parseFloat(token || 0);\\n    },\\n    readInt: function Type1Parser_readInt() {\\n      var token = this.getToken();\\n      return parseInt(token || 0, 10) | 0;\\n    },\\n    readBoolean: function Type1Parser_readBoolean() {\\n      var token = this.getToken();\\n      return token === 'true' ? 1 : 0;\\n    },\\n    nextChar: function Type1_nextChar() {\\n      return this.currentChar = this.stream.getByte();\\n    },\\n    getToken: function Type1Parser_getToken() {\\n      var comment = false;\\n      var ch = this.currentChar;\\n      while (true) {\\n        if (ch === -1) {\\n          return null;\\n        }\\n        if (comment) {\\n          if (ch === 0x0A || ch === 0x0D) {\\n            comment = false;\\n          }\\n        } else if (ch === 0x25) {\\n          comment = true;\\n        } else if (!(0, _util.isSpace)(ch)) {\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n      if (isSpecial(ch)) {\\n        this.nextChar();\\n        return String.fromCharCode(ch);\\n      }\\n      var token = '';\\n      do {\\n        token += String.fromCharCode(ch);\\n        ch = this.nextChar();\\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\\n      return token;\\n    },\\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\\n      if (lenIV === -1) {\\n        return bytes;\\n      }\\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\\n    },\\n    extractFontProgram: function Type1Parser_extractFontProgram() {\\n      var stream = this.stream;\\n      var subrs = [],\\n          charstrings = [];\\n      var privateData = Object.create(null);\\n      privateData['lenIV'] = 4;\\n      var program = {\\n        subrs: [],\\n        charstrings: [],\\n        properties: { 'privateData': privateData }\\n      };\\n      var token, length, data, lenIV, encoded;\\n      while ((token = this.getToken()) !== null) {\\n        if (token !== '/') {\\n          continue;\\n        }\\n        token = this.getToken();\\n        switch (token) {\\n          case 'CharStrings':\\n            this.getToken();\\n            this.getToken();\\n            this.getToken();\\n            this.getToken();\\n            while (true) {\\n              token = this.getToken();\\n              if (token === null || token === 'end') {\\n                break;\\n              }\\n              if (token !== '/') {\\n                continue;\\n              }\\n              var glyph = this.getToken();\\n              length = this.readInt();\\n              this.getToken();\\n              data = stream.makeSubStream(stream.pos, length);\\n              lenIV = program.properties.privateData['lenIV'];\\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\\n              stream.skip(length);\\n              this.nextChar();\\n              token = this.getToken();\\n              if (token === 'noaccess') {\\n                this.getToken();\\n              }\\n              charstrings.push({\\n                glyph: glyph,\\n                encoded: encoded\\n              });\\n            }\\n            break;\\n          case 'Subrs':\\n            this.readInt();\\n            this.getToken();\\n            while (this.getToken() === 'dup') {\\n              var index = this.readInt();\\n              length = this.readInt();\\n              this.getToken();\\n              data = stream.makeSubStream(stream.pos, length);\\n              lenIV = program.properties.privateData['lenIV'];\\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\\n              stream.skip(length);\\n              this.nextChar();\\n              token = this.getToken();\\n              if (token === 'noaccess') {\\n                this.getToken();\\n              }\\n              subrs[index] = encoded;\\n            }\\n            break;\\n          case 'BlueValues':\\n          case 'OtherBlues':\\n          case 'FamilyBlues':\\n          case 'FamilyOtherBlues':\\n            var blueArray = this.readNumberArray();\\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\\n              program.properties.privateData[token] = blueArray;\\n            }\\n            break;\\n          case 'StemSnapH':\\n          case 'StemSnapV':\\n            program.properties.privateData[token] = this.readNumberArray();\\n            break;\\n          case 'StdHW':\\n          case 'StdVW':\\n            program.properties.privateData[token] = this.readNumberArray()[0];\\n            break;\\n          case 'BlueShift':\\n          case 'lenIV':\\n          case 'BlueFuzz':\\n          case 'BlueScale':\\n          case 'LanguageGroup':\\n          case 'ExpansionFactor':\\n            program.properties.privateData[token] = this.readNumber();\\n            break;\\n          case 'ForceBold':\\n            program.properties.privateData[token] = this.readBoolean();\\n            break;\\n        }\\n      }\\n      for (var i = 0; i < charstrings.length; i++) {\\n        glyph = charstrings[i].glyph;\\n        encoded = charstrings[i].encoded;\\n        var charString = new Type1CharString();\\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\\n        var output = charString.output;\\n        if (error) {\\n          output = [14];\\n        }\\n        program.charstrings.push({\\n          glyphName: glyph,\\n          charstring: output,\\n          width: charString.width,\\n          lsb: charString.lsb,\\n          seac: charString.seac\\n        });\\n      }\\n      return program;\\n    },\\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\\n      var token;\\n      while ((token = this.getToken()) !== null) {\\n        if (token !== '/') {\\n          continue;\\n        }\\n        token = this.getToken();\\n        switch (token) {\\n          case 'FontMatrix':\\n            var matrix = this.readNumberArray();\\n            properties.fontMatrix = matrix;\\n            break;\\n          case 'Encoding':\\n            var encodingArg = this.getToken();\\n            var encoding;\\n            if (!/^\\\\d+$/.test(encodingArg)) {\\n              encoding = (0, _encodings.getEncoding)(encodingArg);\\n            } else {\\n              encoding = [];\\n              var size = parseInt(encodingArg, 10) | 0;\\n              this.getToken();\\n              for (var j = 0; j < size; j++) {\\n                token = this.getToken();\\n                while (token !== 'dup' && token !== 'def') {\\n                  token = this.getToken();\\n                  if (token === null) {\\n                    return;\\n                  }\\n                }\\n                if (token === 'def') {\\n                  break;\\n                }\\n                var index = this.readInt();\\n                this.getToken();\\n                var glyph = this.getToken();\\n                encoding[index] = glyph;\\n                this.getToken();\\n              }\\n            }\\n            properties.builtInEncoding = encoding;\\n            break;\\n          case 'FontBBox':\\n            var fontBBox = this.readNumberArray();\\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\n            properties.ascentScaled = true;\\n            break;\\n        }\\n      }\\n    }\\n  };\\n  return Type1Parser;\\n}();\\nexports.Type1Parser = Type1Parser;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\\n  t[63721] = 0x00A9;\\n  t[63193] = 0x00A9;\\n  t[63720] = 0x00AE;\\n  t[63194] = 0x00AE;\\n  t[63722] = 0x2122;\\n  t[63195] = 0x2122;\\n  t[63729] = 0x23A7;\\n  t[63730] = 0x23A8;\\n  t[63731] = 0x23A9;\\n  t[63740] = 0x23AB;\\n  t[63741] = 0x23AC;\\n  t[63742] = 0x23AD;\\n  t[63726] = 0x23A1;\\n  t[63727] = 0x23A2;\\n  t[63728] = 0x23A3;\\n  t[63737] = 0x23A4;\\n  t[63738] = 0x23A5;\\n  t[63739] = 0x23A6;\\n  t[63723] = 0x239B;\\n  t[63724] = 0x239C;\\n  t[63725] = 0x239D;\\n  t[63734] = 0x239E;\\n  t[63735] = 0x239F;\\n  t[63736] = 0x23A0;\\n});\\nfunction mapSpecialUnicodeValues(code) {\\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\\n    return 0;\\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\\n    return getSpecialPUASymbols()[code] || code;\\n  } else if (code === 0x00AD) {\\n    return 0x002D;\\n  }\\n  return code;\\n}\\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\\n  var unicode = glyphsUnicodeMap[name];\\n  if (unicode !== undefined) {\\n    return unicode;\\n  }\\n  if (!name) {\\n    return -1;\\n  }\\n  if (name[0] === 'u') {\\n    var nameLen = name.length,\\n        hexStr;\\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\\n      hexStr = name.substr(3);\\n    } else if (nameLen >= 5 && nameLen <= 7) {\\n      hexStr = name.substr(1);\\n    } else {\\n      return -1;\\n    }\\n    if (hexStr === hexStr.toUpperCase()) {\\n      unicode = parseInt(hexStr, 16);\\n      if (unicode >= 0) {\\n        return unicode;\\n      }\\n    }\\n  }\\n  return -1;\\n}\\nvar UnicodeRanges = [{\\n  'begin': 0x0000,\\n  'end': 0x007F\\n}, {\\n  'begin': 0x0080,\\n  'end': 0x00FF\\n}, {\\n  'begin': 0x0100,\\n  'end': 0x017F\\n}, {\\n  'begin': 0x0180,\\n  'end': 0x024F\\n}, {\\n  'begin': 0x0250,\\n  'end': 0x02AF\\n}, {\\n  'begin': 0x02B0,\\n  'end': 0x02FF\\n}, {\\n  'begin': 0x0300,\\n  'end': 0x036F\\n}, {\\n  'begin': 0x0370,\\n  'end': 0x03FF\\n}, {\\n  'begin': 0x2C80,\\n  'end': 0x2CFF\\n}, {\\n  'begin': 0x0400,\\n  'end': 0x04FF\\n}, {\\n  'begin': 0x0530,\\n  'end': 0x058F\\n}, {\\n  'begin': 0x0590,\\n  'end': 0x05FF\\n}, {\\n  'begin': 0xA500,\\n  'end': 0xA63F\\n}, {\\n  'begin': 0x0600,\\n  'end': 0x06FF\\n}, {\\n  'begin': 0x07C0,\\n  'end': 0x07FF\\n}, {\\n  'begin': 0x0900,\\n  'end': 0x097F\\n}, {\\n  'begin': 0x0980,\\n  'end': 0x09FF\\n}, {\\n  'begin': 0x0A00,\\n  'end': 0x0A7F\\n}, {\\n  'begin': 0x0A80,\\n  'end': 0x0AFF\\n}, {\\n  'begin': 0x0B00,\\n  'end': 0x0B7F\\n}, {\\n  'begin': 0x0B80,\\n  'end': 0x0BFF\\n}, {\\n  'begin': 0x0C00,\\n  'end': 0x0C7F\\n}, {\\n  'begin': 0x0C80,\\n  'end': 0x0CFF\\n}, {\\n  'begin': 0x0D00,\\n  'end': 0x0D7F\\n}, {\\n  'begin': 0x0E00,\\n  'end': 0x0E7F\\n}, {\\n  'begin': 0x0E80,\\n  'end': 0x0EFF\\n}, {\\n  'begin': 0x10A0,\\n  'end': 0x10FF\\n}, {\\n  'begin': 0x1B00,\\n  'end': 0x1B7F\\n}, {\\n  'begin': 0x1100,\\n  'end': 0x11FF\\n}, {\\n  'begin': 0x1E00,\\n  'end': 0x1EFF\\n}, {\\n  'begin': 0x1F00,\\n  'end': 0x1FFF\\n}, {\\n  'begin': 0x2000,\\n  'end': 0x206F\\n}, {\\n  'begin': 0x2070,\\n  'end': 0x209F\\n}, {\\n  'begin': 0x20A0,\\n  'end': 0x20CF\\n}, {\\n  'begin': 0x20D0,\\n  'end': 0x20FF\\n}, {\\n  'begin': 0x2100,\\n  'end': 0x214F\\n}, {\\n  'begin': 0x2150,\\n  'end': 0x218F\\n}, {\\n  'begin': 0x2190,\\n  'end': 0x21FF\\n}, {\\n  'begin': 0x2200,\\n  'end': 0x22FF\\n}, {\\n  'begin': 0x2300,\\n  'end': 0x23FF\\n}, {\\n  'begin': 0x2400,\\n  'end': 0x243F\\n}, {\\n  'begin': 0x2440,\\n  'end': 0x245F\\n}, {\\n  'begin': 0x2460,\\n  'end': 0x24FF\\n}, {\\n  'begin': 0x2500,\\n  'end': 0x257F\\n}, {\\n  'begin': 0x2580,\\n  'end': 0x259F\\n}, {\\n  'begin': 0x25A0,\\n  'end': 0x25FF\\n}, {\\n  'begin': 0x2600,\\n  'end': 0x26FF\\n}, {\\n  'begin': 0x2700,\\n  'end': 0x27BF\\n}, {\\n  'begin': 0x3000,\\n  'end': 0x303F\\n}, {\\n  'begin': 0x3040,\\n  'end': 0x309F\\n}, {\\n  'begin': 0x30A0,\\n  'end': 0x30FF\\n}, {\\n  'begin': 0x3100,\\n  'end': 0x312F\\n}, {\\n  'begin': 0x3130,\\n  'end': 0x318F\\n}, {\\n  'begin': 0xA840,\\n  'end': 0xA87F\\n}, {\\n  'begin': 0x3200,\\n  'end': 0x32FF\\n}, {\\n  'begin': 0x3300,\\n  'end': 0x33FF\\n}, {\\n  'begin': 0xAC00,\\n  'end': 0xD7AF\\n}, {\\n  'begin': 0xD800,\\n  'end': 0xDFFF\\n}, {\\n  'begin': 0x10900,\\n  'end': 0x1091F\\n}, {\\n  'begin': 0x4E00,\\n  'end': 0x9FFF\\n}, {\\n  'begin': 0xE000,\\n  'end': 0xF8FF\\n}, {\\n  'begin': 0x31C0,\\n  'end': 0x31EF\\n}, {\\n  'begin': 0xFB00,\\n  'end': 0xFB4F\\n}, {\\n  'begin': 0xFB50,\\n  'end': 0xFDFF\\n}, {\\n  'begin': 0xFE20,\\n  'end': 0xFE2F\\n}, {\\n  'begin': 0xFE10,\\n  'end': 0xFE1F\\n}, {\\n  'begin': 0xFE50,\\n  'end': 0xFE6F\\n}, {\\n  'begin': 0xFE70,\\n  'end': 0xFEFF\\n}, {\\n  'begin': 0xFF00,\\n  'end': 0xFFEF\\n}, {\\n  'begin': 0xFFF0,\\n  'end': 0xFFFF\\n}, {\\n  'begin': 0x0F00,\\n  'end': 0x0FFF\\n}, {\\n  'begin': 0x0700,\\n  'end': 0x074F\\n}, {\\n  'begin': 0x0780,\\n  'end': 0x07BF\\n}, {\\n  'begin': 0x0D80,\\n  'end': 0x0DFF\\n}, {\\n  'begin': 0x1000,\\n  'end': 0x109F\\n}, {\\n  'begin': 0x1200,\\n  'end': 0x137F\\n}, {\\n  'begin': 0x13A0,\\n  'end': 0x13FF\\n}, {\\n  'begin': 0x1400,\\n  'end': 0x167F\\n}, {\\n  'begin': 0x1680,\\n  'end': 0x169F\\n}, {\\n  'begin': 0x16A0,\\n  'end': 0x16FF\\n}, {\\n  'begin': 0x1780,\\n  'end': 0x17FF\\n}, {\\n  'begin': 0x1800,\\n  'end': 0x18AF\\n}, {\\n  'begin': 0x2800,\\n  'end': 0x28FF\\n}, {\\n  'begin': 0xA000,\\n  'end': 0xA48F\\n}, {\\n  'begin': 0x1700,\\n  'end': 0x171F\\n}, {\\n  'begin': 0x10300,\\n  'end': 0x1032F\\n}, {\\n  'begin': 0x10330,\\n  'end': 0x1034F\\n}, {\\n  'begin': 0x10400,\\n  'end': 0x1044F\\n}, {\\n  'begin': 0x1D000,\\n  'end': 0x1D0FF\\n}, {\\n  'begin': 0x1D400,\\n  'end': 0x1D7FF\\n}, {\\n  'begin': 0xFF000,\\n  'end': 0xFFFFD\\n}, {\\n  'begin': 0xFE00,\\n  'end': 0xFE0F\\n}, {\\n  'begin': 0xE0000,\\n  'end': 0xE007F\\n}, {\\n  'begin': 0x1900,\\n  'end': 0x194F\\n}, {\\n  'begin': 0x1950,\\n  'end': 0x197F\\n}, {\\n  'begin': 0x1980,\\n  'end': 0x19DF\\n}, {\\n  'begin': 0x1A00,\\n  'end': 0x1A1F\\n}, {\\n  'begin': 0x2C00,\\n  'end': 0x2C5F\\n}, {\\n  'begin': 0x2D30,\\n  'end': 0x2D7F\\n}, {\\n  'begin': 0x4DC0,\\n  'end': 0x4DFF\\n}, {\\n  'begin': 0xA800,\\n  'end': 0xA82F\\n}, {\\n  'begin': 0x10000,\\n  'end': 0x1007F\\n}, {\\n  'begin': 0x10140,\\n  'end': 0x1018F\\n}, {\\n  'begin': 0x10380,\\n  'end': 0x1039F\\n}, {\\n  'begin': 0x103A0,\\n  'end': 0x103DF\\n}, {\\n  'begin': 0x10450,\\n  'end': 0x1047F\\n}, {\\n  'begin': 0x10480,\\n  'end': 0x104AF\\n}, {\\n  'begin': 0x10800,\\n  'end': 0x1083F\\n}, {\\n  'begin': 0x10A00,\\n  'end': 0x10A5F\\n}, {\\n  'begin': 0x1D300,\\n  'end': 0x1D35F\\n}, {\\n  'begin': 0x12000,\\n  'end': 0x123FF\\n}, {\\n  'begin': 0x1D360,\\n  'end': 0x1D37F\\n}, {\\n  'begin': 0x1B80,\\n  'end': 0x1BBF\\n}, {\\n  'begin': 0x1C00,\\n  'end': 0x1C4F\\n}, {\\n  'begin': 0x1C50,\\n  'end': 0x1C7F\\n}, {\\n  'begin': 0xA880,\\n  'end': 0xA8DF\\n}, {\\n  'begin': 0xA900,\\n  'end': 0xA92F\\n}, {\\n  'begin': 0xA930,\\n  'end': 0xA95F\\n}, {\\n  'begin': 0xAA00,\\n  'end': 0xAA5F\\n}, {\\n  'begin': 0x10190,\\n  'end': 0x101CF\\n}, {\\n  'begin': 0x101D0,\\n  'end': 0x101FF\\n}, {\\n  'begin': 0x102A0,\\n  'end': 0x102DF\\n}, {\\n  'begin': 0x1F030,\\n  'end': 0x1F09F\\n}];\\nfunction getUnicodeRangeFor(value) {\\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\\n    var range = UnicodeRanges[i];\\n    if (value >= range.begin && value < range.end) {\\n      return i;\\n    }\\n  }\\n  return -1;\\n}\\nfunction isRTLRangeFor(value) {\\n  var range = UnicodeRanges[13];\\n  if (value >= range.begin && value < range.end) {\\n    return true;\\n  }\\n  range = UnicodeRanges[11];\\n  if (value >= range.begin && value < range.end) {\\n    return true;\\n  }\\n  return false;\\n}\\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\\n  t['\\\\u00A8'] = '\\\\u0020\\\\u0308';\\n  t['\\\\u00AF'] = '\\\\u0020\\\\u0304';\\n  t['\\\\u00B4'] = '\\\\u0020\\\\u0301';\\n  t['\\\\u00B5'] = '\\\\u03BC';\\n  t['\\\\u00B8'] = '\\\\u0020\\\\u0327';\\n  t['\\\\u0132'] = '\\\\u0049\\\\u004A';\\n  t['\\\\u0133'] = '\\\\u0069\\\\u006A';\\n  t['\\\\u013F'] = '\\\\u004C\\\\u00B7';\\n  t['\\\\u0140'] = '\\\\u006C\\\\u00B7';\\n  t['\\\\u0149'] = '\\\\u02BC\\\\u006E';\\n  t['\\\\u017F'] = '\\\\u0073';\\n  t['\\\\u01C4'] = '\\\\u0044\\\\u017D';\\n  t['\\\\u01C5'] = '\\\\u0044\\\\u017E';\\n  t['\\\\u01C6'] = '\\\\u0064\\\\u017E';\\n  t['\\\\u01C7'] = '\\\\u004C\\\\u004A';\\n  t['\\\\u01C8'] = '\\\\u004C\\\\u006A';\\n  t['\\\\u01C9'] = '\\\\u006C\\\\u006A';\\n  t['\\\\u01CA'] = '\\\\u004E\\\\u004A';\\n  t['\\\\u01CB'] = '\\\\u004E\\\\u006A';\\n  t['\\\\u01CC'] = '\\\\u006E\\\\u006A';\\n  t['\\\\u01F1'] = '\\\\u0044\\\\u005A';\\n  t['\\\\u01F2'] = '\\\\u0044\\\\u007A';\\n  t['\\\\u01F3'] = '\\\\u0064\\\\u007A';\\n  t['\\\\u02D8'] = '\\\\u0020\\\\u0306';\\n  t['\\\\u02D9'] = '\\\\u0020\\\\u0307';\\n  t['\\\\u02DA'] = '\\\\u0020\\\\u030A';\\n  t['\\\\u02DB'] = '\\\\u0020\\\\u0328';\\n  t['\\\\u02DC'] = '\\\\u0020\\\\u0303';\\n  t['\\\\u02DD'] = '\\\\u0020\\\\u030B';\\n  t['\\\\u037A'] = '\\\\u0020\\\\u0345';\\n  t['\\\\u0384'] = '\\\\u0020\\\\u0301';\\n  t['\\\\u03D0'] = '\\\\u03B2';\\n  t['\\\\u03D1'] = '\\\\u03B8';\\n  t['\\\\u03D2'] = '\\\\u03A5';\\n  t['\\\\u03D5'] = '\\\\u03C6';\\n  t['\\\\u03D6'] = '\\\\u03C0';\\n  t['\\\\u03F0'] = '\\\\u03BA';\\n  t['\\\\u03F1'] = '\\\\u03C1';\\n  t['\\\\u03F2'] = '\\\\u03C2';\\n  t['\\\\u03F4'] = '\\\\u0398';\\n  t['\\\\u03F5'] = '\\\\u03B5';\\n  t['\\\\u03F9'] = '\\\\u03A3';\\n  t['\\\\u0587'] = '\\\\u0565\\\\u0582';\\n  t['\\\\u0675'] = '\\\\u0627\\\\u0674';\\n  t['\\\\u0676'] = '\\\\u0648\\\\u0674';\\n  t['\\\\u0677'] = '\\\\u06C7\\\\u0674';\\n  t['\\\\u0678'] = '\\\\u064A\\\\u0674';\\n  t['\\\\u0E33'] = '\\\\u0E4D\\\\u0E32';\\n  t['\\\\u0EB3'] = '\\\\u0ECD\\\\u0EB2';\\n  t['\\\\u0EDC'] = '\\\\u0EAB\\\\u0E99';\\n  t['\\\\u0EDD'] = '\\\\u0EAB\\\\u0EA1';\\n  t['\\\\u0F77'] = '\\\\u0FB2\\\\u0F81';\\n  t['\\\\u0F79'] = '\\\\u0FB3\\\\u0F81';\\n  t['\\\\u1E9A'] = '\\\\u0061\\\\u02BE';\\n  t['\\\\u1FBD'] = '\\\\u0020\\\\u0313';\\n  t['\\\\u1FBF'] = '\\\\u0020\\\\u0313';\\n  t['\\\\u1FC0'] = '\\\\u0020\\\\u0342';\\n  t['\\\\u1FFE'] = '\\\\u0020\\\\u0314';\\n  t['\\\\u2002'] = '\\\\u0020';\\n  t['\\\\u2003'] = '\\\\u0020';\\n  t['\\\\u2004'] = '\\\\u0020';\\n  t['\\\\u2005'] = '\\\\u0020';\\n  t['\\\\u2006'] = '\\\\u0020';\\n  t['\\\\u2008'] = '\\\\u0020';\\n  t['\\\\u2009'] = '\\\\u0020';\\n  t['\\\\u200A'] = '\\\\u0020';\\n  t['\\\\u2017'] = '\\\\u0020\\\\u0333';\\n  t['\\\\u2024'] = '\\\\u002E';\\n  t['\\\\u2025'] = '\\\\u002E\\\\u002E';\\n  t['\\\\u2026'] = '\\\\u002E\\\\u002E\\\\u002E';\\n  t['\\\\u2033'] = '\\\\u2032\\\\u2032';\\n  t['\\\\u2034'] = '\\\\u2032\\\\u2032\\\\u2032';\\n  t['\\\\u2036'] = '\\\\u2035\\\\u2035';\\n  t['\\\\u2037'] = '\\\\u2035\\\\u2035\\\\u2035';\\n  t['\\\\u203C'] = '\\\\u0021\\\\u0021';\\n  t['\\\\u203E'] = '\\\\u0020\\\\u0305';\\n  t['\\\\u2047'] = '\\\\u003F\\\\u003F';\\n  t['\\\\u2048'] = '\\\\u003F\\\\u0021';\\n  t['\\\\u2049'] = '\\\\u0021\\\\u003F';\\n  t['\\\\u2057'] = '\\\\u2032\\\\u2032\\\\u2032\\\\u2032';\\n  t['\\\\u205F'] = '\\\\u0020';\\n  t['\\\\u20A8'] = '\\\\u0052\\\\u0073';\\n  t['\\\\u2100'] = '\\\\u0061\\\\u002F\\\\u0063';\\n  t['\\\\u2101'] = '\\\\u0061\\\\u002F\\\\u0073';\\n  t['\\\\u2103'] = '\\\\u00B0\\\\u0043';\\n  t['\\\\u2105'] = '\\\\u0063\\\\u002F\\\\u006F';\\n  t['\\\\u2106'] = '\\\\u0063\\\\u002F\\\\u0075';\\n  t['\\\\u2107'] = '\\\\u0190';\\n  t['\\\\u2109'] = '\\\\u00B0\\\\u0046';\\n  t['\\\\u2116'] = '\\\\u004E\\\\u006F';\\n  t['\\\\u2121'] = '\\\\u0054\\\\u0045\\\\u004C';\\n  t['\\\\u2135'] = '\\\\u05D0';\\n  t['\\\\u2136'] = '\\\\u05D1';\\n  t['\\\\u2137'] = '\\\\u05D2';\\n  t['\\\\u2138'] = '\\\\u05D3';\\n  t['\\\\u213B'] = '\\\\u0046\\\\u0041\\\\u0058';\\n  t['\\\\u2160'] = '\\\\u0049';\\n  t['\\\\u2161'] = '\\\\u0049\\\\u0049';\\n  t['\\\\u2162'] = '\\\\u0049\\\\u0049\\\\u0049';\\n  t['\\\\u2163'] = '\\\\u0049\\\\u0056';\\n  t['\\\\u2164'] = '\\\\u0056';\\n  t['\\\\u2165'] = '\\\\u0056\\\\u0049';\\n  t['\\\\u2166'] = '\\\\u0056\\\\u0049\\\\u0049';\\n  t['\\\\u2167'] = '\\\\u0056\\\\u0049\\\\u0049\\\\u0049';\\n  t['\\\\u2168'] = '\\\\u0049\\\\u0058';\\n  t['\\\\u2169'] = '\\\\u0058';\\n  t['\\\\u216A'] = '\\\\u0058\\\\u0049';\\n  t['\\\\u216B'] = '\\\\u0058\\\\u0049\\\\u0049';\\n  t['\\\\u216C'] = '\\\\u004C';\\n  t['\\\\u216D'] = '\\\\u0043';\\n  t['\\\\u216E'] = '\\\\u0044';\\n  t['\\\\u216F'] = '\\\\u004D';\\n  t['\\\\u2170'] = '\\\\u0069';\\n  t['\\\\u2171'] = '\\\\u0069\\\\u0069';\\n  t['\\\\u2172'] = '\\\\u0069\\\\u0069\\\\u0069';\\n  t['\\\\u2173'] = '\\\\u0069\\\\u0076';\\n  t['\\\\u2174'] = '\\\\u0076';\\n  t['\\\\u2175'] = '\\\\u0076\\\\u0069';\\n  t['\\\\u2176'] = '\\\\u0076\\\\u0069\\\\u0069';\\n  t['\\\\u2177'] = '\\\\u0076\\\\u0069\\\\u0069\\\\u0069';\\n  t['\\\\u2178'] = '\\\\u0069\\\\u0078';\\n  t['\\\\u2179'] = '\\\\u0078';\\n  t['\\\\u217A'] = '\\\\u0078\\\\u0069';\\n  t['\\\\u217B'] = '\\\\u0078\\\\u0069\\\\u0069';\\n  t['\\\\u217C'] = '\\\\u006C';\\n  t['\\\\u217D'] = '\\\\u0063';\\n  t['\\\\u217E'] = '\\\\u0064';\\n  t['\\\\u217F'] = '\\\\u006D';\\n  t['\\\\u222C'] = '\\\\u222B\\\\u222B';\\n  t['\\\\u222D'] = '\\\\u222B\\\\u222B\\\\u222B';\\n  t['\\\\u222F'] = '\\\\u222E\\\\u222E';\\n  t['\\\\u2230'] = '\\\\u222E\\\\u222E\\\\u222E';\\n  t['\\\\u2474'] = '\\\\u0028\\\\u0031\\\\u0029';\\n  t['\\\\u2475'] = '\\\\u0028\\\\u0032\\\\u0029';\\n  t['\\\\u2476'] = '\\\\u0028\\\\u0033\\\\u0029';\\n  t['\\\\u2477'] = '\\\\u0028\\\\u0034\\\\u0029';\\n  t['\\\\u2478'] = '\\\\u0028\\\\u0035\\\\u0029';\\n  t['\\\\u2479'] = '\\\\u0028\\\\u0036\\\\u0029';\\n  t['\\\\u247A'] = '\\\\u0028\\\\u0037\\\\u0029';\\n  t['\\\\u247B'] = '\\\\u0028\\\\u0038\\\\u0029';\\n  t['\\\\u247C'] = '\\\\u0028\\\\u0039\\\\u0029';\\n  t['\\\\u247D'] = '\\\\u0028\\\\u0031\\\\u0030\\\\u0029';\\n  t['\\\\u247E'] = '\\\\u0028\\\\u0031\\\\u0031\\\\u0029';\\n  t['\\\\u247F'] = '\\\\u0028\\\\u0031\\\\u0032\\\\u0029';\\n  t['\\\\u2480'] = '\\\\u0028\\\\u0031\\\\u0033\\\\u0029';\\n  t['\\\\u2481'] = '\\\\u0028\\\\u0031\\\\u0034\\\\u0029';\\n  t['\\\\u2482'] = '\\\\u0028\\\\u0031\\\\u0035\\\\u0029';\\n  t['\\\\u2483'] = '\\\\u0028\\\\u0031\\\\u0036\\\\u0029';\\n  t['\\\\u2484'] = '\\\\u0028\\\\u0031\\\\u0037\\\\u0029';\\n  t['\\\\u2485'] = '\\\\u0028\\\\u0031\\\\u0038\\\\u0029';\\n  t['\\\\u2486'] = '\\\\u0028\\\\u0031\\\\u0039\\\\u0029';\\n  t['\\\\u2487'] = '\\\\u0028\\\\u0032\\\\u0030\\\\u0029';\\n  t['\\\\u2488'] = '\\\\u0031\\\\u002E';\\n  t['\\\\u2489'] = '\\\\u0032\\\\u002E';\\n  t['\\\\u248A'] = '\\\\u0033\\\\u002E';\\n  t['\\\\u248B'] = '\\\\u0034\\\\u002E';\\n  t['\\\\u248C'] = '\\\\u0035\\\\u002E';\\n  t['\\\\u248D'] = '\\\\u0036\\\\u002E';\\n  t['\\\\u248E'] = '\\\\u0037\\\\u002E';\\n  t['\\\\u248F'] = '\\\\u0038\\\\u002E';\\n  t['\\\\u2490'] = '\\\\u0039\\\\u002E';\\n  t['\\\\u2491'] = '\\\\u0031\\\\u0030\\\\u002E';\\n  t['\\\\u2492'] = '\\\\u0031\\\\u0031\\\\u002E';\\n  t['\\\\u2493'] = '\\\\u0031\\\\u0032\\\\u002E';\\n  t['\\\\u2494'] = '\\\\u0031\\\\u0033\\\\u002E';\\n  t['\\\\u2495'] = '\\\\u0031\\\\u0034\\\\u002E';\\n  t['\\\\u2496'] = '\\\\u0031\\\\u0035\\\\u002E';\\n  t['\\\\u2497'] = '\\\\u0031\\\\u0036\\\\u002E';\\n  t['\\\\u2498'] = '\\\\u0031\\\\u0037\\\\u002E';\\n  t['\\\\u2499'] = '\\\\u0031\\\\u0038\\\\u002E';\\n  t['\\\\u249A'] = '\\\\u0031\\\\u0039\\\\u002E';\\n  t['\\\\u249B'] = '\\\\u0032\\\\u0030\\\\u002E';\\n  t['\\\\u249C'] = '\\\\u0028\\\\u0061\\\\u0029';\\n  t['\\\\u249D'] = '\\\\u0028\\\\u0062\\\\u0029';\\n  t['\\\\u249E'] = '\\\\u0028\\\\u0063\\\\u0029';\\n  t['\\\\u249F'] = '\\\\u0028\\\\u0064\\\\u0029';\\n  t['\\\\u24A0'] = '\\\\u0028\\\\u0065\\\\u0029';\\n  t['\\\\u24A1'] = '\\\\u0028\\\\u0066\\\\u0029';\\n  t['\\\\u24A2'] = '\\\\u0028\\\\u0067\\\\u0029';\\n  t['\\\\u24A3'] = '\\\\u0028\\\\u0068\\\\u0029';\\n  t['\\\\u24A4'] = '\\\\u0028\\\\u0069\\\\u0029';\\n  t['\\\\u24A5'] = '\\\\u0028\\\\u006A\\\\u0029';\\n  t['\\\\u24A6'] = '\\\\u0028\\\\u006B\\\\u0029';\\n  t['\\\\u24A7'] = '\\\\u0028\\\\u006C\\\\u0029';\\n  t['\\\\u24A8'] = '\\\\u0028\\\\u006D\\\\u0029';\\n  t['\\\\u24A9'] = '\\\\u0028\\\\u006E\\\\u0029';\\n  t['\\\\u24AA'] = '\\\\u0028\\\\u006F\\\\u0029';\\n  t['\\\\u24AB'] = '\\\\u0028\\\\u0070\\\\u0029';\\n  t['\\\\u24AC'] = '\\\\u0028\\\\u0071\\\\u0029';\\n  t['\\\\u24AD'] = '\\\\u0028\\\\u0072\\\\u0029';\\n  t['\\\\u24AE'] = '\\\\u0028\\\\u0073\\\\u0029';\\n  t['\\\\u24AF'] = '\\\\u0028\\\\u0074\\\\u0029';\\n  t['\\\\u24B0'] = '\\\\u0028\\\\u0075\\\\u0029';\\n  t['\\\\u24B1'] = '\\\\u0028\\\\u0076\\\\u0029';\\n  t['\\\\u24B2'] = '\\\\u0028\\\\u0077\\\\u0029';\\n  t['\\\\u24B3'] = '\\\\u0028\\\\u0078\\\\u0029';\\n  t['\\\\u24B4'] = '\\\\u0028\\\\u0079\\\\u0029';\\n  t['\\\\u24B5'] = '\\\\u0028\\\\u007A\\\\u0029';\\n  t['\\\\u2A0C'] = '\\\\u222B\\\\u222B\\\\u222B\\\\u222B';\\n  t['\\\\u2A74'] = '\\\\u003A\\\\u003A\\\\u003D';\\n  t['\\\\u2A75'] = '\\\\u003D\\\\u003D';\\n  t['\\\\u2A76'] = '\\\\u003D\\\\u003D\\\\u003D';\\n  t['\\\\u2E9F'] = '\\\\u6BCD';\\n  t['\\\\u2EF3'] = '\\\\u9F9F';\\n  t['\\\\u2F00'] = '\\\\u4E00';\\n  t['\\\\u2F01'] = '\\\\u4E28';\\n  t['\\\\u2F02'] = '\\\\u4E36';\\n  t['\\\\u2F03'] = '\\\\u4E3F';\\n  t['\\\\u2F04'] = '\\\\u4E59';\\n  t['\\\\u2F05'] = '\\\\u4E85';\\n  t['\\\\u2F06'] = '\\\\u4E8C';\\n  t['\\\\u2F07'] = '\\\\u4EA0';\\n  t['\\\\u2F08'] = '\\\\u4EBA';\\n  t['\\\\u2F09'] = '\\\\u513F';\\n  t['\\\\u2F0A'] = '\\\\u5165';\\n  t['\\\\u2F0B'] = '\\\\u516B';\\n  t['\\\\u2F0C'] = '\\\\u5182';\\n  t['\\\\u2F0D'] = '\\\\u5196';\\n  t['\\\\u2F0E'] = '\\\\u51AB';\\n  t['\\\\u2F0F'] = '\\\\u51E0';\\n  t['\\\\u2F10'] = '\\\\u51F5';\\n  t['\\\\u2F11'] = '\\\\u5200';\\n  t['\\\\u2F12'] = '\\\\u529B';\\n  t['\\\\u2F13'] = '\\\\u52F9';\\n  t['\\\\u2F14'] = '\\\\u5315';\\n  t['\\\\u2F15'] = '\\\\u531A';\\n  t['\\\\u2F16'] = '\\\\u5338';\\n  t['\\\\u2F17'] = '\\\\u5341';\\n  t['\\\\u2F18'] = '\\\\u535C';\\n  t['\\\\u2F19'] = '\\\\u5369';\\n  t['\\\\u2F1A'] = '\\\\u5382';\\n  t['\\\\u2F1B'] = '\\\\u53B6';\\n  t['\\\\u2F1C'] = '\\\\u53C8';\\n  t['\\\\u2F1D'] = '\\\\u53E3';\\n  t['\\\\u2F1E'] = '\\\\u56D7';\\n  t['\\\\u2F1F'] = '\\\\u571F';\\n  t['\\\\u2F20'] = '\\\\u58EB';\\n  t['\\\\u2F21'] = '\\\\u5902';\\n  t['\\\\u2F22'] = '\\\\u590A';\\n  t['\\\\u2F23'] = '\\\\u5915';\\n  t['\\\\u2F24'] = '\\\\u5927';\\n  t['\\\\u2F25'] = '\\\\u5973';\\n  t['\\\\u2F26'] = '\\\\u5B50';\\n  t['\\\\u2F27'] = '\\\\u5B80';\\n  t['\\\\u2F28'] = '\\\\u5BF8';\\n  t['\\\\u2F29'] = '\\\\u5C0F';\\n  t['\\\\u2F2A'] = '\\\\u5C22';\\n  t['\\\\u2F2B'] = '\\\\u5C38';\\n  t['\\\\u2F2C'] = '\\\\u5C6E';\\n  t['\\\\u2F2D'] = '\\\\u5C71';\\n  t['\\\\u2F2E'] = '\\\\u5DDB';\\n  t['\\\\u2F2F'] = '\\\\u5DE5';\\n  t['\\\\u2F30'] = '\\\\u5DF1';\\n  t['\\\\u2F31'] = '\\\\u5DFE';\\n  t['\\\\u2F32'] = '\\\\u5E72';\\n  t['\\\\u2F33'] = '\\\\u5E7A';\\n  t['\\\\u2F34'] = '\\\\u5E7F';\\n  t['\\\\u2F35'] = '\\\\u5EF4';\\n  t['\\\\u2F36'] = '\\\\u5EFE';\\n  t['\\\\u2F37'] = '\\\\u5F0B';\\n  t['\\\\u2F38'] = '\\\\u5F13';\\n  t['\\\\u2F39'] = '\\\\u5F50';\\n  t['\\\\u2F3A'] = '\\\\u5F61';\\n  t['\\\\u2F3B'] = '\\\\u5F73';\\n  t['\\\\u2F3C'] = '\\\\u5FC3';\\n  t['\\\\u2F3D'] = '\\\\u6208';\\n  t['\\\\u2F3E'] = '\\\\u6236';\\n  t['\\\\u2F3F'] = '\\\\u624B';\\n  t['\\\\u2F40'] = '\\\\u652F';\\n  t['\\\\u2F41'] = '\\\\u6534';\\n  t['\\\\u2F42'] = '\\\\u6587';\\n  t['\\\\u2F43'] = '\\\\u6597';\\n  t['\\\\u2F44'] = '\\\\u65A4';\\n  t['\\\\u2F45'] = '\\\\u65B9';\\n  t['\\\\u2F46'] = '\\\\u65E0';\\n  t['\\\\u2F47'] = '\\\\u65E5';\\n  t['\\\\u2F48'] = '\\\\u66F0';\\n  t['\\\\u2F49'] = '\\\\u6708';\\n  t['\\\\u2F4A'] = '\\\\u6728';\\n  t['\\\\u2F4B'] = '\\\\u6B20';\\n  t['\\\\u2F4C'] = '\\\\u6B62';\\n  t['\\\\u2F4D'] = '\\\\u6B79';\\n  t['\\\\u2F4E'] = '\\\\u6BB3';\\n  t['\\\\u2F4F'] = '\\\\u6BCB';\\n  t['\\\\u2F50'] = '\\\\u6BD4';\\n  t['\\\\u2F51'] = '\\\\u6BDB';\\n  t['\\\\u2F52'] = '\\\\u6C0F';\\n  t['\\\\u2F53'] = '\\\\u6C14';\\n  t['\\\\u2F54'] = '\\\\u6C34';\\n  t['\\\\u2F55'] = '\\\\u706B';\\n  t['\\\\u2F56'] = '\\\\u722A';\\n  t['\\\\u2F57'] = '\\\\u7236';\\n  t['\\\\u2F58'] = '\\\\u723B';\\n  t['\\\\u2F59'] = '\\\\u723F';\\n  t['\\\\u2F5A'] = '\\\\u7247';\\n  t['\\\\u2F5B'] = '\\\\u7259';\\n  t['\\\\u2F5C'] = '\\\\u725B';\\n  t['\\\\u2F5D'] = '\\\\u72AC';\\n  t['\\\\u2F5E'] = '\\\\u7384';\\n  t['\\\\u2F5F'] = '\\\\u7389';\\n  t['\\\\u2F60'] = '\\\\u74DC';\\n  t['\\\\u2F61'] = '\\\\u74E6';\\n  t['\\\\u2F62'] = '\\\\u7518';\\n  t['\\\\u2F63'] = '\\\\u751F';\\n  t['\\\\u2F64'] = '\\\\u7528';\\n  t['\\\\u2F65'] = '\\\\u7530';\\n  t['\\\\u2F66'] = '\\\\u758B';\\n  t['\\\\u2F67'] = '\\\\u7592';\\n  t['\\\\u2F68'] = '\\\\u7676';\\n  t['\\\\u2F69'] = '\\\\u767D';\\n  t['\\\\u2F6A'] = '\\\\u76AE';\\n  t['\\\\u2F6B'] = '\\\\u76BF';\\n  t['\\\\u2F6C'] = '\\\\u76EE';\\n  t['\\\\u2F6D'] = '\\\\u77DB';\\n  t['\\\\u2F6E'] = '\\\\u77E2';\\n  t['\\\\u2F6F'] = '\\\\u77F3';\\n  t['\\\\u2F70'] = '\\\\u793A';\\n  t['\\\\u2F71'] = '\\\\u79B8';\\n  t['\\\\u2F72'] = '\\\\u79BE';\\n  t['\\\\u2F73'] = '\\\\u7A74';\\n  t['\\\\u2F74'] = '\\\\u7ACB';\\n  t['\\\\u2F75'] = '\\\\u7AF9';\\n  t['\\\\u2F76'] = '\\\\u7C73';\\n  t['\\\\u2F77'] = '\\\\u7CF8';\\n  t['\\\\u2F78'] = '\\\\u7F36';\\n  t['\\\\u2F79'] = '\\\\u7F51';\\n  t['\\\\u2F7A'] = '\\\\u7F8A';\\n  t['\\\\u2F7B'] = '\\\\u7FBD';\\n  t['\\\\u2F7C'] = '\\\\u8001';\\n  t['\\\\u2F7D'] = '\\\\u800C';\\n  t['\\\\u2F7E'] = '\\\\u8012';\\n  t['\\\\u2F7F'] = '\\\\u8033';\\n  t['\\\\u2F80'] = '\\\\u807F';\\n  t['\\\\u2F81'] = '\\\\u8089';\\n  t['\\\\u2F82'] = '\\\\u81E3';\\n  t['\\\\u2F83'] = '\\\\u81EA';\\n  t['\\\\u2F84'] = '\\\\u81F3';\\n  t['\\\\u2F85'] = '\\\\u81FC';\\n  t['\\\\u2F86'] = '\\\\u820C';\\n  t['\\\\u2F87'] = '\\\\u821B';\\n  t['\\\\u2F88'] = '\\\\u821F';\\n  t['\\\\u2F89'] = '\\\\u826E';\\n  t['\\\\u2F8A'] = '\\\\u8272';\\n  t['\\\\u2F8B'] = '\\\\u8278';\\n  t['\\\\u2F8C'] = '\\\\u864D';\\n  t['\\\\u2F8D'] = '\\\\u866B';\\n  t['\\\\u2F8E'] = '\\\\u8840';\\n  t['\\\\u2F8F'] = '\\\\u884C';\\n  t['\\\\u2F90'] = '\\\\u8863';\\n  t['\\\\u2F91'] = '\\\\u897E';\\n  t['\\\\u2F92'] = '\\\\u898B';\\n  t['\\\\u2F93'] = '\\\\u89D2';\\n  t['\\\\u2F94'] = '\\\\u8A00';\\n  t['\\\\u2F95'] = '\\\\u8C37';\\n  t['\\\\u2F96'] = '\\\\u8C46';\\n  t['\\\\u2F97'] = '\\\\u8C55';\\n  t['\\\\u2F98'] = '\\\\u8C78';\\n  t['\\\\u2F99'] = '\\\\u8C9D';\\n  t['\\\\u2F9A'] = '\\\\u8D64';\\n  t['\\\\u2F9B'] = '\\\\u8D70';\\n  t['\\\\u2F9C'] = '\\\\u8DB3';\\n  t['\\\\u2F9D'] = '\\\\u8EAB';\\n  t['\\\\u2F9E'] = '\\\\u8ECA';\\n  t['\\\\u2F9F'] = '\\\\u8F9B';\\n  t['\\\\u2FA0'] = '\\\\u8FB0';\\n  t['\\\\u2FA1'] = '\\\\u8FB5';\\n  t['\\\\u2FA2'] = '\\\\u9091';\\n  t['\\\\u2FA3'] = '\\\\u9149';\\n  t['\\\\u2FA4'] = '\\\\u91C6';\\n  t['\\\\u2FA5'] = '\\\\u91CC';\\n  t['\\\\u2FA6'] = '\\\\u91D1';\\n  t['\\\\u2FA7'] = '\\\\u9577';\\n  t['\\\\u2FA8'] = '\\\\u9580';\\n  t['\\\\u2FA9'] = '\\\\u961C';\\n  t['\\\\u2FAA'] = '\\\\u96B6';\\n  t['\\\\u2FAB'] = '\\\\u96B9';\\n  t['\\\\u2FAC'] = '\\\\u96E8';\\n  t['\\\\u2FAD'] = '\\\\u9751';\\n  t['\\\\u2FAE'] = '\\\\u975E';\\n  t['\\\\u2FAF'] = '\\\\u9762';\\n  t['\\\\u2FB0'] = '\\\\u9769';\\n  t['\\\\u2FB1'] = '\\\\u97CB';\\n  t['\\\\u2FB2'] = '\\\\u97ED';\\n  t['\\\\u2FB3'] = '\\\\u97F3';\\n  t['\\\\u2FB4'] = '\\\\u9801';\\n  t['\\\\u2FB5'] = '\\\\u98A8';\\n  t['\\\\u2FB6'] = '\\\\u98DB';\\n  t['\\\\u2FB7'] = '\\\\u98DF';\\n  t['\\\\u2FB8'] = '\\\\u9996';\\n  t['\\\\u2FB9'] = '\\\\u9999';\\n  t['\\\\u2FBA'] = '\\\\u99AC';\\n  t['\\\\u2FBB'] = '\\\\u9AA8';\\n  t['\\\\u2FBC'] = '\\\\u9AD8';\\n  t['\\\\u2FBD'] = '\\\\u9ADF';\\n  t['\\\\u2FBE'] = '\\\\u9B25';\\n  t['\\\\u2FBF'] = '\\\\u9B2F';\\n  t['\\\\u2FC0'] = '\\\\u9B32';\\n  t['\\\\u2FC1'] = '\\\\u9B3C';\\n  t['\\\\u2FC2'] = '\\\\u9B5A';\\n  t['\\\\u2FC3'] = '\\\\u9CE5';\\n  t['\\\\u2FC4'] = '\\\\u9E75';\\n  t['\\\\u2FC5'] = '\\\\u9E7F';\\n  t['\\\\u2FC6'] = '\\\\u9EA5';\\n  t['\\\\u2FC7'] = '\\\\u9EBB';\\n  t['\\\\u2FC8'] = '\\\\u9EC3';\\n  t['\\\\u2FC9'] = '\\\\u9ECD';\\n  t['\\\\u2FCA'] = '\\\\u9ED1';\\n  t['\\\\u2FCB'] = '\\\\u9EF9';\\n  t['\\\\u2FCC'] = '\\\\u9EFD';\\n  t['\\\\u2FCD'] = '\\\\u9F0E';\\n  t['\\\\u2FCE'] = '\\\\u9F13';\\n  t['\\\\u2FCF'] = '\\\\u9F20';\\n  t['\\\\u2FD0'] = '\\\\u9F3B';\\n  t['\\\\u2FD1'] = '\\\\u9F4A';\\n  t['\\\\u2FD2'] = '\\\\u9F52';\\n  t['\\\\u2FD3'] = '\\\\u9F8D';\\n  t['\\\\u2FD4'] = '\\\\u9F9C';\\n  t['\\\\u2FD5'] = '\\\\u9FA0';\\n  t['\\\\u3036'] = '\\\\u3012';\\n  t['\\\\u3038'] = '\\\\u5341';\\n  t['\\\\u3039'] = '\\\\u5344';\\n  t['\\\\u303A'] = '\\\\u5345';\\n  t['\\\\u309B'] = '\\\\u0020\\\\u3099';\\n  t['\\\\u309C'] = '\\\\u0020\\\\u309A';\\n  t['\\\\u3131'] = '\\\\u1100';\\n  t['\\\\u3132'] = '\\\\u1101';\\n  t['\\\\u3133'] = '\\\\u11AA';\\n  t['\\\\u3134'] = '\\\\u1102';\\n  t['\\\\u3135'] = '\\\\u11AC';\\n  t['\\\\u3136'] = '\\\\u11AD';\\n  t['\\\\u3137'] = '\\\\u1103';\\n  t['\\\\u3138'] = '\\\\u1104';\\n  t['\\\\u3139'] = '\\\\u1105';\\n  t['\\\\u313A'] = '\\\\u11B0';\\n  t['\\\\u313B'] = '\\\\u11B1';\\n  t['\\\\u313C'] = '\\\\u11B2';\\n  t['\\\\u313D'] = '\\\\u11B3';\\n  t['\\\\u313E'] = '\\\\u11B4';\\n  t['\\\\u313F'] = '\\\\u11B5';\\n  t['\\\\u3140'] = '\\\\u111A';\\n  t['\\\\u3141'] = '\\\\u1106';\\n  t['\\\\u3142'] = '\\\\u1107';\\n  t['\\\\u3143'] = '\\\\u1108';\\n  t['\\\\u3144'] = '\\\\u1121';\\n  t['\\\\u3145'] = '\\\\u1109';\\n  t['\\\\u3146'] = '\\\\u110A';\\n  t['\\\\u3147'] = '\\\\u110B';\\n  t['\\\\u3148'] = '\\\\u110C';\\n  t['\\\\u3149'] = '\\\\u110D';\\n  t['\\\\u314A'] = '\\\\u110E';\\n  t['\\\\u314B'] = '\\\\u110F';\\n  t['\\\\u314C'] = '\\\\u1110';\\n  t['\\\\u314D'] = '\\\\u1111';\\n  t['\\\\u314E'] = '\\\\u1112';\\n  t['\\\\u314F'] = '\\\\u1161';\\n  t['\\\\u3150'] = '\\\\u1162';\\n  t['\\\\u3151'] = '\\\\u1163';\\n  t['\\\\u3152'] = '\\\\u1164';\\n  t['\\\\u3153'] = '\\\\u1165';\\n  t['\\\\u3154'] = '\\\\u1166';\\n  t['\\\\u3155'] = '\\\\u1167';\\n  t['\\\\u3156'] = '\\\\u1168';\\n  t['\\\\u3157'] = '\\\\u1169';\\n  t['\\\\u3158'] = '\\\\u116A';\\n  t['\\\\u3159'] = '\\\\u116B';\\n  t['\\\\u315A'] = '\\\\u116C';\\n  t['\\\\u315B'] = '\\\\u116D';\\n  t['\\\\u315C'] = '\\\\u116E';\\n  t['\\\\u315D'] = '\\\\u116F';\\n  t['\\\\u315E'] = '\\\\u1170';\\n  t['\\\\u315F'] = '\\\\u1171';\\n  t['\\\\u3160'] = '\\\\u1172';\\n  t['\\\\u3161'] = '\\\\u1173';\\n  t['\\\\u3162'] = '\\\\u1174';\\n  t['\\\\u3163'] = '\\\\u1175';\\n  t['\\\\u3164'] = '\\\\u1160';\\n  t['\\\\u3165'] = '\\\\u1114';\\n  t['\\\\u3166'] = '\\\\u1115';\\n  t['\\\\u3167'] = '\\\\u11C7';\\n  t['\\\\u3168'] = '\\\\u11C8';\\n  t['\\\\u3169'] = '\\\\u11CC';\\n  t['\\\\u316A'] = '\\\\u11CE';\\n  t['\\\\u316B'] = '\\\\u11D3';\\n  t['\\\\u316C'] = '\\\\u11D7';\\n  t['\\\\u316D'] = '\\\\u11D9';\\n  t['\\\\u316E'] = '\\\\u111C';\\n  t['\\\\u316F'] = '\\\\u11DD';\\n  t['\\\\u3170'] = '\\\\u11DF';\\n  t['\\\\u3171'] = '\\\\u111D';\\n  t['\\\\u3172'] = '\\\\u111E';\\n  t['\\\\u3173'] = '\\\\u1120';\\n  t['\\\\u3174'] = '\\\\u1122';\\n  t['\\\\u3175'] = '\\\\u1123';\\n  t['\\\\u3176'] = '\\\\u1127';\\n  t['\\\\u3177'] = '\\\\u1129';\\n  t['\\\\u3178'] = '\\\\u112B';\\n  t['\\\\u3179'] = '\\\\u112C';\\n  t['\\\\u317A'] = '\\\\u112D';\\n  t['\\\\u317B'] = '\\\\u112E';\\n  t['\\\\u317C'] = '\\\\u112F';\\n  t['\\\\u317D'] = '\\\\u1132';\\n  t['\\\\u317E'] = '\\\\u1136';\\n  t['\\\\u317F'] = '\\\\u1140';\\n  t['\\\\u3180'] = '\\\\u1147';\\n  t['\\\\u3181'] = '\\\\u114C';\\n  t['\\\\u3182'] = '\\\\u11F1';\\n  t['\\\\u3183'] = '\\\\u11F2';\\n  t['\\\\u3184'] = '\\\\u1157';\\n  t['\\\\u3185'] = '\\\\u1158';\\n  t['\\\\u3186'] = '\\\\u1159';\\n  t['\\\\u3187'] = '\\\\u1184';\\n  t['\\\\u3188'] = '\\\\u1185';\\n  t['\\\\u3189'] = '\\\\u1188';\\n  t['\\\\u318A'] = '\\\\u1191';\\n  t['\\\\u318B'] = '\\\\u1192';\\n  t['\\\\u318C'] = '\\\\u1194';\\n  t['\\\\u318D'] = '\\\\u119E';\\n  t['\\\\u318E'] = '\\\\u11A1';\\n  t['\\\\u3200'] = '\\\\u0028\\\\u1100\\\\u0029';\\n  t['\\\\u3201'] = '\\\\u0028\\\\u1102\\\\u0029';\\n  t['\\\\u3202'] = '\\\\u0028\\\\u1103\\\\u0029';\\n  t['\\\\u3203'] = '\\\\u0028\\\\u1105\\\\u0029';\\n  t['\\\\u3204'] = '\\\\u0028\\\\u1106\\\\u0029';\\n  t['\\\\u3205'] = '\\\\u0028\\\\u1107\\\\u0029';\\n  t['\\\\u3206'] = '\\\\u0028\\\\u1109\\\\u0029';\\n  t['\\\\u3207'] = '\\\\u0028\\\\u110B\\\\u0029';\\n  t['\\\\u3208'] = '\\\\u0028\\\\u110C\\\\u0029';\\n  t['\\\\u3209'] = '\\\\u0028\\\\u110E\\\\u0029';\\n  t['\\\\u320A'] = '\\\\u0028\\\\u110F\\\\u0029';\\n  t['\\\\u320B'] = '\\\\u0028\\\\u1110\\\\u0029';\\n  t['\\\\u320C'] = '\\\\u0028\\\\u1111\\\\u0029';\\n  t['\\\\u320D'] = '\\\\u0028\\\\u1112\\\\u0029';\\n  t['\\\\u320E'] = '\\\\u0028\\\\u1100\\\\u1161\\\\u0029';\\n  t['\\\\u320F'] = '\\\\u0028\\\\u1102\\\\u1161\\\\u0029';\\n  t['\\\\u3210'] = '\\\\u0028\\\\u1103\\\\u1161\\\\u0029';\\n  t['\\\\u3211'] = '\\\\u0028\\\\u1105\\\\u1161\\\\u0029';\\n  t['\\\\u3212'] = '\\\\u0028\\\\u1106\\\\u1161\\\\u0029';\\n  t['\\\\u3213'] = '\\\\u0028\\\\u1107\\\\u1161\\\\u0029';\\n  t['\\\\u3214'] = '\\\\u0028\\\\u1109\\\\u1161\\\\u0029';\\n  t['\\\\u3215'] = '\\\\u0028\\\\u110B\\\\u1161\\\\u0029';\\n  t['\\\\u3216'] = '\\\\u0028\\\\u110C\\\\u1161\\\\u0029';\\n  t['\\\\u3217'] = '\\\\u0028\\\\u110E\\\\u1161\\\\u0029';\\n  t['\\\\u3218'] = '\\\\u0028\\\\u110F\\\\u1161\\\\u0029';\\n  t['\\\\u3219'] = '\\\\u0028\\\\u1110\\\\u1161\\\\u0029';\\n  t['\\\\u321A'] = '\\\\u0028\\\\u1111\\\\u1161\\\\u0029';\\n  t['\\\\u321B'] = '\\\\u0028\\\\u1112\\\\u1161\\\\u0029';\\n  t['\\\\u321C'] = '\\\\u0028\\\\u110C\\\\u116E\\\\u0029';\\n  t['\\\\u321D'] = '\\\\u0028\\\\u110B\\\\u1169\\\\u110C\\\\u1165\\\\u11AB\\\\u0029';\\n  t['\\\\u321E'] = '\\\\u0028\\\\u110B\\\\u1169\\\\u1112\\\\u116E\\\\u0029';\\n  t['\\\\u3220'] = '\\\\u0028\\\\u4E00\\\\u0029';\\n  t['\\\\u3221'] = '\\\\u0028\\\\u4E8C\\\\u0029';\\n  t['\\\\u3222'] = '\\\\u0028\\\\u4E09\\\\u0029';\\n  t['\\\\u3223'] = '\\\\u0028\\\\u56DB\\\\u0029';\\n  t['\\\\u3224'] = '\\\\u0028\\\\u4E94\\\\u0029';\\n  t['\\\\u3225'] = '\\\\u0028\\\\u516D\\\\u0029';\\n  t['\\\\u3226'] = '\\\\u0028\\\\u4E03\\\\u0029';\\n  t['\\\\u3227'] = '\\\\u0028\\\\u516B\\\\u0029';\\n  t['\\\\u3228'] = '\\\\u0028\\\\u4E5D\\\\u0029';\\n  t['\\\\u3229'] = '\\\\u0028\\\\u5341\\\\u0029';\\n  t['\\\\u322A'] = '\\\\u0028\\\\u6708\\\\u0029';\\n  t['\\\\u322B'] = '\\\\u0028\\\\u706B\\\\u0029';\\n  t['\\\\u322C'] = '\\\\u0028\\\\u6C34\\\\u0029';\\n  t['\\\\u322D'] = '\\\\u0028\\\\u6728\\\\u0029';\\n  t['\\\\u322E'] = '\\\\u0028\\\\u91D1\\\\u0029';\\n  t['\\\\u322F'] = '\\\\u0028\\\\u571F\\\\u0029';\\n  t['\\\\u3230'] = '\\\\u0028\\\\u65E5\\\\u0029';\\n  t['\\\\u3231'] = '\\\\u0028\\\\u682A\\\\u0029';\\n  t['\\\\u3232'] = '\\\\u0028\\\\u6709\\\\u0029';\\n  t['\\\\u3233'] = '\\\\u0028\\\\u793E\\\\u0029';\\n  t['\\\\u3234'] = '\\\\u0028\\\\u540D\\\\u0029';\\n  t['\\\\u3235'] = '\\\\u0028\\\\u7279\\\\u0029';\\n  t['\\\\u3236'] = '\\\\u0028\\\\u8CA1\\\\u0029';\\n  t['\\\\u3237'] = '\\\\u0028\\\\u795D\\\\u0029';\\n  t['\\\\u3238'] = '\\\\u0028\\\\u52B4\\\\u0029';\\n  t['\\\\u3239'] = '\\\\u0028\\\\u4EE3\\\\u0029';\\n  t['\\\\u323A'] = '\\\\u0028\\\\u547C\\\\u0029';\\n  t['\\\\u323B'] = '\\\\u0028\\\\u5B66\\\\u0029';\\n  t['\\\\u323C'] = '\\\\u0028\\\\u76E3\\\\u0029';\\n  t['\\\\u323D'] = '\\\\u0028\\\\u4F01\\\\u0029';\\n  t['\\\\u323E'] = '\\\\u0028\\\\u8CC7\\\\u0029';\\n  t['\\\\u323F'] = '\\\\u0028\\\\u5354\\\\u0029';\\n  t['\\\\u3240'] = '\\\\u0028\\\\u796D\\\\u0029';\\n  t['\\\\u3241'] = '\\\\u0028\\\\u4F11\\\\u0029';\\n  t['\\\\u3242'] = '\\\\u0028\\\\u81EA\\\\u0029';\\n  t['\\\\u3243'] = '\\\\u0028\\\\u81F3\\\\u0029';\\n  t['\\\\u32C0'] = '\\\\u0031\\\\u6708';\\n  t['\\\\u32C1'] = '\\\\u0032\\\\u6708';\\n  t['\\\\u32C2'] = '\\\\u0033\\\\u6708';\\n  t['\\\\u32C3'] = '\\\\u0034\\\\u6708';\\n  t['\\\\u32C4'] = '\\\\u0035\\\\u6708';\\n  t['\\\\u32C5'] = '\\\\u0036\\\\u6708';\\n  t['\\\\u32C6'] = '\\\\u0037\\\\u6708';\\n  t['\\\\u32C7'] = '\\\\u0038\\\\u6708';\\n  t['\\\\u32C8'] = '\\\\u0039\\\\u6708';\\n  t['\\\\u32C9'] = '\\\\u0031\\\\u0030\\\\u6708';\\n  t['\\\\u32CA'] = '\\\\u0031\\\\u0031\\\\u6708';\\n  t['\\\\u32CB'] = '\\\\u0031\\\\u0032\\\\u6708';\\n  t['\\\\u3358'] = '\\\\u0030\\\\u70B9';\\n  t['\\\\u3359'] = '\\\\u0031\\\\u70B9';\\n  t['\\\\u335A'] = '\\\\u0032\\\\u70B9';\\n  t['\\\\u335B'] = '\\\\u0033\\\\u70B9';\\n  t['\\\\u335C'] = '\\\\u0034\\\\u70B9';\\n  t['\\\\u335D'] = '\\\\u0035\\\\u70B9';\\n  t['\\\\u335E'] = '\\\\u0036\\\\u70B9';\\n  t['\\\\u335F'] = '\\\\u0037\\\\u70B9';\\n  t['\\\\u3360'] = '\\\\u0038\\\\u70B9';\\n  t['\\\\u3361'] = '\\\\u0039\\\\u70B9';\\n  t['\\\\u3362'] = '\\\\u0031\\\\u0030\\\\u70B9';\\n  t['\\\\u3363'] = '\\\\u0031\\\\u0031\\\\u70B9';\\n  t['\\\\u3364'] = '\\\\u0031\\\\u0032\\\\u70B9';\\n  t['\\\\u3365'] = '\\\\u0031\\\\u0033\\\\u70B9';\\n  t['\\\\u3366'] = '\\\\u0031\\\\u0034\\\\u70B9';\\n  t['\\\\u3367'] = '\\\\u0031\\\\u0035\\\\u70B9';\\n  t['\\\\u3368'] = '\\\\u0031\\\\u0036\\\\u70B9';\\n  t['\\\\u3369'] = '\\\\u0031\\\\u0037\\\\u70B9';\\n  t['\\\\u336A'] = '\\\\u0031\\\\u0038\\\\u70B9';\\n  t['\\\\u336B'] = '\\\\u0031\\\\u0039\\\\u70B9';\\n  t['\\\\u336C'] = '\\\\u0032\\\\u0030\\\\u70B9';\\n  t['\\\\u336D'] = '\\\\u0032\\\\u0031\\\\u70B9';\\n  t['\\\\u336E'] = '\\\\u0032\\\\u0032\\\\u70B9';\\n  t['\\\\u336F'] = '\\\\u0032\\\\u0033\\\\u70B9';\\n  t['\\\\u3370'] = '\\\\u0032\\\\u0034\\\\u70B9';\\n  t['\\\\u33E0'] = '\\\\u0031\\\\u65E5';\\n  t['\\\\u33E1'] = '\\\\u0032\\\\u65E5';\\n  t['\\\\u33E2'] = '\\\\u0033\\\\u65E5';\\n  t['\\\\u33E3'] = '\\\\u0034\\\\u65E5';\\n  t['\\\\u33E4'] = '\\\\u0035\\\\u65E5';\\n  t['\\\\u33E5'] = '\\\\u0036\\\\u65E5';\\n  t['\\\\u33E6'] = '\\\\u0037\\\\u65E5';\\n  t['\\\\u33E7'] = '\\\\u0038\\\\u65E5';\\n  t['\\\\u33E8'] = '\\\\u0039\\\\u65E5';\\n  t['\\\\u33E9'] = '\\\\u0031\\\\u0030\\\\u65E5';\\n  t['\\\\u33EA'] = '\\\\u0031\\\\u0031\\\\u65E5';\\n  t['\\\\u33EB'] = '\\\\u0031\\\\u0032\\\\u65E5';\\n  t['\\\\u33EC'] = '\\\\u0031\\\\u0033\\\\u65E5';\\n  t['\\\\u33ED'] = '\\\\u0031\\\\u0034\\\\u65E5';\\n  t['\\\\u33EE'] = '\\\\u0031\\\\u0035\\\\u65E5';\\n  t['\\\\u33EF'] = '\\\\u0031\\\\u0036\\\\u65E5';\\n  t['\\\\u33F0'] = '\\\\u0031\\\\u0037\\\\u65E5';\\n  t['\\\\u33F1'] = '\\\\u0031\\\\u0038\\\\u65E5';\\n  t['\\\\u33F2'] = '\\\\u0031\\\\u0039\\\\u65E5';\\n  t['\\\\u33F3'] = '\\\\u0032\\\\u0030\\\\u65E5';\\n  t['\\\\u33F4'] = '\\\\u0032\\\\u0031\\\\u65E5';\\n  t['\\\\u33F5'] = '\\\\u0032\\\\u0032\\\\u65E5';\\n  t['\\\\u33F6'] = '\\\\u0032\\\\u0033\\\\u65E5';\\n  t['\\\\u33F7'] = '\\\\u0032\\\\u0034\\\\u65E5';\\n  t['\\\\u33F8'] = '\\\\u0032\\\\u0035\\\\u65E5';\\n  t['\\\\u33F9'] = '\\\\u0032\\\\u0036\\\\u65E5';\\n  t['\\\\u33FA'] = '\\\\u0032\\\\u0037\\\\u65E5';\\n  t['\\\\u33FB'] = '\\\\u0032\\\\u0038\\\\u65E5';\\n  t['\\\\u33FC'] = '\\\\u0032\\\\u0039\\\\u65E5';\\n  t['\\\\u33FD'] = '\\\\u0033\\\\u0030\\\\u65E5';\\n  t['\\\\u33FE'] = '\\\\u0033\\\\u0031\\\\u65E5';\\n  t['\\\\uFB00'] = '\\\\u0066\\\\u0066';\\n  t['\\\\uFB01'] = '\\\\u0066\\\\u0069';\\n  t['\\\\uFB02'] = '\\\\u0066\\\\u006C';\\n  t['\\\\uFB03'] = '\\\\u0066\\\\u0066\\\\u0069';\\n  t['\\\\uFB04'] = '\\\\u0066\\\\u0066\\\\u006C';\\n  t['\\\\uFB05'] = '\\\\u017F\\\\u0074';\\n  t['\\\\uFB06'] = '\\\\u0073\\\\u0074';\\n  t['\\\\uFB13'] = '\\\\u0574\\\\u0576';\\n  t['\\\\uFB14'] = '\\\\u0574\\\\u0565';\\n  t['\\\\uFB15'] = '\\\\u0574\\\\u056B';\\n  t['\\\\uFB16'] = '\\\\u057E\\\\u0576';\\n  t['\\\\uFB17'] = '\\\\u0574\\\\u056D';\\n  t['\\\\uFB4F'] = '\\\\u05D0\\\\u05DC';\\n  t['\\\\uFB50'] = '\\\\u0671';\\n  t['\\\\uFB51'] = '\\\\u0671';\\n  t['\\\\uFB52'] = '\\\\u067B';\\n  t['\\\\uFB53'] = '\\\\u067B';\\n  t['\\\\uFB54'] = '\\\\u067B';\\n  t['\\\\uFB55'] = '\\\\u067B';\\n  t['\\\\uFB56'] = '\\\\u067E';\\n  t['\\\\uFB57'] = '\\\\u067E';\\n  t['\\\\uFB58'] = '\\\\u067E';\\n  t['\\\\uFB59'] = '\\\\u067E';\\n  t['\\\\uFB5A'] = '\\\\u0680';\\n  t['\\\\uFB5B'] = '\\\\u0680';\\n  t['\\\\uFB5C'] = '\\\\u0680';\\n  t['\\\\uFB5D'] = '\\\\u0680';\\n  t['\\\\uFB5E'] = '\\\\u067A';\\n  t['\\\\uFB5F'] = '\\\\u067A';\\n  t['\\\\uFB60'] = '\\\\u067A';\\n  t['\\\\uFB61'] = '\\\\u067A';\\n  t['\\\\uFB62'] = '\\\\u067F';\\n  t['\\\\uFB63'] = '\\\\u067F';\\n  t['\\\\uFB64'] = '\\\\u067F';\\n  t['\\\\uFB65'] = '\\\\u067F';\\n  t['\\\\uFB66'] = '\\\\u0679';\\n  t['\\\\uFB67'] = '\\\\u0679';\\n  t['\\\\uFB68'] = '\\\\u0679';\\n  t['\\\\uFB69'] = '\\\\u0679';\\n  t['\\\\uFB6A'] = '\\\\u06A4';\\n  t['\\\\uFB6B'] = '\\\\u06A4';\\n  t['\\\\uFB6C'] = '\\\\u06A4';\\n  t['\\\\uFB6D'] = '\\\\u06A4';\\n  t['\\\\uFB6E'] = '\\\\u06A6';\\n  t['\\\\uFB6F'] = '\\\\u06A6';\\n  t['\\\\uFB70'] = '\\\\u06A6';\\n  t['\\\\uFB71'] = '\\\\u06A6';\\n  t['\\\\uFB72'] = '\\\\u0684';\\n  t['\\\\uFB73'] = '\\\\u0684';\\n  t['\\\\uFB74'] = '\\\\u0684';\\n  t['\\\\uFB75'] = '\\\\u0684';\\n  t['\\\\uFB76'] = '\\\\u0683';\\n  t['\\\\uFB77'] = '\\\\u0683';\\n  t['\\\\uFB78'] = '\\\\u0683';\\n  t['\\\\uFB79'] = '\\\\u0683';\\n  t['\\\\uFB7A'] = '\\\\u0686';\\n  t['\\\\uFB7B'] = '\\\\u0686';\\n  t['\\\\uFB7C'] = '\\\\u0686';\\n  t['\\\\uFB7D'] = '\\\\u0686';\\n  t['\\\\uFB7E'] = '\\\\u0687';\\n  t['\\\\uFB7F'] = '\\\\u0687';\\n  t['\\\\uFB80'] = '\\\\u0687';\\n  t['\\\\uFB81'] = '\\\\u0687';\\n  t['\\\\uFB82'] = '\\\\u068D';\\n  t['\\\\uFB83'] = '\\\\u068D';\\n  t['\\\\uFB84'] = '\\\\u068C';\\n  t['\\\\uFB85'] = '\\\\u068C';\\n  t['\\\\uFB86'] = '\\\\u068E';\\n  t['\\\\uFB87'] = '\\\\u068E';\\n  t['\\\\uFB88'] = '\\\\u0688';\\n  t['\\\\uFB89'] = '\\\\u0688';\\n  t['\\\\uFB8A'] = '\\\\u0698';\\n  t['\\\\uFB8B'] = '\\\\u0698';\\n  t['\\\\uFB8C'] = '\\\\u0691';\\n  t['\\\\uFB8D'] = '\\\\u0691';\\n  t['\\\\uFB8E'] = '\\\\u06A9';\\n  t['\\\\uFB8F'] = '\\\\u06A9';\\n  t['\\\\uFB90'] = '\\\\u06A9';\\n  t['\\\\uFB91'] = '\\\\u06A9';\\n  t['\\\\uFB92'] = '\\\\u06AF';\\n  t['\\\\uFB93'] = '\\\\u06AF';\\n  t['\\\\uFB94'] = '\\\\u06AF';\\n  t['\\\\uFB95'] = '\\\\u06AF';\\n  t['\\\\uFB96'] = '\\\\u06B3';\\n  t['\\\\uFB97'] = '\\\\u06B3';\\n  t['\\\\uFB98'] = '\\\\u06B3';\\n  t['\\\\uFB99'] = '\\\\u06B3';\\n  t['\\\\uFB9A'] = '\\\\u06B1';\\n  t['\\\\uFB9B'] = '\\\\u06B1';\\n  t['\\\\uFB9C'] = '\\\\u06B1';\\n  t['\\\\uFB9D'] = '\\\\u06B1';\\n  t['\\\\uFB9E'] = '\\\\u06BA';\\n  t['\\\\uFB9F'] = '\\\\u06BA';\\n  t['\\\\uFBA0'] = '\\\\u06BB';\\n  t['\\\\uFBA1'] = '\\\\u06BB';\\n  t['\\\\uFBA2'] = '\\\\u06BB';\\n  t['\\\\uFBA3'] = '\\\\u06BB';\\n  t['\\\\uFBA4'] = '\\\\u06C0';\\n  t['\\\\uFBA5'] = '\\\\u06C0';\\n  t['\\\\uFBA6'] = '\\\\u06C1';\\n  t['\\\\uFBA7'] = '\\\\u06C1';\\n  t['\\\\uFBA8'] = '\\\\u06C1';\\n  t['\\\\uFBA9'] = '\\\\u06C1';\\n  t['\\\\uFBAA'] = '\\\\u06BE';\\n  t['\\\\uFBAB'] = '\\\\u06BE';\\n  t['\\\\uFBAC'] = '\\\\u06BE';\\n  t['\\\\uFBAD'] = '\\\\u06BE';\\n  t['\\\\uFBAE'] = '\\\\u06D2';\\n  t['\\\\uFBAF'] = '\\\\u06D2';\\n  t['\\\\uFBB0'] = '\\\\u06D3';\\n  t['\\\\uFBB1'] = '\\\\u06D3';\\n  t['\\\\uFBD3'] = '\\\\u06AD';\\n  t['\\\\uFBD4'] = '\\\\u06AD';\\n  t['\\\\uFBD5'] = '\\\\u06AD';\\n  t['\\\\uFBD6'] = '\\\\u06AD';\\n  t['\\\\uFBD7'] = '\\\\u06C7';\\n  t['\\\\uFBD8'] = '\\\\u06C7';\\n  t['\\\\uFBD9'] = '\\\\u06C6';\\n  t['\\\\uFBDA'] = '\\\\u06C6';\\n  t['\\\\uFBDB'] = '\\\\u06C8';\\n  t['\\\\uFBDC'] = '\\\\u06C8';\\n  t['\\\\uFBDD'] = '\\\\u0677';\\n  t['\\\\uFBDE'] = '\\\\u06CB';\\n  t['\\\\uFBDF'] = '\\\\u06CB';\\n  t['\\\\uFBE0'] = '\\\\u06C5';\\n  t['\\\\uFBE1'] = '\\\\u06C5';\\n  t['\\\\uFBE2'] = '\\\\u06C9';\\n  t['\\\\uFBE3'] = '\\\\u06C9';\\n  t['\\\\uFBE4'] = '\\\\u06D0';\\n  t['\\\\uFBE5'] = '\\\\u06D0';\\n  t['\\\\uFBE6'] = '\\\\u06D0';\\n  t['\\\\uFBE7'] = '\\\\u06D0';\\n  t['\\\\uFBE8'] = '\\\\u0649';\\n  t['\\\\uFBE9'] = '\\\\u0649';\\n  t['\\\\uFBEA'] = '\\\\u0626\\\\u0627';\\n  t['\\\\uFBEB'] = '\\\\u0626\\\\u0627';\\n  t['\\\\uFBEC'] = '\\\\u0626\\\\u06D5';\\n  t['\\\\uFBED'] = '\\\\u0626\\\\u06D5';\\n  t['\\\\uFBEE'] = '\\\\u0626\\\\u0648';\\n  t['\\\\uFBEF'] = '\\\\u0626\\\\u0648';\\n  t['\\\\uFBF0'] = '\\\\u0626\\\\u06C7';\\n  t['\\\\uFBF1'] = '\\\\u0626\\\\u06C7';\\n  t['\\\\uFBF2'] = '\\\\u0626\\\\u06C6';\\n  t['\\\\uFBF3'] = '\\\\u0626\\\\u06C6';\\n  t['\\\\uFBF4'] = '\\\\u0626\\\\u06C8';\\n  t['\\\\uFBF5'] = '\\\\u0626\\\\u06C8';\\n  t['\\\\uFBF6'] = '\\\\u0626\\\\u06D0';\\n  t['\\\\uFBF7'] = '\\\\u0626\\\\u06D0';\\n  t['\\\\uFBF8'] = '\\\\u0626\\\\u06D0';\\n  t['\\\\uFBF9'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFBFA'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFBFB'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFBFC'] = '\\\\u06CC';\\n  t['\\\\uFBFD'] = '\\\\u06CC';\\n  t['\\\\uFBFE'] = '\\\\u06CC';\\n  t['\\\\uFBFF'] = '\\\\u06CC';\\n  t['\\\\uFC00'] = '\\\\u0626\\\\u062C';\\n  t['\\\\uFC01'] = '\\\\u0626\\\\u062D';\\n  t['\\\\uFC02'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFC03'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFC04'] = '\\\\u0626\\\\u064A';\\n  t['\\\\uFC05'] = '\\\\u0628\\\\u062C';\\n  t['\\\\uFC06'] = '\\\\u0628\\\\u062D';\\n  t['\\\\uFC07'] = '\\\\u0628\\\\u062E';\\n  t['\\\\uFC08'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFC09'] = '\\\\u0628\\\\u0649';\\n  t['\\\\uFC0A'] = '\\\\u0628\\\\u064A';\\n  t['\\\\uFC0B'] = '\\\\u062A\\\\u062C';\\n  t['\\\\uFC0C'] = '\\\\u062A\\\\u062D';\\n  t['\\\\uFC0D'] = '\\\\u062A\\\\u062E';\\n  t['\\\\uFC0E'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFC0F'] = '\\\\u062A\\\\u0649';\\n  t['\\\\uFC10'] = '\\\\u062A\\\\u064A';\\n  t['\\\\uFC11'] = '\\\\u062B\\\\u062C';\\n  t['\\\\uFC12'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFC13'] = '\\\\u062B\\\\u0649';\\n  t['\\\\uFC14'] = '\\\\u062B\\\\u064A';\\n  t['\\\\uFC15'] = '\\\\u062C\\\\u062D';\\n  t['\\\\uFC16'] = '\\\\u062C\\\\u0645';\\n  t['\\\\uFC17'] = '\\\\u062D\\\\u062C';\\n  t['\\\\uFC18'] = '\\\\u062D\\\\u0645';\\n  t['\\\\uFC19'] = '\\\\u062E\\\\u062C';\\n  t['\\\\uFC1A'] = '\\\\u062E\\\\u062D';\\n  t['\\\\uFC1B'] = '\\\\u062E\\\\u0645';\\n  t['\\\\uFC1C'] = '\\\\u0633\\\\u062C';\\n  t['\\\\uFC1D'] = '\\\\u0633\\\\u062D';\\n  t['\\\\uFC1E'] = '\\\\u0633\\\\u062E';\\n  t['\\\\uFC1F'] = '\\\\u0633\\\\u0645';\\n  t['\\\\uFC20'] = '\\\\u0635\\\\u062D';\\n  t['\\\\uFC21'] = '\\\\u0635\\\\u0645';\\n  t['\\\\uFC22'] = '\\\\u0636\\\\u062C';\\n  t['\\\\uFC23'] = '\\\\u0636\\\\u062D';\\n  t['\\\\uFC24'] = '\\\\u0636\\\\u062E';\\n  t['\\\\uFC25'] = '\\\\u0636\\\\u0645';\\n  t['\\\\uFC26'] = '\\\\u0637\\\\u062D';\\n  t['\\\\uFC27'] = '\\\\u0637\\\\u0645';\\n  t['\\\\uFC28'] = '\\\\u0638\\\\u0645';\\n  t['\\\\uFC29'] = '\\\\u0639\\\\u062C';\\n  t['\\\\uFC2A'] = '\\\\u0639\\\\u0645';\\n  t['\\\\uFC2B'] = '\\\\u063A\\\\u062C';\\n  t['\\\\uFC2C'] = '\\\\u063A\\\\u0645';\\n  t['\\\\uFC2D'] = '\\\\u0641\\\\u062C';\\n  t['\\\\uFC2E'] = '\\\\u0641\\\\u062D';\\n  t['\\\\uFC2F'] = '\\\\u0641\\\\u062E';\\n  t['\\\\uFC30'] = '\\\\u0641\\\\u0645';\\n  t['\\\\uFC31'] = '\\\\u0641\\\\u0649';\\n  t['\\\\uFC32'] = '\\\\u0641\\\\u064A';\\n  t['\\\\uFC33'] = '\\\\u0642\\\\u062D';\\n  t['\\\\uFC34'] = '\\\\u0642\\\\u0645';\\n  t['\\\\uFC35'] = '\\\\u0642\\\\u0649';\\n  t['\\\\uFC36'] = '\\\\u0642\\\\u064A';\\n  t['\\\\uFC37'] = '\\\\u0643\\\\u0627';\\n  t['\\\\uFC38'] = '\\\\u0643\\\\u062C';\\n  t['\\\\uFC39'] = '\\\\u0643\\\\u062D';\\n  t['\\\\uFC3A'] = '\\\\u0643\\\\u062E';\\n  t['\\\\uFC3B'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFC3C'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFC3D'] = '\\\\u0643\\\\u0649';\\n  t['\\\\uFC3E'] = '\\\\u0643\\\\u064A';\\n  t['\\\\uFC3F'] = '\\\\u0644\\\\u062C';\\n  t['\\\\uFC40'] = '\\\\u0644\\\\u062D';\\n  t['\\\\uFC41'] = '\\\\u0644\\\\u062E';\\n  t['\\\\uFC42'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFC43'] = '\\\\u0644\\\\u0649';\\n  t['\\\\uFC44'] = '\\\\u0644\\\\u064A';\\n  t['\\\\uFC45'] = '\\\\u0645\\\\u062C';\\n  t['\\\\uFC46'] = '\\\\u0645\\\\u062D';\\n  t['\\\\uFC47'] = '\\\\u0645\\\\u062E';\\n  t['\\\\uFC48'] = '\\\\u0645\\\\u0645';\\n  t['\\\\uFC49'] = '\\\\u0645\\\\u0649';\\n  t['\\\\uFC4A'] = '\\\\u0645\\\\u064A';\\n  t['\\\\uFC4B'] = '\\\\u0646\\\\u062C';\\n  t['\\\\uFC4C'] = '\\\\u0646\\\\u062D';\\n  t['\\\\uFC4D'] = '\\\\u0646\\\\u062E';\\n  t['\\\\uFC4E'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFC4F'] = '\\\\u0646\\\\u0649';\\n  t['\\\\uFC50'] = '\\\\u0646\\\\u064A';\\n  t['\\\\uFC51'] = '\\\\u0647\\\\u062C';\\n  t['\\\\uFC52'] = '\\\\u0647\\\\u0645';\\n  t['\\\\uFC53'] = '\\\\u0647\\\\u0649';\\n  t['\\\\uFC54'] = '\\\\u0647\\\\u064A';\\n  t['\\\\uFC55'] = '\\\\u064A\\\\u062C';\\n  t['\\\\uFC56'] = '\\\\u064A\\\\u062D';\\n  t['\\\\uFC57'] = '\\\\u064A\\\\u062E';\\n  t['\\\\uFC58'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFC59'] = '\\\\u064A\\\\u0649';\\n  t['\\\\uFC5A'] = '\\\\u064A\\\\u064A';\\n  t['\\\\uFC5B'] = '\\\\u0630\\\\u0670';\\n  t['\\\\uFC5C'] = '\\\\u0631\\\\u0670';\\n  t['\\\\uFC5D'] = '\\\\u0649\\\\u0670';\\n  t['\\\\uFC5E'] = '\\\\u0020\\\\u064C\\\\u0651';\\n  t['\\\\uFC5F'] = '\\\\u0020\\\\u064D\\\\u0651';\\n  t['\\\\uFC60'] = '\\\\u0020\\\\u064E\\\\u0651';\\n  t['\\\\uFC61'] = '\\\\u0020\\\\u064F\\\\u0651';\\n  t['\\\\uFC62'] = '\\\\u0020\\\\u0650\\\\u0651';\\n  t['\\\\uFC63'] = '\\\\u0020\\\\u0651\\\\u0670';\\n  t['\\\\uFC64'] = '\\\\u0626\\\\u0631';\\n  t['\\\\uFC65'] = '\\\\u0626\\\\u0632';\\n  t['\\\\uFC66'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFC67'] = '\\\\u0626\\\\u0646';\\n  t['\\\\uFC68'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFC69'] = '\\\\u0626\\\\u064A';\\n  t['\\\\uFC6A'] = '\\\\u0628\\\\u0631';\\n  t['\\\\uFC6B'] = '\\\\u0628\\\\u0632';\\n  t['\\\\uFC6C'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFC6D'] = '\\\\u0628\\\\u0646';\\n  t['\\\\uFC6E'] = '\\\\u0628\\\\u0649';\\n  t['\\\\uFC6F'] = '\\\\u0628\\\\u064A';\\n  t['\\\\uFC70'] = '\\\\u062A\\\\u0631';\\n  t['\\\\uFC71'] = '\\\\u062A\\\\u0632';\\n  t['\\\\uFC72'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFC73'] = '\\\\u062A\\\\u0646';\\n  t['\\\\uFC74'] = '\\\\u062A\\\\u0649';\\n  t['\\\\uFC75'] = '\\\\u062A\\\\u064A';\\n  t['\\\\uFC76'] = '\\\\u062B\\\\u0631';\\n  t['\\\\uFC77'] = '\\\\u062B\\\\u0632';\\n  t['\\\\uFC78'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFC79'] = '\\\\u062B\\\\u0646';\\n  t['\\\\uFC7A'] = '\\\\u062B\\\\u0649';\\n  t['\\\\uFC7B'] = '\\\\u062B\\\\u064A';\\n  t['\\\\uFC7C'] = '\\\\u0641\\\\u0649';\\n  t['\\\\uFC7D'] = '\\\\u0641\\\\u064A';\\n  t['\\\\uFC7E'] = '\\\\u0642\\\\u0649';\\n  t['\\\\uFC7F'] = '\\\\u0642\\\\u064A';\\n  t['\\\\uFC80'] = '\\\\u0643\\\\u0627';\\n  t['\\\\uFC81'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFC82'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFC83'] = '\\\\u0643\\\\u0649';\\n  t['\\\\uFC84'] = '\\\\u0643\\\\u064A';\\n  t['\\\\uFC85'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFC86'] = '\\\\u0644\\\\u0649';\\n  t['\\\\uFC87'] = '\\\\u0644\\\\u064A';\\n  t['\\\\uFC88'] = '\\\\u0645\\\\u0627';\\n  t['\\\\uFC89'] = '\\\\u0645\\\\u0645';\\n  t['\\\\uFC8A'] = '\\\\u0646\\\\u0631';\\n  t['\\\\uFC8B'] = '\\\\u0646\\\\u0632';\\n  t['\\\\uFC8C'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFC8D'] = '\\\\u0646\\\\u0646';\\n  t['\\\\uFC8E'] = '\\\\u0646\\\\u0649';\\n  t['\\\\uFC8F'] = '\\\\u0646\\\\u064A';\\n  t['\\\\uFC90'] = '\\\\u0649\\\\u0670';\\n  t['\\\\uFC91'] = '\\\\u064A\\\\u0631';\\n  t['\\\\uFC92'] = '\\\\u064A\\\\u0632';\\n  t['\\\\uFC93'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFC94'] = '\\\\u064A\\\\u0646';\\n  t['\\\\uFC95'] = '\\\\u064A\\\\u0649';\\n  t['\\\\uFC96'] = '\\\\u064A\\\\u064A';\\n  t['\\\\uFC97'] = '\\\\u0626\\\\u062C';\\n  t['\\\\uFC98'] = '\\\\u0626\\\\u062D';\\n  t['\\\\uFC99'] = '\\\\u0626\\\\u062E';\\n  t['\\\\uFC9A'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFC9B'] = '\\\\u0626\\\\u0647';\\n  t['\\\\uFC9C'] = '\\\\u0628\\\\u062C';\\n  t['\\\\uFC9D'] = '\\\\u0628\\\\u062D';\\n  t['\\\\uFC9E'] = '\\\\u0628\\\\u062E';\\n  t['\\\\uFC9F'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFCA0'] = '\\\\u0628\\\\u0647';\\n  t['\\\\uFCA1'] = '\\\\u062A\\\\u062C';\\n  t['\\\\uFCA2'] = '\\\\u062A\\\\u062D';\\n  t['\\\\uFCA3'] = '\\\\u062A\\\\u062E';\\n  t['\\\\uFCA4'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFCA5'] = '\\\\u062A\\\\u0647';\\n  t['\\\\uFCA6'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFCA7'] = '\\\\u062C\\\\u062D';\\n  t['\\\\uFCA8'] = '\\\\u062C\\\\u0645';\\n  t['\\\\uFCA9'] = '\\\\u062D\\\\u062C';\\n  t['\\\\uFCAA'] = '\\\\u062D\\\\u0645';\\n  t['\\\\uFCAB'] = '\\\\u062E\\\\u062C';\\n  t['\\\\uFCAC'] = '\\\\u062E\\\\u0645';\\n  t['\\\\uFCAD'] = '\\\\u0633\\\\u062C';\\n  t['\\\\uFCAE'] = '\\\\u0633\\\\u062D';\\n  t['\\\\uFCAF'] = '\\\\u0633\\\\u062E';\\n  t['\\\\uFCB0'] = '\\\\u0633\\\\u0645';\\n  t['\\\\uFCB1'] = '\\\\u0635\\\\u062D';\\n  t['\\\\uFCB2'] = '\\\\u0635\\\\u062E';\\n  t['\\\\uFCB3'] = '\\\\u0635\\\\u0645';\\n  t['\\\\uFCB4'] = '\\\\u0636\\\\u062C';\\n  t['\\\\uFCB5'] = '\\\\u0636\\\\u062D';\\n  t['\\\\uFCB6'] = '\\\\u0636\\\\u062E';\\n  t['\\\\uFCB7'] = '\\\\u0636\\\\u0645';\\n  t['\\\\uFCB8'] = '\\\\u0637\\\\u062D';\\n  t['\\\\uFCB9'] = '\\\\u0638\\\\u0645';\\n  t['\\\\uFCBA'] = '\\\\u0639\\\\u062C';\\n  t['\\\\uFCBB'] = '\\\\u0639\\\\u0645';\\n  t['\\\\uFCBC'] = '\\\\u063A\\\\u062C';\\n  t['\\\\uFCBD'] = '\\\\u063A\\\\u0645';\\n  t['\\\\uFCBE'] = '\\\\u0641\\\\u062C';\\n  t['\\\\uFCBF'] = '\\\\u0641\\\\u062D';\\n  t['\\\\uFCC0'] = '\\\\u0641\\\\u062E';\\n  t['\\\\uFCC1'] = '\\\\u0641\\\\u0645';\\n  t['\\\\uFCC2'] = '\\\\u0642\\\\u062D';\\n  t['\\\\uFCC3'] = '\\\\u0642\\\\u0645';\\n  t['\\\\uFCC4'] = '\\\\u0643\\\\u062C';\\n  t['\\\\uFCC5'] = '\\\\u0643\\\\u062D';\\n  t['\\\\uFCC6'] = '\\\\u0643\\\\u062E';\\n  t['\\\\uFCC7'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFCC8'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFCC9'] = '\\\\u0644\\\\u062C';\\n  t['\\\\uFCCA'] = '\\\\u0644\\\\u062D';\\n  t['\\\\uFCCB'] = '\\\\u0644\\\\u062E';\\n  t['\\\\uFCCC'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFCCD'] = '\\\\u0644\\\\u0647';\\n  t['\\\\uFCCE'] = '\\\\u0645\\\\u062C';\\n  t['\\\\uFCCF'] = '\\\\u0645\\\\u062D';\\n  t['\\\\uFCD0'] = '\\\\u0645\\\\u062E';\\n  t['\\\\uFCD1'] = '\\\\u0645\\\\u0645';\\n  t['\\\\uFCD2'] = '\\\\u0646\\\\u062C';\\n  t['\\\\uFCD3'] = '\\\\u0646\\\\u062D';\\n  t['\\\\uFCD4'] = '\\\\u0646\\\\u062E';\\n  t['\\\\uFCD5'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFCD6'] = '\\\\u0646\\\\u0647';\\n  t['\\\\uFCD7'] = '\\\\u0647\\\\u062C';\\n  t['\\\\uFCD8'] = '\\\\u0647\\\\u0645';\\n  t['\\\\uFCD9'] = '\\\\u0647\\\\u0670';\\n  t['\\\\uFCDA'] = '\\\\u064A\\\\u062C';\\n  t['\\\\uFCDB'] = '\\\\u064A\\\\u062D';\\n  t['\\\\uFCDC'] = '\\\\u064A\\\\u062E';\\n  t['\\\\uFCDD'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFCDE'] = '\\\\u064A\\\\u0647';\\n  t['\\\\uFCDF'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFCE0'] = '\\\\u0626\\\\u0647';\\n  t['\\\\uFCE1'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFCE2'] = '\\\\u0628\\\\u0647';\\n  t['\\\\uFCE3'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFCE4'] = '\\\\u062A\\\\u0647';\\n  t['\\\\uFCE5'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFCE6'] = '\\\\u062B\\\\u0647';\\n  t['\\\\uFCE7'] = '\\\\u0633\\\\u0645';\\n  t['\\\\uFCE8'] = '\\\\u0633\\\\u0647';\\n  t['\\\\uFCE9'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFCEA'] = '\\\\u0634\\\\u0647';\\n  t['\\\\uFCEB'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFCEC'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFCED'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFCEE'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFCEF'] = '\\\\u0646\\\\u0647';\\n  t['\\\\uFCF0'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFCF1'] = '\\\\u064A\\\\u0647';\\n  t['\\\\uFCF2'] = '\\\\u0640\\\\u064E\\\\u0651';\\n  t['\\\\uFCF3'] = '\\\\u0640\\\\u064F\\\\u0651';\\n  t['\\\\uFCF4'] = '\\\\u0640\\\\u0650\\\\u0651';\\n  t['\\\\uFCF5'] = '\\\\u0637\\\\u0649';\\n  t['\\\\uFCF6'] = '\\\\u0637\\\\u064A';\\n  t['\\\\uFCF7'] = '\\\\u0639\\\\u0649';\\n  t['\\\\uFCF8'] = '\\\\u0639\\\\u064A';\\n  t['\\\\uFCF9'] = '\\\\u063A\\\\u0649';\\n  t['\\\\uFCFA'] = '\\\\u063A\\\\u064A';\\n  t['\\\\uFCFB'] = '\\\\u0633\\\\u0649';\\n  t['\\\\uFCFC'] = '\\\\u0633\\\\u064A';\\n  t['\\\\uFCFD'] = '\\\\u0634\\\\u0649';\\n  t['\\\\uFCFE'] = '\\\\u0634\\\\u064A';\\n  t['\\\\uFCFF'] = '\\\\u062D\\\\u0649';\\n  t['\\\\uFD00'] = '\\\\u062D\\\\u064A';\\n  t['\\\\uFD01'] = '\\\\u062C\\\\u0649';\\n  t['\\\\uFD02'] = '\\\\u062C\\\\u064A';\\n  t['\\\\uFD03'] = '\\\\u062E\\\\u0649';\\n  t['\\\\uFD04'] = '\\\\u062E\\\\u064A';\\n  t['\\\\uFD05'] = '\\\\u0635\\\\u0649';\\n  t['\\\\uFD06'] = '\\\\u0635\\\\u064A';\\n  t['\\\\uFD07'] = '\\\\u0636\\\\u0649';\\n  t['\\\\uFD08'] = '\\\\u0636\\\\u064A';\\n  t['\\\\uFD09'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD0A'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD0B'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD0C'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFD0D'] = '\\\\u0634\\\\u0631';\\n  t['\\\\uFD0E'] = '\\\\u0633\\\\u0631';\\n  t['\\\\uFD0F'] = '\\\\u0635\\\\u0631';\\n  t['\\\\uFD10'] = '\\\\u0636\\\\u0631';\\n  t['\\\\uFD11'] = '\\\\u0637\\\\u0649';\\n  t['\\\\uFD12'] = '\\\\u0637\\\\u064A';\\n  t['\\\\uFD13'] = '\\\\u0639\\\\u0649';\\n  t['\\\\uFD14'] = '\\\\u0639\\\\u064A';\\n  t['\\\\uFD15'] = '\\\\u063A\\\\u0649';\\n  t['\\\\uFD16'] = '\\\\u063A\\\\u064A';\\n  t['\\\\uFD17'] = '\\\\u0633\\\\u0649';\\n  t['\\\\uFD18'] = '\\\\u0633\\\\u064A';\\n  t['\\\\uFD19'] = '\\\\u0634\\\\u0649';\\n  t['\\\\uFD1A'] = '\\\\u0634\\\\u064A';\\n  t['\\\\uFD1B'] = '\\\\u062D\\\\u0649';\\n  t['\\\\uFD1C'] = '\\\\u062D\\\\u064A';\\n  t['\\\\uFD1D'] = '\\\\u062C\\\\u0649';\\n  t['\\\\uFD1E'] = '\\\\u062C\\\\u064A';\\n  t['\\\\uFD1F'] = '\\\\u062E\\\\u0649';\\n  t['\\\\uFD20'] = '\\\\u062E\\\\u064A';\\n  t['\\\\uFD21'] = '\\\\u0635\\\\u0649';\\n  t['\\\\uFD22'] = '\\\\u0635\\\\u064A';\\n  t['\\\\uFD23'] = '\\\\u0636\\\\u0649';\\n  t['\\\\uFD24'] = '\\\\u0636\\\\u064A';\\n  t['\\\\uFD25'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD26'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD27'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD28'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFD29'] = '\\\\u0634\\\\u0631';\\n  t['\\\\uFD2A'] = '\\\\u0633\\\\u0631';\\n  t['\\\\uFD2B'] = '\\\\u0635\\\\u0631';\\n  t['\\\\uFD2C'] = '\\\\u0636\\\\u0631';\\n  t['\\\\uFD2D'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD2E'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD2F'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD30'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFD31'] = '\\\\u0633\\\\u0647';\\n  t['\\\\uFD32'] = '\\\\u0634\\\\u0647';\\n  t['\\\\uFD33'] = '\\\\u0637\\\\u0645';\\n  t['\\\\uFD34'] = '\\\\u0633\\\\u062C';\\n  t['\\\\uFD35'] = '\\\\u0633\\\\u062D';\\n  t['\\\\uFD36'] = '\\\\u0633\\\\u062E';\\n  t['\\\\uFD37'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD38'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD39'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD3A'] = '\\\\u0637\\\\u0645';\\n  t['\\\\uFD3B'] = '\\\\u0638\\\\u0645';\\n  t['\\\\uFD3C'] = '\\\\u0627\\\\u064B';\\n  t['\\\\uFD3D'] = '\\\\u0627\\\\u064B';\\n  t['\\\\uFD50'] = '\\\\u062A\\\\u062C\\\\u0645';\\n  t['\\\\uFD51'] = '\\\\u062A\\\\u062D\\\\u062C';\\n  t['\\\\uFD52'] = '\\\\u062A\\\\u062D\\\\u062C';\\n  t['\\\\uFD53'] = '\\\\u062A\\\\u062D\\\\u0645';\\n  t['\\\\uFD54'] = '\\\\u062A\\\\u062E\\\\u0645';\\n  t['\\\\uFD55'] = '\\\\u062A\\\\u0645\\\\u062C';\\n  t['\\\\uFD56'] = '\\\\u062A\\\\u0645\\\\u062D';\\n  t['\\\\uFD57'] = '\\\\u062A\\\\u0645\\\\u062E';\\n  t['\\\\uFD58'] = '\\\\u062C\\\\u0645\\\\u062D';\\n  t['\\\\uFD59'] = '\\\\u062C\\\\u0645\\\\u062D';\\n  t['\\\\uFD5A'] = '\\\\u062D\\\\u0645\\\\u064A';\\n  t['\\\\uFD5B'] = '\\\\u062D\\\\u0645\\\\u0649';\\n  t['\\\\uFD5C'] = '\\\\u0633\\\\u062D\\\\u062C';\\n  t['\\\\uFD5D'] = '\\\\u0633\\\\u062C\\\\u062D';\\n  t['\\\\uFD5E'] = '\\\\u0633\\\\u062C\\\\u0649';\\n  t['\\\\uFD5F'] = '\\\\u0633\\\\u0645\\\\u062D';\\n  t['\\\\uFD60'] = '\\\\u0633\\\\u0645\\\\u062D';\\n  t['\\\\uFD61'] = '\\\\u0633\\\\u0645\\\\u062C';\\n  t['\\\\uFD62'] = '\\\\u0633\\\\u0645\\\\u0645';\\n  t['\\\\uFD63'] = '\\\\u0633\\\\u0645\\\\u0645';\\n  t['\\\\uFD64'] = '\\\\u0635\\\\u062D\\\\u062D';\\n  t['\\\\uFD65'] = '\\\\u0635\\\\u062D\\\\u062D';\\n  t['\\\\uFD66'] = '\\\\u0635\\\\u0645\\\\u0645';\\n  t['\\\\uFD67'] = '\\\\u0634\\\\u062D\\\\u0645';\\n  t['\\\\uFD68'] = '\\\\u0634\\\\u062D\\\\u0645';\\n  t['\\\\uFD69'] = '\\\\u0634\\\\u062C\\\\u064A';\\n  t['\\\\uFD6A'] = '\\\\u0634\\\\u0645\\\\u062E';\\n  t['\\\\uFD6B'] = '\\\\u0634\\\\u0645\\\\u062E';\\n  t['\\\\uFD6C'] = '\\\\u0634\\\\u0645\\\\u0645';\\n  t['\\\\uFD6D'] = '\\\\u0634\\\\u0645\\\\u0645';\\n  t['\\\\uFD6E'] = '\\\\u0636\\\\u062D\\\\u0649';\\n  t['\\\\uFD6F'] = '\\\\u0636\\\\u062E\\\\u0645';\\n  t['\\\\uFD70'] = '\\\\u0636\\\\u062E\\\\u0645';\\n  t['\\\\uFD71'] = '\\\\u0637\\\\u0645\\\\u062D';\\n  t['\\\\uFD72'] = '\\\\u0637\\\\u0645\\\\u062D';\\n  t['\\\\uFD73'] = '\\\\u0637\\\\u0645\\\\u0645';\\n  t['\\\\uFD74'] = '\\\\u0637\\\\u0645\\\\u064A';\\n  t['\\\\uFD75'] = '\\\\u0639\\\\u062C\\\\u0645';\\n  t['\\\\uFD76'] = '\\\\u0639\\\\u0645\\\\u0645';\\n  t['\\\\uFD77'] = '\\\\u0639\\\\u0645\\\\u0645';\\n  t['\\\\uFD78'] = '\\\\u0639\\\\u0645\\\\u0649';\\n  t['\\\\uFD79'] = '\\\\u063A\\\\u0645\\\\u0645';\\n  t['\\\\uFD7A'] = '\\\\u063A\\\\u0645\\\\u064A';\\n  t['\\\\uFD7B'] = '\\\\u063A\\\\u0645\\\\u0649';\\n  t['\\\\uFD7C'] = '\\\\u0641\\\\u062E\\\\u0645';\\n  t['\\\\uFD7D'] = '\\\\u0641\\\\u062E\\\\u0645';\\n  t['\\\\uFD7E'] = '\\\\u0642\\\\u0645\\\\u062D';\\n  t['\\\\uFD7F'] = '\\\\u0642\\\\u0645\\\\u0645';\\n  t['\\\\uFD80'] = '\\\\u0644\\\\u062D\\\\u0645';\\n  t['\\\\uFD81'] = '\\\\u0644\\\\u062D\\\\u064A';\\n  t['\\\\uFD82'] = '\\\\u0644\\\\u062D\\\\u0649';\\n  t['\\\\uFD83'] = '\\\\u0644\\\\u062C\\\\u062C';\\n  t['\\\\uFD84'] = '\\\\u0644\\\\u062C\\\\u062C';\\n  t['\\\\uFD85'] = '\\\\u0644\\\\u062E\\\\u0645';\\n  t['\\\\uFD86'] = '\\\\u0644\\\\u062E\\\\u0645';\\n  t['\\\\uFD87'] = '\\\\u0644\\\\u0645\\\\u062D';\\n  t['\\\\uFD88'] = '\\\\u0644\\\\u0645\\\\u062D';\\n  t['\\\\uFD89'] = '\\\\u0645\\\\u062D\\\\u062C';\\n  t['\\\\uFD8A'] = '\\\\u0645\\\\u062D\\\\u0645';\\n  t['\\\\uFD8B'] = '\\\\u0645\\\\u062D\\\\u064A';\\n  t['\\\\uFD8C'] = '\\\\u0645\\\\u062C\\\\u062D';\\n  t['\\\\uFD8D'] = '\\\\u0645\\\\u062C\\\\u0645';\\n  t['\\\\uFD8E'] = '\\\\u0645\\\\u062E\\\\u062C';\\n  t['\\\\uFD8F'] = '\\\\u0645\\\\u062E\\\\u0645';\\n  t['\\\\uFD92'] = '\\\\u0645\\\\u062C\\\\u062E';\\n  t['\\\\uFD93'] = '\\\\u0647\\\\u0645\\\\u062C';\\n  t['\\\\uFD94'] = '\\\\u0647\\\\u0645\\\\u0645';\\n  t['\\\\uFD95'] = '\\\\u0646\\\\u062D\\\\u0645';\\n  t['\\\\uFD96'] = '\\\\u0646\\\\u062D\\\\u0649';\\n  t['\\\\uFD97'] = '\\\\u0646\\\\u062C\\\\u0645';\\n  t['\\\\uFD98'] = '\\\\u0646\\\\u062C\\\\u0645';\\n  t['\\\\uFD99'] = '\\\\u0646\\\\u062C\\\\u0649';\\n  t['\\\\uFD9A'] = '\\\\u0646\\\\u0645\\\\u064A';\\n  t['\\\\uFD9B'] = '\\\\u0646\\\\u0645\\\\u0649';\\n  t['\\\\uFD9C'] = '\\\\u064A\\\\u0645\\\\u0645';\\n  t['\\\\uFD9D'] = '\\\\u064A\\\\u0645\\\\u0645';\\n  t['\\\\uFD9E'] = '\\\\u0628\\\\u062E\\\\u064A';\\n  t['\\\\uFD9F'] = '\\\\u062A\\\\u062C\\\\u064A';\\n  t['\\\\uFDA0'] = '\\\\u062A\\\\u062C\\\\u0649';\\n  t['\\\\uFDA1'] = '\\\\u062A\\\\u062E\\\\u064A';\\n  t['\\\\uFDA2'] = '\\\\u062A\\\\u062E\\\\u0649';\\n  t['\\\\uFDA3'] = '\\\\u062A\\\\u0645\\\\u064A';\\n  t['\\\\uFDA4'] = '\\\\u062A\\\\u0645\\\\u0649';\\n  t['\\\\uFDA5'] = '\\\\u062C\\\\u0645\\\\u064A';\\n  t['\\\\uFDA6'] = '\\\\u062C\\\\u062D\\\\u0649';\\n  t['\\\\uFDA7'] = '\\\\u062C\\\\u0645\\\\u0649';\\n  t['\\\\uFDA8'] = '\\\\u0633\\\\u062E\\\\u0649';\\n  t['\\\\uFDA9'] = '\\\\u0635\\\\u062D\\\\u064A';\\n  t['\\\\uFDAA'] = '\\\\u0634\\\\u062D\\\\u064A';\\n  t['\\\\uFDAB'] = '\\\\u0636\\\\u062D\\\\u064A';\\n  t['\\\\uFDAC'] = '\\\\u0644\\\\u062C\\\\u064A';\\n  t['\\\\uFDAD'] = '\\\\u0644\\\\u0645\\\\u064A';\\n  t['\\\\uFDAE'] = '\\\\u064A\\\\u062D\\\\u064A';\\n  t['\\\\uFDAF'] = '\\\\u064A\\\\u062C\\\\u064A';\\n  t['\\\\uFDB0'] = '\\\\u064A\\\\u0645\\\\u064A';\\n  t['\\\\uFDB1'] = '\\\\u0645\\\\u0645\\\\u064A';\\n  t['\\\\uFDB2'] = '\\\\u0642\\\\u0645\\\\u064A';\\n  t['\\\\uFDB3'] = '\\\\u0646\\\\u062D\\\\u064A';\\n  t['\\\\uFDB4'] = '\\\\u0642\\\\u0645\\\\u062D';\\n  t['\\\\uFDB5'] = '\\\\u0644\\\\u062D\\\\u0645';\\n  t['\\\\uFDB6'] = '\\\\u0639\\\\u0645\\\\u064A';\\n  t['\\\\uFDB7'] = '\\\\u0643\\\\u0645\\\\u064A';\\n  t['\\\\uFDB8'] = '\\\\u0646\\\\u062C\\\\u062D';\\n  t['\\\\uFDB9'] = '\\\\u0645\\\\u062E\\\\u064A';\\n  t['\\\\uFDBA'] = '\\\\u0644\\\\u062C\\\\u0645';\\n  t['\\\\uFDBB'] = '\\\\u0643\\\\u0645\\\\u0645';\\n  t['\\\\uFDBC'] = '\\\\u0644\\\\u062C\\\\u0645';\\n  t['\\\\uFDBD'] = '\\\\u0646\\\\u062C\\\\u062D';\\n  t['\\\\uFDBE'] = '\\\\u062C\\\\u062D\\\\u064A';\\n  t['\\\\uFDBF'] = '\\\\u062D\\\\u062C\\\\u064A';\\n  t['\\\\uFDC0'] = '\\\\u0645\\\\u062C\\\\u064A';\\n  t['\\\\uFDC1'] = '\\\\u0641\\\\u0645\\\\u064A';\\n  t['\\\\uFDC2'] = '\\\\u0628\\\\u062D\\\\u064A';\\n  t['\\\\uFDC3'] = '\\\\u0643\\\\u0645\\\\u0645';\\n  t['\\\\uFDC4'] = '\\\\u0639\\\\u062C\\\\u0645';\\n  t['\\\\uFDC5'] = '\\\\u0635\\\\u0645\\\\u0645';\\n  t['\\\\uFDC6'] = '\\\\u0633\\\\u062E\\\\u064A';\\n  t['\\\\uFDC7'] = '\\\\u0646\\\\u062C\\\\u064A';\\n  t['\\\\uFE49'] = '\\\\u203E';\\n  t['\\\\uFE4A'] = '\\\\u203E';\\n  t['\\\\uFE4B'] = '\\\\u203E';\\n  t['\\\\uFE4C'] = '\\\\u203E';\\n  t['\\\\uFE4D'] = '\\\\u005F';\\n  t['\\\\uFE4E'] = '\\\\u005F';\\n  t['\\\\uFE4F'] = '\\\\u005F';\\n  t['\\\\uFE80'] = '\\\\u0621';\\n  t['\\\\uFE81'] = '\\\\u0622';\\n  t['\\\\uFE82'] = '\\\\u0622';\\n  t['\\\\uFE83'] = '\\\\u0623';\\n  t['\\\\uFE84'] = '\\\\u0623';\\n  t['\\\\uFE85'] = '\\\\u0624';\\n  t['\\\\uFE86'] = '\\\\u0624';\\n  t['\\\\uFE87'] = '\\\\u0625';\\n  t['\\\\uFE88'] = '\\\\u0625';\\n  t['\\\\uFE89'] = '\\\\u0626';\\n  t['\\\\uFE8A'] = '\\\\u0626';\\n  t['\\\\uFE8B'] = '\\\\u0626';\\n  t['\\\\uFE8C'] = '\\\\u0626';\\n  t['\\\\uFE8D'] = '\\\\u0627';\\n  t['\\\\uFE8E'] = '\\\\u0627';\\n  t['\\\\uFE8F'] = '\\\\u0628';\\n  t['\\\\uFE90'] = '\\\\u0628';\\n  t['\\\\uFE91'] = '\\\\u0628';\\n  t['\\\\uFE92'] = '\\\\u0628';\\n  t['\\\\uFE93'] = '\\\\u0629';\\n  t['\\\\uFE94'] = '\\\\u0629';\\n  t['\\\\uFE95'] = '\\\\u062A';\\n  t['\\\\uFE96'] = '\\\\u062A';\\n  t['\\\\uFE97'] = '\\\\u062A';\\n  t['\\\\uFE98'] = '\\\\u062A';\\n  t['\\\\uFE99'] = '\\\\u062B';\\n  t['\\\\uFE9A'] = '\\\\u062B';\\n  t['\\\\uFE9B'] = '\\\\u062B';\\n  t['\\\\uFE9C'] = '\\\\u062B';\\n  t['\\\\uFE9D'] = '\\\\u062C';\\n  t['\\\\uFE9E'] = '\\\\u062C';\\n  t['\\\\uFE9F'] = '\\\\u062C';\\n  t['\\\\uFEA0'] = '\\\\u062C';\\n  t['\\\\uFEA1'] = '\\\\u062D';\\n  t['\\\\uFEA2'] = '\\\\u062D';\\n  t['\\\\uFEA3'] = '\\\\u062D';\\n  t['\\\\uFEA4'] = '\\\\u062D';\\n  t['\\\\uFEA5'] = '\\\\u062E';\\n  t['\\\\uFEA6'] = '\\\\u062E';\\n  t['\\\\uFEA7'] = '\\\\u062E';\\n  t['\\\\uFEA8'] = '\\\\u062E';\\n  t['\\\\uFEA9'] = '\\\\u062F';\\n  t['\\\\uFEAA'] = '\\\\u062F';\\n  t['\\\\uFEAB'] = '\\\\u0630';\\n  t['\\\\uFEAC'] = '\\\\u0630';\\n  t['\\\\uFEAD'] = '\\\\u0631';\\n  t['\\\\uFEAE'] = '\\\\u0631';\\n  t['\\\\uFEAF'] = '\\\\u0632';\\n  t['\\\\uFEB0'] = '\\\\u0632';\\n  t['\\\\uFEB1'] = '\\\\u0633';\\n  t['\\\\uFEB2'] = '\\\\u0633';\\n  t['\\\\uFEB3'] = '\\\\u0633';\\n  t['\\\\uFEB4'] = '\\\\u0633';\\n  t['\\\\uFEB5'] = '\\\\u0634';\\n  t['\\\\uFEB6'] = '\\\\u0634';\\n  t['\\\\uFEB7'] = '\\\\u0634';\\n  t['\\\\uFEB8'] = '\\\\u0634';\\n  t['\\\\uFEB9'] = '\\\\u0635';\\n  t['\\\\uFEBA'] = '\\\\u0635';\\n  t['\\\\uFEBB'] = '\\\\u0635';\\n  t['\\\\uFEBC'] = '\\\\u0635';\\n  t['\\\\uFEBD'] = '\\\\u0636';\\n  t['\\\\uFEBE'] = '\\\\u0636';\\n  t['\\\\uFEBF'] = '\\\\u0636';\\n  t['\\\\uFEC0'] = '\\\\u0636';\\n  t['\\\\uFEC1'] = '\\\\u0637';\\n  t['\\\\uFEC2'] = '\\\\u0637';\\n  t['\\\\uFEC3'] = '\\\\u0637';\\n  t['\\\\uFEC4'] = '\\\\u0637';\\n  t['\\\\uFEC5'] = '\\\\u0638';\\n  t['\\\\uFEC6'] = '\\\\u0638';\\n  t['\\\\uFEC7'] = '\\\\u0638';\\n  t['\\\\uFEC8'] = '\\\\u0638';\\n  t['\\\\uFEC9'] = '\\\\u0639';\\n  t['\\\\uFECA'] = '\\\\u0639';\\n  t['\\\\uFECB'] = '\\\\u0639';\\n  t['\\\\uFECC'] = '\\\\u0639';\\n  t['\\\\uFECD'] = '\\\\u063A';\\n  t['\\\\uFECE'] = '\\\\u063A';\\n  t['\\\\uFECF'] = '\\\\u063A';\\n  t['\\\\uFED0'] = '\\\\u063A';\\n  t['\\\\uFED1'] = '\\\\u0641';\\n  t['\\\\uFED2'] = '\\\\u0641';\\n  t['\\\\uFED3'] = '\\\\u0641';\\n  t['\\\\uFED4'] = '\\\\u0641';\\n  t['\\\\uFED5'] = '\\\\u0642';\\n  t['\\\\uFED6'] = '\\\\u0642';\\n  t['\\\\uFED7'] = '\\\\u0642';\\n  t['\\\\uFED8'] = '\\\\u0642';\\n  t['\\\\uFED9'] = '\\\\u0643';\\n  t['\\\\uFEDA'] = '\\\\u0643';\\n  t['\\\\uFEDB'] = '\\\\u0643';\\n  t['\\\\uFEDC'] = '\\\\u0643';\\n  t['\\\\uFEDD'] = '\\\\u0644';\\n  t['\\\\uFEDE'] = '\\\\u0644';\\n  t['\\\\uFEDF'] = '\\\\u0644';\\n  t['\\\\uFEE0'] = '\\\\u0644';\\n  t['\\\\uFEE1'] = '\\\\u0645';\\n  t['\\\\uFEE2'] = '\\\\u0645';\\n  t['\\\\uFEE3'] = '\\\\u0645';\\n  t['\\\\uFEE4'] = '\\\\u0645';\\n  t['\\\\uFEE5'] = '\\\\u0646';\\n  t['\\\\uFEE6'] = '\\\\u0646';\\n  t['\\\\uFEE7'] = '\\\\u0646';\\n  t['\\\\uFEE8'] = '\\\\u0646';\\n  t['\\\\uFEE9'] = '\\\\u0647';\\n  t['\\\\uFEEA'] = '\\\\u0647';\\n  t['\\\\uFEEB'] = '\\\\u0647';\\n  t['\\\\uFEEC'] = '\\\\u0647';\\n  t['\\\\uFEED'] = '\\\\u0648';\\n  t['\\\\uFEEE'] = '\\\\u0648';\\n  t['\\\\uFEEF'] = '\\\\u0649';\\n  t['\\\\uFEF0'] = '\\\\u0649';\\n  t['\\\\uFEF1'] = '\\\\u064A';\\n  t['\\\\uFEF2'] = '\\\\u064A';\\n  t['\\\\uFEF3'] = '\\\\u064A';\\n  t['\\\\uFEF4'] = '\\\\u064A';\\n  t['\\\\uFEF5'] = '\\\\u0644\\\\u0622';\\n  t['\\\\uFEF6'] = '\\\\u0644\\\\u0622';\\n  t['\\\\uFEF7'] = '\\\\u0644\\\\u0623';\\n  t['\\\\uFEF8'] = '\\\\u0644\\\\u0623';\\n  t['\\\\uFEF9'] = '\\\\u0644\\\\u0625';\\n  t['\\\\uFEFA'] = '\\\\u0644\\\\u0625';\\n  t['\\\\uFEFB'] = '\\\\u0644\\\\u0627';\\n  t['\\\\uFEFC'] = '\\\\u0644\\\\u0627';\\n});\\nfunction reverseIfRtl(chars) {\\n  var charsLength = chars.length;\\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\\n    return chars;\\n  }\\n  var s = '';\\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\\n    s += chars[ii];\\n  }\\n  return s;\\n}\\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\\nexports.reverseIfRtl = reverseIfRtl;\\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _util = require('../shared/util');\\n\\nvar _pdf_manager = require('./pdf_manager');\\n\\nvar _is_node = require('../shared/is_node');\\n\\nvar _is_node2 = _interopRequireDefault(_is_node);\\n\\nvar _primitives = require('./primitives');\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar WorkerTask = function WorkerTaskClosure() {\\n  function WorkerTask(name) {\\n    this.name = name;\\n    this.terminated = false;\\n    this._capability = (0, _util.createPromiseCapability)();\\n  }\\n  WorkerTask.prototype = {\\n    get finished() {\\n      return this._capability.promise;\\n    },\\n    finish: function finish() {\\n      this._capability.resolve();\\n    },\\n    terminate: function terminate() {\\n      this.terminated = true;\\n    },\\n    ensureNotTerminated: function ensureNotTerminated() {\\n      if (this.terminated) {\\n        throw new Error('Worker task was terminated');\\n      }\\n    }\\n  };\\n  return WorkerTask;\\n}();\\n;\\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\\n  function PDFWorkerStream(msgHandler) {\\n    this._msgHandler = msgHandler;\\n    this._contentLength = null;\\n    this._fullRequestReader = null;\\n    this._rangeRequestReaders = [];\\n  }\\n  PDFWorkerStream.prototype = {\\n    getFullReader: function getFullReader() {\\n      (0, _util.assert)(!this._fullRequestReader);\\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\\n      return this._fullRequestReader;\\n    },\\n    getRangeReader: function getRangeReader(begin, end) {\\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\\n      this._rangeRequestReaders.push(reader);\\n      return reader;\\n    },\\n    cancelAllRequests: function cancelAllRequests(reason) {\\n      if (this._fullRequestReader) {\\n        this._fullRequestReader.cancel(reason);\\n      }\\n      var readers = this._rangeRequestReaders.slice(0);\\n      readers.forEach(function (reader) {\\n        reader.cancel(reason);\\n      });\\n    }\\n  };\\n  function PDFWorkerStreamReader(msgHandler) {\\n    var _this = this;\\n\\n    this._msgHandler = msgHandler;\\n    this._contentLength = null;\\n    this._isRangeSupported = false;\\n    this._isStreamingSupported = false;\\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\\n    this._reader = readableStream.getReader();\\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\\n      _this._isStreamingSupported = data.isStreamingSupported;\\n      _this._isRangeSupported = data.isRangeSupported;\\n      _this._contentLength = data.contentLength;\\n    });\\n  }\\n  PDFWorkerStreamReader.prototype = {\\n    get headersReady() {\\n      return this._headersReady;\\n    },\\n    get contentLength() {\\n      return this._contentLength;\\n    },\\n    get isStreamingSupported() {\\n      return this._isStreamingSupported;\\n    },\\n    get isRangeSupported() {\\n      return this._isRangeSupported;\\n    },\\n    read: function read() {\\n      return this._reader.read().then(function (_ref) {\\n        var value = _ref.value,\\n            done = _ref.done;\\n\\n        if (done) {\\n          return {\\n            value: undefined,\\n            done: true\\n          };\\n        }\\n        return {\\n          value: value.buffer,\\n          done: false\\n        };\\n      });\\n    },\\n    cancel: function cancel(reason) {\\n      this._reader.cancel(reason);\\n    }\\n  };\\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\\n    this._msgHandler = msgHandler;\\n    this.onProgress = null;\\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\\n      begin: begin,\\n      end: end\\n    });\\n    this._reader = readableStream.getReader();\\n  }\\n  PDFWorkerStreamRangeReader.prototype = {\\n    get isStreamingSupported() {\\n      return false;\\n    },\\n    read: function read() {\\n      return this._reader.read().then(function (_ref2) {\\n        var value = _ref2.value,\\n            done = _ref2.done;\\n\\n        if (done) {\\n          return {\\n            value: undefined,\\n            done: true\\n          };\\n        }\\n        return {\\n          value: value.buffer,\\n          done: false\\n        };\\n      });\\n    },\\n    cancel: function cancel(reason) {\\n      this._reader.cancel(reason);\\n    }\\n  };\\n  return PDFWorkerStream;\\n}();\\nvar WorkerMessageHandler = {\\n  setup: function setup(handler, port) {\\n    var testMessageProcessed = false;\\n    handler.on('test', function wphSetupTest(data) {\\n      if (testMessageProcessed) {\\n        return;\\n      }\\n      testMessageProcessed = true;\\n      if (!(data instanceof Uint8Array)) {\\n        handler.send('test', 'main', false);\\n        return;\\n      }\\n      var supportTransfers = data[0] === 255;\\n      handler.postMessageTransfers = supportTransfers;\\n      var xhr = new XMLHttpRequest();\\n      var responseExists = 'response' in xhr;\\n      try {\\n        xhr.responseType;\\n      } catch (e) {\\n        responseExists = false;\\n      }\\n      if (!responseExists) {\\n        handler.send('test', false);\\n        return;\\n      }\\n      handler.send('test', {\\n        supportTypedArray: true,\\n        supportTransfers: supportTransfers\\n      });\\n    });\\n    handler.on('configure', function wphConfigure(data) {\\n      (0, _util.setVerbosityLevel)(data.verbosity);\\n    });\\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\\n      return WorkerMessageHandler.createDocumentHandler(data, port);\\n    });\\n  },\\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\\n    var pdfManager;\\n    var terminated = false;\\n    var cancelXHRs = null;\\n    var WorkerTasks = [];\\n    var apiVersion = docParams.apiVersion;\\n    var workerVersion = '2.0.305';\\n    if (apiVersion !== null && apiVersion !== workerVersion) {\\n      throw new Error('The API version \\\"' + apiVersion + '\\\" does not match ' + ('the Worker version \\\"' + workerVersion + '\\\".'));\\n    }\\n    var docId = docParams.docId;\\n    var docBaseUrl = docParams.docBaseUrl;\\n    var workerHandlerName = docParams.docId + '_worker';\\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\\n    handler.postMessageTransfers = docParams.postMessageTransfers;\\n    function ensureNotTerminated() {\\n      if (terminated) {\\n        throw new Error('Worker was terminated');\\n      }\\n    }\\n    function startWorkerTask(task) {\\n      WorkerTasks.push(task);\\n    }\\n    function finishWorkerTask(task) {\\n      task.finish();\\n      var i = WorkerTasks.indexOf(task);\\n      WorkerTasks.splice(i, 1);\\n    }\\n    function loadDocument(recoveryMode) {\\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\\n      var parseSuccess = function parseSuccess() {\\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\\n          var _ref4 = _slicedToArray(_ref3, 2),\\n              numPages = _ref4[0],\\n              fingerprint = _ref4[1];\\n\\n          loadDocumentCapability.resolve({\\n            numPages: numPages,\\n            fingerprint: fingerprint\\n          });\\n        }, parseFailure);\\n      };\\n      var parseFailure = function parseFailure(e) {\\n        loadDocumentCapability.reject(e);\\n      };\\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\\n        }, parseFailure);\\n      }, parseFailure);\\n      return loadDocumentCapability.promise;\\n    }\\n    function getPdfManager(data, evaluatorOptions) {\\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\\n      var pdfManager;\\n      var source = data.source;\\n      if (source.data) {\\n        try {\\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\\n          pdfManagerCapability.resolve(pdfManager);\\n        } catch (ex) {\\n          pdfManagerCapability.reject(ex);\\n        }\\n        return pdfManagerCapability.promise;\\n      }\\n      var pdfStream,\\n          cachedChunks = [];\\n      try {\\n        pdfStream = new PDFWorkerStream(handler);\\n      } catch (ex) {\\n        pdfManagerCapability.reject(ex);\\n        return pdfManagerCapability.promise;\\n      }\\n      var fullRequest = pdfStream.getFullReader();\\n      fullRequest.headersReady.then(function () {\\n        if (!fullRequest.isRangeSupported) {\\n          return;\\n        }\\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\\n          msgHandler: handler,\\n          url: source.url,\\n          password: source.password,\\n          length: fullRequest.contentLength,\\n          disableAutoFetch: disableAutoFetch,\\n          rangeChunkSize: source.rangeChunkSize\\n        }, evaluatorOptions, docBaseUrl);\\n        for (var i = 0; i < cachedChunks.length; i++) {\\n          pdfManager.sendProgressiveData(cachedChunks[i]);\\n        }\\n        cachedChunks = [];\\n        pdfManagerCapability.resolve(pdfManager);\\n        cancelXHRs = null;\\n      }).catch(function (reason) {\\n        pdfManagerCapability.reject(reason);\\n        cancelXHRs = null;\\n      });\\n      var loaded = 0;\\n      var flushChunks = function flushChunks() {\\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\\n        if (source.length && pdfFile.length !== source.length) {\\n          (0, _util.warn)('reported HTTP length is different from actual');\\n        }\\n        try {\\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\\n          pdfManagerCapability.resolve(pdfManager);\\n        } catch (ex) {\\n          pdfManagerCapability.reject(ex);\\n        }\\n        cachedChunks = [];\\n      };\\n      var readPromise = new Promise(function (resolve, reject) {\\n        var readChunk = function readChunk(chunk) {\\n          try {\\n            ensureNotTerminated();\\n            if (chunk.done) {\\n              if (!pdfManager) {\\n                flushChunks();\\n              }\\n              cancelXHRs = null;\\n              return;\\n            }\\n            var data = chunk.value;\\n            loaded += (0, _util.arrayByteLength)(data);\\n            if (!fullRequest.isStreamingSupported) {\\n              handler.send('DocProgress', {\\n                loaded: loaded,\\n                total: Math.max(loaded, fullRequest.contentLength || 0)\\n              });\\n            }\\n            if (pdfManager) {\\n              pdfManager.sendProgressiveData(data);\\n            } else {\\n              cachedChunks.push(data);\\n            }\\n            fullRequest.read().then(readChunk, reject);\\n          } catch (e) {\\n            reject(e);\\n          }\\n        };\\n        fullRequest.read().then(readChunk, reject);\\n      });\\n      readPromise.catch(function (e) {\\n        pdfManagerCapability.reject(e);\\n        cancelXHRs = null;\\n      });\\n      cancelXHRs = function cancelXHRs() {\\n        pdfStream.cancelAllRequests('abort');\\n      };\\n      return pdfManagerCapability.promise;\\n    }\\n    function setupDoc(data) {\\n      function onSuccess(doc) {\\n        ensureNotTerminated();\\n        handler.send('GetDoc', { pdfInfo: doc });\\n      }\\n      function onFailure(e) {\\n        ensureNotTerminated();\\n        if (e instanceof _util.PasswordException) {\\n          var task = new WorkerTask('PasswordException: response ' + e.code);\\n          startWorkerTask(task);\\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\\n            finishWorkerTask(task);\\n            pdfManager.updatePassword(data.password);\\n            pdfManagerReady();\\n          }).catch(function (ex) {\\n            finishWorkerTask(task);\\n            handler.send('PasswordException', ex);\\n          }.bind(null, e));\\n        } else if (e instanceof _util.InvalidPDFException) {\\n          handler.send('InvalidPDF', e);\\n        } else if (e instanceof _util.MissingPDFException) {\\n          handler.send('MissingPDF', e);\\n        } else if (e instanceof _util.UnexpectedResponseException) {\\n          handler.send('UnexpectedResponse', e);\\n        } else {\\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\\n        }\\n      }\\n      function pdfManagerReady() {\\n        ensureNotTerminated();\\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\\n          ensureNotTerminated();\\n          if (!(ex instanceof _util.XRefParseException)) {\\n            onFailure(ex);\\n            return;\\n          }\\n          pdfManager.requestLoadedStream();\\n          pdfManager.onLoadedStream().then(function () {\\n            ensureNotTerminated();\\n            loadDocument(true).then(onSuccess, onFailure);\\n          });\\n        }, onFailure);\\n      }\\n      ensureNotTerminated();\\n      var evaluatorOptions = {\\n        forceDataSchema: data.disableCreateObjectURL,\\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\\n        disableFontFace: data.disableFontFace,\\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\\n        ignoreErrors: data.ignoreErrors,\\n        isEvalSupported: data.isEvalSupported\\n      };\\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\\n        if (terminated) {\\n          newPdfManager.terminate();\\n          throw new Error('Worker was terminated');\\n        }\\n        pdfManager = newPdfManager;\\n        handler.send('PDFManagerReady', null);\\n        pdfManager.onLoadedStream().then(function (stream) {\\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\\n        });\\n      }).then(pdfManagerReady, onFailure);\\n    }\\n    handler.on('GetPage', function wphSetupGetPage(data) {\\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\\n        var refPromise = pdfManager.ensure(page, 'ref');\\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\\n        var viewPromise = pdfManager.ensure(page, 'view');\\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\\n          return {\\n            rotate: results[0],\\n            ref: results[1],\\n            userUnit: results[2],\\n            view: results[3]\\n          };\\n        });\\n      });\\n    });\\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\\n      var catalog = pdfManager.pdfDocument.catalog;\\n      return catalog.getPageIndex(ref);\\n    });\\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\\n      return pdfManager.ensureCatalog('destinations');\\n    });\\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\\n    });\\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\\n      return pdfManager.ensureCatalog('pageLabels');\\n    });\\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\\n      return pdfManager.ensureCatalog('pageMode');\\n    });\\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\\n      return pdfManager.ensureCatalog('attachments');\\n    });\\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\\n      return pdfManager.ensureCatalog('javaScript');\\n    });\\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\\n      return pdfManager.ensureCatalog('documentOutline');\\n    });\\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\\n    });\\n    handler.on('GetData', function wphSetupGetData(data) {\\n      pdfManager.requestLoadedStream();\\n      return pdfManager.onLoadedStream().then(function (stream) {\\n        return stream.bytes;\\n      });\\n    });\\n    handler.on('GetStats', function wphSetupGetStats(data) {\\n      return pdfManager.pdfDocument.xref.stats;\\n    });\\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\\n      });\\n    });\\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\\n      var pageIndex = data.pageIndex;\\n      pdfManager.getPage(pageIndex).then(function (page) {\\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\\n        startWorkerTask(task);\\n        var pageNum = pageIndex + 1;\\n        var start = Date.now();\\n        page.getOperatorList({\\n          handler: handler,\\n          task: task,\\n          intent: data.intent,\\n          renderInteractiveForms: data.renderInteractiveForms\\n        }).then(function (operatorList) {\\n          finishWorkerTask(task);\\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\\n        }, function (e) {\\n          finishWorkerTask(task);\\n          if (task.terminated) {\\n            return;\\n          }\\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\\n          var wrappedException;\\n          if (typeof e === 'string') {\\n            wrappedException = {\\n              message: e,\\n              stack: minimumStackMessage\\n            };\\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\\n            wrappedException = {\\n              message: e.message || e.toString(),\\n              stack: e.stack || minimumStackMessage\\n            };\\n          } else {\\n            wrappedException = {\\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\\n              stack: minimumStackMessage\\n            };\\n          }\\n          handler.send('PageError', {\\n            pageNum: pageNum,\\n            error: wrappedException,\\n            intent: data.intent\\n          });\\n        });\\n      });\\n    }, this);\\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\\n      var pageIndex = data.pageIndex;\\n      sink.onPull = function (desiredSize) {};\\n      sink.onCancel = function (reason) {};\\n      pdfManager.getPage(pageIndex).then(function (page) {\\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\\n        startWorkerTask(task);\\n        var pageNum = pageIndex + 1;\\n        var start = Date.now();\\n        page.extractTextContent({\\n          handler: handler,\\n          task: task,\\n          sink: sink,\\n          normalizeWhitespace: data.normalizeWhitespace,\\n          combineTextItems: data.combineTextItems\\n        }).then(function () {\\n          finishWorkerTask(task);\\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\\n          sink.close();\\n        }, function (reason) {\\n          finishWorkerTask(task);\\n          if (task.terminated) {\\n            return;\\n          }\\n          sink.error(reason);\\n          throw reason;\\n        });\\n      });\\n    });\\n    handler.on('Cleanup', function wphCleanup(data) {\\n      return pdfManager.cleanup();\\n    });\\n    handler.on('Terminate', function wphTerminate(data) {\\n      terminated = true;\\n      if (pdfManager) {\\n        pdfManager.terminate();\\n        pdfManager = null;\\n      }\\n      if (cancelXHRs) {\\n        cancelXHRs();\\n      }\\n      var waitOn = [];\\n      WorkerTasks.forEach(function (task) {\\n        waitOn.push(task.finished);\\n        task.terminate();\\n      });\\n      return Promise.all(waitOn).then(function () {\\n        handler.destroy();\\n        handler = null;\\n      });\\n    });\\n    handler.on('Ready', function wphReady(data) {\\n      setupDoc(docParams);\\n      docParams = null;\\n    });\\n    return workerHandlerName;\\n  },\\n  initializeFromPort: function initializeFromPort(port) {\\n    var handler = new _util.MessageHandler('worker', 'main', port);\\n    WorkerMessageHandler.setup(handler, port);\\n    handler.send('ready', null);\\n  }\\n};\\nfunction isMessagePort(maybePort) {\\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\\n}\\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\\n  WorkerMessageHandler.initializeFromPort(self);\\n}\\nexports.WorkerTask = WorkerTask;\\nexports.WorkerMessageHandler = WorkerMessageHandler;\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n'use strict';\\n\\nvar pdfjsVersion = '2.0.305';\\nvar pdfjsBuild = '9c6a8801';\\nvar pdfjsCoreWorker = require('./core/worker.js');\\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{\"./node_modules/pdfjs-dist/lib/core/annotation.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/annotation.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.AnnotationFactory=t.AnnotationBorderStyle=t.Annotation=void 0;var a=function e(t,r,a){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,r);if(void 0===i){var n=Object.getPrototypeOf(t);return null===n?void 0:e(n,r,a)}if(\"value\"in i)return i.value;var o=i.get;return void 0!==o?o.call(a):void 0},i=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),n=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),o=r(/*! ./obj */\"./node_modules/pdfjs-dist/lib/core/obj.js\"),s=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),c=r(/*! ./colorspace */\"./node_modules/pdfjs-dist/lib/core/colorspace.js\"),l=r(/*! ./operator_list */\"./node_modules/pdfjs-dist/lib/core/operator_list.js\"),h=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\");function u(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function d(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function f(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var g=function(){function e(){f(this,e)}return i(e,null,[{key:\"create\",value:function(e,t,r,a){var i=e.fetchIfRef(t);if((0,s.isDict)(i)){var o=(0,s.isRef)(t)?t.toString():\"annot_\"+a.createObjId(),c=i.get(\"Subtype\");c=(0,s.isName)(c)?c.name:null;var l={xref:e,dict:i,ref:(0,s.isRef)(t)?t:null,subtype:c,id:o,pdfManager:r};switch(c){case\"Link\":return new S(l);case\"Text\":return new k(l);case\"Widget\":var h=n.Util.getInheritableProperty(i,\"FT\");switch(h=(0,s.isName)(h)?h.name:null){case\"Tx\":return new v(l);case\"Btn\":return new y(l);case\"Ch\":return new w(l)}return(0,n.warn)('Unimplemented widget field type \"'+h+'\", falling back to base field type.'),new b(l);case\"Popup\":return new x(l);case\"Line\":return new C(l);case\"Square\":return new A(l);case\"Circle\":return new I(l);case\"PolyLine\":return new F(l);case\"Polygon\":return new O(l);case\"Highlight\":return new B(l);case\"Underline\":return new P(l);case\"Squiggly\":return new T(l);case\"StrikeOut\":return new E(l);case\"Stamp\":return new M(l);case\"FileAttachment\":return new D(l);default:return c?(0,n.warn)('Unimplemented annotation type \"'+c+'\", falling back to base annotation.'):(0,n.warn)(\"Annotation is missing the required /Subtype.\"),new m(l)}}}}]),e}();var m=function(){function e(t){f(this,e);var r=t.dict;this.setFlags(r.get(\"F\")),this.setRectangle(r.getArray(\"Rect\")),this.setColor(r.getArray(\"C\")),this.setBorderStyle(r),this.setAppearance(r),this.data={annotationFlags:this.flags,borderStyle:this.borderStyle,color:this.color,hasAppearance:!!this.appearance,id:t.id,rect:this.rectangle,subtype:t.subtype}}return i(e,[{key:\"_hasFlag\",value:function(e,t){return!!(e&t)}},{key:\"_isViewable\",value:function(e){return!this._hasFlag(e,n.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,n.AnnotationFlag.HIDDEN)&&!this._hasFlag(e,n.AnnotationFlag.NOVIEW)}},{key:\"_isPrintable\",value:function(e){return this._hasFlag(e,n.AnnotationFlag.PRINT)&&!this._hasFlag(e,n.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,n.AnnotationFlag.HIDDEN)}},{key:\"setFlags\",value:function(e){this.flags=Number.isInteger(e)&&e>0?e:0}},{key:\"hasFlag\",value:function(e){return this._hasFlag(this.flags,e)}},{key:\"setRectangle\",value:function(e){Array.isArray(e)&&4===e.length?this.rectangle=n.Util.normalizeRect(e):this.rectangle=[0,0,0,0]}},{key:\"setColor\",value:function(e){var t=new Uint8Array(3);if(Array.isArray(e))switch(e.length){case 0:this.color=null;break;case 1:c.ColorSpace.singletons.gray.getRgbItem(e,0,t,0),this.color=t;break;case 3:c.ColorSpace.singletons.rgb.getRgbItem(e,0,t,0),this.color=t;break;case 4:c.ColorSpace.singletons.cmyk.getRgbItem(e,0,t,0),this.color=t;break;default:this.color=t}else this.color=t}},{key:\"setBorderStyle\",value:function(e){if(this.borderStyle=new p,(0,s.isDict)(e))if(e.has(\"BS\")){var t=e.get(\"BS\"),r=t.get(\"Type\");r&&!(0,s.isName)(r,\"Border\")||(this.borderStyle.setWidth(t.get(\"W\")),this.borderStyle.setStyle(t.get(\"S\")),this.borderStyle.setDashArray(t.getArray(\"D\")))}else if(e.has(\"Border\")){var a=e.getArray(\"Border\");Array.isArray(a)&&a.length>=3&&(this.borderStyle.setHorizontalCornerRadius(a[0]),this.borderStyle.setVerticalCornerRadius(a[1]),this.borderStyle.setWidth(a[2]),4===a.length&&this.borderStyle.setDashArray(a[3]))}else this.borderStyle.setWidth(0)}},{key:\"setAppearance\",value:function(e){this.appearance=null;var t=e.get(\"AP\");if((0,s.isDict)(t)){var r=t.get(\"N\");if((0,s.isStream)(r))this.appearance=r;else if((0,s.isDict)(r)){var a=e.get(\"AS\");(0,s.isName)(a)&&r.has(a.name)&&(this.appearance=r.get(a.name))}}}},{key:\"_preparePopup\",value:function(e){e.has(\"C\")||(this.data.color=null),this.data.hasPopup=e.has(\"Popup\"),this.data.title=(0,n.stringToPDFString)(e.get(\"T\")||\"\"),this.data.contents=(0,n.stringToPDFString)(e.get(\"Contents\")||\"\")}},{key:\"loadResources\",value:function(e){return this.appearance.dict.getAsync(\"Resources\").then(function(t){if(t)return new o.ObjectLoader(t,e,t.xref).load().then(function(){return t})})}},{key:\"getOperatorList\",value:function(e,t,r){var a=this;if(!this.appearance)return Promise.resolve(new l.OperatorList);var i=this.data,o=this.appearance.dict,s=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),c=o.getArray(\"BBox\")||[0,0,1,1],h=o.getArray(\"Matrix\")||[1,0,0,1,0,0],u=function(e,t,r){var a=n.Util.getAxialAlignedBoundingBox(t,r),i=a[0],o=a[1],s=a[2],c=a[3];if(i===s||o===c)return[1,0,0,1,e[0],e[1]];var l=(e[2]-e[0])/(s-i),h=(e[3]-e[1])/(c-o);return[l,0,0,h,e[0]-i*l,e[1]-o*h]}(i.rect,c,h);return s.then(function(r){var o=new l.OperatorList;return o.addOp(n.OPS.beginAnnotation,[i.rect,u,h]),e.getOperatorList({stream:a.appearance,task:t,resources:r,operatorList:o}).then(function(){return o.addOp(n.OPS.endAnnotation,[]),a.appearance.reset(),o})})}},{key:\"viewable\",get:function(){return 0===this.flags||this._isViewable(this.flags)}},{key:\"printable\",get:function(){return 0!==this.flags&&this._isPrintable(this.flags)}}]),e}(),p=function(){function e(){f(this,e),this.width=1,this.style=n.AnnotationBorderStyleType.SOLID,this.dashArray=[3],this.horizontalCornerRadius=0,this.verticalCornerRadius=0}return i(e,[{key:\"setWidth\",value:function(e){Number.isInteger(e)&&(this.width=e)}},{key:\"setStyle\",value:function(e){if(e)switch(e.name){case\"S\":this.style=n.AnnotationBorderStyleType.SOLID;break;case\"D\":this.style=n.AnnotationBorderStyleType.DASHED;break;case\"B\":this.style=n.AnnotationBorderStyleType.BEVELED;break;case\"I\":this.style=n.AnnotationBorderStyleType.INSET;break;case\"U\":this.style=n.AnnotationBorderStyleType.UNDERLINE}}},{key:\"setDashArray\",value:function(e){if(Array.isArray(e)&&e.length>0){for(var t=!0,r=!0,a=0,i=e.length;a<i;a++){var n=e[a];if(!(+n>=0)){t=!1;break}n>0&&(r=!1)}t&&!r?this.dashArray=e:this.width=0}else e&&(this.width=0)}},{key:\"setHorizontalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.horizontalCornerRadius=e)}},{key:\"setVerticalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.verticalCornerRadius=e)}}]),e}(),b=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),a=e.dict,i=r.data;i.annotationType=n.AnnotationType.WIDGET,i.fieldName=r._constructFieldName(a),i.fieldValue=n.Util.getInheritableProperty(a,\"V\",!0),i.alternativeText=(0,n.stringToPDFString)(a.get(\"TU\")||\"\"),i.defaultAppearance=n.Util.getInheritableProperty(a,\"DA\")||\"\";var o=n.Util.getInheritableProperty(a,\"FT\");return i.fieldType=(0,s.isName)(o)?o.name:null,r.fieldResources=n.Util.getInheritableProperty(a,\"DR\")||s.Dict.empty,i.fieldFlags=n.Util.getInheritableProperty(a,\"Ff\"),(!Number.isInteger(i.fieldFlags)||i.fieldFlags<0)&&(i.fieldFlags=0),i.readOnly=r.hasFieldFlag(n.AnnotationFieldFlag.READONLY),\"Sig\"===i.fieldType&&r.setFlags(n.AnnotationFlag.HIDDEN),r}return d(t,m),i(t,[{key:\"_constructFieldName\",value:function(e){if(!e.has(\"T\")&&!e.has(\"Parent\"))return(0,n.warn)(\"Unknown field name, falling back to empty field name.\"),\"\";if(!e.has(\"Parent\"))return(0,n.stringToPDFString)(e.get(\"T\"));var t=[];e.has(\"T\")&&t.unshift((0,n.stringToPDFString)(e.get(\"T\")));for(var r=e;r.has(\"Parent\")&&(r=r.get(\"Parent\"),(0,s.isDict)(r));)r.has(\"T\")&&t.unshift((0,n.stringToPDFString)(r.get(\"T\")));return t.join(\".\")}},{key:\"hasFieldFlag\",value:function(e){return!!(this.data.fieldFlags&e)}},{key:\"getOperatorList\",value:function(e,r,i){return i?Promise.resolve(new l.OperatorList):a(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"getOperatorList\",this).call(this,e,r,i)}}]),t}(),v=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.fieldValue=(0,n.stringToPDFString)(r.data.fieldValue||\"\");var a=n.Util.getInheritableProperty(e.dict,\"Q\");(!Number.isInteger(a)||a<0||a>2)&&(a=null),r.data.textAlignment=a;var i=n.Util.getInheritableProperty(e.dict,\"MaxLen\");return(!Number.isInteger(i)||i<0)&&(i=null),r.data.maxLen=i,r.data.multiLine=r.hasFieldFlag(n.AnnotationFieldFlag.MULTILINE),r.data.comb=r.hasFieldFlag(n.AnnotationFieldFlag.COMB)&&!r.hasFieldFlag(n.AnnotationFieldFlag.MULTILINE)&&!r.hasFieldFlag(n.AnnotationFieldFlag.PASSWORD)&&!r.hasFieldFlag(n.AnnotationFieldFlag.FILESELECT)&&null!==r.data.maxLen,r}return d(t,b),i(t,[{key:\"getOperatorList\",value:function(e,r,i){if(i||this.appearance)return a(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"getOperatorList\",this).call(this,e,r,i);var o=new l.OperatorList;if(!this.data.defaultAppearance)return Promise.resolve(o);var s=new h.Stream((0,n.stringToBytes)(this.data.defaultAppearance));return e.getOperatorList({stream:s,task:r,resources:this.fieldResources,operatorList:o}).then(function(){return o})}}]),t}(),y=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.checkBox=!r.hasFieldFlag(n.AnnotationFieldFlag.RADIO)&&!r.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON),r.data.radioButton=r.hasFieldFlag(n.AnnotationFieldFlag.RADIO)&&!r.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON),r.data.pushButton=r.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON),r.data.checkBox?r._processCheckBox():r.data.radioButton?r._processRadioButton(e):r.data.pushButton?r._processPushButton(e):(0,n.warn)(\"Invalid field flags for button widget annotation\"),r}return d(t,b),i(t,[{key:\"_processCheckBox\",value:function(){(0,s.isName)(this.data.fieldValue)&&(this.data.fieldValue=this.data.fieldValue.name)}},{key:\"_processRadioButton\",value:function(e){this.data.fieldValue=this.data.buttonValue=null;var t=e.dict.get(\"Parent\");if((0,s.isDict)(t)&&t.has(\"V\")){var r=t.get(\"V\");(0,s.isName)(r)&&(this.data.fieldValue=r.name)}var a=e.dict.get(\"AP\");if((0,s.isDict)(a)){var i=a.get(\"N\");if((0,s.isDict)(i))for(var n=i.getKeys(),o=0,c=n.length;o<c;o++)if(\"Off\"!==n[o]){this.data.buttonValue=n[o];break}}}},{key:\"_processPushButton\",value:function(e){e.dict.has(\"A\")?o.Catalog.parseDestDictionary({destDict:e.dict,resultObj:this.data,docBaseUrl:e.pdfManager.docBaseUrl}):(0,n.warn)(\"Push buttons without action dictionaries are not supported\")}}]),t}(),w=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.options=[];var a=n.Util.getInheritableProperty(e.dict,\"Opt\");if(Array.isArray(a))for(var i=e.xref,o=0,s=a.length;o<s;o++){var c=i.fetchIfRef(a[o]),l=Array.isArray(c);r.data.options[o]={exportValue:l?i.fetchIfRef(c[0]):c,displayValue:(0,n.stringToPDFString)(l?i.fetchIfRef(c[1]):c)}}return Array.isArray(r.data.fieldValue)||(r.data.fieldValue=[r.data.fieldValue]),r.data.combo=r.hasFieldFlag(n.AnnotationFieldFlag.COMBO),r.data.multiSelect=r.hasFieldFlag(n.AnnotationFieldFlag.MULTISELECT),r}return d(t,b),t}(),k=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.TEXT,r.data.hasAppearance?r.data.name=\"NoIcon\":(r.data.rect[1]=r.data.rect[3]-22,r.data.rect[2]=r.data.rect[0]+22,r.data.name=e.dict.has(\"Name\")?e.dict.get(\"Name\").name:\"Note\"),r._preparePopup(e.dict),r}return d(t,m),t}(),S=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.LINK,o.Catalog.parseDestDictionary({destDict:e.dict,resultObj:r.data,docBaseUrl:e.pdfManager.docBaseUrl}),r}return d(t,m),t}(),x=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.annotationType=n.AnnotationType.POPUP;var a=e.dict,i=a.get(\"Parent\");if(!i)return(0,n.warn)(\"Popup annotation has a missing or invalid parent annotation.\"),u(r);var o=i.get(\"Subtype\");if(r.data.parentType=(0,s.isName)(o)?o.name:null,r.data.parentId=a.getRaw(\"Parent\").toString(),r.data.title=(0,n.stringToPDFString)(i.get(\"T\")||\"\"),r.data.contents=(0,n.stringToPDFString)(i.get(\"Contents\")||\"\"),i.has(\"C\")?(r.setColor(i.getArray(\"C\")),r.data.color=r.color):r.data.color=null,!r.viewable){var c=i.get(\"F\");r._isViewable(c)&&r.setFlags(c)}return r}return d(t,m),t}(),C=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.annotationType=n.AnnotationType.LINE;var a=e.dict;return r.data.lineCoordinates=n.Util.normalizeRect(a.getArray(\"L\")),r._preparePopup(a),r}return d(t,m),t}(),A=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.SQUARE,r._preparePopup(e.dict),r}return d(t,m),t}(),I=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.CIRCLE,r._preparePopup(e.dict),r}return d(t,m),t}(),F=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.annotationType=n.AnnotationType.POLYLINE;var a=e.dict,i=a.getArray(\"Vertices\");r.data.vertices=[];for(var o=0,s=i.length;o<s;o+=2)r.data.vertices.push({x:i[o],y:i[o+1]});return r._preparePopup(a),r}return d(t,m),t}(),O=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.POLYGON,r}return d(t,F),t}(),B=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.HIGHLIGHT,r._preparePopup(e.dict),r}return d(t,m),t}(),P=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.UNDERLINE,r._preparePopup(e.dict),r}return d(t,m),t}(),T=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.SQUIGGLY,r._preparePopup(e.dict),r}return d(t,m),t}(),E=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.STRIKEOUT,r._preparePopup(e.dict),r}return d(t,m),t}(),M=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.STAMP,r._preparePopup(e.dict),r}return d(t,m),t}(),D=function(e){function t(e){f(this,t);var r=u(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),a=new o.FileSpec(e.dict.get(\"FS\"),e.xref);return r.data.annotationType=n.AnnotationType.FILEATTACHMENT,r.data.file=a.serializable,r._preparePopup(e.dict),r}return d(t,m),t}();t.Annotation=m,t.AnnotationBorderStyle=p,t.AnnotationFactory=g},\"./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js ***!\n  \\****************************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var a=function(){var e=[{qe:22017,nmps:1,nlps:1,switchFlag:1},{qe:13313,nmps:2,nlps:6,switchFlag:0},{qe:6145,nmps:3,nlps:9,switchFlag:0},{qe:2753,nmps:4,nlps:12,switchFlag:0},{qe:1313,nmps:5,nlps:29,switchFlag:0},{qe:545,nmps:38,nlps:33,switchFlag:0},{qe:22017,nmps:7,nlps:6,switchFlag:1},{qe:21505,nmps:8,nlps:14,switchFlag:0},{qe:18433,nmps:9,nlps:14,switchFlag:0},{qe:14337,nmps:10,nlps:14,switchFlag:0},{qe:12289,nmps:11,nlps:17,switchFlag:0},{qe:9217,nmps:12,nlps:18,switchFlag:0},{qe:7169,nmps:13,nlps:20,switchFlag:0},{qe:5633,nmps:29,nlps:21,switchFlag:0},{qe:22017,nmps:15,nlps:14,switchFlag:1},{qe:21505,nmps:16,nlps:14,switchFlag:0},{qe:20737,nmps:17,nlps:15,switchFlag:0},{qe:18433,nmps:18,nlps:16,switchFlag:0},{qe:14337,nmps:19,nlps:17,switchFlag:0},{qe:13313,nmps:20,nlps:18,switchFlag:0},{qe:12289,nmps:21,nlps:19,switchFlag:0},{qe:10241,nmps:22,nlps:19,switchFlag:0},{qe:9217,nmps:23,nlps:20,switchFlag:0},{qe:8705,nmps:24,nlps:21,switchFlag:0},{qe:7169,nmps:25,nlps:22,switchFlag:0},{qe:6145,nmps:26,nlps:23,switchFlag:0},{qe:5633,nmps:27,nlps:24,switchFlag:0},{qe:5121,nmps:28,nlps:25,switchFlag:0},{qe:4609,nmps:29,nlps:26,switchFlag:0},{qe:4353,nmps:30,nlps:27,switchFlag:0},{qe:2753,nmps:31,nlps:28,switchFlag:0},{qe:2497,nmps:32,nlps:29,switchFlag:0},{qe:2209,nmps:33,nlps:30,switchFlag:0},{qe:1313,nmps:34,nlps:31,switchFlag:0},{qe:1089,nmps:35,nlps:32,switchFlag:0},{qe:673,nmps:36,nlps:33,switchFlag:0},{qe:545,nmps:37,nlps:34,switchFlag:0},{qe:321,nmps:38,nlps:35,switchFlag:0},{qe:273,nmps:39,nlps:36,switchFlag:0},{qe:133,nmps:40,nlps:37,switchFlag:0},{qe:73,nmps:41,nlps:38,switchFlag:0},{qe:37,nmps:42,nlps:39,switchFlag:0},{qe:21,nmps:43,nlps:40,switchFlag:0},{qe:9,nmps:44,nlps:41,switchFlag:0},{qe:5,nmps:45,nlps:42,switchFlag:0},{qe:1,nmps:45,nlps:43,switchFlag:0},{qe:22017,nmps:46,nlps:46,switchFlag:0}];function t(e,t,r){this.data=e,this.bp=t,this.dataEnd=r,this.chigh=e[t],this.clow=0,this.byteIn(),this.chigh=this.chigh<<7&65535|this.clow>>9&127,this.clow=this.clow<<7&65535,this.ct-=7,this.a=32768}return t.prototype={byteIn:function(){var e=this.data,t=this.bp;255===e[t]?e[t+1]>143?(this.clow+=65280,this.ct=8):(t++,this.clow+=e[t]<<9,this.ct=7,this.bp=t):(t++,this.clow+=t<this.dataEnd?e[t]<<8:65280,this.ct=8,this.bp=t);this.clow>65535&&(this.chigh+=this.clow>>16,this.clow&=65535)},readBit:function(t,r){var a,i=t[r]>>1,n=1&t[r],o=e[i],s=o.qe,c=this.a-s;if(this.chigh<s)c<s?(c=s,a=n,i=o.nmps):(c=s,a=1^n,1===o.switchFlag&&(n=a),i=o.nlps);else{if(this.chigh-=s,0!=(32768&c))return this.a=c,n;c<s?(a=1^n,1===o.switchFlag&&(n=a),i=o.nlps):(a=n,i=o.nmps)}do{0===this.ct&&this.byteIn(),c<<=1,this.chigh=this.chigh<<1&65535|this.clow>>15&1,this.clow=this.clow<<1&65535,this.ct--}while(0==(32768&c));return this.a=c,t[r]=i<<1|n,a}},t}();t.ArithmeticDecoder=a},\"./node_modules/pdfjs-dist/lib/core/bidi.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/bidi.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.bidi=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),in=[\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ON\",\"ON\",\"AL\",\"ET\",\"ET\",\"AL\",\"CS\",\"AL\",\"ON\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ET\",\"AN\",\"AN\",\"AL\",\"AL\",\"AL\",\"NSM\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\"];function o(e){return 0!=(1&e)}function s(e){return 0==(1&e)}function c(e,t,r){for(var a=t,i=e.length;a<i;++a)if(e[a]!==r)return a;return a}function l(e,t,r,a){for(var i=t;i<r;++i)e[i]=a}function h(e,t,r){for(var a=t,i=r-1;a<i;++a,--i){var n=e[a];e[a]=e[i],e[i]=n}}function u(e,t,r){return{str:e,dir:r?\"ttb\":t?\"ltr\":\"rtl\"}}var d=[],f=[];t.bidi=function(e,t,r){var g=!0,m=e.length;if(0===m||r)return u(e,g,r);d.length=m,f.length=m;var p,b,v=0;for(p=0;p<m;++p){d[p]=e.charAt(p);var y=e.charCodeAt(p),w=\"L\";y<=255?w=i[y]:1424<=y&&y<=1524?w=\"R\":1536<=y&&y<=1791?(w=n[255&y])||(0,a.warn)(\"Bidi: invalid Unicode character \"+y.toString(16)):1792<=y&&y<=2220&&(w=\"AL\"),\"R\"!==w&&\"AL\"!==w&&\"AN\"!==w||v++,f[p]=w}if(0===v)return u(e,g=!0);-1===t&&(v/m<.3?(g=!0,t=0):(g=!1,t=1));var k=[];for(p=0;p<m;++p)k[p]=t;var S,x=o(t)?\"R\":\"L\",C=x,A=C,I=C;for(p=0;p<m;++p)\"NSM\"===f[p]?f[p]=I:I=f[p];for(I=C,p=0;p<m;++p)\"EN\"===(S=f[p])?f[p]=\"AL\"===I?\"AN\":\"EN\":\"R\"!==S&&\"L\"!==S&&\"AL\"!==S||(I=S);for(p=0;p<m;++p)\"AL\"===(S=f[p])&&(f[p]=\"R\");for(p=1;p<m-1;++p)\"ES\"===f[p]&&\"EN\"===f[p-1]&&\"EN\"===f[p+1]&&(f[p]=\"EN\"),\"CS\"!==f[p]||\"EN\"!==f[p-1]&&\"AN\"!==f[p-1]||f[p+1]!==f[p-1]||(f[p]=f[p-1]);for(p=0;p<m;++p)if(\"EN\"===f[p]){var F;for(F=p-1;F>=0&&\"ET\"===f[F];--F)f[F]=\"EN\";for(F=p+1;F<m&&\"ET\"===f[F];++F)f[F]=\"EN\"}for(p=0;p<m;++p)\"WS\"!==(S=f[p])&&\"ES\"!==S&&\"ET\"!==S&&\"CS\"!==S||(f[p]=\"ON\");for(I=C,p=0;p<m;++p)\"EN\"===(S=f[p])?f[p]=\"L\"===I?\"L\":\"EN\":\"R\"!==S&&\"L\"!==S||(I=S);for(p=0;p<m;++p)if(\"ON\"===f[p]){var O=c(f,p+1,\"ON\"),B=C;p>0&&(B=f[p-1]);var P=A;O+1<m&&(P=f[O+1]),\"L\"!==B&&(B=\"R\"),\"L\"!==P&&(P=\"R\"),B===P&&l(f,p,O,B),p=O-1}for(p=0;p<m;++p)\"ON\"===f[p]&&(f[p]=x);for(p=0;p<m;++p)S=f[p],s(k[p])?\"R\"===S?k[p]+=1:\"AN\"!==S&&\"EN\"!==S||(k[p]+=2):\"L\"!==S&&\"AN\"!==S&&\"EN\"!==S||(k[p]+=1);var T,E=-1,M=99;for(p=0,b=k.length;p<b;++p)E<(T=k[p])&&(E=T),M>T&&o(T)&&(M=T);for(T=E;T>=M;--T){var D=-1;for(p=0,b=k.length;p<b;++p)k[p]<T?D>=0&&(h(d,D,p),D=-1):D<0&&(D=p);D>=0&&h(d,D,k.length)}for(p=0,b=d.length;p<b;++p){var R=d[p];\"<\"!==R&&\">\"!==R||(d[p]=\"\")}return u(d.join(\"\"),g)}},\"./node_modules/pdfjs-dist/lib/core/ccitt.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/ccitt.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxDecoder=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=function(){var e=[[-1,-1],[-1,-1],[7,8],[7,7],[6,6],[6,6],[6,5],[6,5],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2]],t=[[-1,-1],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]],r=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]],i=[[-1,-1],[-1,-1],[12,-2],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]],n=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]],o=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];function s(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||\"function\"!=typeof e.next)throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');this.source=e,this.eof=!1,this.encoding=t.K||0,this.eoline=t.EndOfLine||!1,this.byteAlign=t.EncodedByteAlign||!1,this.columns=t.Columns||1728,this.rows=t.Rows||0;var r=t.EndOfBlock;null==r&&(r=!0),this.eoblock=r,this.black=t.BlackIs1||!1,this.codingLine=new Uint32Array(this.columns+1),this.refLine=new Uint32Array(this.columns+2),this.codingLine[0]=this.columns,this.codingPos=0,this.row=0,this.nextLine2D=this.encoding<0,this.inputBits=0,this.inputBuf=0,this.outputBits=0,this.rowsDone=!1;for(var a=void 0;0===(a=this._lookBits(12));)this._eatBits(1);1===a&&this._eatBits(12),this.encoding>0&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1))}return s.prototype={readNextChar:function(){if(this.eof)return-1;var e=this.refLine,t=this.codingLine,r=this.columns,i=void 0,n=void 0,o=void 0,s=void 0;if(0===this.outputBits){if(this.rowsDone&&(this.eof=!0),this.eof)return-1;this.err=!1;var c=void 0,l=void 0,h=void 0;if(this.nextLine2D){for(s=0;t[s]<r;++s)e[s]=t[s];for(e[s++]=r,e[s]=r,t[0]=0,this.codingPos=0,i=0,n=0;t[this.codingPos]<r;)switch(c=this._getTwoDimCode()){case 0:this._addPixels(e[i+1],n),e[i+1]<r&&(i+=2);break;case 1:if(c=l=0,n){do{c+=h=this._getBlackCode()}while(h>=64);do{l+=h=this._getWhiteCode()}while(h>=64)}else{do{c+=h=this._getWhiteCode()}while(h>=64);do{l+=h=this._getBlackCode()}while(h>=64)}for(this._addPixels(t[this.codingPos]+c,n),t[this.codingPos]<r&&this._addPixels(t[this.codingPos]+l,1^n);e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 7:if(this._addPixels(e[i]+3,n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 5:if(this._addPixels(e[i]+2,n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 3:if(this._addPixels(e[i]+1,n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 2:if(this._addPixels(e[i],n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 8:if(this._addPixelsNeg(e[i]-3,n),n^=1,t[this.codingPos]<r)for(i>0?--i:++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 6:if(this._addPixelsNeg(e[i]-2,n),n^=1,t[this.codingPos]<r)for(i>0?--i:++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 4:if(this._addPixelsNeg(e[i]-1,n),n^=1,t[this.codingPos]<r)for(i>0?--i:++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case-1:this._addPixels(r,0),this.eof=!0;break;default:(0,a.info)(\"bad 2d code\"),this._addPixels(r,0),this.err=!0}}else for(t[0]=0,this.codingPos=0,n=0;t[this.codingPos]<r;){if(c=0,n)do{c+=h=this._getBlackCode()}while(h>=64);else do{c+=h=this._getWhiteCode()}while(h>=64);this._addPixels(t[this.codingPos]+c,n),n^=1}var u=!1;if(this.byteAlign&&(this.inputBits&=-8),this.eoblock||this.row!==this.rows-1){if(c=this._lookBits(12),this.eoline)for(;-1!==c&&1!==c;)this._eatBits(1),c=this._lookBits(12);else for(;0===c;)this._eatBits(1),c=this._lookBits(12);1===c?(this._eatBits(12),u=!0):-1===c&&(this.eof=!0)}else this.rowsDone=!0;if(!this.eof&&this.encoding>0&&!this.rowsDone&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1)),this.eoblock&&u&&this.byteAlign){if(1===(c=this._lookBits(12))){if(this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1)),this.encoding>=0)for(s=0;s<4;++s)1!==(c=this._lookBits(12))&&(0,a.info)(\"bad rtc code: \"+c),this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1));this.eof=!0}}else if(this.err&&this.eoline){for(;;){if(-1===(c=this._lookBits(13)))return this.eof=!0,-1;if(c>>1==1)break;this._eatBits(1)}this._eatBits(12),this.encoding>0&&(this._eatBits(1),this.nextLine2D=!(1&c))}t[0]>0?this.outputBits=t[this.codingPos=0]:this.outputBits=t[this.codingPos=1],this.row++}var d=void 0;if(this.outputBits>=8)d=1&this.codingPos?0:255,this.outputBits-=8,0===this.outputBits&&t[this.codingPos]<r&&(this.codingPos++,this.outputBits=t[this.codingPos]-t[this.codingPos-1]);else{o=8,d=0;do{this.outputBits>o?(d<<=o,1&this.codingPos||(d|=255>>8-o),this.outputBits-=o,o=0):(d<<=this.outputBits,1&this.codingPos||(d|=255>>8-this.outputBits),o-=this.outputBits,this.outputBits=0,t[this.codingPos]<r?(this.codingPos++,this.outputBits=t[this.codingPos]-t[this.codingPos-1]):o>0&&(d<<=o,o=0))}while(o)}return this.black&&(d^=255),d},_addPixels:function(e,t){var r=this.codingLine,i=this.codingPos;e>r[i]&&(e>this.columns&&((0,a.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&i^t&&++i,r[i]=e),this.codingPos=i},_addPixelsNeg:function(e,t){var r=this.codingLine,i=this.codingPos;if(e>r[i])e>this.columns&&((0,a.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&i^t&&++i,r[i]=e;else if(e<r[i]){for(e<0&&((0,a.info)(\"invalid code\"),this.err=!0,e=0);i>0&&e<r[i-1];)--i;r[i]=e}this.codingPos=i},_findTableCode:function(e,t,r,a){for(var i=a||0,n=e;n<=t;++n){var o=this._lookBits(n);if(-1===o)return[!0,1,!1];if(n<t&&(o<<=t-n),!i||o>=i){var s=r[o-i];if(s[0]===n)return this._eatBits(n),[!0,s[1],!0]}}return[!1,0,!1]},_getTwoDimCode:function(){var t=0,r=void 0;if(this.eoblock){if(t=this._lookBits(7),(r=e[t])&&r[0]>0)return this._eatBits(r[0]),r[1]}else{var i=this._findTableCode(1,7,e);if(i[0]&&i[2])return i[1]}return(0,a.info)(\"Bad two dim code\"),-1},_getWhiteCode:function(){var e=0,i=void 0;if(this.eoblock){if(-1===(e=this._lookBits(12)))return 1;if((i=e>>5==0?t[e]:r[e>>3])[0]>0)return this._eatBits(i[0]),i[1]}else{var n=this._findTableCode(1,9,r);if(n[0])return n[1];if((n=this._findTableCode(11,12,t))[0])return n[1]}return(0,a.info)(\"bad white code\"),this._eatBits(1),1},_getBlackCode:function(){var e=void 0,t=void 0;if(this.eoblock){if(-1===(e=this._lookBits(13)))return 1;if((t=e>>7==0?i[e]:e>>9==0&&e>>7!=0?n[(e>>1)-64]:o[e>>7])[0]>0)return this._eatBits(t[0]),t[1]}else{var r=this._findTableCode(2,6,o);if(r[0])return r[1];if((r=this._findTableCode(7,12,n,64))[0])return r[1];if((r=this._findTableCode(10,13,i))[0])return r[1]}return(0,a.info)(\"bad black code\"),this._eatBits(1),1},_lookBits:function(e){for(var t=void 0;this.inputBits<e;){if(-1===(t=this.source.next()))return 0===this.inputBits?-1:this.inputBuf<<e-this.inputBits&65535>>16-e;this.inputBuf=this.inputBuf<<8|t,this.inputBits+=8}return this.inputBuf>>this.inputBits-e&65535>>16-e},_eatBits:function(e){(this.inputBits-=e)<0&&(this.inputBits=0)}},s}();t.CCITTFaxDecoder=i},\"./node_modules/pdfjs-dist/lib/core/ccitt_stream.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/ccitt_stream.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxStream=void 0;var a=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),i=r(/*! ./ccitt */\"./node_modules/pdfjs-dist/lib/core/ccitt.js\"),n=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),o=function(){function e(e,t,r){this.str=e,this.dict=e.dict,(0,a.isDict)(r)||(r=a.Dict.empty);var o={next:function(){return e.getByte()}};this.ccittFaxDecoder=new i.CCITTFaxDecoder(o,{K:r.get(\"K\"),EndOfLine:r.get(\"EndOfLine\"),EncodedByteAlign:r.get(\"EncodedByteAlign\"),Columns:r.get(\"Columns\"),Rows:r.get(\"Rows\"),EndOfBlock:r.get(\"EndOfBlock\"),BlackIs1:r.get(\"BlackIs1\")}),n.DecodeStream.call(this,t)}return e.prototype=Object.create(n.DecodeStream.prototype),e.prototype.readBlock=function(){for(;!this.eof;){var e=this.ccittFaxDecoder.readNextChar();if(-1===e)return void(this.eof=!0);this.ensureBuffer(this.bufferLength+1),this.buffer[this.bufferLength++]=e}},e}();t.CCITTFaxStream=o},\"./node_modules/pdfjs-dist/lib/core/cff_parser.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/cff_parser.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CFFCompiler=t.CFFPrivateDict=t.CFFTopDict=t.CFFCharset=t.CFFIndex=t.CFFStrings=t.CFFHeader=t.CFF=t.CFFParser=t.CFFStandardStrings=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./charsets */\"./node_modules/pdfjs-dist/lib/core/charsets.js\"),n=r(/*! ./encodings */\"./node_modules/pdfjs-dist/lib/core/encodings.js\"),o=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\",\"001.000\",\"001.001\",\"001.002\",\"001.003\",\"Black\",\"Bold\",\"Book\",\"Light\",\"Medium\",\"Regular\",\"Roman\",\"Semibold\"],s=function(){var e=[null,{id:\"hstem\",min:2,stackClearing:!0,stem:!0},null,{id:\"vstem\",min:2,stackClearing:!0,stem:!0},{id:\"vmoveto\",min:1,stackClearing:!0},{id:\"rlineto\",min:2,resetStack:!0},{id:\"hlineto\",min:1,resetStack:!0},{id:\"vlineto\",min:1,resetStack:!0},{id:\"rrcurveto\",min:6,resetStack:!0},null,{id:\"callsubr\",min:1,undefStack:!0},{id:\"return\",min:0,undefStack:!0},null,null,{id:\"endchar\",min:0,stackClearing:!0},null,null,null,{id:\"hstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"hintmask\",min:0,stackClearing:!0},{id:\"cntrmask\",min:0,stackClearing:!0},{id:\"rmoveto\",min:2,stackClearing:!0},{id:\"hmoveto\",min:1,stackClearing:!0},{id:\"vstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"rcurveline\",min:8,resetStack:!0},{id:\"rlinecurve\",min:8,resetStack:!0},{id:\"vvcurveto\",min:4,resetStack:!0},{id:\"hhcurveto\",min:4,resetStack:!0},null,{id:\"callgsubr\",min:1,undefStack:!0},{id:\"vhcurveto\",min:4,resetStack:!0},{id:\"hvcurveto\",min:4,resetStack:!0}],t=[null,null,null,{id:\"and\",min:2,stackDelta:-1},{id:\"or\",min:2,stackDelta:-1},{id:\"not\",min:1,stackDelta:0},null,null,null,{id:\"abs\",min:1,stackDelta:0},{id:\"add\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]+e[t-1]}},{id:\"sub\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]-e[t-1]}},{id:\"div\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]/e[t-1]}},null,{id:\"neg\",min:1,stackDelta:0,stackFn:function(e,t){e[t-1]=-e[t-1]}},{id:\"eq\",min:2,stackDelta:-1},null,null,{id:\"drop\",min:1,stackDelta:-1},null,{id:\"put\",min:2,stackDelta:-2},{id:\"get\",min:1,stackDelta:0},{id:\"ifelse\",min:4,stackDelta:-3},{id:\"random\",min:0,stackDelta:1},{id:\"mul\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]*e[t-1]}},null,{id:\"sqrt\",min:1,stackDelta:0},{id:\"dup\",min:1,stackDelta:1},{id:\"exch\",min:2,stackDelta:0},{id:\"index\",min:2,stackDelta:0},{id:\"roll\",min:3,stackDelta:-2},null,null,null,{id:\"hflex\",min:7,resetStack:!0},{id:\"flex\",min:13,resetStack:!0},{id:\"hflex1\",min:9,resetStack:!0},{id:\"flex1\",min:11,resetStack:!0}];function r(e,t,r){this.bytes=e.getBytes(),this.properties=t,this.seacAnalysisEnabled=!!r}return r.prototype={parse:function(){var e=this.properties,t=new c;this.cff=t;var r=this.parseHeader(),a=this.parseIndex(r.endPos),i=this.parseIndex(a.endPos),n=this.parseIndex(i.endPos),o=this.parseIndex(n.endPos),s=this.parseDict(i.obj.get(0)),l=this.createDict(f,s,t.strings);t.header=r.obj,t.names=this.parseNameIndex(a.obj),t.strings=this.parseStringIndex(n.obj),t.topDict=l,t.globalSubrIndex=o.obj,this.parsePrivateDict(t.topDict),t.isCIDFont=l.hasName(\"ROS\");var h=l.getByName(\"CharStrings\"),u=this.parseIndex(h).obj,d=l.getByName(\"FontMatrix\");d&&(e.fontMatrix=d);var g,m,p=l.getByName(\"FontBBox\");if(p&&(e.ascent=Math.max(p[3],p[1]),e.descent=Math.min(p[1],p[3]),e.ascentScaled=!0),t.isCIDFont){for(var b=this.parseIndex(l.getByName(\"FDArray\")).obj,v=0,y=b.count;v<y;++v){var w=b.get(v),k=this.createDict(f,this.parseDict(w),t.strings);this.parsePrivateDict(k),t.fdArray.push(k)}m=null,g=this.parseCharsets(l.getByName(\"charset\"),u.count,t.strings,!0),t.fdSelect=this.parseFDSelect(l.getByName(\"FDSelect\"),u.count)}else g=this.parseCharsets(l.getByName(\"charset\"),u.count,t.strings,!1),m=this.parseEncoding(l.getByName(\"Encoding\"),e,t.strings,g.charset);t.charset=g,t.encoding=m;var S=this.parseCharStrings({charStrings:u,localSubrIndex:l.privateDict.subrsIndex,globalSubrIndex:o.obj,fdSelect:t.fdSelect,fdArray:t.fdArray,privateDict:l.privateDict});return t.charStrings=S.charStrings,t.seacs=S.seacs,t.widths=S.widths,t},parseHeader:function(){for(var e=this.bytes,t=e.length,r=0;r<t&&1!==e[r];)++r;if(r>=t)throw new a.FormatError(\"Invalid CFF header\");0!==r&&((0,a.info)(\"cff data is shifted\"),e=e.subarray(r),this.bytes=e);var i=e[0],n=e[1],o=e[2],s=e[3];return{obj:new l(i,n,o,s),endPos:o}},parseDict:function(e){var t=0;function r(){var r=e[t++];return 30===r?function(){var r=\"\",a=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\"E\",\"E-\",null,\"-\"],i=e.length;for(;t<i;){var n=e[t++],o=n>>4,s=15&n;if(15===o)break;if(r+=a[o],15===s)break;r+=a[s]}return parseFloat(r)}():28===r?r=((r=e[t++])<<24|e[t++]<<16)>>16:29===r?r=(r=(r=(r=e[t++])<<8|e[t++])<<8|e[t++])<<8|e[t++]:r>=32&&r<=246?r-139:r>=247&&r<=250?256*(r-247)+e[t++]+108:r>=251&&r<=254?-256*(r-251)-e[t++]-108:((0,a.warn)('CFFParser_parseDict: \"'+r+'\" is a reserved command.'),NaN)}var i=[],n=[];t=0;for(var o=e.length;t<o;){var s=e[t];s<=21?(12===s&&(s=s<<8|e[++t]),n.push([s,i]),i=[],++t):i.push(r())}return n},parseIndex:function(e){var t,r,a=new u,i=this.bytes,n=i[e++]<<8|i[e++],o=[],s=e;if(0!==n){var c=i[e++],l=e+(n+1)*c-1;for(t=0,r=n+1;t<r;++t){for(var h=0,d=0;d<c;++d)h<<=8,h+=i[e++];o.push(l+h)}s=o[n]}for(t=0,r=o.length-1;t<r;++t){var f=o[t],g=o[t+1];a.add(i.subarray(f,g))}return{obj:a,endPos:s}},parseNameIndex:function(e){for(var t=[],r=0,i=e.count;r<i;++r){var n=e.get(r);t.push((0,a.bytesToString)(n))}return t},parseStringIndex:function(e){for(var t=new h,r=0,i=e.count;r<i;++r){var n=e.get(r);t.add((0,a.bytesToString)(n))}return t},createDict:function(e,t,r){for(var a=new e(r),i=0,n=t.length;i<n;++i){var o=t[i],s=o[0],c=o[1];a.setByKey(s,c)}return a},parseCharString:function(r,i,n,o){if(!i||r.callDepth>10)return!1;for(var s=r.stackSize,c=r.stack,l=i.length,h=0;h<l;){var u=i[h++],d=null;if(12===u){var f=i[h++];0===f?(i[h-2]=139,i[h-1]=22,s=0):d=t[f]}else if(28===u)c[s]=(i[h]<<24|i[h+1]<<16)>>16,h+=2,s++;else if(14===u){if(s>=4&&(s-=4,this.seacAnalysisEnabled))return r.seac=c.slice(s,s+4),!1;d=e[u]}else if(u>=32&&u<=246)c[s]=u-139,s++;else if(u>=247&&u<=254)c[s]=u<251?(u-247<<8)+i[h]+108:-(u-251<<8)-i[h]-108,h++,s++;else if(255===u)c[s]=(i[h]<<24|i[h+1]<<16|i[h+2]<<8|i[h+3])/65536,h+=4,s++;else if(19===u||20===u)r.hints+=s>>1,h+=r.hints+7>>3,s%=2,d=e[u];else{if(10===u||29===u){var g;if(!(g=10===u?n:o))return d=e[u],(0,a.warn)(\"Missing subrsIndex for \"+d.id),!1;var m=32768;g.count<1240?m=107:g.count<33900&&(m=1131);var p=c[--s]+m;if(p<0||p>=g.count||isNaN(p))return d=e[u],(0,a.warn)(\"Out of bounds subrIndex for \"+d.id),!1;if(r.stackSize=s,r.callDepth++,!this.parseCharString(r,g.get(p),n,o))return!1;r.callDepth--,s=r.stackSize;continue}if(11===u)return r.stackSize=s,!0;d=e[u]}if(d){if(d.stem&&(r.hints+=s>>1),\"min\"in d&&!r.undefStack&&s<d.min)return(0,a.warn)(\"Not enough parameters for \"+d.id+\"; actual: \"+s+\", expected: \"+d.min),!1;r.firstStackClearing&&d.stackClearing&&(r.firstStackClearing=!1,(s-=d.min)>=2&&d.stem?s%=2:s>1&&(0,a.warn)(\"Found too many parameters for stack-clearing command\"),s>0&&c[s-1]>=0&&(r.width=c[s-1])),\"stackDelta\"in d?(\"stackFn\"in d&&d.stackFn(c,s),s+=d.stackDelta):d.stackClearing?s=0:d.resetStack?(s=0,r.undefStack=!1):d.undefStack&&(s=0,r.undefStack=!0,r.firstStackClearing=!1)}}return r.stackSize=s,!0},parseCharStrings:function(e){for(var t=e.charStrings,r=e.localSubrIndex,i=e.globalSubrIndex,n=e.fdSelect,o=e.fdArray,s=e.privateDict,c=[],l=[],h=t.count,u=0;u<h;u++){var d=t.get(u),f={callDepth:0,stackSize:0,stack:[],undefStack:!0,hints:0,firstStackClearing:!0,seac:null,width:null},g=!0,m=null,p=s;if(n&&o.length){var b=n.getFDIndex(u);-1===b&&((0,a.warn)(\"Glyph index is not in fd select.\"),g=!1),b>=o.length&&((0,a.warn)(\"Invalid fd index for glyph index.\"),g=!1),g&&(m=(p=o[b].privateDict).subrsIndex)}else r&&(m=r);if(g&&(g=this.parseCharString(f,d,m,i)),null!==f.width){var v=p.getByName(\"nominalWidthX\");l[u]=v+f.width}else{var y=p.getByName(\"defaultWidthX\");l[u]=y}null!==f.seac&&(c[u]=f.seac),g||t.set(u,new Uint8Array([14]))}return{charStrings:t,seacs:c,widths:l}},emptyPrivateDictionary:function(e){var t=this.createDict(g,[],e.strings);e.setByKey(18,[0,0]),e.privateDict=t},parsePrivateDict:function(e){if(e.hasName(\"Private\")){var t=e.getByName(\"Private\");if(Array.isArray(t)&&2===t.length){var r=t[0],a=t[1];if(0===r||a>=this.bytes.length)this.emptyPrivateDictionary(e);else{var i=a+r,n=this.bytes.subarray(a,i),o=this.parseDict(n),s=this.createDict(g,o,e.strings);if(e.privateDict=s,s.getByName(\"Subrs\")){var c=s.getByName(\"Subrs\"),l=a+c;if(0===c||l>=this.bytes.length)this.emptyPrivateDictionary(e);else{var h=this.parseIndex(l);s.subrsIndex=h.obj}}}}else e.removeByName(\"Private\")}else this.emptyPrivateDictionary(e)},parseCharsets:function(e,t,r,n){if(0===e)return new p(!0,m.ISO_ADOBE,i.ISOAdobeCharset);if(1===e)return new p(!0,m.EXPERT,i.ExpertCharset);if(2===e)return new p(!0,m.EXPERT_SUBSET,i.ExpertSubsetCharset);var o,s,c,l=this.bytes,h=e,u=l[e++],d=[\".notdef\"];switch(t-=1,u){case 0:for(c=0;c<t;c++)o=l[e++]<<8|l[e++],d.push(n?o:r.get(o));break;case 1:for(;d.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++],c=0;c<=s;c++)d.push(n?o++:r.get(o++));break;case 2:for(;d.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++]<<8|l[e++],c=0;c<=s;c++)d.push(n?o++:r.get(o++));break;default:throw new a.FormatError(\"Unknown charset format\")}var f=e,g=l.subarray(h,f);return new p(!1,u,d,g)},parseEncoding:function(e,t,r,i){var o,s,c,l=Object.create(null),h=this.bytes,u=!1,d=null;if(0===e||1===e){u=!0,o=e;var f=e?n.ExpertEncoding:n.StandardEncoding;for(s=0,c=i.length;s<c;s++){var g=f.indexOf(i[s]);-1!==g&&(l[g]=s)}}else{var m=e;switch(127&(o=h[e++])){case 0:var p=h[e++];for(s=1;s<=p;s++)l[h[e++]]=s;break;case 1:var v=h[e++],y=1;for(s=0;s<v;s++)for(var w=h[e++],k=h[e++],S=w;S<=w+k;S++)l[S]=y++;break;default:throw new a.FormatError(\"Unknown encoding format: \"+o+\" in CFF\")}var x=e;128&o&&(h[m]&=127,function(){var t=h[e++];for(s=0;s<t;s++){var a=h[e++],n=(h[e++]<<8)+(255&h[e++]);l[a]=i.indexOf(r.get(n))}}()),d=h.subarray(m,x)}return new b(u,o&=127,l,d)},parseFDSelect:function(e,t){var r,i,n=e,o=this.bytes,s=o[e++],c=[],l=!1;switch(s){case 0:for(i=0;i<t;++i){var h=o[e++];c.push(h)}r=o.subarray(n,e);break;case 3:var u=o[e++]<<8|o[e++];for(i=0;i<u;++i){var d=o[e++]<<8|o[e++];0===i&&0!==d&&((0,a.warn)(\"parseFDSelect: The first range must have a first GID of 0 -- trying to recover.\"),l=!0,d=0);for(var f=o[e++],g=o[e]<<8|o[e+1],m=d;m<g;++m)c.push(f)}e+=2,r=o.subarray(n,e),l&&(r[3]=r[4]=0);break;default:throw new a.FormatError('parseFDSelect: Unknown format \"'+s+'\".')}if(c.length!==t)throw new a.FormatError(\"parseFDSelect: Invalid font data.\");return new v(c,r)}},r}(),c=function(){this.header=null,this.names=[],this.topDict=null,this.strings=new h,this.globalSubrIndex=null,this.encoding=null,this.charset=null,this.charStrings=null,this.fdArray=[],this.fdSelect=null,this.isCIDFont=!1},l=function(e,t,r,a){this.major=e,this.minor=t,this.hdrSize=r,this.offSize=a},h=function(){function e(){this.strings=[]}return e.prototype={get:function(e){return e>=0&&e<=390?o[e]:e-391<=this.strings.length?this.strings[e-391]:o[0]},add:function(e){this.strings.push(e)},get count(){return this.strings.length}},e}(),u=function(){function e(){this.objects=[],this.length=0}return e.prototype={add:function(e){this.length+=e.length,this.objects.push(e)},set:function(e,t){this.length+=t.length-this.objects[e].length,this.objects[e]=t},get:function(e){return this.objects[e]},get count(){return this.objects.length}},e}(),d=function(){function e(e,t){this.keyToNameMap=e.keyToNameMap,this.nameToKeyMap=e.nameToKeyMap,this.defaults=e.defaults,this.types=e.types,this.opcodes=e.opcodes,this.order=e.order,this.strings=t,this.values=Object.create(null)}return e.prototype={setByKey:function(e,t){if(!(e in this.keyToNameMap))return!1;var r=t.length;if(0===r)return!0;for(var i=0;i<r;i++)if(isNaN(t[i]))return(0,a.warn)('Invalid CFFDict value: \"'+t+'\" for key \"'+e+'\".'),!0;var n=this.types[e];return\"num\"!==n&&\"sid\"!==n&&\"offset\"!==n||(t=t[0]),this.values[e]=t,!0},setByName:function(e,t){if(!(e in this.nameToKeyMap))throw new a.FormatError('Invalid dictionary name \"'+e+'\"');this.values[this.nameToKeyMap[e]]=t},hasName:function(e){return this.nameToKeyMap[e]in this.values},getByName:function(e){if(!(e in this.nameToKeyMap))throw new a.FormatError(\"Invalid dictionary name \"+e+'\"');var t=this.nameToKeyMap[e];return t in this.values?this.values[t]:this.defaults[t]},removeByName:function(e){delete this.values[this.nameToKeyMap[e]]}},e.createTables=function(e){for(var t={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]},r=0,a=e.length;r<a;++r){var i=e[r],n=Array.isArray(i[0])?(i[0][0]<<8)+i[0][1]:i[0];t.keyToNameMap[n]=i[1],t.nameToKeyMap[i[1]]=n,t.types[n]=i[2],t.defaults[n]=i[3],t.opcodes[n]=Array.isArray(i[0])?i[0]:[i[0]],t.order.push(n)}return t},e}(),f=function(){var e=[[[12,30],\"ROS\",[\"sid\",\"sid\",\"num\"],null],[[12,20],\"SyntheticBase\",\"num\",null],[0,\"version\",\"sid\",null],[1,\"Notice\",\"sid\",null],[[12,0],\"Copyright\",\"sid\",null],[2,\"FullName\",\"sid\",null],[3,\"FamilyName\",\"sid\",null],[4,\"Weight\",\"sid\",null],[[12,1],\"isFixedPitch\",\"num\",0],[[12,2],\"ItalicAngle\",\"num\",0],[[12,3],\"UnderlinePosition\",\"num\",-100],[[12,4],\"UnderlineThickness\",\"num\",50],[[12,5],\"PaintType\",\"num\",0],[[12,6],\"CharstringType\",\"num\",2],[[12,7],\"FontMatrix\",[\"num\",\"num\",\"num\",\"num\",\"num\",\"num\"],[.001,0,0,.001,0,0]],[13,\"UniqueID\",\"num\",null],[5,\"FontBBox\",[\"num\",\"num\",\"num\",\"num\"],[0,0,0,0]],[[12,8],\"StrokeWidth\",\"num\",0],[14,\"XUID\",\"array\",null],[15,\"charset\",\"offset\",0],[16,\"Encoding\",\"offset\",0],[17,\"CharStrings\",\"offset\",0],[18,\"Private\",[\"offset\",\"offset\"],null],[[12,21],\"PostScript\",\"sid\",null],[[12,22],\"BaseFontName\",\"sid\",null],[[12,23],\"BaseFontBlend\",\"delta\",null],[[12,31],\"CIDFontVersion\",\"num\",0],[[12,32],\"CIDFontRevision\",\"num\",0],[[12,33],\"CIDFontType\",\"num\",0],[[12,34],\"CIDCount\",\"num\",8720],[[12,35],\"UIDBase\",\"num\",null],[[12,37],\"FDSelect\",\"offset\",null],[[12,36],\"FDArray\",\"offset\",null],[[12,38],\"FontName\",\"sid\",null]],t=null;function r(r){null===t&&(t=d.createTables(e)),d.call(this,t,r),this.privateDict=null}return r.prototype=Object.create(d.prototype),r}(),g=function(){var e=[[6,\"BlueValues\",\"delta\",null],[7,\"OtherBlues\",\"delta\",null],[8,\"FamilyBlues\",\"delta\",null],[9,\"FamilyOtherBlues\",\"delta\",null],[[12,9],\"BlueScale\",\"num\",.039625],[[12,10],\"BlueShift\",\"num\",7],[[12,11],\"BlueFuzz\",\"num\",1],[10,\"StdHW\",\"num\",null],[11,\"StdVW\",\"num\",null],[[12,12],\"StemSnapH\",\"delta\",null],[[12,13],\"StemSnapV\",\"delta\",null],[[12,14],\"ForceBold\",\"num\",0],[[12,17],\"LanguageGroup\",\"num\",0],[[12,18],\"ExpansionFactor\",\"num\",.06],[[12,19],\"initialRandomSeed\",\"num\",0],[20,\"defaultWidthX\",\"num\",0],[21,\"nominalWidthX\",\"num\",0],[19,\"Subrs\",\"offset\",null]],t=null;function r(r){null===t&&(t=d.createTables(e)),d.call(this,t,r),this.subrsIndex=null}return r.prototype=Object.create(d.prototype),r}(),m={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2},p=function(e,t,r,a){this.predefined=e,this.format=t,this.charset=r,this.raw=a},b=function(e,t,r,a){this.predefined=e,this.format=t,this.encoding=r,this.raw=a},v=function(){function e(e,t){this.fdSelect=e,this.raw=t}return e.prototype={getFDIndex:function(e){return e<0||e>=this.fdSelect.length?-1:this.fdSelect[e]}},e}(),y=function(){function e(){this.offsets=Object.create(null)}return e.prototype={isTracking:function(e){return e in this.offsets},track:function(e,t){if(e in this.offsets)throw new a.FormatError(\"Already tracking location of \"+e);this.offsets[e]=t},offset:function(e){for(var t in this.offsets)this.offsets[t]+=e},setEntryLocation:function(e,t,r){if(!(e in this.offsets))throw new a.FormatError(\"Not tracking location of \"+e);for(var i=r.data,n=this.offsets[e],o=0,s=t.length;o<s;++o){var c=5*o+n,l=c+1,h=c+2,u=c+3,d=c+4;if(29!==i[c]||0!==i[l]||0!==i[h]||0!==i[u]||0!==i[d])throw new a.FormatError(\"writing to an offset that is not empty\");var f=t[o];i[c]=29,i[l]=f>>24&255,i[h]=f>>16&255,i[u]=f>>8&255,i[d]=255&f}}},e}(),w=function(){function e(e){this.cff=e}return e.prototype={compile:function(){var e=this.cff,t={data:[],length:0,add:function(e){this.data=this.data.concat(e),this.length=this.data.length}},r=this.compileHeader(e.header);t.add(r);var i=this.compileNameIndex(e.names);if(t.add(i),e.isCIDFont&&e.topDict.hasName(\"FontMatrix\")){var n=e.topDict.getByName(\"FontMatrix\");e.topDict.removeByName(\"FontMatrix\");for(var o=0,s=e.fdArray.length;o<s;o++){var c=e.fdArray[o],l=n.slice(0);c.hasName(\"FontMatrix\")&&(l=a.Util.transform(l,c.getByName(\"FontMatrix\"))),c.setByName(\"FontMatrix\",l)}}var h=this.compileTopDicts([e.topDict],t.length,e.isCIDFont);t.add(h.output);var u=h.trackers[0],d=this.compileStringIndex(e.strings.strings);t.add(d);var f=this.compileIndex(e.globalSubrIndex);if(t.add(f),e.encoding&&e.topDict.hasName(\"Encoding\"))if(e.encoding.predefined)u.setEntryLocation(\"Encoding\",[e.encoding.format],t);else{var g=this.compileEncoding(e.encoding);u.setEntryLocation(\"Encoding\",[t.length],t),t.add(g)}if(e.charset&&e.topDict.hasName(\"charset\"))if(e.charset.predefined)u.setEntryLocation(\"charset\",[e.charset.format],t);else{var m=this.compileCharset(e.charset);u.setEntryLocation(\"charset\",[t.length],t),t.add(m)}var p=this.compileCharStrings(e.charStrings);if(u.setEntryLocation(\"CharStrings\",[t.length],t),t.add(p),e.isCIDFont){u.setEntryLocation(\"FDSelect\",[t.length],t);var b=this.compileFDSelect(e.fdSelect.raw);t.add(b),h=this.compileTopDicts(e.fdArray,t.length,!0),u.setEntryLocation(\"FDArray\",[t.length],t),t.add(h.output);var v=h.trackers;this.compilePrivateDicts(e.fdArray,v,t)}return this.compilePrivateDicts([e.topDict],[u],t),t.add([0]),t.data},encodeNumber:function(e){return parseFloat(e)!==parseInt(e,10)||isNaN(e)?this.encodeFloat(e):this.encodeInteger(e)},encodeFloat:function(e){var t=e.toString(),r=/\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(t);if(r){var a=parseFloat(\"1e\"+((r[2]?+r[2]:0)+r[1].length));t=(Math.round(e*a)/a).toString()}var i,n,o=\"\";for(i=0,n=t.length;i<n;++i){var s=t[i];o+=\"e\"===s?\"-\"===t[++i]?\"c\":\"b\":\".\"===s?\"a\":\"-\"===s?\"e\":s}var c=[30];for(i=0,n=(o+=1&o.length?\"f\":\"ff\").length;i<n;i+=2)c.push(parseInt(o.substr(i,2),16));return c},encodeInteger:function(e){return e>=-107&&e<=107?[e+139]:e>=108&&e<=1131?[247+((e-=108)>>8),255&e]:e>=-1131&&e<=-108?[251+((e=-e-108)>>8),255&e]:e>=-32768&&e<=32767?[28,e>>8&255,255&e]:[29,e>>24&255,e>>16&255,e>>8&255,255&e]},compileHeader:function(e){return[e.major,e.minor,e.hdrSize,e.offSize]},compileNameIndex:function(e){for(var t=new u,r=0,i=e.length;r<i;++r){for(var n=e[r],o=Math.min(n.length,127),s=new Array(o),c=0;c<o;c++){var l=n[c];(l<\"!\"||l>\"~\"||\"[\"===l||\"]\"===l||\"(\"===l||\")\"===l||\"{\"===l||\"}\"===l||\"<\"===l||\">\"===l||\"/\"===l||\"%\"===l)&&(l=\"_\"),s[c]=l}\"\"===(s=s.join(\"\"))&&(s=\"Bad_Font_Name\"),t.add((0,a.stringToBytes)(s))}return this.compileIndex(t)},compileTopDicts:function(e,t,r){for(var a=[],i=new u,n=0,o=e.length;n<o;++n){var s=e[n];r&&(s.removeByName(\"CIDFontVersion\"),s.removeByName(\"CIDFontRevision\"),s.removeByName(\"CIDFontType\"),s.removeByName(\"CIDCount\"),s.removeByName(\"UIDBase\"));var c=new y,l=this.compileDict(s,c);a.push(c),i.add(l),c.offset(t)}return{trackers:a,output:i=this.compileIndex(i,a)}},compilePrivateDicts:function(e,t,r){for(var i=0,n=e.length;i<n;++i){var o=e[i],s=o.privateDict;if(!s||!o.hasName(\"Private\"))throw new a.FormatError(\"There must be a private dictionary.\");var c=new y,l=this.compileDict(s,c),h=r.length;if(c.offset(h),l.length||(h=0),t[i].setEntryLocation(\"Private\",[l.length,h],r),r.add(l),s.subrsIndex&&s.hasName(\"Subrs\")){var u=this.compileIndex(s.subrsIndex);c.setEntryLocation(\"Subrs\",[l.length],r),r.add(u)}}},compileDict:function(e,t){for(var r=[],i=e.order,n=0;n<i.length;++n){var o=i[n];if(o in e.values){var s=e.values[o],c=e.types[o];if(Array.isArray(c)||(c=[c]),Array.isArray(s)||(s=[s]),0!==s.length){for(var l=0,h=c.length;l<h;++l){var u=c[l],d=s[l];switch(u){case\"num\":case\"sid\":r=r.concat(this.encodeNumber(d));break;case\"offset\":var f=e.keyToNameMap[o];t.isTracking(f)||t.track(f,r.length),r=r.concat([29,0,0,0,0]);break;case\"array\":case\"delta\":r=r.concat(this.encodeNumber(d));for(var g=1,m=s.length;g<m;++g)r=r.concat(this.encodeNumber(s[g]));break;default:throw new a.FormatError(\"Unknown data type of \"+u)}}r=r.concat(e.opcodes[o])}}}return r},compileStringIndex:function(e){for(var t=new u,r=0,i=e.length;r<i;++r)t.add((0,a.stringToBytes)(e[r]));return this.compileIndex(t)},compileGlobalSubrIndex:function(){var e=this.cff.globalSubrIndex;this.out.writeByteArray(this.compileIndex(e))},compileCharStrings:function(e){return this.compileIndex(e)},compileCharset:function(e){return this.compileTypedArray(e.raw)},compileEncoding:function(e){return this.compileTypedArray(e.raw)},compileFDSelect:function(e){return this.compileTypedArray(e)},compileTypedArray:function(e){for(var t=[],r=0,a=e.length;r<a;++r)t[r]=e[r];return t},compileIndex:function(e,t){t=t||[];var r=e.objects,a=r.length;if(0===a)return[0,0,0];var i,n,o=[a>>8&255,255&a],s=1;for(i=0;i<a;++i)s+=r[i].length;n=s<256?1:s<65536?2:s<16777216?3:4,o.push(n);var c=1;for(i=0;i<a+1;i++)1===n?o.push(255&c):2===n?o.push(c>>8&255,255&c):3===n?o.push(c>>16&255,c>>8&255,255&c):o.push(c>>>24&255,c>>16&255,c>>8&255,255&c),r[i]&&(c+=r[i].length);for(i=0;i<a;i++){t[i]&&t[i].offset(o.length);for(var l=0,h=r[i].length;l<h;l++)o.push(r[i][l])}return o}},e}();t.CFFStandardStrings=o,t.CFFParser=s,t.CFF=c,t.CFFHeader=l,t.CFFStrings=h,t.CFFIndex=u,t.CFFCharset=p,t.CFFTopDict=f,t.CFFPrivateDict=g,t.CFFCompiler=w},\"./node_modules/pdfjs-dist/lib/core/charsets.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/charsets.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});t.ISOAdobeCharset=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\"],t.ExpertCharset=[\".notdef\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"],t.ExpertSubsetCharset=[\".notdef\",\"space\",\"dollaroldstyle\",\"dollarsuperior\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"hyphensuperior\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"centoldstyle\",\"figuredash\",\"hypheninferior\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\"]},\"./node_modules/pdfjs-dist/lib/core/chunked_stream.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/chunked_stream.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkedStreamManager=t.ChunkedStream=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=function(){function e(e,t,r){this.bytes=new Uint8Array(e),this.start=0,this.pos=0,this.end=e,this.chunkSize=t,this.loadedChunks=[],this.numChunksLoaded=0,this.numChunks=Math.ceil(e/t),this.manager=r,this.progressiveDataLength=0,this.lastSuccessfulEnsureByteChunk=-1}return e.prototype={getMissingChunks:function(){for(var e=[],t=0,r=this.numChunks;t<r;++t)this.loadedChunks[t]||e.push(t);return e},getBaseStreams:function(){return[this]},allChunksLoaded:function(){return this.numChunksLoaded===this.numChunks},onReceiveData:function(e,t){var r=e+t.byteLength;if(e%this.chunkSize!=0)throw new Error(\"Bad begin offset: \"+e);var a=this.bytes.length;if(r%this.chunkSize!=0&&r!==a)throw new Error(\"Bad end offset: \"+r);this.bytes.set(new Uint8Array(t),e);var i,n=this.chunkSize,o=Math.floor(e/n),s=Math.floor((r-1)/n)+1;for(i=o;i<s;++i)this.loadedChunks[i]||(this.loadedChunks[i]=!0,++this.numChunksLoaded)},onReceiveProgressiveData:function(e){var t=this.progressiveDataLength,r=Math.floor(t/this.chunkSize);this.bytes.set(new Uint8Array(e),t),t+=e.byteLength,this.progressiveDataLength=t;var a,i=t>=this.end?this.numChunks:Math.floor(t/this.chunkSize);for(a=r;a<i;++a)this.loadedChunks[a]||(this.loadedChunks[a]=!0,++this.numChunksLoaded)},ensureByte:function(e){var t=Math.floor(e/this.chunkSize);if(t!==this.lastSuccessfulEnsureByteChunk){if(!this.loadedChunks[t])throw new a.MissingDataException(e,e+1);this.lastSuccessfulEnsureByteChunk=t}},ensureRange:function(e,t){if(!(e>=t||t<=this.progressiveDataLength))for(var r=this.chunkSize,i=Math.floor(e/r),n=Math.floor((t-1)/r)+1,o=i;o<n;++o)if(!this.loadedChunks[o])throw new a.MissingDataException(e,t)},nextEmptyChunk:function(e){for(var t,r=this.numChunks,a=0;a<r;++a)if(t=(e+a)%r,!this.loadedChunks[t])return t;return null},hasChunk:function(e){return!!this.loadedChunks[e]},get length(){return this.end-this.start},get isEmpty(){return 0===this.length},getByte:function(){var e=this.pos;return e>=this.end?-1:(this.ensureByte(e),this.bytes[this.pos++])},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t=this.bytes,r=this.pos,a=this.end;if(!e)return this.ensureRange(r,a),t.subarray(r,a);var i=r+e;return i>a&&(i=a),this.ensureRange(r,i),this.pos=i,t.subarray(r,i)},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=this.getBytes(e);return this.pos-=t.length,t},getByteRange:function(e,t){return this.ensureRange(e,t),this.bytes.subarray(e,t)},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=this.start},moveStart:function(){this.start=this.pos},makeSubStream:function(e,t,r){function a(){}this.ensureRange(e,e+t),a.prototype=Object.create(this),a.prototype.getMissingChunks=function(){for(var e=this.chunkSize,t=Math.floor(this.start/e),r=Math.floor((this.end-1)/e)+1,a=[],i=t;i<r;++i)this.loadedChunks[i]||a.push(i);return a};var i=new a;return i.pos=i.start=e,i.end=e+t||this.end,i.dict=r,i}},e}(),n=function(){function e(e,t){var r=t.rangeChunkSize,n=t.length;this.stream=new i(n,r,this),this.length=n,this.chunkSize=r,this.pdfNetworkStream=e,this.url=t.url,this.disableAutoFetch=t.disableAutoFetch,this.msgHandler=t.msgHandler,this.currRequestId=0,this.chunksNeededByRequest=Object.create(null),this.requestsByChunk=Object.create(null),this.promisesByRequest=Object.create(null),this.progressiveDataLength=0,this.aborted=!1,this._loadedStreamCapability=(0,a.createPromiseCapability)()}return e.prototype={onLoadedStream:function(){return this._loadedStreamCapability.promise},sendRequest:function(e,t){var r=this,i=this.pdfNetworkStream.getRangeReader(e,t);i.isStreamingSupported||(i.onProgress=this.onProgress.bind(this));var n=[],o=0,s=this;new Promise(function(e,t){i.read().then(function r(c){try{if(!c.done){var l=c.value;return n.push(l),o+=(0,a.arrayByteLength)(l),i.isStreamingSupported&&s.onProgress({loaded:o}),void i.read().then(r,t)}var h=(0,a.arraysToBytes)(n);n=null,e(h)}catch(e){t(e)}},t)}).then(function(t){r.aborted||r.onReceiveData({chunk:t,begin:e})})},requestAllChunks:function(){var e=this.stream.getMissingChunks();return this._requestChunks(e),this._loadedStreamCapability.promise},_requestChunks:function(e){var t,r,i=this.currRequestId++,n=Object.create(null);for(this.chunksNeededByRequest[i]=n,t=0,r=e.length;t<r;t++)this.stream.hasChunk(e[t])||(n[e[t]]=!0);if((0,a.isEmptyObj)(n))return Promise.resolve();var o=(0,a.createPromiseCapability)();this.promisesByRequest[i]=o;var s=[];for(var c in n)(c|=0)in this.requestsByChunk||(this.requestsByChunk[c]=[],s.push(c)),this.requestsByChunk[c].push(i);if(!s.length)return o.promise;var l=this.groupChunks(s);for(t=0;t<l.length;++t){var h=l[t],u=h.beginChunk*this.chunkSize,d=Math.min(h.endChunk*this.chunkSize,this.length);this.sendRequest(u,d)}return o.promise},getStream:function(){return this.stream},requestRange:function(e,t){t=Math.min(t,this.length);for(var r=this.getBeginChunk(e),a=this.getEndChunk(t),i=[],n=r;n<a;++n)i.push(n);return this._requestChunks(i)},requestRanges:function(e){e=e||[];for(var t=[],r=0;r<e.length;r++)for(var a=this.getBeginChunk(e[r].begin),i=this.getEndChunk(e[r].end),n=a;n<i;++n)t.indexOf(n)<0&&t.push(n);return t.sort(function(e,t){return e-t}),this._requestChunks(t)},groupChunks:function(e){for(var t=[],r=-1,a=-1,i=0;i<e.length;++i){var n=e[i];r<0&&(r=n),a>=0&&a+1!==n&&(t.push({beginChunk:r,endChunk:a+1}),r=n),i+1===e.length&&t.push({beginChunk:r,endChunk:n+1}),a=n}return t},onProgress:function(e){var t=this.stream.numChunksLoaded*this.chunkSize+e.loaded;this.msgHandler.send(\"DocProgress\",{loaded:t,total:this.length})},onReceiveData:function(e){var t=e.chunk,r=void 0===e.begin,i=r?this.progressiveDataLength:e.begin,n=i+t.byteLength,o=Math.floor(i/this.chunkSize),s=n<this.length?Math.floor(n/this.chunkSize):Math.ceil(n/this.chunkSize);r?(this.stream.onReceiveProgressiveData(t),this.progressiveDataLength=n):this.stream.onReceiveData(i,t),this.stream.allChunksLoaded()&&this._loadedStreamCapability.resolve(this.stream);var c,l,h=[];for(t=o;t<s;++t){var u=this.requestsByChunk[t]||[];for(delete this.requestsByChunk[t],c=0;c<u.length;++c){l=u[c];var d=this.chunksNeededByRequest[l];t in d&&delete d[t],(0,a.isEmptyObj)(d)&&h.push(l)}}if(!this.disableAutoFetch&&(0,a.isEmptyObj)(this.requestsByChunk)){var f;if(1===this.stream.numChunksLoaded){var g=this.stream.numChunks-1;this.stream.hasChunk(g)||(f=g)}else f=this.stream.nextEmptyChunk(s);Number.isInteger(f)&&this._requestChunks([f])}for(c=0;c<h.length;++c){l=h[c];var m=this.promisesByRequest[l];delete this.promisesByRequest[l],m.resolve()}this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize,total:this.length})},onError:function(e){this._loadedStreamCapability.reject(e)},getBeginChunk:function(e){return Math.floor(e/this.chunkSize)},getEndChunk:function(e){return Math.floor((e-1)/this.chunkSize)+1},abort:function(){for(var e in this.aborted=!0,this.pdfNetworkStream&&this.pdfNetworkStream.cancelAllRequests(\"abort\"),this.promisesByRequest){this.promisesByRequest[e].reject(new Error(\"Request was aborted\"))}}},e}();t.ChunkedStream=i,t.ChunkedStreamManager=n},\"./node_modules/pdfjs-dist/lib/core/cmap.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/cmap.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CMapFactory=t.IdentityCMap=t.CMap=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),n=r(/*! ./parser */\"./node_modules/pdfjs-dist/lib/core/parser.js\"),o=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),s=[\"Adobe-GB1-UCS2\",\"Adobe-CNS1-UCS2\",\"Adobe-Japan1-UCS2\",\"Adobe-Korea1-UCS2\",\"78-EUC-H\",\"78-EUC-V\",\"78-H\",\"78-RKSJ-H\",\"78-RKSJ-V\",\"78-V\",\"78ms-RKSJ-H\",\"78ms-RKSJ-V\",\"83pv-RKSJ-H\",\"90ms-RKSJ-H\",\"90ms-RKSJ-V\",\"90msp-RKSJ-H\",\"90msp-RKSJ-V\",\"90pv-RKSJ-H\",\"90pv-RKSJ-V\",\"Add-H\",\"Add-RKSJ-H\",\"Add-RKSJ-V\",\"Add-V\",\"Adobe-CNS1-0\",\"Adobe-CNS1-1\",\"Adobe-CNS1-2\",\"Adobe-CNS1-3\",\"Adobe-CNS1-4\",\"Adobe-CNS1-5\",\"Adobe-CNS1-6\",\"Adobe-GB1-0\",\"Adobe-GB1-1\",\"Adobe-GB1-2\",\"Adobe-GB1-3\",\"Adobe-GB1-4\",\"Adobe-GB1-5\",\"Adobe-Japan1-0\",\"Adobe-Japan1-1\",\"Adobe-Japan1-2\",\"Adobe-Japan1-3\",\"Adobe-Japan1-4\",\"Adobe-Japan1-5\",\"Adobe-Japan1-6\",\"Adobe-Korea1-0\",\"Adobe-Korea1-1\",\"Adobe-Korea1-2\",\"B5-H\",\"B5-V\",\"B5pc-H\",\"B5pc-V\",\"CNS-EUC-H\",\"CNS-EUC-V\",\"CNS1-H\",\"CNS1-V\",\"CNS2-H\",\"CNS2-V\",\"ETHK-B5-H\",\"ETHK-B5-V\",\"ETen-B5-H\",\"ETen-B5-V\",\"ETenms-B5-H\",\"ETenms-B5-V\",\"EUC-H\",\"EUC-V\",\"Ext-H\",\"Ext-RKSJ-H\",\"Ext-RKSJ-V\",\"Ext-V\",\"GB-EUC-H\",\"GB-EUC-V\",\"GB-H\",\"GB-V\",\"GBK-EUC-H\",\"GBK-EUC-V\",\"GBK2K-H\",\"GBK2K-V\",\"GBKp-EUC-H\",\"GBKp-EUC-V\",\"GBT-EUC-H\",\"GBT-EUC-V\",\"GBT-H\",\"GBT-V\",\"GBTpc-EUC-H\",\"GBTpc-EUC-V\",\"GBpc-EUC-H\",\"GBpc-EUC-V\",\"H\",\"HKdla-B5-H\",\"HKdla-B5-V\",\"HKdlb-B5-H\",\"HKdlb-B5-V\",\"HKgccs-B5-H\",\"HKgccs-B5-V\",\"HKm314-B5-H\",\"HKm314-B5-V\",\"HKm471-B5-H\",\"HKm471-B5-V\",\"HKscs-B5-H\",\"HKscs-B5-V\",\"Hankaku\",\"Hiragana\",\"KSC-EUC-H\",\"KSC-EUC-V\",\"KSC-H\",\"KSC-Johab-H\",\"KSC-Johab-V\",\"KSC-V\",\"KSCms-UHC-H\",\"KSCms-UHC-HW-H\",\"KSCms-UHC-HW-V\",\"KSCms-UHC-V\",\"KSCpc-EUC-H\",\"KSCpc-EUC-V\",\"Katakana\",\"NWP-H\",\"NWP-V\",\"RKSJ-H\",\"RKSJ-V\",\"Roman\",\"UniCNS-UCS2-H\",\"UniCNS-UCS2-V\",\"UniCNS-UTF16-H\",\"UniCNS-UTF16-V\",\"UniCNS-UTF32-H\",\"UniCNS-UTF32-V\",\"UniCNS-UTF8-H\",\"UniCNS-UTF8-V\",\"UniGB-UCS2-H\",\"UniGB-UCS2-V\",\"UniGB-UTF16-H\",\"UniGB-UTF16-V\",\"UniGB-UTF32-H\",\"UniGB-UTF32-V\",\"UniGB-UTF8-H\",\"UniGB-UTF8-V\",\"UniJIS-UCS2-H\",\"UniJIS-UCS2-HW-H\",\"UniJIS-UCS2-HW-V\",\"UniJIS-UCS2-V\",\"UniJIS-UTF16-H\",\"UniJIS-UTF16-V\",\"UniJIS-UTF32-H\",\"UniJIS-UTF32-V\",\"UniJIS-UTF8-H\",\"UniJIS-UTF8-V\",\"UniJIS2004-UTF16-H\",\"UniJIS2004-UTF16-V\",\"UniJIS2004-UTF32-H\",\"UniJIS2004-UTF32-V\",\"UniJIS2004-UTF8-H\",\"UniJIS2004-UTF8-V\",\"UniJISPro-UCS2-HW-V\",\"UniJISPro-UCS2-V\",\"UniJISPro-UTF8-V\",\"UniJISX0213-UTF32-H\",\"UniJISX0213-UTF32-V\",\"UniJISX02132004-UTF32-H\",\"UniJISX02132004-UTF32-V\",\"UniKS-UCS2-H\",\"UniKS-UCS2-V\",\"UniKS-UTF16-H\",\"UniKS-UTF16-V\",\"UniKS-UTF32-H\",\"UniKS-UTF32-V\",\"UniKS-UTF8-H\",\"UniKS-UTF8-V\",\"V\",\"WP-Symbol\"],c=function(){function e(e){this.codespaceRanges=[[],[],[],[]],this.numCodespaceRanges=0,this._map=[],this.name=\"\",this.vertical=!1,this.useCMap=null,this.builtInCMap=e}return e.prototype={addCodespaceRange:function(e,t,r){this.codespaceRanges[e-1].push(t,r),this.numCodespaceRanges++},mapCidRange:function(e,t,r){for(;e<=t;)this._map[e++]=r++},mapBfRange:function(e,t,r){for(var a=r.length-1;e<=t;)this._map[e++]=r,r=r.substr(0,a)+String.fromCharCode(r.charCodeAt(a)+1)},mapBfRangeToArray:function(e,t,r){for(var a=0,i=r.length;e<=t&&a<i;)this._map[e]=r[a++],++e},mapOne:function(e,t){this._map[e]=t},lookup:function(e){return this._map[e]},contains:function(e){return void 0!==this._map[e]},forEach:function(e){var t=this._map,r=t.length;if(r<=65536)for(var a=0;a<r;a++)void 0!==t[a]&&e(a,t[a]);else for(var i in t)e(i,t[i])},charCodeOf:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var r in t)if(t[r]===e)return 0|r;return-1},getMap:function(){return this._map},readCharCode:function(e,t,r){for(var a=0,i=this.codespaceRanges,n=this.codespaceRanges.length,o=0;o<n;o++){a=(a<<8|e.charCodeAt(t+o))>>>0;for(var s=i[o],c=0,l=s.length;c<l;){var h=s[c++],u=s[c++];if(a>=h&&a<=u)return r.charcode=a,void(r.length=o+1)}}r.charcode=0,r.length=1},get length(){return this._map.length},get isIdentityCMap(){if(\"Identity-H\"!==this.name&&\"Identity-V\"!==this.name)return!1;if(65536!==this._map.length)return!1;for(var e=0;e<65536;e++)if(this._map[e]!==e)return!1;return!0}},e}(),l=function(){function e(e,t){c.call(this),this.vertical=e,this.addCodespaceRange(t,0,65535)}return a.Util.inherit(e,c,{}),e.prototype={addCodespaceRange:c.prototype.addCodespaceRange,mapCidRange:function(e,t,r){(0,a.unreachable)(\"should not call mapCidRange\")},mapBfRange:function(e,t,r){(0,a.unreachable)(\"should not call mapBfRange\")},mapBfRangeToArray:function(e,t,r){(0,a.unreachable)(\"should not call mapBfRangeToArray\")},mapOne:function(e,t){(0,a.unreachable)(\"should not call mapCidOne\")},lookup:function(e){return Number.isInteger(e)&&e<=65535?e:void 0},contains:function(e){return Number.isInteger(e)&&e<=65535},forEach:function(e){for(var t=0;t<=65535;t++)e(t,t)},charCodeOf:function(e){return Number.isInteger(e)&&e<=65535?e:-1},getMap:function(){for(var e=new Array(65536),t=0;t<=65535;t++)e[t]=t;return e},readCharCode:c.prototype.readCharCode,get length(){return 65536},get isIdentityCMap(){(0,a.unreachable)(\"should not access .isIdentityCMap\")}},e}(),h=function(){function e(e,t){for(var r=0,a=0;a<=t;a++)r=r<<8|e[a];return r>>>0}function t(e,t){return 1===t?String.fromCharCode(e[0],e[1]):3===t?String.fromCharCode(e[0],e[1],e[2],e[3]):String.fromCharCode.apply(null,e.subarray(0,t+1))}function r(e,t,r){for(var a=0,i=r;i>=0;i--)a+=e[i]+t[i],e[i]=255&a,a>>=8}function i(e,t){for(var r=1,a=t;a>=0&&r>0;a--)r+=e[a],e[a]=255&r,r>>=8}var n=16,o=19;function s(e){this.buffer=e,this.pos=0,this.end=e.length,this.tmpBuf=new Uint8Array(o)}function c(){}return s.prototype={readByte:function(){return this.pos>=this.end?-1:this.buffer[this.pos++]},readNumber:function(){var e,t=0;do{var r=this.readByte();if(r<0)throw new a.FormatError(\"unexpected EOF in bcmap\");e=!(128&r),t=t<<7|127&r}while(!e);return t},readSigned:function(){var e=this.readNumber();return 1&e?~(e>>>1):e>>>1},readHex:function(e,t){e.set(this.buffer.subarray(this.pos,this.pos+t+1)),this.pos+=t+1},readHexNumber:function(e,t){var r,i=this.tmpBuf,n=0;do{var o=this.readByte();if(o<0)throw new a.FormatError(\"unexpected EOF in bcmap\");r=!(128&o),i[n++]=127&o}while(!r);for(var s=t,c=0,l=0;s>=0;){for(;l<8&&i.length>0;)c=i[--n]<<l|c,l+=7;e[s]=255&c,s--,c>>=8,l-=8}},readHexSigned:function(e,t){this.readHexNumber(e,t);for(var r=1&e[t]?255:0,a=0,i=0;i<=t;i++)a=(1&a)<<8|e[i],e[i]=a>>1^r},readString:function(){for(var e=this.readNumber(),t=\"\",r=0;r<e;r++)t+=String.fromCharCode(this.readNumber());return t}},c.prototype={process:function(a,o,c){return new Promise(function(l,h){var u=new s(a),d=u.readByte();o.vertical=!!(1&d);for(var f,g,m=null,p=new Uint8Array(n),b=new Uint8Array(n),v=new Uint8Array(n),y=new Uint8Array(n),w=new Uint8Array(n);(g=u.readByte())>=0;){var k=g>>5;if(7!==k){var S=!!(16&g),x=15&g;if(x+1>n)throw new Error(\"processBinaryCMap: Invalid dataSize.\");var C,A=u.readNumber();switch(k){case 0:for(u.readHex(p,x),u.readHexNumber(b,x),r(b,p,x),o.addCodespaceRange(x+1,e(p,x),e(b,x)),C=1;C<A;C++)i(b,x),u.readHexNumber(p,x),r(p,b,x),u.readHexNumber(b,x),r(b,p,x),o.addCodespaceRange(x+1,e(p,x),e(b,x));break;case 1:for(u.readHex(p,x),u.readHexNumber(b,x),r(b,p,x),u.readNumber(),C=1;C<A;C++)i(b,x),u.readHexNumber(p,x),r(p,b,x),u.readHexNumber(b,x),r(b,p,x),u.readNumber();break;case 2:for(u.readHex(v,x),f=u.readNumber(),o.mapOne(e(v,x),f),C=1;C<A;C++)i(v,x),S||(u.readHexNumber(w,x),r(v,w,x)),f=u.readSigned()+(f+1),o.mapOne(e(v,x),f);break;case 3:for(u.readHex(p,x),u.readHexNumber(b,x),r(b,p,x),f=u.readNumber(),o.mapCidRange(e(p,x),e(b,x),f),C=1;C<A;C++)i(b,x),S?p.set(b):(u.readHexNumber(p,x),r(p,b,x)),u.readHexNumber(b,x),r(b,p,x),f=u.readNumber(),o.mapCidRange(e(p,x),e(b,x),f);break;case 4:for(u.readHex(v,1),u.readHex(y,x),o.mapOne(e(v,1),t(y,x)),C=1;C<A;C++)i(v,1),S||(u.readHexNumber(w,1),r(v,w,1)),i(y,x),u.readHexSigned(w,x),r(y,w,x),o.mapOne(e(v,1),t(y,x));break;case 5:for(u.readHex(p,1),u.readHexNumber(b,1),r(b,p,1),u.readHex(y,x),o.mapBfRange(e(p,1),e(b,1),t(y,x)),C=1;C<A;C++)i(b,1),S?p.set(b):(u.readHexNumber(p,1),r(p,b,1)),u.readHexNumber(b,1),r(b,p,1),u.readHex(y,x),o.mapBfRange(e(p,1),e(b,1),t(y,x));break;default:return void h(new Error(\"processBinaryCMap: Unknown type: \"+k))}}else switch(31&g){case 0:u.readString();break;case 1:m=u.readString()}}l(m?c(m):o)})}},c}(),u=function(){function e(e){for(var t=0,r=0;r<e.length;r++)t=t<<8|e.charCodeAt(r);return t>>>0}function t(e){if(!(0,a.isString)(e))throw new a.FormatError(\"Malformed CMap: expected string.\")}function r(e){if(!Number.isInteger(e))throw new a.FormatError(\"Malformed CMap: expected int.\")}function u(r,a){for(;;){var n=a.getObj();if((0,i.isEOF)(n))break;if((0,i.isCmd)(n,\"endbfchar\"))return;t(n);var o=e(n);t(n=a.getObj());var s=n;r.mapOne(o,s)}}function d(r,n){for(;;){var o=n.getObj();if((0,i.isEOF)(o))break;if((0,i.isCmd)(o,\"endbfrange\"))return;t(o);var s=e(o);t(o=n.getObj());var c=e(o);if(o=n.getObj(),Number.isInteger(o)||(0,a.isString)(o)){var l=Number.isInteger(o)?String.fromCharCode(o):o;r.mapBfRange(s,c,l)}else{if(!(0,i.isCmd)(o,\"[\"))break;o=n.getObj();for(var h=[];!(0,i.isCmd)(o,\"]\")&&!(0,i.isEOF)(o);)h.push(o),o=n.getObj();r.mapBfRangeToArray(s,c,h)}}throw new a.FormatError(\"Invalid bf range.\")}function f(a,n){for(;;){var o=n.getObj();if((0,i.isEOF)(o))break;if((0,i.isCmd)(o,\"endcidchar\"))return;t(o);var s=e(o);r(o=n.getObj());var c=o;a.mapOne(s,c)}}function g(a,n){for(;;){var o=n.getObj();if((0,i.isEOF)(o))break;if((0,i.isCmd)(o,\"endcidrange\"))return;t(o);var s=e(o);t(o=n.getObj());var c=e(o);r(o=n.getObj());var l=o;a.mapCidRange(s,c,l)}}function m(t,r){for(;;){var n=r.getObj();if((0,i.isEOF)(n))break;if((0,i.isCmd)(n,\"endcodespacerange\"))return;if(!(0,a.isString)(n))break;var o=e(n);if(n=r.getObj(),!(0,a.isString)(n))break;var s=e(n);t.addCodespaceRange(n.length,o,s)}throw new a.FormatError(\"Invalid codespace range.\")}function p(e,t){var r=t.getObj();Number.isInteger(r)&&(e.vertical=!!r)}function b(e,t){var r=t.getObj();(0,i.isName)(r)&&(0,a.isString)(r.name)&&(e.name=r.name)}function v(e,t,r,n){var o,s;e:for(;;)try{var c=t.getObj();if((0,i.isEOF)(c))break;if((0,i.isName)(c))\"WMode\"===c.name?p(e,t):\"CMapName\"===c.name&&b(e,t),o=c;else if((0,i.isCmd)(c))switch(c.cmd){case\"endcmap\":break e;case\"usecmap\":(0,i.isName)(o)&&(s=o.name);break;case\"begincodespacerange\":m(e,t);break;case\"beginbfchar\":u(e,t);break;case\"begincidchar\":f(e,t);break;case\"beginbfrange\":d(e,t);break;case\"begincidrange\":g(e,t)}}catch(e){if(e instanceof a.MissingDataException)throw e;(0,a.warn)(\"Invalid cMap data: \"+e);continue}return!n&&s&&(n=s),n?y(e,r,n):Promise.resolve(e)}function y(e,t,r){return w(r,t).then(function(t){if(e.useCMap=t,0===e.numCodespaceRanges){for(var r=e.useCMap.codespaceRanges,a=0;a<r.length;a++)e.codespaceRanges[a]=r[a].slice();e.numCodespaceRanges=e.useCMap.numCodespaceRanges}return e.useCMap.forEach(function(t,r){e.contains(t)||e.mapOne(t,e.useCMap.lookup(t))}),e})}function w(e,t){return\"Identity-H\"===e?Promise.resolve(new l(!1,2)):\"Identity-V\"===e?Promise.resolve(new l(!0,2)):-1===s.indexOf(e)?Promise.reject(new Error(\"Unknown CMap name: \"+e)):t?t(e).then(function(e){var r=e.cMapData,i=e.compressionType,s=new c(!0);if(i===a.CMapCompressionType.BINARY)return(new h).process(r,s,function(e){return y(s,t,e)});if(i===a.CMapCompressionType.NONE){var l=new n.Lexer(new o.Stream(r));return v(s,l,t,null)}return Promise.reject(new Error(\"TODO: Only BINARY/NONE CMap compression is currently supported.\"))}):Promise.reject(new Error(\"Built-in CMap parameters are not provided.\"))}return{create:function(e){var t=e.encoding,r=e.fetchBuiltInCMap,a=e.useCMap;return(0,i.isName)(t)?w(t.name,r):(0,i.isStream)(t)?v(new c,new n.Lexer(t),r,a).then(function(e){return e.isIdentityCMap?w(e.name,r):e}):Promise.reject(new Error(\"Encoding required.\"))}}}();t.CMap=c,t.IdentityCMap=l,t.CMapFactory=u},\"./node_modules/pdfjs-dist/lib/core/colorspace.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/colorspace.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ColorSpace=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),n=function(){function e(){(0,a.unreachable)(\"should not call ColorSpace constructor\")}return e.prototype={getRgb:function(e,t){var r=new Uint8Array(3);return this.getRgbItem(e,t,r,0),r},getRgbItem:function(e,t,r,i){(0,a.unreachable)(\"Should not call ColorSpace.getRgbItem\")},getRgbBuffer:function(e,t,r,i,n,o,s){(0,a.unreachable)(\"Should not call ColorSpace.getRgbBuffer\")},getOutputLength:function(e,t){(0,a.unreachable)(\"Should not call ColorSpace.getOutputLength\")},isPassthrough:function(e){return!1},fillRgb:function(e,t,r,a,i,n,o,s,c){var l,h,u=t*r,d=null,f=1<<o,g=r!==i||t!==a;if(this.isPassthrough(o))d=s;else if(1===this.numComps&&u>f&&\"DeviceGray\"!==this.name&&\"DeviceRGB\"!==this.name){var m,p=o<=8?new Uint8Array(f):new Uint16Array(f);for(l=0;l<f;l++)p[l]=l;var b,v,y=new Uint8Array(3*f);if(this.getRgbBuffer(p,0,f,y,0,o,0),g)for(d=new Uint8Array(3*u),v=0,l=0;l<u;++l)m=3*s[l],d[v++]=y[m],d[v++]=y[m+1],d[v++]=y[m+2];else for(b=0,l=0;l<u;++l)m=3*s[l],e[b++]=y[m],e[b++]=y[m+1],e[b++]=y[m+2],b+=c}else g?(d=new Uint8Array(3*u),this.getRgbBuffer(s,0,u,d,0,o,0)):this.getRgbBuffer(s,0,a*n,e,0,o,c);if(d)if(g)!function(e,t,r,a,i,n,o,s){o=1!==o?0:o;var c,l,h,u,d=r/i,f=a/n,g=0,m=new Uint16Array(i),p=3*r;for(c=0;c<i;c++)m[c]=3*Math.floor(c*d);for(c=0;c<n;c++)for(h=Math.floor(c*f)*p,l=0;l<i;l++)u=h+m[l],s[g++]=e[u++],s[g++]=e[u++],s[g++]=e[u++],g+=o}(d,0,t,r,a,i,c,e);else for(v=0,b=0,l=0,h=a*n;l<h;l++)e[b++]=d[v++],e[b++]=d[v++],e[b++]=d[v++],b+=c},usesZeroToOneRange:!0},e.parse=function(t,r,a,i){var n=e.parseToIR(t,r,a,i);return e.fromIR(n,i)},e.fromIR=function(t,r){var i,n,l,h=Array.isArray(t)?t[0]:t;switch(h){case\"DeviceGrayCS\":return this.singletons.gray;case\"DeviceRgbCS\":return this.singletons.rgb;case\"DeviceCmykCS\":return this.singletons.cmyk;case\"CalGrayCS\":return i=t[1],n=t[2],l=t[3],new d(i,n,l);case\"CalRGBCS\":i=t[1],n=t[2],l=t[3];var u=t[4];return new f(i,n,l,u);case\"PatternCS\":var m=t[1];return m&&(m=e.fromIR(m,r)),new s(m);case\"IndexedCS\":var p=t[1],b=t[2],v=t[3];return new c(e.fromIR(p,r),b,v);case\"AlternateCS\":var y=t[1],w=t[2],k=t[3];return new o(y,e.fromIR(w,r),r.createFromIR(k));case\"LabCS\":i=t[1],n=t[2];var S=t[3];return new g(i,n,S);default:throw new a.FormatError(\"Unknown colorspace name: \"+h)}},e.parseToIR=function(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments[3];if(t=r.fetchIfRef(t),(0,i.isName)(t))switch(t.name){case\"DeviceGray\":case\"G\":return\"DeviceGrayCS\";case\"DeviceRGB\":case\"RGB\":return\"DeviceRgbCS\";case\"DeviceCMYK\":case\"CMYK\":return\"DeviceCmykCS\";case\"Pattern\":return[\"PatternCS\",null];default:if((0,i.isDict)(n)){var s=n.get(\"ColorSpace\");if((0,i.isDict)(s)){var c=s.get(t.name);if(c){if((0,i.isName)(c))return e.parseToIR(c,r,n,o);t=c;break}}}throw new a.FormatError(\"unrecognized colorspace \"+t.name)}if(Array.isArray(t)){var l,h,u,d,f,g,m=r.fetchIfRef(t[0]).name;switch(m){case\"DeviceGray\":case\"G\":return\"DeviceGrayCS\";case\"DeviceRGB\":case\"RGB\":return\"DeviceRgbCS\";case\"DeviceCMYK\":case\"CMYK\":return\"DeviceCmykCS\";case\"CalGray\":return[\"CalGrayCS\",d=(h=r.fetchIfRef(t[1])).getArray(\"WhitePoint\"),f=h.getArray(\"BlackPoint\"),g=h.get(\"Gamma\")];case\"CalRGB\":d=(h=r.fetchIfRef(t[1])).getArray(\"WhitePoint\"),f=h.getArray(\"BlackPoint\"),g=h.getArray(\"Gamma\");var p=h.getArray(\"Matrix\");return[\"CalRGBCS\",d,f,g,p];case\"ICCBased\":var b=r.fetchIfRef(t[1]),v=b.dict;if(l=v.get(\"N\"),u=v.get(\"Alternate\")){var y=e.parseToIR(u,r,n,o),w=e.fromIR(y,o);if(w.numComps===l)return y;(0,a.warn)(\"ICCBased color space: Ignoring incorrect /Alternate entry.\")}if(1===l)return\"DeviceGrayCS\";if(3===l)return\"DeviceRgbCS\";if(4===l)return\"DeviceCmykCS\";break;case\"Pattern\":var k=t[1]||null;return k&&(k=e.parseToIR(k,r,n,o)),[\"PatternCS\",k];case\"Indexed\":case\"I\":var S=e.parseToIR(t[1],r,n,o),x=r.fetchIfRef(t[2])+1,C=r.fetchIfRef(t[3]);return(0,i.isStream)(C)&&(C=C.getBytes()),[\"IndexedCS\",S,x,C];case\"Separation\":case\"DeviceN\":var A=r.fetchIfRef(t[1]);l=Array.isArray(A)?A.length:1,u=e.parseToIR(t[2],r,n,o);var I=o.createIR(r.fetchIfRef(t[3]));return[\"AlternateCS\",l,u,I];case\"Lab\":d=(h=r.fetchIfRef(t[1])).getArray(\"WhitePoint\"),f=h.getArray(\"BlackPoint\");var F=h.getArray(\"Range\");return[\"LabCS\",d,f,F];default:throw new a.FormatError('unimplemented color space object \"'+m+'\"')}}throw new a.FormatError('unrecognized color space object: \"'+t+'\"')},e.isDefaultDecode=function(e,t){if(!Array.isArray(e))return!0;if(2*t!==e.length)return(0,a.warn)(\"The decode map is not the correct length\"),!0;for(var r=0,i=e.length;r<i;r+=2)if(0!==e[r]||1!==e[r+1])return!1;return!0},e.singletons={get gray(){return(0,a.shadow)(this,\"gray\",new l)},get rgb(){return(0,a.shadow)(this,\"rgb\",new h)},get cmyk(){return(0,a.shadow)(this,\"cmyk\",new u)}},e}(),o=function(){function e(e,t,r){this.name=\"Alternate\",this.numComps=e,this.defaultColor=new Float32Array(e);for(var a=0;a<e;++a)this.defaultColor[a]=1;this.base=t,this.tintFn=r,this.tmpBuf=new Float32Array(t.numComps)}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=this.tmpBuf;this.tintFn(e,t,i,0),this.base.getRgbItem(i,0,r,a)},getRgbBuffer:function(e,t,r,a,i,n,o){var s,c,l=this.tintFn,h=this.base,u=1/((1<<n)-1),d=h.numComps,f=h.usesZeroToOneRange,g=(h.isPassthrough(8)||!f)&&0===o,m=g?i:0,p=g?a:new Uint8Array(d*r),b=this.numComps,v=new Float32Array(b),y=new Float32Array(d);for(s=0;s<r;s++){for(c=0;c<b;c++)v[c]=e[t++]*u;if(l(v,0,y,0),f)for(c=0;c<d;c++)p[m++]=255*y[c];else h.getRgbItem(y,0,p,m),m+=d}g||h.getRgbBuffer(p,0,r,a,i,8,o)},getOutputLength:function(e,t){return this.base.getOutputLength(e*this.base.numComps/this.numComps,t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),s=function(){function e(e){this.name=\"Pattern\",this.base=e}return e.prototype={},e}(),c=function(){function e(e,t,r){this.name=\"Indexed\",this.numComps=1,this.defaultColor=new Uint8Array(this.numComps),this.base=e,this.highVal=t;var n=e.numComps*t;if((0,i.isStream)(r)){this.lookup=new Uint8Array(n);var o=r.getBytes(n);this.lookup.set(o)}else if((0,a.isString)(r)){this.lookup=new Uint8Array(n);for(var s=0;s<n;++s)this.lookup[s]=r.charCodeAt(s)}else{if(!(r instanceof Uint8Array))throw new a.FormatError(\"Unrecognized lookup table: \"+r);this.lookup=r}}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=this.base.numComps,n=e[t]*i;this.base.getRgbBuffer(this.lookup,n,1,r,a,8,0)},getRgbBuffer:function(e,t,r,a,i,n,o){for(var s=this.base,c=s.numComps,l=s.getOutputLength(c,o),h=this.lookup,u=0;u<r;++u){var d=e[t++]*c;s.getRgbBuffer(h,d,1,a,i,8,o),i+=l}},getOutputLength:function(e,t){return this.base.getOutputLength(e*this.base.numComps,t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return!0},usesZeroToOneRange:!0},e}(),l=function(){function e(){this.name=\"DeviceGray\",this.numComps=1,this.defaultColor=new Float32Array(this.numComps)}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=255*e[t]|0;i=i<0?0:i>255?255:i,r[a]=r[a+1]=r[a+2]=i},getRgbBuffer:function(e,t,r,a,i,n,o){for(var s=255/((1<<n)-1),c=t,l=i,h=0;h<r;++h){var u=s*e[c++]|0;a[l++]=u,a[l++]=u,a[l++]=u,l+=o}},getOutputLength:function(e,t){return e*(3+t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),h=function(){function e(){this.name=\"DeviceRGB\",this.numComps=3,this.defaultColor=new Float32Array(this.numComps)}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=255*e[t]|0,n=255*e[t+1]|0,o=255*e[t+2]|0;r[a]=i<0?0:i>255?255:i,r[a+1]=n<0?0:n>255?255:n,r[a+2]=o<0?0:o>255?255:o},getRgbBuffer:function(e,t,r,a,i,n,o){if(8!==n||0!==o)for(var s=255/((1<<n)-1),c=t,l=i,h=0;h<r;++h)a[l++]=s*e[c++]|0,a[l++]=s*e[c++]|0,a[l++]=s*e[c++]|0,l+=o;else a.set(e.subarray(t,t+3*r),i)},getOutputLength:function(e,t){return e*(3+t)/3|0},isPassthrough:function(e){return 8===e},fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),u=function(){function e(e,t,r,a,i){var n=e[t+0]*r,o=e[t+1]*r,s=e[t+2]*r,c=e[t+3]*r,l=n*(-4.387332384609988*n+54.48615194189176*o+18.82290502165302*s+212.25662451639585*c-285.2331026137004)+o*(1.7149763477362134*o-5.6096736904047315*s+-17.873870861415444*c-5.497006427196366)+s*(-2.5217340131683033*s-21.248923337353073*c+17.5119270841813)+c*(-21.86122147463605*c-189.48180835922747)+255|0,h=n*(8.841041422036149*n+60.118027045597366*o+6.871425592049007*s+31.159100130055922*c-79.2970844816548)+o*(-15.310361306967817*o+17.575251261109482*s+131.35250912493976*c-190.9453302588951)+s*(4.444339102852739*s+9.8632861493405*c-24.86741582555878)+c*(-20.737325471181034*c-187.80453709719578)+255|0,u=n*(.8842522430003296*n+8.078677503112928*o+30.89978309703729*s-.23883238689178934*c-14.183576799673286)+o*(10.49593273432072*o+63.02378494754052*s+50.606957656360734*c-112.23884253719248)+s*(.03296041114873217*s+115.60384449646641*c-193.58209356861505)+c*(-22.33816807309886*c-180.12613974708367)+255|0;a[i]=l>255?255:l<0?0:l,a[i+1]=h>255?255:h<0?0:h,a[i+2]=u>255?255:u<0?0:u}function t(){this.name=\"DeviceCMYK\",this.numComps=4,this.defaultColor=new Float32Array(this.numComps),this.defaultColor[3]=1}return t.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(t,r,a,i){e(t,r,1,a,i)},getRgbBuffer:function(t,r,a,i,n,o,s){for(var c=1/((1<<o)-1),l=0;l<a;l++)e(t,r,c,i,n),r+=4,n+=3+s},getOutputLength:function(e,t){return e/4*(3+t)|0},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},t}(),d=function(){function e(e,t,r){if(this.name=\"CalGray\",this.numComps=1,this.defaultColor=new Float32Array(this.numComps),!e)throw new a.FormatError(\"WhitePoint missing - required for color space CalGray\");if(t=t||[0,0,0],r=r||1,this.XW=e[0],this.YW=e[1],this.ZW=e[2],this.XB=t[0],this.YB=t[1],this.ZB=t[2],this.G=r,this.XW<0||this.ZW<0||1!==this.YW)throw new a.FormatError(\"Invalid WhitePoint components for \"+this.name+\", no fallback available\");(this.XB<0||this.YB<0||this.ZB<0)&&((0,a.info)(\"Invalid BlackPoint for \"+this.name+\", falling back to default\"),this.XB=this.YB=this.ZB=0),0===this.XB&&0===this.YB&&0===this.ZB||(0,a.warn)(this.name+\", BlackPoint: XB: \"+this.XB+\", YB: \"+this.YB+\", ZB: \"+this.ZB+\", only default values are supported.\"),this.G<1&&((0,a.info)(\"Invalid Gamma: \"+this.G+\" for \"+this.name+\", falling back to default\"),this.G=1)}function t(e,t,r,a,i,n){var o=t[r]*n,s=Math.pow(o,e.G),c=e.YW*s,l=0|Math.max(295.8*Math.pow(c,.3333333333333333)-40.8,0);a[i]=l,a[i+1]=l,a[i+2]=l}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,r,a,i){t(this,e,r,a,i,1)},getRgbBuffer:function(e,r,a,i,n,o,s){for(var c=1/((1<<o)-1),l=0;l<a;++l)t(this,e,r,i,n,c),r+=1,n+=3+s},getOutputLength:function(e,t){return e*(3+t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),f=function(){var e=new Float32Array([.8951,.2664,-.1614,-.7502,1.7135,.0367,.0389,-.0685,1.0296]),t=new Float32Array([.9869929,-.1470543,.1599627,.4323053,.5183603,.0492912,-.0085287,.0400428,.9684867]),r=new Float32Array([3.2404542,-1.5371385,-.4985314,-.969266,1.8760108,.041556,.0556434,-.2040259,1.0572252]),i=new Float32Array([1,1,1]),o=new Float32Array(3),s=new Float32Array(3),c=new Float32Array(3),l=Math.pow(24/116,3)/8;function h(e,t,r,i){if(this.name=\"CalRGB\",this.numComps=3,this.defaultColor=new Float32Array(this.numComps),!e)throw new a.FormatError(\"WhitePoint missing - required for color space CalRGB\");t=t||new Float32Array(3),r=r||new Float32Array([1,1,1]),i=i||new Float32Array([1,0,0,0,1,0,0,0,1]);var n=e[0],o=e[1],s=e[2];this.whitePoint=e;var c=t[0],l=t[1],h=t[2];if(this.blackPoint=t,this.GR=r[0],this.GG=r[1],this.GB=r[2],this.MXA=i[0],this.MYA=i[1],this.MZA=i[2],this.MXB=i[3],this.MYB=i[4],this.MZB=i[5],this.MXC=i[6],this.MYC=i[7],this.MZC=i[8],n<0||s<0||1!==o)throw new a.FormatError(\"Invalid WhitePoint components for \"+this.name+\", no fallback available\");(c<0||l<0||h<0)&&((0,a.info)(\"Invalid BlackPoint for \"+this.name+\" [\"+c+\", \"+l+\", \"+h+\"], falling back to default\"),this.blackPoint=new Float32Array(3)),(this.GR<0||this.GG<0||this.GB<0)&&((0,a.info)(\"Invalid Gamma [\"+this.GR+\", \"+this.GG+\", \"+this.GB+\"] for \"+this.name+\", falling back to default\"),this.GR=this.GG=this.GB=1),(this.MXA<0||this.MYA<0||this.MZA<0||this.MXB<0||this.MYB<0||this.MZB<0||this.MXC<0||this.MYC<0||this.MZC<0)&&((0,a.info)(\"Invalid Matrix for \"+this.name+\" [\"+this.MXA+\", \"+this.MYA+\", \"+this.MZA+this.MXB+\", \"+this.MYB+\", \"+this.MZB+this.MXC+\", \"+this.MYC+\", \"+this.MZC+\"], falling back to default\"),this.MXA=this.MYB=this.MZC=1,this.MXB=this.MYA=this.MZA=this.MXC=this.MYC=this.MZB=0)}function u(e,t,r){r[0]=e[0]*t[0]+e[1]*t[1]+e[2]*t[2],r[1]=e[3]*t[0]+e[4]*t[1]+e[5]*t[2],r[2]=e[6]*t[0]+e[7]*t[1]+e[8]*t[2]}function d(e){return f(0,1,e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function f(e,t,r){return Math.max(e,Math.min(t,r))}function g(e){return e<0?-g(-e):e>8?Math.pow((e+16)/116,3):e*l}function m(a,n,l,h,m,p){var b=f(0,1,n[l]*p),v=f(0,1,n[l+1]*p),y=f(0,1,n[l+2]*p),w=Math.pow(b,a.GR),k=Math.pow(v,a.GG),S=Math.pow(y,a.GB),x=a.MXA*w+a.MXB*k+a.MXC*S,C=a.MYA*w+a.MYB*k+a.MYC*S,A=a.MZA*w+a.MZB*k+a.MZC*S,I=s;I[0]=x,I[1]=C,I[2]=A;var F=c;!function(r,a,i){if(1===r[0]&&1===r[2])return i[0]=a[0],i[1]=a[1],void(i[2]=a[2]);var n=i;u(e,a,n);var s=o;!function(e,t,r){r[0]=1*t[0]/e[0],r[1]=1*t[1]/e[1],r[2]=1*t[2]/e[2]}(r,n,s),u(t,s,i)}(a.whitePoint,I,F);var O=s;!function(e,t,r){if(0===e[0]&&0===e[1]&&0===e[2])return r[0]=t[0],r[1]=t[1],void(r[2]=t[2]);var a=g(0),i=(1-a)/(1-g(e[0])),n=1-i,o=(1-a)/(1-g(e[1])),s=1-o,c=(1-a)/(1-g(e[2])),l=1-c;r[0]=t[0]*i+n,r[1]=t[1]*o+s,r[2]=t[2]*c+l}(a.blackPoint,F,O);var B=c;!function(r,a,i){var n=i;u(e,a,n);var s=o;!function(e,t,r){r[0]=.95047*t[0]/e[0],r[1]=1*t[1]/e[1],r[2]=1.08883*t[2]/e[2]}(r,n,s),u(t,s,i)}(i,O,B);var P=s;u(r,B,P);var T=d(P[0]),E=d(P[1]),M=d(P[2]);h[m]=Math.round(255*T),h[m+1]=Math.round(255*E),h[m+2]=Math.round(255*M)}return h.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){m(this,e,t,r,a,1)},getRgbBuffer:function(e,t,r,a,i,n,o){for(var s=1/((1<<n)-1),c=0;c<r;++c)m(this,e,t,a,i,s),t+=3,i+=3+o},getOutputLength:function(e,t){return e*(3+t)/3|0},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},h}(),g=function(){function e(e,t,r){if(this.name=\"Lab\",this.numComps=3,this.defaultColor=new Float32Array(this.numComps),!e)throw new a.FormatError(\"WhitePoint missing - required for color space Lab\");if(t=t||[0,0,0],r=r||[-100,100,-100,100],this.XW=e[0],this.YW=e[1],this.ZW=e[2],this.amin=r[0],this.amax=r[1],this.bmin=r[2],this.bmax=r[3],this.XB=t[0],this.YB=t[1],this.ZB=t[2],this.XW<0||this.ZW<0||1!==this.YW)throw new a.FormatError(\"Invalid WhitePoint components, no fallback available\");(this.XB<0||this.YB<0||this.ZB<0)&&((0,a.info)(\"Invalid BlackPoint, falling back to default\"),this.XB=this.YB=this.ZB=0),(this.amin>this.amax||this.bmin>this.bmax)&&((0,a.info)(\"Invalid Range, falling back to defaults\"),this.amin=-100,this.amax=100,this.bmin=-100,this.bmax=100)}function t(e){return e>=6/29?e*e*e:108/841*(e-4/29)}function r(e,t,r,a){return r+e*(a-r)/t}function i(e,a,i,n,o,s){var c=a[i],l=a[i+1],h=a[i+2];!1!==n&&(c=r(c,n,0,100),l=r(l,n,e.amin,e.amax),h=r(h,n,e.bmin,e.bmax));var u,d,f,g=(c+16)/116,m=g+(l=l>e.amax?e.amax:l<e.amin?e.amin:l)/500,p=g-(h=h>e.bmax?e.bmax:h<e.bmin?e.bmin:h)/200,b=e.XW*t(m),v=e.YW*t(g),y=e.ZW*t(p);e.ZW<1?(u=3.1339*b+-1.617*v+-.4906*y,d=-.9785*b+1.916*v+.0333*y,f=.072*b+-.229*v+1.4057*y):(u=3.2406*b+-1.5372*v+-.4986*y,d=-.9689*b+1.8758*v+.0415*y,f=.0557*b+-.204*v+1.057*y),o[s]=u<=0?0:u>=1?255:255*Math.sqrt(u)|0,o[s+1]=d<=0?0:d>=1?255:255*Math.sqrt(d)|0,o[s+2]=f<=0?0:f>=1?255:255*Math.sqrt(f)|0}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){i(this,e,t,!1,r,a)},getRgbBuffer:function(e,t,r,a,n,o,s){for(var c=(1<<o)-1,l=0;l<r;l++)i(this,e,t,c,a,n),t+=3,n+=3+s},getOutputLength:function(e,t){return e*(3+t)/3|0},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return!0},usesZeroToOneRange:!1},e}();t.ColorSpace=n},\"./node_modules/pdfjs-dist/lib/core/crypto.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/crypto.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.calculateSHA512=t.calculateSHA384=t.calculateSHA256=t.calculateMD5=t.PDF20=t.PDF17=t.CipherTransformFactory=t.ARCFourCipher=t.AES256Cipher=t.AES128Cipher=void 0;var a,i,n=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),o=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),s=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),c=function(){function e(e){this.a=0,this.b=0;var t,r,a=new Uint8Array(256),i=0,n=e.length;for(t=0;t<256;++t)a[t]=t;for(t=0;t<256;++t)i=i+(r=a[t])+e[t%n]&255,a[t]=a[i],a[i]=r;this.s=a}return e.prototype={encryptBlock:function(e){var t,r,a,i=e.length,n=this.a,o=this.b,s=this.s,c=new Uint8Array(i);for(t=0;t<i;++t)a=s[o=o+(r=s[n=n+1&255])&255],s[n]=a,s[o]=r,c[t]=e[t]^s[r+a&255];return this.a=n,this.b=o,c}},e.prototype.decryptBlock=e.prototype.encryptBlock,e}(),l=(a=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),i=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]),function(e,t,r){var n,o,s,c=1732584193,l=-271733879,h=-1732584194,u=271733878,d=r+72&-64,f=new Uint8Array(d);for(n=0;n<r;++n)f[n]=e[t++];for(f[n++]=128,s=d-8;n<s;)f[n++]=0;f[n++]=r<<3&255,f[n++]=r>>5&255,f[n++]=r>>13&255,f[n++]=r>>21&255,f[n++]=r>>>29&255,f[n++]=0,f[n++]=0,f[n++]=0;var g=new Int32Array(16);for(n=0;n<d;){for(o=0;o<16;++o,n+=4)g[o]=f[n]|f[n+1]<<8|f[n+2]<<16|f[n+3]<<24;var m,p,b=c,v=l,y=h,w=u;for(o=0;o<64;++o){o<16?(m=v&y|~v&w,p=o):o<32?(m=w&v|~w&y,p=5*o+1&15):o<48?(m=v^y^w,p=3*o+5&15):(m=y^(v|~w),p=7*o&15);var k=w,S=b+m+i[o]+g[p]|0,x=a[o];w=y,y=v,v=v+(S<<x|S>>>32-x)|0,b=k}c=c+b|0,l=l+v|0,h=h+y|0,u=u+w|0}return new Uint8Array([255&c,c>>8&255,c>>16&255,c>>>24&255,255&l,l>>8&255,l>>16&255,l>>>24&255,255&h,h>>8&255,h>>16&255,h>>>24&255,255&u,u>>8&255,u>>16&255,u>>>24&255])}),h=function(){function e(e,t){this.high=0|e,this.low=0|t}return e.prototype={and:function(e){this.high&=e.high,this.low&=e.low},xor:function(e){this.high^=e.high,this.low^=e.low},or:function(e){this.high|=e.high,this.low|=e.low},shiftRight:function(e){e>=32?(this.low=this.high>>>e-32|0,this.high=0):(this.low=this.low>>>e|this.high<<32-e,this.high=this.high>>>e|0)},shiftLeft:function(e){e>=32?(this.high=this.low<<e-32,this.low=0):(this.high=this.high<<e|this.low>>>32-e,this.low=this.low<<e)},rotateRight:function(e){var t,r;32&e?(r=this.low,t=this.high):(t=this.low,r=this.high),e&=31,this.low=t>>>e|r<<32-e,this.high=r>>>e|t<<32-e},not:function(){this.high=~this.high,this.low=~this.low},add:function(e){var t=(this.low>>>0)+(e.low>>>0),r=(this.high>>>0)+(e.high>>>0);t>4294967295&&(r+=1),this.low=0|t,this.high=0|r},copyTo:function(e,t){e[t]=this.high>>>24&255,e[t+1]=this.high>>16&255,e[t+2]=this.high>>8&255,e[t+3]=255&this.high,e[t+4]=this.low>>>24&255,e[t+5]=this.low>>16&255,e[t+6]=this.low>>8&255,e[t+7]=255&this.low},assign:function(e){this.high=e.high,this.low=e.low}},e}(),u=function(){function e(e,t){return e>>>t|e<<32-t}function t(e,t,r){return e&t^~e&r}function r(e,t,r){return e&t^e&r^t&r}function a(t){return e(t,2)^e(t,13)^e(t,22)}function i(t){return e(t,6)^e(t,11)^e(t,25)}function n(t){return e(t,7)^e(t,18)^t>>>3}var o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];return function(s,c,l){var h,u,d,f=1779033703,g=3144134277,m=1013904242,p=2773480762,b=1359893119,v=2600822924,y=528734635,w=1541459225,k=64*Math.ceil((l+9)/64),S=new Uint8Array(k);for(h=0;h<l;++h)S[h]=s[c++];for(S[h++]=128,d=k-8;h<d;)S[h++]=0;S[h++]=0,S[h++]=0,S[h++]=0,S[h++]=l>>>29&255,S[h++]=l>>21&255,S[h++]=l>>13&255,S[h++]=l>>5&255,S[h++]=l<<3&255;var x,C=new Uint32Array(64);for(h=0;h<k;){for(u=0;u<16;++u)C[u]=S[h]<<24|S[h+1]<<16|S[h+2]<<8|S[h+3],h+=4;for(u=16;u<64;++u)C[u]=0|(e(x=C[u-2],17)^e(x,19)^x>>>10)+C[u-7]+n(C[u-15])+C[u-16];var A,I,F=f,O=g,B=m,P=p,T=b,E=v,M=y,D=w;for(u=0;u<64;++u)A=D+i(T)+t(T,E,M)+o[u]+C[u],I=a(F)+r(F,O,B),D=M,M=E,E=T,T=P+A|0,P=B,B=O,O=F,F=A+I|0;f=f+F|0,g=g+O|0,m=m+B|0,p=p+P|0,b=b+T|0,v=v+E|0,y=y+M|0,w=w+D|0}return new Uint8Array([f>>24&255,f>>16&255,f>>8&255,255&f,g>>24&255,g>>16&255,g>>8&255,255&g,m>>24&255,m>>16&255,m>>8&255,255&m,p>>24&255,p>>16&255,p>>8&255,255&p,b>>24&255,b>>16&255,b>>8&255,255&b,v>>24&255,v>>16&255,v>>8&255,255&v,y>>24&255,y>>16&255,y>>8&255,255&y,w>>24&255,w>>16&255,w>>8&255,255&w])}}(),d=function(){function e(e,t,r,a,i){e.assign(t),e.and(r),i.assign(t),i.not(),i.and(a),e.xor(i)}function t(e,t,r,a,i){e.assign(t),e.and(r),i.assign(t),i.and(a),e.xor(i),i.assign(r),i.and(a),e.xor(i)}function r(e,t,r){e.assign(t),e.rotateRight(28),r.assign(t),r.rotateRight(34),e.xor(r),r.assign(t),r.rotateRight(39),e.xor(r)}function a(e,t,r){e.assign(t),e.rotateRight(14),r.assign(t),r.rotateRight(18),e.xor(r),r.assign(t),r.rotateRight(41),e.xor(r)}function i(e,t,r){e.assign(t),e.rotateRight(1),r.assign(t),r.rotateRight(8),e.xor(r),r.assign(t),r.shiftRight(7),e.xor(r)}function n(e,t,r){e.assign(t),e.rotateRight(19),r.assign(t),r.rotateRight(61),e.xor(r),r.assign(t),r.shiftRight(6),e.xor(r)}var o=[new h(1116352408,3609767458),new h(1899447441,602891725),new h(3049323471,3964484399),new h(3921009573,2173295548),new h(961987163,4081628472),new h(1508970993,3053834265),new h(2453635748,2937671579),new h(2870763221,3664609560),new h(3624381080,2734883394),new h(310598401,1164996542),new h(607225278,1323610764),new h(1426881987,3590304994),new h(1925078388,4068182383),new h(2162078206,991336113),new h(2614888103,633803317),new h(3248222580,3479774868),new h(3835390401,2666613458),new h(4022224774,944711139),new h(264347078,2341262773),new h(604807628,2007800933),new h(770255983,1495990901),new h(1249150122,1856431235),new h(1555081692,3175218132),new h(1996064986,2198950837),new h(2554220882,3999719339),new h(2821834349,766784016),new h(2952996808,2566594879),new h(3210313671,3203337956),new h(3336571891,1034457026),new h(3584528711,2466948901),new h(113926993,3758326383),new h(338241895,168717936),new h(666307205,1188179964),new h(773529912,1546045734),new h(1294757372,1522805485),new h(1396182291,2643833823),new h(1695183700,2343527390),new h(1986661051,1014477480),new h(2177026350,1206759142),new h(2456956037,344077627),new h(2730485921,1290863460),new h(2820302411,3158454273),new h(3259730800,3505952657),new h(3345764771,106217008),new h(3516065817,3606008344),new h(3600352804,1432725776),new h(4094571909,1467031594),new h(275423344,851169720),new h(430227734,3100823752),new h(506948616,1363258195),new h(659060556,3750685593),new h(883997877,3785050280),new h(958139571,3318307427),new h(1322822218,3812723403),new h(1537002063,2003034995),new h(1747873779,3602036899),new h(1955562222,1575990012),new h(2024104815,1125592928),new h(2227730452,2716904306),new h(2361852424,442776044),new h(2428436474,593698344),new h(2756734187,3733110249),new h(3204031479,2999351573),new h(3329325298,3815920427),new h(3391569614,3928383900),new h(3515267271,566280711),new h(3940187606,3454069534),new h(4118630271,4000239992),new h(116418474,1914138554),new h(174292421,2731055270),new h(289380356,3203993006),new h(460393269,320620315),new h(685471733,587496836),new h(852142971,1086792851),new h(1017036298,365543100),new h(1126000580,2618297676),new h(1288033470,3409855158),new h(1501505948,4234509866),new h(1607167915,987167468),new h(1816402316,1246189591)];return function(s,c,l,u){var d,f,g,m,p,b,v,y;(u=!!u)?(d=new h(3418070365,3238371032),f=new h(1654270250,914150663),g=new h(2438529370,812702999),m=new h(355462360,4144912697),p=new h(1731405415,4290775857),b=new h(2394180231,1750603025),v=new h(3675008525,1694076839),y=new h(1203062813,3204075428)):(d=new h(1779033703,4089235720),f=new h(3144134277,2227873595),g=new h(1013904242,4271175723),m=new h(2773480762,1595750129),p=new h(1359893119,2917565137),b=new h(2600822924,725511199),v=new h(528734635,4215389547),y=new h(1541459225,327033209));var w,k,S,x=128*Math.ceil((l+17)/128),C=new Uint8Array(x);for(w=0;w<l;++w)C[w]=s[c++];for(C[w++]=128,S=x-16;w<S;)C[w++]=0;C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=0,C[w++]=l>>>29&255,C[w++]=l>>21&255,C[w++]=l>>13&255,C[w++]=l>>5&255,C[w++]=l<<3&255;var A=new Array(80);for(w=0;w<80;w++)A[w]=new h(0,0);var I,F,O=new h(0,0),B=new h(0,0),P=new h(0,0),T=new h(0,0),E=new h(0,0),M=new h(0,0),D=new h(0,0),R=new h(0,0),L=new h(0,0),N=new h(0,0),j=new h(0,0),U=new h(0,0);for(w=0;w<x;){for(k=0;k<16;++k)A[k].high=C[w]<<24|C[w+1]<<16|C[w+2]<<8|C[w+3],A[k].low=C[w+4]<<24|C[w+5]<<16|C[w+6]<<8|C[w+7],w+=8;for(k=16;k<80;++k)n(I=A[k],A[k-2],U),I.add(A[k-7]),i(j,A[k-15],U),I.add(j),I.add(A[k-16]);for(O.assign(d),B.assign(f),P.assign(g),T.assign(m),E.assign(p),M.assign(b),D.assign(v),R.assign(y),k=0;k<80;++k)L.assign(R),a(j,E,U),L.add(j),e(j,E,M,D,U),L.add(j),L.add(o[k]),L.add(A[k]),r(N,O,U),t(j,O,B,P,U),N.add(j),I=R,R=D,D=M,M=E,T.add(L),E=T,T=P,P=B,B=O,I.assign(L),I.add(N),O=I;d.add(O),f.add(B),g.add(P),m.add(T),p.add(E),b.add(M),v.add(D),y.add(R)}return u?(F=new Uint8Array(48),d.copyTo(F,0),f.copyTo(F,8),g.copyTo(F,16),m.copyTo(F,24),p.copyTo(F,32),b.copyTo(F,40)):(F=new Uint8Array(64),d.copyTo(F,0),f.copyTo(F,8),g.copyTo(F,16),m.copyTo(F,24),p.copyTo(F,32),b.copyTo(F,40),v.copyTo(F,48),y.copyTo(F,56)),F}}(),f=function(e,t,r){return d(e,t,r,!0)},g=function(){function e(){}return e.prototype={decryptBlock:function(e){return e}},e}(),m=function(){for(var e=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),t=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),r=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),a=new Uint8Array(256),i=0;i<256;i++)a[i]=i<128?i<<1:i<<1^27;var n=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]);function o(e,t){var a,i,o,s,c,l,h=new Uint8Array(16);for(h.set(e),i=0,o=160;i<16;++i,++o)h[i]^=t[o];for(a=9;a>=1;--a){for(s=h[13],h[13]=h[9],h[9]=h[5],h[5]=h[1],h[1]=s,s=h[14],c=h[10],h[14]=h[6],h[10]=h[2],h[6]=s,h[2]=c,s=h[15],c=h[11],l=h[7],h[15]=h[3],h[11]=s,h[7]=c,h[3]=l,i=0;i<16;++i)h[i]=r[h[i]];for(i=0,o=16*a;i<16;++i,++o)h[i]^=t[o];for(i=0;i<16;i+=4){var u=n[h[i]],d=n[h[i+1]],f=n[h[i+2]],g=n[h[i+3]];s=u^d>>>8^d<<24^f>>>16^f<<16^g>>>24^g<<8,h[i]=s>>>24&255,h[i+1]=s>>16&255,h[i+2]=s>>8&255,h[i+3]=255&s}}for(s=h[13],h[13]=h[9],h[9]=h[5],h[5]=h[1],h[1]=s,s=h[14],c=h[10],h[14]=h[6],h[10]=h[2],h[6]=s,h[2]=c,s=h[15],c=h[11],l=h[7],h[15]=h[3],h[11]=s,h[7]=c,h[3]=l,i=0;i<16;++i)h[i]=r[h[i]],h[i]^=t[i];return h}function s(e,r){var n,o,s,c,l,h=new Uint8Array(16);for(h.set(e),c=0;c<16;++c)h[c]^=r[c];for(i=1;i<10;i++){for(c=0;c<16;++c)h[c]=t[h[c]];for(s=h[1],h[1]=h[5],h[5]=h[9],h[9]=h[13],h[13]=s,s=h[2],o=h[6],h[2]=h[10],h[6]=h[14],h[10]=s,h[14]=o,s=h[3],o=h[7],n=h[11],h[3]=h[15],h[7]=s,h[11]=o,h[15]=n,c=0;c<16;c+=4){var u=h[c+0],d=h[c+1],f=h[c+2],g=h[c+3];n=u^d^f^g,h[c+0]^=n^a[u^d],h[c+1]^=n^a[d^f],h[c+2]^=n^a[f^g],h[c+3]^=n^a[g^u]}for(c=0,l=16*i;c<16;++c,++l)h[c]^=r[l]}for(c=0;c<16;++c)h[c]=t[h[c]];for(s=h[1],h[1]=h[5],h[5]=h[9],h[9]=h[13],h[13]=s,s=h[2],o=h[6],h[2]=h[10],h[6]=h[14],h[10]=s,h[14]=o,s=h[3],o=h[7],n=h[11],h[3]=h[15],h[7]=s,h[11]=o,h[15]=n,c=0,l=160;c<16;++c,++l)h[c]^=r[l];return h}function c(r){this.key=function(r){var a=new Uint8Array(176);a.set(r);for(var i=16,n=1;i<176;++n){var o=a[i-3],s=a[i-2],c=a[i-1],l=a[i-4];o=t[o],s=t[s],c=t[c],l=t[l],o^=e[n];for(var h=0;h<4;++h)a[i]=o^=a[i-16],a[++i]=s^=a[i-16],a[++i]=c^=a[i-16],a[++i]=l^=a[i-16],i++}return a}(r),this.buffer=new Uint8Array(16),this.bufferPosition=0}function l(e,t){var r,a,i,n=e.length,s=this.buffer,c=this.bufferPosition,l=[],h=this.iv;for(r=0;r<n;++r)if(s[c]=e[r],!(++c<16)){var u=o(s,this.key);for(a=0;a<16;++a)u[a]^=h[a];h=s,l.push(u),s=new Uint8Array(16),c=0}if(this.buffer=s,this.bufferLength=c,this.iv=h,0===l.length)return new Uint8Array([]);var d=16*l.length;if(t){var f=l[l.length-1],g=f[15];if(g<=16){for(r=15,i=16-g;r>=i;--r)if(f[r]!==g){g=0;break}d-=g,l[l.length-1]=f.subarray(0,16-g)}}var m=new Uint8Array(d);for(r=0,a=0,i=l.length;r<i;++r,a+=16)m.set(l[r],a);return m}return c.prototype={decryptBlock:function(e,t){var r,a=e.length,i=this.buffer,n=this.bufferPosition;for(r=0;n<16&&r<a;++r,++n)i[n]=e[r];return n<16?(this.bufferLength=n,new Uint8Array([])):(this.iv=i,this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=l,this.decryptBlock(e.subarray(16),t))},encrypt:function(e,t){var r,a,i,n=e.length,o=this.buffer,c=this.bufferPosition,l=[];for(t||(t=new Uint8Array(16)),r=0;r<n;++r)if(o[c]=e[r],!(++c<16)){for(a=0;a<16;++a)o[a]^=t[a];var h=s(o,this.key);t=h,l.push(h),o=new Uint8Array(16),c=0}if(this.buffer=o,this.bufferLength=c,this.iv=t,0===l.length)return new Uint8Array([]);var u=16*l.length,d=new Uint8Array(u);for(r=0,a=0,i=l.length;r<i;++r,a+=16)d.set(l[r],a);return d}},c}(),p=function(){for(var e=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),t=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),r=new Uint8Array(256),a=0;a<256;a++)r[a]=a<128?a<<1:a<<1^27;var i=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]);function n(e,r){var a,n,o,s,c,l,h=new Uint8Array(16);for(h.set(e),n=0,o=224;n<16;++n,++o)h[n]^=r[o];for(a=13;a>=1;--a){for(s=h[13],h[13]=h[9],h[9]=h[5],h[5]=h[1],h[1]=s,s=h[14],c=h[10],h[14]=h[6],h[10]=h[2],h[6]=s,h[2]=c,s=h[15],c=h[11],l=h[7],h[15]=h[3],h[11]=s,h[7]=c,h[3]=l,n=0;n<16;++n)h[n]=t[h[n]];for(n=0,o=16*a;n<16;++n,++o)h[n]^=r[o];for(n=0;n<16;n+=4){var u=i[h[n]],d=i[h[n+1]],f=i[h[n+2]],g=i[h[n+3]];s=u^d>>>8^d<<24^f>>>16^f<<16^g>>>24^g<<8,h[n]=s>>>24&255,h[n+1]=s>>16&255,h[n+2]=s>>8&255,h[n+3]=255&s}}for(s=h[13],h[13]=h[9],h[9]=h[5],h[5]=h[1],h[1]=s,s=h[14],c=h[10],h[14]=h[6],h[10]=h[2],h[6]=s,h[2]=c,s=h[15],c=h[11],l=h[7],h[15]=h[3],h[11]=s,h[7]=c,h[3]=l,n=0;n<16;++n)h[n]=t[h[n]],h[n]^=r[n];return h}function o(t,a){var i,n,o,s,c,l,h=new Uint8Array(16);for(h.set(t),c=0;c<16;++c)h[c]^=a[c];for(s=1;s<14;s++){for(c=0;c<16;++c)h[c]=e[h[c]];for(o=h[1],h[1]=h[5],h[5]=h[9],h[9]=h[13],h[13]=o,o=h[2],n=h[6],h[2]=h[10],h[6]=h[14],h[10]=o,h[14]=n,o=h[3],n=h[7],i=h[11],h[3]=h[15],h[7]=o,h[11]=n,h[15]=i,c=0;c<16;c+=4){var u=h[c+0],d=h[c+1],f=h[c+2],g=h[c+3];i=u^d^f^g,h[c+0]^=i^r[u^d],h[c+1]^=i^r[d^f],h[c+2]^=i^r[f^g],h[c+3]^=i^r[g^u]}for(c=0,l=16*s;c<16;++c,++l)h[c]^=a[l]}for(c=0;c<16;++c)h[c]=e[h[c]];for(o=h[1],h[1]=h[5],h[5]=h[9],h[9]=h[13],h[13]=o,o=h[2],n=h[6],h[2]=h[10],h[6]=h[14],h[10]=o,h[14]=n,o=h[3],n=h[7],i=h[11],h[3]=h[15],h[7]=o,h[11]=n,h[15]=i,c=0,l=224;c<16;++c,++l)h[c]^=a[l];return h}function s(t){this.key=function(t){var r=new Uint8Array(240),a=1;r.set(t);for(var i=32,n=1;i<240;++n){var o,s,c,l;i%32==16?(o=e[o],s=e[s],c=e[c],l=e[l]):i%32==0&&(o=r[i-3],s=r[i-2],c=r[i-1],l=r[i-4],o=e[o],s=e[s],c=e[c],l=e[l],o^=a,(a<<=1)>=256&&(a=255&(27^a)));for(var h=0;h<4;++h)r[i]=o^=r[i-32],r[++i]=s^=r[i-32],r[++i]=c^=r[i-32],r[++i]=l^=r[i-32],i++}return r}(t),this.buffer=new Uint8Array(16),this.bufferPosition=0}function c(e,t){var r,a,i,o=e.length,s=this.buffer,c=this.bufferPosition,l=[],h=this.iv;for(r=0;r<o;++r)if(s[c]=e[r],!(++c<16)){var u=n(s,this.key);for(a=0;a<16;++a)u[a]^=h[a];h=s,l.push(u),s=new Uint8Array(16),c=0}if(this.buffer=s,this.bufferLength=c,this.iv=h,0===l.length)return new Uint8Array([]);var d=16*l.length;if(t){var f=l[l.length-1],g=f[15];if(g<=16){for(r=15,i=16-g;r>=i;--r)if(f[r]!==g){g=0;break}d-=g,l[l.length-1]=f.subarray(0,16-g)}}var m=new Uint8Array(d);for(r=0,a=0,i=l.length;r<i;++r,a+=16)m.set(l[r],a);return m}return s.prototype={decryptBlock:function(e,t,r){var a,i=e.length,n=this.buffer,o=this.bufferPosition;if(r)this.iv=r;else{for(a=0;o<16&&a<i;++a,++o)n[o]=e[a];if(o<16)return this.bufferLength=o,new Uint8Array([]);this.iv=n,e=e.subarray(16)}return this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=c,this.decryptBlock(e,t)},encrypt:function(e,t){var r,a,i,n=e.length,s=this.buffer,c=this.bufferPosition,l=[];for(t||(t=new Uint8Array(16)),r=0;r<n;++r)if(s[c]=e[r],!(++c<16)){for(a=0;a<16;++a)s[a]^=t[a];var h=o(s,this.key);this.iv=h,l.push(h),s=new Uint8Array(16),c=0}if(this.buffer=s,this.bufferLength=c,this.iv=t,0===l.length)return new Uint8Array([]);var u=16*l.length,d=new Uint8Array(u);for(r=0,a=0,i=l.length;r<i;++r,a+=16)d.set(l[r],a);return d}},s}(),b=function(){function e(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function t(){}return t.prototype={checkOwnerPassword:function(t,r,a,i){var n=new Uint8Array(t.length+56);return n.set(t,0),n.set(r,t.length),n.set(a,t.length+r.length),e(u(n,0,n.length),i)},checkUserPassword:function(t,r,a){var i=new Uint8Array(t.length+8);return i.set(t,0),i.set(r,t.length),e(u(i,0,i.length),a)},getOwnerKey:function(e,t,r,a){var i=new Uint8Array(e.length+56);i.set(e,0),i.set(t,e.length),i.set(r,e.length+t.length);var n=u(i,0,i.length);return new p(n).decryptBlock(a,!1,new Uint8Array(16))},getUserKey:function(e,t,r){var a=new Uint8Array(e.length+8);a.set(e,0),a.set(t,e.length);var i=u(a,0,a.length);return new p(i).decryptBlock(r,!1,new Uint8Array(16))}},t}(),v=function(){function e(e,t){var r=new Uint8Array(e.length+t.length);return r.set(e,0),r.set(t,e.length),r}function t(t,r,a){for(var i=u(r,0,r.length).subarray(0,32),n=[0],o=0;o<64||n[n.length-1]>o-32;){var s=t.length+i.length+a.length,c=new Uint8Array(64*s),l=e(t,i);l=e(l,a);for(var h=0,g=0;h<64;h++,g+=s)c.set(l,g);n=new m(i.subarray(0,16)).encrypt(c,i.subarray(16,32));for(var p=0,b=0;b<16;b++)p*=1,p%=3,p+=(n[b]>>>0)%3,p%=3;0===p?i=u(n,0,n.length):1===p?i=f(n,0,n.length):2===p&&(i=d(n,0,n.length)),o++}return i.subarray(0,32)}function r(){}function a(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}return r.prototype={hash:function(e,r,a){return t(e,r,a)},checkOwnerPassword:function(e,r,i,n){var o=new Uint8Array(e.length+56);return o.set(e,0),o.set(r,e.length),o.set(i,e.length+r.length),a(t(e,o,i),n)},checkUserPassword:function(e,r,i){var n=new Uint8Array(e.length+8);return n.set(e,0),n.set(r,e.length),a(t(e,n,[]),i)},getOwnerKey:function(e,r,a,i){var n=new Uint8Array(e.length+56);n.set(e,0),n.set(r,e.length),n.set(a,e.length+r.length);var o=t(e,n,a);return new p(o).decryptBlock(i,!1,new Uint8Array(16))},getUserKey:function(e,r,a){var i=new Uint8Array(e.length+8);i.set(e,0),i.set(r,e.length);var n=t(e,i,[]);return new p(n).decryptBlock(a,!1,new Uint8Array(16))}},r}(),y=function(){function e(e,t){this.StringCipherConstructor=e,this.StreamCipherConstructor=t}return e.prototype={createStream:function(e,t){var r=new this.StreamCipherConstructor;return new s.DecryptStream(e,t,function(e,t){return r.decryptBlock(e,t)})},decryptString:function(e){var t=new this.StringCipherConstructor,r=(0,n.stringToBytes)(e);return r=t.decryptBlock(r,!0),(0,n.bytesToString)(r)}},e}(),w=function(){var e=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]);function t(t,r,a,i,n,o,s,h){var u,d,f=40+a.length+t.length,g=new Uint8Array(f),m=0;if(r)for(d=Math.min(32,r.length);m<d;++m)g[m]=r[m];for(u=0;m<32;)g[m++]=e[u++];for(u=0,d=a.length;u<d;++u)g[m++]=a[u];for(g[m++]=255&n,g[m++]=n>>8&255,g[m++]=n>>16&255,g[m++]=n>>>24&255,u=0,d=t.length;u<d;++u)g[m++]=t[u];o>=4&&!h&&(g[m++]=255,g[m++]=255,g[m++]=255,g[m++]=255);var p=l(g,0,m),b=s>>3;if(o>=3)for(u=0;u<50;++u)p=l(p,0,b);var v,y=p.subarray(0,b);if(o>=3){for(m=0;m<32;++m)g[m]=e[m];for(u=0,d=t.length;u<d;++u)g[m++]=t[u];v=new c(y).encryptBlock(l(g,0,m)),d=y.length;var w,k=new Uint8Array(d);for(u=1;u<=19;++u){for(w=0;w<d;++w)k[w]=y[w]^u;v=new c(k).encryptBlock(v)}for(u=0,d=v.length;u<d;++u)if(i[u]!==v[u])return null}else for(u=0,d=(v=new c(y).encryptBlock(e)).length;u<d;++u)if(i[u]!==v[u])return null;return y}var r=o.Name.get(\"Identity\");function a(a,i,s){var h=a.get(\"Filter\");if(!(0,o.isName)(h,\"Standard\"))throw new n.FormatError(\"unknown encryption method\");this.dict=a;var u=a.get(\"V\");if(!Number.isInteger(u)||1!==u&&2!==u&&4!==u&&5!==u)throw new n.FormatError(\"unsupported encryption algorithm\");this.algorithm=u;var d=a.get(\"Length\");if(!d)if(u<=3)d=40;else{var f=a.get(\"CF\"),g=a.get(\"StmF\");if((0,o.isDict)(f)&&(0,o.isName)(g)){f.suppressEncryption=!0;var m=f.get(g.name);(d=m&&m.get(\"Length\")||128)<40&&(d<<=3)}}if(!Number.isInteger(d)||d<40||d%8!=0)throw new n.FormatError(\"invalid key length\");var p=(0,n.stringToBytes)(a.get(\"O\")).subarray(0,32),y=(0,n.stringToBytes)(a.get(\"U\")).subarray(0,32),w=a.get(\"P\"),k=a.get(\"R\"),S=(4===u||5===u)&&!1!==a.get(\"EncryptMetadata\");this.encryptMetadata=S;var x,C,A=(0,n.stringToBytes)(i);if(s){if(6===k)try{s=(0,n.utf8StringToString)(s)}catch(e){(0,n.warn)(\"CipherTransformFactory: Unable to convert UTF8 encoded password.\")}x=(0,n.stringToBytes)(s)}if(5!==u)C=t(A,x,p,y,w,k,d,S);else{var I=(0,n.stringToBytes)(a.get(\"O\")).subarray(32,40),F=(0,n.stringToBytes)(a.get(\"O\")).subarray(40,48),O=(0,n.stringToBytes)(a.get(\"U\")).subarray(0,48),B=(0,n.stringToBytes)(a.get(\"U\")).subarray(32,40),P=(0,n.stringToBytes)(a.get(\"U\")).subarray(40,48),T=(0,n.stringToBytes)(a.get(\"OE\")),E=(0,n.stringToBytes)(a.get(\"UE\"));(0,n.stringToBytes)(a.get(\"Perms\"));C=function(e,t,r,a,i,n,o,s,c,l,h,u){if(t){var d=Math.min(127,t.length);t=t.subarray(0,d)}else t=[];var f;return(f=6===e?new v:new b).checkUserPassword(t,s,o)?f.getUserKey(t,c,h):t.length&&f.checkOwnerPassword(t,a,n,r)?f.getOwnerKey(t,i,n,l):null}(k,x,p,I,F,O,y,B,P,T,E)}if(!C&&!s)throw new n.PasswordException(\"No password given\",n.PasswordResponses.NEED_PASSWORD);if(!C&&s&&(C=t(A,function(t,r,a,i){var n,o,s=new Uint8Array(32),h=0;for(o=Math.min(32,t.length);h<o;++h)s[h]=t[h];for(n=0;h<32;)s[h++]=e[n++];var u,d=l(s,0,h),f=i>>3;if(a>=3)for(n=0;n<50;++n)d=l(d,0,d.length);if(a>=3){u=r;var g,m=new Uint8Array(f);for(n=19;n>=0;n--){for(g=0;g<f;++g)m[g]=d[g]^n;u=new c(m).encryptBlock(u)}}else u=new c(d.subarray(0,f)).encryptBlock(r);return u}(x,p,k,d),p,y,w,k,d,S)),!C)throw new n.PasswordException(\"Incorrect Password\",n.PasswordResponses.INCORRECT_PASSWORD);if(this.encryptionKey=C,u>=4){var M=a.get(\"CF\");(0,o.isDict)(M)&&(M.suppressEncryption=!0),this.cf=M,this.stmf=a.get(\"StmF\")||r,this.strf=a.get(\"StrF\")||r,this.eff=a.get(\"EFF\")||this.stmf}}function i(e,t,r,a){var i,n,o=new Uint8Array(r.length+9);for(i=0,n=r.length;i<n;++i)o[i]=r[i];return o[i++]=255&e,o[i++]=e>>8&255,o[i++]=e>>16&255,o[i++]=255&t,o[i++]=t>>8&255,a&&(o[i++]=115,o[i++]=65,o[i++]=108,o[i++]=84),l(o,0,i).subarray(0,Math.min(r.length+5,16))}function s(e,t,r,a,s){if(!(0,o.isName)(t))throw new n.FormatError(\"Invalid crypt filter name.\");var l,h=e.get(t.name);if(null!=h&&(l=h.get(\"CFM\")),!l||\"None\"===l.name)return function(){return new g};if(\"V2\"===l.name)return function(){return new c(i(r,a,s,!1))};if(\"AESV2\"===l.name)return function(){return new m(i(r,a,s,!0))};if(\"AESV3\"===l.name)return function(){return new p(s)};throw new n.FormatError(\"Unknown crypto method\")}return a.prototype={createCipherTransform:function(e,t){if(4===this.algorithm||5===this.algorithm)return new y(s(this.cf,this.stmf,e,t,this.encryptionKey),s(this.cf,this.strf,e,t,this.encryptionKey));var r=i(e,t,this.encryptionKey,!1),a=function(){return new c(r)};return new y(a,a)}},a}();t.AES128Cipher=m,t.AES256Cipher=p,t.ARCFourCipher=c,t.CipherTransformFactory=w,t.PDF17=b,t.PDF20=v,t.calculateMD5=l,t.calculateSHA256=u,t.calculateSHA384=f,t.calculateSHA512=d},\"./node_modules/pdfjs-dist/lib/core/document.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/document.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFDocument=t.Page=void 0;var a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},i=r(/*! ./obj */\"./node_modules/pdfjs-dist/lib/core/obj.js\"),n=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),o=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),s=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),c=r(/*! ./annotation */\"./node_modules/pdfjs-dist/lib/core/annotation.js\"),l=r(/*! ./crypto */\"./node_modules/pdfjs-dist/lib/core/crypto.js\"),h=r(/*! ./parser */\"./node_modules/pdfjs-dist/lib/core/parser.js\"),u=r(/*! ./operator_list */\"./node_modules/pdfjs-dist/lib/core/operator_list.js\"),d=r(/*! ./evaluator */\"./node_modules/pdfjs-dist/lib/core/evaluator.js\"),f=r(/*! ./function */\"./node_modules/pdfjs-dist/lib/core/function.js\"),g=function(){var e=[0,0,612,792];function t(e,t){return\"display\"===t&&e.viewable||\"print\"===t&&e.printable}function r(e){var t=e.pdfManager,r=e.xref,a=e.pageIndex,i=e.pageDict,n=e.ref,o=e.fontCache,s=e.builtInCMapCache,c=e.pdfFunctionFactory;this.pdfManager=t,this.pageIndex=a,this.pageDict=i,this.xref=r,this.ref=n,this.fontCache=o,this.builtInCMapCache=s,this.pdfFunctionFactory=c,this.evaluatorOptions=t.evaluatorOptions,this.resourcesPromise=null;var l=\"p\"+this.pageIndex+\"_\",h={obj:0};this.idFactory={createObjId:function(){return l+ ++h.obj}}}return r.prototype={getPageProp:function(e){return this.pageDict.get(e)},getInheritedPageProp:function(e,t){var r=this.pageDict,a=null,i=0;for(t=t||!1;r;){var s=t?r.getArray(e):r.get(e);if(void 0!==s&&(a||(a=[]),a.push(s)),++i>100)return(0,o.warn)(\"getInheritedPageProp: maximum loop count exceeded for \"+e),a?a[0]:void 0;r=r.get(\"Parent\")}if(a)return 1!==a.length&&(0,n.isDict)(a[0])?n.Dict.merge(this.xref,a):a[0]},get content(){return this.getPageProp(\"Contents\")},get resources(){return(0,o.shadow)(this,\"resources\",this.getInheritedPageProp(\"Resources\")||n.Dict.empty)},get mediaBox(){var t=this.getInheritedPageProp(\"MediaBox\",!0);return Array.isArray(t)&&4===t.length?(0,o.shadow)(this,\"mediaBox\",t):(0,o.shadow)(this,\"mediaBox\",e)},get cropBox(){var e=this.getInheritedPageProp(\"CropBox\",!0);return Array.isArray(e)&&4===e.length?(0,o.shadow)(this,\"cropBox\",e):(0,o.shadow)(this,\"cropBox\",this.mediaBox)},get userUnit(){var e=this.getPageProp(\"UserUnit\");return(!(0,o.isNum)(e)||e<=0)&&(e=1),(0,o.shadow)(this,\"userUnit\",e)},get view(){var e=this.mediaBox,t=this.cropBox;if(e===t)return(0,o.shadow)(this,\"view\",e);var r=o.Util.intersect(t,e);return(0,o.shadow)(this,\"view\",r||e)},get rotate(){var e=this.getInheritedPageProp(\"Rotate\")||0;return e%90!=0?e=0:e>=360?e%=360:e<0&&(e=(e%360+360)%360),(0,o.shadow)(this,\"rotate\",e)},getContentStream:function(){var e,t=this.content;if(Array.isArray(t)){var r,a=this.xref,i=t.length,o=[];for(r=0;r<i;++r)o.push(a.fetchIfRef(t[r]));e=new s.StreamsSequenceStream(o)}else e=(0,n.isStream)(t)?t:new s.NullStream;return e},loadResources:function(e){var t=this;return this.resourcesPromise||(this.resourcesPromise=this.pdfManager.ensure(this,\"resources\")),this.resourcesPromise.then(function(){return new i.ObjectLoader(t.resources,e,t.xref).load()})},getOperatorList:function(e){var r=this,i=e.handler,n=e.task,s=e.intent,c=e.renderInteractiveForms,l=this.pdfManager.ensure(this,\"getContentStream\"),h=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),f=new d.PartialEvaluator({pdfManager:this.pdfManager,xref:this.xref,handler:i,pageIndex:this.pageIndex,idFactory:this.idFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,options:this.evaluatorOptions,pdfFunctionFactory:this.pdfFunctionFactory}),g=Promise.all([l,h]).then(function(e){var t=a(e,1)[0],o=new u.OperatorList(s,i,r.pageIndex);return i.send(\"StartRenderPage\",{transparency:f.hasBlendModes(r.resources),pageIndex:r.pageIndex,intent:s}),f.getOperatorList({stream:t,task:n,resources:r.resources,operatorList:o}).then(function(){return o})}),m=this.pdfManager.ensure(this,\"annotations\");return Promise.all([g,m]).then(function(e){var r=a(e,2),i=r[0],l=r[1];if(0===l.length)return i.flush(!0),i;var h,u,d=[];for(h=0,u=l.length;h<u;h++)t(l[h],s)&&d.push(l[h].getOperatorList(f,n,c));return Promise.all(d).then(function(e){for(i.addOp(o.OPS.beginAnnotations,[]),h=0,u=e.length;h<u;h++)i.addOpList(e[h]);return i.addOp(o.OPS.endAnnotations,[]),i.flush(!0),i})})},extractTextContent:function(e){var t=this,r=e.handler,i=e.task,n=e.normalizeWhitespace,o=e.sink,s=e.combineTextItems,c=this.pdfManager.ensure(this,\"getContentStream\"),l=this.loadResources([\"ExtGState\",\"XObject\",\"Font\"]);return Promise.all([c,l]).then(function(e){var c=a(e,1)[0];return new d.PartialEvaluator({pdfManager:t.pdfManager,xref:t.xref,handler:r,pageIndex:t.pageIndex,idFactory:t.idFactory,fontCache:t.fontCache,builtInCMapCache:t.builtInCMapCache,options:t.evaluatorOptions,pdfFunctionFactory:t.pdfFunctionFactory}).getTextContent({stream:c,task:i,resources:t.resources,normalizeWhitespace:n,combineTextItems:s,sink:o})})},getAnnotationsData:function(e){for(var r=this.annotations,a=[],i=0,n=r.length;i<n;++i)e&&!t(r[i],e)||a.push(r[i].data);return a},get annotations(){for(var e=[],t=this.getInheritedPageProp(\"Annots\")||[],r=0,a=t.length;r<a;++r){var i=t[r],n=c.AnnotationFactory.create(this.xref,i,this.pdfManager,this.idFactory);n&&e.push(n)}return(0,o.shadow)(this,\"annotations\",e)}},r}(),m=function(){function e(e,t){var r;if((0,n.isStream)(t))r=t;else{if(!(0,o.isArrayBuffer)(t))throw new Error(\"PDFDocument: Unknown argument type\");r=new s.Stream(t)}if(r.length<=0)throw new Error(\"PDFDocument: stream must have data\");this.pdfManager=e,this.stream=r,this.xref=new i.XRef(r,e);var a=e.evaluatorOptions;this.pdfFunctionFactory=new f.PDFFunctionFactory({xref:this.xref,isEvalSupported:a.isEvalSupported})}function t(e,t,r,a){var i=e.pos,n=e.end,o=[];i+r>n&&(r=n-i);for(var s=0;s<r;++s)o.push(String.fromCharCode(e.getByte()));var c=o.join(\"\");e.pos=i;var l=a?c.lastIndexOf(t):c.indexOf(t);return-1!==l&&(e.pos+=l,!0)}var r={get entries(){return(0,o.shadow)(this,\"entries\",{Title:o.isString,Author:o.isString,Subject:o.isString,Keywords:o.isString,Creator:o.isString,Producer:o.isString,CreationDate:o.isString,ModDate:o.isString,Trapped:n.isName})}};return e.prototype={parse:function(e){this.setup(e);var t=this.catalog.catDict.get(\"Version\");(0,n.isName)(t)&&(this.pdfFormatVersion=t.name);try{if(this.acroForm=this.catalog.catDict.get(\"AcroForm\"),this.acroForm){this.xfa=this.acroForm.get(\"XFA\");var r=this.acroForm.get(\"Fields\");r&&Array.isArray(r)&&0!==r.length||this.xfa||(this.acroForm=null)}}catch(e){if(e instanceof o.MissingDataException)throw e;(0,o.info)(\"Something wrong with AcroForm entry\"),this.acroForm=null}},get linearization(){var e=null;if(this.stream.length)try{e=h.Linearization.create(this.stream)}catch(e){if(e instanceof o.MissingDataException)throw e;(0,o.info)(e)}return(0,o.shadow)(this,\"linearization\",e)},get startXRef(){var e=this.stream,r=0;if(this.linearization)e.reset(),t(e,\"endobj\",1024)&&(r=e.pos+6);else{for(var a=!1,i=e.end;!a&&i>0;)(i-=1024-\"startxref\".length)<0&&(i=0),e.pos=i,a=t(e,\"startxref\",1024,!0);if(a){var n;e.skip(9);do{n=e.getByte()}while((0,o.isSpace)(n));for(var s=\"\";n>=32&&n<=57;)s+=String.fromCharCode(n),n=e.getByte();r=parseInt(s,10),isNaN(r)&&(r=0)}}return(0,o.shadow)(this,\"startXRef\",r)},get mainXRefEntriesOffset(){var e=0,t=this.linearization;return t&&(e=t.mainXRefEntriesOffset),(0,o.shadow)(this,\"mainXRefEntriesOffset\",e)},checkHeader:function(){var e=this.stream;if(e.reset(),t(e,\"%PDF-\",1024)){e.moveStart();for(var r,a=\"\";(r=e.getByte())>32&&!(a.length>=12);)a+=String.fromCharCode(r);this.pdfFormatVersion||(this.pdfFormatVersion=a.substring(5))}else;},parseStartXRef:function(){var e=this.startXRef;this.xref.setStartXRef(e)},setup:function(e){var t=this;this.xref.parse(e);var r={createPage:function(e,r,a,i,n){return new g({pdfManager:t.pdfManager,xref:t.xref,pageIndex:e,pageDict:r,ref:a,fontCache:i,builtInCMapCache:n,pdfFunctionFactory:t.pdfFunctionFactory})}};this.catalog=new i.Catalog(this.pdfManager,this.xref,r)},get numPages(){var e=this.linearization,t=e?e.numPages:this.catalog.numPages;return(0,o.shadow)(this,\"numPages\",t)},get documentInfo(){var e,t={PDFFormatVersion:this.pdfFormatVersion,IsAcroFormPresent:!!this.acroForm,IsXFAPresent:!!this.xfa};try{e=this.xref.trailer.get(\"Info\")}catch(e){if(e instanceof o.MissingDataException)throw e;(0,o.info)(\"The document information dictionary is invalid.\")}if(e){var a=r.entries;for(var i in a)if(e.has(i)){var n=e.get(i);a[i](n)?t[i]=\"string\"!=typeof n?n:(0,o.stringToPDFString)(n):(0,o.info)('Bad value in document info for \"'+i+'\"')}}return(0,o.shadow)(this,\"documentInfo\",t)},get fingerprint(){var e,t=\"\",r=this.xref.trailer.get(\"ID\");Array.isArray(r)&&r[0]&&(0,o.isString)(r[0])&&\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"!==r[0]?e=(0,o.stringToBytes)(r[0]):(this.stream.ensureRange&&this.stream.ensureRange(0,Math.min(1024,this.stream.end)),e=(0,l.calculateMD5)(this.stream.bytes.subarray(0,1024),0,1024));for(var a=0,i=e.length;a<i;a++){var n=e[a].toString(16);t+=1===n.length?\"0\"+n:n}return(0,o.shadow)(this,\"fingerprint\",t)},getPage:function(e){return this.catalog.getPage(e)},cleanup:function(){return this.catalog.cleanup()}},e}();t.Page=g,t.PDFDocument=m},\"./node_modules/pdfjs-dist/lib/core/encodings.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/encodings.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var a=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"\",\"\",\"\",\"isuperior\",\"\",\"\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"\",\"\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"\",\"\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"\",\"Dotaccentsmall\",\"\",\"\",\"Macronsmall\",\"\",\"\",\"figuredash\",\"hypheninferior\",\"\",\"\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"],i=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"centoldstyle\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"\",\"threequartersemdash\",\"\",\"questionsmall\",\"\",\"\",\"\",\"\",\"Ethsmall\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"\",\"\",\"\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hypheninferior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"asuperior\",\"centsuperior\",\"\",\"\",\"\",\"\",\"Aacutesmall\",\"Agravesmall\",\"Acircumflexsmall\",\"Adieresissmall\",\"Atildesmall\",\"Aringsmall\",\"Ccedillasmall\",\"Eacutesmall\",\"Egravesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Iacutesmall\",\"Igravesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ntildesmall\",\"Oacutesmall\",\"Ogravesmall\",\"Ocircumflexsmall\",\"Odieresissmall\",\"Otildesmall\",\"Uacutesmall\",\"Ugravesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"\",\"eightsuperior\",\"fourinferior\",\"threeinferior\",\"sixinferior\",\"eightinferior\",\"seveninferior\",\"Scaronsmall\",\"\",\"centinferior\",\"twoinferior\",\"\",\"Dieresissmall\",\"\",\"Caronsmall\",\"osuperior\",\"fiveinferior\",\"\",\"commainferior\",\"periodinferior\",\"Yacutesmall\",\"\",\"dollarinferior\",\"\",\"\",\"Thornsmall\",\"\",\"nineinferior\",\"zeroinferior\",\"Zcaronsmall\",\"AEsmall\",\"Oslashsmall\",\"questiondownsmall\",\"oneinferior\",\"Lslashsmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"Cedillasmall\",\"\",\"\",\"\",\"\",\"\",\"OEsmall\",\"figuredash\",\"hyphensuperior\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"\",\"Ydieresissmall\",\"\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"ninesuperior\",\"zerosuperior\",\"\",\"esuperior\",\"rsuperior\",\"tsuperior\",\"\",\"\",\"isuperior\",\"ssuperior\",\"dsuperior\",\"\",\"\",\"\",\"\",\"\",\"lsuperior\",\"Ogoneksmall\",\"Brevesmall\",\"Macronsmall\",\"bsuperior\",\"nsuperior\",\"msuperior\",\"commasuperior\",\"periodsuperior\",\"Dotaccentsmall\",\"Ringsmall\",\"\",\"\",\"\",\"\"],n=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"space\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\"],o=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"\",\"questiondown\",\"\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"\",\"ring\",\"cedilla\",\"\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"AE\",\"\",\"ordfeminine\",\"\",\"\",\"\",\"\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"\",\"\",\"\",\"\",\"\",\"ae\",\"\",\"\",\"\",\"dotlessi\",\"\",\"\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"\",\"\",\"\",\"\"],s=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"bullet\",\"Euro\",\"bullet\",\"quotesinglbase\",\"florin\",\"quotedblbase\",\"ellipsis\",\"dagger\",\"daggerdbl\",\"circumflex\",\"perthousand\",\"Scaron\",\"guilsinglleft\",\"OE\",\"bullet\",\"Zcaron\",\"bullet\",\"bullet\",\"quoteleft\",\"quoteright\",\"quotedblleft\",\"quotedblright\",\"bullet\",\"endash\",\"emdash\",\"tilde\",\"trademark\",\"scaron\",\"guilsinglright\",\"oe\",\"bullet\",\"zcaron\",\"Ydieresis\",\"space\",\"exclamdown\",\"cent\",\"sterling\",\"currency\",\"yen\",\"brokenbar\",\"section\",\"dieresis\",\"copyright\",\"ordfeminine\",\"guillemotleft\",\"logicalnot\",\"hyphen\",\"registered\",\"macron\",\"degree\",\"plusminus\",\"twosuperior\",\"threesuperior\",\"acute\",\"mu\",\"paragraph\",\"periodcentered\",\"cedilla\",\"onesuperior\",\"ordmasculine\",\"guillemotright\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondown\",\"Agrave\",\"Aacute\",\"Acircumflex\",\"Atilde\",\"Adieresis\",\"Aring\",\"AE\",\"Ccedilla\",\"Egrave\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Igrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Eth\",\"Ntilde\",\"Ograve\",\"Oacute\",\"Ocircumflex\",\"Otilde\",\"Odieresis\",\"multiply\",\"Oslash\",\"Ugrave\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Yacute\",\"Thorn\",\"germandbls\",\"agrave\",\"aacute\",\"acircumflex\",\"atilde\",\"adieresis\",\"aring\",\"ae\",\"ccedilla\",\"egrave\",\"eacute\",\"ecircumflex\",\"edieresis\",\"igrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"eth\",\"ntilde\",\"ograve\",\"oacute\",\"ocircumflex\",\"otilde\",\"odieresis\",\"divide\",\"oslash\",\"ugrave\",\"uacute\",\"ucircumflex\",\"udieresis\",\"yacute\",\"thorn\",\"ydieresis\"],c=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"universal\",\"numbersign\",\"existential\",\"percent\",\"ampersand\",\"suchthat\",\"parenleft\",\"parenright\",\"asteriskmath\",\"plus\",\"comma\",\"minus\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"congruent\",\"Alpha\",\"Beta\",\"Chi\",\"Delta\",\"Epsilon\",\"Phi\",\"Gamma\",\"Eta\",\"Iota\",\"theta1\",\"Kappa\",\"Lambda\",\"Mu\",\"Nu\",\"Omicron\",\"Pi\",\"Theta\",\"Rho\",\"Sigma\",\"Tau\",\"Upsilon\",\"sigma1\",\"Omega\",\"Xi\",\"Psi\",\"Zeta\",\"bracketleft\",\"therefore\",\"bracketright\",\"perpendicular\",\"underscore\",\"radicalex\",\"alpha\",\"beta\",\"chi\",\"delta\",\"epsilon\",\"phi\",\"gamma\",\"eta\",\"iota\",\"phi1\",\"kappa\",\"lambda\",\"mu\",\"nu\",\"omicron\",\"pi\",\"theta\",\"rho\",\"sigma\",\"tau\",\"upsilon\",\"omega1\",\"omega\",\"xi\",\"psi\",\"zeta\",\"braceleft\",\"bar\",\"braceright\",\"similar\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Euro\",\"Upsilon1\",\"minute\",\"lessequal\",\"fraction\",\"infinity\",\"florin\",\"club\",\"diamond\",\"heart\",\"spade\",\"arrowboth\",\"arrowleft\",\"arrowup\",\"arrowright\",\"arrowdown\",\"degree\",\"plusminus\",\"second\",\"greaterequal\",\"multiply\",\"proportional\",\"partialdiff\",\"bullet\",\"divide\",\"notequal\",\"equivalence\",\"approxequal\",\"ellipsis\",\"arrowvertex\",\"arrowhorizex\",\"carriagereturn\",\"aleph\",\"Ifraktur\",\"Rfraktur\",\"weierstrass\",\"circlemultiply\",\"circleplus\",\"emptyset\",\"intersection\",\"union\",\"propersuperset\",\"reflexsuperset\",\"notsubset\",\"propersubset\",\"reflexsubset\",\"element\",\"notelement\",\"angle\",\"gradient\",\"registerserif\",\"copyrightserif\",\"trademarkserif\",\"product\",\"radical\",\"dotmath\",\"logicalnot\",\"logicaland\",\"logicalor\",\"arrowdblboth\",\"arrowdblleft\",\"arrowdblup\",\"arrowdblright\",\"arrowdbldown\",\"lozenge\",\"angleleft\",\"registersans\",\"copyrightsans\",\"trademarksans\",\"summation\",\"parenlefttp\",\"parenleftex\",\"parenleftbt\",\"bracketlefttp\",\"bracketleftex\",\"bracketleftbt\",\"bracelefttp\",\"braceleftmid\",\"braceleftbt\",\"braceex\",\"\",\"angleright\",\"integral\",\"integraltp\",\"integralex\",\"integralbt\",\"parenrighttp\",\"parenrightex\",\"parenrightbt\",\"bracketrighttp\",\"bracketrightex\",\"bracketrightbt\",\"bracerighttp\",\"bracerightmid\",\"bracerightbt\",\"\"],l=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"a1\",\"a2\",\"a202\",\"a3\",\"a4\",\"a5\",\"a119\",\"a118\",\"a117\",\"a11\",\"a12\",\"a13\",\"a14\",\"a15\",\"a16\",\"a105\",\"a17\",\"a18\",\"a19\",\"a20\",\"a21\",\"a22\",\"a23\",\"a24\",\"a25\",\"a26\",\"a27\",\"a28\",\"a6\",\"a7\",\"a8\",\"a9\",\"a10\",\"a29\",\"a30\",\"a31\",\"a32\",\"a33\",\"a34\",\"a35\",\"a36\",\"a37\",\"a38\",\"a39\",\"a40\",\"a41\",\"a42\",\"a43\",\"a44\",\"a45\",\"a46\",\"a47\",\"a48\",\"a49\",\"a50\",\"a51\",\"a52\",\"a53\",\"a54\",\"a55\",\"a56\",\"a57\",\"a58\",\"a59\",\"a60\",\"a61\",\"a62\",\"a63\",\"a64\",\"a65\",\"a66\",\"a67\",\"a68\",\"a69\",\"a70\",\"a71\",\"a72\",\"a73\",\"a74\",\"a203\",\"a75\",\"a204\",\"a76\",\"a77\",\"a78\",\"a79\",\"a81\",\"a82\",\"a83\",\"a84\",\"a97\",\"a98\",\"a99\",\"a100\",\"\",\"a89\",\"a90\",\"a93\",\"a94\",\"a91\",\"a92\",\"a205\",\"a85\",\"a206\",\"a86\",\"a87\",\"a88\",\"a95\",\"a96\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"a101\",\"a102\",\"a103\",\"a104\",\"a106\",\"a107\",\"a108\",\"a112\",\"a111\",\"a110\",\"a109\",\"a120\",\"a121\",\"a122\",\"a123\",\"a124\",\"a125\",\"a126\",\"a127\",\"a128\",\"a129\",\"a130\",\"a131\",\"a132\",\"a133\",\"a134\",\"a135\",\"a136\",\"a137\",\"a138\",\"a139\",\"a140\",\"a141\",\"a142\",\"a143\",\"a144\",\"a145\",\"a146\",\"a147\",\"a148\",\"a149\",\"a150\",\"a151\",\"a152\",\"a153\",\"a154\",\"a155\",\"a156\",\"a157\",\"a158\",\"a159\",\"a160\",\"a161\",\"a163\",\"a164\",\"a196\",\"a165\",\"a192\",\"a166\",\"a167\",\"a168\",\"a169\",\"a170\",\"a171\",\"a172\",\"a173\",\"a162\",\"a174\",\"a175\",\"a176\",\"a177\",\"a178\",\"a179\",\"a193\",\"a180\",\"a199\",\"a181\",\"a200\",\"a182\",\"\",\"a201\",\"a183\",\"a184\",\"a197\",\"a185\",\"a194\",\"a198\",\"a186\",\"a195\",\"a187\",\"a188\",\"a189\",\"a190\",\"a191\",\"\"];t.WinAnsiEncoding=s,t.StandardEncoding=o,t.MacRomanEncoding=n,t.SymbolSetEncoding=c,t.ZapfDingbatsEncoding=l,t.ExpertEncoding=a,t.getEncoding=function(e){switch(e){case\"WinAnsiEncoding\":return s;case\"StandardEncoding\":return o;case\"MacRomanEncoding\":return n;case\"SymbolSetEncoding\":return c;case\"ZapfDingbatsEncoding\":return l;case\"ExpertEncoding\":return a;case\"MacExpertEncoding\":return i;default:return null}}},\"./node_modules/pdfjs-dist/lib/core/evaluator.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/evaluator.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PartialEvaluator=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./cmap */\"./node_modules/pdfjs-dist/lib/core/cmap.js\"),n=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),o=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),s=r(/*! ./fonts */\"./node_modules/pdfjs-dist/lib/core/fonts.js\"),c=r(/*! ./encodings */\"./node_modules/pdfjs-dist/lib/core/encodings.js\"),l=r(/*! ./unicode */\"./node_modules/pdfjs-dist/lib/core/unicode.js\"),h=r(/*! ./standard_fonts */\"./node_modules/pdfjs-dist/lib/core/standard_fonts.js\"),u=r(/*! ./pattern */\"./node_modules/pdfjs-dist/lib/core/pattern.js\"),d=r(/*! ./parser */\"./node_modules/pdfjs-dist/lib/core/parser.js\"),f=r(/*! ./bidi */\"./node_modules/pdfjs-dist/lib/core/bidi.js\"),g=r(/*! ./colorspace */\"./node_modules/pdfjs-dist/lib/core/colorspace.js\"),m=r(/*! ./glyphlist */\"./node_modules/pdfjs-dist/lib/core/glyphlist.js\"),p=r(/*! ./metrics */\"./node_modules/pdfjs-dist/lib/core/metrics.js\"),b=r(/*! ./function */\"./node_modules/pdfjs-dist/lib/core/function.js\"),v=r(/*! ./jpeg_stream */\"./node_modules/pdfjs-dist/lib/core/jpeg_stream.js\"),y=r(/*! ./murmurhash3 */\"./node_modules/pdfjs-dist/lib/core/murmurhash3.js\"),w=r(/*! ./operator_list */\"./node_modules/pdfjs-dist/lib/core/operator_list.js\"),k=r(/*! ./image */\"./node_modules/pdfjs-dist/lib/core/image.js\"),S=function(){var e={forceDataSchema:!1,maxImageSize:-1,disableFontFace:!1,nativeImageDecoderSupport:a.NativeImageDecoding.DECODE,ignoreErrors:!1,isEvalSupported:!0};function t(e){var t=e.xref,r=e.resources,a=e.handler,i=e.forceDataSchema,n=void 0!==i&&i,o=e.pdfFunctionFactory;this.xref=t,this.resources=r,this.handler=a,this.forceDataSchema=n,this.pdfFunctionFactory=o}function r(t){var r=this,i=t.pdfManager,n=t.xref,o=t.handler,s=t.pageIndex,c=t.idFactory,l=t.fontCache,h=t.builtInCMapCache,u=t.options,d=void 0===u?null:u,f=t.pdfFunctionFactory;this.pdfManager=i,this.xref=n,this.handler=o,this.pageIndex=s,this.idFactory=c,this.fontCache=l,this.builtInCMapCache=h,this.options=d||e,this.pdfFunctionFactory=f,this.fetchBuiltInCMap=function(e){var t=r.builtInCMapCache[e];return t?Promise.resolve(t):r.handler.sendWithPromise(\"FetchBuiltInCMap\",{name:e}).then(function(t){return t.compressionType!==a.CMapCompressionType.NONE&&(r.builtInCMapCache[e]=t),t})}}t.prototype={canDecode:function(e){return e instanceof v.JpegStream&&t.isDecodable(e,this.xref,this.resources,this.pdfFunctionFactory)},decode:function(e){var t=e.dict.get(\"ColorSpace\",\"CS\"),r=(t=g.ColorSpace.parse(t,this.xref,this.resources,this.pdfFunctionFactory)).numComps;return this.handler.sendWithPromise(\"JpegDecode\",[e.getIR(this.forceDataSchema),r]).then(function(t){var r=t.data;return new n.Stream(r,0,r.length,e.dict)})}},t.isSupported=function(e,t,r,a){var i=e.dict;if(i.has(\"DecodeParms\")||i.has(\"DP\"))return!1;var n=g.ColorSpace.parse(i.get(\"ColorSpace\",\"CS\"),t,r,a);return(\"DeviceGray\"===n.name||\"DeviceRGB\"===n.name)&&n.isDefaultDecode(i.getArray(\"Decode\",\"D\"))},t.isDecodable=function(e,t,r,a){var i=e.dict;if(i.has(\"DecodeParms\")||i.has(\"DP\"))return!1;var n=g.ColorSpace.parse(i.get(\"ColorSpace\",\"CS\"),t,r,a);return(1===n.numComps||3===n.numComps)&&n.isDefaultDecode(i.getArray(\"Decode\",\"D\"))};function d(){this.reset()}function S(e){if(!(0,o.isName)(e))return\"source-over\";switch(e.name){case\"Normal\":case\"Compatible\":return\"source-over\";case\"Multiply\":return\"multiply\";case\"Screen\":return\"screen\";case\"Overlay\":return\"overlay\";case\"Darken\":return\"darken\";case\"Lighten\":return\"lighten\";case\"ColorDodge\":return\"color-dodge\";case\"ColorBurn\":return\"color-burn\";case\"HardLight\":return\"hard-light\";case\"SoftLight\":return\"soft-light\";case\"Difference\":return\"difference\";case\"Exclusion\":return\"exclusion\";case\"Hue\":return\"hue\";case\"Saturation\":return\"saturation\";case\"Color\":return\"color\";case\"Luminosity\":return\"luminosity\"}return(0,a.warn)(\"Unsupported blend mode: \"+e.name),\"source-over\"}d.prototype={check:function(){return!(++this.checked<100)&&(this.checked=0,this.endTime<=Date.now())},reset:function(){this.endTime=Date.now()+20,this.checked=0}};var O=Promise.resolve();return r.prototype={clone:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=Object.create(this);return r.options=t,r},hasBlendModes:function(e){if(!(0,o.isDict)(e))return!1;var t=Object.create(null);e.objId&&(t[e.objId]=!0);for(var r=[e],a=this.xref;r.length;){var i,n,s,c=r.shift(),l=c.get(\"ExtGState\");if((0,o.isDict)(l)){var h=l.getKeys();for(n=0,s=h.length;n<s;n++){i=h[n];var u=l.get(i).get(\"BM\");if((0,o.isName)(u)&&\"Normal\"!==u.name)return!0}}var d=c.get(\"XObject\");if((0,o.isDict)(d)){var f=d.getKeys();for(n=0,s=f.length;n<s;n++){i=f[n];var g=d.getRaw(i);if((0,o.isRef)(g)){if(t[g.toString()])continue;g=a.fetch(g)}if((0,o.isStream)(g)){if(g.dict.objId){if(t[g.dict.objId])continue;t[g.dict.objId]=!0}var m=g.dict.get(\"Resources\");!(0,o.isDict)(m)||m.objId&&t[m.objId]||(r.push(m),m.objId&&(t[m.objId]=!0))}}}}return!1},buildFormXObject:function(e,t,r,i,n,s){var c=t.dict,l=c.getArray(\"Matrix\"),h=c.getArray(\"BBox\"),u=c.get(\"Group\");if(u){var d={matrix:l,bbox:h,smask:r,isolated:!1,knockout:!1},f=u.get(\"S\"),m=null;(0,o.isName)(f,\"Transparency\")&&(d.isolated=u.get(\"I\")||!1,d.knockout=u.get(\"K\")||!1,u.has(\"CS\")&&(m=g.ColorSpace.parse(u.get(\"CS\"),this.xref,e,this.pdfFunctionFactory))),r&&r.backdrop&&(m=m||g.ColorSpace.singletons.rgb,r.backdrop=m.getRgb(r.backdrop,0)),i.addOp(a.OPS.beginGroup,[d])}return i.addOp(a.OPS.paintFormXObjectBegin,[l,h]),this.getOperatorList({stream:t,task:n,resources:c.get(\"Resources\")||e,operatorList:i,initialState:s}).then(function(){i.addOp(a.OPS.paintFormXObjectEnd,[]),u&&i.addOp(a.OPS.endGroup,[d])})},buildPaintImageXObject:function(e,r,i,o,s,c){var l=this,h=r.dict,u=h.get(\"Width\",\"W\"),d=h.get(\"Height\",\"H\");if(u&&(0,a.isNum)(u)&&d&&(0,a.isNum)(d)){var f=this.options.maxImageSize;if(-1!==f&&u*d>f)(0,a.warn)(\"Image exceeded maximum allowed size and was removed.\");else{var g,m;if(h.get(\"ImageMask\",\"IM\")||!1){var p=h.get(\"Width\",\"W\"),b=h.get(\"Height\",\"H\"),y=p+7>>3,w=r.getBytes(y*b),S=h.getArray(\"Decode\",\"D\");return(g=k.PDFImage.createMask({imgArray:w,width:p,height:b,imageIsFromDecodeStream:r instanceof n.DecodeStream,inverseDecode:!!S&&S[0]>0})).cached=!0,m=[g],o.addOp(a.OPS.paintImageMaskXObject,m),void(s&&(c[s]={fn:a.OPS.paintImageMaskXObject,args:m}))}var x=h.get(\"SMask\",\"SM\")||!1,C=h.get(\"Mask\")||!1;if(i&&!x&&!C&&!(r instanceof v.JpegStream)&&u+d<200)return g=new k.PDFImage({xref:this.xref,res:e,image:r,isInline:i,pdfFunctionFactory:this.pdfFunctionFactory}).createImageData(!0),void o.addOp(a.OPS.paintInlineImageXObject,[g]);var A=this.options.nativeImageDecoderSupport,I=\"img_\"+this.idFactory.createObjId();if(o.addDependency(I),m=[I,u,d],A!==a.NativeImageDecoding.NONE&&!x&&!C&&r instanceof v.JpegStream&&t.isSupported(r,this.xref,e,this.pdfFunctionFactory))return o.addOp(a.OPS.paintJpegXObject,m),this.handler.send(\"obj\",[I,this.pageIndex,\"JpegStream\",r.getIR(this.options.forceDataSchema)]),void(s&&(c[s]={fn:a.OPS.paintJpegXObject,args:m}));var F=null;A===a.NativeImageDecoding.DECODE&&(r instanceof v.JpegStream||C instanceof v.JpegStream||x instanceof v.JpegStream)&&(F=new t({xref:this.xref,resources:e,handler:this.handler,forceDataSchema:this.options.forceDataSchema,pdfFunctionFactory:this.pdfFunctionFactory})),k.PDFImage.buildImage({handler:this.handler,xref:this.xref,res:e,image:r,isInline:i,nativeDecoder:F,pdfFunctionFactory:this.pdfFunctionFactory}).then(function(e){var t=e.createImageData(!1);l.handler.send(\"obj\",[I,l.pageIndex,\"Image\",t],[t.data.buffer])}).catch(function(e){(0,a.warn)(\"Unable to decode image: \"+e),l.handler.send(\"obj\",[I,l.pageIndex,\"Image\",null])}),o.addOp(a.OPS.paintImageXObject,m),s&&(c[s]={fn:a.OPS.paintImageXObject,args:m})}}else(0,a.warn)(\"Image dimensions are missing, or not numbers.\")},handleSMask:function(e,t,r,a,i){var n=e.get(\"G\"),o={subtype:e.get(\"S\").name,backdrop:e.get(\"BC\")},s=e.get(\"TR\");if((0,b.isPDFFunction)(s)){for(var c=this.pdfFunctionFactory.create(s),l=new Uint8Array(256),h=new Float32Array(1),u=0;u<256;u++)h[0]=u/255,c(h,0,h,0),l[u]=255*h[0]|0;o.transferMap=l}return this.buildFormXObject(t,n,o,r,a,i.state.clone())},handleTilingType:function(e,t,r,i,n,s,c){var l=this,h=new w.OperatorList,d=[n.get(\"Resources\"),r],f=o.Dict.merge(this.xref,d);return this.getOperatorList({stream:i,task:c,resources:f,operatorList:h}).then(function(){return(0,u.getTilingPatternIR)({fnArray:h.fnArray,argsArray:h.argsArray},n,t)}).then(function(t){s.addDependencies(h.dependencies),s.addOp(e,t)},function(e){if(l.options.ignoreErrors)return l.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.unknown}),void(0,a.warn)('handleTilingType - ignoring pattern: \"'+e+'\".');throw e})},handleSetFont:function(e,t,r,i,n,o){var c,l=this;return t&&(c=(t=t.slice())[0].name),this.loadFont(c,r,e).then(function(t){return t.font.isType3Font?t.loadType3Data(l,e,i,n).then(function(){return t}).catch(function(e){return l.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.font}),new x(\"g_font_error\",new s.ErrorFont(\"Type3 font load error: \"+e),t.font)}):t}).then(function(e){return o.font=e.font,e.send(l.handler),e.loadedName})},handleText:function(e,t){var r=this,i=t.font,n=i.charsToGlyphs(e),o=!!(t.textRenderingMode&a.TextRenderingMode.ADD_TO_PATH_FLAG);if(i.data&&(o||this.options.disableFontFace||\"Pattern\"===t.fillColorSpace.name))for(var s=function(e){if(!i.renderer.hasBuiltPath(e)){var t=i.renderer.getPathJs(e);r.handler.send(\"commonobj\",[i.loadedName+\"_path_\"+e,\"FontPath\",t])}},c=0,l=n.length;c<l;c++){var h=n[c];s(h.fontChar);var u=h.accent;u&&u.fontChar&&s(u.fontChar)}return n},setGState:function(e,t,r,i,n){for(var s=this,c=[],l=t.getKeys(),h=Promise.resolve(),u=function(){var u=l[d],f=t.get(u);switch(u){case\"Type\":break;case\"LW\":case\"LC\":case\"LJ\":case\"ML\":case\"D\":case\"RI\":case\"FL\":case\"CA\":case\"ca\":c.push([u,f]);break;case\"Font\":h=h.then(function(){return s.handleSetFont(e,null,f[0],r,i,n.state).then(function(e){r.addDependency(e),c.push([u,[e,f[1]]])})});break;case\"BM\":c.push([u,S(f)]);break;case\"SMask\":if((0,o.isName)(f,\"None\")){c.push([u,!1]);break}(0,o.isDict)(f)?(h=h.then(function(){return s.handleSMask(f,e,r,i,n)}),c.push([u,!0])):(0,a.warn)(\"Unsupported SMask type\");break;case\"OP\":case\"op\":case\"OPM\":case\"BG\":case\"BG2\":case\"UCR\":case\"UCR2\":case\"TR\":case\"TR2\":case\"HT\":case\"SM\":case\"SA\":case\"AIS\":case\"TK\":(0,a.info)(\"graphic state operator \"+u);break;default:(0,a.info)(\"Unknown graphic state operator \"+u)}},d=0,f=l.length;d<f;d++)u();return h.then(function(){c.length>0&&r.addOp(a.OPS.setGState,[c])})},loadFont:function(e,t,r){var i=this;function n(){return Promise.resolve(new x(\"g_font_error\",new s.ErrorFont(\"Font \"+e+\" is not available\"),t))}var c,l=this.xref;if(t){if(!(0,o.isRef)(t))throw new Error('The \"font\" object should be a reference.');c=t}else{var h=r.get(\"Font\");if(!h)return(0,a.warn)(\"fontRes not available\"),n();c=h.getRaw(e)}if(!c)return(0,a.warn)(\"fontRef not available\"),n();if(this.fontCache.has(c))return this.fontCache.get(c);if(t=l.fetchIfRef(c),!(0,o.isDict)(t))return n();if(t.translated)return t.translated;var u,d,f=(0,a.createPromiseCapability)(),g=this.preEvaluateFont(t),m=g.descriptor,p=(0,o.isRef)(c);if(p&&(u=c.toString()),(0,o.isDict)(m)){m.fontAliases||(m.fontAliases=Object.create(null));var b=m.fontAliases,v=g.hash;if(b[v]){var y=b[v].aliasRef;if(p&&y&&this.fontCache.has(y))return this.fontCache.putAlias(c,y),this.fontCache.get(c)}else b[v]={fontID:s.Font.getFontID()};p&&(b[v].aliasRef=c),u=b[v].fontID}p?this.fontCache.put(c,f.promise):(u||(u=this.idFactory.createObjId()),this.fontCache.put(\"id_\"+u,f.promise)),(0,a.assert)(u,'The \"fontID\" must be defined.'),t.loadedName=\"g_\"+this.pdfManager.docId+\"_f\"+u,t.translated=f.promise;try{d=this.translateFont(g)}catch(e){d=Promise.reject(e)}return d.then(function(e){void 0!==e.fontType&&(l.stats.fontTypes[e.fontType]=!0);f.resolve(new x(t.loadedName,e,t))}).catch(function(e){i.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.font});try{var r=g.descriptor,n=r&&r.get(\"FontFile3\"),o=n&&n.get(\"Subtype\"),c=(0,s.getFontType)(g.type,o&&o.name);l.stats.fontTypes[c]=!0}catch(e){}f.resolve(new x(t.loadedName,new s.ErrorFont(e instanceof Error?e.message:e),t))}),f.promise},buildPath:function(e,t,r){var i=e.length-1;if(r||(r=[]),i<0||e.fnArray[i]!==a.OPS.constructPath)e.addOp(a.OPS.constructPath,[[t],r]);else{var n=e.argsArray[i];n[0].push(t),Array.prototype.push.apply(n[1],r)}},handleColorN:function(e,t,r,a,i,n,s){var c,l=r[r.length-1];if((0,o.isName)(l)&&(c=i.get(l.name))){var h=(0,o.isStream)(c)?c.dict:c,d=h.get(\"PatternType\");if(1===d){var f=a.base?a.base.getRgb(r,0):null;return this.handleTilingType(t,f,n,c,h,e,s)}if(2===d){var g=h.get(\"Shading\"),m=h.getArray(\"Matrix\");return c=u.Pattern.parseShading(g,m,this.xref,n,this.handler,this.pdfFunctionFactory),e.addOp(t,c.getIR()),Promise.resolve()}return Promise.reject(new Error(\"Unknown PatternType: \"+d))}return e.addOp(t,r),Promise.resolve()},getOperatorList:function(e){var t=this,r=e.stream,i=e.task,n=e.resources,s=e.operatorList,c=e.initialState,l=void 0===c?null:c;if(n=n||o.Dict.empty,l=l||new I,!s)throw new Error('getOperatorList: missing \"operatorList\" parameter');var h=this,f=this.xref,m=Object.create(null),p=n.get(\"XObject\")||o.Dict.empty,b=n.get(\"Pattern\")||o.Dict.empty,v=new C(l),y=new F(r,f,v),w=new d;function k(e){for(var t=0,r=y.savedStatesDepth;t<r;t++)s.addOp(a.OPS.restore,[])}return new Promise(function e(t,r){var c=function(a){a.then(function(){try{e(t,r)}catch(e){r(e)}},r)};i.ensureNotTerminated(),w.reset();for(var l,d,S,x,C={};!(l=w.check())&&(C.args=null,y.read(C));){var A=C.args,I=C.fn;switch(0|I){case a.OPS.paintXObject:var F=A[0].name;if(F&&void 0!==m[F]){s.addOp(m[F].fn,m[F].args),A=null;continue}return void c(new Promise(function(e,t){if(!F)throw new a.FormatError(\"XObject must be referred to by name.\");var r=p.get(F);if(!r)return s.addOp(I,A),void e();if(!(0,o.isStream)(r))throw new a.FormatError(\"XObject should be a stream\");var c=r.dict.get(\"Subtype\");if(!(0,o.isName)(c))throw new a.FormatError(\"XObject should have a Name subtype\");if(\"Form\"===c.name)return v.save(),void h.buildFormXObject(n,r,null,s,i,v.state.clone()).then(function(){v.restore(),e()},t);if(\"Image\"===c.name)h.buildPaintImageXObject(n,r,!1,s,F,m);else{if(\"PS\"!==c.name)throw new a.FormatError(\"Unhandled XObject subtype \"+c.name);(0,a.info)(\"Ignored XObject subtype PS\")}e()}).catch(function(e){if(h.options.ignoreErrors)return h.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.unknown}),void(0,a.warn)('getOperatorList - ignoring XObject: \"'+e+'\".');throw e}));case a.OPS.setFont:var B=A[1];return void c(h.handleSetFont(n,A,null,s,i,v.state).then(function(e){s.addDependency(e),s.addOp(a.OPS.setFont,[e,B])}));case a.OPS.endInlineImage:var P=A[0].cacheKey;if(P){var T=m[P];if(void 0!==T){s.addOp(T.fn,T.args),A=null;continue}}h.buildPaintImageXObject(n,A[0],!0,s,P,m),A=null;continue;case a.OPS.showText:A[0]=h.handleText(A[0],v.state);break;case a.OPS.showSpacedText:var E=A[0],M=[],D=E.length,R=v.state;for(d=0;d<D;++d){var L=E[d];(0,a.isString)(L)?Array.prototype.push.apply(M,h.handleText(L,R)):(0,a.isNum)(L)&&M.push(L)}A[0]=M,I=a.OPS.showText;break;case a.OPS.nextLineShowText:s.addOp(a.OPS.nextLine),A[0]=h.handleText(A[0],v.state),I=a.OPS.showText;break;case a.OPS.nextLineSetSpacingShowText:s.addOp(a.OPS.nextLine),s.addOp(a.OPS.setWordSpacing,[A.shift()]),s.addOp(a.OPS.setCharSpacing,[A.shift()]),A[0]=h.handleText(A[0],v.state),I=a.OPS.showText;break;case a.OPS.setTextRenderingMode:v.state.textRenderingMode=A[0];break;case a.OPS.setFillColorSpace:v.state.fillColorSpace=g.ColorSpace.parse(A[0],f,n,h.pdfFunctionFactory);continue;case a.OPS.setStrokeColorSpace:v.state.strokeColorSpace=g.ColorSpace.parse(A[0],f,n,h.pdfFunctionFactory);continue;case a.OPS.setFillColor:x=v.state.fillColorSpace,A=x.getRgb(A,0),I=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeColor:x=v.state.strokeColorSpace,A=x.getRgb(A,0),I=a.OPS.setStrokeRGBColor;break;case a.OPS.setFillGray:v.state.fillColorSpace=g.ColorSpace.singletons.gray,A=g.ColorSpace.singletons.gray.getRgb(A,0),I=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeGray:v.state.strokeColorSpace=g.ColorSpace.singletons.gray,A=g.ColorSpace.singletons.gray.getRgb(A,0),I=a.OPS.setStrokeRGBColor;break;case a.OPS.setFillCMYKColor:v.state.fillColorSpace=g.ColorSpace.singletons.cmyk,A=g.ColorSpace.singletons.cmyk.getRgb(A,0),I=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeCMYKColor:v.state.strokeColorSpace=g.ColorSpace.singletons.cmyk,A=g.ColorSpace.singletons.cmyk.getRgb(A,0),I=a.OPS.setStrokeRGBColor;break;case a.OPS.setFillRGBColor:v.state.fillColorSpace=g.ColorSpace.singletons.rgb,A=g.ColorSpace.singletons.rgb.getRgb(A,0);break;case a.OPS.setStrokeRGBColor:v.state.strokeColorSpace=g.ColorSpace.singletons.rgb,A=g.ColorSpace.singletons.rgb.getRgb(A,0);break;case a.OPS.setFillColorN:if(\"Pattern\"===(x=v.state.fillColorSpace).name)return void c(h.handleColorN(s,a.OPS.setFillColorN,A,x,b,n,i));A=x.getRgb(A,0),I=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeColorN:if(\"Pattern\"===(x=v.state.strokeColorSpace).name)return void c(h.handleColorN(s,a.OPS.setStrokeColorN,A,x,b,n,i));A=x.getRgb(A,0),I=a.OPS.setStrokeRGBColor;break;case a.OPS.shadingFill:var N=n.get(\"Shading\");if(!N)throw new a.FormatError(\"No shading resource found\");var j=N.get(A[0].name);if(!j)throw new a.FormatError(\"No shading object found\");var U=u.Pattern.parseShading(j,null,f,n,h.handler,h.pdfFunctionFactory).getIR();A=[U],I=a.OPS.shadingFill;break;case a.OPS.setGState:var _=A[0],q=n.get(\"ExtGState\");if(!(0,o.isDict)(q)||!q.has(_.name))break;var z=q.get(_.name);return void c(h.setGState(n,z,s,i,v));case a.OPS.moveTo:case a.OPS.lineTo:case a.OPS.curveTo:case a.OPS.curveTo2:case a.OPS.curveTo3:case a.OPS.closePath:case a.OPS.rectangle:h.buildPath(s,I,A);continue;case a.OPS.markPoint:case a.OPS.markPointProps:case a.OPS.beginMarkedContent:case a.OPS.beginMarkedContentProps:case a.OPS.endMarkedContent:case a.OPS.beginCompat:case a.OPS.endCompat:continue;default:if(null!==A){for(d=0,S=A.length;d<S&&!(A[d]instanceof o.Dict);d++);if(d<S){(0,a.warn)(\"getOperatorList - ignoring operator: \"+I);continue}}}s.addOp(I,A)}l?c(O):(k(),t())}).catch(function(e){if(t.options.ignoreErrors)return t.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.unknown}),(0,a.warn)(\"getOperatorList - ignoring errors during task: \"+i.name),void k();throw e})},getTextContent:function(e){var t=this,r=e.stream,i=e.task,n=e.resources,s=e.stateManager,c=void 0===s?null:s,h=e.normalizeWhitespace,u=void 0!==h&&h,g=e.combineTextItems,m=void 0!==g&&g,p=e.sink,b=e.seenStyles,v=void 0===b?Object.create(null):b;n=n||o.Dict.empty,c=c||new C(new A);var y,w=/\\s/g,k={items:[],styles:Object.create(null)},S={initialized:!1,str:[],width:0,height:0,vertical:!1,lastAdvanceWidth:0,lastAdvanceHeight:0,textAdvanceScale:0,spaceWidth:0,fakeSpaceMin:1/0,fakeMultiSpaceMin:1/0,fakeMultiSpaceMax:-0,textRunBreakAllowed:!1,transform:null,fontName:null},x=.3,I=1.5,B=4,P=this,T=this.xref,E=null,M=Object.create(null),D=new F(r,T,c);function R(){if(S.initialized)return S;var e=y.font;e.loadedName in v||(v[e.loadedName]=!0,k.styles[e.loadedName]={fontFamily:e.fallbackName,ascent:e.ascent,descent:e.descent,vertical:e.vertical}),S.fontName=e.loadedName;var t=[y.fontSize*y.textHScale,0,0,y.fontSize,0,y.textRise];if(e.isType3Font&&y.fontMatrix!==a.FONT_IDENTITY_MATRIX&&1===y.fontSize){var r=e.bbox[3]-e.bbox[1];r>0&&(r*=y.fontMatrix[3],t[3]*=r)}var i=a.Util.transform(y.ctm,a.Util.transform(y.textMatrix,t));S.transform=i,e.vertical?(S.width=Math.sqrt(i[0]*i[0]+i[1]*i[1]),S.height=0,S.vertical=!0):(S.width=0,S.height=Math.sqrt(i[2]*i[2]+i[3]*i[3]),S.vertical=!1);var n=y.textLineMatrix[0],o=y.textLineMatrix[1],s=Math.sqrt(n*n+o*o);n=y.ctm[0],o=y.ctm[1];var c=Math.sqrt(n*n+o*o);S.textAdvanceScale=c*s,S.lastAdvanceWidth=0,S.lastAdvanceHeight=0;var l=e.spaceWidth/1e3*y.fontSize;return l?(S.spaceWidth=l,S.fakeSpaceMin=l*x,S.fakeMultiSpaceMin=l*I,S.fakeMultiSpaceMax=l*B,S.textRunBreakAllowed=!e.isMonospace):(S.spaceWidth=0,S.fakeSpaceMin=1/0,S.fakeMultiSpaceMin=1/0,S.fakeMultiSpaceMax=0,S.textRunBreakAllowed=!1),S.initialized=!0,S}function L(e){for(var t,r=0,a=e.length;r<a&&(t=e.charCodeAt(r))>=32&&t<=127;)r++;return r<a?e.replace(w,\" \"):e}function N(e,t){return P.loadFont(e,t,n).then(function(e){y.font=e.font,y.fontMatrix=e.font.fontMatrix||a.FONT_IDENTITY_MATRIX})}function j(e){for(var t=y.font,r=R(),a=0,i=0,n=t.charsToGlyphs(e),o=0;o<n.length;o++){var s=n[o],c=null;c=t.vertical&&s.vmetric?s.vmetric[0]:s.width;var h=s.unicode,u=(0,l.getNormalizedUnicodes)();void 0!==u[h]&&(h=u[h]),h=(0,l.reverseIfRtl)(h);var d=y.charSpacing;if(s.isSpace){var f=y.wordSpacing;d+=f,f>0&&U(f,r.str)}var g=0,m=0;if(t.vertical)i+=m=c*y.fontMatrix[0]*y.fontSize+d;else a+=g=(c*y.fontMatrix[0]*y.fontSize+d)*y.textHScale;y.translateTextMatrix(g,m),r.str.push(h)}return t.vertical?(r.lastAdvanceHeight=i,r.height+=Math.abs(i)):(r.lastAdvanceWidth=a,r.width+=a),r}function U(e,t){if(!(e<S.fakeSpaceMin))if(e<S.fakeMultiSpaceMin)t.push(\" \");else for(var r=Math.round(e/S.spaceWidth);r-- >0;)t.push(\" \")}function _(){var e,t,r;S.initialized&&(S.width*=S.textAdvanceScale,S.height*=S.textAdvanceScale,k.items.push((t=(e=S).str.join(\"\"),r=(0,f.bidi)(t,-1,e.vertical),{str:u?L(r.str):r.str,dir:r.dir,width:e.width,height:e.height,transform:e.transform,fontName:e.fontName})),S.initialized=!1,S.str.length=0)}function q(){var e=k.items.length;e>0&&(p.enqueue(k,e),k.items=[],k.styles=Object.create(null))}var z=new d;return new Promise(function e(t,r){var s=function(a){q(),Promise.all([a,p.ready]).then(function(){try{e(t,r)}catch(e){r(e)}},r)};i.ensureNotTerminated(),z.reset();for(var l,h={},d=[];!(l=z.check())&&(d.length=0,h.args=d,D.read(h));){y=c.state;var f,g=h.fn;switch(d=h.args,0|g){case a.OPS.setFont:var b=d[0].name,w=d[1];if(y.font&&b===y.fontName&&w===y.fontSize)break;return _(),y.fontName=b,y.fontSize=w,void s(N(b,null));case a.OPS.setTextRise:_(),y.textRise=d[0];break;case a.OPS.setHScale:_(),y.textHScale=d[0]/100;break;case a.OPS.setLeading:_(),y.leading=d[0];break;case a.OPS.moveText:var x=!!y.font&&0===(y.font.vertical?d[0]:d[1]);if(f=d[0]-d[1],m&&x&&S.initialized&&f>0&&f<=S.fakeMultiSpaceMax){y.translateTextLineMatrix(d[0],d[1]),S.width+=d[0]-S.lastAdvanceWidth,S.height+=d[1]-S.lastAdvanceHeight,U(d[0]-S.lastAdvanceWidth-(d[1]-S.lastAdvanceHeight),S.str);break}_(),y.translateTextLineMatrix(d[0],d[1]),y.textMatrix=y.textLineMatrix.slice();break;case a.OPS.setLeadingMoveText:_(),y.leading=-d[1],y.translateTextLineMatrix(d[0],d[1]),y.textMatrix=y.textLineMatrix.slice();break;case a.OPS.nextLine:_(),y.carriageReturn();break;case a.OPS.setTextMatrix:if(f=y.calcTextLineMatrixAdvance(d[0],d[1],d[2],d[3],d[4],d[5]),m&&null!==f&&S.initialized&&f.value>0&&f.value<=S.fakeMultiSpaceMax){y.translateTextLineMatrix(f.width,f.height),S.width+=f.width-S.lastAdvanceWidth,S.height+=f.height-S.lastAdvanceHeight,U(f.width-S.lastAdvanceWidth-(f.height-S.lastAdvanceHeight),S.str);break}_(),y.setTextMatrix(d[0],d[1],d[2],d[3],d[4],d[5]),y.setTextLineMatrix(d[0],d[1],d[2],d[3],d[4],d[5]);break;case a.OPS.setCharSpacing:y.charSpacing=d[0];break;case a.OPS.setWordSpacing:y.wordSpacing=d[0];break;case a.OPS.beginText:_(),y.textMatrix=a.IDENTITY_MATRIX.slice(),y.textLineMatrix=a.IDENTITY_MATRIX.slice();break;case a.OPS.showSpacedText:for(var A,I=d[0],F=0,B=I.length;F<B;F++)if(\"string\"==typeof I[F])j(I[F]);else if((0,a.isNum)(I[F])){R(),f=I[F]*y.fontSize/1e3;var T=!1;y.font.vertical?(A=f,y.translateTextMatrix(0,A),(T=S.textRunBreakAllowed&&f>S.fakeMultiSpaceMax)||(S.height+=A)):(A=(f=-f)*y.textHScale,y.translateTextMatrix(A,0),(T=S.textRunBreakAllowed&&f>S.fakeMultiSpaceMax)||(S.width+=A)),T?_():f>0&&U(f,S.str)}break;case a.OPS.showText:j(d[0]);break;case a.OPS.nextLineShowText:_(),y.carriageReturn(),j(d[0]);break;case a.OPS.nextLineSetSpacingShowText:_(),y.wordSpacing=d[0],y.charSpacing=d[1],y.carriageReturn(),j(d[2]);break;case a.OPS.paintXObject:_(),E||(E=n.get(\"XObject\")||o.Dict.empty);var L=d[0].name;if(L&&void 0!==M[L])break;return void s(new Promise(function(e,t){if(!L)throw new a.FormatError(\"XObject must be referred to by name.\");var r=E.get(L);if(r){if(!(0,o.isStream)(r))throw new a.FormatError(\"XObject should be a stream\");var s=r.dict.get(\"Subtype\");if(!(0,o.isName)(s))throw new a.FormatError(\"XObject should have a Name subtype\");if(\"Form\"!==s.name)return M[L]=!0,void e();var l=c.state.clone(),h=new C(l),d=r.dict.getArray(\"Matrix\");Array.isArray(d)&&6===d.length&&h.transform(d),q();var f={enqueueInvoked:!1,enqueue:function(e,t){this.enqueueInvoked=!0,p.enqueue(e,t)},get desiredSize(){return p.desiredSize},get ready(){return p.ready}};P.getTextContent({stream:r,task:i,resources:r.dict.get(\"Resources\")||n,stateManager:h,normalizeWhitespace:u,combineTextItems:m,sink:f,seenStyles:v}).then(function(){f.enqueueInvoked||(M[L]=!0),e()},t)}else e()}).catch(function(e){if(!(e instanceof a.AbortException)){if(!P.options.ignoreErrors)throw e;(0,a.warn)('getTextContent - ignoring XObject: \"'+e+'\".')}}));case a.OPS.setGState:_();var H=d[0],G=n.get(\"ExtGState\");if(!(0,o.isDict)(G)||!(0,o.isName)(H))break;var X=G.get(H.name);if(!(0,o.isDict)(X))break;var W=X.get(\"Font\");if(W)return y.fontName=null,y.fontSize=W[1],void s(N(null,W[0]))}if(k.items.length>=p.desiredSize){l=!0;break}}l?s(O):(_(),q(),t())}).catch(function(e){if(!(e instanceof a.AbortException)){if(t.options.ignoreErrors)return(0,a.warn)(\"getTextContent - ignoring errors during task: \"+i.name),_(),void q();throw e}})},extractDataStructures:function(e,t,r){var i=this,n=this.xref,l=e.get(\"ToUnicode\")||t.get(\"ToUnicode\"),h=l?this.readToUnicode(l):Promise.resolve(void 0);if(r.composite){var u=e.get(\"CIDSystemInfo\");(0,o.isDict)(u)&&(r.cidSystemInfo={registry:u.get(\"Registry\"),ordering:u.get(\"Ordering\"),supplement:u.get(\"Supplement\")});var d=e.get(\"CIDToGIDMap\");(0,o.isStream)(d)&&(r.cidToGidMap=this.readCidToGidMap(d))}var f,g=[],m=null;if(e.has(\"Encoding\")){if(f=e.get(\"Encoding\"),(0,o.isDict)(f)){if(m=f.get(\"BaseEncoding\"),m=(0,o.isName)(m)?m.name:null,f.has(\"Differences\"))for(var p=f.get(\"Differences\"),b=0,v=0,y=p.length;v<y;v++){var w=n.fetchIfRef(p[v]);if((0,a.isNum)(w))b=w;else{if(!(0,o.isName)(w))throw new a.FormatError(\"Invalid entry in 'Differences' array: \"+w);g[b++]=w.name}}}else{if(!(0,o.isName)(f))throw new a.FormatError(\"Encoding is not a Name nor a Dict\");m=f.name}\"MacRomanEncoding\"!==m&&\"MacExpertEncoding\"!==m&&\"WinAnsiEncoding\"!==m&&(m=null)}if(m)r.defaultEncoding=(0,c.getEncoding)(m).slice();else{var k=!!(r.flags&s.FontFlags.Symbolic),S=!!(r.flags&s.FontFlags.Nonsymbolic);f=c.StandardEncoding,\"TrueType\"!==r.type||S||(f=c.WinAnsiEncoding),k&&(f=c.MacRomanEncoding,r.file||(/Symbol/i.test(r.name)?f=c.SymbolSetEncoding:/Dingbats/i.test(r.name)&&(f=c.ZapfDingbatsEncoding))),r.defaultEncoding=f}return r.differences=g,r.baseEncodingName=m,r.hasEncoding=!!m||g.length>0,r.dict=e,h.then(function(e){return r.toUnicode=e,i.buildToUnicode(r)}).then(function(e){return r.toUnicode=e,r})},_buildSimpleFontToUnicode:function(e){(0,a.assert)(!e.composite,\"Must be a simple font.\");var t=[],r=void 0,i=void 0,n=e.defaultEncoding.slice(),o=e.baseEncodingName,h=e.differences;for(r in h)\".notdef\"!==(i=h[r])&&(n[r]=i);var u=(0,m.getGlyphsUnicode)();for(r in n)if(\"\"!==(i=n[r]))if(void 0!==u[i])t[r]=String.fromCharCode(u[i]);else{var d=0;switch(i[0]){case\"G\":3===i.length&&(d=parseInt(i.substr(1),16));break;case\"g\":5===i.length&&(d=parseInt(i.substr(1),16));break;case\"C\":case\"c\":i.length>=3&&(d=+i.substr(1));break;default:var f=(0,l.getUnicodeForGlyph)(i,u);-1!==f&&(d=f)}if(d){if(o&&d===+r){var g=(0,c.getEncoding)(o);if(g&&(i=g[r])){t[r]=String.fromCharCode(u[i]);continue}}t[r]=String.fromCharCode(d)}}return new s.ToUnicodeMap(t)},buildToUnicode:function(e){if(e.hasIncludedToUnicodeMap=!!e.toUnicode&&e.toUnicode.length>0,e.hasIncludedToUnicodeMap)return!e.composite&&e.hasEncoding&&(e.fallbackToUnicode=this._buildSimpleFontToUnicode(e)),Promise.resolve(e.toUnicode);if(!e.composite)return Promise.resolve(this._buildSimpleFontToUnicode(e));if(e.composite&&(e.cMap.builtInCMap&&!(e.cMap instanceof i.IdentityCMap)||\"Adobe\"===e.cidSystemInfo.registry&&(\"GB1\"===e.cidSystemInfo.ordering||\"CNS1\"===e.cidSystemInfo.ordering||\"Japan1\"===e.cidSystemInfo.ordering||\"Korea1\"===e.cidSystemInfo.ordering))){var t=e.cidSystemInfo.registry,r=e.cidSystemInfo.ordering,n=o.Name.get(t+\"-\"+r+\"-UCS2\");return i.CMapFactory.create({encoding:n,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(t){var r=e.cMap,i=[];return r.forEach(function(e,r){if(r>65535)throw new a.FormatError(\"Max size of CID is 65,535\");var n=t.lookup(r);n&&(i[e]=String.fromCharCode((n.charCodeAt(0)<<8)+n.charCodeAt(1)))}),new s.ToUnicodeMap(i)})}return Promise.resolve(new s.IdentityToUnicodeMap(e.firstChar,e.lastChar))},readToUnicode:function(e){var t=e;return(0,o.isName)(t)?i.CMapFactory.create({encoding:t,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){return e instanceof i.IdentityCMap?new s.IdentityToUnicodeMap(0,65535):new s.ToUnicodeMap(e.getMap())}):(0,o.isStream)(t)?i.CMapFactory.create({encoding:t,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){if(e instanceof i.IdentityCMap)return new s.IdentityToUnicodeMap(0,65535);var t=new Array(e.length);return e.forEach(function(e,r){for(var a=[],i=0;i<r.length;i+=2){var n=r.charCodeAt(i)<<8|r.charCodeAt(i+1);if(55296==(63488&n)){i+=2;var o=r.charCodeAt(i)<<8|r.charCodeAt(i+1);a.push(((1023&n)<<10)+(1023&o)+65536)}else a.push(n)}t[e]=String.fromCharCode.apply(String,a)}),new s.ToUnicodeMap(t)}):Promise.resolve(null)},readCidToGidMap:function(e){for(var t=e.getBytes(),r=[],a=0,i=t.length;a<i;a++){var n=t[a++]<<8|t[a];if(0!==n)r[a>>1]=n}return r},extractWidths:function(e,t,r){var a,i,n,c,l,h,u,d,f=this.xref,g=[],m=0,p=[];if(r.composite){if(m=e.has(\"DW\")?e.get(\"DW\"):1e3,d=e.get(\"W\"))for(i=0,n=d.length;i<n;i++)if(h=f.fetchIfRef(d[i++]),u=f.fetchIfRef(d[i]),Array.isArray(u))for(c=0,l=u.length;c<l;c++)g[h++]=f.fetchIfRef(u[c]);else{var b=f.fetchIfRef(d[++i]);for(c=h;c<=u;c++)g[c]=b}if(r.vertical){var v=e.getArray(\"DW2\")||[880,-1e3];if(a=[v[1],.5*m,v[0]],v=e.get(\"W2\"))for(i=0,n=v.length;i<n;i++)if(h=f.fetchIfRef(v[i++]),u=f.fetchIfRef(v[i]),Array.isArray(u))for(c=0,l=u.length;c<l;c++)p[h++]=[f.fetchIfRef(u[c++]),f.fetchIfRef(u[c++]),f.fetchIfRef(u[c])];else{var y=[f.fetchIfRef(v[++i]),f.fetchIfRef(v[++i]),f.fetchIfRef(v[++i])];for(c=h;c<=u;c++)p[c]=y}}}else{var w=r.firstChar;if(d=e.get(\"Widths\")){for(c=w,i=0,n=d.length;i<n;i++)g[c++]=f.fetchIfRef(d[i]);m=parseFloat(t.get(\"MissingWidth\"))||0}else{var k=e.get(\"BaseFont\");if((0,o.isName)(k)){var S=this.getBaseFontMetrics(k.name);g=this.buildCharCodeToWidth(S.widths,r),m=S.defaultWidth}}}var x=!0,C=m;for(var A in g){var I=g[A];if(I)if(C){if(C!==I){x=!1;break}}else C=I}x&&(r.flags|=s.FontFlags.FixedPitch),r.defaultWidth=m,r.widths=g,r.defaultVMetrics=a,r.vmetrics=p},isSerifFont:function(e){var t=e.split(\"-\")[0];return t in(0,h.getSerifFonts)()||-1!==t.search(/serif/gi)},getBaseFontMetrics:function(e){var t=0,r=[],i=!1,n=(0,h.getStdFontMap)()[e]||e,o=(0,p.getMetrics)();n in o||(n=this.isSerifFont(e)?\"Times-Roman\":\"Helvetica\");var s=o[n];return(0,a.isNum)(s)?(t=s,i=!0):r=s(),{defaultWidth:t,monospace:i,widths:r}},buildCharCodeToWidth:function(e,t){for(var r=Object.create(null),a=t.differences,i=t.defaultEncoding,n=0;n<256;n++)n in a&&e[a[n]]?r[n]=e[a[n]]:n in i&&e[i[n]]&&(r[n]=e[i[n]]);return r},preEvaluateFont:function(e){var t=e,r=e.get(\"Subtype\");if(!(0,o.isName)(r))throw new a.FormatError(\"invalid font Subtype\");var i,n=!1;if(\"Type0\"===r.name){var s=e.get(\"DescendantFonts\");if(!s)throw new a.FormatError(\"Descendant fonts are not specified\");if(r=(e=Array.isArray(s)?this.xref.fetchIfRef(s[0]):s).get(\"Subtype\"),!(0,o.isName)(r))throw new a.FormatError(\"invalid font Subtype\");n=!0}var c=e.get(\"FontDescriptor\");if(c){var l=new y.MurmurHash3_64,h=t.getRaw(\"Encoding\");if((0,o.isName)(h))l.update(h.name);else if((0,o.isRef)(h))l.update(h.toString());else if((0,o.isDict)(h))for(var u=h.getKeys(),d=0,f=u.length;d<f;d++){var g=h.getRaw(u[d]);if((0,o.isName)(g))l.update(g.name);else if((0,o.isRef)(g))l.update(g.toString());else if(Array.isArray(g)){for(var m=g.length,p=new Array(m),b=0;b<m;b++){var v=g[b];(0,o.isName)(v)?p[b]=v.name:((0,a.isNum)(v)||(0,o.isRef)(v))&&(p[b]=v.toString())}l.update(p.join())}}var w=e.get(\"ToUnicode\")||t.get(\"ToUnicode\");if((0,o.isStream)(w)){var k=w.str||w;i=k.buffer?new Uint8Array(k.buffer.buffer,0,k.bufferLength):new Uint8Array(k.bytes.buffer,k.start,k.end-k.start),l.update(i)}else(0,o.isName)(w)&&l.update(w.name);var S=e.get(\"Widths\")||t.get(\"Widths\");S&&(i=new Uint8Array(new Uint32Array(S).buffer),l.update(i))}return{descriptor:c,dict:e,baseDict:t,composite:n,type:r.name,hash:l?l.hexdigest():\"\"}},translateFont:function(e){var t,r=this,n=e.baseDict,c=e.dict,l=e.composite,u=e.descriptor,d=e.type,f=l?65535:255;if(!u){if(\"Type3\"!==d){var g=c.get(\"BaseFont\");if(!(0,o.isName)(g))throw new a.FormatError(\"Base font is not specified\");g=g.name.replace(/[,_]/g,\"-\");var m=this.getBaseFontMetrics(g),p=g.split(\"-\")[0],b=(this.isSerifFont(p)?s.FontFlags.Serif:0)|(m.monospace?s.FontFlags.FixedPitch:0)|((0,h.getSymbolsFonts)()[p]?s.FontFlags.Symbolic:s.FontFlags.Nonsymbolic);return t={type:d,name:g,widths:m.widths,defaultWidth:m.defaultWidth,flags:b,firstChar:0,lastChar:f},this.extractDataStructures(c,c,t).then(function(e){return e.widths=r.buildCharCodeToWidth(m.widths,e),new s.Font(g,null,e)})}(u=new o.Dict(null)).set(\"FontName\",o.Name.get(d)),u.set(\"FontBBox\",c.getArray(\"FontBBox\"))}var v=c.get(\"FirstChar\")||0,y=c.get(\"LastChar\")||f,w=u.get(\"FontName\"),k=c.get(\"BaseFont\");if((0,a.isString)(w)&&(w=o.Name.get(w)),(0,a.isString)(k)&&(k=o.Name.get(k)),\"Type3\"!==d){var S=w&&w.name,x=k&&k.name;S!==x&&((0,a.info)(\"The FontDescriptor's FontName is \\\"\"+S+'\" but should be the same as the Font\\'s BaseFont \"'+x+'\"'),S&&x&&0===x.indexOf(S)&&(w=k))}if(w=w||k,!(0,o.isName)(w))throw new a.FormatError(\"invalid font name\");var C,A=u.get(\"FontFile\",\"FontFile2\",\"FontFile3\");if(A&&A.dict){var I=A.dict.get(\"Subtype\");I&&(I=I.name);var F=A.dict.get(\"Length1\"),O=A.dict.get(\"Length2\"),B=A.dict.get(\"Length3\")}if(t={type:d,name:w.name,subtype:I,file:A,length1:F,length2:O,length3:B,loadedName:n.loadedName,composite:l,wideChars:l,fixedPitch:!1,fontMatrix:c.getArray(\"FontMatrix\")||a.FONT_IDENTITY_MATRIX,firstChar:v||0,lastChar:y||f,bbox:u.getArray(\"FontBBox\"),ascent:u.get(\"Ascent\"),descent:u.get(\"Descent\"),xHeight:u.get(\"XHeight\"),capHeight:u.get(\"CapHeight\"),flags:u.get(\"Flags\"),italicAngle:u.get(\"ItalicAngle\"),isType3Font:!1},l){var P=n.get(\"Encoding\");(0,o.isName)(P)&&(t.cidEncoding=P.name),C=i.CMapFactory.create({encoding:P,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){t.cMap=e,t.vertical=t.cMap.vertical})}else C=Promise.resolve(void 0);return C.then(function(){return r.extractDataStructures(c,n,t)}).then(function(e){return r.extractWidths(c,u,e),\"Type3\"===d&&(e.isType3Font=!0),new s.Font(w.name,A,e)})}},r}(),x=function(){function e(e,t,r){this.loadedName=e,this.font=t,this.dict=r,this.type3Loaded=null,this.sent=!1}return e.prototype={send:function(e){if(!this.sent){var t=this.font.exportData();e.send(\"commonobj\",[this.loadedName,\"Font\",t]),this.sent=!0}},loadType3Data:function(e,t,r,i){if(!this.font.isType3Font)throw new Error(\"Must be a Type3 font.\");if(this.type3Loaded)return this.type3Loaded;var n=Object.create(e.options);n.ignoreErrors=!1;for(var o=e.clone(n),s=this.font,c=Promise.resolve(),l=this.dict.get(\"CharProcs\"),h=this.dict.get(\"Resources\")||t,u=l.getKeys(),d=Object.create(null),f=function(){var e=u[g];c=c.then(function(){var t=l.get(e),n=new w.OperatorList;return o.getOperatorList({stream:t,task:i,resources:h,operatorList:n}).then(function(){d[e]=n.getIR(),r.addDependencies(n.dependencies)}).catch(function(t){(0,a.warn)('Type3 font resource \"'+e+'\" is not available.');var r=new w.OperatorList;d[e]=r.getIR()})})},g=0,m=u.length;g<m;++g)f();return this.type3Loaded=c.then(function(){s.charProcOperatorList=d}),this.type3Loaded}},e}(),C=function(){function e(e){this.state=e,this.stateStack=[]}return e.prototype={save:function(){var e=this.state;this.stateStack.push(this.state),this.state=e.clone()},restore:function(){var e=this.stateStack.pop();e&&(this.state=e)},transform:function(e){this.state.ctm=a.Util.transform(this.state.ctm,e)}},e}(),A=function(){function e(){this.ctm=new Float32Array(a.IDENTITY_MATRIX),this.fontName=null,this.fontSize=0,this.font=null,this.fontMatrix=a.FONT_IDENTITY_MATRIX,this.textMatrix=a.IDENTITY_MATRIX.slice(),this.textLineMatrix=a.IDENTITY_MATRIX.slice(),this.charSpacing=0,this.wordSpacing=0,this.leading=0,this.textHScale=1,this.textRise=0}return e.prototype={setTextMatrix:function(e,t,r,a,i,n){var o=this.textMatrix;o[0]=e,o[1]=t,o[2]=r,o[3]=a,o[4]=i,o[5]=n},setTextLineMatrix:function(e,t,r,a,i,n){var o=this.textLineMatrix;o[0]=e,o[1]=t,o[2]=r,o[3]=a,o[4]=i,o[5]=n},translateTextMatrix:function(e,t){var r=this.textMatrix;r[4]=r[0]*e+r[2]*t+r[4],r[5]=r[1]*e+r[3]*t+r[5]},translateTextLineMatrix:function(e,t){var r=this.textLineMatrix;r[4]=r[0]*e+r[2]*t+r[4],r[5]=r[1]*e+r[3]*t+r[5]},calcTextLineMatrixAdvance:function(e,t,r,a,i,n){var o=this.font;if(!o)return null;var s=this.textLineMatrix;if(e!==s[0]||t!==s[1]||r!==s[2]||a!==s[3])return null;var c=i-s[4],l=n-s[5];if(o.vertical&&0!==c||!o.vertical&&0!==l)return null;var h,u,d=e*a-t*r;return o.vertical?(h=-l*r/d,u=l*e/d):(h=c*a/d,u=-c*t/d),{width:h,height:u,value:o.vertical?u:h}},calcRenderMatrix:function(e){var t=[this.fontSize*this.textHScale,0,0,this.fontSize,0,this.textRise];return a.Util.transform(e,a.Util.transform(this.textMatrix,t))},carriageReturn:function(){this.translateTextLineMatrix(0,-this.leading),this.textMatrix=this.textLineMatrix.slice()},clone:function(){var e=Object.create(this);return e.textMatrix=this.textMatrix.slice(),e.textLineMatrix=this.textLineMatrix.slice(),e.fontMatrix=this.fontMatrix.slice(),e}},e}(),I=function(){function e(){this.ctm=new Float32Array(a.IDENTITY_MATRIX),this.font=null,this.textRenderingMode=a.TextRenderingMode.FILL,this.fillColorSpace=g.ColorSpace.singletons.gray,this.strokeColorSpace=g.ColorSpace.singletons.gray}return e.prototype={clone:function(){return Object.create(this)}},e}(),F=function(){var e=(0,a.getLookupTableFactory)(function(e){e.w={id:a.OPS.setLineWidth,numArgs:1,variableArgs:!1},e.J={id:a.OPS.setLineCap,numArgs:1,variableArgs:!1},e.j={id:a.OPS.setLineJoin,numArgs:1,variableArgs:!1},e.M={id:a.OPS.setMiterLimit,numArgs:1,variableArgs:!1},e.d={id:a.OPS.setDash,numArgs:2,variableArgs:!1},e.ri={id:a.OPS.setRenderingIntent,numArgs:1,variableArgs:!1},e.i={id:a.OPS.setFlatness,numArgs:1,variableArgs:!1},e.gs={id:a.OPS.setGState,numArgs:1,variableArgs:!1},e.q={id:a.OPS.save,numArgs:0,variableArgs:!1},e.Q={id:a.OPS.restore,numArgs:0,variableArgs:!1},e.cm={id:a.OPS.transform,numArgs:6,variableArgs:!1},e.m={id:a.OPS.moveTo,numArgs:2,variableArgs:!1},e.l={id:a.OPS.lineTo,numArgs:2,variableArgs:!1},e.c={id:a.OPS.curveTo,numArgs:6,variableArgs:!1},e.v={id:a.OPS.curveTo2,numArgs:4,variableArgs:!1},e.y={id:a.OPS.curveTo3,numArgs:4,variableArgs:!1},e.h={id:a.OPS.closePath,numArgs:0,variableArgs:!1},e.re={id:a.OPS.rectangle,numArgs:4,variableArgs:!1},e.S={id:a.OPS.stroke,numArgs:0,variableArgs:!1},e.s={id:a.OPS.closeStroke,numArgs:0,variableArgs:!1},e.f={id:a.OPS.fill,numArgs:0,variableArgs:!1},e.F={id:a.OPS.fill,numArgs:0,variableArgs:!1},e[\"f*\"]={id:a.OPS.eoFill,numArgs:0,variableArgs:!1},e.B={id:a.OPS.fillStroke,numArgs:0,variableArgs:!1},e[\"B*\"]={id:a.OPS.eoFillStroke,numArgs:0,variableArgs:!1},e.b={id:a.OPS.closeFillStroke,numArgs:0,variableArgs:!1},e[\"b*\"]={id:a.OPS.closeEOFillStroke,numArgs:0,variableArgs:!1},e.n={id:a.OPS.endPath,numArgs:0,variableArgs:!1},e.W={id:a.OPS.clip,numArgs:0,variableArgs:!1},e[\"W*\"]={id:a.OPS.eoClip,numArgs:0,variableArgs:!1},e.BT={id:a.OPS.beginText,numArgs:0,variableArgs:!1},e.ET={id:a.OPS.endText,numArgs:0,variableArgs:!1},e.Tc={id:a.OPS.setCharSpacing,numArgs:1,variableArgs:!1},e.Tw={id:a.OPS.setWordSpacing,numArgs:1,variableArgs:!1},e.Tz={id:a.OPS.setHScale,numArgs:1,variableArgs:!1},e.TL={id:a.OPS.setLeading,numArgs:1,variableArgs:!1},e.Tf={id:a.OPS.setFont,numArgs:2,variableArgs:!1},e.Tr={id:a.OPS.setTextRenderingMode,numArgs:1,variableArgs:!1},e.Ts={id:a.OPS.setTextRise,numArgs:1,variableArgs:!1},e.Td={id:a.OPS.moveText,numArgs:2,variableArgs:!1},e.TD={id:a.OPS.setLeadingMoveText,numArgs:2,variableArgs:!1},e.Tm={id:a.OPS.setTextMatrix,numArgs:6,variableArgs:!1},e[\"T*\"]={id:a.OPS.nextLine,numArgs:0,variableArgs:!1},e.Tj={id:a.OPS.showText,numArgs:1,variableArgs:!1},e.TJ={id:a.OPS.showSpacedText,numArgs:1,variableArgs:!1},e[\"'\"]={id:a.OPS.nextLineShowText,numArgs:1,variableArgs:!1},e['\"']={id:a.OPS.nextLineSetSpacingShowText,numArgs:3,variableArgs:!1},e.d0={id:a.OPS.setCharWidth,numArgs:2,variableArgs:!1},e.d1={id:a.OPS.setCharWidthAndBounds,numArgs:6,variableArgs:!1},e.CS={id:a.OPS.setStrokeColorSpace,numArgs:1,variableArgs:!1},e.cs={id:a.OPS.setFillColorSpace,numArgs:1,variableArgs:!1},e.SC={id:a.OPS.setStrokeColor,numArgs:4,variableArgs:!0},e.SCN={id:a.OPS.setStrokeColorN,numArgs:33,variableArgs:!0},e.sc={id:a.OPS.setFillColor,numArgs:4,variableArgs:!0},e.scn={id:a.OPS.setFillColorN,numArgs:33,variableArgs:!0},e.G={id:a.OPS.setStrokeGray,numArgs:1,variableArgs:!1},e.g={id:a.OPS.setFillGray,numArgs:1,variableArgs:!1},e.RG={id:a.OPS.setStrokeRGBColor,numArgs:3,variableArgs:!1},e.rg={id:a.OPS.setFillRGBColor,numArgs:3,variableArgs:!1},e.K={id:a.OPS.setStrokeCMYKColor,numArgs:4,variableArgs:!1},e.k={id:a.OPS.setFillCMYKColor,numArgs:4,variableArgs:!1},e.sh={id:a.OPS.shadingFill,numArgs:1,variableArgs:!1},e.BI={id:a.OPS.beginInlineImage,numArgs:0,variableArgs:!1},e.ID={id:a.OPS.beginImageData,numArgs:0,variableArgs:!1},e.EI={id:a.OPS.endInlineImage,numArgs:1,variableArgs:!1},e.Do={id:a.OPS.paintXObject,numArgs:1,variableArgs:!1},e.MP={id:a.OPS.markPoint,numArgs:1,variableArgs:!1},e.DP={id:a.OPS.markPointProps,numArgs:2,variableArgs:!1},e.BMC={id:a.OPS.beginMarkedContent,numArgs:1,variableArgs:!1},e.BDC={id:a.OPS.beginMarkedContentProps,numArgs:2,variableArgs:!1},e.EMC={id:a.OPS.endMarkedContent,numArgs:0,variableArgs:!1},e.BX={id:a.OPS.beginCompat,numArgs:0,variableArgs:!1},e.EX={id:a.OPS.endCompat,numArgs:0,variableArgs:!1},e.BM=null,e.BD=null,e.true=null,e.fa=null,e.fal=null,e.fals=null,e.false=null,e.nu=null,e.nul=null,e.null=null});function t(t,r,a){this.opMap=e(),this.parser=new d.Parser(new d.Lexer(t,this.opMap),!1,r),this.stateManager=a,this.nonProcessedArgs=[]}return t.prototype={get savedStatesDepth(){return this.stateManager.stateStack.length},read:function(e){for(var t=e.args;;){var r=this.parser.getObj();if((0,o.isCmd)(r)){var i=r.cmd,n=this.opMap[i];if(!n){(0,a.warn)('Unknown command \"'+i+'\"');continue}var s=n.id,c=n.numArgs,l=null!==t?t.length:0;if(n.variableArgs)l>c&&(0,a.info)(\"Command \"+s+\": expected [0,\"+c+\"] args, but received \"+l+\" args.\");else{if(l!==c){for(var h=this.nonProcessedArgs;l>c;)h.push(t.shift()),l--;for(;l<c&&0!==h.length;)null===t&&(t=[]),t.unshift(h.pop()),l++}if(l<c){(0,a.warn)(\"Skipping command \"+s+\": expected \"+c+\" args, but received \"+l+\" args.\"),null!==t&&(t.length=0);continue}}return this.preprocessCommand(s,t),e.fn=s,e.args=t,!0}if((0,o.isEOF)(r))return!1;if(null!==r&&(null===t&&(t=[]),t.push(r),t.length>33))throw new a.FormatError(\"Too many arguments\")}},preprocessCommand:function(e,t){switch(0|e){case a.OPS.save:this.stateManager.save();break;case a.OPS.restore:this.stateManager.restore();break;case a.OPS.transform:this.stateManager.transform(t)}}},t}();t.PartialEvaluator=S},\"./node_modules/pdfjs-dist/lib/core/font_renderer.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/font_renderer.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FontRendererFactory=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./cff_parser */\"./node_modules/pdfjs-dist/lib/core/cff_parser.js\"),n=r(/*! ./glyphlist */\"./node_modules/pdfjs-dist/lib/core/glyphlist.js\"),o=r(/*! ./encodings */\"./node_modules/pdfjs-dist/lib/core/encodings.js\"),s=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),c=function(){function e(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}function t(e,t){return e[t]<<8|e[t+1]}function r(r,i,n){var o,s,c,l=1===t(r,i+2)?e(r,i+8):e(r,i+16),h=t(r,i+l);if(4===h){t(r,i+l+2);var u=t(r,i+l+6)>>1;for(s=i+l+14,o=[],c=0;c<u;c++,s+=2)o[c]={end:t(r,s)};for(s+=2,c=0;c<u;c++,s+=2)o[c].start=t(r,s);for(c=0;c<u;c++,s+=2)o[c].idDelta=t(r,s);for(c=0;c<u;c++,s+=2){var d=t(r,s);if(0!==d){o[c].ids=[];for(var f=0,g=o[c].end-o[c].start+1;f<g;f++)o[c].ids[f]=t(r,s+d),d+=2}}return o}if(12===h){e(r,i+l+4);var m=e(r,i+l+12);for(s=i+l+16,o=[],c=0;c<m;c++)o.push({start:e(r,s),end:e(r,s+4),idDelta:e(r,s+8)-e(r,s)}),s+=12;return o}throw new a.FormatError(\"unsupported cmap: \"+h)}function c(e,t,r,a){var n=new i.CFFParser(new s.Stream(e,t,r-t),{},a).parse();return{glyphs:n.charStrings.objects,subrs:n.topDict.privateDict&&n.topDict.privateDict.subrsIndex&&n.topDict.privateDict.subrsIndex.objects,gsubrs:n.globalSubrIndex&&n.globalSubrIndex.objects}}function l(e,t){for(var r=t.charCodeAt(0),a=0,i=0,n=e.length-1;i<n;){var o=i+n+1>>1;r<e[o].start?n=o-1:i=o}return e[i].start<=r&&r<=e[i].end&&(a=e[i].idDelta+(e[i].ids?e[i].ids[r-e[i].start]:r)&65535),{charCode:r,glyphId:a}}function h(e){this.compiledGlyphs=Object.create(null),this.compiledCharCodeToGlyphId=Object.create(null),this.fontMatrix=e}function u(e,t,r){r=r||[488e-6,0,0,488e-6,0,0],h.call(this,r),this.glyphs=e,this.cmap=t}function d(e,t,r,a){r=r||[.001,0,0,.001,0,0],h.call(this,r),this.glyphs=e.glyphs,this.gsubrs=e.gsubrs||[],this.subrs=e.subrs||[],this.cmap=t,this.glyphNameMap=a||(0,n.getGlyphsUnicode)(),this.gsubrsBias=this.gsubrs.length<1240?107:this.gsubrs.length<33900?1131:32768,this.subrsBias=this.subrs.length<1240?107:this.subrs.length<33900?1131:32768}return h.prototype={getPathJs:function(e){var t=l(this.cmap,e),r=this.compiledGlyphs[t.glyphId];return r||(r=this.compileGlyph(this.glyphs[t.glyphId]),this.compiledGlyphs[t.glyphId]=r),void 0===this.compiledCharCodeToGlyphId[t.charCode]&&(this.compiledCharCodeToGlyphId[t.charCode]=t.glyphId),r},compileGlyph:function(e){if(!e||0===e.length||14===e[0])return\"\";var t=[];return t.push({cmd:\"save\"}),t.push({cmd:\"transform\",args:this.fontMatrix.slice()}),t.push({cmd:\"scale\",args:[\"size\",\"-size\"]}),this.compileGlyphImpl(e,t),t.push({cmd:\"restore\"}),t},compileGlyphImpl:function(){(0,a.unreachable)(\"Children classes should implement this.\")},hasBuiltPath:function(e){var t=l(this.cmap,e);return void 0!==this.compiledGlyphs[t.glyphId]&&void 0!==this.compiledCharCodeToGlyphId[t.charCode]}},a.Util.inherit(u,h,{compileGlyphImpl:function(e,t){!function e(t,r,a){function i(e,t){r.push({cmd:\"moveTo\",args:[e,t]})}function n(e,t){r.push({cmd:\"lineTo\",args:[e,t]})}function o(e,t,a,i){r.push({cmd:\"quadraticCurveTo\",args:[e,t,a,i]})}var s,c=0,l=(t[c]<<24|t[c+1]<<16)>>16,h=0,u=0;if(c+=10,l<0)do{s=t[c]<<8|t[c+1];var d,f,g=t[c+2]<<8|t[c+3];c+=4,1&s?(d=(t[c]<<24|t[c+1]<<16)>>16,f=(t[c+2]<<24|t[c+3]<<16)>>16,c+=4):(d=t[c++],f=t[c++]),2&s?(h=d,u=f):(h=0,u=0);var m=1,p=1,b=0,v=0;8&s?(m=p=(t[c]<<24|t[c+1]<<16)/1073741824,c+=2):64&s?(m=(t[c]<<24|t[c+1]<<16)/1073741824,p=(t[c+2]<<24|t[c+3]<<16)/1073741824,c+=4):128&s&&(m=(t[c]<<24|t[c+1]<<16)/1073741824,b=(t[c+2]<<24|t[c+3]<<16)/1073741824,v=(t[c+4]<<24|t[c+5]<<16)/1073741824,p=(t[c+6]<<24|t[c+7]<<16)/1073741824,c+=8);var y=a.glyphs[g];y&&(r.push({cmd:\"save\"}),r.push({cmd:\"transform\",args:[m,b,v,p,h,u]}),e(y,r,a),r.push({cmd:\"restore\"}))}while(32&s);else{var w,k,S=[];for(w=0;w<l;w++)S.push(t[c]<<8|t[c+1]),c+=2;c+=2+(t[c]<<8|t[c+1]);for(var x=S[S.length-1]+1,C=[];C.length<x;){var A=1;for(8&(s=t[c++])&&(A+=t[c++]);A-- >0;)C.push({flags:s})}for(w=0;w<x;w++){switch(18&C[w].flags){case 0:h+=(t[c]<<24|t[c+1]<<16)>>16,c+=2;break;case 2:h-=t[c++];break;case 18:h+=t[c++]}C[w].x=h}for(w=0;w<x;w++){switch(36&C[w].flags){case 0:u+=(t[c]<<24|t[c+1]<<16)>>16,c+=2;break;case 4:u-=t[c++];break;case 36:u+=t[c++]}C[w].y=u}var I=0;for(c=0;c<l;c++){var F=S[c],O=C.slice(I,F+1);if(1&O[0].flags)O.push(O[0]);else if(1&O[O.length-1].flags)O.unshift(O[O.length-1]);else{var B={flags:1,x:(O[0].x+O[O.length-1].x)/2,y:(O[0].y+O[O.length-1].y)/2};O.unshift(B),O.push(B)}for(i(O[0].x,O[0].y),w=1,k=O.length;w<k;w++)1&O[w].flags?n(O[w].x,O[w].y):1&O[w+1].flags?(o(O[w].x,O[w].y,O[w+1].x,O[w+1].y),w++):o(O[w].x,O[w].y,(O[w].x+O[w+1].x)/2,(O[w].y+O[w+1].y)/2);I=F+1}}}(e,t,this)}}),a.Util.inherit(d,h,{compileGlyphImpl:function(e,t){!function e(t,r,i){var n=[],s=0,c=0,h=0;function u(e,t){r.push({cmd:\"moveTo\",args:[e,t]})}function d(e,t){r.push({cmd:\"lineTo\",args:[e,t]})}function f(e,t,a,i,n,o){r.push({cmd:\"bezierCurveTo\",args:[e,t,a,i,n,o]})}!function t(g){for(var m=0;m<g.length;){var p,b,v,y,w,k,S,x,C=!1,A=g[m++];switch(A){case 1:case 3:h+=n.length>>1,C=!0;break;case 4:c+=n.pop(),u(s,c),C=!0;break;case 5:for(;n.length>0;)s+=n.shift(),c+=n.shift(),d(s,c);break;case 6:for(;n.length>0&&(d(s+=n.shift(),c),0!==n.length);)c+=n.shift(),d(s,c);break;case 7:for(;n.length>0&&(c+=n.shift(),d(s,c),0!==n.length);)d(s+=n.shift(),c);break;case 8:for(;n.length>0;)p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),f(p,v,b,y,s,c);break;case 10:S=n.pop()+i.subrsBias,(x=i.subrs[S])&&t(x);break;case 11:return;case 12:switch(A=g[m++]){case 34:b=(p=s+n.shift())+n.shift(),w=c+n.shift(),s=b+n.shift(),f(p,c,b,w,s,w),b=(p=s+n.shift())+n.shift(),s=b+n.shift(),f(p,w,b,c,s,c);break;case 35:p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),f(p,v,b,y,s,c),p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),f(p,v,b,y,s,c),n.pop();break;case 36:f(p=s+n.shift(),w=c+n.shift(),b=p+n.shift(),k=w+n.shift(),s=b+n.shift(),k),f(p=s+n.shift(),k,b=p+n.shift(),k+n.shift(),s=b+n.shift(),c);break;case 37:var I=s,F=c;p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),f(p,v,b,y,s,c),p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b,c=y,Math.abs(s-I)>Math.abs(c-F)?s+=n.shift():c+=n.shift(),f(p,v,b,y,s,c);break;default:throw new a.FormatError(\"unknown operator: 12 \"+A)}break;case 14:if(n.length>=4){var O=n.pop(),B=n.pop();c=n.pop(),s=n.pop(),r.push({cmd:\"save\"}),r.push({cmd:\"translate\",args:[s,c]});var P=l(i.cmap,String.fromCharCode(i.glyphNameMap[o.StandardEncoding[O]]));e(i.glyphs[P.glyphId],r,i),r.push({cmd:\"restore\"}),P=l(i.cmap,String.fromCharCode(i.glyphNameMap[o.StandardEncoding[B]])),e(i.glyphs[P.glyphId],r,i)}return;case 18:h+=n.length>>1,C=!0;break;case 19:case 20:m+=(h+=n.length>>1)+7>>3,C=!0;break;case 21:c+=n.pop(),u(s+=n.pop(),c),C=!0;break;case 22:u(s+=n.pop(),c),C=!0;break;case 23:h+=n.length>>1,C=!0;break;case 24:for(;n.length>2;)p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),f(p,v,b,y,s,c);s+=n.shift(),c+=n.shift(),d(s,c);break;case 25:for(;n.length>6;)s+=n.shift(),c+=n.shift(),d(s,c);p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),f(p,v,b,y,s,c);break;case 26:for(n.length%2&&(s+=n.shift());n.length>0;)p=s,v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b,c=y+n.shift(),f(p,v,b,y,s,c);break;case 27:for(n.length%2&&(c+=n.shift());n.length>0;)f(p=s+n.shift(),v=c,b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y);break;case 28:n.push((g[m]<<24|g[m+1]<<16)>>16),m+=2;break;case 29:S=n.pop()+i.gsubrsBias,(x=i.gsubrs[S])&&t(x);break;case 30:for(;n.length>0&&(p=s,v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+(1===n.length?n.shift():0),f(p,v,b,y,s,c),0!==n.length);)p=s+n.shift(),v=c,b=p+n.shift(),y=v+n.shift(),c=y+n.shift(),f(p,v,b,y,s=b+(1===n.length?n.shift():0),c);break;case 31:for(;n.length>0&&(p=s+n.shift(),v=c,b=p+n.shift(),y=v+n.shift(),c=y+n.shift(),f(p,v,b,y,s=b+(1===n.length?n.shift():0),c),0!==n.length);)p=s,v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+(1===n.length?n.shift():0),f(p,v,b,y,s,c);break;default:if(A<32)throw new a.FormatError(\"unknown operator: \"+A);A<247?n.push(A-139):A<251?n.push(256*(A-247)+g[m++]+108):A<255?n.push(256*-(A-251)-g[m++]-108):(n.push((g[m]<<24|g[m+1]<<16|g[m+2]<<8|g[m+3])/65536),m+=4)}C&&(n.length=0)}}(t)}(e,t,this)}}),{create:function(i,n){for(var o,s,l,h,f,g,m=new Uint8Array(i.data),p=t(m,4),b=0,v=12;b<p;b++,v+=16){var y=(0,a.bytesToString)(m.subarray(v,v+4)),w=e(m,v+8),k=e(m,v+12);switch(y){case\"cmap\":o=r(m,w);break;case\"glyf\":s=m.subarray(w,w+k);break;case\"loca\":l=m.subarray(w,w+k);break;case\"head\":g=t(m,w+18),f=t(m,w+50);break;case\"CFF \":h=c(m,w,w+k,n)}}if(s){var S=g?[1/g,0,0,1/g,0,0]:i.fontMatrix;return new u(function(e,t,r){var a,i;r?(a=4,i=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}):(a=2,i=function(e,t){return e[t]<<9|e[t+1]<<1});for(var n=[],o=i(t,0),s=a;s<t.length;s+=a){var c=i(t,s);n.push(e.subarray(o,c)),o=c}return n}(s,l,f),o,S)}return new d(h,o,i.fontMatrix,i.glyphNameMap)}}}();t.FontRendererFactory=c},\"./node_modules/pdfjs-dist/lib/core/fonts.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/fonts.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getFontType=t.ProblematicCharRanges=t.IdentityToUnicodeMap=t.ToUnicodeMap=t.FontFlags=t.Font=t.ErrorFont=t.PRIVATE_USE_OFFSET_END=t.PRIVATE_USE_OFFSET_START=t.SEAC_ANALYSIS_ENABLED=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./cff_parser */\"./node_modules/pdfjs-dist/lib/core/cff_parser.js\"),n=r(/*! ./glyphlist */\"./node_modules/pdfjs-dist/lib/core/glyphlist.js\"),o=r(/*! ./encodings */\"./node_modules/pdfjs-dist/lib/core/encodings.js\"),s=r(/*! ./standard_fonts */\"./node_modules/pdfjs-dist/lib/core/standard_fonts.js\"),c=r(/*! ./unicode */\"./node_modules/pdfjs-dist/lib/core/unicode.js\"),l=r(/*! ./font_renderer */\"./node_modules/pdfjs-dist/lib/core/font_renderer.js\"),h=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),u=r(/*! ./type1_parser */\"./node_modules/pdfjs-dist/lib/core/type1_parser.js\"),d=57344,f=63743,g=!1,m=1e3,p=!1,b={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144},v=[\".notdef\",\".null\",\"nonmarkingreturn\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"nonbreakingspace\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"Lslash\",\"lslash\",\"Scaron\",\"scaron\",\"Zcaron\",\"zcaron\",\"brokenbar\",\"Eth\",\"eth\",\"Yacute\",\"yacute\",\"Thorn\",\"thorn\",\"minus\",\"multiply\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"onehalf\",\"onequarter\",\"threequarters\",\"franc\",\"Gbreve\",\"gbreve\",\"Idotaccent\",\"Scedilla\",\"scedilla\",\"Cacute\",\"cacute\",\"Ccaron\",\"ccaron\",\"dcroat\"];function y(e){if(e.fontMatrix&&e.fontMatrix[0]!==a.FONT_IDENTITY_MATRIX[0]){var t=.001/e.fontMatrix[0],r=e.widths;for(var i in r)r[i]*=t;e.defaultWidth*=t}}function w(e,t){switch(e){case\"Type1\":return\"Type1C\"===t?a.FontType.TYPE1C:a.FontType.TYPE1;case\"CIDFontType0\":return\"CIDFontType0C\"===t?a.FontType.CIDFONTTYPE0C:a.FontType.CIDFONTTYPE0;case\"OpenType\":return a.FontType.OPENTYPE;case\"TrueType\":return a.FontType.TRUETYPE;case\"CIDFontType2\":return a.FontType.CIDFONTTYPE2;case\"MMType1\":return a.FontType.MMTYPE1;case\"Type0\":return a.FontType.TYPE0;default:return a.FontType.UNKNOWN}}function k(e,t){if(void 0!==t[e])return e;var r=(0,c.getUnicodeForGlyph)(e,t);if(-1!==r)for(var i in t)if(t[i]===r)return i;return(0,a.info)(\"Unable to recover a standard glyph name for: \"+e),e}var S=function(){function e(e,t,r,a,i,n,o,s){this.fontChar=e,this.unicode=t,this.accent=r,this.width=a,this.vmetric=i,this.operatorListId=n,this.isSpace=o,this.isInFont=s}return e.prototype.matchesForCache=function(e,t,r,a,i,n,o,s){return this.fontChar===e&&this.unicode===t&&this.accent===r&&this.width===a&&this.vmetric===i&&this.operatorListId===n&&this.isSpace===o&&this.isInFont===s},e}(),x=function(){function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._map=e}return e.prototype={get length(){return this._map.length},forEach:function(e){for(var t in this._map)e(t,this._map[t].charCodeAt(0))},has:function(e){return void 0!==this._map[e]},get:function(e){return this._map[e]},charCodeOf:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var r in t)if(t[r]===e)return 0|r;return-1},amend:function(e){for(var t in e)this._map[t]=e[t]}},e}(),C=function(){function e(e,t){this.firstChar=e,this.lastChar=t}return e.prototype={get length(){return this.lastChar+1-this.firstChar},forEach:function(e){for(var t=this.firstChar,r=this.lastChar;t<=r;t++)e(t,t)},has:function(e){return this.firstChar<=e&&e<=this.lastChar},get:function(e){if(this.firstChar<=e&&e<=this.lastChar)return String.fromCharCode(e)},charCodeOf:function(e){return Number.isInteger(e)&&e>=this.firstChar&&e<=this.lastChar?e:-1},amend:function(e){(0,a.unreachable)(\"Should not call amend()\")}},e}(),A=function(){function e(e,t,r){e[t]=r>>8&255,e[t+1]=255&r}function t(e,t,r){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r}function r(e,t,r){var a,i;if(r instanceof Uint8Array)e.set(r,t);else if(\"string\"==typeof r)for(a=0,i=r.length;a<i;a++)e[t++]=255&r.charCodeAt(a);else for(a=0,i=r.length;a<i;a++)e[t++]=255&r[a]}function i(e){this.sfnt=e,this.tables=Object.create(null)}i.getSearchParams=function(e,t){for(var r=1,a=0;(r^e)>r;)r<<=1,a++;var i=r*t;return{range:i,entry:a,rangeShift:t*e-i}};return i.prototype={toArray:function(){var n=this.sfnt,o=this.tables,s=Object.keys(o);s.sort();var c,l,h,u,d,f=s.length,g=12+16*f,m=[g];for(c=0;c<f;c++){g+=((u=o[s[c]]).length+3&-4)>>>0,m.push(g)}var p=new Uint8Array(g);for(c=0;c<f;c++)u=o[s[c]],r(p,m[c],u);\"true\"===n&&(n=(0,a.string32)(65536)),p[0]=255&n.charCodeAt(0),p[1]=255&n.charCodeAt(1),p[2]=255&n.charCodeAt(2),p[3]=255&n.charCodeAt(3),e(p,4,f);var b=i.getSearchParams(f,16);for(e(p,6,b.range),e(p,8,b.entry),e(p,10,b.rangeShift),g=12,c=0;c<f;c++){d=s[c],p[g]=255&d.charCodeAt(0),p[g+1]=255&d.charCodeAt(1),p[g+2]=255&d.charCodeAt(2),p[g+3]=255&d.charCodeAt(3);var v=0;for(l=m[c],h=m[c+1];l<h;l+=4){v=v+(0,a.readUint32)(p,l)>>>0}t(p,g+4,v),t(p,g+8,m[c]),t(p,g+12,o[d].length),g+=16}return p},addTable:function(e,t){if(e in this.tables)throw new Error(\"Table \"+e+\" already exists\");this.tables[e]=t}},i}(),I=new Int32Array([0,32,127,161,173,174,1536,1920,2208,4256,6016,6144,7168,7248,8192,8208,8209,8210,8232,8240,8287,8304,9676,9677,12288,12289,12644,12645,43616,43648,55296,57344,65520,65536]),F=function(){function e(e,t,r){var i;this.name=e,this.loadedName=r.loadedName,this.isType3Font=r.isType3Font,this.sizes=[],this.missingFile=!1,this.glyphCache=Object.create(null),this.isSerifFont=!!(r.flags&b.Serif),this.isSymbolicFont=!!(r.flags&b.Symbolic),this.isMonospace=!!(r.flags&b.FixedPitch);var n=r.type,o=r.subtype;if(this.type=n,this.subtype=o,this.fallbackName=this.isMonospace?\"monospace\":this.isSerifFont?\"serif\":\"sans-serif\",this.differences=r.differences,this.widths=r.widths,this.defaultWidth=r.defaultWidth,this.composite=r.composite,this.wideChars=r.wideChars,this.cMap=r.cMap,this.ascent=r.ascent/m,this.descent=r.descent/m,this.fontMatrix=r.fontMatrix,this.bbox=r.bbox,this.defaultEncoding=r.defaultEncoding,this.toUnicode=r.toUnicode,this.fallbackToUnicode=r.fallbackToUnicode||new x,this.toFontChar=[],\"Type3\"!==r.type){if(this.cidEncoding=r.cidEncoding,this.vertical=r.vertical,this.vertical&&(this.vmetrics=r.vmetrics,this.defaultVMetrics=r.defaultVMetrics),!t||t.isEmpty)return t&&(0,a.warn)('Font file is empty in \"'+e+'\" ('+this.loadedName+\")\"),void this.fallbackToSystemFont();\"Type1C\"===o&&(\"Type1\"!==n&&\"MMType1\"!==n?!function(e){var t=e.peekBytes(4);return 65536===(0,a.readUint32)(t,0)}(t)?n=\"Type1\":o=\"TrueType\":B(t)&&(o=\"OpenType\")),\"CIDFontType0C\"===o&&\"CIDFontType0\"!==n&&(n=\"CIDFontType0\"),\"CIDFontType0\"===n&&(o=function(e){var t=e.peekBytes(2);if(37===t[0]&&33===t[1])return!0;if(128===t[0]&&1===t[1])return!0;return!1}(t)?\"CIDFontType0\":B(t)?\"OpenType\":\"CIDFontType0C\"),\"OpenType\"===o&&\"OpenType\"!==n&&(n=\"OpenType\");try{var s;switch(n){case\"MMType1\":(0,a.info)(\"MMType1 font (\"+e+\"), falling back to Type1.\");case\"Type1\":case\"CIDFontType0\":this.mimetype=\"font/opentype\";var c=\"Type1C\"===o||\"CIDFontType0C\"===o?new T(t,r):new P(e,t,r);y(r),s=this.convert(e,c,r);break;case\"OpenType\":case\"TrueType\":case\"CIDFontType2\":this.mimetype=\"font/opentype\",s=this.checkAndRepair(e,t,r),this.isOpenType&&(y(r),n=\"OpenType\");break;default:throw new a.FormatError(\"Font \"+n+\" is not supported\")}}catch(e){if(!(e instanceof a.FormatError))throw e;return(0,a.warn)(e),void this.fallbackToSystemFont()}this.data=s,this.fontType=w(n,o),this.fontMatrix=r.fontMatrix,this.widths=r.widths,this.defaultWidth=r.defaultWidth,this.toUnicode=r.toUnicode,this.encoding=r.baseEncoding,this.seacMap=r.seacMap,this.loading=!0}else{for(i=0;i<256;i++)this.toFontChar[i]=this.differences[i]||r.defaultEncoding[i];this.fontType=a.FontType.TYPE3}}var t;function r(e,t){return(e<<8)+t}function u(e,t){var r=(e<<8)+t;return 32768&r?r-65536:r}function F(e){return String.fromCharCode(e>>8&255,255&e)}function O(e){return e=e>32767?32767:e<-32768?-32768:e,String.fromCharCode(e>>8&255,255&e)}function B(e){var t=e.peekBytes(4);return\"OTTO\"===(0,a.bytesToString)(t)}function E(e,t,r){for(var a,i=[],n=0,o=e.length;n<o;n++)-1!==(a=(0,c.getUnicodeForGlyph)(e[n],t))&&(i[n]=a);for(var s in r)-1!==(a=(0,c.getUnicodeForGlyph)(r[s],t))&&(i[+s]=a);return i}function M(e){for(var t=0,r=I.length-1;t<r;){var a=t+r+1>>1;e<I[a]?r=a-1:t=a}return!(1&t)}function D(e,t,r){var i=t.toUnicode,n=!!(t.flags&b.Symbolic),o=t.toUnicode instanceof C,s=Object.create(null),c=[],l=[],h=d;for(var u in e){var m=e[u|=0];if(!r[m]){var p=u,v=!1;if(!o&&i.has(u)){v=!0;var y=i.get(p);1===y.length&&(p=y.charCodeAt(0))}if(void 0!==l[p]||M(p)||n&&!v)do{if(h>f){(0,a.warn)(\"Ran out of space in font private use area.\");break}p=h++,g&&61440===p&&(h=(p=61472)+1)}while(void 0!==l[p]);s[p]=m,c[u]=p,l[p]=!0}}return{toFontChar:c,charCodeToGlyphId:s,nextAvailableFontCharCode:h}}function R(e,t){var r,i,n,o,s=function(e,t){var r=[];for(var a in e)e[a]>=t||r.push({fontCharCode:0|a,glyphId:e[a]});0===r.length&&r.push({fontCharCode:0,glyphId:0}),r.sort(function(e,t){return e.fontCharCode-t.fontCharCode});for(var i=[],n=r.length,o=0;o<n;){var s=r[o].fontCharCode,c=[r[o].glyphId];++o;for(var l=s;o<n&&l+1===r[o].fontCharCode&&(c.push(r[o].glyphId),++o,65535!=++l););i.push([s,l,c])}return i}(e,t),c=s[s.length-1][1]>65535?2:1,l=\"\\0\\0\"+F(c)+\"\\0\u0003\\0\u0001\"+(0,a.string32)(4+8*c);for(r=s.length-1;r>=0&&!(s[r][0]<=65535);--r);var h=r+1;s[r][0]<65535&&65535===s[r][1]&&(s[r][1]=65534);var u,d,f,g,m=s[r][1]<65535?1:0,p=h+m,b=A.getSearchParams(p,2),v=\"\",y=\"\",w=\"\",k=\"\",S=\"\",x=0;for(r=0,i=h;r<i;r++){d=(u=s[r])[0],f=u[1],v+=F(d),y+=F(f);var C=!0;for(n=1,o=(g=u[2]).length;n<o;++n)if(g[n]!==g[n-1]+1){C=!1;break}if(C){w+=F(g[0]-d&65535),k+=F(0)}else{var I=2*(p-r)+2*x;for(x+=f-d+1,w+=F(0),k+=F(I),n=0,o=g.length;n<o;++n)S+=F(g[n])}}m>0&&(y+=\"ÿÿ\",v+=\"ÿÿ\",w+=\"\\0\u0001\",k+=\"\\0\\0\");var O=\"\\0\\0\"+F(2*p)+F(b.range)+F(b.entry)+F(b.rangeShift)+y+\"\\0\\0\"+v+w+k+S,B=\"\",P=\"\";if(c>1){for(l+=\"\\0\u0003\\0\\n\"+(0,a.string32)(4+8*c+4+O.length),B=\"\",r=0,i=s.length;r<i;r++){d=(u=s[r])[0];var T=(g=u[2])[0];for(n=1,o=g.length;n<o;++n)g[n]!==g[n-1]+1&&(f=u[0]+n-1,B+=(0,a.string32)(d)+(0,a.string32)(f)+(0,a.string32)(T),d=f+1,T=g[n]);B+=(0,a.string32)(d)+(0,a.string32)(u[1])+(0,a.string32)(T)}P=\"\\0\\f\\0\\0\"+(0,a.string32)(B.length+16)+\"\\0\\0\\0\\0\"+(0,a.string32)(B.length/12)}return l+\"\\0\u0004\"+F(O.length+4)+O+P+B}function L(e,t,r){r=r||{unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0};var i=0,n=0,o=0,s=0,l=null,h=0;if(t)for(var u in t){(l>(u|=0)||!l)&&(l=u),h<u&&(h=u);var d=(0,c.getUnicodeRangeFor)(u);if(d<32)i|=1<<d;else if(d<64)n|=1<<d-32;else if(d<96)o|=1<<d-64;else{if(!(d<123))throw new a.FormatError(\"Unicode ranges Bits > 123 are reserved for internal usage\");s|=1<<d-96}}else l=0,h=255;var f=e.bbox||[0,0,0,0],g=r.unitsPerEm||1/(e.fontMatrix||a.FONT_IDENTITY_MATRIX)[0],p=e.ascentScaled?1:g/m,b=r.ascent||Math.round(p*(e.ascent||f[3])),v=r.descent||Math.round(p*(e.descent||f[1]));v>0&&e.descent>0&&f[1]<0&&(v=-v);var y=r.yMax||b,w=-r.yMin||-v;return\"\\0\u0003\u0002$\u0001ô\\0\u0005\\0\\0\u0002\u0002»\\0\\0\\0\u0002\u0002»\\0\\0\u0001ß\\x001\u0001\u0002\\0\\0\\0\\0\u0006\"+String.fromCharCode(e.fixedPitch?9:0)+\"\\0\\0\\0\\0\\0\\0\"+(0,a.string32)(i)+(0,a.string32)(n)+(0,a.string32)(o)+(0,a.string32)(s)+\"*21*\"+F(e.italicAngle?1:0)+F(l||e.firstChar)+F(h||e.lastChar)+F(b)+F(v)+\"\\0d\"+F(y)+F(w)+\"\\0\\0\\0\\0\\0\\0\\0\\0\"+F(e.xHeight)+F(e.capHeight)+F(0)+F(l||e.firstChar)+\"\\0\u0003\"}function N(e){var t=Math.floor(e.italicAngle*Math.pow(2,16));return\"\\0\u0003\\0\\0\"+(0,a.string32)(t)+\"\\0\\0\\0\\0\"+(0,a.string32)(e.fixedPitch)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"}function j(e,t){t||(t=[[],[]]);var r,a,i,n,o,s=[t[0][0]||\"Original licence\",t[0][1]||e,t[0][2]||\"Unknown\",t[0][3]||\"uniqueID\",t[0][4]||e,t[0][5]||\"Version 0.11\",t[0][6]||\"\",t[0][7]||\"Unknown\",t[0][8]||\"Unknown\",t[0][9]||\"Unknown\"],c=[];for(r=0,a=s.length;r<a;r++){var l=[];for(i=0,n=(o=t[1][r]||s[r]).length;i<n;i++)l.push(F(o.charCodeAt(i)));c.push(l.join(\"\"))}var h=[s,c],u=[\"\\0\u0001\",\"\\0\u0003\"],d=[\"\\0\\0\",\"\\0\u0001\"],f=[\"\\0\\0\",\"\u0004\\t\"],g=s.length*u.length,m=\"\\0\\0\"+F(g)+F(12*g+6),p=0;for(r=0,a=u.length;r<a;r++){var b=h[r];for(i=0,n=b.length;i<n;i++){o=b[i],m+=u[r]+d[r]+f[r]+F(i)+F(o.length)+F(p),p+=o.length}}return m+=s.join(\"\")+c.join(\"\")}return e.getFontID=(t=1,function(){return String(t++)}),e.prototype={name:null,font:null,mimetype:null,encoding:null,get renderer(){var e=l.FontRendererFactory.create(this,p);return(0,a.shadow)(this,\"renderer\",e)},exportData:function(){var e={};for(var t in this)this.hasOwnProperty(t)&&(e[t]=this[t]);return e},fallbackToSystemFont:function(){var e,t,r=this;this.missingFile=!0;var i=this.name,l=this.type,h=this.subtype,u=i.replace(/[,_]/g,\"-\"),d=(0,s.getStdFontMap)(),f=(0,s.getNonStdFontMap)(),g=!!d[u]||!(!f[u]||!d[f[u]]);if(u=d[u]||f[u]||u,this.bold=-1!==u.search(/bold/gi),this.italic=-1!==u.search(/oblique/gi)||-1!==u.search(/italic/gi),this.black=-1!==i.search(/Black/g),this.remeasure=Object.keys(this.widths).length>0,g&&\"CIDFontType2\"===l&&0===this.cidEncoding.indexOf(\"Identity-\")){var m=(0,s.getGlyphMapForStandardFonts)(),p=[];for(e in m)p[+e]=m[e];if(/Arial-?Black/i.test(i)){var b=(0,s.getSupplementalGlyphMapForArialBlack)();for(e in b)p[+e]=b[e]}else if(/Calibri/i.test(i)){var v=(0,s.getSupplementalGlyphMapForCalibri)();for(e in v)p[+e]=v[e]}this.toUnicode instanceof C||this.toUnicode.forEach(function(e,t){p[+e]=t}),this.toFontChar=p,this.toUnicode=new x(p)}else if(/Symbol/i.test(u))this.toFontChar=E(o.SymbolSetEncoding,(0,n.getGlyphsUnicode)(),this.differences);else if(/Dingbats/i.test(u))/Wingdings/i.test(i)&&(0,a.warn)(\"Non-embedded Wingdings font, falling back to ZapfDingbats.\"),this.toFontChar=E(o.ZapfDingbatsEncoding,(0,n.getDingbatsGlyphsUnicode)(),this.differences);else if(g)this.toFontChar=E(this.defaultEncoding,(0,n.getGlyphsUnicode)(),this.differences);else{var y=(0,n.getGlyphsUnicode)();this.toUnicode.forEach(function(e,a){if(!r.composite){var i=r.differences[e]||r.defaultEncoding[e];-1!==(t=(0,c.getUnicodeForGlyph)(i,y))&&(a=t)}r.toFontChar[e]=a})}this.loadedName=u.split(\"-\")[0],this.loading=!1,this.fontType=w(l,h)},checkAndRepair:function(e,t,s){var c=[\"OS/2\",\"cmap\",\"head\",\"hhea\",\"hmtx\",\"maxp\",\"name\",\"post\",\"loca\",\"glyf\",\"fpgm\",\"prep\",\"cvt \",\"CFF \"];function l(e,r){var a=Object.create(null);a[\"OS/2\"]=null,a.cmap=null,a.head=null,a.hhea=null,a.hmtx=null,a.maxp=null,a.name=null,a.post=null;for(var i=0;i<r;i++){var n=d(t);c.indexOf(n.tag)<0||0!==n.length&&(a[n.tag]=n)}return a}function d(e){var t=(0,a.bytesToString)(e.getBytes(4)),r=e.getInt32()>>>0,i=e.getInt32()>>>0,n=e.getInt32()>>>0,o=e.pos;e.pos=e.start?e.start:0,e.skip(i);var s=e.getBytes(n);return e.pos=o,\"head\"===t&&(s[8]=s[9]=s[10]=s[11]=0,s[17]|=32),{tag:t,checksum:r,length:n,offset:i,data:s}}function f(e){return{version:(0,a.bytesToString)(e.getBytes(4)),numTables:e.getUint16(),searchRange:e.getUint16(),entrySelector:e.getUint16(),rangeShift:e.getUint16()}}function g(e,t,r,a,i,n){var o={length:0,sizeOfInstructions:0};if(r-t<=12)return o;var s,c,l,h=e.subarray(t,r),d=u(h[0],h[1]);if(d<0)return l=d=-1,(s=h)[(c=0)+1]=l,s[c]=l>>>8,a.set(h,i),o.length=h.length,o;var f,g=10,m=0;for(f=0;f<d;f++){m=(h[g]<<8|h[g+1])+1,g+=2}var p=g,b=h[g]<<8|h[g+1];o.sizeOfInstructions=b;var v=g+=2+b,y=0;for(f=0;f<m;f++){var w=h[g++];192&w&&(h[g-1]=63&w);var k=(2&w?1:16&w?0:2)+(4&w?1:32&w?0:2);if(y+=k,8&w){var S=h[g++];f+=S,y+=S*k}}if(0===y)return o;var x=g+y;return x>h.length?o:!n&&b>0?(a.set(h.subarray(0,p),i),a.set([0,0],i+p),a.set(h.subarray(v,x),i+p+2),x-=b,h.length-x>3&&(x=x+3&-4),o.length=x,o):h.length-x>3?(x=x+3&-4,a.set(h.subarray(0,x),i),o.length=x,o):(a.set(h,i),o.length=h.length,o)}function m(e){var r=(t.start?t.start:0)+e.offset;t.pos=r;var i=[[],[]],n=e.length,o=r+n;if(0!==t.getUint16()||n<6)return i;var s,c,l=t.getUint16(),h=t.getUint16(),u=[];for(s=0;s<l&&t.pos+12<=o;s++){var d={platform:t.getUint16(),encoding:t.getUint16(),language:t.getUint16(),name:t.getUint16(),length:t.getUint16(),offset:t.getUint16()};(1===d.platform&&0===d.encoding&&0===d.language||3===d.platform&&1===d.encoding&&1033===d.language)&&u.push(d)}for(s=0,c=u.length;s<c;s++){var f=u[s];if(!(f.length<=0)){var g=r+h+f.offset;if(!(g+f.length>o)){t.pos=g;var m=f.name;if(f.encoding){for(var p=\"\",b=0,v=f.length;b<v;b+=2)p+=String.fromCharCode(t.getUint16());i[1][m]=p}else i[0][m]=(0,a.bytesToString)(t.getBytes(f.length))}}}return i}var b=[0,0,0,0,0,0,0,0,-2,-2,-2,-2,0,0,-2,-5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,-1,-1,1,-1,-999,0,1,0,-1,-2,0,-1,-2,-1,-1,0,-1,-1,0,0,-999,-999,-1,-1,-1,-1,-2,-999,-2,-2,-999,0,-2,-2,0,0,-2,0,-2,0,0,0,-2,-1,-1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,0,-999,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-999,-999,-999,-999,-999,-1,-1,-2,-2,0,0,0,0,-1,-1,-999,-2,-2,0,0,-1,-2,-2,0,0,0,-1,-1,-1,-2];function w(e,t){for(var r,i,n,o,s,c=e.data,l=0,h=0,u=0,d=[],f=[],g=[],m=t.tooComplexToFollowFunctions,p=!1,v=0,y=0,w=c.length;l<w;){var k=c[l++];if(64===k)if(i=c[l++],p||y)l+=i;else for(r=0;r<i;r++)d.push(c[l++]);else if(65===k)if(i=c[l++],p||y)l+=2*i;else for(r=0;r<i;r++)n=c[l++],d.push(n<<8|c[l++]);else if(176==(248&k))if(i=k-176+1,p||y)l+=i;else for(r=0;r<i;r++)d.push(c[l++]);else if(184==(248&k))if(i=k-184+1,p||y)l+=2*i;else for(r=0;r<i;r++)n=c[l++],d.push(n<<8|c[l++]);else if(43!==k||m)if(44!==k||m){if(45===k)if(p)p=!1,h=l;else{if(!(s=f.pop()))return(0,a.warn)(\"TT: ENDF bad stack\"),void(t.hintsValid=!1);o=g.pop(),c=s.data,l=s.i,t.functionsStackDeltas[o]=d.length-s.stackTop}else if(137===k)(p||y)&&((0,a.warn)(\"TT: nested IDEFs not allowed\"),m=!0),p=!0,u=l;else if(88===k)++v;else if(27===k)y=v;else if(89===k)y===v&&(y=0),--v;else if(28===k&&!p&&!y){var S=d[d.length-1];S>0&&(l+=S-1)}}else(p||y)&&((0,a.warn)(\"TT: nested FDEFs not allowed\"),m=!0),p=!0,u=l,o=d.pop(),t.functionsDefined[o]={data:c,i:l};else if(!p&&!y)if(o=d[d.length-1],t.functionsUsed[o]=!0,o in t.functionsStackDeltas)d.length+=t.functionsStackDeltas[o];else if(o in t.functionsDefined&&g.indexOf(o)<0){if(f.push({data:c,i:l,stackTop:d.length-1}),g.push(o),!(s=t.functionsDefined[o]))return(0,a.warn)(\"TT: CALL non-existent function\"),void(t.hintsValid=!1);c=s.data,l=s.i}if(!p&&!y){var x=k<=142?b[k]:k>=192&&k<=223?-1:k>=224?-2:0;for(k>=113&&k<=117&&(i=d.pop(),isNaN(i)||(x=2*-i));x<0&&d.length>0;)d.pop(),x++;for(;x>0;)d.push(NaN),x--}}t.tooComplexToFollowFunctions=m;var C=[c];l>c.length&&C.push(new Uint8Array(l-c.length)),u>h&&((0,a.warn)(\"TT: complementing a missing function tail\"),C.push(new Uint8Array([34,45]))),function(e,t){if(t.length>1){var r,a,i=0;for(r=0,a=t.length;r<a;r++)i+=t[r].length;i=i+3&-4;var n=new Uint8Array(i),o=0;for(r=0,a=t.length;r<a;r++)n.set(t[r],o),o+=t[r].length;e.data=n,e.length=i}}(e,C)}var S=void 0,x=void 0;if(function(e){var t=e.peekBytes(4);return\"ttcf\"===(0,a.bytesToString)(t)}(t=new h.Stream(new Uint8Array(t.getBytes())))){var C=function(e,t){for(var r=function(e){var t=(0,a.bytesToString)(e.getBytes(4));(0,a.assert)(\"ttcf\"===t,\"Must be a TrueType Collection font.\");for(var r=e.getUint16(),i=e.getUint16(),n=e.getInt32()>>>0,o=[],s=0;s<n;s++)o.push(e.getInt32()>>>0);var c={ttcTag:t,majorVersion:r,minorVersion:i,numFonts:n,offsetTable:o};switch(r){case 1:return c;case 2:return c.dsigTag=e.getInt32()>>>0,c.dsigLength=e.getInt32()>>>0,c.dsigOffset=e.getInt32()>>>0,c}throw new a.FormatError(\"Invalid TrueType Collection majorVersion: \"+r+\".\")}(e),i=r.numFonts,n=r.offsetTable,o=0;o<i;o++){e.pos=(e.start||0)+n[o];var s=f(e),c=l(0,s.numTables);if(!c.name)throw new a.FormatError('TrueType Collection font must contain a \"name\" table.');for(var h=m(c.name),u=0,d=h.length;u<d;u++)for(var g=0,p=h[u].length;g<p;g++){var b=h[u][g];if(b&&b.replace(/\\s/g,\"\")===t)return{header:s,tables:c}}}throw new a.FormatError('TrueType Collection does not contain \"'+t+'\" font.')}(t,this.name);S=C.header,x=C.tables}else x=l(0,(S=f(t)).numTables);var I=void 0,F=void 0,O=!x[\"CFF \"];if(O){if(!x.loca)throw new a.FormatError('Required \"loca\" table is not found');x.glyf||((0,a.warn)('Required \"glyf\" table is not found -- trying to recover.'),x.glyf={tag:\"glyf\",data:new Uint8Array(0)}),this.isOpenType=!1}else{if(!((\"OTTO\"!==S.version||s.composite&&s.cidToGidMap)&&x.head&&x.hhea&&x.maxp&&x.post))return F=new h.Stream(x[\"CFF \"].data),I=new T(F,s),y(s),this.convert(e,I,s);delete x.glyf,delete x.loca,delete x.fpgm,delete x.prep,delete x[\"cvt \"],this.isOpenType=!0}if(!x.maxp)throw new a.FormatError('Required \"maxp\" table is not found');t.pos=(t.start||0)+x.maxp.offset;var B=t.getInt32(),P=t.getUint16(),E=0,M=0;B>=65536&&x.maxp.length>=22&&(t.pos+=8,t.getUint16()>2&&(x.maxp.data[14]=0,x.maxp.data[15]=2),t.pos+=4,E=t.getUint16(),t.pos+=6,M=t.getUint16());var U=!1;\"CIDFontType2\"===s.type&&s.toUnicode&&s.toUnicode.get(0)>\"\\0\"&&(U=!0,P++,x.maxp.data[4]=P>>8,x.maxp.data[5]=255&P);var _=function(e,t,r,i){var n={functionsDefined:[],functionsUsed:[],functionsStackDeltas:[],tooComplexToFollowFunctions:!1,hintsValid:!0};if(e&&w(e,n),t&&w(t,n),e&&function(e,t){if(!e.tooComplexToFollowFunctions){if(e.functionsDefined.length>t)return(0,a.warn)(\"TT: more functions defined than expected\"),void(e.hintsValid=!1);for(var r=0,i=e.functionsUsed.length;r<i;r++){if(r>t)return(0,a.warn)(\"TT: invalid function id: \"+r),void(e.hintsValid=!1);if(e.functionsUsed[r]&&!e.functionsDefined[r])return(0,a.warn)(\"TT: undefined function: \"+r),void(e.hintsValid=!1)}}}(n,i),r&&1&r.length){var o=new Uint8Array(r.length+1);o.set(r.data),r.data=o}return n.hintsValid}(x.fpgm,x.prep,x[\"cvt \"],E);if(_||(delete x.fpgm,delete x.prep,delete x[\"cvt \"]),function(e,t,r,i){if(t){e.pos=(e.start?e.start:0)+t.offset,e.pos+=t.length-2;var n=e.getUint16();n>i&&((0,a.info)(\"The numOfMetrics (\"+n+\") should not be greater than the numGlyphs (\"+i+\")\"),n=i,t.data[34]=(65280&n)>>8,t.data[35]=255&n);var o=i-n-(r.length-4*n>>1);if(o>0){var s=new Uint8Array(r.length+2*o);s.set(r.data),r.data=s}}else r&&(r.data=null)}(t,x.hhea,x.hmtx,P),!x.head)throw new a.FormatError('Required \"head\" table is not found');!function(e,t,i){var n,o,s,c,l=e.data,h=(n=l[0],o=l[1],s=l[2],c=l[3],(n<<24)+(o<<16)+(s<<8)+c);h>>16!=1&&((0,a.info)(\"Attempting to fix invalid version in head table: \"+h),l[0]=0,l[1]=1,l[2]=0,l[3]=0);var u=r(l[50],l[51]);if(u<0||u>1){(0,a.info)(\"Attempting to fix invalid indexToLocFormat in head table: \"+u);var d=t+1;if(i===d<<1)l[50]=0,l[51]=0;else{if(i!==d<<2)throw new a.FormatError(\"Could not fix indexToLocFormat: \"+u);l[50]=0,l[51]=1}}}(x.head,P,O?x.loca.length:0);var q=Object.create(null);if(O){var z=r(x.head.data[50],x.head.data[51]),H=function(e,t,r,a,i,n,o){var s,c,l;a?(s=4,c=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]},l=function(e,t,r){e[t]=r>>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r}):(s=2,c=function(e,t){return e[t]<<9|e[t+1]<<1},l=function(e,t,r){e[t]=r>>9&255,e[t+1]=r>>1&255});var h=e.data,u=s*(1+r);h.length!==u&&((h=new Uint8Array(u)).set(e.data.subarray(0,u)),e.data=h);var d,f,m=t.data,p=m.length,b=new Uint8Array(p),v=c(h,0),y=0,w=Object.create(null);l(h,0,y);var k=n?r-1:r;for(d=0,f=s;d<k;d++,f+=s){var S=c(h,f);0===S&&(S=v),S>p&&(p+3&-4)===S&&(S=p),S>p&&(v=S);var x=g(m,v,S,b,y,i),C=x.length;0===C&&(w[d]=!0),x.sizeOfInstructions>o&&(o=x.sizeOfInstructions),l(h,f,y+=C),v=S}if(0===y){var A=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);for(d=0,f=s;d<r;d++,f+=s)l(h,f,A.length);t.data=A}else if(n){var I=c(h,s);b.length>I+y?t.data=b.subarray(0,I+y):(t.data=new Uint8Array(I+y),t.data.set(b.subarray(0,y))),t.data.set(b.subarray(0,I),y),l(e.data,h.length-s,y+I)}else t.data=b.subarray(0,y);return{missingGlyphs:w,maxSizeOfInstructions:o}}(x.loca,x.glyf,P,z,_,U,M);q=H.missingGlyphs,B>=65536&&x.maxp.length>=22&&(x.maxp.data[26]=H.maxSizeOfInstructions>>8,x.maxp.data[27]=255&H.maxSizeOfInstructions)}if(!x.hhea)throw new a.FormatError('Required \"hhea\" table is not found');0===x.hhea.data[10]&&0===x.hhea.data[11]&&(x.hhea.data[10]=255,x.hhea.data[11]=255);var G={unitsPerEm:r(x.head.data[18],x.head.data[19]),yMax:r(x.head.data[42],x.head.data[43]),yMin:u(x.head.data[38],x.head.data[39]),ascent:r(x.hhea.data[4],x.hhea.data[5]),descent:u(x.hhea.data[6],x.hhea.data[7])};(this.ascent=G.ascent/G.unitsPerEm,this.descent=G.descent/G.unitsPerEm,x.post)&&(function(e,r,i){var n=(t.start?t.start:0)+e.offset;t.pos=n;var o,s=n+e.length,c=t.getInt32();t.getBytes(28);var l,h=!0;switch(c){case 65536:o=v;break;case 131072:var u=t.getUint16();if(u!==i){h=!1;break}var d=[];for(l=0;l<u;++l){var f=t.getUint16();if(f>=32768){h=!1;break}d.push(f)}if(!h)break;for(var g=[],m=[];t.pos<s;){var p=t.getByte();for(m.length=p,l=0;l<p;++l)m[l]=String.fromCharCode(t.getByte());g.push(m.join(\"\"))}for(o=[],l=0;l<u;++l){var b=d[l];b<258?o.push(v[b]):o.push(g[b-258])}break;case 196608:break;default:(0,a.warn)(\"Unknown/unsupported post table version \"+c),h=!1,r.defaultEncoding&&(o=r.defaultEncoding)}return r.glyphNames=o,h}(x.post,s,P)||(x.post=null));var X,W=[];function V(e){return!q[e]}if(s.composite){var K=s.cidToGidMap||[],Y=0===K.length;s.cMap.forEach(function(e,t){if(t>65535)throw new a.FormatError(\"Max size of CID is 65,535\");var r=-1;Y?r=t:void 0!==K[t]&&(r=K[t]),r>=0&&r<P&&V(r)&&(W[e]=r)}),!U||!Y&&W[0]||(W[0]=P-1)}else{var J=function(e,t,r,i){if(!e)return(0,a.warn)(\"No cmap table available.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var n,o=(t.start?t.start:0)+e.offset;t.pos=o,t.getUint16();for(var s,c=t.getUint16(),l=!1,h=0;h<c;h++){var u=t.getUint16(),d=t.getUint16(),f=t.getInt32()>>>0,g=!1;if((!s||s.platformId!==u||s.encodingId!==d)&&(0===u&&0===d?g=!0:1===u&&0===d?g=!0:3!==u||1!==d||!i&&s?r&&3===u&&0===d&&(g=!0,l=!0):(g=!0,r||(l=!0)),g&&(s={platformId:u,encodingId:d,offset:f}),l))break}if(s&&(t.pos=o+s.offset),!s||-1===t.peekByte())return(0,a.warn)(\"Could not find a preferred cmap table.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var m=t.getUint16();t.getUint16(),t.getUint16();var p,b,v=!1,y=[];if(0===m){for(p=0;p<256;p++){var w=t.getByte();w&&y.push({charCode:p,glyphId:w})}v=!0}else if(4===m){var k=t.getUint16()>>1;t.getBytes(6);var S,x=[];for(S=0;S<k;S++)x.push({end:t.getUint16()});for(t.getUint16(),S=0;S<k;S++)x[S].start=t.getUint16();for(S=0;S<k;S++)x[S].delta=t.getUint16();var C=0;for(S=0;S<k;S++){n=x[S];var A=t.getUint16();if(A){var I=(A>>1)-(k-S);n.offsetIndex=I,C=Math.max(C,I+n.end-n.start+1)}else n.offsetIndex=-1}var F=[];for(p=0;p<C;p++)F.push(t.getUint16());for(S=0;S<k;S++){o=(n=x[S]).start;var O=n.end,B=n.delta;for(I=n.offsetIndex,p=o;p<=O;p++)65535!==p&&(b=(b=I<0?p:F[I+p-o])+B&65535,y.push({charCode:p,glyphId:b}))}}else{if(6!==m)return(0,a.warn)(\"cmap table has unsupported format: \"+m),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var P=t.getUint16(),T=t.getUint16();for(p=0;p<T;p++){b=t.getUint16();var E=P+p;y.push({charCode:E,glyphId:b})}}for(y.sort(function(e,t){return e.charCode-t.charCode}),h=1;h<y.length;h++)y[h-1].charCode===y[h].charCode&&(y.splice(h,1),h--);return{platformId:s.platformId,encodingId:s.encodingId,mappings:y,hasShortCmap:v}}(x.cmap,t,this.isSymbolicFont,s.hasEncoding),Z=J.platformId,Q=J.encodingId,$=J.mappings,ee=$.length;if(s.hasEncoding&&(3===Z&&1===Q||1===Z&&0===Q)||-1===Z&&-1===Q&&(0,o.getEncoding)(s.baseEncodingName)){var te=[];\"MacRomanEncoding\"!==s.baseEncodingName&&\"WinAnsiEncoding\"!==s.baseEncodingName||(te=(0,o.getEncoding)(s.baseEncodingName));var re=(0,n.getGlyphsUnicode)();for(X=0;X<256;X++){var ae,ie;if(ae=this.differences&&X in this.differences?this.differences[X]:X in te&&\"\"!==te[X]?te[X]:o.StandardEncoding[X]){var ne;ie=k(ae,re),3===Z&&1===Q?ne=re[ie]:1===Z&&0===Q&&(ne=o.MacRomanEncoding.indexOf(ie));for(var oe=!1,se=0;se<ee;++se)if($[se].charCode===ne){W[X]=$[se].glyphId,oe=!0;break}if(!oe&&s.glyphNames){var ce=s.glyphNames.indexOf(ae);-1===ce&&ie!==ae&&(ce=s.glyphNames.indexOf(ie)),ce>0&&V(ce)&&(W[X]=ce)}}}}else if(0===Z&&0===Q)for(var le=0;le<ee;++le)W[$[le].charCode]=$[le].glyphId;else for(var he=0;he<ee;++he)X=$[he].charCode,3===Z&&X>=61440&&X<=61695&&(X&=255),W[X]=$[he].glyphId}0===W.length&&(W[0]=0);var ue=D(W,s,q);if(this.toFontChar=ue.toFontChar,x.cmap={tag:\"cmap\",data:R(ue.charCodeToGlyphId,P)},x[\"OS/2\"]&&function(e){var t=new h.Stream(e.data),r=t.getUint16();t.getBytes(60);var a=t.getUint16();return!(r<4&&768&a||t.getUint16()>t.getUint16()||(t.getBytes(6),0===t.getUint16()||(e.data[8]=e.data[9]=0,0)))}(x[\"OS/2\"])||(x[\"OS/2\"]={tag:\"OS/2\",data:L(s,ue.charCodeToGlyphId,G)}),x.post||(x.post={tag:\"post\",data:N(s)}),!O)try{F=new h.Stream(x[\"CFF \"].data),I=new i.CFFParser(F,s,p).parse();var de=new i.CFFCompiler(I);x[\"CFF \"].data=de.compile()}catch(e){(0,a.warn)(\"Failed to compile font \"+s.loadedName)}if(x.name){var fe=m(x.name);x.name.data=j(e,fe)}else x.name={tag:\"name\",data:j(this.name)};var ge=new A(S.version);for(var me in x)ge.addTable(me,x[me].data);return ge.toArray()},convert:function(e,t,r){r.fixedPitch=!1,r.builtInEncoding&&function(e,t){if(!e.hasIncludedToUnicodeMap&&!(e.hasEncoding||t===e.defaultEncoding||e.toUnicode instanceof C)){var r=[],a=(0,n.getGlyphsUnicode)();for(var i in t){var o=t[i],s=(0,c.getUnicodeForGlyph)(o,a);-1!==s&&(r[i]=String.fromCharCode(s))}e.toUnicode.amend(r)}}(r,r.builtInEncoding);var i=t.getGlyphMapping(r),s=D(i,r,Object.create(null));this.toFontChar=s.toFontChar;var l=t.numGlyphs;function h(e,t){var r=null;for(var a in e)t===e[a]&&(r||(r=[]),r.push(0|a));return r}function u(e,t){for(var r in e)if(t===e[r])return 0|r;return s.charCodeToGlyphId[s.nextAvailableFontCharCode]=t,s.nextAvailableFontCharCode++}var d=t.seacs;if(p&&d&&d.length){var f=r.fontMatrix||a.FONT_IDENTITY_MATRIX,g=t.getCharset(),m=Object.create(null);for(var b in d){var v=d[b|=0],y=o.StandardEncoding[v[2]],w=o.StandardEncoding[v[3]],k=g.indexOf(y),S=g.indexOf(w);if(!(k<0||S<0)){var x={x:v[0]*f[0]+v[1]*f[2]+f[4],y:v[0]*f[1]+v[1]*f[3]+f[5]},I=h(i,b);if(I)for(var B=0,P=I.length;B<P;B++){var T=I[B],E=s.charCodeToGlyphId,M=u(E,k),U=u(E,S);m[T]={baseFontCharCode:M,accentFontCharCode:U,accentOffset:x}}}}r.seacMap=m}var _=1/(r.fontMatrix||a.FONT_IDENTITY_MATRIX)[0],q=new A(\"OTTO\");return q.addTable(\"CFF \",t.data),q.addTable(\"OS/2\",L(r,s.charCodeToGlyphId)),q.addTable(\"cmap\",R(s.charCodeToGlyphId,l)),q.addTable(\"head\",\"\\0\u0001\\0\\0\\0\\0\u0010\\0\\0\\0\\0\\0_\u000f<õ\\0\\0\"+O(_)+\"\\0\\0\\0\\0\\v~'\\0\\0\\0\\0\\v~'\\0\\0\"+O(r.descent)+\"\u000fÿ\"+O(r.ascent)+F(r.italicAngle?2:0)+\"\\0\u0011\\0\\0\\0\\0\\0\\0\"),q.addTable(\"hhea\",\"\\0\u0001\\0\\0\"+O(r.ascent)+O(r.descent)+\"\\0\\0ÿÿ\\0\\0\\0\\0\\0\\0\"+O(r.capHeight)+O(Math.tan(r.italicAngle)*r.xHeight)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"+F(l)),q.addTable(\"hmtx\",function(){for(var e=t.charstrings,r=t.cff?t.cff.widths:null,a=\"\\0\\0\\0\\0\",i=1,n=l;i<n;i++){var o=0;if(e){var s=e[i-1];o=\"width\"in s?s.width:0}else r&&(o=Math.ceil(r[i]||0));a+=F(o)+F(0)}return a}()),q.addTable(\"maxp\",\"\\0\\0P\\0\"+F(l)),q.addTable(\"name\",j(e)),q.addTable(\"post\",N(r)),q.toArray()},get spaceWidth(){if(\"_shadowWidth\"in this)return this._shadowWidth;for(var e,t=[\"space\",\"minus\",\"one\",\"i\",\"I\"],r=0,a=t.length;r<a;r++){var i=t[r];if(i in this.widths){e=this.widths[i];break}var o=(0,n.getGlyphsUnicode)()[i],s=0;if(this.composite&&this.cMap.contains(o)&&(s=this.cMap.lookup(o)),!s&&this.toUnicode&&(s=this.toUnicode.charCodeOf(o)),s<=0&&(s=o),e=this.widths[s])break}return e=e||this.defaultWidth,this._shadowWidth=e,e},charToGlyph:function(e,t){var r,i,n,o=e;this.cMap&&this.cMap.contains(e)&&(o=this.cMap.lookup(e)),i=this.widths[o],i=(0,a.isNum)(i)?i:this.defaultWidth;var s=this.vmetrics&&this.vmetrics[o],l=this.toUnicode.get(e)||this.fallbackToUnicode.get(e)||e;\"number\"==typeof l&&(l=String.fromCharCode(l));var h=e in this.toFontChar;r=this.toFontChar[e]||e,this.missingFile&&(r=(0,c.mapSpecialUnicodeValues)(r)),this.isType3Font&&(n=r);var u=null;if(this.seacMap&&this.seacMap[e]){h=!0;var d=this.seacMap[e];r=d.baseFontCharCode,u={fontChar:String.fromCharCode(d.accentFontCharCode),offset:d.accentOffset}}var f=String.fromCharCode(r),g=this.glyphCache[e];return g&&g.matchesForCache(f,l,u,i,s,n,t,h)||(g=new S(f,l,u,i,s,n,t,h),this.glyphCache[e]=g),g},charsToGlyphs:function(e){var t,r,a,i=this.charsCache;if(i&&(t=i[e]))return t;i||(i=this.charsCache=Object.create(null)),t=[];var n,o=e,s=0;if(this.cMap)for(var c=Object.create(null);s<e.length;){this.cMap.readCharCode(e,s,c),a=c.charcode;var l=c.length;s+=l;var h=1===l&&32===e.charCodeAt(s-1);r=this.charToGlyph(a,h),t.push(r)}else for(s=0,n=e.length;s<n;++s)a=e.charCodeAt(s),r=this.charToGlyph(a,32===a),t.push(r);return i[o]=t}},e}(),O=function(){function e(e){this.error=e,this.loadedName=\"g_font_error\",this.loading=!1}return e.prototype={charsToGlyphs:function(){return[]},exportData:function(){return{error:this.error}}},e}();function B(e,t,r){var a,i,s,c=Object.create(null),l=!!(e.flags&b.Symbolic);if(e.baseEncodingName)for(s=(0,o.getEncoding)(e.baseEncodingName),i=0;i<s.length;i++)a=r.indexOf(s[i]),c[i]=a>=0?a:0;else if(l)for(i in t)c[i]=t[i];else for(s=o.StandardEncoding,i=0;i<s.length;i++)a=r.indexOf(s[i]),c[i]=a>=0?a:0;var h,u=e.differences;if(u)for(i in u){var d=u[i];if(-1===(a=r.indexOf(d))){h||(h=(0,n.getGlyphsUnicode)());var f=k(d,h);f!==d&&(a=r.indexOf(f))}c[i]=a>=0?a:0}return c}var P=function(){function e(e,t,r){for(var i,n=e.length,o=t.length,s=n-o,c=r,l=!1;c<s;){for(i=0;i<o&&e[c+i]===t[i];)i++;if(i>=o){for(c+=i;c<n&&(0,a.isSpace)(e[c]);)c++;l=!0;break}c++}return{found:l,length:c}}function t(t,r,i){var n=i.length1,o=(i.length2,r.peekBytes(6)),s=128===o[0]&&1===o[1];s&&(r.skip(6),n=o[5]<<24|o[4]<<16|o[3]<<8|o[2]);var c=function(t,r){var i,n,o,s,c=[101,101,120,101,99],l=t.pos;try{n=(i=t.getBytes(r)).length}catch(e){if(e instanceof a.MissingDataException)throw e}if(n===r&&(o=e(i,c,r-2*c.length)).found&&o.length===r)return{stream:new h.Stream(i),length:r};for((0,a.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.'),t.pos=l;0!==(o=e(t.peekBytes(2048),c,0)).length;)if(t.pos+=o.length,o.found){s=t.pos-l;break}return t.pos=l,s?{stream:new h.Stream(t.getBytes(s)),length:s}:((0,a.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.'),{stream:new h.Stream(t.getBytes(r)),length:r})}(r,n);new u.Type1Parser(c.stream,!1,p).extractFontHeader(i),s&&((o=r.getBytes(6))[5],o[4],o[3],o[2]);var l,d=(l=r.getBytes(),{stream:new h.Stream(l),length:l.length}),f=new u.Type1Parser(d.stream,!0,p).extractFontProgram();for(var g in f.properties)i[g]=f.properties[g];var m=f.charstrings,b=this.getType2Charstrings(m),v=this.getType2Subrs(f.subrs);this.charstrings=m,this.data=this.wrap(t,b,this.charstrings,v,i),this.seacs=this.getSeacs(f.charstrings)}return t.prototype={get numGlyphs(){return this.charstrings.length+1},getCharset:function(){for(var e=[\".notdef\"],t=this.charstrings,r=0;r<t.length;r++)e.push(t[r].glyphName);return e},getGlyphMapping:function(e){var t,r=this.charstrings,a=[\".notdef\"];for(t=0;t<r.length;t++)a.push(r[t].glyphName);var i=e.builtInEncoding;if(i){var n=Object.create(null);for(var o in i)(t=a.indexOf(i[o]))>=0&&(n[o]=t)}return B(e,n,a)},getSeacs:function(e){var t,r,a=[];for(t=0,r=e.length;t<r;t++){var i=e[t];i.seac&&(a[t+1]=i.seac)}return a},getType2Charstrings:function(e){for(var t=[],r=0,a=e.length;r<a;r++)t.push(e[r].charstring);return t},getType2Subrs:function(e){var t=0,r=e.length;t=r<1133?107:r<33769?1131:32768;var a,i=[];for(a=0;a<t;a++)i.push([11]);for(a=0;a<r;a++)i.push(e[a]);return i},wrap:function(e,t,r,a,n){var o=new i.CFF;o.header=new i.CFFHeader(1,0,4,4),o.names=[e];var s=new i.CFFTopDict;s.setByName(\"version\",391),s.setByName(\"Notice\",392),s.setByName(\"FullName\",393),s.setByName(\"FamilyName\",394),s.setByName(\"Weight\",395),s.setByName(\"Encoding\",null),s.setByName(\"FontMatrix\",n.fontMatrix),s.setByName(\"FontBBox\",n.bbox),s.setByName(\"charset\",null),s.setByName(\"CharStrings\",null),s.setByName(\"Private\",null),o.topDict=s;var c=new i.CFFStrings;c.add(\"Version 0.11\"),c.add(\"See original notice\"),c.add(e),c.add(e),c.add(\"Medium\"),o.strings=c,o.globalSubrIndex=new i.CFFIndex;var l,h,u=t.length,d=[0];for(l=0;l<u;l++){var f=i.CFFStandardStrings.indexOf(r[l].glyphName);-1===f&&(f=0),d.push(f>>8&255,255&f)}o.charset=new i.CFFCharset(!1,0,[],d);var g=new i.CFFIndex;for(g.add([139,14]),l=0;l<u;l++){var m=t[l];0!==m.length?g.add(m):g.add([139,14])}o.charStrings=g;var p=new i.CFFPrivateDict;p.setByName(\"Subrs\",null);var b=[\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StemSnapH\",\"StemSnapV\",\"BlueShift\",\"BlueFuzz\",\"BlueScale\",\"LanguageGroup\",\"ExpansionFactor\",\"ForceBold\",\"StdHW\",\"StdVW\"];for(l=0,h=b.length;l<h;l++){var v=b[l];if(v in n.privateData){var y=n.privateData[v];if(Array.isArray(y))for(var w=y.length-1;w>0;w--)y[w]-=y[w-1];p.setByName(v,y)}}o.topDict.privateDict=p;var k=new i.CFFIndex;for(l=0,h=a.length;l<h;l++)k.add(a[l]);return p.subrsIndex=k,new i.CFFCompiler(o).compile()}},t}(),T=function(){function e(e,t){this.properties=t;var r=new i.CFFParser(e,t,p);this.cff=r.parse();var n=new i.CFFCompiler(this.cff);this.seacs=this.cff.seacs;try{this.data=n.compile()}catch(r){(0,a.warn)(\"Failed to compile font \"+t.loadedName),this.data=e}}return e.prototype={get numGlyphs(){return this.cff.charStrings.count},getCharset:function(){return this.cff.charset.charset},getGlyphMapping:function(){var e,t,r=this.cff,a=this.properties,i=r.charset.charset;if(a.composite){if(e=Object.create(null),r.isCIDFont)for(t=0;t<i.length;t++){var n=i[t];e[a.cMap.charCodeOf(n)]=t}else for(t=0;t<r.charStrings.count;t++)e[t]=t;return e}return e=B(a,r.encoding?r.encoding.encoding:null,i)}},e}();\"undefined\"!=typeof navigator&&/Windows/.test(navigator.userAgent)&&(t.SEAC_ANALYSIS_ENABLED=p=!0),\"undefined\"!=typeof navigator&&/Windows.*Chrome/.test(navigator.userAgent)&&(g=!0),t.SEAC_ANALYSIS_ENABLED=p,t.PRIVATE_USE_OFFSET_START=d,t.PRIVATE_USE_OFFSET_END=f,t.ErrorFont=O,t.Font=F,t.FontFlags=b,t.ToUnicodeMap=x,t.IdentityToUnicodeMap=C,t.ProblematicCharRanges=I,t.getFontType=w},\"./node_modules/pdfjs-dist/lib/core/function.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/function.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PostScriptCompiler=t.PostScriptEvaluator=t.PDFFunctionFactory=t.isPDFFunction=void 0;var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),n=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),o=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),s=r(/*! ./ps_parser */\"./node_modules/pdfjs-dist/lib/core/ps_parser.js\");var c={get value(){return(0,n.shadow)(this,\"value\",(0,n.isEvalSupported)())}},l=function(){function e(t){var r=t.xref,a=t.isEvalSupported,i=void 0===a||a;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.xref=r,this.isEvalSupported=!1!==i}return i(e,[{key:\"create\",value:function(e){return h.parse({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:e})}},{key:\"createFromArray\",value:function(e){return h.parseArray({xref:this.xref,isEvalSupported:this.isEvalSupported,fnObj:e})}},{key:\"createFromIR\",value:function(e){return h.fromIR({xref:this.xref,isEvalSupported:this.isEvalSupported,IR:e})}},{key:\"createIR\",value:function(e){return h.getIR({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:e})}}]),e}(),h={getSampleArray:function(e,t,r,a){var i,n,o=1;for(i=0,n=e.length;i<n;i++)o*=e[i];o*=t;var s=new Array(o),c=0,l=0,h=1/(Math.pow(2,r)-1),u=a.getBytes((o*r+7)/8),d=0;for(i=0;i<o;i++){for(;c<r;)l<<=8,l|=u[d++],c+=8;c-=r,s[i]=(l>>c)*h,l&=(1<<c)-1}return s},getIR:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fn,i=a.dict;i||(i=a);var o=[this.constructSampled,null,this.constructInterpolated,this.constructStiched,this.constructPostScript][i.get(\"FunctionType\")];if(!o)throw new n.FormatError(\"Unknown type of function\");return o.call(this,{xref:t,isEvalSupported:r,fn:a,dict:i})},fromIR:function(e){var t=e.xref,r=e.isEvalSupported,a=e.IR;switch(a[0]){case 0:return this.constructSampledFromIR({xref:t,isEvalSupported:r,IR:a});case 2:return this.constructInterpolatedFromIR({xref:t,isEvalSupported:r,IR:a});case 3:return this.constructStichedFromIR({xref:t,isEvalSupported:r,IR:a});default:return this.constructPostScriptFromIR({xref:t,isEvalSupported:r,IR:a})}},parse:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fn,i=this.getIR({xref:t,isEvalSupported:r,fn:a});return this.fromIR({xref:t,isEvalSupported:r,IR:i})},parseArray:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fnObj;if(!Array.isArray(a))return this.parse({xref:t,isEvalSupported:r,fn:a});for(var i=[],n=0,o=a.length;n<o;n++)i.push(this.parse({xref:t,isEvalSupported:r,fn:t.fetchIfRef(a[n])}));return function(e,t,r,a){for(var n=0,o=i.length;n<o;n++)i[n](e,t,r,a+n)}},constructSampled:function(e){e.xref,e.isEvalSupported;var t=e.fn,r=e.dict;function a(e){for(var t=e.length,r=[],a=0,i=0;i<t;i+=2)r[a]=[e[i],e[i+1]],++a;return r}var i=r.getArray(\"Domain\"),o=r.getArray(\"Range\");if(!i||!o)throw new n.FormatError(\"No domain or range\");var s=i.length/2,c=o.length/2;i=a(i),o=a(o);var l=r.get(\"Size\"),h=r.get(\"BitsPerSample\"),u=r.get(\"Order\")||1;1!==u&&(0,n.info)(\"No support for cubic spline interpolation: \"+u);var d=r.getArray(\"Encode\");if(!d){d=[];for(var f=0;f<s;++f)d.push(0),d.push(l[f]-1)}d=a(d);var g=r.getArray(\"Decode\");return[0,s,i,d,g=g?a(g):o,this.getSampleArray(l,c,h,t),l,c,Math.pow(2,h)-1,o]},constructSampledFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR;function r(e,t,r,a,i){return a+(i-a)/(r-t)*(e-t)}return function(e,a,i,n){var o,s,c=t[1],l=t[2],h=t[3],u=t[4],d=t[5],f=t[6],g=t[7],m=t[9],p=1<<c,b=new Float64Array(p),v=new Uint32Array(p);for(s=0;s<p;s++)b[s]=1;var y=g,w=1;for(o=0;o<c;++o){var k=l[o][0],S=l[o][1],x=r(Math.min(Math.max(e[a+o],k),S),k,S,h[o][0],h[o][1]),C=f[o],A=(x=Math.min(Math.max(x,0),C-1))<C-1?Math.floor(x):x-1,I=A+1-x,F=x-A,O=A*y,B=O+y;for(s=0;s<p;s++)s&w?(b[s]*=F,v[s]+=B):(b[s]*=I,v[s]+=O);y*=C,w<<=1}for(s=0;s<g;++s){var P=0;for(o=0;o<p;o++)P+=d[v[o]+s]*b[o];P=r(P,0,1,u[s][0],u[s][1]),i[n+s]=Math.min(Math.max(P,m[s][0]),m[s][1])}}},constructInterpolated:function(e){e.xref,e.isEvalSupported,e.fn;var t=e.dict,r=t.getArray(\"C0\")||[0],a=t.getArray(\"C1\")||[1],i=t.get(\"N\");if(!Array.isArray(r)||!Array.isArray(a))throw new n.FormatError(\"Illegal dictionary for interpolated function\");for(var o=r.length,s=[],c=0;c<o;++c)s.push(a[c]-r[c]);return[2,r,s,i]},constructInterpolatedFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR,r=t[1],a=t[2],i=t[3],n=a.length;return function(e,t,o,s){for(var c=1===i?e[t]:Math.pow(e[t],i),l=0;l<n;++l)o[s+l]=r[l]+c*a[l]}},constructStiched:function(e){var t=e.xref,r=e.isEvalSupported,a=(e.fn,e.dict),i=a.getArray(\"Domain\");if(!i)throw new n.FormatError(\"No domain\");if(1!=i.length/2)throw new n.FormatError(\"Bad domain for stiched function\");for(var o=a.get(\"Functions\"),s=[],c=0,l=o.length;c<l;++c)s.push(this.getIR({xref:t,isEvalSupported:r,fn:t.fetchIfRef(o[c])}));return[3,i,a.getArray(\"Bounds\"),a.getArray(\"Encode\"),s]},constructStichedFromIR:function(e){for(var t=e.xref,r=e.isEvalSupported,a=e.IR,i=a[1],n=a[2],o=a[3],s=a[4],c=[],l=new Float32Array(1),h=0,u=s.length;h<u;h++)c.push(this.fromIR({xref:t,isEvalSupported:r,IR:s[h]}));return function(e,t,r,a){for(var s=function(e,t,r){return e>r?e=r:e<t&&(e=t),e}(e[t],i[0],i[1]),h=0,u=n.length;h<u&&!(s<n[h]);++h);var d=i[0];h>0&&(d=n[h-1]);var f=i[1];h<n.length&&(f=n[h]);var g=o[2*h],m=o[2*h+1];l[0]=d===f?g:g+(s-d)*(m-g)/(f-d),c[h](l,0,r,a)}},constructPostScript:function(e){e.xref,e.isEvalSupported;var t=e.fn,r=e.dict,a=r.getArray(\"Domain\"),i=r.getArray(\"Range\");if(!a)throw new n.FormatError(\"No domain.\");if(!i)throw new n.FormatError(\"No range.\");var o=new s.PostScriptLexer(t);return[4,a,i,new s.PostScriptParser(o).parse()]},constructPostScriptFromIR:function(e){e.xref;var t=e.isEvalSupported,r=e.IR,a=r[1],i=r[2],o=r[3];if(t&&c.value){var s=(new f).compile(o,a,i);if(s)return new Function(\"src\",\"srcOffset\",\"dest\",\"destOffset\",s)}(0,n.info)(\"Unable to compile PS function\");var l=i.length>>1,h=a.length>>1,u=new d(o),g=Object.create(null),m=8192,p=new Float32Array(h);return function(e,t,r,a){var n,o,s=\"\",c=p;for(n=0;n<h;n++)o=e[t+n],c[n]=o,s+=o+\"_\";var d=g[s];if(void 0===d){var f=new Float32Array(l),b=u.execute(c),v=b.length-l;for(n=0;n<l;n++){o=b[v+n];var y=i[2*n];o<y?o=y:o>(y=i[2*n+1])&&(o=y),f[n]=o}m>0&&(m--,g[s]=f),r.set(f,a)}else r.set(d,a)}}};var u=function(){function e(e){this.stack=e?Array.prototype.slice.call(e,0):[]}return e.prototype={push:function(e){if(this.stack.length>=100)throw new Error(\"PostScript function stack overflow.\");this.stack.push(e)},pop:function(){if(this.stack.length<=0)throw new Error(\"PostScript function stack underflow.\");return this.stack.pop()},copy:function(e){if(this.stack.length+e>=100)throw new Error(\"PostScript function stack overflow.\");for(var t=this.stack,r=t.length-e,a=e-1;a>=0;a--,r++)t.push(t[r])},index:function(e){this.push(this.stack[this.stack.length-e-1])},roll:function(e,t){var r,a,i,n=this.stack,o=n.length-e,s=n.length-1,c=o+(t-Math.floor(t/e)*e);for(r=o,a=s;r<a;r++,a--)i=n[r],n[r]=n[a],n[a]=i;for(r=o,a=c-1;r<a;r++,a--)i=n[r],n[r]=n[a],n[a]=i;for(r=c,a=s;r<a;r++,a--)i=n[r],n[r]=n[a],n[a]=i}},e}(),d=function(){function e(e){this.operators=e}return e.prototype={execute:function(e){for(var t,r,a,i=new u(e),o=0,s=this.operators,c=s.length;o<c;)if(\"number\"!=typeof(t=s[o++]))switch(t){case\"jz\":a=i.pop(),(r=i.pop())||(o=a);break;case\"j\":o=r=i.pop();break;case\"abs\":r=i.pop(),i.push(Math.abs(r));break;case\"add\":a=i.pop(),r=i.pop(),i.push(r+a);break;case\"and\":a=i.pop(),r=i.pop(),(0,n.isBool)(r)&&(0,n.isBool)(a)?i.push(r&&a):i.push(r&a);break;case\"atan\":r=i.pop(),i.push(Math.atan(r));break;case\"bitshift\":a=i.pop(),(r=i.pop())>0?i.push(r<<a):i.push(r>>a);break;case\"ceiling\":r=i.pop(),i.push(Math.ceil(r));break;case\"copy\":r=i.pop(),i.copy(r);break;case\"cos\":r=i.pop(),i.push(Math.cos(r));break;case\"cvi\":r=0|i.pop(),i.push(r);break;case\"cvr\":break;case\"div\":a=i.pop(),r=i.pop(),i.push(r/a);break;case\"dup\":i.copy(1);break;case\"eq\":a=i.pop(),r=i.pop(),i.push(r===a);break;case\"exch\":i.roll(2,1);break;case\"exp\":a=i.pop(),r=i.pop(),i.push(Math.pow(r,a));break;case\"false\":i.push(!1);break;case\"floor\":r=i.pop(),i.push(Math.floor(r));break;case\"ge\":a=i.pop(),r=i.pop(),i.push(r>=a);break;case\"gt\":a=i.pop(),r=i.pop(),i.push(r>a);break;case\"idiv\":a=i.pop(),r=i.pop(),i.push(r/a|0);break;case\"index\":r=i.pop(),i.index(r);break;case\"le\":a=i.pop(),r=i.pop(),i.push(r<=a);break;case\"ln\":r=i.pop(),i.push(Math.log(r));break;case\"log\":r=i.pop(),i.push(Math.log(r)/Math.LN10);break;case\"lt\":a=i.pop(),r=i.pop(),i.push(r<a);break;case\"mod\":a=i.pop(),r=i.pop(),i.push(r%a);break;case\"mul\":a=i.pop(),r=i.pop(),i.push(r*a);break;case\"ne\":a=i.pop(),r=i.pop(),i.push(r!==a);break;case\"neg\":r=i.pop(),i.push(-r);break;case\"not\":r=i.pop(),(0,n.isBool)(r)?i.push(!r):i.push(~r);break;case\"or\":a=i.pop(),r=i.pop(),(0,n.isBool)(r)&&(0,n.isBool)(a)?i.push(r||a):i.push(r|a);break;case\"pop\":i.pop();break;case\"roll\":a=i.pop(),r=i.pop(),i.roll(r,a);break;case\"round\":r=i.pop(),i.push(Math.round(r));break;case\"sin\":r=i.pop(),i.push(Math.sin(r));break;case\"sqrt\":r=i.pop(),i.push(Math.sqrt(r));break;case\"sub\":a=i.pop(),r=i.pop(),i.push(r-a);break;case\"true\":i.push(!0);break;case\"truncate\":r=(r=i.pop())<0?Math.ceil(r):Math.floor(r),i.push(r);break;case\"xor\":a=i.pop(),r=i.pop(),(0,n.isBool)(r)&&(0,n.isBool)(a)?i.push(r!==a):i.push(r^a);break;default:throw new n.FormatError(\"Unknown operator \"+t)}else i.push(t);return i.stack}},e}(),f=function(){function e(e){this.type=e}function t(t,r,a){e.call(this,\"args\"),this.index=t,this.min=r,this.max=a}function r(t){e.call(this,\"literal\"),this.number=t,this.min=t,this.max=t}function a(t,r,a,i,n){e.call(this,\"binary\"),this.op=t,this.arg1=r,this.arg2=a,this.min=i,this.max=n}function i(t,r){e.call(this,\"max\"),this.arg=t,this.min=t.min,this.max=r}function o(t,r,a){e.call(this,\"var\"),this.index=t,this.min=r,this.max=a}function s(t,r){e.call(this,\"definition\"),this.variable=t,this.arg=r}function c(){this.parts=[]}function l(e,t){return\"literal\"===t.type&&0===t.number?e:\"literal\"===e.type&&0===e.number?t:\"literal\"===t.type&&\"literal\"===e.type?new r(e.number+t.number):new a(\"+\",e,t,e.min+t.min,e.max+t.max)}function h(e,t){if(\"literal\"===t.type){if(0===t.number)return new r(0);if(1===t.number)return e;if(\"literal\"===e.type)return new r(e.number*t.number)}if(\"literal\"===e.type){if(0===e.number)return new r(0);if(1===e.number)return t}return new a(\"*\",e,t,Math.min(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max),Math.max(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max))}function u(e,t){if(\"literal\"===t.type){if(0===t.number)return e;if(\"literal\"===e.type)return new r(e.number-t.number)}return\"binary\"===t.type&&\"-\"===t.op&&\"literal\"===e.type&&1===e.number&&\"literal\"===t.arg1.type&&1===t.arg1.number?t.arg2:new a(\"-\",e,t,e.min-t.max,e.max-t.min)}function d(e,t){return e.min>=t?new r(t):e.max<=t?e:new i(e,t)}function f(){}return e.prototype.visit=function(e){(0,n.unreachable)(\"abstract method\")},t.prototype=Object.create(e.prototype),t.prototype.visit=function(e){e.visitArgument(this)},r.prototype=Object.create(e.prototype),r.prototype.visit=function(e){e.visitLiteral(this)},a.prototype=Object.create(e.prototype),a.prototype.visit=function(e){e.visitBinaryOperation(this)},i.prototype=Object.create(e.prototype),i.prototype.visit=function(e){e.visitMin(this)},o.prototype=Object.create(e.prototype),o.prototype.visit=function(e){e.visitVariable(this)},s.prototype=Object.create(e.prototype),s.prototype.visit=function(e){e.visitVariableDefinition(this)},c.prototype={visitArgument:function(e){this.parts.push(\"Math.max(\",e.min,\", Math.min(\",e.max,\", src[srcOffset + \",e.index,\"]))\")},visitVariable:function(e){this.parts.push(\"v\",e.index)},visitLiteral:function(e){this.parts.push(e.number)},visitBinaryOperation:function(e){this.parts.push(\"(\"),e.arg1.visit(this),this.parts.push(\" \",e.op,\" \"),e.arg2.visit(this),this.parts.push(\")\")},visitVariableDefinition:function(e){this.parts.push(\"var \"),e.variable.visit(this),this.parts.push(\" = \"),e.arg.visit(this),this.parts.push(\";\")},visitMin:function(e){this.parts.push(\"Math.min(\"),e.arg.visit(this),this.parts.push(\", \",e.max,\")\")},toString:function(){return this.parts.join(\"\")}},f.prototype={compile:function(e,a,i){var n,f,g,m,p,b,v,y,w,k,S=[],x=[],C=a.length>>1,A=i.length>>1,I=0;for(n=0;n<C;n++)S.push(new t(n,a[2*n],a[2*n+1]));for(n=0,f=e.length;n<f;n++)if(\"number\"!=typeof(k=e[n]))switch(k){case\"add\":if(S.length<2)return null;b=S.pop(),p=S.pop(),S.push(l(p,b));break;case\"cvr\":if(S.length<1)return null;break;case\"mul\":if(S.length<2)return null;b=S.pop(),p=S.pop(),S.push(h(p,b));break;case\"sub\":if(S.length<2)return null;b=S.pop(),p=S.pop(),S.push(u(p,b));break;case\"exch\":if(S.length<2)return null;v=S.pop(),y=S.pop(),S.push(v,y);break;case\"pop\":if(S.length<1)return null;S.pop();break;case\"index\":if(S.length<1)return null;if(\"literal\"!==(p=S.pop()).type)return null;if((g=p.number)<0||!Number.isInteger(g)||S.length<g)return null;if(\"literal\"===(v=S[S.length-g-1]).type||\"var\"===v.type){S.push(v);break}w=new o(I++,v.min,v.max),S[S.length-g-1]=w,S.push(w),x.push(new s(w,v));break;case\"dup\":if(S.length<1)return null;if(\"number\"==typeof e[n+1]&&\"gt\"===e[n+2]&&e[n+3]===n+7&&\"jz\"===e[n+4]&&\"pop\"===e[n+5]&&e[n+6]===e[n+1]){p=S.pop(),S.push(d(p,e[n+1])),n+=6;break}if(\"literal\"===(v=S[S.length-1]).type||\"var\"===v.type){S.push(v);break}w=new o(I++,v.min,v.max),S[S.length-1]=w,S.push(w),x.push(new s(w,v));break;case\"roll\":if(S.length<2)return null;if(b=S.pop(),p=S.pop(),\"literal\"!==b.type||\"literal\"!==p.type)return null;if(m=b.number,(g=p.number)<=0||!Number.isInteger(g)||!Number.isInteger(m)||S.length<g)return null;if(0===(m=(m%g+g)%g))break;Array.prototype.push.apply(S,S.splice(S.length-g,g-m));break;default:return null}else S.push(new r(k));if(S.length!==A)return null;var F=[];return x.forEach(function(e){var t=new c;e.visit(t),F.push(t.toString())}),S.forEach(function(e,t){var r=new c;e.visit(r);var a=i[2*t],n=i[2*t+1],o=[r.toString()];a>e.min&&(o.unshift(\"Math.max(\",a,\", \"),o.push(\")\")),n<e.max&&(o.unshift(\"Math.min(\",n,\", \"),o.push(\")\")),o.unshift(\"dest[destOffset + \",t,\"] = \"),o.push(\";\"),F.push(o.join(\"\"))}),F.join(\"\\n\")}},f}();t.isPDFFunction=function(e){var t;if(\"object\"!==(void 0===e?\"undefined\":a(e)))return!1;if((0,o.isDict)(e))t=e;else{if(!(0,o.isStream)(e))return!1;t=e.dict}return t.has(\"FunctionType\")},t.PDFFunctionFactory=l,t.PostScriptEvaluator=d,t.PostScriptCompiler=f},\"./node_modules/pdfjs-dist/lib/core/glyphlist.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/glyphlist.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\").getLookupTableFactory,i=a(function(e){e.A=65,e.AE=198,e.AEacute=508,e.AEmacron=482,e.AEsmall=63462,e.Aacute=193,e.Aacutesmall=63457,e.Abreve=258,e.Abreveacute=7854,e.Abrevecyrillic=1232,e.Abrevedotbelow=7862,e.Abrevegrave=7856,e.Abrevehookabove=7858,e.Abrevetilde=7860,e.Acaron=461,e.Acircle=9398,e.Acircumflex=194,e.Acircumflexacute=7844,e.Acircumflexdotbelow=7852,e.Acircumflexgrave=7846,e.Acircumflexhookabove=7848,e.Acircumflexsmall=63458,e.Acircumflextilde=7850,e.Acute=63177,e.Acutesmall=63412,e.Acyrillic=1040,e.Adblgrave=512,e.Adieresis=196,e.Adieresiscyrillic=1234,e.Adieresismacron=478,e.Adieresissmall=63460,e.Adotbelow=7840,e.Adotmacron=480,e.Agrave=192,e.Agravesmall=63456,e.Ahookabove=7842,e.Aiecyrillic=1236,e.Ainvertedbreve=514,e.Alpha=913,e.Alphatonos=902,e.Amacron=256,e.Amonospace=65313,e.Aogonek=260,e.Aring=197,e.Aringacute=506,e.Aringbelow=7680,e.Aringsmall=63461,e.Asmall=63329,e.Atilde=195,e.Atildesmall=63459,e.Aybarmenian=1329,e.B=66,e.Bcircle=9399,e.Bdotaccent=7682,e.Bdotbelow=7684,e.Becyrillic=1041,e.Benarmenian=1330,e.Beta=914,e.Bhook=385,e.Blinebelow=7686,e.Bmonospace=65314,e.Brevesmall=63220,e.Bsmall=63330,e.Btopbar=386,e.C=67,e.Caarmenian=1342,e.Cacute=262,e.Caron=63178,e.Caronsmall=63221,e.Ccaron=268,e.Ccedilla=199,e.Ccedillaacute=7688,e.Ccedillasmall=63463,e.Ccircle=9400,e.Ccircumflex=264,e.Cdot=266,e.Cdotaccent=266,e.Cedillasmall=63416,e.Chaarmenian=1353,e.Cheabkhasiancyrillic=1212,e.Checyrillic=1063,e.Chedescenderabkhasiancyrillic=1214,e.Chedescendercyrillic=1206,e.Chedieresiscyrillic=1268,e.Cheharmenian=1347,e.Chekhakassiancyrillic=1227,e.Cheverticalstrokecyrillic=1208,e.Chi=935,e.Chook=391,e.Circumflexsmall=63222,e.Cmonospace=65315,e.Coarmenian=1361,e.Csmall=63331,e.D=68,e.DZ=497,e.DZcaron=452,e.Daarmenian=1332,e.Dafrican=393,e.Dcaron=270,e.Dcedilla=7696,e.Dcircle=9401,e.Dcircumflexbelow=7698,e.Dcroat=272,e.Ddotaccent=7690,e.Ddotbelow=7692,e.Decyrillic=1044,e.Deicoptic=1006,e.Delta=8710,e.Deltagreek=916,e.Dhook=394,e.Dieresis=63179,e.DieresisAcute=63180,e.DieresisGrave=63181,e.Dieresissmall=63400,e.Digammagreek=988,e.Djecyrillic=1026,e.Dlinebelow=7694,e.Dmonospace=65316,e.Dotaccentsmall=63223,e.Dslash=272,e.Dsmall=63332,e.Dtopbar=395,e.Dz=498,e.Dzcaron=453,e.Dzeabkhasiancyrillic=1248,e.Dzecyrillic=1029,e.Dzhecyrillic=1039,e.E=69,e.Eacute=201,e.Eacutesmall=63465,e.Ebreve=276,e.Ecaron=282,e.Ecedillabreve=7708,e.Echarmenian=1333,e.Ecircle=9402,e.Ecircumflex=202,e.Ecircumflexacute=7870,e.Ecircumflexbelow=7704,e.Ecircumflexdotbelow=7878,e.Ecircumflexgrave=7872,e.Ecircumflexhookabove=7874,e.Ecircumflexsmall=63466,e.Ecircumflextilde=7876,e.Ecyrillic=1028,e.Edblgrave=516,e.Edieresis=203,e.Edieresissmall=63467,e.Edot=278,e.Edotaccent=278,e.Edotbelow=7864,e.Efcyrillic=1060,e.Egrave=200,e.Egravesmall=63464,e.Eharmenian=1335,e.Ehookabove=7866,e.Eightroman=8551,e.Einvertedbreve=518,e.Eiotifiedcyrillic=1124,e.Elcyrillic=1051,e.Elevenroman=8554,e.Emacron=274,e.Emacronacute=7702,e.Emacrongrave=7700,e.Emcyrillic=1052,e.Emonospace=65317,e.Encyrillic=1053,e.Endescendercyrillic=1186,e.Eng=330,e.Enghecyrillic=1188,e.Enhookcyrillic=1223,e.Eogonek=280,e.Eopen=400,e.Epsilon=917,e.Epsilontonos=904,e.Ercyrillic=1056,e.Ereversed=398,e.Ereversedcyrillic=1069,e.Escyrillic=1057,e.Esdescendercyrillic=1194,e.Esh=425,e.Esmall=63333,e.Eta=919,e.Etarmenian=1336,e.Etatonos=905,e.Eth=208,e.Ethsmall=63472,e.Etilde=7868,e.Etildebelow=7706,e.Euro=8364,e.Ezh=439,e.Ezhcaron=494,e.Ezhreversed=440,e.F=70,e.Fcircle=9403,e.Fdotaccent=7710,e.Feharmenian=1366,e.Feicoptic=996,e.Fhook=401,e.Fitacyrillic=1138,e.Fiveroman=8548,e.Fmonospace=65318,e.Fourroman=8547,e.Fsmall=63334,e.G=71,e.GBsquare=13191,e.Gacute=500,e.Gamma=915,e.Gammaafrican=404,e.Gangiacoptic=1002,e.Gbreve=286,e.Gcaron=486,e.Gcedilla=290,e.Gcircle=9404,e.Gcircumflex=284,e.Gcommaaccent=290,e.Gdot=288,e.Gdotaccent=288,e.Gecyrillic=1043,e.Ghadarmenian=1346,e.Ghemiddlehookcyrillic=1172,e.Ghestrokecyrillic=1170,e.Gheupturncyrillic=1168,e.Ghook=403,e.Gimarmenian=1331,e.Gjecyrillic=1027,e.Gmacron=7712,e.Gmonospace=65319,e.Grave=63182,e.Gravesmall=63328,e.Gsmall=63335,e.Gsmallhook=667,e.Gstroke=484,e.H=72,e.H18533=9679,e.H18543=9642,e.H18551=9643,e.H22073=9633,e.HPsquare=13259,e.Haabkhasiancyrillic=1192,e.Hadescendercyrillic=1202,e.Hardsigncyrillic=1066,e.Hbar=294,e.Hbrevebelow=7722,e.Hcedilla=7720,e.Hcircle=9405,e.Hcircumflex=292,e.Hdieresis=7718,e.Hdotaccent=7714,e.Hdotbelow=7716,e.Hmonospace=65320,e.Hoarmenian=1344,e.Horicoptic=1e3,e.Hsmall=63336,e.Hungarumlaut=63183,e.Hungarumlautsmall=63224,e.Hzsquare=13200,e.I=73,e.IAcyrillic=1071,e.IJ=306,e.IUcyrillic=1070,e.Iacute=205,e.Iacutesmall=63469,e.Ibreve=300,e.Icaron=463,e.Icircle=9406,e.Icircumflex=206,e.Icircumflexsmall=63470,e.Icyrillic=1030,e.Idblgrave=520,e.Idieresis=207,e.Idieresisacute=7726,e.Idieresiscyrillic=1252,e.Idieresissmall=63471,e.Idot=304,e.Idotaccent=304,e.Idotbelow=7882,e.Iebrevecyrillic=1238,e.Iecyrillic=1045,e.Ifraktur=8465,e.Igrave=204,e.Igravesmall=63468,e.Ihookabove=7880,e.Iicyrillic=1048,e.Iinvertedbreve=522,e.Iishortcyrillic=1049,e.Imacron=298,e.Imacroncyrillic=1250,e.Imonospace=65321,e.Iniarmenian=1339,e.Iocyrillic=1025,e.Iogonek=302,e.Iota=921,e.Iotaafrican=406,e.Iotadieresis=938,e.Iotatonos=906,e.Ismall=63337,e.Istroke=407,e.Itilde=296,e.Itildebelow=7724,e.Izhitsacyrillic=1140,e.Izhitsadblgravecyrillic=1142,e.J=74,e.Jaarmenian=1345,e.Jcircle=9407,e.Jcircumflex=308,e.Jecyrillic=1032,e.Jheharmenian=1355,e.Jmonospace=65322,e.Jsmall=63338,e.K=75,e.KBsquare=13189,e.KKsquare=13261,e.Kabashkircyrillic=1184,e.Kacute=7728,e.Kacyrillic=1050,e.Kadescendercyrillic=1178,e.Kahookcyrillic=1219,e.Kappa=922,e.Kastrokecyrillic=1182,e.Kaverticalstrokecyrillic=1180,e.Kcaron=488,e.Kcedilla=310,e.Kcircle=9408,e.Kcommaaccent=310,e.Kdotbelow=7730,e.Keharmenian=1364,e.Kenarmenian=1343,e.Khacyrillic=1061,e.Kheicoptic=998,e.Khook=408,e.Kjecyrillic=1036,e.Klinebelow=7732,e.Kmonospace=65323,e.Koppacyrillic=1152,e.Koppagreek=990,e.Ksicyrillic=1134,e.Ksmall=63339,e.L=76,e.LJ=455,e.LL=63167,e.Lacute=313,e.Lambda=923,e.Lcaron=317,e.Lcedilla=315,e.Lcircle=9409,e.Lcircumflexbelow=7740,e.Lcommaaccent=315,e.Ldot=319,e.Ldotaccent=319,e.Ldotbelow=7734,e.Ldotbelowmacron=7736,e.Liwnarmenian=1340,e.Lj=456,e.Ljecyrillic=1033,e.Llinebelow=7738,e.Lmonospace=65324,e.Lslash=321,e.Lslashsmall=63225,e.Lsmall=63340,e.M=77,e.MBsquare=13190,e.Macron=63184,e.Macronsmall=63407,e.Macute=7742,e.Mcircle=9410,e.Mdotaccent=7744,e.Mdotbelow=7746,e.Menarmenian=1348,e.Mmonospace=65325,e.Msmall=63341,e.Mturned=412,e.Mu=924,e.N=78,e.NJ=458,e.Nacute=323,e.Ncaron=327,e.Ncedilla=325,e.Ncircle=9411,e.Ncircumflexbelow=7754,e.Ncommaaccent=325,e.Ndotaccent=7748,e.Ndotbelow=7750,e.Nhookleft=413,e.Nineroman=8552,e.Nj=459,e.Njecyrillic=1034,e.Nlinebelow=7752,e.Nmonospace=65326,e.Nowarmenian=1350,e.Nsmall=63342,e.Ntilde=209,e.Ntildesmall=63473,e.Nu=925,e.O=79,e.OE=338,e.OEsmall=63226,e.Oacute=211,e.Oacutesmall=63475,e.Obarredcyrillic=1256,e.Obarreddieresiscyrillic=1258,e.Obreve=334,e.Ocaron=465,e.Ocenteredtilde=415,e.Ocircle=9412,e.Ocircumflex=212,e.Ocircumflexacute=7888,e.Ocircumflexdotbelow=7896,e.Ocircumflexgrave=7890,e.Ocircumflexhookabove=7892,e.Ocircumflexsmall=63476,e.Ocircumflextilde=7894,e.Ocyrillic=1054,e.Odblacute=336,e.Odblgrave=524,e.Odieresis=214,e.Odieresiscyrillic=1254,e.Odieresissmall=63478,e.Odotbelow=7884,e.Ogoneksmall=63227,e.Ograve=210,e.Ogravesmall=63474,e.Oharmenian=1365,e.Ohm=8486,e.Ohookabove=7886,e.Ohorn=416,e.Ohornacute=7898,e.Ohorndotbelow=7906,e.Ohorngrave=7900,e.Ohornhookabove=7902,e.Ohorntilde=7904,e.Ohungarumlaut=336,e.Oi=418,e.Oinvertedbreve=526,e.Omacron=332,e.Omacronacute=7762,e.Omacrongrave=7760,e.Omega=8486,e.Omegacyrillic=1120,e.Omegagreek=937,e.Omegaroundcyrillic=1146,e.Omegatitlocyrillic=1148,e.Omegatonos=911,e.Omicron=927,e.Omicrontonos=908,e.Omonospace=65327,e.Oneroman=8544,e.Oogonek=490,e.Oogonekmacron=492,e.Oopen=390,e.Oslash=216,e.Oslashacute=510,e.Oslashsmall=63480,e.Osmall=63343,e.Ostrokeacute=510,e.Otcyrillic=1150,e.Otilde=213,e.Otildeacute=7756,e.Otildedieresis=7758,e.Otildesmall=63477,e.P=80,e.Pacute=7764,e.Pcircle=9413,e.Pdotaccent=7766,e.Pecyrillic=1055,e.Peharmenian=1354,e.Pemiddlehookcyrillic=1190,e.Phi=934,e.Phook=420,e.Pi=928,e.Piwrarmenian=1363,e.Pmonospace=65328,e.Psi=936,e.Psicyrillic=1136,e.Psmall=63344,e.Q=81,e.Qcircle=9414,e.Qmonospace=65329,e.Qsmall=63345,e.R=82,e.Raarmenian=1356,e.Racute=340,e.Rcaron=344,e.Rcedilla=342,e.Rcircle=9415,e.Rcommaaccent=342,e.Rdblgrave=528,e.Rdotaccent=7768,e.Rdotbelow=7770,e.Rdotbelowmacron=7772,e.Reharmenian=1360,e.Rfraktur=8476,e.Rho=929,e.Ringsmall=63228,e.Rinvertedbreve=530,e.Rlinebelow=7774,e.Rmonospace=65330,e.Rsmall=63346,e.Rsmallinverted=641,e.Rsmallinvertedsuperior=694,e.S=83,e.SF010000=9484,e.SF020000=9492,e.SF030000=9488,e.SF040000=9496,e.SF050000=9532,e.SF060000=9516,e.SF070000=9524,e.SF080000=9500,e.SF090000=9508,e.SF100000=9472,e.SF110000=9474,e.SF190000=9569,e.SF200000=9570,e.SF210000=9558,e.SF220000=9557,e.SF230000=9571,e.SF240000=9553,e.SF250000=9559,e.SF260000=9565,e.SF270000=9564,e.SF280000=9563,e.SF360000=9566,e.SF370000=9567,e.SF380000=9562,e.SF390000=9556,e.SF400000=9577,e.SF410000=9574,e.SF420000=9568,e.SF430000=9552,e.SF440000=9580,e.SF450000=9575,e.SF460000=9576,e.SF470000=9572,e.SF480000=9573,e.SF490000=9561,e.SF500000=9560,e.SF510000=9554,e.SF520000=9555,e.SF530000=9579,e.SF540000=9578,e.Sacute=346,e.Sacutedotaccent=7780,e.Sampigreek=992,e.Scaron=352,e.Scarondotaccent=7782,e.Scaronsmall=63229,e.Scedilla=350,e.Schwa=399,e.Schwacyrillic=1240,e.Schwadieresiscyrillic=1242,e.Scircle=9416,e.Scircumflex=348,e.Scommaaccent=536,e.Sdotaccent=7776,e.Sdotbelow=7778,e.Sdotbelowdotaccent=7784,e.Seharmenian=1357,e.Sevenroman=8550,e.Shaarmenian=1351,e.Shacyrillic=1064,e.Shchacyrillic=1065,e.Sheicoptic=994,e.Shhacyrillic=1210,e.Shimacoptic=1004,e.Sigma=931,e.Sixroman=8549,e.Smonospace=65331,e.Softsigncyrillic=1068,e.Ssmall=63347,e.Stigmagreek=986,e.T=84,e.Tau=932,e.Tbar=358,e.Tcaron=356,e.Tcedilla=354,e.Tcircle=9417,e.Tcircumflexbelow=7792,e.Tcommaaccent=354,e.Tdotaccent=7786,e.Tdotbelow=7788,e.Tecyrillic=1058,e.Tedescendercyrillic=1196,e.Tenroman=8553,e.Tetsecyrillic=1204,e.Theta=920,e.Thook=428,e.Thorn=222,e.Thornsmall=63486,e.Threeroman=8546,e.Tildesmall=63230,e.Tiwnarmenian=1359,e.Tlinebelow=7790,e.Tmonospace=65332,e.Toarmenian=1337,e.Tonefive=444,e.Tonesix=388,e.Tonetwo=423,e.Tretroflexhook=430,e.Tsecyrillic=1062,e.Tshecyrillic=1035,e.Tsmall=63348,e.Twelveroman=8555,e.Tworoman=8545,e.U=85,e.Uacute=218,e.Uacutesmall=63482,e.Ubreve=364,e.Ucaron=467,e.Ucircle=9418,e.Ucircumflex=219,e.Ucircumflexbelow=7798,e.Ucircumflexsmall=63483,e.Ucyrillic=1059,e.Udblacute=368,e.Udblgrave=532,e.Udieresis=220,e.Udieresisacute=471,e.Udieresisbelow=7794,e.Udieresiscaron=473,e.Udieresiscyrillic=1264,e.Udieresisgrave=475,e.Udieresismacron=469,e.Udieresissmall=63484,e.Udotbelow=7908,e.Ugrave=217,e.Ugravesmall=63481,e.Uhookabove=7910,e.Uhorn=431,e.Uhornacute=7912,e.Uhorndotbelow=7920,e.Uhorngrave=7914,e.Uhornhookabove=7916,e.Uhorntilde=7918,e.Uhungarumlaut=368,e.Uhungarumlautcyrillic=1266,e.Uinvertedbreve=534,e.Ukcyrillic=1144,e.Umacron=362,e.Umacroncyrillic=1262,e.Umacrondieresis=7802,e.Umonospace=65333,e.Uogonek=370,e.Upsilon=933,e.Upsilon1=978,e.Upsilonacutehooksymbolgreek=979,e.Upsilonafrican=433,e.Upsilondieresis=939,e.Upsilondieresishooksymbolgreek=980,e.Upsilonhooksymbol=978,e.Upsilontonos=910,e.Uring=366,e.Ushortcyrillic=1038,e.Usmall=63349,e.Ustraightcyrillic=1198,e.Ustraightstrokecyrillic=1200,e.Utilde=360,e.Utildeacute=7800,e.Utildebelow=7796,e.V=86,e.Vcircle=9419,e.Vdotbelow=7806,e.Vecyrillic=1042,e.Vewarmenian=1358,e.Vhook=434,e.Vmonospace=65334,e.Voarmenian=1352,e.Vsmall=63350,e.Vtilde=7804,e.W=87,e.Wacute=7810,e.Wcircle=9420,e.Wcircumflex=372,e.Wdieresis=7812,e.Wdotaccent=7814,e.Wdotbelow=7816,e.Wgrave=7808,e.Wmonospace=65335,e.Wsmall=63351,e.X=88,e.Xcircle=9421,e.Xdieresis=7820,e.Xdotaccent=7818,e.Xeharmenian=1341,e.Xi=926,e.Xmonospace=65336,e.Xsmall=63352,e.Y=89,e.Yacute=221,e.Yacutesmall=63485,e.Yatcyrillic=1122,e.Ycircle=9422,e.Ycircumflex=374,e.Ydieresis=376,e.Ydieresissmall=63487,e.Ydotaccent=7822,e.Ydotbelow=7924,e.Yericyrillic=1067,e.Yerudieresiscyrillic=1272,e.Ygrave=7922,e.Yhook=435,e.Yhookabove=7926,e.Yiarmenian=1349,e.Yicyrillic=1031,e.Yiwnarmenian=1362,e.Ymonospace=65337,e.Ysmall=63353,e.Ytilde=7928,e.Yusbigcyrillic=1130,e.Yusbigiotifiedcyrillic=1132,e.Yuslittlecyrillic=1126,e.Yuslittleiotifiedcyrillic=1128,e.Z=90,e.Zaarmenian=1334,e.Zacute=377,e.Zcaron=381,e.Zcaronsmall=63231,e.Zcircle=9423,e.Zcircumflex=7824,e.Zdot=379,e.Zdotaccent=379,e.Zdotbelow=7826,e.Zecyrillic=1047,e.Zedescendercyrillic=1176,e.Zedieresiscyrillic=1246,e.Zeta=918,e.Zhearmenian=1338,e.Zhebrevecyrillic=1217,e.Zhecyrillic=1046,e.Zhedescendercyrillic=1174,e.Zhedieresiscyrillic=1244,e.Zlinebelow=7828,e.Zmonospace=65338,e.Zsmall=63354,e.Zstroke=437,e.a=97,e.aabengali=2438,e.aacute=225,e.aadeva=2310,e.aagujarati=2694,e.aagurmukhi=2566,e.aamatragurmukhi=2622,e.aarusquare=13059,e.aavowelsignbengali=2494,e.aavowelsigndeva=2366,e.aavowelsigngujarati=2750,e.abbreviationmarkarmenian=1375,e.abbreviationsigndeva=2416,e.abengali=2437,e.abopomofo=12570,e.abreve=259,e.abreveacute=7855,e.abrevecyrillic=1233,e.abrevedotbelow=7863,e.abrevegrave=7857,e.abrevehookabove=7859,e.abrevetilde=7861,e.acaron=462,e.acircle=9424,e.acircumflex=226,e.acircumflexacute=7845,e.acircumflexdotbelow=7853,e.acircumflexgrave=7847,e.acircumflexhookabove=7849,e.acircumflextilde=7851,e.acute=180,e.acutebelowcmb=791,e.acutecmb=769,e.acutecomb=769,e.acutedeva=2388,e.acutelowmod=719,e.acutetonecmb=833,e.acyrillic=1072,e.adblgrave=513,e.addakgurmukhi=2673,e.adeva=2309,e.adieresis=228,e.adieresiscyrillic=1235,e.adieresismacron=479,e.adotbelow=7841,e.adotmacron=481,e.ae=230,e.aeacute=509,e.aekorean=12624,e.aemacron=483,e.afii00208=8213,e.afii08941=8356,e.afii10017=1040,e.afii10018=1041,e.afii10019=1042,e.afii10020=1043,e.afii10021=1044,e.afii10022=1045,e.afii10023=1025,e.afii10024=1046,e.afii10025=1047,e.afii10026=1048,e.afii10027=1049,e.afii10028=1050,e.afii10029=1051,e.afii10030=1052;e.afii10031=1053,e.afii10032=1054,e.afii10033=1055,e.afii10034=1056,e.afii10035=1057,e.afii10036=1058,e.afii10037=1059,e.afii10038=1060,e.afii10039=1061,e.afii10040=1062,e.afii10041=1063,e.afii10042=1064,e.afii10043=1065,e.afii10044=1066,e.afii10045=1067,e.afii10046=1068,e.afii10047=1069,e.afii10048=1070,e.afii10049=1071,e.afii10050=1168,e.afii10051=1026,e.afii10052=1027,e.afii10053=1028,e.afii10054=1029,e.afii10055=1030,e.afii10056=1031,e.afii10057=1032,e.afii10058=1033,e.afii10059=1034,e.afii10060=1035,e.afii10061=1036,e.afii10062=1038,e.afii10063=63172,e.afii10064=63173,e.afii10065=1072,e.afii10066=1073,e.afii10067=1074,e.afii10068=1075,e.afii10069=1076,e.afii10070=1077,e.afii10071=1105,e.afii10072=1078,e.afii10073=1079,e.afii10074=1080,e.afii10075=1081,e.afii10076=1082,e.afii10077=1083,e.afii10078=1084,e.afii10079=1085,e.afii10080=1086,e.afii10081=1087,e.afii10082=1088,e.afii10083=1089,e.afii10084=1090,e.afii10085=1091,e.afii10086=1092,e.afii10087=1093,e.afii10088=1094,e.afii10089=1095,e.afii10090=1096,e.afii10091=1097,e.afii10092=1098,e.afii10093=1099,e.afii10094=1100,e.afii10095=1101,e.afii10096=1102,e.afii10097=1103,e.afii10098=1169,e.afii10099=1106,e.afii10100=1107,e.afii10101=1108,e.afii10102=1109,e.afii10103=1110,e.afii10104=1111,e.afii10105=1112,e.afii10106=1113,e.afii10107=1114,e.afii10108=1115,e.afii10109=1116,e.afii10110=1118,e.afii10145=1039,e.afii10146=1122,e.afii10147=1138,e.afii10148=1140,e.afii10192=63174,e.afii10193=1119,e.afii10194=1123,e.afii10195=1139,e.afii10196=1141,e.afii10831=63175,e.afii10832=63176,e.afii10846=1241,e.afii299=8206,e.afii300=8207,e.afii301=8205,e.afii57381=1642,e.afii57388=1548,e.afii57392=1632,e.afii57393=1633,e.afii57394=1634,e.afii57395=1635,e.afii57396=1636,e.afii57397=1637,e.afii57398=1638,e.afii57399=1639,e.afii57400=1640,e.afii57401=1641,e.afii57403=1563,e.afii57407=1567,e.afii57409=1569,e.afii57410=1570,e.afii57411=1571,e.afii57412=1572,e.afii57413=1573,e.afii57414=1574,e.afii57415=1575,e.afii57416=1576,e.afii57417=1577,e.afii57418=1578,e.afii57419=1579,e.afii57420=1580,e.afii57421=1581,e.afii57422=1582,e.afii57423=1583,e.afii57424=1584,e.afii57425=1585,e.afii57426=1586,e.afii57427=1587,e.afii57428=1588,e.afii57429=1589,e.afii57430=1590,e.afii57431=1591,e.afii57432=1592,e.afii57433=1593,e.afii57434=1594,e.afii57440=1600,e.afii57441=1601,e.afii57442=1602,e.afii57443=1603,e.afii57444=1604,e.afii57445=1605,e.afii57446=1606,e.afii57448=1608,e.afii57449=1609,e.afii57450=1610,e.afii57451=1611,e.afii57452=1612,e.afii57453=1613,e.afii57454=1614,e.afii57455=1615,e.afii57456=1616,e.afii57457=1617,e.afii57458=1618,e.afii57470=1607,e.afii57505=1700,e.afii57506=1662,e.afii57507=1670,e.afii57508=1688,e.afii57509=1711,e.afii57511=1657,e.afii57512=1672,e.afii57513=1681,e.afii57514=1722,e.afii57519=1746,e.afii57534=1749,e.afii57636=8362,e.afii57645=1470,e.afii57658=1475,e.afii57664=1488,e.afii57665=1489,e.afii57666=1490,e.afii57667=1491,e.afii57668=1492,e.afii57669=1493,e.afii57670=1494,e.afii57671=1495,e.afii57672=1496,e.afii57673=1497,e.afii57674=1498,e.afii57675=1499,e.afii57676=1500,e.afii57677=1501,e.afii57678=1502,e.afii57679=1503,e.afii57680=1504,e.afii57681=1505,e.afii57682=1506,e.afii57683=1507,e.afii57684=1508,e.afii57685=1509,e.afii57686=1510,e.afii57687=1511,e.afii57688=1512,e.afii57689=1513,e.afii57690=1514,e.afii57694=64298,e.afii57695=64299,e.afii57700=64331,e.afii57705=64287,e.afii57716=1520,e.afii57717=1521,e.afii57718=1522,e.afii57723=64309,e.afii57793=1460,e.afii57794=1461,e.afii57795=1462,e.afii57796=1467,e.afii57797=1464,e.afii57798=1463,e.afii57799=1456,e.afii57800=1458,e.afii57801=1457,e.afii57802=1459,e.afii57803=1474,e.afii57804=1473,e.afii57806=1465,e.afii57807=1468,e.afii57839=1469,e.afii57841=1471,e.afii57842=1472,e.afii57929=700,e.afii61248=8453,e.afii61289=8467,e.afii61352=8470,e.afii61573=8236,e.afii61574=8237,e.afii61575=8238,e.afii61664=8204,e.afii63167=1645,e.afii64937=701,e.agrave=224,e.agujarati=2693,e.agurmukhi=2565,e.ahiragana=12354,e.ahookabove=7843,e.aibengali=2448,e.aibopomofo=12574,e.aideva=2320,e.aiecyrillic=1237,e.aigujarati=2704,e.aigurmukhi=2576,e.aimatragurmukhi=2632,e.ainarabic=1593,e.ainfinalarabic=65226,e.aininitialarabic=65227,e.ainmedialarabic=65228,e.ainvertedbreve=515,e.aivowelsignbengali=2504,e.aivowelsigndeva=2376,e.aivowelsigngujarati=2760,e.akatakana=12450,e.akatakanahalfwidth=65393,e.akorean=12623,e.alef=1488,e.alefarabic=1575,e.alefdageshhebrew=64304,e.aleffinalarabic=65166,e.alefhamzaabovearabic=1571,e.alefhamzaabovefinalarabic=65156,e.alefhamzabelowarabic=1573,e.alefhamzabelowfinalarabic=65160,e.alefhebrew=1488,e.aleflamedhebrew=64335,e.alefmaddaabovearabic=1570,e.alefmaddaabovefinalarabic=65154,e.alefmaksuraarabic=1609,e.alefmaksurafinalarabic=65264,e.alefmaksurainitialarabic=65267,e.alefmaksuramedialarabic=65268,e.alefpatahhebrew=64302,e.alefqamatshebrew=64303,e.aleph=8501,e.allequal=8780,e.alpha=945,e.alphatonos=940,e.amacron=257,e.amonospace=65345,e.ampersand=38,e.ampersandmonospace=65286,e.ampersandsmall=63270,e.amsquare=13250,e.anbopomofo=12578,e.angbopomofo=12580,e.angbracketleft=12296,e.angbracketright=12297,e.angkhankhuthai=3674,e.angle=8736,e.anglebracketleft=12296,e.anglebracketleftvertical=65087,e.anglebracketright=12297,e.anglebracketrightvertical=65088,e.angleleft=9001,e.angleright=9002,e.angstrom=8491,e.anoteleia=903,e.anudattadeva=2386,e.anusvarabengali=2434,e.anusvaradeva=2306,e.anusvaragujarati=2690,e.aogonek=261,e.apaatosquare=13056,e.aparen=9372,e.apostrophearmenian=1370,e.apostrophemod=700,e.apple=63743,e.approaches=8784,e.approxequal=8776,e.approxequalorimage=8786,e.approximatelyequal=8773,e.araeaekorean=12686,e.araeakorean=12685,e.arc=8978,e.arighthalfring=7834,e.aring=229,e.aringacute=507,e.aringbelow=7681,e.arrowboth=8596,e.arrowdashdown=8675,e.arrowdashleft=8672,e.arrowdashright=8674,e.arrowdashup=8673,e.arrowdblboth=8660,e.arrowdbldown=8659,e.arrowdblleft=8656,e.arrowdblright=8658,e.arrowdblup=8657,e.arrowdown=8595,e.arrowdownleft=8601,e.arrowdownright=8600,e.arrowdownwhite=8681,e.arrowheaddownmod=709,e.arrowheadleftmod=706,e.arrowheadrightmod=707,e.arrowheadupmod=708,e.arrowhorizex=63719,e.arrowleft=8592,e.arrowleftdbl=8656,e.arrowleftdblstroke=8653,e.arrowleftoverright=8646,e.arrowleftwhite=8678,e.arrowright=8594,e.arrowrightdblstroke=8655,e.arrowrightheavy=10142,e.arrowrightoverleft=8644,e.arrowrightwhite=8680,e.arrowtableft=8676,e.arrowtabright=8677,e.arrowup=8593,e.arrowupdn=8597,e.arrowupdnbse=8616,e.arrowupdownbase=8616,e.arrowupleft=8598,e.arrowupleftofdown=8645,e.arrowupright=8599,e.arrowupwhite=8679,e.arrowvertex=63718,e.asciicircum=94,e.asciicircummonospace=65342,e.asciitilde=126,e.asciitildemonospace=65374,e.ascript=593,e.ascriptturned=594,e.asmallhiragana=12353,e.asmallkatakana=12449,e.asmallkatakanahalfwidth=65383,e.asterisk=42,e.asteriskaltonearabic=1645,e.asteriskarabic=1645,e.asteriskmath=8727,e.asteriskmonospace=65290,e.asterisksmall=65121,e.asterism=8258,e.asuperior=63209,e.asymptoticallyequal=8771,e.at=64,e.atilde=227,e.atmonospace=65312,e.atsmall=65131,e.aturned=592,e.aubengali=2452,e.aubopomofo=12576,e.audeva=2324,e.augujarati=2708,e.augurmukhi=2580,e.aulengthmarkbengali=2519,e.aumatragurmukhi=2636,e.auvowelsignbengali=2508,e.auvowelsigndeva=2380,e.auvowelsigngujarati=2764,e.avagrahadeva=2365,e.aybarmenian=1377,e.ayin=1506,e.ayinaltonehebrew=64288,e.ayinhebrew=1506,e.b=98,e.babengali=2476,e.backslash=92,e.backslashmonospace=65340,e.badeva=2348,e.bagujarati=2732,e.bagurmukhi=2604,e.bahiragana=12400,e.bahtthai=3647,e.bakatakana=12496,e.bar=124,e.barmonospace=65372,e.bbopomofo=12549,e.bcircle=9425,e.bdotaccent=7683,e.bdotbelow=7685,e.beamedsixteenthnotes=9836,e.because=8757,e.becyrillic=1073,e.beharabic=1576,e.behfinalarabic=65168,e.behinitialarabic=65169,e.behiragana=12409,e.behmedialarabic=65170,e.behmeeminitialarabic=64671,e.behmeemisolatedarabic=64520,e.behnoonfinalarabic=64621,e.bekatakana=12505,e.benarmenian=1378,e.bet=1489,e.beta=946,e.betasymbolgreek=976,e.betdagesh=64305,e.betdageshhebrew=64305,e.bethebrew=1489,e.betrafehebrew=64332,e.bhabengali=2477,e.bhadeva=2349,e.bhagujarati=2733,e.bhagurmukhi=2605,e.bhook=595,e.bihiragana=12403,e.bikatakana=12499,e.bilabialclick=664,e.bindigurmukhi=2562,e.birusquare=13105,e.blackcircle=9679,e.blackdiamond=9670,e.blackdownpointingtriangle=9660,e.blackleftpointingpointer=9668,e.blackleftpointingtriangle=9664,e.blacklenticularbracketleft=12304,e.blacklenticularbracketleftvertical=65083,e.blacklenticularbracketright=12305,e.blacklenticularbracketrightvertical=65084,e.blacklowerlefttriangle=9699,e.blacklowerrighttriangle=9698,e.blackrectangle=9644,e.blackrightpointingpointer=9658,e.blackrightpointingtriangle=9654,e.blacksmallsquare=9642,e.blacksmilingface=9787,e.blacksquare=9632,e.blackstar=9733,e.blackupperlefttriangle=9700,e.blackupperrighttriangle=9701,e.blackuppointingsmalltriangle=9652,e.blackuppointingtriangle=9650,e.blank=9251,e.blinebelow=7687,e.block=9608,e.bmonospace=65346,e.bobaimaithai=3610,e.bohiragana=12412,e.bokatakana=12508,e.bparen=9373,e.bqsquare=13251,e.braceex=63732,e.braceleft=123,e.braceleftbt=63731,e.braceleftmid=63730,e.braceleftmonospace=65371,e.braceleftsmall=65115,e.bracelefttp=63729,e.braceleftvertical=65079,e.braceright=125,e.bracerightbt=63742,e.bracerightmid=63741,e.bracerightmonospace=65373,e.bracerightsmall=65116,e.bracerighttp=63740,e.bracerightvertical=65080,e.bracketleft=91,e.bracketleftbt=63728,e.bracketleftex=63727,e.bracketleftmonospace=65339,e.bracketlefttp=63726,e.bracketright=93,e.bracketrightbt=63739,e.bracketrightex=63738,e.bracketrightmonospace=65341,e.bracketrighttp=63737,e.breve=728,e.brevebelowcmb=814,e.brevecmb=774,e.breveinvertedbelowcmb=815,e.breveinvertedcmb=785,e.breveinverteddoublecmb=865,e.bridgebelowcmb=810,e.bridgeinvertedbelowcmb=826,e.brokenbar=166,e.bstroke=384,e.bsuperior=63210,e.btopbar=387,e.buhiragana=12406,e.bukatakana=12502,e.bullet=8226,e.bulletinverse=9688,e.bulletoperator=8729,e.bullseye=9678,e.c=99,e.caarmenian=1390,e.cabengali=2458,e.cacute=263,e.cadeva=2330,e.cagujarati=2714,e.cagurmukhi=2586,e.calsquare=13192,e.candrabindubengali=2433,e.candrabinducmb=784,e.candrabindudeva=2305,e.candrabindugujarati=2689,e.capslock=8682,e.careof=8453,e.caron=711,e.caronbelowcmb=812,e.caroncmb=780,e.carriagereturn=8629,e.cbopomofo=12568,e.ccaron=269,e.ccedilla=231,e.ccedillaacute=7689,e.ccircle=9426,e.ccircumflex=265,e.ccurl=597,e.cdot=267,e.cdotaccent=267,e.cdsquare=13253,e.cedilla=184,e.cedillacmb=807,e.cent=162,e.centigrade=8451,e.centinferior=63199,e.centmonospace=65504,e.centoldstyle=63394,e.centsuperior=63200,e.chaarmenian=1401,e.chabengali=2459,e.chadeva=2331,e.chagujarati=2715,e.chagurmukhi=2587,e.chbopomofo=12564,e.cheabkhasiancyrillic=1213,e.checkmark=10003,e.checyrillic=1095,e.chedescenderabkhasiancyrillic=1215,e.chedescendercyrillic=1207,e.chedieresiscyrillic=1269,e.cheharmenian=1395,e.chekhakassiancyrillic=1228,e.cheverticalstrokecyrillic=1209,e.chi=967,e.chieuchacirclekorean=12919,e.chieuchaparenkorean=12823,e.chieuchcirclekorean=12905,e.chieuchkorean=12618,e.chieuchparenkorean=12809,e.chochangthai=3594,e.chochanthai=3592,e.chochingthai=3593,e.chochoethai=3596,e.chook=392,e.cieucacirclekorean=12918,e.cieucaparenkorean=12822,e.cieuccirclekorean=12904,e.cieuckorean=12616,e.cieucparenkorean=12808,e.cieucuparenkorean=12828,e.circle=9675,e.circlecopyrt=169,e.circlemultiply=8855,e.circleot=8857,e.circleplus=8853,e.circlepostalmark=12342,e.circlewithlefthalfblack=9680,e.circlewithrighthalfblack=9681,e.circumflex=710,e.circumflexbelowcmb=813,e.circumflexcmb=770,e.clear=8999,e.clickalveolar=450,e.clickdental=448,e.clicklateral=449,e.clickretroflex=451,e.club=9827,e.clubsuitblack=9827,e.clubsuitwhite=9831,e.cmcubedsquare=13220,e.cmonospace=65347,e.cmsquaredsquare=13216,e.coarmenian=1409,e.colon=58,e.colonmonetary=8353,e.colonmonospace=65306,e.colonsign=8353,e.colonsmall=65109,e.colontriangularhalfmod=721,e.colontriangularmod=720,e.comma=44,e.commaabovecmb=787,e.commaaboverightcmb=789,e.commaaccent=63171,e.commaarabic=1548,e.commaarmenian=1373,e.commainferior=63201,e.commamonospace=65292,e.commareversedabovecmb=788,e.commareversedmod=701,e.commasmall=65104,e.commasuperior=63202,e.commaturnedabovecmb=786,e.commaturnedmod=699,e.compass=9788,e.congruent=8773,e.contourintegral=8750,e.control=8963,e.controlACK=6,e.controlBEL=7,e.controlBS=8,e.controlCAN=24,e.controlCR=13,e.controlDC1=17,e.controlDC2=18,e.controlDC3=19,e.controlDC4=20,e.controlDEL=127,e.controlDLE=16,e.controlEM=25,e.controlENQ=5,e.controlEOT=4,e.controlESC=27,e.controlETB=23,e.controlETX=3,e.controlFF=12,e.controlFS=28,e.controlGS=29,e.controlHT=9,e.controlLF=10,e.controlNAK=21,e.controlNULL=0,e.controlRS=30,e.controlSI=15,e.controlSO=14,e.controlSOT=2,e.controlSTX=1,e.controlSUB=26,e.controlSYN=22,e.controlUS=31,e.controlVT=11,e.copyright=169,e.copyrightsans=63721,e.copyrightserif=63193,e.cornerbracketleft=12300,e.cornerbracketlefthalfwidth=65378,e.cornerbracketleftvertical=65089,e.cornerbracketright=12301,e.cornerbracketrighthalfwidth=65379,e.cornerbracketrightvertical=65090,e.corporationsquare=13183,e.cosquare=13255,e.coverkgsquare=13254,e.cparen=9374,e.cruzeiro=8354,e.cstretched=663,e.curlyand=8911,e.curlyor=8910,e.currency=164,e.cyrBreve=63185,e.cyrFlex=63186,e.cyrbreve=63188,e.cyrflex=63189,e.d=100,e.daarmenian=1380,e.dabengali=2470,e.dadarabic=1590,e.dadeva=2342,e.dadfinalarabic=65214,e.dadinitialarabic=65215,e.dadmedialarabic=65216,e.dagesh=1468,e.dageshhebrew=1468,e.dagger=8224,e.daggerdbl=8225,e.dagujarati=2726,e.dagurmukhi=2598,e.dahiragana=12384,e.dakatakana=12480,e.dalarabic=1583,e.dalet=1491,e.daletdagesh=64307,e.daletdageshhebrew=64307,e.dalethebrew=1491,e.dalfinalarabic=65194,e.dammaarabic=1615,e.dammalowarabic=1615,e.dammatanaltonearabic=1612,e.dammatanarabic=1612,e.danda=2404,e.dargahebrew=1447,e.dargalefthebrew=1447,e.dasiapneumatacyrilliccmb=1157,e.dblGrave=63187,e.dblanglebracketleft=12298,e.dblanglebracketleftvertical=65085,e.dblanglebracketright=12299,e.dblanglebracketrightvertical=65086,e.dblarchinvertedbelowcmb=811,e.dblarrowleft=8660,e.dblarrowright=8658,e.dbldanda=2405,e.dblgrave=63190,e.dblgravecmb=783,e.dblintegral=8748,e.dbllowline=8215,e.dbllowlinecmb=819,e.dbloverlinecmb=831,e.dblprimemod=698,e.dblverticalbar=8214,e.dblverticallineabovecmb=782,e.dbopomofo=12553,e.dbsquare=13256,e.dcaron=271,e.dcedilla=7697,e.dcircle=9427,e.dcircumflexbelow=7699,e.dcroat=273,e.ddabengali=2465,e.ddadeva=2337,e.ddagujarati=2721,e.ddagurmukhi=2593,e.ddalarabic=1672,e.ddalfinalarabic=64393,e.dddhadeva=2396,e.ddhabengali=2466,e.ddhadeva=2338,e.ddhagujarati=2722,e.ddhagurmukhi=2594,e.ddotaccent=7691,e.ddotbelow=7693,e.decimalseparatorarabic=1643,e.decimalseparatorpersian=1643,e.decyrillic=1076,e.degree=176,e.dehihebrew=1453,e.dehiragana=12391,e.deicoptic=1007,e.dekatakana=12487,e.deleteleft=9003,e.deleteright=8998,e.delta=948,e.deltaturned=397,e.denominatorminusonenumeratorbengali=2552,e.dezh=676,e.dhabengali=2471,e.dhadeva=2343,e.dhagujarati=2727,e.dhagurmukhi=2599,e.dhook=599,e.dialytikatonos=901,e.dialytikatonoscmb=836,e.diamond=9830,e.diamondsuitwhite=9826,e.dieresis=168,e.dieresisacute=63191,e.dieresisbelowcmb=804,e.dieresiscmb=776,e.dieresisgrave=63192,e.dieresistonos=901,e.dihiragana=12386,e.dikatakana=12482,e.dittomark=12291,e.divide=247,e.divides=8739,e.divisionslash=8725,e.djecyrillic=1106,e.dkshade=9619,e.dlinebelow=7695,e.dlsquare=13207,e.dmacron=273,e.dmonospace=65348,e.dnblock=9604,e.dochadathai=3598,e.dodekthai=3604,e.dohiragana=12393,e.dokatakana=12489,e.dollar=36;e.dollarinferior=63203,e.dollarmonospace=65284,e.dollaroldstyle=63268,e.dollarsmall=65129,e.dollarsuperior=63204,e.dong=8363,e.dorusquare=13094,e.dotaccent=729,e.dotaccentcmb=775,e.dotbelowcmb=803,e.dotbelowcomb=803,e.dotkatakana=12539,e.dotlessi=305,e.dotlessj=63166,e.dotlessjstrokehook=644,e.dotmath=8901,e.dottedcircle=9676,e.doubleyodpatah=64287,e.doubleyodpatahhebrew=64287,e.downtackbelowcmb=798,e.downtackmod=725,e.dparen=9375,e.dsuperior=63211,e.dtail=598,e.dtopbar=396,e.duhiragana=12389,e.dukatakana=12485,e.dz=499,e.dzaltone=675,e.dzcaron=454,e.dzcurl=677,e.dzeabkhasiancyrillic=1249,e.dzecyrillic=1109,e.dzhecyrillic=1119,e.e=101,e.eacute=233,e.earth=9793,e.ebengali=2447,e.ebopomofo=12572,e.ebreve=277,e.ecandradeva=2317,e.ecandragujarati=2701,e.ecandravowelsigndeva=2373,e.ecandravowelsigngujarati=2757,e.ecaron=283,e.ecedillabreve=7709,e.echarmenian=1381,e.echyiwnarmenian=1415,e.ecircle=9428,e.ecircumflex=234,e.ecircumflexacute=7871,e.ecircumflexbelow=7705,e.ecircumflexdotbelow=7879,e.ecircumflexgrave=7873,e.ecircumflexhookabove=7875,e.ecircumflextilde=7877,e.ecyrillic=1108,e.edblgrave=517,e.edeva=2319,e.edieresis=235,e.edot=279,e.edotaccent=279,e.edotbelow=7865,e.eegurmukhi=2575,e.eematragurmukhi=2631,e.efcyrillic=1092,e.egrave=232,e.egujarati=2703,e.eharmenian=1383,e.ehbopomofo=12573,e.ehiragana=12360,e.ehookabove=7867,e.eibopomofo=12575,e.eight=56,e.eightarabic=1640,e.eightbengali=2542,e.eightcircle=9319,e.eightcircleinversesansserif=10129,e.eightdeva=2414,e.eighteencircle=9329,e.eighteenparen=9349,e.eighteenperiod=9369,e.eightgujarati=2798,e.eightgurmukhi=2670,e.eighthackarabic=1640,e.eighthangzhou=12328,e.eighthnotebeamed=9835,e.eightideographicparen=12839,e.eightinferior=8328,e.eightmonospace=65304,e.eightoldstyle=63288,e.eightparen=9339,e.eightperiod=9359,e.eightpersian=1784,e.eightroman=8567,e.eightsuperior=8312,e.eightthai=3672,e.einvertedbreve=519,e.eiotifiedcyrillic=1125,e.ekatakana=12456,e.ekatakanahalfwidth=65396,e.ekonkargurmukhi=2676,e.ekorean=12628,e.elcyrillic=1083,e.element=8712,e.elevencircle=9322,e.elevenparen=9342,e.elevenperiod=9362,e.elevenroman=8570,e.ellipsis=8230,e.ellipsisvertical=8942,e.emacron=275,e.emacronacute=7703,e.emacrongrave=7701,e.emcyrillic=1084,e.emdash=8212,e.emdashvertical=65073,e.emonospace=65349,e.emphasismarkarmenian=1371,e.emptyset=8709,e.enbopomofo=12579,e.encyrillic=1085,e.endash=8211,e.endashvertical=65074,e.endescendercyrillic=1187,e.eng=331,e.engbopomofo=12581,e.enghecyrillic=1189,e.enhookcyrillic=1224,e.enspace=8194,e.eogonek=281,e.eokorean=12627,e.eopen=603,e.eopenclosed=666,e.eopenreversed=604,e.eopenreversedclosed=606,e.eopenreversedhook=605,e.eparen=9376,e.epsilon=949,e.epsilontonos=941,e.equal=61,e.equalmonospace=65309,e.equalsmall=65126,e.equalsuperior=8316,e.equivalence=8801,e.erbopomofo=12582,e.ercyrillic=1088,e.ereversed=600,e.ereversedcyrillic=1101,e.escyrillic=1089,e.esdescendercyrillic=1195,e.esh=643,e.eshcurl=646,e.eshortdeva=2318,e.eshortvowelsigndeva=2374,e.eshreversedloop=426,e.eshsquatreversed=645,e.esmallhiragana=12359,e.esmallkatakana=12455,e.esmallkatakanahalfwidth=65386,e.estimated=8494,e.esuperior=63212,e.eta=951,e.etarmenian=1384,e.etatonos=942,e.eth=240,e.etilde=7869,e.etildebelow=7707,e.etnahtafoukhhebrew=1425,e.etnahtafoukhlefthebrew=1425,e.etnahtahebrew=1425,e.etnahtalefthebrew=1425,e.eturned=477,e.eukorean=12641,e.euro=8364,e.evowelsignbengali=2503,e.evowelsigndeva=2375,e.evowelsigngujarati=2759,e.exclam=33,e.exclamarmenian=1372,e.exclamdbl=8252,e.exclamdown=161,e.exclamdownsmall=63393,e.exclammonospace=65281,e.exclamsmall=63265,e.existential=8707,e.ezh=658,e.ezhcaron=495,e.ezhcurl=659,e.ezhreversed=441,e.ezhtail=442,e.f=102,e.fadeva=2398,e.fagurmukhi=2654,e.fahrenheit=8457,e.fathaarabic=1614,e.fathalowarabic=1614,e.fathatanarabic=1611,e.fbopomofo=12552,e.fcircle=9429,e.fdotaccent=7711,e.feharabic=1601,e.feharmenian=1414,e.fehfinalarabic=65234,e.fehinitialarabic=65235,e.fehmedialarabic=65236,e.feicoptic=997,e.female=9792,e.ff=64256,e.ffi=64259,e.ffl=64260,e.fi=64257,e.fifteencircle=9326,e.fifteenparen=9346,e.fifteenperiod=9366,e.figuredash=8210,e.filledbox=9632,e.filledrect=9644,e.finalkaf=1498,e.finalkafdagesh=64314,e.finalkafdageshhebrew=64314,e.finalkafhebrew=1498,e.finalmem=1501,e.finalmemhebrew=1501,e.finalnun=1503,e.finalnunhebrew=1503,e.finalpe=1507,e.finalpehebrew=1507,e.finaltsadi=1509,e.finaltsadihebrew=1509,e.firsttonechinese=713,e.fisheye=9673,e.fitacyrillic=1139,e.five=53,e.fivearabic=1637,e.fivebengali=2539,e.fivecircle=9316,e.fivecircleinversesansserif=10126,e.fivedeva=2411,e.fiveeighths=8541,e.fivegujarati=2795,e.fivegurmukhi=2667,e.fivehackarabic=1637,e.fivehangzhou=12325,e.fiveideographicparen=12836,e.fiveinferior=8325,e.fivemonospace=65301,e.fiveoldstyle=63285,e.fiveparen=9336,e.fiveperiod=9356,e.fivepersian=1781,e.fiveroman=8564,e.fivesuperior=8309,e.fivethai=3669,e.fl=64258,e.florin=402,e.fmonospace=65350,e.fmsquare=13209,e.fofanthai=3615,e.fofathai=3613,e.fongmanthai=3663,e.forall=8704,e.four=52,e.fourarabic=1636,e.fourbengali=2538,e.fourcircle=9315,e.fourcircleinversesansserif=10125,e.fourdeva=2410,e.fourgujarati=2794,e.fourgurmukhi=2666,e.fourhackarabic=1636,e.fourhangzhou=12324,e.fourideographicparen=12835,e.fourinferior=8324,e.fourmonospace=65300,e.fournumeratorbengali=2551,e.fouroldstyle=63284,e.fourparen=9335,e.fourperiod=9355,e.fourpersian=1780,e.fourroman=8563,e.foursuperior=8308,e.fourteencircle=9325,e.fourteenparen=9345,e.fourteenperiod=9365,e.fourthai=3668,e.fourthtonechinese=715,e.fparen=9377,e.fraction=8260,e.franc=8355,e.g=103,e.gabengali=2455,e.gacute=501,e.gadeva=2327,e.gafarabic=1711,e.gaffinalarabic=64403,e.gafinitialarabic=64404,e.gafmedialarabic=64405,e.gagujarati=2711,e.gagurmukhi=2583,e.gahiragana=12364,e.gakatakana=12460,e.gamma=947,e.gammalatinsmall=611,e.gammasuperior=736,e.gangiacoptic=1003,e.gbopomofo=12557,e.gbreve=287,e.gcaron=487,e.gcedilla=291,e.gcircle=9430,e.gcircumflex=285,e.gcommaaccent=291,e.gdot=289,e.gdotaccent=289,e.gecyrillic=1075,e.gehiragana=12370,e.gekatakana=12466,e.geometricallyequal=8785,e.gereshaccenthebrew=1436,e.gereshhebrew=1523,e.gereshmuqdamhebrew=1437,e.germandbls=223,e.gershayimaccenthebrew=1438,e.gershayimhebrew=1524,e.getamark=12307,e.ghabengali=2456,e.ghadarmenian=1394,e.ghadeva=2328,e.ghagujarati=2712,e.ghagurmukhi=2584,e.ghainarabic=1594,e.ghainfinalarabic=65230,e.ghaininitialarabic=65231,e.ghainmedialarabic=65232,e.ghemiddlehookcyrillic=1173,e.ghestrokecyrillic=1171,e.gheupturncyrillic=1169,e.ghhadeva=2394,e.ghhagurmukhi=2650,e.ghook=608,e.ghzsquare=13203,e.gihiragana=12366,e.gikatakana=12462,e.gimarmenian=1379,e.gimel=1490,e.gimeldagesh=64306,e.gimeldageshhebrew=64306,e.gimelhebrew=1490,e.gjecyrillic=1107,e.glottalinvertedstroke=446,e.glottalstop=660,e.glottalstopinverted=662,e.glottalstopmod=704,e.glottalstopreversed=661,e.glottalstopreversedmod=705,e.glottalstopreversedsuperior=740,e.glottalstopstroke=673,e.glottalstopstrokereversed=674,e.gmacron=7713,e.gmonospace=65351,e.gohiragana=12372,e.gokatakana=12468,e.gparen=9378,e.gpasquare=13228,e.gradient=8711,e.grave=96,e.gravebelowcmb=790,e.gravecmb=768,e.gravecomb=768,e.gravedeva=2387,e.gravelowmod=718,e.gravemonospace=65344,e.gravetonecmb=832,e.greater=62,e.greaterequal=8805,e.greaterequalorless=8923,e.greatermonospace=65310,e.greaterorequivalent=8819,e.greaterorless=8823,e.greateroverequal=8807,e.greatersmall=65125,e.gscript=609,e.gstroke=485,e.guhiragana=12368,e.guillemotleft=171,e.guillemotright=187,e.guilsinglleft=8249,e.guilsinglright=8250,e.gukatakana=12464,e.guramusquare=13080,e.gysquare=13257,e.h=104,e.haabkhasiancyrillic=1193,e.haaltonearabic=1729,e.habengali=2489,e.hadescendercyrillic=1203,e.hadeva=2361,e.hagujarati=2745,e.hagurmukhi=2617,e.haharabic=1581,e.hahfinalarabic=65186,e.hahinitialarabic=65187,e.hahiragana=12399,e.hahmedialarabic=65188,e.haitusquare=13098,e.hakatakana=12495,e.hakatakanahalfwidth=65418,e.halantgurmukhi=2637,e.hamzaarabic=1569,e.hamzalowarabic=1569,e.hangulfiller=12644,e.hardsigncyrillic=1098,e.harpoonleftbarbup=8636,e.harpoonrightbarbup=8640,e.hasquare=13258,e.hatafpatah=1458,e.hatafpatah16=1458,e.hatafpatah23=1458,e.hatafpatah2f=1458,e.hatafpatahhebrew=1458,e.hatafpatahnarrowhebrew=1458,e.hatafpatahquarterhebrew=1458,e.hatafpatahwidehebrew=1458,e.hatafqamats=1459,e.hatafqamats1b=1459,e.hatafqamats28=1459,e.hatafqamats34=1459,e.hatafqamatshebrew=1459,e.hatafqamatsnarrowhebrew=1459,e.hatafqamatsquarterhebrew=1459,e.hatafqamatswidehebrew=1459,e.hatafsegol=1457,e.hatafsegol17=1457,e.hatafsegol24=1457,e.hatafsegol30=1457,e.hatafsegolhebrew=1457,e.hatafsegolnarrowhebrew=1457,e.hatafsegolquarterhebrew=1457,e.hatafsegolwidehebrew=1457,e.hbar=295,e.hbopomofo=12559,e.hbrevebelow=7723,e.hcedilla=7721,e.hcircle=9431,e.hcircumflex=293,e.hdieresis=7719,e.hdotaccent=7715,e.hdotbelow=7717,e.he=1492,e.heart=9829,e.heartsuitblack=9829,e.heartsuitwhite=9825,e.hedagesh=64308,e.hedageshhebrew=64308,e.hehaltonearabic=1729,e.heharabic=1607,e.hehebrew=1492,e.hehfinalaltonearabic=64423,e.hehfinalalttwoarabic=65258,e.hehfinalarabic=65258,e.hehhamzaabovefinalarabic=64421,e.hehhamzaaboveisolatedarabic=64420,e.hehinitialaltonearabic=64424,e.hehinitialarabic=65259,e.hehiragana=12408,e.hehmedialaltonearabic=64425,e.hehmedialarabic=65260,e.heiseierasquare=13179,e.hekatakana=12504,e.hekatakanahalfwidth=65421,e.hekutaarusquare=13110,e.henghook=615,e.herutusquare=13113,e.het=1495,e.hethebrew=1495,e.hhook=614,e.hhooksuperior=689,e.hieuhacirclekorean=12923,e.hieuhaparenkorean=12827,e.hieuhcirclekorean=12909,e.hieuhkorean=12622,e.hieuhparenkorean=12813,e.hihiragana=12402,e.hikatakana=12498,e.hikatakanahalfwidth=65419,e.hiriq=1460,e.hiriq14=1460,e.hiriq21=1460,e.hiriq2d=1460,e.hiriqhebrew=1460,e.hiriqnarrowhebrew=1460,e.hiriqquarterhebrew=1460,e.hiriqwidehebrew=1460,e.hlinebelow=7830,e.hmonospace=65352,e.hoarmenian=1392,e.hohipthai=3627,e.hohiragana=12411,e.hokatakana=12507,e.hokatakanahalfwidth=65422,e.holam=1465,e.holam19=1465,e.holam26=1465,e.holam32=1465,e.holamhebrew=1465,e.holamnarrowhebrew=1465,e.holamquarterhebrew=1465,e.holamwidehebrew=1465,e.honokhukthai=3630,e.hookabovecomb=777,e.hookcmb=777,e.hookpalatalizedbelowcmb=801,e.hookretroflexbelowcmb=802,e.hoonsquare=13122,e.horicoptic=1001,e.horizontalbar=8213,e.horncmb=795,e.hotsprings=9832,e.house=8962,e.hparen=9379,e.hsuperior=688,e.hturned=613,e.huhiragana=12405,e.huiitosquare=13107,e.hukatakana=12501,e.hukatakanahalfwidth=65420,e.hungarumlaut=733,e.hungarumlautcmb=779,e.hv=405,e.hyphen=45,e.hypheninferior=63205,e.hyphenmonospace=65293,e.hyphensmall=65123,e.hyphensuperior=63206,e.hyphentwo=8208,e.i=105,e.iacute=237,e.iacyrillic=1103,e.ibengali=2439,e.ibopomofo=12583,e.ibreve=301,e.icaron=464,e.icircle=9432,e.icircumflex=238,e.icyrillic=1110,e.idblgrave=521,e.ideographearthcircle=12943,e.ideographfirecircle=12939,e.ideographicallianceparen=12863,e.ideographiccallparen=12858,e.ideographiccentrecircle=12965,e.ideographicclose=12294,e.ideographiccomma=12289,e.ideographiccommaleft=65380,e.ideographiccongratulationparen=12855,e.ideographiccorrectcircle=12963,e.ideographicearthparen=12847,e.ideographicenterpriseparen=12861,e.ideographicexcellentcircle=12957,e.ideographicfestivalparen=12864,e.ideographicfinancialcircle=12950,e.ideographicfinancialparen=12854,e.ideographicfireparen=12843,e.ideographichaveparen=12850,e.ideographichighcircle=12964,e.ideographiciterationmark=12293,e.ideographiclaborcircle=12952,e.ideographiclaborparen=12856,e.ideographicleftcircle=12967,e.ideographiclowcircle=12966,e.ideographicmedicinecircle=12969,e.ideographicmetalparen=12846,e.ideographicmoonparen=12842,e.ideographicnameparen=12852,e.ideographicperiod=12290,e.ideographicprintcircle=12958,e.ideographicreachparen=12867,e.ideographicrepresentparen=12857,e.ideographicresourceparen=12862,e.ideographicrightcircle=12968,e.ideographicsecretcircle=12953,e.ideographicselfparen=12866,e.ideographicsocietyparen=12851,e.ideographicspace=12288,e.ideographicspecialparen=12853,e.ideographicstockparen=12849,e.ideographicstudyparen=12859,e.ideographicsunparen=12848,e.ideographicsuperviseparen=12860,e.ideographicwaterparen=12844,e.ideographicwoodparen=12845,e.ideographiczero=12295,e.ideographmetalcircle=12942,e.ideographmooncircle=12938,e.ideographnamecircle=12948,e.ideographsuncircle=12944,e.ideographwatercircle=12940,e.ideographwoodcircle=12941,e.ideva=2311,e.idieresis=239,e.idieresisacute=7727,e.idieresiscyrillic=1253,e.idotbelow=7883,e.iebrevecyrillic=1239,e.iecyrillic=1077,e.ieungacirclekorean=12917,e.ieungaparenkorean=12821,e.ieungcirclekorean=12903,e.ieungkorean=12615,e.ieungparenkorean=12807,e.igrave=236,e.igujarati=2695,e.igurmukhi=2567,e.ihiragana=12356,e.ihookabove=7881,e.iibengali=2440,e.iicyrillic=1080,e.iideva=2312,e.iigujarati=2696,e.iigurmukhi=2568,e.iimatragurmukhi=2624,e.iinvertedbreve=523,e.iishortcyrillic=1081,e.iivowelsignbengali=2496,e.iivowelsigndeva=2368,e.iivowelsigngujarati=2752,e.ij=307,e.ikatakana=12452,e.ikatakanahalfwidth=65394,e.ikorean=12643,e.ilde=732,e.iluyhebrew=1452,e.imacron=299,e.imacroncyrillic=1251,e.imageorapproximatelyequal=8787,e.imatragurmukhi=2623,e.imonospace=65353,e.increment=8710,e.infinity=8734,e.iniarmenian=1387,e.integral=8747,e.integralbottom=8993,e.integralbt=8993,e.integralex=63733,e.integraltop=8992,e.integraltp=8992,e.intersection=8745,e.intisquare=13061,e.invbullet=9688,e.invcircle=9689,e.invsmileface=9787,e.iocyrillic=1105,e.iogonek=303,e.iota=953,e.iotadieresis=970,e.iotadieresistonos=912,e.iotalatin=617,e.iotatonos=943,e.iparen=9380,e.irigurmukhi=2674,e.ismallhiragana=12355,e.ismallkatakana=12451,e.ismallkatakanahalfwidth=65384,e.issharbengali=2554,e.istroke=616,e.isuperior=63213,e.iterationhiragana=12445,e.iterationkatakana=12541,e.itilde=297,e.itildebelow=7725,e.iubopomofo=12585,e.iucyrillic=1102,e.ivowelsignbengali=2495,e.ivowelsigndeva=2367,e.ivowelsigngujarati=2751,e.izhitsacyrillic=1141,e.izhitsadblgravecyrillic=1143,e.j=106,e.jaarmenian=1393,e.jabengali=2460,e.jadeva=2332,e.jagujarati=2716,e.jagurmukhi=2588,e.jbopomofo=12560,e.jcaron=496,e.jcircle=9433,e.jcircumflex=309,e.jcrossedtail=669,e.jdotlessstroke=607,e.jecyrillic=1112,e.jeemarabic=1580,e.jeemfinalarabic=65182,e.jeeminitialarabic=65183,e.jeemmedialarabic=65184,e.jeharabic=1688,e.jehfinalarabic=64395,e.jhabengali=2461,e.jhadeva=2333,e.jhagujarati=2717,e.jhagurmukhi=2589,e.jheharmenian=1403,e.jis=12292,e.jmonospace=65354,e.jparen=9381,e.jsuperior=690,e.k=107,e.kabashkircyrillic=1185,e.kabengali=2453,e.kacute=7729,e.kacyrillic=1082,e.kadescendercyrillic=1179,e.kadeva=2325,e.kaf=1499,e.kafarabic=1603,e.kafdagesh=64315,e.kafdageshhebrew=64315,e.kaffinalarabic=65242,e.kafhebrew=1499,e.kafinitialarabic=65243,e.kafmedialarabic=65244,e.kafrafehebrew=64333,e.kagujarati=2709,e.kagurmukhi=2581,e.kahiragana=12363,e.kahookcyrillic=1220,e.kakatakana=12459,e.kakatakanahalfwidth=65398,e.kappa=954,e.kappasymbolgreek=1008,e.kapyeounmieumkorean=12657,e.kapyeounphieuphkorean=12676,e.kapyeounpieupkorean=12664,e.kapyeounssangpieupkorean=12665,e.karoriisquare=13069,e.kashidaautoarabic=1600,e.kashidaautonosidebearingarabic=1600,e.kasmallkatakana=12533,e.kasquare=13188,e.kasraarabic=1616,e.kasratanarabic=1613,e.kastrokecyrillic=1183,e.katahiraprolongmarkhalfwidth=65392,e.kaverticalstrokecyrillic=1181,e.kbopomofo=12558,e.kcalsquare=13193,e.kcaron=489,e.kcedilla=311,e.kcircle=9434,e.kcommaaccent=311,e.kdotbelow=7731,e.keharmenian=1412,e.kehiragana=12369,e.kekatakana=12465,e.kekatakanahalfwidth=65401,e.kenarmenian=1391,e.kesmallkatakana=12534,e.kgreenlandic=312,e.khabengali=2454,e.khacyrillic=1093,e.khadeva=2326,e.khagujarati=2710,e.khagurmukhi=2582,e.khaharabic=1582,e.khahfinalarabic=65190,e.khahinitialarabic=65191,e.khahmedialarabic=65192,e.kheicoptic=999,e.khhadeva=2393,e.khhagurmukhi=2649,e.khieukhacirclekorean=12920,e.khieukhaparenkorean=12824,e.khieukhcirclekorean=12906,e.khieukhkorean=12619,e.khieukhparenkorean=12810,e.khokhaithai=3586,e.khokhonthai=3589,e.khokhuatthai=3587,e.khokhwaithai=3588,e.khomutthai=3675,e.khook=409,e.khorakhangthai=3590,e.khzsquare=13201,e.kihiragana=12365,e.kikatakana=12461,e.kikatakanahalfwidth=65399,e.kiroguramusquare=13077,e.kiromeetorusquare=13078,e.kirosquare=13076,e.kiyeokacirclekorean=12910,e.kiyeokaparenkorean=12814,e.kiyeokcirclekorean=12896,e.kiyeokkorean=12593,e.kiyeokparenkorean=12800,e.kiyeoksioskorean=12595,e.kjecyrillic=1116,e.klinebelow=7733,e.klsquare=13208,e.kmcubedsquare=13222,e.kmonospace=65355;e.kmsquaredsquare=13218,e.kohiragana=12371,e.kohmsquare=13248,e.kokaithai=3585,e.kokatakana=12467,e.kokatakanahalfwidth=65402,e.kooposquare=13086,e.koppacyrillic=1153,e.koreanstandardsymbol=12927,e.koroniscmb=835,e.kparen=9382,e.kpasquare=13226,e.ksicyrillic=1135,e.ktsquare=13263,e.kturned=670,e.kuhiragana=12367,e.kukatakana=12463,e.kukatakanahalfwidth=65400,e.kvsquare=13240,e.kwsquare=13246,e.l=108,e.labengali=2482,e.lacute=314,e.ladeva=2354,e.lagujarati=2738,e.lagurmukhi=2610,e.lakkhangyaothai=3653,e.lamaleffinalarabic=65276,e.lamalefhamzaabovefinalarabic=65272,e.lamalefhamzaaboveisolatedarabic=65271,e.lamalefhamzabelowfinalarabic=65274,e.lamalefhamzabelowisolatedarabic=65273,e.lamalefisolatedarabic=65275,e.lamalefmaddaabovefinalarabic=65270,e.lamalefmaddaaboveisolatedarabic=65269,e.lamarabic=1604,e.lambda=955,e.lambdastroke=411,e.lamed=1500,e.lameddagesh=64316,e.lameddageshhebrew=64316,e.lamedhebrew=1500,e.lamfinalarabic=65246,e.lamhahinitialarabic=64714,e.laminitialarabic=65247,e.lamjeeminitialarabic=64713,e.lamkhahinitialarabic=64715,e.lamlamhehisolatedarabic=65010,e.lammedialarabic=65248,e.lammeemhahinitialarabic=64904,e.lammeeminitialarabic=64716,e.largecircle=9711,e.lbar=410,e.lbelt=620,e.lbopomofo=12556,e.lcaron=318,e.lcedilla=316,e.lcircle=9435,e.lcircumflexbelow=7741,e.lcommaaccent=316,e.ldot=320,e.ldotaccent=320,e.ldotbelow=7735,e.ldotbelowmacron=7737,e.leftangleabovecmb=794,e.lefttackbelowcmb=792,e.less=60,e.lessequal=8804,e.lessequalorgreater=8922,e.lessmonospace=65308,e.lessorequivalent=8818,e.lessorgreater=8822,e.lessoverequal=8806,e.lesssmall=65124,e.lezh=622,e.lfblock=9612,e.lhookretroflex=621,e.lira=8356,e.liwnarmenian=1388,e.lj=457,e.ljecyrillic=1113,e.ll=63168,e.lladeva=2355,e.llagujarati=2739,e.llinebelow=7739,e.llladeva=2356,e.llvocalicbengali=2529,e.llvocalicdeva=2401,e.llvocalicvowelsignbengali=2531,e.llvocalicvowelsigndeva=2403,e.lmiddletilde=619,e.lmonospace=65356,e.lmsquare=13264,e.lochulathai=3628,e.logicaland=8743,e.logicalnot=172,e.logicalnotreversed=8976,e.logicalor=8744,e.lolingthai=3621,e.longs=383,e.lowlinecenterline=65102,e.lowlinecmb=818,e.lowlinedashed=65101,e.lozenge=9674,e.lparen=9383,e.lslash=322,e.lsquare=8467,e.lsuperior=63214,e.ltshade=9617,e.luthai=3622,e.lvocalicbengali=2444,e.lvocalicdeva=2316,e.lvocalicvowelsignbengali=2530,e.lvocalicvowelsigndeva=2402,e.lxsquare=13267,e.m=109,e.mabengali=2478,e.macron=175,e.macronbelowcmb=817,e.macroncmb=772,e.macronlowmod=717,e.macronmonospace=65507,e.macute=7743,e.madeva=2350,e.magujarati=2734,e.magurmukhi=2606,e.mahapakhhebrew=1444,e.mahapakhlefthebrew=1444,e.mahiragana=12414,e.maichattawalowleftthai=63637,e.maichattawalowrightthai=63636,e.maichattawathai=3659,e.maichattawaupperleftthai=63635,e.maieklowleftthai=63628,e.maieklowrightthai=63627,e.maiekthai=3656,e.maiekupperleftthai=63626,e.maihanakatleftthai=63620,e.maihanakatthai=3633,e.maitaikhuleftthai=63625,e.maitaikhuthai=3655,e.maitholowleftthai=63631,e.maitholowrightthai=63630,e.maithothai=3657,e.maithoupperleftthai=63629,e.maitrilowleftthai=63634,e.maitrilowrightthai=63633,e.maitrithai=3658,e.maitriupperleftthai=63632,e.maiyamokthai=3654,e.makatakana=12510,e.makatakanahalfwidth=65423,e.male=9794,e.mansyonsquare=13127,e.maqafhebrew=1470,e.mars=9794,e.masoracirclehebrew=1455,e.masquare=13187,e.mbopomofo=12551,e.mbsquare=13268,e.mcircle=9436,e.mcubedsquare=13221,e.mdotaccent=7745,e.mdotbelow=7747,e.meemarabic=1605,e.meemfinalarabic=65250,e.meeminitialarabic=65251,e.meemmedialarabic=65252,e.meemmeeminitialarabic=64721,e.meemmeemisolatedarabic=64584,e.meetorusquare=13133,e.mehiragana=12417,e.meizierasquare=13182,e.mekatakana=12513,e.mekatakanahalfwidth=65426,e.mem=1502,e.memdagesh=64318,e.memdageshhebrew=64318,e.memhebrew=1502,e.menarmenian=1396,e.merkhahebrew=1445,e.merkhakefulahebrew=1446,e.merkhakefulalefthebrew=1446,e.merkhalefthebrew=1445,e.mhook=625,e.mhzsquare=13202,e.middledotkatakanahalfwidth=65381,e.middot=183,e.mieumacirclekorean=12914,e.mieumaparenkorean=12818,e.mieumcirclekorean=12900,e.mieumkorean=12609,e.mieumpansioskorean=12656,e.mieumparenkorean=12804,e.mieumpieupkorean=12654,e.mieumsioskorean=12655,e.mihiragana=12415,e.mikatakana=12511,e.mikatakanahalfwidth=65424,e.minus=8722,e.minusbelowcmb=800,e.minuscircle=8854,e.minusmod=727,e.minusplus=8723,e.minute=8242,e.miribaarusquare=13130,e.mirisquare=13129,e.mlonglegturned=624,e.mlsquare=13206,e.mmcubedsquare=13219,e.mmonospace=65357,e.mmsquaredsquare=13215,e.mohiragana=12418,e.mohmsquare=13249,e.mokatakana=12514,e.mokatakanahalfwidth=65427,e.molsquare=13270,e.momathai=3617,e.moverssquare=13223,e.moverssquaredsquare=13224,e.mparen=9384,e.mpasquare=13227,e.mssquare=13235,e.msuperior=63215,e.mturned=623,e.mu=181,e.mu1=181,e.muasquare=13186,e.muchgreater=8811,e.muchless=8810,e.mufsquare=13196,e.mugreek=956,e.mugsquare=13197,e.muhiragana=12416,e.mukatakana=12512,e.mukatakanahalfwidth=65425,e.mulsquare=13205,e.multiply=215,e.mumsquare=13211,e.munahhebrew=1443,e.munahlefthebrew=1443,e.musicalnote=9834,e.musicalnotedbl=9835,e.musicflatsign=9837,e.musicsharpsign=9839,e.mussquare=13234,e.muvsquare=13238,e.muwsquare=13244,e.mvmegasquare=13241,e.mvsquare=13239,e.mwmegasquare=13247,e.mwsquare=13245,e.n=110,e.nabengali=2472,e.nabla=8711,e.nacute=324,e.nadeva=2344,e.nagujarati=2728,e.nagurmukhi=2600,e.nahiragana=12394,e.nakatakana=12490,e.nakatakanahalfwidth=65413,e.napostrophe=329,e.nasquare=13185,e.nbopomofo=12555,e.nbspace=160,e.ncaron=328,e.ncedilla=326,e.ncircle=9437,e.ncircumflexbelow=7755,e.ncommaaccent=326,e.ndotaccent=7749,e.ndotbelow=7751,e.nehiragana=12397,e.nekatakana=12493,e.nekatakanahalfwidth=65416,e.newsheqelsign=8362,e.nfsquare=13195,e.ngabengali=2457,e.ngadeva=2329,e.ngagujarati=2713,e.ngagurmukhi=2585,e.ngonguthai=3591,e.nhiragana=12435,e.nhookleft=626,e.nhookretroflex=627,e.nieunacirclekorean=12911,e.nieunaparenkorean=12815,e.nieuncieuckorean=12597,e.nieuncirclekorean=12897,e.nieunhieuhkorean=12598,e.nieunkorean=12596,e.nieunpansioskorean=12648,e.nieunparenkorean=12801,e.nieunsioskorean=12647,e.nieuntikeutkorean=12646,e.nihiragana=12395,e.nikatakana=12491,e.nikatakanahalfwidth=65414,e.nikhahitleftthai=63641,e.nikhahitthai=3661,e.nine=57,e.ninearabic=1641,e.ninebengali=2543,e.ninecircle=9320,e.ninecircleinversesansserif=10130,e.ninedeva=2415,e.ninegujarati=2799,e.ninegurmukhi=2671,e.ninehackarabic=1641,e.ninehangzhou=12329,e.nineideographicparen=12840,e.nineinferior=8329,e.ninemonospace=65305,e.nineoldstyle=63289,e.nineparen=9340,e.nineperiod=9360,e.ninepersian=1785,e.nineroman=8568,e.ninesuperior=8313,e.nineteencircle=9330,e.nineteenparen=9350,e.nineteenperiod=9370,e.ninethai=3673,e.nj=460,e.njecyrillic=1114,e.nkatakana=12531,e.nkatakanahalfwidth=65437,e.nlegrightlong=414,e.nlinebelow=7753,e.nmonospace=65358,e.nmsquare=13210,e.nnabengali=2467,e.nnadeva=2339,e.nnagujarati=2723,e.nnagurmukhi=2595,e.nnnadeva=2345,e.nohiragana=12398,e.nokatakana=12494,e.nokatakanahalfwidth=65417,e.nonbreakingspace=160,e.nonenthai=3603,e.nonuthai=3609,e.noonarabic=1606,e.noonfinalarabic=65254,e.noonghunnaarabic=1722,e.noonghunnafinalarabic=64415,e.nooninitialarabic=65255,e.noonjeeminitialarabic=64722,e.noonjeemisolatedarabic=64587,e.noonmedialarabic=65256,e.noonmeeminitialarabic=64725,e.noonmeemisolatedarabic=64590,e.noonnoonfinalarabic=64653,e.notcontains=8716,e.notelement=8713,e.notelementof=8713,e.notequal=8800,e.notgreater=8815,e.notgreaternorequal=8817,e.notgreaternorless=8825,e.notidentical=8802,e.notless=8814,e.notlessnorequal=8816,e.notparallel=8742,e.notprecedes=8832,e.notsubset=8836,e.notsucceeds=8833,e.notsuperset=8837,e.nowarmenian=1398,e.nparen=9385,e.nssquare=13233,e.nsuperior=8319,e.ntilde=241,e.nu=957,e.nuhiragana=12396,e.nukatakana=12492,e.nukatakanahalfwidth=65415,e.nuktabengali=2492,e.nuktadeva=2364,e.nuktagujarati=2748,e.nuktagurmukhi=2620,e.numbersign=35,e.numbersignmonospace=65283,e.numbersignsmall=65119,e.numeralsigngreek=884,e.numeralsignlowergreek=885,e.numero=8470,e.nun=1504,e.nundagesh=64320,e.nundageshhebrew=64320,e.nunhebrew=1504,e.nvsquare=13237,e.nwsquare=13243,e.nyabengali=2462,e.nyadeva=2334,e.nyagujarati=2718,e.nyagurmukhi=2590,e.o=111,e.oacute=243,e.oangthai=3629,e.obarred=629,e.obarredcyrillic=1257,e.obarreddieresiscyrillic=1259,e.obengali=2451,e.obopomofo=12571,e.obreve=335,e.ocandradeva=2321,e.ocandragujarati=2705,e.ocandravowelsigndeva=2377,e.ocandravowelsigngujarati=2761,e.ocaron=466,e.ocircle=9438,e.ocircumflex=244,e.ocircumflexacute=7889,e.ocircumflexdotbelow=7897,e.ocircumflexgrave=7891,e.ocircumflexhookabove=7893,e.ocircumflextilde=7895,e.ocyrillic=1086,e.odblacute=337,e.odblgrave=525,e.odeva=2323,e.odieresis=246,e.odieresiscyrillic=1255,e.odotbelow=7885,e.oe=339,e.oekorean=12634,e.ogonek=731,e.ogonekcmb=808,e.ograve=242,e.ogujarati=2707,e.oharmenian=1413,e.ohiragana=12362,e.ohookabove=7887,e.ohorn=417,e.ohornacute=7899,e.ohorndotbelow=7907,e.ohorngrave=7901,e.ohornhookabove=7903,e.ohorntilde=7905,e.ohungarumlaut=337,e.oi=419,e.oinvertedbreve=527,e.okatakana=12458,e.okatakanahalfwidth=65397,e.okorean=12631,e.olehebrew=1451,e.omacron=333,e.omacronacute=7763,e.omacrongrave=7761,e.omdeva=2384,e.omega=969,e.omega1=982,e.omegacyrillic=1121,e.omegalatinclosed=631,e.omegaroundcyrillic=1147,e.omegatitlocyrillic=1149,e.omegatonos=974,e.omgujarati=2768,e.omicron=959,e.omicrontonos=972,e.omonospace=65359,e.one=49,e.onearabic=1633,e.onebengali=2535,e.onecircle=9312,e.onecircleinversesansserif=10122,e.onedeva=2407,e.onedotenleader=8228,e.oneeighth=8539,e.onefitted=63196,e.onegujarati=2791,e.onegurmukhi=2663,e.onehackarabic=1633,e.onehalf=189,e.onehangzhou=12321,e.oneideographicparen=12832,e.oneinferior=8321,e.onemonospace=65297,e.onenumeratorbengali=2548,e.oneoldstyle=63281,e.oneparen=9332,e.oneperiod=9352,e.onepersian=1777,e.onequarter=188,e.oneroman=8560,e.onesuperior=185,e.onethai=3665,e.onethird=8531,e.oogonek=491,e.oogonekmacron=493,e.oogurmukhi=2579,e.oomatragurmukhi=2635,e.oopen=596,e.oparen=9386,e.openbullet=9702,e.option=8997,e.ordfeminine=170,e.ordmasculine=186,e.orthogonal=8735,e.oshortdeva=2322,e.oshortvowelsigndeva=2378,e.oslash=248,e.oslashacute=511,e.osmallhiragana=12361,e.osmallkatakana=12457,e.osmallkatakanahalfwidth=65387,e.ostrokeacute=511,e.osuperior=63216,e.otcyrillic=1151,e.otilde=245,e.otildeacute=7757,e.otildedieresis=7759,e.oubopomofo=12577,e.overline=8254,e.overlinecenterline=65098,e.overlinecmb=773,e.overlinedashed=65097,e.overlinedblwavy=65100,e.overlinewavy=65099,e.overscore=175,e.ovowelsignbengali=2507,e.ovowelsigndeva=2379,e.ovowelsigngujarati=2763,e.p=112,e.paampssquare=13184,e.paasentosquare=13099,e.pabengali=2474,e.pacute=7765,e.padeva=2346,e.pagedown=8671,e.pageup=8670,e.pagujarati=2730,e.pagurmukhi=2602,e.pahiragana=12401,e.paiyannoithai=3631,e.pakatakana=12497,e.palatalizationcyrilliccmb=1156,e.palochkacyrillic=1216,e.pansioskorean=12671,e.paragraph=182,e.parallel=8741,e.parenleft=40,e.parenleftaltonearabic=64830,e.parenleftbt=63725,e.parenleftex=63724,e.parenleftinferior=8333,e.parenleftmonospace=65288,e.parenleftsmall=65113,e.parenleftsuperior=8317,e.parenlefttp=63723,e.parenleftvertical=65077,e.parenright=41,e.parenrightaltonearabic=64831,e.parenrightbt=63736,e.parenrightex=63735,e.parenrightinferior=8334,e.parenrightmonospace=65289,e.parenrightsmall=65114,e.parenrightsuperior=8318,e.parenrighttp=63734,e.parenrightvertical=65078,e.partialdiff=8706,e.paseqhebrew=1472,e.pashtahebrew=1433,e.pasquare=13225,e.patah=1463,e.patah11=1463,e.patah1d=1463,e.patah2a=1463,e.patahhebrew=1463,e.patahnarrowhebrew=1463,e.patahquarterhebrew=1463,e.patahwidehebrew=1463,e.pazerhebrew=1441,e.pbopomofo=12550,e.pcircle=9439,e.pdotaccent=7767,e.pe=1508,e.pecyrillic=1087,e.pedagesh=64324,e.pedageshhebrew=64324,e.peezisquare=13115,e.pefinaldageshhebrew=64323,e.peharabic=1662,e.peharmenian=1402,e.pehebrew=1508,e.pehfinalarabic=64343,e.pehinitialarabic=64344,e.pehiragana=12410,e.pehmedialarabic=64345,e.pekatakana=12506,e.pemiddlehookcyrillic=1191,e.perafehebrew=64334,e.percent=37,e.percentarabic=1642,e.percentmonospace=65285,e.percentsmall=65130,e.period=46,e.periodarmenian=1417,e.periodcentered=183,e.periodhalfwidth=65377,e.periodinferior=63207,e.periodmonospace=65294,e.periodsmall=65106,e.periodsuperior=63208,e.perispomenigreekcmb=834,e.perpendicular=8869,e.perthousand=8240,e.peseta=8359,e.pfsquare=13194,e.phabengali=2475,e.phadeva=2347,e.phagujarati=2731,e.phagurmukhi=2603,e.phi=966,e.phi1=981,e.phieuphacirclekorean=12922,e.phieuphaparenkorean=12826,e.phieuphcirclekorean=12908,e.phieuphkorean=12621,e.phieuphparenkorean=12812,e.philatin=632,e.phinthuthai=3642,e.phisymbolgreek=981,e.phook=421,e.phophanthai=3614,e.phophungthai=3612,e.phosamphaothai=3616,e.pi=960,e.pieupacirclekorean=12915,e.pieupaparenkorean=12819,e.pieupcieuckorean=12662,e.pieupcirclekorean=12901,e.pieupkiyeokkorean=12658,e.pieupkorean=12610,e.pieupparenkorean=12805,e.pieupsioskiyeokkorean=12660,e.pieupsioskorean=12612,e.pieupsiostikeutkorean=12661,e.pieupthieuthkorean=12663,e.pieuptikeutkorean=12659,e.pihiragana=12404,e.pikatakana=12500,e.pisymbolgreek=982,e.piwrarmenian=1411,e.plus=43,e.plusbelowcmb=799,e.pluscircle=8853,e.plusminus=177,e.plusmod=726,e.plusmonospace=65291,e.plussmall=65122,e.plussuperior=8314,e.pmonospace=65360,e.pmsquare=13272,e.pohiragana=12413,e.pointingindexdownwhite=9759,e.pointingindexleftwhite=9756,e.pointingindexrightwhite=9758,e.pointingindexupwhite=9757,e.pokatakana=12509,e.poplathai=3611,e.postalmark=12306,e.postalmarkface=12320,e.pparen=9387,e.precedes=8826,e.prescription=8478,e.primemod=697,e.primereversed=8245,e.product=8719,e.projective=8965,e.prolongedkana=12540,e.propellor=8984,e.propersubset=8834,e.propersuperset=8835,e.proportion=8759,e.proportional=8733,e.psi=968,e.psicyrillic=1137,e.psilipneumatacyrilliccmb=1158,e.pssquare=13232,e.puhiragana=12407,e.pukatakana=12503,e.pvsquare=13236,e.pwsquare=13242,e.q=113,e.qadeva=2392,e.qadmahebrew=1448,e.qafarabic=1602,e.qaffinalarabic=65238,e.qafinitialarabic=65239,e.qafmedialarabic=65240,e.qamats=1464,e.qamats10=1464,e.qamats1a=1464,e.qamats1c=1464,e.qamats27=1464,e.qamats29=1464,e.qamats33=1464,e.qamatsde=1464,e.qamatshebrew=1464,e.qamatsnarrowhebrew=1464,e.qamatsqatanhebrew=1464,e.qamatsqatannarrowhebrew=1464,e.qamatsqatanquarterhebrew=1464,e.qamatsqatanwidehebrew=1464,e.qamatsquarterhebrew=1464,e.qamatswidehebrew=1464,e.qarneyparahebrew=1439,e.qbopomofo=12561,e.qcircle=9440,e.qhook=672,e.qmonospace=65361,e.qof=1511,e.qofdagesh=64327,e.qofdageshhebrew=64327,e.qofhebrew=1511,e.qparen=9388,e.quarternote=9833,e.qubuts=1467,e.qubuts18=1467,e.qubuts25=1467,e.qubuts31=1467,e.qubutshebrew=1467,e.qubutsnarrowhebrew=1467,e.qubutsquarterhebrew=1467,e.qubutswidehebrew=1467,e.question=63,e.questionarabic=1567,e.questionarmenian=1374,e.questiondown=191,e.questiondownsmall=63423,e.questiongreek=894,e.questionmonospace=65311,e.questionsmall=63295,e.quotedbl=34,e.quotedblbase=8222,e.quotedblleft=8220,e.quotedblmonospace=65282,e.quotedblprime=12318,e.quotedblprimereversed=12317,e.quotedblright=8221,e.quoteleft=8216,e.quoteleftreversed=8219,e.quotereversed=8219,e.quoteright=8217,e.quoterightn=329,e.quotesinglbase=8218,e.quotesingle=39,e.quotesinglemonospace=65287,e.r=114,e.raarmenian=1404,e.rabengali=2480,e.racute=341,e.radeva=2352,e.radical=8730,e.radicalex=63717,e.radoverssquare=13230,e.radoverssquaredsquare=13231,e.radsquare=13229,e.rafe=1471,e.rafehebrew=1471,e.ragujarati=2736,e.ragurmukhi=2608,e.rahiragana=12425,e.rakatakana=12521,e.rakatakanahalfwidth=65431,e.ralowerdiagonalbengali=2545,e.ramiddlediagonalbengali=2544,e.ramshorn=612,e.ratio=8758,e.rbopomofo=12566,e.rcaron=345,e.rcedilla=343,e.rcircle=9441,e.rcommaaccent=343,e.rdblgrave=529,e.rdotaccent=7769,e.rdotbelow=7771,e.rdotbelowmacron=7773,e.referencemark=8251,e.reflexsubset=8838,e.reflexsuperset=8839,e.registered=174,e.registersans=63720,e.registerserif=63194,e.reharabic=1585,e.reharmenian=1408,e.rehfinalarabic=65198,e.rehiragana=12428,e.rekatakana=12524,e.rekatakanahalfwidth=65434,e.resh=1512,e.reshdageshhebrew=64328,e.reshhebrew=1512,e.reversedtilde=8765,e.reviahebrew=1431,e.reviamugrashhebrew=1431;e.revlogicalnot=8976,e.rfishhook=638,e.rfishhookreversed=639,e.rhabengali=2525,e.rhadeva=2397,e.rho=961,e.rhook=637,e.rhookturned=635,e.rhookturnedsuperior=693,e.rhosymbolgreek=1009,e.rhotichookmod=734,e.rieulacirclekorean=12913,e.rieulaparenkorean=12817,e.rieulcirclekorean=12899,e.rieulhieuhkorean=12608,e.rieulkiyeokkorean=12602,e.rieulkiyeoksioskorean=12649,e.rieulkorean=12601,e.rieulmieumkorean=12603,e.rieulpansioskorean=12652,e.rieulparenkorean=12803,e.rieulphieuphkorean=12607,e.rieulpieupkorean=12604,e.rieulpieupsioskorean=12651,e.rieulsioskorean=12605,e.rieulthieuthkorean=12606,e.rieultikeutkorean=12650,e.rieulyeorinhieuhkorean=12653,e.rightangle=8735,e.righttackbelowcmb=793,e.righttriangle=8895,e.rihiragana=12426,e.rikatakana=12522,e.rikatakanahalfwidth=65432,e.ring=730,e.ringbelowcmb=805,e.ringcmb=778,e.ringhalfleft=703,e.ringhalfleftarmenian=1369,e.ringhalfleftbelowcmb=796,e.ringhalfleftcentered=723,e.ringhalfright=702,e.ringhalfrightbelowcmb=825,e.ringhalfrightcentered=722,e.rinvertedbreve=531,e.rittorusquare=13137,e.rlinebelow=7775,e.rlongleg=636,e.rlonglegturned=634,e.rmonospace=65362,e.rohiragana=12429,e.rokatakana=12525,e.rokatakanahalfwidth=65435,e.roruathai=3619,e.rparen=9389,e.rrabengali=2524,e.rradeva=2353,e.rragurmukhi=2652,e.rreharabic=1681,e.rrehfinalarabic=64397,e.rrvocalicbengali=2528,e.rrvocalicdeva=2400,e.rrvocalicgujarati=2784,e.rrvocalicvowelsignbengali=2500,e.rrvocalicvowelsigndeva=2372,e.rrvocalicvowelsigngujarati=2756,e.rsuperior=63217,e.rtblock=9616,e.rturned=633,e.rturnedsuperior=692,e.ruhiragana=12427,e.rukatakana=12523,e.rukatakanahalfwidth=65433,e.rupeemarkbengali=2546,e.rupeesignbengali=2547,e.rupiah=63197,e.ruthai=3620,e.rvocalicbengali=2443,e.rvocalicdeva=2315,e.rvocalicgujarati=2699,e.rvocalicvowelsignbengali=2499,e.rvocalicvowelsigndeva=2371,e.rvocalicvowelsigngujarati=2755,e.s=115,e.sabengali=2488,e.sacute=347,e.sacutedotaccent=7781,e.sadarabic=1589,e.sadeva=2360,e.sadfinalarabic=65210,e.sadinitialarabic=65211,e.sadmedialarabic=65212,e.sagujarati=2744,e.sagurmukhi=2616,e.sahiragana=12373,e.sakatakana=12469,e.sakatakanahalfwidth=65403,e.sallallahoualayhewasallamarabic=65018,e.samekh=1505,e.samekhdagesh=64321,e.samekhdageshhebrew=64321,e.samekhhebrew=1505,e.saraaathai=3634,e.saraaethai=3649,e.saraaimaimalaithai=3652,e.saraaimaimuanthai=3651,e.saraamthai=3635,e.saraathai=3632,e.saraethai=3648,e.saraiileftthai=63622,e.saraiithai=3637,e.saraileftthai=63621,e.saraithai=3636,e.saraothai=3650,e.saraueeleftthai=63624,e.saraueethai=3639,e.saraueleftthai=63623,e.sarauethai=3638,e.sarauthai=3640,e.sarauuthai=3641,e.sbopomofo=12569,e.scaron=353,e.scarondotaccent=7783,e.scedilla=351,e.schwa=601,e.schwacyrillic=1241,e.schwadieresiscyrillic=1243,e.schwahook=602,e.scircle=9442,e.scircumflex=349,e.scommaaccent=537,e.sdotaccent=7777,e.sdotbelow=7779,e.sdotbelowdotaccent=7785,e.seagullbelowcmb=828,e.second=8243,e.secondtonechinese=714,e.section=167,e.seenarabic=1587,e.seenfinalarabic=65202,e.seeninitialarabic=65203,e.seenmedialarabic=65204,e.segol=1462,e.segol13=1462,e.segol1f=1462,e.segol2c=1462,e.segolhebrew=1462,e.segolnarrowhebrew=1462,e.segolquarterhebrew=1462,e.segoltahebrew=1426,e.segolwidehebrew=1462,e.seharmenian=1405,e.sehiragana=12379,e.sekatakana=12475,e.sekatakanahalfwidth=65406,e.semicolon=59,e.semicolonarabic=1563,e.semicolonmonospace=65307,e.semicolonsmall=65108,e.semivoicedmarkkana=12444,e.semivoicedmarkkanahalfwidth=65439,e.sentisquare=13090,e.sentosquare=13091,e.seven=55,e.sevenarabic=1639,e.sevenbengali=2541,e.sevencircle=9318,e.sevencircleinversesansserif=10128,e.sevendeva=2413,e.seveneighths=8542,e.sevengujarati=2797,e.sevengurmukhi=2669,e.sevenhackarabic=1639,e.sevenhangzhou=12327,e.sevenideographicparen=12838,e.seveninferior=8327,e.sevenmonospace=65303,e.sevenoldstyle=63287,e.sevenparen=9338,e.sevenperiod=9358,e.sevenpersian=1783,e.sevenroman=8566,e.sevensuperior=8311,e.seventeencircle=9328,e.seventeenparen=9348,e.seventeenperiod=9368,e.seventhai=3671,e.sfthyphen=173,e.shaarmenian=1399,e.shabengali=2486,e.shacyrillic=1096,e.shaddaarabic=1617,e.shaddadammaarabic=64609,e.shaddadammatanarabic=64606,e.shaddafathaarabic=64608,e.shaddakasraarabic=64610,e.shaddakasratanarabic=64607,e.shade=9618,e.shadedark=9619,e.shadelight=9617,e.shademedium=9618,e.shadeva=2358,e.shagujarati=2742,e.shagurmukhi=2614,e.shalshelethebrew=1427,e.shbopomofo=12565,e.shchacyrillic=1097,e.sheenarabic=1588,e.sheenfinalarabic=65206,e.sheeninitialarabic=65207,e.sheenmedialarabic=65208,e.sheicoptic=995,e.sheqel=8362,e.sheqelhebrew=8362,e.sheva=1456,e.sheva115=1456,e.sheva15=1456,e.sheva22=1456,e.sheva2e=1456,e.shevahebrew=1456,e.shevanarrowhebrew=1456,e.shevaquarterhebrew=1456,e.shevawidehebrew=1456,e.shhacyrillic=1211,e.shimacoptic=1005,e.shin=1513,e.shindagesh=64329,e.shindageshhebrew=64329,e.shindageshshindot=64300,e.shindageshshindothebrew=64300,e.shindageshsindot=64301,e.shindageshsindothebrew=64301,e.shindothebrew=1473,e.shinhebrew=1513,e.shinshindot=64298,e.shinshindothebrew=64298,e.shinsindot=64299,e.shinsindothebrew=64299,e.shook=642,e.sigma=963,e.sigma1=962,e.sigmafinal=962,e.sigmalunatesymbolgreek=1010,e.sihiragana=12375,e.sikatakana=12471,e.sikatakanahalfwidth=65404,e.siluqhebrew=1469,e.siluqlefthebrew=1469,e.similar=8764,e.sindothebrew=1474,e.siosacirclekorean=12916,e.siosaparenkorean=12820,e.sioscieuckorean=12670,e.sioscirclekorean=12902,e.sioskiyeokkorean=12666,e.sioskorean=12613,e.siosnieunkorean=12667,e.siosparenkorean=12806,e.siospieupkorean=12669,e.siostikeutkorean=12668,e.six=54,e.sixarabic=1638,e.sixbengali=2540,e.sixcircle=9317,e.sixcircleinversesansserif=10127,e.sixdeva=2412,e.sixgujarati=2796,e.sixgurmukhi=2668,e.sixhackarabic=1638,e.sixhangzhou=12326,e.sixideographicparen=12837,e.sixinferior=8326,e.sixmonospace=65302,e.sixoldstyle=63286,e.sixparen=9337,e.sixperiod=9357,e.sixpersian=1782,e.sixroman=8565,e.sixsuperior=8310,e.sixteencircle=9327,e.sixteencurrencydenominatorbengali=2553,e.sixteenparen=9347,e.sixteenperiod=9367,e.sixthai=3670,e.slash=47,e.slashmonospace=65295,e.slong=383,e.slongdotaccent=7835,e.smileface=9786,e.smonospace=65363,e.sofpasuqhebrew=1475,e.softhyphen=173,e.softsigncyrillic=1100,e.sohiragana=12381,e.sokatakana=12477,e.sokatakanahalfwidth=65407,e.soliduslongoverlaycmb=824,e.solidusshortoverlaycmb=823,e.sorusithai=3625,e.sosalathai=3624,e.sosothai=3595,e.sosuathai=3626,e.space=32,e.spacehackarabic=32,e.spade=9824,e.spadesuitblack=9824,e.spadesuitwhite=9828,e.sparen=9390,e.squarebelowcmb=827,e.squarecc=13252,e.squarecm=13213,e.squarediagonalcrosshatchfill=9641,e.squarehorizontalfill=9636,e.squarekg=13199,e.squarekm=13214,e.squarekmcapital=13262,e.squareln=13265,e.squarelog=13266,e.squaremg=13198,e.squaremil=13269,e.squaremm=13212,e.squaremsquared=13217,e.squareorthogonalcrosshatchfill=9638,e.squareupperlefttolowerrightfill=9639,e.squareupperrighttolowerleftfill=9640,e.squareverticalfill=9637,e.squarewhitewithsmallblack=9635,e.srsquare=13275,e.ssabengali=2487,e.ssadeva=2359,e.ssagujarati=2743,e.ssangcieuckorean=12617,e.ssanghieuhkorean=12677,e.ssangieungkorean=12672,e.ssangkiyeokkorean=12594,e.ssangnieunkorean=12645,e.ssangpieupkorean=12611,e.ssangsioskorean=12614,e.ssangtikeutkorean=12600,e.ssuperior=63218,e.sterling=163,e.sterlingmonospace=65505,e.strokelongoverlaycmb=822,e.strokeshortoverlaycmb=821,e.subset=8834,e.subsetnotequal=8842,e.subsetorequal=8838,e.succeeds=8827,e.suchthat=8715,e.suhiragana=12377,e.sukatakana=12473,e.sukatakanahalfwidth=65405,e.sukunarabic=1618,e.summation=8721,e.sun=9788,e.superset=8835,e.supersetnotequal=8843,e.supersetorequal=8839,e.svsquare=13276,e.syouwaerasquare=13180,e.t=116,e.tabengali=2468,e.tackdown=8868,e.tackleft=8867,e.tadeva=2340,e.tagujarati=2724,e.tagurmukhi=2596,e.taharabic=1591,e.tahfinalarabic=65218,e.tahinitialarabic=65219,e.tahiragana=12383,e.tahmedialarabic=65220,e.taisyouerasquare=13181,e.takatakana=12479,e.takatakanahalfwidth=65408,e.tatweelarabic=1600,e.tau=964,e.tav=1514,e.tavdages=64330,e.tavdagesh=64330,e.tavdageshhebrew=64330,e.tavhebrew=1514,e.tbar=359,e.tbopomofo=12554,e.tcaron=357,e.tccurl=680,e.tcedilla=355,e.tcheharabic=1670,e.tchehfinalarabic=64379,e.tchehinitialarabic=64380,e.tchehmedialarabic=64381,e.tcircle=9443,e.tcircumflexbelow=7793,e.tcommaaccent=355,e.tdieresis=7831,e.tdotaccent=7787,e.tdotbelow=7789,e.tecyrillic=1090,e.tedescendercyrillic=1197,e.teharabic=1578,e.tehfinalarabic=65174,e.tehhahinitialarabic=64674,e.tehhahisolatedarabic=64524,e.tehinitialarabic=65175,e.tehiragana=12390,e.tehjeeminitialarabic=64673,e.tehjeemisolatedarabic=64523,e.tehmarbutaarabic=1577,e.tehmarbutafinalarabic=65172,e.tehmedialarabic=65176,e.tehmeeminitialarabic=64676,e.tehmeemisolatedarabic=64526,e.tehnoonfinalarabic=64627,e.tekatakana=12486,e.tekatakanahalfwidth=65411,e.telephone=8481,e.telephoneblack=9742,e.telishagedolahebrew=1440,e.telishaqetanahebrew=1449,e.tencircle=9321,e.tenideographicparen=12841,e.tenparen=9341,e.tenperiod=9361,e.tenroman=8569,e.tesh=679,e.tet=1496,e.tetdagesh=64312,e.tetdageshhebrew=64312,e.tethebrew=1496,e.tetsecyrillic=1205,e.tevirhebrew=1435,e.tevirlefthebrew=1435,e.thabengali=2469,e.thadeva=2341,e.thagujarati=2725,e.thagurmukhi=2597,e.thalarabic=1584,e.thalfinalarabic=65196,e.thanthakhatlowleftthai=63640,e.thanthakhatlowrightthai=63639,e.thanthakhatthai=3660,e.thanthakhatupperleftthai=63638,e.theharabic=1579,e.thehfinalarabic=65178,e.thehinitialarabic=65179,e.thehmedialarabic=65180,e.thereexists=8707,e.therefore=8756,e.theta=952,e.theta1=977,e.thetasymbolgreek=977,e.thieuthacirclekorean=12921,e.thieuthaparenkorean=12825,e.thieuthcirclekorean=12907,e.thieuthkorean=12620,e.thieuthparenkorean=12811,e.thirteencircle=9324,e.thirteenparen=9344,e.thirteenperiod=9364,e.thonangmonthothai=3601,e.thook=429,e.thophuthaothai=3602,e.thorn=254,e.thothahanthai=3607,e.thothanthai=3600,e.thothongthai=3608,e.thothungthai=3606,e.thousandcyrillic=1154,e.thousandsseparatorarabic=1644,e.thousandsseparatorpersian=1644,e.three=51,e.threearabic=1635,e.threebengali=2537,e.threecircle=9314,e.threecircleinversesansserif=10124,e.threedeva=2409,e.threeeighths=8540,e.threegujarati=2793,e.threegurmukhi=2665,e.threehackarabic=1635,e.threehangzhou=12323,e.threeideographicparen=12834,e.threeinferior=8323,e.threemonospace=65299,e.threenumeratorbengali=2550,e.threeoldstyle=63283,e.threeparen=9334,e.threeperiod=9354,e.threepersian=1779,e.threequarters=190,e.threequartersemdash=63198,e.threeroman=8562,e.threesuperior=179,e.threethai=3667,e.thzsquare=13204,e.tihiragana=12385,e.tikatakana=12481,e.tikatakanahalfwidth=65409,e.tikeutacirclekorean=12912,e.tikeutaparenkorean=12816,e.tikeutcirclekorean=12898,e.tikeutkorean=12599,e.tikeutparenkorean=12802,e.tilde=732,e.tildebelowcmb=816,e.tildecmb=771,e.tildecomb=771,e.tildedoublecmb=864,e.tildeoperator=8764,e.tildeoverlaycmb=820,e.tildeverticalcmb=830,e.timescircle=8855,e.tipehahebrew=1430,e.tipehalefthebrew=1430,e.tippigurmukhi=2672,e.titlocyrilliccmb=1155,e.tiwnarmenian=1407,e.tlinebelow=7791,e.tmonospace=65364,e.toarmenian=1385,e.tohiragana=12392,e.tokatakana=12488,e.tokatakanahalfwidth=65412,e.tonebarextrahighmod=741,e.tonebarextralowmod=745,e.tonebarhighmod=742,e.tonebarlowmod=744,e.tonebarmidmod=743,e.tonefive=445,e.tonesix=389,e.tonetwo=424,e.tonos=900,e.tonsquare=13095,e.topatakthai=3599,e.tortoiseshellbracketleft=12308,e.tortoiseshellbracketleftsmall=65117,e.tortoiseshellbracketleftvertical=65081,e.tortoiseshellbracketright=12309,e.tortoiseshellbracketrightsmall=65118,e.tortoiseshellbracketrightvertical=65082,e.totaothai=3605,e.tpalatalhook=427,e.tparen=9391,e.trademark=8482,e.trademarksans=63722,e.trademarkserif=63195,e.tretroflexhook=648,e.triagdn=9660,e.triaglf=9668,e.triagrt=9658,e.triagup=9650,e.ts=678,e.tsadi=1510,e.tsadidagesh=64326,e.tsadidageshhebrew=64326,e.tsadihebrew=1510,e.tsecyrillic=1094,e.tsere=1461,e.tsere12=1461,e.tsere1e=1461,e.tsere2b=1461,e.tserehebrew=1461,e.tserenarrowhebrew=1461,e.tserequarterhebrew=1461,e.tserewidehebrew=1461,e.tshecyrillic=1115,e.tsuperior=63219,e.ttabengali=2463,e.ttadeva=2335,e.ttagujarati=2719,e.ttagurmukhi=2591,e.tteharabic=1657,e.ttehfinalarabic=64359,e.ttehinitialarabic=64360,e.ttehmedialarabic=64361,e.tthabengali=2464,e.tthadeva=2336,e.tthagujarati=2720,e.tthagurmukhi=2592,e.tturned=647,e.tuhiragana=12388,e.tukatakana=12484,e.tukatakanahalfwidth=65410,e.tusmallhiragana=12387,e.tusmallkatakana=12483,e.tusmallkatakanahalfwidth=65391,e.twelvecircle=9323,e.twelveparen=9343,e.twelveperiod=9363,e.twelveroman=8571,e.twentycircle=9331,e.twentyhangzhou=21316,e.twentyparen=9351,e.twentyperiod=9371,e.two=50,e.twoarabic=1634,e.twobengali=2536,e.twocircle=9313,e.twocircleinversesansserif=10123,e.twodeva=2408,e.twodotenleader=8229,e.twodotleader=8229,e.twodotleadervertical=65072,e.twogujarati=2792,e.twogurmukhi=2664,e.twohackarabic=1634,e.twohangzhou=12322,e.twoideographicparen=12833,e.twoinferior=8322,e.twomonospace=65298,e.twonumeratorbengali=2549,e.twooldstyle=63282,e.twoparen=9333,e.twoperiod=9353,e.twopersian=1778,e.tworoman=8561,e.twostroke=443,e.twosuperior=178,e.twothai=3666,e.twothirds=8532,e.u=117,e.uacute=250,e.ubar=649,e.ubengali=2441,e.ubopomofo=12584,e.ubreve=365,e.ucaron=468,e.ucircle=9444,e.ucircumflex=251,e.ucircumflexbelow=7799,e.ucyrillic=1091,e.udattadeva=2385,e.udblacute=369,e.udblgrave=533,e.udeva=2313,e.udieresis=252,e.udieresisacute=472,e.udieresisbelow=7795,e.udieresiscaron=474,e.udieresiscyrillic=1265,e.udieresisgrave=476,e.udieresismacron=470,e.udotbelow=7909,e.ugrave=249,e.ugujarati=2697,e.ugurmukhi=2569,e.uhiragana=12358,e.uhookabove=7911,e.uhorn=432,e.uhornacute=7913,e.uhorndotbelow=7921,e.uhorngrave=7915,e.uhornhookabove=7917,e.uhorntilde=7919,e.uhungarumlaut=369,e.uhungarumlautcyrillic=1267,e.uinvertedbreve=535,e.ukatakana=12454,e.ukatakanahalfwidth=65395,e.ukcyrillic=1145,e.ukorean=12636,e.umacron=363,e.umacroncyrillic=1263,e.umacrondieresis=7803,e.umatragurmukhi=2625,e.umonospace=65365,e.underscore=95,e.underscoredbl=8215,e.underscoremonospace=65343,e.underscorevertical=65075,e.underscorewavy=65103,e.union=8746,e.universal=8704,e.uogonek=371,e.uparen=9392,e.upblock=9600,e.upperdothebrew=1476,e.upsilon=965,e.upsilondieresis=971,e.upsilondieresistonos=944,e.upsilonlatin=650,e.upsilontonos=973,e.uptackbelowcmb=797,e.uptackmod=724,e.uragurmukhi=2675,e.uring=367,e.ushortcyrillic=1118,e.usmallhiragana=12357,e.usmallkatakana=12453,e.usmallkatakanahalfwidth=65385,e.ustraightcyrillic=1199,e.ustraightstrokecyrillic=1201,e.utilde=361,e.utildeacute=7801,e.utildebelow=7797,e.uubengali=2442,e.uudeva=2314,e.uugujarati=2698,e.uugurmukhi=2570,e.uumatragurmukhi=2626,e.uuvowelsignbengali=2498,e.uuvowelsigndeva=2370,e.uuvowelsigngujarati=2754,e.uvowelsignbengali=2497,e.uvowelsigndeva=2369,e.uvowelsigngujarati=2753,e.v=118,e.vadeva=2357,e.vagujarati=2741,e.vagurmukhi=2613,e.vakatakana=12535,e.vav=1493,e.vavdagesh=64309,e.vavdagesh65=64309,e.vavdageshhebrew=64309,e.vavhebrew=1493,e.vavholam=64331,e.vavholamhebrew=64331,e.vavvavhebrew=1520,e.vavyodhebrew=1521,e.vcircle=9445,e.vdotbelow=7807,e.vecyrillic=1074,e.veharabic=1700,e.vehfinalarabic=64363,e.vehinitialarabic=64364,e.vehmedialarabic=64365,e.vekatakana=12537,e.venus=9792,e.verticalbar=124,e.verticallineabovecmb=781,e.verticallinebelowcmb=809,e.verticallinelowmod=716,e.verticallinemod=712,e.vewarmenian=1406,e.vhook=651,e.vikatakana=12536,e.viramabengali=2509,e.viramadeva=2381,e.viramagujarati=2765,e.visargabengali=2435,e.visargadeva=2307,e.visargagujarati=2691,e.vmonospace=65366,e.voarmenian=1400,e.voicediterationhiragana=12446,e.voicediterationkatakana=12542,e.voicedmarkkana=12443,e.voicedmarkkanahalfwidth=65438,e.vokatakana=12538,e.vparen=9393,e.vtilde=7805,e.vturned=652,e.vuhiragana=12436,e.vukatakana=12532,e.w=119,e.wacute=7811,e.waekorean=12633,e.wahiragana=12431,e.wakatakana=12527,e.wakatakanahalfwidth=65436,e.wakorean=12632,e.wasmallhiragana=12430,e.wasmallkatakana=12526,e.wattosquare=13143,e.wavedash=12316,e.wavyunderscorevertical=65076,e.wawarabic=1608,e.wawfinalarabic=65262,e.wawhamzaabovearabic=1572,e.wawhamzaabovefinalarabic=65158,e.wbsquare=13277,e.wcircle=9446,e.wcircumflex=373,e.wdieresis=7813,e.wdotaccent=7815,e.wdotbelow=7817,e.wehiragana=12433,e.weierstrass=8472,e.wekatakana=12529,e.wekorean=12638,e.weokorean=12637,e.wgrave=7809,e.whitebullet=9702,e.whitecircle=9675,e.whitecircleinverse=9689,e.whitecornerbracketleft=12302,e.whitecornerbracketleftvertical=65091,e.whitecornerbracketright=12303,e.whitecornerbracketrightvertical=65092,e.whitediamond=9671,e.whitediamondcontainingblacksmalldiamond=9672,e.whitedownpointingsmalltriangle=9663,e.whitedownpointingtriangle=9661,e.whiteleftpointingsmalltriangle=9667,e.whiteleftpointingtriangle=9665,e.whitelenticularbracketleft=12310,e.whitelenticularbracketright=12311,e.whiterightpointingsmalltriangle=9657,e.whiterightpointingtriangle=9655;e.whitesmallsquare=9643,e.whitesmilingface=9786,e.whitesquare=9633,e.whitestar=9734,e.whitetelephone=9743,e.whitetortoiseshellbracketleft=12312,e.whitetortoiseshellbracketright=12313,e.whiteuppointingsmalltriangle=9653,e.whiteuppointingtriangle=9651,e.wihiragana=12432,e.wikatakana=12528,e.wikorean=12639,e.wmonospace=65367,e.wohiragana=12434,e.wokatakana=12530,e.wokatakanahalfwidth=65382,e.won=8361,e.wonmonospace=65510,e.wowaenthai=3623,e.wparen=9394,e.wring=7832,e.wsuperior=695,e.wturned=653,e.wynn=447,e.x=120,e.xabovecmb=829,e.xbopomofo=12562,e.xcircle=9447,e.xdieresis=7821,e.xdotaccent=7819,e.xeharmenian=1389,e.xi=958,e.xmonospace=65368,e.xparen=9395,e.xsuperior=739,e.y=121,e.yaadosquare=13134,e.yabengali=2479,e.yacute=253,e.yadeva=2351,e.yaekorean=12626,e.yagujarati=2735,e.yagurmukhi=2607,e.yahiragana=12420,e.yakatakana=12516,e.yakatakanahalfwidth=65428,e.yakorean=12625,e.yamakkanthai=3662,e.yasmallhiragana=12419,e.yasmallkatakana=12515,e.yasmallkatakanahalfwidth=65388,e.yatcyrillic=1123,e.ycircle=9448,e.ycircumflex=375,e.ydieresis=255,e.ydotaccent=7823,e.ydotbelow=7925,e.yeharabic=1610,e.yehbarreearabic=1746,e.yehbarreefinalarabic=64431,e.yehfinalarabic=65266,e.yehhamzaabovearabic=1574,e.yehhamzaabovefinalarabic=65162,e.yehhamzaaboveinitialarabic=65163,e.yehhamzaabovemedialarabic=65164,e.yehinitialarabic=65267,e.yehmedialarabic=65268,e.yehmeeminitialarabic=64733,e.yehmeemisolatedarabic=64600,e.yehnoonfinalarabic=64660,e.yehthreedotsbelowarabic=1745,e.yekorean=12630,e.yen=165,e.yenmonospace=65509,e.yeokorean=12629,e.yeorinhieuhkorean=12678,e.yerahbenyomohebrew=1450,e.yerahbenyomolefthebrew=1450,e.yericyrillic=1099,e.yerudieresiscyrillic=1273,e.yesieungkorean=12673,e.yesieungpansioskorean=12675,e.yesieungsioskorean=12674,e.yetivhebrew=1434,e.ygrave=7923,e.yhook=436,e.yhookabove=7927,e.yiarmenian=1397,e.yicyrillic=1111,e.yikorean=12642,e.yinyang=9775,e.yiwnarmenian=1410,e.ymonospace=65369,e.yod=1497,e.yoddagesh=64313,e.yoddageshhebrew=64313,e.yodhebrew=1497,e.yodyodhebrew=1522,e.yodyodpatahhebrew=64287,e.yohiragana=12424,e.yoikorean=12681,e.yokatakana=12520,e.yokatakanahalfwidth=65430,e.yokorean=12635,e.yosmallhiragana=12423,e.yosmallkatakana=12519,e.yosmallkatakanahalfwidth=65390,e.yotgreek=1011,e.yoyaekorean=12680,e.yoyakorean=12679,e.yoyakthai=3618,e.yoyingthai=3597,e.yparen=9396,e.ypogegrammeni=890,e.ypogegrammenigreekcmb=837,e.yr=422,e.yring=7833,e.ysuperior=696,e.ytilde=7929,e.yturned=654,e.yuhiragana=12422,e.yuikorean=12684,e.yukatakana=12518,e.yukatakanahalfwidth=65429,e.yukorean=12640,e.yusbigcyrillic=1131,e.yusbigiotifiedcyrillic=1133,e.yuslittlecyrillic=1127,e.yuslittleiotifiedcyrillic=1129,e.yusmallhiragana=12421,e.yusmallkatakana=12517,e.yusmallkatakanahalfwidth=65389,e.yuyekorean=12683,e.yuyeokorean=12682,e.yyabengali=2527,e.yyadeva=2399,e.z=122,e.zaarmenian=1382,e.zacute=378,e.zadeva=2395,e.zagurmukhi=2651,e.zaharabic=1592,e.zahfinalarabic=65222,e.zahinitialarabic=65223,e.zahiragana=12374,e.zahmedialarabic=65224,e.zainarabic=1586,e.zainfinalarabic=65200,e.zakatakana=12470,e.zaqefgadolhebrew=1429,e.zaqefqatanhebrew=1428,e.zarqahebrew=1432,e.zayin=1494,e.zayindagesh=64310,e.zayindageshhebrew=64310,e.zayinhebrew=1494,e.zbopomofo=12567,e.zcaron=382,e.zcircle=9449,e.zcircumflex=7825,e.zcurl=657,e.zdot=380,e.zdotaccent=380,e.zdotbelow=7827,e.zecyrillic=1079,e.zedescendercyrillic=1177,e.zedieresiscyrillic=1247,e.zehiragana=12380,e.zekatakana=12476,e.zero=48,e.zeroarabic=1632,e.zerobengali=2534,e.zerodeva=2406,e.zerogujarati=2790,e.zerogurmukhi=2662,e.zerohackarabic=1632,e.zeroinferior=8320,e.zeromonospace=65296,e.zerooldstyle=63280,e.zeropersian=1776,e.zerosuperior=8304,e.zerothai=3664,e.zerowidthjoiner=65279,e.zerowidthnonjoiner=8204,e.zerowidthspace=8203,e.zeta=950,e.zhbopomofo=12563,e.zhearmenian=1386,e.zhebrevecyrillic=1218,e.zhecyrillic=1078,e.zhedescendercyrillic=1175,e.zhedieresiscyrillic=1245,e.zihiragana=12376,e.zikatakana=12472,e.zinorhebrew=1454,e.zlinebelow=7829,e.zmonospace=65370,e.zohiragana=12382,e.zokatakana=12478,e.zparen=9397,e.zretroflexhook=656,e.zstroke=438,e.zuhiragana=12378,e.zukatakana=12474,e[\".notdef\"]=0,e.angbracketleftbig=9001,e.angbracketleftBig=9001,e.angbracketleftbigg=9001,e.angbracketleftBigg=9001,e.angbracketrightBig=9002,e.angbracketrightbig=9002,e.angbracketrightBigg=9002,e.angbracketrightbigg=9002,e.arrowhookleft=8618,e.arrowhookright=8617,e.arrowlefttophalf=8636,e.arrowleftbothalf=8637,e.arrownortheast=8599,e.arrownorthwest=8598,e.arrowrighttophalf=8640,e.arrowrightbothalf=8641,e.arrowsoutheast=8600,e.arrowsouthwest=8601,e.backslashbig=8726,e.backslashBig=8726,e.backslashBigg=8726,e.backslashbigg=8726,e.bardbl=8214,e.bracehtipdownleft=65079,e.bracehtipdownright=65079,e.bracehtipupleft=65080,e.bracehtipupright=65080,e.braceleftBig=123,e.braceleftbig=123,e.braceleftbigg=123,e.braceleftBigg=123,e.bracerightBig=125,e.bracerightbig=125,e.bracerightbigg=125,e.bracerightBigg=125,e.bracketleftbig=91,e.bracketleftBig=91,e.bracketleftbigg=91,e.bracketleftBigg=91,e.bracketrightBig=93,e.bracketrightbig=93,e.bracketrightbigg=93,e.bracketrightBigg=93,e.ceilingleftbig=8968,e.ceilingleftBig=8968,e.ceilingleftBigg=8968,e.ceilingleftbigg=8968,e.ceilingrightbig=8969,e.ceilingrightBig=8969,e.ceilingrightbigg=8969,e.ceilingrightBigg=8969,e.circledotdisplay=8857,e.circledottext=8857,e.circlemultiplydisplay=8855,e.circlemultiplytext=8855,e.circleplusdisplay=8853,e.circleplustext=8853,e.contintegraldisplay=8750,e.contintegraltext=8750,e.coproductdisplay=8720,e.coproducttext=8720,e.floorleftBig=8970,e.floorleftbig=8970,e.floorleftbigg=8970,e.floorleftBigg=8970,e.floorrightbig=8971,e.floorrightBig=8971,e.floorrightBigg=8971,e.floorrightbigg=8971,e.hatwide=770,e.hatwider=770,e.hatwidest=770,e.intercal=7488,e.integraldisplay=8747,e.integraltext=8747,e.intersectiondisplay=8898,e.intersectiontext=8898,e.logicalanddisplay=8743,e.logicalandtext=8743,e.logicalordisplay=8744,e.logicalortext=8744,e.parenleftBig=40,e.parenleftbig=40,e.parenleftBigg=40,e.parenleftbigg=40,e.parenrightBig=41,e.parenrightbig=41,e.parenrightBigg=41,e.parenrightbigg=41,e.prime=8242,e.productdisplay=8719,e.producttext=8719,e.radicalbig=8730,e.radicalBig=8730,e.radicalBigg=8730,e.radicalbigg=8730,e.radicalbt=8730,e.radicaltp=8730,e.radicalvertex=8730,e.slashbig=47,e.slashBig=47,e.slashBigg=47,e.slashbigg=47,e.summationdisplay=8721,e.summationtext=8721,e.tildewide=732,e.tildewider=732,e.tildewidest=732,e.uniondisplay=8899,e.unionmultidisplay=8846,e.unionmultitext=8846,e.unionsqdisplay=8852,e.unionsqtext=8852,e.uniontext=8899,e.vextenddouble=8741,e.vextendsingle=8739}),n=a(function(e){e.space=32,e.a1=9985,e.a2=9986,e.a202=9987,e.a3=9988,e.a4=9742,e.a5=9990,e.a119=9991,e.a118=9992,e.a117=9993,e.a11=9755,e.a12=9758,e.a13=9996,e.a14=9997,e.a15=9998,e.a16=9999,e.a105=1e4,e.a17=10001,e.a18=10002,e.a19=10003,e.a20=10004,e.a21=10005,e.a22=10006,e.a23=10007,e.a24=10008,e.a25=10009,e.a26=10010,e.a27=10011,e.a28=10012,e.a6=10013,e.a7=10014,e.a8=10015,e.a9=10016,e.a10=10017,e.a29=10018,e.a30=10019,e.a31=10020,e.a32=10021,e.a33=10022,e.a34=10023,e.a35=9733,e.a36=10025,e.a37=10026,e.a38=10027,e.a39=10028,e.a40=10029,e.a41=10030,e.a42=10031,e.a43=10032,e.a44=10033,e.a45=10034,e.a46=10035,e.a47=10036,e.a48=10037,e.a49=10038,e.a50=10039,e.a51=10040,e.a52=10041,e.a53=10042,e.a54=10043,e.a55=10044,e.a56=10045,e.a57=10046,e.a58=10047,e.a59=10048,e.a60=10049,e.a61=10050,e.a62=10051,e.a63=10052,e.a64=10053,e.a65=10054,e.a66=10055,e.a67=10056,e.a68=10057,e.a69=10058,e.a70=10059,e.a71=9679,e.a72=10061,e.a73=9632,e.a74=10063,e.a203=10064,e.a75=10065,e.a204=10066,e.a76=9650,e.a77=9660,e.a78=9670,e.a79=10070,e.a81=9687,e.a82=10072,e.a83=10073,e.a84=10074,e.a97=10075,e.a98=10076,e.a99=10077,e.a100=10078,e.a101=10081,e.a102=10082,e.a103=10083,e.a104=10084,e.a106=10085,e.a107=10086,e.a108=10087,e.a112=9827,e.a111=9830,e.a110=9829,e.a109=9824,e.a120=9312,e.a121=9313,e.a122=9314,e.a123=9315,e.a124=9316,e.a125=9317,e.a126=9318,e.a127=9319,e.a128=9320,e.a129=9321,e.a130=10102,e.a131=10103,e.a132=10104,e.a133=10105,e.a134=10106,e.a135=10107,e.a136=10108,e.a137=10109,e.a138=10110,e.a139=10111,e.a140=10112,e.a141=10113,e.a142=10114,e.a143=10115,e.a144=10116,e.a145=10117,e.a146=10118,e.a147=10119,e.a148=10120,e.a149=10121,e.a150=10122,e.a151=10123,e.a152=10124,e.a153=10125,e.a154=10126,e.a155=10127,e.a156=10128,e.a157=10129,e.a158=10130,e.a159=10131,e.a160=10132,e.a161=8594,e.a163=8596,e.a164=8597,e.a196=10136,e.a165=10137,e.a192=10138,e.a166=10139,e.a167=10140,e.a168=10141,e.a169=10142,e.a170=10143,e.a171=10144,e.a172=10145,e.a173=10146,e.a162=10147,e.a174=10148,e.a175=10149,e.a176=10150,e.a177=10151,e.a178=10152,e.a179=10153,e.a193=10154,e.a180=10155,e.a199=10156,e.a181=10157,e.a200=10158,e.a182=10159,e.a201=10161,e.a183=10162,e.a184=10163,e.a197=10164,e.a185=10165,e.a194=10166,e.a198=10167,e.a186=10168,e.a195=10169,e.a187=10170,e.a188=10171,e.a189=10172,e.a190=10173,e.a191=10174,e.a89=10088,e.a90=10089,e.a93=10090,e.a94=10091,e.a91=10092,e.a92=10093,e.a205=10094,e.a85=10095,e.a206=10096,e.a86=10097,e.a87=10098,e.a88=10099,e.a95=10100,e.a96=10101,e[\".notdef\"]=0});t.getGlyphsUnicode=i,t.getDingbatsGlyphsUnicode=n},\"./node_modules/pdfjs-dist/lib/core/image.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/image.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFImage=void 0;var a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},i=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),n=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),o=r(/*! ./colorspace */\"./node_modules/pdfjs-dist/lib/core/colorspace.js\"),s=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),c=r(/*! ./jpeg_stream */\"./node_modules/pdfjs-dist/lib/core/jpeg_stream.js\"),l=r(/*! ./jpx */\"./node_modules/pdfjs-dist/lib/core/jpx.js\"),h=function(){function e(e,t){return t&&t.canDecode(e)?t.decode(e):Promise.resolve(e)}function t(e,t,r,a){return(e=t+e*r)<0?0:e>a?a:e}function r(e,t,r,a,i,n){var o,s,c,l,h=i*n,u=t<=8?new Uint8Array(h):t<=16?new Uint16Array(h):new Uint32Array(h),d=r/i,f=a/n,g=0,m=new Uint16Array(i),p=r;for(o=0;o<i;o++)m[o]=Math.floor(o*d);for(o=0;o<n;o++)for(c=Math.floor(o*f)*p,s=0;s<i;s++)l=c+m[s],u[g++]=e[l];return u}function h(e){var t=e.xref,r=e.res,a=e.image,s=e.isInline,c=void 0!==s&&s,u=e.smask,d=void 0===u?null:u,f=e.mask,g=void 0===f?null:f,m=e.isMask,p=void 0!==m&&m,b=e.pdfFunctionFactory;this.image=a;var v=a.dict;if(v.has(\"Filter\")){var y=v.get(\"Filter\").name;if(\"JPXDecode\"===y){var w=new l.JpxImage;w.parseImageProperties(a.stream),a.stream.reset(),a.bitsPerComponent=w.bitsPerComponent,a.numComps=w.componentsCount}else\"JBIG2Decode\"===y&&(a.bitsPerComponent=1,a.numComps=1)}if(this.width=v.get(\"Width\",\"W\"),this.height=v.get(\"Height\",\"H\"),this.width<1||this.height<1)throw new i.FormatError(\"Invalid image width: \"+this.width+\" or height: \"+this.height);this.interpolate=v.get(\"Interpolate\",\"I\")||!1,this.imageMask=v.get(\"ImageMask\",\"IM\")||!1,this.matte=v.get(\"Matte\")||!1;var k=a.bitsPerComponent;if(!k&&!(k=v.get(\"BitsPerComponent\",\"BPC\"))){if(!this.imageMask)throw new i.FormatError(\"Bits per component missing in image: \"+this.imageMask);k=1}if(this.bpc=k,!this.imageMask){var S=v.get(\"ColorSpace\",\"CS\");if(!S)switch((0,i.info)(\"JPX images (which do not require color spaces)\"),a.numComps){case 1:S=n.Name.get(\"DeviceGray\");break;case 3:S=n.Name.get(\"DeviceRGB\");break;case 4:S=n.Name.get(\"DeviceCMYK\");break;default:throw new Error(\"JPX images with \"+this.numComps+\" color components not supported.\")}var x=c?r:null;this.colorSpace=o.ColorSpace.parse(S,t,x,b),this.numComps=this.colorSpace.numComps}if(this.decode=v.getArray(\"Decode\",\"D\"),this.needsDecode=!1,this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode)||p&&!o.ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=!0;var C=(1<<k)-1;this.decodeCoefficients=[],this.decodeAddends=[];for(var A=0,I=0;A<this.decode.length;A+=2,++I){var F=this.decode[A],O=this.decode[A+1];this.decodeCoefficients[I]=O-F,this.decodeAddends[I]=C*F}}if(d)this.smask=new h({xref:t,res:r,image:d,isInline:c,pdfFunctionFactory:b});else if(g){if((0,n.isStream)(g))g.dict.get(\"ImageMask\",\"IM\")?this.mask=new h({xref:t,res:r,image:g,isInline:c,isMask:!0,pdfFunctionFactory:b}):(0,i.warn)(\"Ignoring /Mask in image without /ImageMask.\");else this.mask=g}}return h.buildImage=function(t){t.handler;var r,o,s=t.xref,c=t.res,l=t.image,u=t.isInline,d=void 0!==u&&u,f=t.nativeDecoder,g=void 0===f?null:f,m=t.pdfFunctionFactory,p=e(l,g),b=l.dict.get(\"SMask\"),v=l.dict.get(\"Mask\");return b?(r=e(b,g),o=Promise.resolve(null)):(r=Promise.resolve(null),v?(0,n.isStream)(v)?o=e(v,g):Array.isArray(v)?o=Promise.resolve(v):((0,i.warn)(\"Unsupported mask format.\"),o=Promise.resolve(null)):o=Promise.resolve(null)),Promise.all([p,r,o]).then(function(e){var t=a(e,3),r=t[0],i=t[1],n=t[2];return new h({xref:s,res:c,image:r,isInline:d,smask:i,mask:n,pdfFunctionFactory:m})})},h.createMask=function(e){var t,r,a=e.imgArray,i=e.width,n=e.height,o=e.imageIsFromDecodeStream,s=e.inverseDecode,c=(i+7>>3)*n,l=a.byteLength;if(!o||s&&!(c===l))if(s)for((t=new Uint8Array(c)).set(a),r=l;r<c;r++)t[r]=255;else(t=new Uint8Array(l)).set(a);else t=a;if(s)for(r=0;r<l;r++)t[r]^=255;return{data:t,width:i,height:n}},h.prototype={get drawWidth(){return Math.max(this.width,this.smask&&this.smask.width||0,this.mask&&this.mask.width||0)},get drawHeight(){return Math.max(this.height,this.smask&&this.smask.height||0,this.mask&&this.mask.height||0)},decodeBuffer:function(e){var r,a,i=this.bpc,n=this.numComps,o=this.decodeAddends,s=this.decodeCoefficients,c=(1<<i)-1;if(1!==i){var l=0;for(r=0,a=this.width*this.height;r<a;r++)for(var h=0;h<n;h++)e[l]=t(e[l],o[h],s[h],c),l++}else for(r=0,a=e.length;r<a;r++)e[r]=+!e[r]},getComponents:function(e){var t=this.bpc;if(8===t)return e;var r,a,i=this.width,n=this.height,o=this.numComps,s=i*n*o,c=0,l=t<=8?new Uint8Array(s):t<=16?new Uint16Array(s):new Uint32Array(s),h=i*o,u=(1<<t)-1,d=0;if(1===t)for(var f,g,m,p=0;p<n;p++){for(g=d+(-8&h),m=d+h;d<g;)a=e[c++],l[d]=a>>7&1,l[d+1]=a>>6&1,l[d+2]=a>>5&1,l[d+3]=a>>4&1,l[d+4]=a>>3&1,l[d+5]=a>>2&1,l[d+6]=a>>1&1,l[d+7]=1&a,d+=8;if(d<m)for(a=e[c++],f=128;d<m;)l[d++]=+!!(a&f),f>>=1}else{var b=0;for(a=0,d=0,r=s;d<r;++d){for(d%h==0&&(a=0,b=0);b<t;)a=a<<8|e[c++],b+=8;var v=b-t,y=a>>v;l[d]=y<0?0:y>u?u:y,a&=(1<<v)-1,b=v}}return l},fillOpacity:function(e,t,a,n,o){var s,c,l,u,d,f,g=this.smask,m=this.mask;if(g)c=g.width,l=g.height,s=new Uint8Array(c*l),g.fillGrayBuffer(s),c===t&&l===a||(s=r(s,g.bpc,c,l,t,a));else if(m)if(m instanceof h){for(c=m.width,l=m.height,s=new Uint8Array(c*l),m.numComps=1,m.fillGrayBuffer(s),u=0,d=c*l;u<d;++u)s[u]=255-s[u];c===t&&l===a||(s=r(s,m.bpc,c,l,t,a))}else{if(!Array.isArray(m))throw new i.FormatError(\"Unknown mask format.\");s=new Uint8Array(t*a);var p=this.numComps;for(u=0,d=t*a;u<d;++u){var b=0,v=u*p;for(f=0;f<p;++f){var y=o[v+f],w=2*f;if(y<m[w]||y>m[w+1]){b=255;break}}s[u]=b}}if(s)for(u=0,f=3,d=t*n;u<d;++u,f+=4)e[f]=s[u];else for(u=0,f=3,d=t*n;u<d;++u,f+=4)e[f]=255},undoPreblend:function(e,t,r){var a=this.smask&&this.smask.matte;if(a)for(var i,n,o,s=this.colorSpace.getRgb(a,0),c=s[0],l=s[1],h=s[2],u=t*r*4,d=0;d<u;d+=4){var f=e[d+3];if(0!==f){var g=255/f;i=(e[d]-c)*g+c,n=(e[d+1]-l)*g+l,o=(e[d+2]-h)*g+h,e[d]=i<=0?0:i>=255?255:0|i,e[d+1]=n<=0?0:n>=255?255:0|n,e[d+2]=o<=0?0:o>=255?255:0|o}else e[d]=255,e[d+1]=255,e[d+2]=255}},createImageData:function(){var e,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],r=this.drawWidth,a=this.drawHeight,n={width:r,height:a},o=this.numComps,l=this.width,h=this.height,u=this.bpc,d=l*o*u+7>>3;if(!t){var f;if(\"DeviceGray\"===this.colorSpace.name&&1===u?f=i.ImageKind.GRAYSCALE_1BPP:\"DeviceRGB\"!==this.colorSpace.name||8!==u||this.needsDecode||(f=i.ImageKind.RGB_24BPP),f&&!this.smask&&!this.mask&&r===l&&a===h){if(n.kind=f,e=this.getImageBytes(h*d),this.image instanceof s.DecodeStream)n.data=e;else{var g=new Uint8Array(e.length);g.set(e),n.data=g}if(this.needsDecode){(0,i.assert)(f===i.ImageKind.GRAYSCALE_1BPP);for(var m=n.data,p=0,b=m.length;p<b;p++)m[p]^=255}return n}if(this.image instanceof c.JpegStream&&!this.smask&&!this.mask){var v=h*d;switch(this.colorSpace.name){case\"DeviceGray\":v*=3;case\"DeviceRGB\":case\"DeviceCMYK\":return n.kind=i.ImageKind.RGB_24BPP,n.data=this.getImageBytes(v,r,a,!0),n}}}var y,w,k=0|(e=this.getImageBytes(h*d)).length/d*a/h,S=this.getComponents(e);return t||this.smask||this.mask?(n.kind=i.ImageKind.RGBA_32BPP,n.data=new Uint8Array(r*a*4),y=1,w=!0,this.fillOpacity(n.data,r,a,k,S)):(n.kind=i.ImageKind.RGB_24BPP,n.data=new Uint8Array(r*a*3),y=0,w=!1),this.needsDecode&&this.decodeBuffer(S),this.colorSpace.fillRgb(n.data,l,h,r,a,k,u,S,y),w&&this.undoPreblend(n.data,r,k),n},fillGrayBuffer:function(e){var t=this.numComps;if(1!==t)throw new i.FormatError(\"Reading gray scale from a color image: \"+t);var r,a,n=this.width,o=this.height,s=this.bpc,c=n*t*s+7>>3,l=this.getImageBytes(o*c),h=this.getComponents(l);if(1!==s){this.needsDecode&&this.decodeBuffer(h),a=n*o;var u=255/((1<<s)-1);for(r=0;r<a;++r)e[r]=u*h[r]|0}else if(a=n*o,this.needsDecode)for(r=0;r<a;++r)e[r]=h[r]-1&255;else for(r=0;r<a;++r)e[r]=255&-h[r]},getImageBytes:function(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return this.image.reset(),this.image.drawWidth=t||this.width,this.image.drawHeight=r||this.height,this.image.forceRGB=!!a,this.image.getBytes(e)}},h}();t.PDFImage=h},\"./node_modules/pdfjs-dist/lib/core/jbig2.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/jbig2.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Image=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./arithmetic_decoder */\"./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js\"),n=r(/*! ./ccitt */\"./node_modules/pdfjs-dist/lib/core/ccitt.js\"),o=function(){function e(e){this.message=\"JBIG2 error: \"+e}return e.prototype=new Error,e.prototype.name=\"Jbig2Error\",e.constructor=e,e}(),s=function(){function e(){}function t(e,t,r){this.data=e,this.start=t,this.end=r}function r(e,t,r){var a=e.getContexts(t),i=1;function n(e){for(var t=0,n=0;n<e;n++){var o=r.readBit(a,i);i=i<256?i<<1|o:511&(i<<1|o)|256,t=t<<1|o}return t>>>0}var o=n(1),s=n(1)?n(1)?n(1)?n(1)?n(1)?n(32)+4436:n(12)+340:n(8)+84:n(6)+20:n(4)+4:n(2);return 0===o?s:s>0?-s:null}function s(e,t,r){for(var a=e.getContexts(\"IAID\"),i=1,n=0;n<r;n++){i=i<<1|t.readBit(a,i)}return r<31?i&(1<<r)-1:2147483647&i}e.prototype={getContexts:function(e){return e in this?this[e]:this[e]=new Int8Array(65536)}},t.prototype={get decoder(){var e=new i.ArithmeticDecoder(this.data,this.start,this.end);return(0,a.shadow)(this,\"decoder\",e)},get contextCache(){var t=new e;return(0,a.shadow)(this,\"contextCache\",t)}};var c=[\"SymbolDictionary\",null,null,null,\"IntermediateTextRegion\",null,\"ImmediateTextRegion\",\"ImmediateLosslessTextRegion\",null,null,null,null,null,null,null,null,\"PatternDictionary\",null,null,null,\"IntermediateHalftoneRegion\",null,\"ImmediateHalftoneRegion\",\"ImmediateLosslessHalftoneRegion\",null,null,null,null,null,null,null,null,null,null,null,null,\"IntermediateGenericRegion\",null,\"ImmediateGenericRegion\",\"ImmediateLosslessGenericRegion\",\"IntermediateGenericRefinementRegion\",null,\"ImmediateGenericRefinementRegion\",\"ImmediateLosslessGenericRefinementRegion\",null,null,null,null,\"PageInformation\",\"EndOfPage\",\"EndOfStripe\",\"EndOfFile\",\"Profiles\",\"Tables\",null,null,null,null,null,null,null,null,\"Extension\"],l=[[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:2,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-2,y:0},{x:-1,y:0}],[{x:-3,y:-1},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}]],h=[{coding:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]},{coding:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:0,y:1},{x:1,y:1}]}],u=[39717,1941,229,405],d=[32,8];function f(e,t,r,a,i,n,o,s){if(e)return T(new O(s.data,s.start,s.end),t,r,!1);if(0===a&&!n&&!i&&4===o.length&&3===o[0].x&&-1===o[0].y&&-3===o[1].x&&-1===o[1].y&&2===o[2].x&&-2===o[2].y&&-2===o[3].x&&-2===o[3].y)return function(e,t,r){var a,i,n,o,s,c,l,h=r.decoder,u=r.contextCache.getContexts(\"GB\"),d=[];for(i=0;i<t;i++)for(s=d[i]=new Uint8Array(e),c=i<1?s:d[i-1],a=(l=i<2?s:d[i-2])[0]<<13|l[1]<<12|l[2]<<11|c[0]<<7|c[1]<<6|c[2]<<5|c[3]<<4,n=0;n<e;n++)s[n]=o=h.readBit(u,a),a=(31735&a)<<1|(n+3<e?l[n+3]<<11:0)|(n+4<e?c[n+4]<<4:0)|o;return d}(t,r,s);var c=!!n,h=l[a].concat(o);h.sort(function(e,t){return e.y-t.y||e.x-t.x});var d,f,g=h.length,m=new Int8Array(g),p=new Int8Array(g),b=[],v=0,y=0,w=0,k=0;for(f=0;f<g;f++)m[f]=h[f].x,p[f]=h[f].y,y=Math.min(y,h[f].x),w=Math.max(w,h[f].x),k=Math.min(k,h[f].y),f<g-1&&h[f].y===h[f+1].y&&h[f].x===h[f+1].x-1?v|=1<<g-1-f:b.push(f);var S=b.length,x=new Int8Array(S),C=new Int8Array(S),A=new Uint16Array(S);for(d=0;d<S;d++)f=b[d],x[d]=h[f].x,C[d]=h[f].y,A[d]=1<<g-1-f;for(var I,F,B,P,E,M=-y,D=-k,R=t-w,L=u[a],N=new Uint8Array(t),j=[],U=s.decoder,_=s.contextCache.getContexts(\"GB\"),q=0,z=0,H=0;H<r;H++){if(i)if(q^=U.readBit(_,L)){j.push(N);continue}for(N=new Uint8Array(N),j.push(N),I=0;I<t;I++)if(c&&n[H][I])N[I]=0;else{if(I>=M&&I<R&&H>=D)for(z=z<<1&v,f=0;f<S;f++)F=H+C[f],B=I+x[f],(P=j[F][B])&&(z|=P=A[f]);else for(z=0,E=g-1,f=0;f<g;f++,E--)(B=I+m[f])>=0&&B<t&&(F=H+p[f])>=0&&(P=j[F][B])&&(z|=P<<E);var G=U.readBit(_,z);N[I]=G}}return j}function g(e,t,r,a,i,n,s,c,l){var u=h[r].coding;0===r&&(u=u.concat([c[0]]));var f,g=u.length,m=new Int32Array(g),p=new Int32Array(g);for(f=0;f<g;f++)m[f]=u[f].x,p[f]=u[f].y;var b=h[r].reference;0===r&&(b=b.concat([c[1]]));var v=b.length,y=new Int32Array(v),w=new Int32Array(v);for(f=0;f<v;f++)y[f]=b[f].x,w[f]=b[f].y;for(var k=a[0].length,S=a.length,x=d[r],C=[],A=l.decoder,I=l.contextCache.getContexts(\"GR\"),F=0,O=0;O<t;O++){if(s)if(F^=A.readBit(I,x))throw new o(\"prediction is not supported\");var B=new Uint8Array(e);C.push(B);for(var P=0;P<e;P++){var T,E,M=0;for(f=0;f<g;f++)T=O+p[f],E=P+m[f],T<0||E<0||E>=e?M<<=1:M=M<<1|C[T][E];for(f=0;f<v;f++)T=O+w[f]-n,E=P+y[f]-i,T<0||T>=S||E<0||E>=k?M<<=1:M=M<<1|a[T][E];var D=A.readBit(I,M);B[P]=D}}return C}function m(e,t,a,i,n,c,l,h,u,d,f,m,p,b,v,y,w,k,S){if(e&&t)throw new o(\"refinement with Huffman is not supported\");var x,C,A=[];for(x=0;x<i;x++){if(C=new Uint8Array(a),n)for(var I=0;I<a;I++)C[I]=n;A.push(C)}var F=w.decoder,O=w.contextCache,B=e?-b.tableDeltaT.decode(S):-r(O,\"IADT\",F),P=0;for(x=0;x<c;){B+=e?b.tableDeltaT.decode(S):r(O,\"IADT\",F);for(var T=P+=e?b.tableFirstS.decode(S):r(O,\"IAFS\",F);;){var E=0;l>1&&(E=e?S.readBits(k):r(O,\"IAIT\",F));var M=l*B+E,D=e?b.symbolIDTable.decode(S):s(O,F,u),R=t&&(e?S.readBit():r(O,\"IARI\",F)),L=h[D],N=L[0].length,j=L.length;if(R){var U=r(O,\"IARDW\",F),_=r(O,\"IARDH\",F);L=g(N+=U,j+=_,v,L,(U>>1)+r(O,\"IARDX\",F),(_>>1)+r(O,\"IARDY\",F),!1,y,w)}var q,z,H,G=M-(1&m?0:j-1),X=T-(2&m?N-1:0);if(d){for(q=0;q<j;q++)if(C=A[X+q]){H=L[q];var W=Math.min(a-G,N);switch(p){case 0:for(z=0;z<W;z++)C[G+z]|=H[z];break;case 2:for(z=0;z<W;z++)C[G+z]^=H[z];break;default:throw new o(\"operator \"+p+\" is not supported\")}}T+=j-1}else{for(z=0;z<j;z++)if(C=A[G+z])switch(H=L[z],p){case 0:for(q=0;q<N;q++)C[X+q]|=H[q];break;case 2:for(q=0;q<N;q++)C[X+q]^=H[q];break;default:throw new o(\"operator \"+p+\" is not supported\")}T+=N-1}x++;var V=e?b.tableDeltaS.decode(S):r(O,\"IADS\",F);if(null===V)break;T+=V+f}}return A}function p(e,t){var r={};r.number=(0,a.readUint32)(e,t);var i=e[t+4],n=63&i;if(!c[n])throw new o(\"invalid segment type: \"+n);r.type=n,r.typeName=c[n],r.deferredNonRetain=!!(128&i);var s=!!(64&i),l=e[t+5],h=l>>5&7,u=[31&l],d=t+6;if(7===l){h=536870911&(0,a.readUint32)(e,d-1),d+=3;var f=h+7>>3;for(u[0]=e[d++];--f>0;)u.push(e[d++])}else if(5===l||6===l)throw new o(\"invalid referred-to flags\");r.retainBits=u;var g,m,p=r.number<=256?1:r.number<=65536?2:4,b=[];for(g=0;g<h;g++){var w=1===p?e[d]:2===p?(0,a.readUint16)(e,d):(0,a.readUint32)(e,d);b.push(w),d+=p}if(r.referredTo=b,s?(r.pageAssociation=(0,a.readUint32)(e,d),d+=4):r.pageAssociation=e[d++],r.length=(0,a.readUint32)(e,d),d+=4,4294967295===r.length){if(38!==n)throw new o(\"invalid unknown segment length\");var k=v(e,d),S=!!(1&e[d+y]),x=new Uint8Array(6);for(S||(x[0]=255,x[1]=172),x[2]=k.height>>>24&255,x[3]=k.height>>16&255,x[4]=k.height>>8&255,x[5]=255&k.height,g=d,m=e.length;g<m;g++){for(var C=0;C<6&&x[C]===e[g+C];)C++;if(6===C){r.length=g+6;break}}if(4294967295===r.length)throw new o(\"segment end was not found\")}return r.headerEnd=d,r}function b(e,t,r,a){for(var i=[],n=r;n<a;){var o=p(t,n);n=o.headerEnd;var s={header:o,data:t};if(e.randomAccess||(s.start=n,n+=o.length,s.end=n),i.push(s),51===o.type)break}if(e.randomAccess)for(var c=0,l=i.length;c<l;c++)i[c].start=n,n+=i[c].header.length,i[c].end=n;return i}function v(e,t){return{width:(0,a.readUint32)(e,t),height:(0,a.readUint32)(e,t+4),x:(0,a.readUint32)(e,t+8),y:(0,a.readUint32)(e,t+12),combinationOperator:7&e[t+16]}}var y=17;function w(e,t){var r,i,n,s,c=e.header,l=e.data,h=e.start,u=e.end;switch(c.type){case 0:var d={},f=(0,a.readUint16)(l,h);if(d.huffman=!!(1&f),d.refinement=!!(2&f),d.huffmanDHSelector=f>>2&3,d.huffmanDWSelector=f>>4&3,d.bitmapSizeSelector=f>>6&1,d.aggregationInstancesSelector=f>>7&1,d.bitmapCodingContextUsed=!!(256&f),d.bitmapCodingContextRetained=!!(512&f),d.template=f>>10&3,d.refinementTemplate=f>>12&1,h+=2,!d.huffman){for(s=0===d.template?4:1,i=[],n=0;n<s;n++)i.push({x:(0,a.readInt8)(l,h),y:(0,a.readInt8)(l,h+1)}),h+=2;d.at=i}if(d.refinement&&!d.refinementTemplate){for(i=[],n=0;n<2;n++)i.push({x:(0,a.readInt8)(l,h),y:(0,a.readInt8)(l,h+1)}),h+=2;d.refinementAt=i}d.numberOfExportedSymbols=(0,a.readUint32)(l,h),h+=4,d.numberOfNewSymbols=(0,a.readUint32)(l,h),h+=4,r=[d,c.number,c.referredTo,l,h,u];break;case 6:case 7:var g={};g.info=v(l,h),h+=y;var m=(0,a.readUint16)(l,h);if(h+=2,g.huffman=!!(1&m),g.refinement=!!(2&m),g.logStripSize=m>>2&3,g.stripSize=1<<g.logStripSize,g.referenceCorner=m>>4&3,g.transposed=!!(64&m),g.combinationOperator=m>>7&3,g.defaultPixelValue=m>>9&1,g.dsOffset=m<<17>>27,g.refinementTemplate=m>>15&1,g.huffman){var p=(0,a.readUint16)(l,h);h+=2,g.huffmanFS=3&p,g.huffmanDS=p>>2&3,g.huffmanDT=p>>4&3,g.huffmanRefinementDW=p>>6&3,g.huffmanRefinementDH=p>>8&3,g.huffmanRefinementDX=p>>10&3,g.huffmanRefinementDY=p>>12&3,g.huffmanRefinementSizeSelector=!!(16384&p)}if(g.refinement&&!g.refinementTemplate){for(i=[],n=0;n<2;n++)i.push({x:(0,a.readInt8)(l,h),y:(0,a.readInt8)(l,h+1)}),h+=2;g.refinementAt=i}g.numberOfSymbolInstances=(0,a.readUint32)(l,h),h+=4,r=[g,c.referredTo,l,h,u];break;case 16:var b={},w=l[h++];b.mmr=!!(1&w),b.template=w>>1&3,b.patternWidth=l[h++],b.patternHeight=l[h++],b.maxPatternIndex=(0,a.readUint32)(l,h),h+=4,r=[b,c.number,l,h,u];break;case 22:case 23:var k={};k.info=v(l,h),h+=y;var S=l[h++];k.mmr=!!(1&S),k.template=S>>1&3,k.enableSkip=!!(8&S),k.combinationOperator=S>>4&7,k.defaultPixelValue=S>>7&1,k.gridWidth=(0,a.readUint32)(l,h),h+=4,k.gridHeight=(0,a.readUint32)(l,h),h+=4,k.gridOffsetX=4294967295&(0,a.readUint32)(l,h),h+=4,k.gridOffsetY=4294967295&(0,a.readUint32)(l,h),h+=4,k.gridVectorX=(0,a.readUint16)(l,h),h+=2,k.gridVectorY=(0,a.readUint16)(l,h),h+=2,r=[k,c.referredTo,l,h,u];break;case 38:case 39:var x={};x.info=v(l,h),h+=y;var C=l[h++];if(x.mmr=!!(1&C),x.template=C>>1&3,x.prediction=!!(8&C),!x.mmr){for(s=0===x.template?4:1,i=[],n=0;n<s;n++)i.push({x:(0,a.readInt8)(l,h),y:(0,a.readInt8)(l,h+1)}),h+=2;x.at=i}r=[x,l,h,u];break;case 48:var A={width:(0,a.readUint32)(l,h),height:(0,a.readUint32)(l,h+4),resolutionX:(0,a.readUint32)(l,h+8),resolutionY:(0,a.readUint32)(l,h+12)};4294967295===A.height&&delete A.height;var I=l[h+16];(0,a.readUint16)(l,h+17),A.lossless=!!(1&I),A.refinement=!!(2&I),A.defaultPixelValue=I>>2&1,A.combinationOperator=I>>3&3,A.requiresBuffer=!!(32&I),A.combinationOperatorOverride=!!(64&I),r=[A];break;case 49:case 50:case 51:break;case 53:r=[c.number,l,h,u];break;case 62:break;default:throw new o(\"segment type \"+c.typeName+\"(\"+c.type+\") is not implemented\")}var F=\"on\"+c.typeName;F in t&&t[F].apply(t,r)}function k(e,t){for(var r=0,a=e.length;r<a;r++)w(e[r],t)}function S(){}function x(e){2===e.length?(this.isOOB=!0,this.rangeLow=0,this.prefixLength=e[0],this.rangeLength=0,this.prefixCode=e[1],this.isLowerRange=!1):(this.isOOB=!1,this.rangeLow=e[0],this.prefixLength=e[1],this.rangeLength=e[2],this.prefixCode=e[3],this.isLowerRange=\"lower\"===e[4])}function C(e){this.children=[],e?(this.isLeaf=!0,this.rangeLength=e.rangeLength,this.rangeLow=e.rangeLow,this.isLowerRange=e.isLowerRange,this.isOOB=e.isOOB):this.isLeaf=!1}function A(e,t){t||this.assignPrefixCodes(e),this.rootNode=new C(null);var r=void 0,a=e.length,i=void 0;for(r=0;r<a;r++)(i=e[r]).prefixLength>0&&this.rootNode.buildTree(i,i.prefixLength-1)}S.prototype={onPageInformation:function(e){this.currentPageInfo=e;var t=e.width+7>>3,r=new Uint8ClampedArray(t*e.height);if(e.defaultPixelValue)for(var a=0,i=r.length;a<i;a++)r[a]=255;this.buffer=r},drawBitmap:function(e,t){var r,a,i,n,s=this.currentPageInfo,c=e.width,l=e.height,h=s.width+7>>3,u=s.combinationOperatorOverride?e.combinationOperator:s.combinationOperator,d=this.buffer,f=128>>(7&e.x),g=e.y*h+(e.x>>3);switch(u){case 0:for(r=0;r<l;r++){for(i=f,n=g,a=0;a<c;a++)t[r][a]&&(d[n]|=i),(i>>=1)||(i=128,n++);g+=h}break;case 2:for(r=0;r<l;r++){for(i=f,n=g,a=0;a<c;a++)t[r][a]&&(d[n]^=i),(i>>=1)||(i=128,n++);g+=h}break;default:throw new o(\"operator \"+u+\" is not supported\")}},onImmediateGenericRegion:function(e,r,a,i){var n=e.info,o=new t(r,a,i),s=f(e.mmr,n.width,n.height,e.template,e.prediction,null,e.at,o);this.drawBitmap(n,s)},onImmediateLosslessGenericRegion:function(){this.onImmediateGenericRegion.apply(this,arguments)},onSymbolDictionary:function(e,i,n,c,l,h){var u=void 0,d=void 0;e.huffman&&(u=function(e,t,r){var a=0,i=void 0,n=void 0;switch(e.huffmanDHSelector){case 0:case 1:i=F(e.huffmanDHSelector+4);break;case 3:i=B(a,t,r),a++;break;default:throw new o(\"invalid Huffman DH selector\")}switch(e.huffmanDWSelector){case 0:case 1:n=F(e.huffmanDWSelector+2);break;case 3:n=B(a,t,r),a++;break;default:throw new o(\"invalid Huffman DW selector\")}var s=void 0,c=void 0;e.bitmapSizeSelector?(s=B(a,t,r),a++):s=F(1);c=e.aggregationInstancesSelector?B(a,t,r):F(1);return{tableDeltaHeight:i,tableDeltaWidth:n,tableBitmapSize:s,tableAggregateInstances:c}}(e,n,this.customTables),d=new O(c,l,h));var p=this.symbols;p||(this.symbols=p={});for(var b=[],v=0,y=n.length;v<y;v++){var w=p[n[v]];w&&(b=b.concat(w))}var k=new t(c,l,h);p[i]=function(e,t,i,n,c,l,h,u,d,p,b,v){if(e&&t)throw new o(\"symbol refinement with Huffman is not supported\");var y=[],w=0,k=(0,a.log2)(i.length+n),S=b.decoder,x=b.contextCache,C=void 0,A=void 0;for(e&&(C=F(1),A=[],k=Math.max(k,1));y.length<n;){w+=e?l.tableDeltaHeight.decode(v):r(x,\"IADH\",S);for(var I=0,O=0,B=e?A.length:0;;){var E,M=e?l.tableDeltaWidth.decode(v):r(x,\"IADW\",S);if(null===M)break;if(O+=I+=M,t){var D=r(x,\"IAAI\",S);if(D>1)E=m(e,t,I,w,0,D,1,i.concat(y),k,0,0,1,0,l,d,p,b,0,v);else{var R=s(x,S,k),L=r(x,\"IARDX\",S),N=r(x,\"IARDY\",S);E=g(I,w,d,R<i.length?i[R]:y[R-i.length],L,N,!1,p,b)}y.push(E)}else e?A.push(I):(E=f(!1,I,w,h,!1,null,u,b),y.push(E))}if(e&&!t){var j=l.tableBitmapSize.decode(v);v.byteAlign();var U=void 0;if(0===j)U=P(v,O,w);else{var _=v.end,q=v.position+j;v.end=q,U=T(v,O,w,!1),v.end=_,v.position=q}var z=A.length;if(B===z-1)y.push(U);else{var H=void 0,G=void 0,X=0,W=void 0,V=void 0;for(H=B;H<z;H++){for(W=X+A[H],V=[],G=0;G<w;G++)V.push(U[G].subarray(X,W));y.push(V),X=W}}}}for(var K=[],Y=[],J=!1,Z=i.length+n;Y.length<Z;){for(var Q=e?C.decode(v):r(x,\"IAEX\",S);Q--;)Y.push(J);J=!J}for(var $=0,ee=i.length;$<ee;$++)Y[$]&&K.push(i[$]);for(var te=0;te<n;$++,te++)Y[$]&&K.push(y[te]);return K}(e.huffman,e.refinement,b,e.numberOfNewSymbols,e.numberOfExportedSymbols,u,e.template,e.at,e.refinementTemplate,e.refinementAt,k,d)},onImmediateTextRegion:function(e,r,i,n,s){for(var c=e.info,l=void 0,h=void 0,u=this.symbols,d=[],f=0,g=r.length;f<g;f++){var p=u[r[f]];p&&(d=d.concat(p))}var b=(0,a.log2)(d.length);e.huffman&&(h=new O(i,n,s),l=function(e,t,r,a,i){var n=[],s=void 0,c=void 0;for(s=0;s<=34;s++)c=i.readBits(4),n.push(new x([s,c,0,0]));var l=new A(n,!1);for(n.length=0,s=0;s<a;)if((c=l.decode(i))>=32){var h=void 0,u=void 0,d=void 0;switch(c){case 32:if(0===s)throw new o(\"no previous value in symbol ID table\");u=i.readBits(2)+3,h=n[s-1].prefixLength;break;case 33:u=i.readBits(3)+3,h=0;break;case 34:u=i.readBits(7)+11,h=0;break;default:throw new o(\"invalid code length in symbol ID table\")}for(d=0;d<u;d++)n.push(new x([s,h,0,0])),s++}else n.push(new x([s,c,0,0])),s++;i.byteAlign();var f=new A(n,!1),g=0,m=void 0,p=void 0,b=void 0;switch(e.huffmanFS){case 0:case 1:m=F(e.huffmanFS+6);break;case 3:m=B(g,t,r),g++;break;default:throw new o(\"invalid Huffman FS selector\")}switch(e.huffmanDS){case 0:case 1:case 2:p=F(e.huffmanDS+8);break;case 3:p=B(g,t,r),g++;break;default:throw new o(\"invalid Huffman DS selector\")}switch(e.huffmanDT){case 0:case 1:case 2:b=F(e.huffmanDT+11);break;case 3:b=B(g,t,r),g++;break;default:throw new o(\"invalid Huffman DT selector\")}if(e.refinement)throw new o(\"refinement with Huffman is not supported\");return{symbolIDTable:f,tableFirstS:m,tableDeltaS:p,tableDeltaT:b}}(e,r,this.customTables,d.length,h));var v=new t(i,n,s),y=m(e.huffman,e.refinement,c.width,c.height,e.defaultPixelValue,e.numberOfSymbolInstances,e.stripSize,d,b,e.transposed,e.dsOffset,e.referenceCorner,e.combinationOperator,l,e.refinementTemplate,e.refinementAt,v,e.logStripSize,h);this.drawBitmap(c,y)},onImmediateLosslessTextRegion:function(){this.onImmediateTextRegion.apply(this,arguments)},onPatternDictionary:function(e,r,a,i,n){var o=this.patterns;o||(this.patterns=o={});var s=new t(a,i,n);o[r]=function(e,t,r,a,i,n){var o=[];e||(o.push({x:-t,y:0}),0===i&&(o.push({x:-3,y:-1}),o.push({x:2,y:-2}),o.push({x:-2,y:-2})));for(var s=f(e,(a+1)*t,r,i,!1,null,o,n),c=[],l=0,h=void 0,u=void 0,d=void 0,g=void 0;l<=a;){for(h=[],d=(u=t*l)+t,g=0;g<r;g++)h.push(s[g].subarray(u,d));c.push(h),l++}return c}(e.mmr,e.patternWidth,e.patternHeight,e.maxPatternIndex,e.template,s)},onImmediateHalftoneRegion:function(e,r,i,n,s){var c=this.patterns[r[0]],l=e.info,h=new t(i,n,s),u=function(e,t,r,i,n,s,c,l,h,u,d,g,m,p,b){if(c)throw new o(\"skip is not supported\");if(0!==l)throw new o(\"operator \"+l+\" is not supported in halftone region\");var v=[],y=void 0,w=void 0,k=void 0;for(y=0;y<n;y++){if(k=new Uint8Array(i),s)for(w=0;w<i;w++)k[w]=s;v.push(k)}var S=t.length,x=t[0],C=x[0].length,A=x.length,I=(0,a.log2)(S),F=[];e||(F.push({x:r<=1?3:2,y:-1}),0===r&&(F.push({x:-3,y:-1}),F.push({x:2,y:-2}),F.push({x:-2,y:-2})));var B=[],P=void 0,E=void 0;for(e&&(P=new O(b.data,b.start,b.end)),y=I-1;y>=0;y--)E=e?T(P,h,u,!0):f(!1,h,u,r,!1,null,F,b),B[y]=E;var M=void 0,D=void 0,R=void 0,L=void 0,N=void 0,j=void 0,U=void 0,_=void 0,q=void 0;for(M=0;M<u;M++)for(D=0;D<h;D++){for(R=0,L=0,w=I-1;w>=0;w--)L|=(R=B[w][M][D]^R)<<w;if(N=t[L],U=g+M*m-D*p>>8,(j=d+M*p+D*m>>8)>=0&&j+C<=i&&U>=0&&U+A<=n)for(y=0;y<A;y++)for(q=v[U+y],_=N[y],w=0;w<C;w++)q[j+w]|=_[w];else{var z=void 0,H=void 0;for(y=0;y<A;y++)if(!((H=U+y)<0||H>=n))for(q=v[H],_=N[y],w=0;w<C;w++)(z=j+w)>=0&&z<i&&(q[z]|=_[w])}}return v}(e.mmr,c,e.template,l.width,l.height,e.defaultPixelValue,e.enableSkip,e.combinationOperator,e.gridWidth,e.gridHeight,e.gridOffsetX,e.gridOffsetY,e.gridVectorX,e.gridVectorY,h);this.drawBitmap(l,u)},onImmediateLosslessHalftoneRegion:function(){this.onImmediateHalftoneRegion.apply(this,arguments)},onTables:function(e,t,r,i){var n=this.customTables;n||(this.customTables=n={}),n[e]=function(e,t,r){var i=e[t],n=4294967295&(0,a.readUint32)(e,t+1),o=4294967295&(0,a.readUint32)(e,t+5),s=new O(e,t+9,r),c=1+(i>>1&7),l=1+(i>>4&7),h=[],u=void 0,d=void 0,f=n;do{u=s.readBits(c),d=s.readBits(l),h.push(new x([f,u,d,0])),f+=1<<d}while(f<o);u=s.readBits(c),h.push(new x([n-1,u,32,0,\"lower\"])),u=s.readBits(c),h.push(new x([o,u,32,0])),1&i&&(u=s.readBits(c),h.push(new x([u,0])));return new A(h,!1)}(t,r,i)}},C.prototype={buildTree:function(e,t){var r=e.prefixCode>>t&1;if(t<=0)this.children[r]=new C(e);else{var a=this.children[r];a||(this.children[r]=a=new C(null)),a.buildTree(e,t-1)}},decodeNode:function(e){if(this.isLeaf){if(this.isOOB)return null;var t=e.readBits(this.rangeLength);return this.rangeLow+(this.isLowerRange?-t:t)}var r=this.children[e.readBit()];if(!r)throw new o(\"invalid Huffman data\");return r.decodeNode(e)}},A.prototype={decode:function(e){return this.rootNode.decodeNode(e)},assignPrefixCodes:function(e){var t=e.length,r=0,a=void 0;for(a=0;a<t;a++)r=Math.max(r,e[a].prefixLength);var i=new Uint32Array(r+1);for(a=0;a<t;a++)i[e[a].prefixLength]++;var n=1,o=0,s=void 0,c=void 0,l=void 0;for(i[0]=0;n<=r;){for(s=o=o+i[n-1]<<1,c=0;c<t;)(l=e[c]).prefixLength===n&&(l.prefixCode=s,s++),c++;n++}}};var I={};function F(e){var t=I[e];if(t)return t;var r=void 0;switch(e){case 1:r=[[0,1,4,0],[16,2,8,2],[272,3,16,6],[65808,3,32,7]];break;case 2:r=[[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[75,6,32,62],[6,63]];break;case 3:r=[[-256,8,8,254],[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[-257,8,32,255,\"lower\"],[75,7,32,126],[6,62]];break;case 4:r=[[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[76,5,32,31]];break;case 5:r=[[-255,7,8,126],[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[-256,7,32,127,\"lower\"],[76,6,32,62]];break;case 6:r=[[-2048,5,10,28],[-1024,4,9,8],[-512,4,8,9],[-256,4,7,10],[-128,5,6,29],[-64,5,5,30],[-32,4,5,11],[0,2,7,0],[128,3,7,2],[256,3,8,3],[512,4,9,12],[1024,4,10,13],[-2049,6,32,62,\"lower\"],[2048,6,32,63]];break;case 7:r=[[-1024,4,9,8],[-512,3,8,0],[-256,4,7,9],[-128,5,6,26],[-64,5,5,27],[-32,4,5,10],[0,4,5,11],[32,5,5,28],[64,5,6,29],[128,4,7,12],[256,3,8,1],[512,3,9,2],[1024,3,10,3],[-1025,5,32,30,\"lower\"],[2048,5,32,31]];break;case 8:r=[[-15,8,3,252],[-7,9,1,508],[-5,8,1,253],[-3,9,0,509],[-2,7,0,124],[-1,4,0,10],[0,2,1,0],[2,5,0,26],[3,6,0,58],[4,3,4,4],[20,6,1,59],[22,4,4,11],[38,4,5,12],[70,5,6,27],[134,5,7,28],[262,6,7,60],[390,7,8,125],[646,6,10,61],[-16,9,32,510,\"lower\"],[1670,9,32,511],[2,1]];break;case 9:r=[[-31,8,4,252],[-15,9,2,508],[-11,8,2,253],[-7,9,1,509],[-5,7,1,124],[-3,4,1,10],[-1,3,1,2],[1,3,1,3],[3,5,1,26],[5,6,1,58],[7,3,5,4],[39,6,2,59],[43,4,5,11],[75,4,6,12],[139,5,7,27],[267,5,8,28],[523,6,8,60],[779,7,9,125],[1291,6,11,61],[-32,9,32,510,\"lower\"],[3339,9,32,511],[2,0]];break;case 10:r=[[-21,7,4,122],[-5,8,0,252],[-4,7,0,123],[-3,5,0,24],[-2,2,2,0],[2,5,0,25],[3,6,0,54],[4,7,0,124],[5,8,0,253],[6,2,6,1],[70,5,5,26],[102,6,5,55],[134,6,6,56],[198,6,7,57],[326,6,8,58],[582,6,9,59],[1094,6,10,60],[2118,7,11,125],[-22,8,32,254,\"lower\"],[4166,8,32,255],[2,2]];break;case 11:r=[[1,1,0,0],[2,2,1,2],[4,4,0,12],[5,4,1,13],[7,5,1,28],[9,5,2,29],[13,6,2,60],[17,7,2,122],[21,7,3,123],[29,7,4,124],[45,7,5,125],[77,7,6,126],[141,7,32,127]];break;case 12:r=[[1,1,0,0],[2,2,0,2],[3,3,1,6],[5,5,0,28],[6,5,1,29],[8,6,1,60],[10,7,0,122],[11,7,1,123],[13,7,2,124],[17,7,3,125],[25,7,4,126],[41,8,5,254],[73,8,32,255]];break;case 13:r=[[1,1,0,0],[2,3,0,4],[3,4,0,12],[4,5,0,28],[5,4,1,13],[7,3,3,5],[15,6,1,58],[17,6,2,59],[21,6,3,60],[29,6,4,61],[45,6,5,62],[77,7,6,126],[141,7,32,127]];break;case 14:r=[[-2,3,0,4],[-1,3,0,5],[0,1,0,0],[1,3,0,6],[2,3,0,7]];break;case 15:r=[[-24,7,4,124],[-8,6,2,60],[-4,5,1,28],[-2,4,0,12],[-1,3,0,4],[0,1,0,0],[1,3,0,5],[2,4,0,13],[3,5,1,29],[5,6,2,61],[9,7,4,125],[-25,7,32,126,\"lower\"],[25,7,32,127]];break;default:throw new o(\"standard table B.\"+e+\" does not exist\")}var a=r.length,i=void 0;for(i=0;i<a;i++)r[i]=new x(r[i]);return t=new A(r,!0),I[e]=t,t}function O(e,t,r){this.data=e,this.start=t,this.end=r,this.position=t,this.shift=-1,this.currentByte=0}function B(e,t,r){var a=0,i=void 0,n=t.length,s=void 0;for(i=0;i<n;i++)if(s=r[t[i]]){if(e===a)return s;a++}throw new o(\"can't find custom Huffman table\")}function P(e,t,r){var a=[],i=void 0,n=void 0,o=void 0;for(n=0;n<r;n++){for(o=new Uint8Array(t),a.push(o),i=0;i<t;i++)o[i]=e.readBit();e.byteAlign()}return a}function T(e,t,r,a){var i={K:-1,Columns:t,Rows:r,BlackIs1:!0,EndOfBlock:a},o=new n.CCITTFaxDecoder(e,i),s=[],c=void 0,l=void 0,h=void 0,u=void 0,d=void 0,f=!1;for(l=0;l<r;l++)for(h=new Uint8Array(t),s.push(h),d=-1,c=0;c<t;c++)d<0&&(-1===(u=o.readNextChar())&&(u=0,f=!0),d=7),h[c]=u>>d&1,d--;if(a&&!f)for(var g=0;g<5&&-1!==o.readNextChar();g++);return s}function E(){}return O.prototype={readBit:function(){if(this.shift<0){if(this.position>=this.end)throw new o(\"end of data while reading bit\");this.currentByte=this.data[this.position++],this.shift=7}var e=this.currentByte>>this.shift&1;return this.shift--,e},readBits:function(e){var t=0,r=void 0;for(r=e-1;r>=0;r--)t|=this.readBit()<<r;return t},byteAlign:function(){this.shift=-1},next:function(){return this.position>=this.end?-1:this.data[this.position++]}},E.prototype={parseChunks:function(e){return function(e){for(var t=new S,r=0,a=e.length;r<a;r++){var i=e[r];k(b({},i.data,i.start,i.end),t)}return t.buffer}(e)}},E}();t.Jbig2Image=s},\"./node_modules/pdfjs-dist/lib/core/jbig2_stream.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/jbig2_stream.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Stream=void 0;var a=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),i=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),n=r(/*! ./jbig2 */\"./node_modules/pdfjs-dist/lib/core/jbig2.js\"),o=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),s=function(){function e(e,t,r,a){this.stream=e,this.maybeLength=t,this.dict=r,this.params=a,i.DecodeStream.call(this,t)}return e.prototype=Object.create(i.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,o.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new n.Jbig2Image,t=[];if((0,a.isDict)(this.params)){var r=this.params.get(\"JBIG2Globals\");if((0,a.isStream)(r)){var i=r.getBytes();t.push({data:i,start:0,end:i.length})}}t.push({data:this.bytes,start:0,end:this.bytes.length});for(var o=e.parseChunks(t),s=o.length,c=0;c<s;c++)o[c]^=255;this.buffer=o,this.bufferLength=s,this.eof=!0}},e}();t.Jbig2Stream=s},\"./node_modules/pdfjs-dist/lib/core/jpeg_stream.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/jpeg_stream.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegStream=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),n=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),o=r(/*! ./jpg */\"./node_modules/pdfjs-dist/lib/core/jpg.js\"),s=function(){function e(e,t,r,a){for(var n=void 0;-1!==(n=e.getByte());)if(255===n){e.skip(-1);break}this.stream=e,this.maybeLength=t,this.dict=r,this.params=a,i.DecodeStream.call(this,t)}return e.prototype=Object.create(i.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,a.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new o.JpegImage,t=this.dict.getArray(\"Decode\",\"D\");if(this.forceRGB&&Array.isArray(t)){for(var r=this.dict.get(\"BitsPerComponent\")||8,a=t.length,i=new Int32Array(a),s=!1,c=(1<<r)-1,l=0;l<a;l+=2)i[l]=256*(t[l+1]-t[l])|0,i[l+1]=t[l]*c|0,256===i[l]&&0===i[l+1]||(s=!0);s&&(e.decodeTransform=i)}if((0,n.isDict)(this.params)){var h=this.params.get(\"ColorTransform\");Number.isInteger(h)&&(e.colorTransform=h)}e.parse(this.bytes);var u=e.getData(this.drawWidth,this.drawHeight,this.forceRGB);this.buffer=u,this.bufferLength=u.length,this.eof=!0}},e.prototype.getIR=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(0,a.createObjectURL)(this.bytes,\"image/jpeg\",e)},e}();t.JpegStream=s},\"./node_modules/pdfjs-dist/lib/core/jpg.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/jpg.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegImage=void 0;var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),n=function(){function e(e){this.message=\"JPEG error: \"+e}return e.prototype=new Error,e.prototype.name=\"JpegError\",e.constructor=e,e}(),o=function(){var e=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),t=4017,r=799,o=3406,s=2276,c=1567,l=3784,h=5793,u=2896;function d(){this.decodeTransform=null,this.colorTransform=-1}function f(e,t){for(var r,a,i=0,n=[],o=16;o>0&&!e[o-1];)o--;n.push({children:[],index:0});var s,c=n[0];for(r=0;r<o;r++){for(a=0;a<e[r];a++){for((c=n.pop()).children[c.index]=t[i];c.index>0;)c=n.pop();for(c.index++,n.push(c);n.length<=r;)n.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s;i++}r+1<o&&(n.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s)}return n[0].children}function g(e,t,r){return 64*((e.blocksPerLine+1)*t+r)}function m(t,r,o,s,c,l,h,u,d){var f=o.mcusPerLine,m=o.progressive,p=r,b=0,y=0;function w(){if(y>0)return b>>--y&1;if(255===(b=t[r++])){var e=t[r++];if(e)throw new n(\"unexpected marker \"+(b<<8|e).toString(16))}return y=7,b>>>7}function k(e){for(var t=e;;){if(\"number\"==typeof(t=t[w()]))return t;if(\"object\"!==(void 0===t?\"undefined\":a(t)))throw new n(\"invalid huffman sequence\")}}function S(e){for(var t=0;e>0;)t=t<<1|w(),e--;return t}function x(e){if(1===e)return 1===w()?1:-1;var t=S(e);return t>=1<<e-1?t:t+(-1<<e)+1}var C=0;var A,I=0;function F(e,t,r,a,i){var n=r%f;t(e,g(e,(r/f|0)*e.v+a,n*e.h+i))}function O(e,t,r){t(e,g(e,r/e.blocksPerLine|0,r%e.blocksPerLine))}var B,P,T,E,M,D,R=s.length;D=m?0===l?0===u?function(e,t){var r=k(e.huffmanTableDC),a=0===r?0:x(r)<<d;e.blockData[t]=e.pred+=a}:function(e,t){e.blockData[t]|=w()<<d}:0===u?function(t,r){if(C>0)C--;else for(var a=l,i=h;a<=i;){var n=k(t.huffmanTableAC),o=15&n,s=n>>4;if(0!==o){var c=e[a+=s];t.blockData[r+c]=x(o)*(1<<d),a++}else{if(s<15){C=S(s)+(1<<s)-1;break}a+=16}}}:function(t,r){for(var a,i,o=l,s=h,c=0;o<=s;){var u=r+e[o],f=t.blockData[u]<0?-1:1;switch(I){case 0:if(c=(i=k(t.huffmanTableAC))>>4,0==(a=15&i))c<15?(C=S(c)+(1<<c),I=4):(c=16,I=1);else{if(1!==a)throw new n(\"invalid ACn encoding\");A=x(a),I=c?2:3}continue;case 1:case 2:t.blockData[u]?t.blockData[u]+=f*(w()<<d):0==--c&&(I=2===I?3:0);break;case 3:t.blockData[u]?t.blockData[u]+=f*(w()<<d):(t.blockData[u]=A<<d,I=0);break;case 4:t.blockData[u]&&(t.blockData[u]+=f*(w()<<d))}o++}4===I&&0==--C&&(I=0)}:function(t,r){var a=k(t.huffmanTableDC),i=0===a?0:x(a);t.blockData[r]=t.pred+=i;for(var n=1;n<64;){var o=k(t.huffmanTableAC),s=15&o,c=o>>4;if(0!==s){var l=e[n+=c];t.blockData[r+l]=x(s),n++}else{if(c<15)break;n+=16}}};var L,N,j,U,_=0;for(N=1===R?s[0].blocksPerLine*s[0].blocksPerColumn:f*o.mcusPerColumn;_<N;){var q=c?Math.min(N-_,c):N;for(P=0;P<R;P++)s[P].pred=0;if(C=0,1===R)for(B=s[0],M=0;M<q;M++)O(B,D,_),_++;else for(M=0;M<q;M++){for(P=0;P<R;P++)for(j=(B=s[P]).h,U=B.v,T=0;T<U;T++)for(E=0;E<j;E++)F(B,D,_,T,E);_++}y=0,(L=v(t,r))&&L.invalid&&((0,i.warn)(\"decodeScan - unexpected MCU data, next marker is: \"+L.invalid),r=L.offset);var z=L&&L.marker;if(!z||z<=65280)throw new n(\"marker was not found\");if(!(z>=65488&&z<=65495))break;r+=2}return(L=v(t,r))&&L.invalid&&((0,i.warn)(\"decodeScan - unexpected Scan data, next marker is: \"+L.invalid),r=L.offset),r-p}function p(e,a,i){var d,f,g,m,p,b,v,y,w,k,S,x,C,A,I,F,O,B=e.quantizationTable,P=e.blockData;if(!B)throw new n(\"missing required Quantization Table.\");for(var T=0;T<64;T+=8)w=P[a+T],k=P[a+T+1],S=P[a+T+2],x=P[a+T+3],C=P[a+T+4],A=P[a+T+5],I=P[a+T+6],F=P[a+T+7],w*=B[T],0!=(k|S|x|C|A|I|F)?(k*=B[T+1],S*=B[T+2],x*=B[T+3],C*=B[T+4],A*=B[T+5],I*=B[T+6],F*=B[T+7],f=(d=(d=h*w+128>>8)+(f=h*C+128>>8)+1>>1)-f,O=(g=S)*l+(m=I)*c+128>>8,g=g*c-m*l+128>>8,v=(p=(p=u*(k-F)+128>>8)+(v=A<<4)+1>>1)-v,b=(y=(y=u*(k+F)+128>>8)+(b=x<<4)+1>>1)-b,m=(d=d+(m=O)+1>>1)-m,g=(f=f+g+1>>1)-g,O=p*s+y*o+2048>>12,p=p*o-y*s+2048>>12,y=O,O=b*r+v*t+2048>>12,b=b*t-v*r+2048>>12,v=O,i[T]=d+y,i[T+7]=d-y,i[T+1]=f+v,i[T+6]=f-v,i[T+2]=g+b,i[T+5]=g-b,i[T+3]=m+p,i[T+4]=m-p):(O=h*w+512>>10,i[T]=O,i[T+1]=O,i[T+2]=O,i[T+3]=O,i[T+4]=O,i[T+5]=O,i[T+6]=O,i[T+7]=O);for(var E=0;E<8;++E)w=i[E],0!=((k=i[E+8])|(S=i[E+16])|(x=i[E+24])|(C=i[E+32])|(A=i[E+40])|(I=i[E+48])|(F=i[E+56]))?(f=(d=4112+((d=h*w+2048>>12)+(f=h*C+2048>>12)+1>>1))-f,O=(g=S)*l+(m=I)*c+2048>>12,g=g*c-m*l+2048>>12,m=O,v=(p=(p=u*(k-F)+2048>>12)+(v=A)+1>>1)-v,b=(y=(y=u*(k+F)+2048>>12)+(b=x)+1>>1)-b,O=p*s+y*o+2048>>12,p=p*o-y*s+2048>>12,y=O,O=b*r+v*t+2048>>12,b=b*t-v*r+2048>>12,w=(w=(d=d+m+1>>1)+y)<16?0:w>=4080?255:w>>4,k=(k=(f=f+g+1>>1)+(v=O))<16?0:k>=4080?255:k>>4,S=(S=(g=f-g)+b)<16?0:S>=4080?255:S>>4,x=(x=(m=d-m)+p)<16?0:x>=4080?255:x>>4,C=(C=m-p)<16?0:C>=4080?255:C>>4,A=(A=g-b)<16?0:A>=4080?255:A>>4,I=(I=f-v)<16?0:I>=4080?255:I>>4,F=(F=d-y)<16?0:F>=4080?255:F>>4,P[a+E]=w,P[a+E+8]=k,P[a+E+16]=S,P[a+E+24]=x,P[a+E+32]=C,P[a+E+40]=A,P[a+E+48]=I,P[a+E+56]=F):(O=(O=h*w+8192>>14)<-2040?0:O>=2024?255:O+2056>>4,P[a+E]=O,P[a+E+8]=O,P[a+E+16]=O,P[a+E+24]=O,P[a+E+32]=O,P[a+E+40]=O,P[a+E+48]=O,P[a+E+56]=O)}function b(e,t){for(var r=t.blocksPerLine,a=t.blocksPerColumn,i=new Int16Array(64),n=0;n<a;n++)for(var o=0;o<r;o++){p(t,g(t,n,o),i)}return t.blockData}function v(e,t,r){function a(t){return e[t]<<8|e[t+1]}var i=e.length-1,n=r<t?r:t;if(t>=i)return null;var o=a(t);if(o>=65472&&o<=65534)return{invalid:null,marker:o,offset:t};for(var s=a(n);!(s>=65472&&s<=65534);){if(++n>=i)return null;s=a(n)}return{invalid:o.toString(16),marker:s,offset:n}}return d.prototype={parse:function(t){function r(){var e=t[l]<<8|t[l+1];return l+=2,e}function a(){var e=r(),a=l+e-2,n=v(t,a,l);n&&n.invalid&&((0,i.warn)(\"readDataBlock - incorrect length, next marker is: \"+n.invalid),a=n.offset);var o=t.subarray(l,a);return l+=o.length,o}function o(e){for(var t=Math.ceil(e.samplesPerLine/8/e.maxH),r=Math.ceil(e.scanLines/8/e.maxV),a=0;a<e.components.length;a++){U=e.components[a];var i=Math.ceil(Math.ceil(e.samplesPerLine/8)*U.h/e.maxH),n=Math.ceil(Math.ceil(e.scanLines/8)*U.v/e.maxV),o=t*U.h,s=64*(r*U.v)*(o+1);U.blockData=new Int16Array(s),U.blocksPerLine=i,U.blocksPerColumn=n}e.mcusPerLine=t,e.mcusPerColumn=r}var s,c,l=0,h=null,u=null,d=[],g=[],p=[],y=r();if(65496!==y)throw new n(\"SOI not found\");for(y=r();65497!==y;){var w,k,S;switch(y){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var x=a();65504===y&&74===x[0]&&70===x[1]&&73===x[2]&&70===x[3]&&0===x[4]&&(h={version:{major:x[5],minor:x[6]},densityUnits:x[7],xDensity:x[8]<<8|x[9],yDensity:x[10]<<8|x[11],thumbWidth:x[12],thumbHeight:x[13],thumbData:x.subarray(14,14+3*x[12]*x[13])}),65518===y&&65===x[0]&&100===x[1]&&111===x[2]&&98===x[3]&&101===x[4]&&(u={version:x[5]<<8|x[6],flags0:x[7]<<8|x[8],flags1:x[9]<<8|x[10],transformCode:x[11]});break;case 65499:for(var C=r()+l-2;l<C;){var A=t[l++],I=new Uint16Array(64);if(A>>4==0)for(k=0;k<64;k++)I[e[k]]=t[l++];else{if(A>>4!=1)throw new n(\"DQT - invalid table spec\");for(k=0;k<64;k++)I[e[k]]=r()}d[15&A]=I}break;case 65472:case 65473:case 65474:if(s)throw new n(\"Only single frame JPEGs supported\");r(),(s={}).extended=65473===y,s.progressive=65474===y,s.precision=t[l++],s.scanLines=r(),s.samplesPerLine=r(),s.components=[],s.componentIds={};var F,O=t[l++],B=0,P=0;for(w=0;w<O;w++){F=t[l];var T=t[l+1]>>4,E=15&t[l+1];B<T&&(B=T),P<E&&(P=E);var M=t[l+2];S=s.components.push({h:T,v:E,quantizationId:M,quantizationTable:null}),s.componentIds[F]=S-1,l+=3}s.maxH=B,s.maxV=P,o(s);break;case 65476:var D=r();for(w=2;w<D;){var R=t[l++],L=new Uint8Array(16),N=0;for(k=0;k<16;k++,l++)N+=L[k]=t[l];var j=new Uint8Array(N);for(k=0;k<N;k++,l++)j[k]=t[l];w+=17+N,(R>>4==0?p:g)[15&R]=f(L,j)}break;case 65501:r(),c=r();break;case 65498:r();var U,_=t[l++],q=[];for(w=0;w<_;w++){var z=s.componentIds[t[l++]];U=s.components[z];var H=t[l++];U.huffmanTableDC=p[H>>4],U.huffmanTableAC=g[15&H],q.push(U)}var G=t[l++],X=t[l++],W=t[l++],V=m(t,l,s,q,c,G,X,W>>4,15&W);l+=V;break;case 65535:255!==t[l]&&l--;break;default:if(255===t[l-3]&&t[l-2]>=192&&t[l-2]<=254){l-=3;break}throw new n(\"unknown marker \"+y.toString(16))}y=r()}for(this.width=s.samplesPerLine,this.height=s.scanLines,this.jfif=h,this.adobe=u,this.components=[],w=0;w<s.components.length;w++){var K=d[(U=s.components[w]).quantizationId];K&&(U.quantizationTable=K),this.components.push({output:b(0,U),scaleX:U.h/s.maxH,scaleY:U.v/s.maxV,blocksPerLine:U.blocksPerLine,blocksPerColumn:U.blocksPerColumn})}this.numComponents=this.components.length},_getLinearizedBlockData:function(e,t){var r,a,i,n,o,s,c,l,h,u,d,f=this.width/e,g=this.height/t,m=0,p=this.components.length,b=e*t*p,v=new Uint8ClampedArray(b),y=new Uint32Array(e);for(c=0;c<p;c++){for(a=(r=this.components[c]).scaleX*f,i=r.scaleY*g,m=c,d=r.output,n=r.blocksPerLine+1<<3,o=0;o<e;o++)l=0|o*a,y[o]=(4294967288&l)<<3|7&l;for(s=0;s<t;s++)for(u=n*(4294967288&(l=0|s*i))|(7&l)<<3,o=0;o<e;o++)v[m]=d[u+y[o]],m+=p}var w=this.decodeTransform;if(w)for(c=0;c<b;)for(l=0,h=0;l<p;l++,c++,h+=2)v[c]=(v[c]*w[h]>>8)+w[h+1];return v},_isColorConversionNeeded:function(){return this.adobe?!!this.adobe.transformCode:3===this.numComponents?0!==this.colorTransform:1===this.colorTransform},_convertYccToRgb:function(e){for(var t,r,a,i=0,n=e.length;i<n;i+=3)t=e[i],r=e[i+1],a=e[i+2],e[i]=t-179.456+1.402*a,e[i+1]=t+135.459-.344*r-.714*a,e[i+2]=t-226.816+1.772*r;return e},_convertYcckToRgb:function(e){for(var t,r,a,i,n=0,o=0,s=e.length;o<s;o+=4)t=e[o],r=e[o+1],a=e[o+2],i=e[o+3],e[n++]=r*(-660635669420364e-19*r+.000437130475926232*a-54080610064599e-18*t+.00048449797120281*i-.154362151871126)-122.67195406894+a*(-.000957964378445773*a+.000817076911346625*t-.00477271405408747*i+1.53380253221734)+t*(.000961250184130688*t-.00266257332283933*i+.48357088451265)+i*(-.000336197177618394*i+.484791561490776),e[n++]=107.268039397724+r*(219927104525741e-19*r-.000640992018297945*a+.000659397001245577*t+.000426105652938837*i-.176491792462875)+a*(-.000778269941513683*a+.00130872261408275*t+.000770482631801132*i-.151051492775562)+t*(.00126935368114843*t-.00265090189010898*i+.25802910206845)+i*(-.000318913117588328*i-.213742400323665),e[n++]=r*(-.000570115196973677*r-263409051004589e-19*a+.0020741088115012*t-.00288260236853442*i+.814272968359295)-20.810012546947+a*(-153496057440975e-19*a-.000132689043961446*t+.000560833691242812*i-.195152027534049)+t*(.00174418132927582*t-.00255243321439347*i+.116935020465145)+i*(-.000343531996510555*i+.24165260232407);return e},_convertYcckToCmyk:function(e){for(var t,r,a,i=0,n=e.length;i<n;i+=4)t=e[i],r=e[i+1],a=e[i+2],e[i]=434.456-t-1.402*a,e[i+1]=119.541-t+.344*r+.714*a,e[i+2]=481.816-t-1.772*r;return e},_convertCmykToRgb:function(e){for(var t,r,a,i,n=0,o=0,s=e.length;o<s;o+=4)t=e[o]*(1/255),r=e[o+1]*(1/255),a=e[o+2]*(1/255),i=e[o+3]*(1/255),e[n++]=255+t*(-4.387332384609988*t+54.48615194189176*r+18.82290502165302*a+212.25662451639585*i-285.2331026137004)+r*(1.7149763477362134*r-5.6096736904047315*a-17.873870861415444*i-5.497006427196366)+a*(-2.5217340131683033*a-21.248923337353073*i+17.5119270841813)-i*(21.86122147463605*i+189.48180835922747),e[n++]=255+t*(8.841041422036149*t+60.118027045597366*r+6.871425592049007*a+31.159100130055922*i-79.2970844816548)+r*(-15.310361306967817*r+17.575251261109482*a+131.35250912493976*i-190.9453302588951)+a*(4.444339102852739*a+9.8632861493405*i-24.86741582555878)-i*(20.737325471181034*i+187.80453709719578),e[n++]=255+t*(.8842522430003296*t+8.078677503112928*r+30.89978309703729*a-.23883238689178934*i-14.183576799673286)+r*(10.49593273432072*r+63.02378494754052*a+50.606957656360734*i-112.23884253719248)+a*(.03296041114873217*a+115.60384449646641*i-193.58209356861505)-i*(22.33816807309886*i+180.12613974708367);return e},getData:function(e,t,r){if(this.numComponents>4)throw new n(\"Unsupported color mode\");var a=this._getLinearizedBlockData(e,t);if(1===this.numComponents&&r){for(var i=a.length,o=new Uint8ClampedArray(3*i),s=0,c=0;c<i;c++){var l=a[c];o[s++]=l,o[s++]=l,o[s++]=l}return o}if(3===this.numComponents&&this._isColorConversionNeeded())return this._convertYccToRgb(a);if(4===this.numComponents){if(this._isColorConversionNeeded())return r?this._convertYcckToRgb(a):this._convertYcckToCmyk(a);if(r)return this._convertCmykToRgb(a)}return a}},d}();t.JpegImage=o},\"./node_modules/pdfjs-dist/lib/core/jpx.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/jpx.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxImage=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./arithmetic_decoder */\"./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js\"),n=function(){function e(e){this.message=\"JPX error: \"+e}return e.prototype=new Error,e.prototype.name=\"JpxError\",e.constructor=e,e}(),o=function(){var e={LL:0,LH:1,HL:1,HH:2};function t(){this.failOnCorruptedImage=!1}function r(e,t){e.x0=Math.ceil(t.XOsiz/e.XRsiz),e.x1=Math.ceil(t.Xsiz/e.XRsiz),e.y0=Math.ceil(t.YOsiz/e.YRsiz),e.y1=Math.ceil(t.Ysiz/e.YRsiz),e.width=e.x1-e.x0,e.height=e.y1-e.y0}function o(e,t){for(var r,a=e.SIZ,i=[],n=Math.ceil((a.Xsiz-a.XTOsiz)/a.XTsiz),o=Math.ceil((a.Ysiz-a.YTOsiz)/a.YTsiz),s=0;s<o;s++)for(var c=0;c<n;c++)(r={}).tx0=Math.max(a.XTOsiz+c*a.XTsiz,a.XOsiz),r.ty0=Math.max(a.YTOsiz+s*a.YTsiz,a.YOsiz),r.tx1=Math.min(a.XTOsiz+(c+1)*a.XTsiz,a.Xsiz),r.ty1=Math.min(a.YTOsiz+(s+1)*a.YTsiz,a.Ysiz),r.width=r.tx1-r.tx0,r.height=r.ty1-r.ty0,r.components=[],i.push(r);e.tiles=i;for(var l=0,h=a.Csiz;l<h;l++)for(var u=t[l],d=0,f=i.length;d<f;d++){var g={};r=i[d],g.tcx0=Math.ceil(r.tx0/u.XRsiz),g.tcy0=Math.ceil(r.ty0/u.YRsiz),g.tcx1=Math.ceil(r.tx1/u.XRsiz),g.tcy1=Math.ceil(r.ty1/u.YRsiz),g.width=g.tcx1-g.tcx0,g.height=g.tcy1-g.tcy0,r.components[l]=g}}function s(e,t,r){var a=t.codingStyleParameters,i={};return a.entropyCoderWithCustomPrecincts?(i.PPx=a.precinctsSizes[r].PPx,i.PPy=a.precinctsSizes[r].PPy):(i.PPx=15,i.PPy=15),i.xcb_=r>0?Math.min(a.xcb,i.PPx-1):Math.min(a.xcb,i.PPx),i.ycb_=r>0?Math.min(a.ycb,i.PPy-1):Math.min(a.ycb,i.PPy),i}function c(e,t,r){var a=1<<r.PPx,i=1<<r.PPy,n=0===t.resLevel,o=1<<r.PPx+(n?0:-1),s=1<<r.PPy+(n?0:-1),c=t.trx1>t.trx0?Math.ceil(t.trx1/a)-Math.floor(t.trx0/a):0,l=t.try1>t.try0?Math.ceil(t.try1/i)-Math.floor(t.try0/i):0,h=c*l;t.precinctParameters={precinctWidth:a,precinctHeight:i,numprecinctswide:c,numprecinctshigh:l,numprecincts:h,precinctWidthInSubband:o,precinctHeightInSubband:s}}function l(e,t,r){var a,i,n,o,s=r.xcb_,c=r.ycb_,l=1<<s,h=1<<c,u=t.tbx0>>s,d=t.tby0>>c,f=t.tbx1+l-1>>s,g=t.tby1+h-1>>c,m=t.resolution.precinctParameters,p=[],b=[];for(i=d;i<g;i++)for(a=u;a<f;a++){if((n={cbx:a,cby:i,tbx0:l*a,tby0:h*i,tbx1:l*(a+1),tby1:h*(i+1)}).tbx0_=Math.max(t.tbx0,n.tbx0),n.tby0_=Math.max(t.tby0,n.tby0),n.tbx1_=Math.min(t.tbx1,n.tbx1),n.tby1_=Math.min(t.tby1,n.tby1),o=Math.floor((n.tbx0_-t.tbx0)/m.precinctWidthInSubband)+Math.floor((n.tby0_-t.tby0)/m.precinctHeightInSubband)*m.numprecinctswide,n.precinctNumber=o,n.subbandType=t.type,n.Lblock=3,!(n.tbx1_<=n.tbx0_||n.tby1_<=n.tby0_)){p.push(n);var v=b[o];void 0!==v?(a<v.cbxMin?v.cbxMin=a:a>v.cbxMax&&(v.cbxMax=a),i<v.cbyMin?v.cbxMin=i:i>v.cbyMax&&(v.cbyMax=i)):b[o]=v={cbxMin:a,cbyMin:i,cbxMax:a,cbyMax:i},n.precinct=v}}t.codeblockParameters={codeblockWidth:s,codeblockHeight:c,numcodeblockwide:f-u+1,numcodeblockhigh:g-d+1},t.codeblocks=p,t.precincts=b}function h(e,t,r){for(var a=[],i=e.subbands,n=0,o=i.length;n<o;n++)for(var s=i[n].codeblocks,c=0,l=s.length;c<l;c++){var h=s[c];h.precinctNumber===t&&a.push(h)}return{layerNumber:r,codeblocks:a}}function u(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=0,c=0;c<o;c++)s=Math.max(s,a.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,u=0,d=0,f=0;this.nextPacket=function(){for(;l<i;l++){for(;u<=s;u++){for(;d<o;d++){var e=a.components[d];if(!(u>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[u],r=t.precinctParameters.numprecincts;f<r;){var c=h(t,f,l);return f++,c}f=0}}d=0}u=0}throw new n(\"Out of packets\")}}function d(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=0,c=0;c<o;c++)s=Math.max(s,a.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,u=0,d=0,f=0;this.nextPacket=function(){for(;l<=s;l++){for(;u<i;u++){for(;d<o;d++){var e=a.components[d];if(!(l>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[l],r=t.precinctParameters.numprecincts;f<r;){var c=h(t,f,u);return f++,c}f=0}}d=0}u=0}throw new n(\"Out of packets\")}}function f(e){var t,r,a,i,o=e.SIZ,s=e.currentTile.index,c=e.tiles[s],l=c.codingStyleDefaultParameters.layersCount,u=o.Csiz,d=0;for(a=0;a<u;a++){var f=c.components[a];d=Math.max(d,f.codingStyleParameters.decompositionLevelsCount)}var g=new Int32Array(d+1);for(r=0;r<=d;++r){var m=0;for(a=0;a<u;++a){var p=c.components[a].resolutions;r<p.length&&(m=Math.max(m,p[r].precinctParameters.numprecincts))}g[r]=m}t=0,r=0,a=0,i=0,this.nextPacket=function(){for(;r<=d;r++){for(;i<g[r];i++){for(;a<u;a++){var e=c.components[a];if(!(r>e.codingStyleParameters.decompositionLevelsCount)){var o=e.resolutions[r],s=o.precinctParameters.numprecincts;if(!(i>=s)){for(;t<l;){var f=h(o,i,t);return t++,f}t=0}}}a=0}i=0}throw new n(\"Out of packets\")}}function g(e){var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=b(a),c=s,l=0,u=0,d=0,f=0,g=0;this.nextPacket=function(){for(;g<c.maxNumHigh;g++){for(;f<c.maxNumWide;f++){for(;d<o;d++){for(var e=a.components[d],t=e.codingStyleParameters.decompositionLevelsCount;u<=t;u++){var r=e.resolutions[u],m=s.components[d].resolutions[u],b=p(f,g,m,c,r);if(null!==b){for(;l<i;){var v=h(r,b,l);return l++,v}l=0}}u=0}d=0}f=0}throw new n(\"Out of packets\")}}function m(e){var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=b(a),c=0,l=0,u=0,d=0,f=0;this.nextPacket=function(){for(;u<o;++u){for(var e=a.components[u],t=s.components[u],r=e.codingStyleParameters.decompositionLevelsCount;f<t.maxNumHigh;f++){for(;d<t.maxNumWide;d++){for(;l<=r;l++){var g=e.resolutions[l],m=t.resolutions[l],b=p(d,f,m,t,g);if(null!==b){for(;c<i;){var v=h(g,b,c);return c++,v}c=0}}l=0}d=0}f=0}throw new n(\"Out of packets\")}}function p(e,t,r,a,i){var n=e*a.minWidth,o=t*a.minHeight;if(n%r.width!=0||o%r.height!=0)return null;var s=o/r.width*i.precinctParameters.numprecinctswide;return n/r.height+s}function b(e){for(var t=e.components.length,r=Number.MAX_VALUE,a=Number.MAX_VALUE,i=0,n=0,o=new Array(t),s=0;s<t;s++){for(var c=e.components[s],l=c.codingStyleParameters.decompositionLevelsCount,h=new Array(l+1),u=Number.MAX_VALUE,d=Number.MAX_VALUE,f=0,g=0,m=1,p=l;p>=0;--p){var b=c.resolutions[p],v=m*b.precinctParameters.precinctWidth,y=m*b.precinctParameters.precinctHeight;u=Math.min(u,v),d=Math.min(d,y),f=Math.max(f,b.precinctParameters.numprecinctswide),g=Math.max(g,b.precinctParameters.numprecinctshigh),h[p]={width:v,height:y},m<<=1}r=Math.min(r,u),a=Math.min(a,d),i=Math.max(i,f),n=Math.max(n,g),o[s]={resolutions:h,minWidth:u,minHeight:d,maxNumWide:f,maxNumHigh:g}}return{components:o,minWidth:r,minHeight:a,maxNumWide:i,maxNumHigh:n}}function v(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=t.Csiz,o=0;o<i;o++){for(var h=a.components[o],p=h.codingStyleParameters.decompositionLevelsCount,b=[],v=[],y=0;y<=p;y++){var w,k=s(0,h,y),S={},x=1<<p-y;if(S.trx0=Math.ceil(h.tcx0/x),S.try0=Math.ceil(h.tcy0/x),S.trx1=Math.ceil(h.tcx1/x),S.try1=Math.ceil(h.tcy1/x),S.resLevel=y,c(0,S,k),b.push(S),0===y)(w={}).type=\"LL\",w.tbx0=Math.ceil(h.tcx0/x),w.tby0=Math.ceil(h.tcy0/x),w.tbx1=Math.ceil(h.tcx1/x),w.tby1=Math.ceil(h.tcy1/x),w.resolution=S,l(0,w,k),v.push(w),S.subbands=[w];else{var C=1<<p-y+1,A=[];(w={}).type=\"HL\",w.tbx0=Math.ceil(h.tcx0/C-.5),w.tby0=Math.ceil(h.tcy0/C),w.tbx1=Math.ceil(h.tcx1/C-.5),w.tby1=Math.ceil(h.tcy1/C),w.resolution=S,l(0,w,k),v.push(w),A.push(w),(w={}).type=\"LH\",w.tbx0=Math.ceil(h.tcx0/C),w.tby0=Math.ceil(h.tcy0/C-.5),w.tbx1=Math.ceil(h.tcx1/C),w.tby1=Math.ceil(h.tcy1/C-.5),w.resolution=S,l(0,w,k),v.push(w),A.push(w),(w={}).type=\"HH\",w.tbx0=Math.ceil(h.tcx0/C-.5),w.tby0=Math.ceil(h.tcy0/C-.5),w.tbx1=Math.ceil(h.tcx1/C-.5),w.tby1=Math.ceil(h.tcy1/C-.5),w.resolution=S,l(0,w,k),v.push(w),A.push(w),S.subbands=A}}h.resolutions=b,h.subbands=v}var I=a.codingStyleDefaultParameters.progressionOrder;switch(I){case 0:a.packetsIterator=new u(e);break;case 1:a.packetsIterator=new d(e);break;case 2:a.packetsIterator=new f(e);break;case 3:a.packetsIterator=new g(e);break;case 4:a.packetsIterator=new m(e);break;default:throw new n(\"Unsupported progression order \"+I)}}function y(e,t,r,i){var n,o=0,s=0,c=!1;function l(e){for(;s<e;){var a=t[r+o];o++,c?(n=n<<7|a,s+=7,c=!1):(n=n<<8|a,s+=8),255===a&&(c=!0)}return n>>>(s-=e)&(1<<e)-1}function h(e){return 255===t[r+o-1]&&t[r+o]===e?(u(1),!0):255===t[r+o]&&t[r+o+1]===e&&(u(2),!0)}function u(e){o+=e}function d(){s=0,c&&(o++,c=!1)}function f(){if(0===l(1))return 1;if(0===l(1))return 2;var e=l(2);return e<3?e+3:(e=l(5))<31?e+6:(e=l(7))+37}for(var g=e.currentTile.index,m=e.tiles[g],p=e.COD.sopMarkerUsed,b=e.COD.ephMarkerUsed,v=m.packetsIterator;o<i;){d(),p&&h(145)&&u(4);var y=v.nextPacket();if(l(1)){for(var w,k=y.layerNumber,S=[],A=0,I=y.codeblocks.length;A<I;A++){var F=(w=y.codeblocks[A]).precinct,O=w.cbx-F.cbxMin,B=w.cby-F.cbyMin,P=!1,T=!1;if(void 0!==w.included)P=!!l(1);else{var E,M;if(void 0!==(F=w.precinct).inclusionTree)E=F.inclusionTree;else{var D=F.cbxMax-F.cbxMin+1,R=F.cbyMax-F.cbyMin+1;E=new C(D,R,k),M=new x(D,R),F.inclusionTree=E,F.zeroBitPlanesTree=M}if(E.reset(O,B,k))for(;;){if(!l(1)){E.incrementValue(k);break}if(!E.nextLevel()){w.included=!0,P=T=!0;break}}}if(P){if(T){for((M=F.zeroBitPlanesTree).reset(O,B);;)if(l(1)){if(!M.nextLevel())break}else M.incrementValue();w.zeroBitPlanes=M.value}for(var L=f();l(1);)w.Lblock++;var N=(0,a.log2)(L),j=l((L<1<<N?N-1:N)+w.Lblock);S.push({codeblock:w,codingpasses:L,dataLength:j})}}for(d(),b&&h(146);S.length>0;){var U=S.shift();void 0===(w=U.codeblock).data&&(w.data=[]),w.data.push({data:t,start:r+o,end:r+o+U.dataLength,codingpasses:U.codingpasses}),o+=U.dataLength}}}return o}function w(e,t,r,a,n,o,s,c){for(var l=a.tbx0,h=a.tby0,u=a.tbx1-a.tbx0,d=a.codeblocks,f=\"H\"===a.type.charAt(0)?1:0,g=\"H\"===a.type.charAt(1)?t:0,m=0,p=d.length;m<p;++m){var b=d[m],v=b.tbx1_-b.tbx0_,y=b.tby1_-b.tby0_;if(0!==v&&0!==y&&void 0!==b.data){var w,k;w=new A(v,y,b.subbandType,b.zeroBitPlanes,o),k=2;var S,x,C,I=b.data,F=0,O=0;for(S=0,x=I.length;S<x;S++)F+=(C=I[S]).end-C.start,O+=C.codingpasses;var B=new Uint8Array(F),P=0;for(S=0,x=I.length;S<x;S++){var T=(C=I[S]).data.subarray(C.start,C.end);B.set(T,P),P+=T.length}var E=new i.ArithmeticDecoder(B,0,F);for(w.setDecoder(E),S=0;S<O;S++){switch(k){case 0:w.runSignificancePropagationPass();break;case 1:w.runMagnitudeRefinementPass();break;case 2:w.runCleanupPass(),c&&w.checkSegmentationSymbol()}k=(k+1)%3}var M,D,R,L=b.tbx0_-l+(b.tby0_-h)*u,N=w.coefficentsSign,j=w.coefficentsMagnitude,U=w.bitsDecoded,_=s?0:.5;P=0;var q=\"LL\"!==a.type;for(S=0;S<y;S++){var z=2*(L/u|0)*(t-u)+f+g;for(M=0;M<v;M++){if(0!==(D=j[P])){D=(D+_)*n,0!==N[P]&&(D=-D),R=U[P];var H=q?z+(L<<1):L;e[H]=s&&R>=o?D:D*(1<<o-R)}L++,P++}L+=u-v}}}}function k(t,r,a){for(var i=r.components[a],n=i.codingStyleParameters,o=i.quantizationParameters,s=n.decompositionLevelsCount,c=o.SPqcds,l=o.scalarExpounded,h=o.guardBits,u=n.segmentationSymbolUsed,d=t.components[a].precision,f=n.reversibleTransformation,g=f?new O:new F,m=[],p=0,b=0;b<=s;b++){for(var v=i.resolutions[b],y=v.trx1-v.trx0,k=v.try1-v.try0,S=new Float32Array(y*k),x=0,C=v.subbands.length;x<C;x++){var A,I;l?(A=c[p].mu,I=c[p].epsilon,p++):(A=c[0].mu,I=c[0].epsilon+(b>0?1-b:0));var B=v.subbands[x],P=e[B.type];w(S,y,0,B,f?1:Math.pow(2,d+P-I)*(1+A/2048),h+I-1,f,u)}m.push({width:y,height:k,items:S})}var T=g.calculate(m,i.tcx0,i.tcy0);return{left:i.tcx0,top:i.tcy0,width:T.width,height:T.height,items:T.items}}function S(e,t){for(var r=e.SIZ.Csiz,a=e.tiles[t],i=0;i<r;i++){var n=a.components[i],o=void 0!==e.currentTile.QCC[i]?e.currentTile.QCC[i]:e.currentTile.QCD;n.quantizationParameters=o;var s=void 0!==e.currentTile.COC[i]?e.currentTile.COC[i]:e.currentTile.COD;n.codingStyleParameters=s}a.codingStyleDefaultParameters=e.currentTile.COD}t.prototype={parse:function(e){if(65359!==(0,a.readUint16)(e,0))for(var t=0,r=e.length;t<r;){var i=8,o=(0,a.readUint32)(e,t),s=(0,a.readUint32)(e,t+4);if(t+=i,1===o&&(o=4294967296*(0,a.readUint32)(e,t)+(0,a.readUint32)(e,t+4),t+=8,i+=8),0===o&&(o=r-t+i),o<i)throw new n(\"Invalid box field size\");var c=o-i,l=!0;switch(s){case 1785737832:l=!1;break;case 1668246642:var h=e[t];if(1===h){var u=(0,a.readUint32)(e,t+3);switch(u){case 16:case 17:case 18:break;default:(0,a.warn)(\"Unknown colorspace \"+u)}}else 2===h&&(0,a.info)(\"ICC profile not supported\");break;case 1785737827:this.parseCodestream(e,t,t+c);break;case 1783636e3:218793738!==(0,a.readUint32)(e,t)&&(0,a.warn)(\"Invalid JP2 signature\");break;case 1783634458:case 1718909296:case 1920099697:case 1919251232:case 1768449138:break;default:var d=String.fromCharCode(s>>24&255,s>>16&255,s>>8&255,255&s);(0,a.warn)(\"Unsupported header type \"+s+\" (\"+d+\")\")}l&&(t+=c)}else this.parseCodestream(e,0,e.length)},parseImageProperties:function(e){for(var t=e.getByte();t>=0;){if(65361===(t<<8|(t=e.getByte()))){e.skip(4);var r=e.getInt32()>>>0,a=e.getInt32()>>>0,i=e.getInt32()>>>0,o=e.getInt32()>>>0;e.skip(16);var s=e.getUint16();return this.width=r-i,this.height=a-o,this.componentsCount=s,void(this.bitsPerComponent=8)}}throw new n(\"No size marker found in JPX stream\")},parseCodestream:function(e,t,i){var s={},c=!1;try{for(var l=t;l+1<i;){var h=(0,a.readUint16)(e,l);l+=2;var u,d,f,g,m,p,b=0;switch(h){case 65359:s.mainHeader=!0;break;case 65497:break;case 65361:b=(0,a.readUint16)(e,l);var w={};w.Xsiz=(0,a.readUint32)(e,l+4),w.Ysiz=(0,a.readUint32)(e,l+8),w.XOsiz=(0,a.readUint32)(e,l+12),w.YOsiz=(0,a.readUint32)(e,l+16),w.XTsiz=(0,a.readUint32)(e,l+20),w.YTsiz=(0,a.readUint32)(e,l+24),w.XTOsiz=(0,a.readUint32)(e,l+28),w.YTOsiz=(0,a.readUint32)(e,l+32);var x=(0,a.readUint16)(e,l+36);w.Csiz=x;var C=[];u=l+38;for(var A=0;A<x;A++){var I={precision:1+(127&e[u]),isSigned:!!(128&e[u]),XRsiz:e[u+1],YRsiz:e[u+2]};u+=3,r(I,w),C.push(I)}s.SIZ=w,s.components=C,o(s,C),s.QCC=[],s.COC=[];break;case 65372:b=(0,a.readUint16)(e,l);var F={};switch(u=l+2,31&(d=e[u++])){case 0:g=8,m=!0;break;case 1:g=16,m=!1;break;case 2:g=16,m=!0;break;default:throw new Error(\"Invalid SQcd value \"+d)}for(F.noQuantization=8===g,F.scalarExpounded=m,F.guardBits=d>>5,f=[];u<b+l;){var O={};8===g?(O.epsilon=e[u++]>>3,O.mu=0):(O.epsilon=e[u]>>3,O.mu=(7&e[u])<<8|e[u+1],u+=2),f.push(O)}F.SPqcds=f,s.mainHeader?s.QCD=F:(s.currentTile.QCD=F,s.currentTile.QCC=[]);break;case 65373:b=(0,a.readUint16)(e,l);var B,P={};switch(u=l+2,s.SIZ.Csiz<257?B=e[u++]:(B=(0,a.readUint16)(e,u),u+=2),31&(d=e[u++])){case 0:g=8,m=!0;break;case 1:g=16,m=!1;break;case 2:g=16,m=!0;break;default:throw new Error(\"Invalid SQcd value \"+d)}for(P.noQuantization=8===g,P.scalarExpounded=m,P.guardBits=d>>5,f=[];u<b+l;)O={},8===g?(O.epsilon=e[u++]>>3,O.mu=0):(O.epsilon=e[u]>>3,O.mu=(7&e[u])<<8|e[u+1],u+=2),f.push(O);P.SPqcds=f,s.mainHeader?s.QCC[B]=P:s.currentTile.QCC[B]=P;break;case 65362:b=(0,a.readUint16)(e,l);var T={};u=l+2;var E=e[u++];T.entropyCoderWithCustomPrecincts=!!(1&E),T.sopMarkerUsed=!!(2&E),T.ephMarkerUsed=!!(4&E),T.progressionOrder=e[u++],T.layersCount=(0,a.readUint16)(e,u),u+=2,T.multipleComponentTransform=e[u++],T.decompositionLevelsCount=e[u++],T.xcb=2+(15&e[u++]),T.ycb=2+(15&e[u++]);var M=e[u++];if(T.selectiveArithmeticCodingBypass=!!(1&M),T.resetContextProbabilities=!!(2&M),T.terminationOnEachCodingPass=!!(4&M),T.verticalyStripe=!!(8&M),T.predictableTermination=!!(16&M),T.segmentationSymbolUsed=!!(32&M),T.reversibleTransformation=e[u++],T.entropyCoderWithCustomPrecincts){for(var D=[];u<b+l;){var R=e[u++];D.push({PPx:15&R,PPy:R>>4})}T.precinctsSizes=D}var L=[];if(T.selectiveArithmeticCodingBypass&&L.push(\"selectiveArithmeticCodingBypass\"),T.resetContextProbabilities&&L.push(\"resetContextProbabilities\"),T.terminationOnEachCodingPass&&L.push(\"terminationOnEachCodingPass\"),T.verticalyStripe&&L.push(\"verticalyStripe\"),T.predictableTermination&&L.push(\"predictableTermination\"),L.length>0)throw c=!0,new Error(\"Unsupported COD options (\"+L.join(\", \")+\")\");s.mainHeader?s.COD=T:(s.currentTile.COD=T,s.currentTile.COC=[]);break;case 65424:b=(0,a.readUint16)(e,l),(p={}).index=(0,a.readUint16)(e,l+2),p.length=(0,a.readUint32)(e,l+4),p.dataEnd=p.length+l-2,p.partIndex=e[l+8],p.partsCount=e[l+9],s.mainHeader=!1,0===p.partIndex&&(p.COD=s.COD,p.COC=s.COC.slice(0),p.QCD=s.QCD,p.QCC=s.QCC.slice(0)),s.currentTile=p;break;case 65427:0===(p=s.currentTile).partIndex&&(S(s,p.index),v(s)),y(s,e,l,b=p.dataEnd-l);break;case 65365:case 65367:case 65368:case 65380:b=(0,a.readUint16)(e,l);break;case 65363:throw new Error(\"Codestream code 0xFF53 (COC) is not implemented\");default:throw new Error(\"Unknown codestream code: \"+h.toString(16))}l+=b}}catch(e){if(c||this.failOnCorruptedImage)throw new n(e.message);(0,a.warn)(\"JPX: Trying to recover from: \"+e.message)}this.tiles=function(e){for(var t=e.SIZ,r=e.components,a=t.Csiz,i=[],n=0,o=e.tiles.length;n<o;n++){var s,c=e.tiles[n],l=[];for(s=0;s<a;s++)l[s]=k(e,c,s);var h,u,d,f,g,m,p,b=l[0],v=new Uint8ClampedArray(b.items.length*a),y={left:b.left,top:b.top,width:b.width,height:b.height,items:v},w=0;if(c.codingStyleDefaultParameters.multipleComponentTransform){var S=4===a,x=l[0].items,C=l[1].items,A=l[2].items,I=S?l[3].items:null;h=r[0].precision-8,u=.5+(128<<h);var F=c.components[0],O=a-3;if(f=x.length,F.codingStyleParameters.reversibleTransformation)for(d=0;d<f;d++,w+=O){g=x[d]+u,m=C[d],p=A[d];var B=g-(p+m>>2);v[w++]=B+p>>h,v[w++]=B>>h,v[w++]=B+m>>h}else for(d=0;d<f;d++,w+=O)g=x[d]+u,m=C[d],p=A[d],v[w++]=g+1.402*p>>h,v[w++]=g-.34413*m-.71414*p>>h,v[w++]=g+1.772*m>>h;if(S)for(d=0,w=3;d<f;d++,w+=4)v[w]=I[d]+u>>h}else for(s=0;s<a;s++){var P=l[s].items;for(h=r[s].precision-8,u=.5+(128<<h),w=s,d=0,f=P.length;d<f;d++)v[w]=P[d]+u>>h,w+=a}i.push(y)}return i}(s),this.width=s.SIZ.Xsiz-s.SIZ.XOsiz,this.height=s.SIZ.Ysiz-s.SIZ.YOsiz,this.componentsCount=s.SIZ.Csiz}};var x=function(){function e(e,t){var r=(0,a.log2)(Math.max(e,t))+1;this.levels=[];for(var i=0;i<r;i++){var n={width:e,height:t,items:[]};this.levels.push(n),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t){for(var r,a=0,i=0;a<this.levels.length;){var n=e+t*(r=this.levels[a]).width;if(void 0!==r.items[n]){i=r.items[n];break}r.index=n,e>>=1,t>>=1,a++}a--,(r=this.levels[a]).items[r.index]=i,this.currentLevel=a,delete this.value},incrementValue:function(){var e=this.levels[this.currentLevel];e.items[e.index]++},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];return--e<0?(this.value=r,!1):(this.currentLevel=e,(t=this.levels[e]).items[t.index]=r,!0)}},e}(),C=function(){function e(e,t,r){var i=(0,a.log2)(Math.max(e,t))+1;this.levels=[];for(var n=0;n<i;n++){for(var o=new Uint8Array(e*t),s=0,c=o.length;s<c;s++)o[s]=r;var l={width:e,height:t,items:o};this.levels.push(l),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t,r){for(var a=0;a<this.levels.length;){var i=this.levels[a],n=e+t*i.width;i.index=n;var o=i.items[n];if(255===o)break;if(o>r)return this.currentLevel=a,this.propagateValues(),!1;e>>=1,t>>=1,a++}return this.currentLevel=a-1,!0},incrementValue:function(e){var t=this.levels[this.currentLevel];t.items[t.index]=e+1,this.propagateValues()},propagateValues:function(){for(var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];--e>=0;)(t=this.levels[e]).items[t.index]=r},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];return t.items[t.index]=255,!(--e<0)&&(this.currentLevel=e,(t=this.levels[e]).items[t.index]=r,!0)}},e}(),A=function(){var e=new Uint8Array([0,5,8,0,3,7,8,0,4,7,8,0,0,0,0,0,1,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8]),t=new Uint8Array([0,3,4,0,5,7,7,0,8,8,8,0,0,0,0,0,1,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8]),r=new Uint8Array([0,1,2,0,1,2,2,0,2,2,2,0,0,0,0,0,3,4,5,0,4,5,5,0,5,5,5,0,0,0,0,0,6,7,7,0,7,7,7,0,7,7,7,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8]);function a(a,i,n,o,s){this.width=a,this.height=i,this.contextLabelTable=\"HH\"===n?r:\"HL\"===n?t:e;var c=a*i;this.neighborsSignificance=new Uint8Array(c),this.coefficentsSign=new Uint8Array(c),this.coefficentsMagnitude=s>14?new Uint32Array(c):s>6?new Uint16Array(c):new Uint8Array(c),this.processingFlags=new Uint8Array(c);var l=new Uint8Array(c);if(0!==o)for(var h=0;h<c;h++)l[h]=o;this.bitsDecoded=l,this.reset()}return a.prototype={setDecoder:function(e){this.decoder=e},reset:function(){this.contexts=new Int8Array(19),this.contexts[0]=8,this.contexts[17]=92,this.contexts[18]=6},setNeighborsSignificance:function(e,t,r){var a,i=this.neighborsSignificance,n=this.width,o=this.height,s=t>0,c=t+1<n;e>0&&(a=r-n,s&&(i[a-1]+=16),c&&(i[a+1]+=16),i[a]+=4),e+1<o&&(a=r+n,s&&(i[a-1]+=16),c&&(i[a+1]+=16),i[a]+=4),s&&(i[r-1]+=1),c&&(i[r+1]+=1),i[r]|=128},runSignificancePropagationPass:function(){for(var e=this.decoder,t=this.width,r=this.height,a=this.coefficentsMagnitude,i=this.coefficentsSign,n=this.neighborsSignificance,o=this.processingFlags,s=this.contexts,c=this.contextLabelTable,l=this.bitsDecoded,h=0;h<r;h+=4)for(var u=0;u<t;u++)for(var d=h*t+u,f=0;f<4;f++,d+=t){var g=h+f;if(g>=r)break;if(o[d]&=-2,!a[d]&&n[d]){var m=c[n[d]];if(e.readBit(s,m)){var p=this.decodeSignBit(g,u,d);i[d]=p,a[d]=1,this.setNeighborsSignificance(g,u,d),o[d]|=2}l[d]++,o[d]|=1}}},decodeSignBit:function(e,t,r){var a,i,n,o,s,c,l=this.width,h=this.height,u=this.coefficentsMagnitude,d=this.coefficentsSign;o=t>0&&0!==u[r-1],t+1<l&&0!==u[r+1]?(n=d[r+1],a=o?1-n-(i=d[r-1]):1-n-n):a=o?1-(i=d[r-1])-i:0;var f=3*a;return o=e>0&&0!==u[r-l],e+1<h&&0!==u[r+l]?(n=d[r+l],a=o?1-n-(i=d[r-l])+f:1-n-n+f):a=o?1-(i=d[r-l])-i+f:f,a>=0?(s=9+a,c=this.decoder.readBit(this.contexts,s)):(s=9-a,c=1^this.decoder.readBit(this.contexts,s)),c},runMagnitudeRefinementPass:function(){for(var e,t=this.decoder,r=this.width,a=this.height,i=this.coefficentsMagnitude,n=this.neighborsSignificance,o=this.contexts,s=this.bitsDecoded,c=this.processingFlags,l=r*a,h=4*r,u=0;u<l;u=e){e=Math.min(l,u+h);for(var d=0;d<r;d++)for(var f=u+d;f<e;f+=r)if(i[f]&&0==(1&c[f])){var g=16;if(0!=(2&c[f]))c[f]^=2,g=0===(127&n[f])?15:14;var m=t.readBit(o,g);i[f]=i[f]<<1|m,s[f]++,c[f]|=1}}},runCleanupPass:function(){for(var e,t=this.decoder,r=this.width,a=this.height,i=this.neighborsSignificance,n=this.coefficentsMagnitude,o=this.coefficentsSign,s=this.contexts,c=this.contextLabelTable,l=this.bitsDecoded,h=this.processingFlags,u=r,d=2*r,f=3*r,g=0;g<a;g=e){e=Math.min(g+4,a);for(var m=g*r,p=g+3<a,b=0;b<r;b++){var v,y=m+b,w=0,k=y,S=g;if(p&&0===h[y]&&0===h[y+u]&&0===h[y+d]&&0===h[y+f]&&0===i[y]&&0===i[y+u]&&0===i[y+d]&&0===i[y+f]){if(!t.readBit(s,18)){l[y]++,l[y+u]++,l[y+d]++,l[y+f]++;continue}0!==(w=t.readBit(s,17)<<1|t.readBit(s,17))&&(S=g+w,k+=w*r),v=this.decodeSignBit(S,b,k),o[k]=v,n[k]=1,this.setNeighborsSignificance(S,b,k),h[k]|=2,k=y;for(var x=g;x<=S;x++,k+=r)l[k]++;w++}for(S=g+w;S<e;S++,k+=r)if(!n[k]&&0==(1&h[k])){var C=c[i[k]];1===t.readBit(s,C)&&(v=this.decodeSignBit(S,b,k),o[k]=v,n[k]=1,this.setNeighborsSignificance(S,b,k),h[k]|=2),l[k]++}}}},checkSegmentationSymbol:function(){var e=this.decoder,t=this.contexts;if(10!==(e.readBit(t,17)<<3|e.readBit(t,17)<<2|e.readBit(t,17)<<1|e.readBit(t,17)))throw new n(\"Invalid segmentation symbol\")}},a}(),I=function(){function e(){}return e.prototype.calculate=function(e,t,r){for(var a=e[0],i=1,n=e.length;i<n;i++)a=this.iterate(a,e[i],t,r);return a},e.prototype.extend=function(e,t,r){var a=t-1,i=t+1,n=t+r-2,o=t+r;e[a--]=e[i++],e[o++]=e[n--],e[a--]=e[i++],e[o++]=e[n--],e[a--]=e[i++],e[o++]=e[n--],e[a]=e[i],e[o]=e[n]},e.prototype.iterate=function(e,t,r,a){var i,n,o,s,c,l,h=e.width,u=e.height,d=e.items,f=t.width,g=t.height,m=t.items;for(o=0,i=0;i<u;i++)for(s=2*i*f,n=0;n<h;n++,o++,s+=2)m[s]=d[o];d=e.items=null;var p=new Float32Array(f+8);if(1===f){if(0!=(1&r))for(l=0,o=0;l<g;l++,o+=f)m[o]*=.5}else for(l=0,o=0;l<g;l++,o+=f)p.set(m.subarray(o,o+f),4),this.extend(p,4,f),this.filter(p,4,f),m.set(p.subarray(4,4+f),o);var b=16,v=[];for(i=0;i<b;i++)v.push(new Float32Array(g+8));var y,w=0;if(e=4+g,1===g){if(0!=(1&a))for(c=0;c<f;c++)m[c]*=.5}else for(c=0;c<f;c++){if(0===w){for(b=Math.min(f-c,b),o=c,s=4;s<e;o+=f,s++)for(y=0;y<b;y++)v[y][s]=m[o+y];w=b}var k=v[--w];if(this.extend(k,4,g),this.filter(k,4,g),0===w)for(o=c-b+1,s=4;s<e;o+=f,s++)for(y=0;y<b;y++)m[o+y]=v[y][s]}return{width:f,height:g,items:m}},e}(),F=function(){function e(){I.call(this)}return e.prototype=Object.create(I.prototype),e.prototype.filter=function(e,t,r){var a,i,n,o,s=r>>1,c=-1.586134342059924,l=-.052980118572961,h=.882911075530934,u=.443506852043971,d=1.230174104914001;for(a=(t|=0)-3,i=s+4;i--;a+=2)e[a]*=.8128930661159609;for(n=u*e[(a=t-2)-1],i=s+3;i--&&(o=u*e[a+1],e[a]=d*e[a]-n-o,i--);a+=2)n=u*e[(a+=2)+1],e[a]=d*e[a]-n-o;for(n=h*e[(a=t-1)-1],i=s+2;i--&&(o=h*e[a+1],e[a]-=n+o,i--);a+=2)n=h*e[(a+=2)+1],e[a]-=n+o;for(n=l*e[(a=t)-1],i=s+1;i--&&(o=l*e[a+1],e[a]-=n+o,i--);a+=2)n=l*e[(a+=2)+1],e[a]-=n+o;if(0!==s)for(n=c*e[(a=t+1)-1],i=s;i--&&(o=c*e[a+1],e[a]-=n+o,i--);a+=2)n=c*e[(a+=2)+1],e[a]-=n+o},e}(),O=function(){function e(){I.call(this)}return e.prototype=Object.create(I.prototype),e.prototype.filter=function(e,t,r){var a,i,n=r>>1;for(a=t|=0,i=n+1;i--;a+=2)e[a]-=e[a-1]+e[a+1]+2>>2;for(a=t+1,i=n;i--;a+=2)e[a]+=e[a-1]+e[a+1]>>1},e}();return t}();t.JpxImage=o},\"./node_modules/pdfjs-dist/lib/core/jpx_stream.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/jpx_stream.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxStream=void 0;var a=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),i=r(/*! ./jpx */\"./node_modules/pdfjs-dist/lib/core/jpx.js\"),n=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),o=function(){function e(e,t,r,i){this.stream=e,this.maybeLength=t,this.dict=r,this.params=i,a.DecodeStream.call(this,t)}return e.prototype=Object.create(a.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,n.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new i.JpxImage;e.parse(this.bytes);var t=e.width,r=e.height,a=e.componentsCount,n=e.tiles.length;if(1===n)this.buffer=e.tiles[0].items;else{for(var o=new Uint8ClampedArray(t*r*a),s=0;s<n;s++)for(var c=e.tiles[s],l=c.width,h=c.height,u=c.left,d=c.top,f=c.items,g=0,m=(t*d+u)*a,p=t*a,b=l*a,v=0;v<h;v++){var y=f.subarray(g,g+b);o.set(y,m),g+=b,m+=p}this.buffer=o}this.bufferLength=this.buffer.length,this.eof=!0}},e}();t.JpxStream=o},\"./node_modules/pdfjs-dist/lib/core/metrics.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/metrics.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getMetrics=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=(0,a.getLookupTableFactory)(function(e){e.Courier=600,e[\"Courier-Bold\"]=600,e[\"Courier-BoldOblique\"]=600,e[\"Courier-Oblique\"]=600,e.Helvetica=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-Bold\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-BoldOblique\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-Oblique\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556}),e.Symbol=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.universal=713,e.numbersign=500,e.existential=549,e.percent=833,e.ampersand=778,e.suchthat=439,e.parenleft=333,e.parenright=333,e.asteriskmath=500,e.plus=549,e.comma=250,e.minus=549,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=549,e.equal=549,e.greater=549,e.question=444,e.congruent=549,e.Alpha=722,e.Beta=667,e.Chi=722,e.Delta=612,e.Epsilon=611,e.Phi=763,e.Gamma=603,e.Eta=722,e.Iota=333,e.theta1=631,e.Kappa=722,e.Lambda=686,e.Mu=889,e.Nu=722,e.Omicron=722,e.Pi=768,e.Theta=741,e.Rho=556,e.Sigma=592,e.Tau=611,e.Upsilon=690,e.sigma1=439,e.Omega=768,e.Xi=645,e.Psi=795,e.Zeta=611,e.bracketleft=333,e.therefore=863,e.bracketright=333,e.perpendicular=658,e.underscore=500,e.radicalex=500,e.alpha=631,e.beta=549,e.chi=549,e.delta=494,e.epsilon=439,e.phi=521,e.gamma=411,e.eta=603,e.iota=329,e.phi1=603,e.kappa=549,e.lambda=549,e.mu=576,e.nu=521,e.omicron=549,e.pi=549,e.theta=521,e.rho=549,e.sigma=603,e.tau=439,e.upsilon=576,e.omega1=713,e.omega=686,e.xi=493,e.psi=686,e.zeta=494,e.braceleft=480,e.bar=200,e.braceright=480,e.similar=549,e.Euro=750,e.Upsilon1=620,e.minute=247,e.lessequal=549,e.fraction=167,e.infinity=713,e.florin=500,e.club=753,e.diamond=753,e.heart=753,e.spade=753,e.arrowboth=1042,e.arrowleft=987,e.arrowup=603,e.arrowright=987,e.arrowdown=603,e.degree=400,e.plusminus=549,e.second=411,e.greaterequal=549,e.multiply=549,e.proportional=713,e.partialdiff=494,e.bullet=460,e.divide=549,e.notequal=549,e.equivalence=549,e.approxequal=549,e.ellipsis=1e3,e.arrowvertex=603,e.arrowhorizex=1e3,e.carriagereturn=658,e.aleph=823,e.Ifraktur=686,e.Rfraktur=795,e.weierstrass=987,e.circlemultiply=768,e.circleplus=768,e.emptyset=823,e.intersection=768,e.union=768,e.propersuperset=713,e.reflexsuperset=713,e.notsubset=713,e.propersubset=713,e.reflexsubset=713,e.element=713,e.notelement=713,e.angle=768,e.gradient=713,e.registerserif=790,e.copyrightserif=790,e.trademarkserif=890,e.product=823,e.radical=549,e.dotmath=250,e.logicalnot=713,e.logicaland=603,e.logicalor=603,e.arrowdblboth=1042,e.arrowdblleft=987,e.arrowdblup=603,e.arrowdblright=987,e.arrowdbldown=603,e.lozenge=494,e.angleleft=329,e.registersans=790,e.copyrightsans=790,e.trademarksans=786,e.summation=713,e.parenlefttp=384,e.parenleftex=384,e.parenleftbt=384,e.bracketlefttp=384,e.bracketleftex=384,e.bracketleftbt=384,e.bracelefttp=494,e.braceleftmid=494,e.braceleftbt=494,e.braceex=494,e.angleright=329,e.integral=274,e.integraltp=686,e.integralex=686,e.integralbt=686,e.parenrighttp=384,e.parenrightex=384,e.parenrightbt=384,e.bracketrighttp=384,e.bracketrightex=384,e.bracketrightbt=384,e.bracerighttp=494,e.bracerightmid=494,e.bracerightbt=494,e.apple=790}),e[\"Times-Roman\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=408,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=564,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=564,e.equal=564,e.greater=564,e.question=444,e.at=921,e.A=722,e.B=667,e.C=667,e.D=722,e.E=611,e.F=556,e.G=722,e.H=722,e.I=333,e.J=389,e.K=722,e.L=611,e.M=889,e.N=722,e.O=722,e.P=556,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=722,e.W=944,e.X=722,e.Y=722,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=469,e.underscore=500,e.quoteleft=333,e.a=444,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=500,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=500,e.o=500,e.p=500,e.q=500,e.r=333,e.s=389,e.t=278,e.u=500,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=480,e.bar=200,e.braceright=480,e.asciitilde=541,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=180,e.quotedblleft=444,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=453,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=444,e.quotedblright=444,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=444,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=889,e.ordfeminine=276,e.Lslash=611,e.Oslash=722,e.OE=889,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=444,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=722,e.divide=564,e.Yacute=722,e.Acircumflex=722,e.aacute=444,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=444,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=444,e.Ncommaaccent=722,e.lacute=278,e.agrave=444,e.Tcommaaccent=611,e.Cacute=667,e.atilde=444,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=444,e.Amacron=722,e.rcaron=333,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=556,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=588,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=722,e.Abreve=722,e.multiply=564,e.uacute=500,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=444,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=722,e.Iacute=333,e.plusminus=564,e.brokenbar=200,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=333,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=326,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=444,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=344,e.Kcommaaccent=722,e.Lacute=611,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=722,e.zdotaccent=444,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=500,e.minus=564,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=564,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-Bold\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=1e3,e.ampersand=833,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=930,e.A=722,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=778,e.I=389,e.J=500,e.K=778,e.L=667,e.M=944,e.N=722,e.O=778,e.P=611,e.Q=778,e.R=722,e.S=556,e.T=667,e.U=722,e.V=722,e.W=1e3,e.X=722,e.Y=722,e.Z=667,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=581,e.underscore=500,e.quoteleft=333,e.a=500,e.b=556,e.c=444,e.d=556,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=333,e.k=556,e.l=278,e.m=833,e.n=556,e.o=500,e.p=556,e.q=556,e.r=444,e.s=389,e.t=333,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=394,e.bar=220,e.braceright=394,e.asciitilde=520,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=540,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=300,e.Lslash=667,e.Oslash=778,e.OE=1e3,e.ordmasculine=330,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=556,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=722,e.divide=570,e.Yacute=722,e.Acircumflex=722,e.aacute=500,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=667,e.Cacute=722,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=500,e.Amacron=722,e.rcaron=444,e.ccedilla=444,e.Zdotaccent=667,e.Thorn=611,e.Omacron=778,e.Racute=722,e.Sacute=556,e.dcaron=672,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=570,e.uacute=556,e.Tcaron=667,e.partialdiff=494,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=778,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=444,e.omacron=500,e.Zacute=667,e.Zcaron=667,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=416,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=778,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=300,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=556,e.threequarters=750,e.Scedilla=556,e.lcaron=394,e.Kcommaaccent=778,e.Lacute=667,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=667,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=778,e.degree=400,e.ograve=500,e.Ccaron=722,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=444,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=722,e.Lcommaaccent=667,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=444,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=556,e.minus=570,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=333,e.logicalnot=570,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-BoldItalic\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=389,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=832,e.A=667,e.B=667,e.C=667,e.D=722,e.E=667,e.F=667,e.G=722,e.H=778,e.I=389,e.J=500,e.K=667,e.L=611,e.M=889,e.N=722,e.O=722,e.P=611,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=667,e.W=889,e.X=667,e.Y=611,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=570,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=556,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=556,e.v=444,e.w=667,e.x=500,e.y=444,e.z=389,e.braceleft=348,e.bar=220,e.braceright=348,e.asciitilde=570,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=500,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=944,e.ordfeminine=266,e.Lslash=611,e.Oslash=722,e.OE=944,e.ordmasculine=300,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=611,e.divide=570,e.Yacute=611,e.Acircumflex=667,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=611,e.Cacute=667,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=556,e.acircumflex=500,e.Amacron=667,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=611,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=608,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=722,e.Agrave=667,e.Abreve=667,e.multiply=570,e.uacute=556,e.Tcaron=611,e.partialdiff=494,e.ydieresis=444,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=722,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=366,e.eogonek=444,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=576,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=382,e.Kcommaaccent=667,e.Lacute=611,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=722,e.zdotaccent=389,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=500,e.minus=606,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=606,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-Italic\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=420,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=675,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=675,e.equal=675,e.greater=675,e.question=500,e.at=920,e.A=611,e.B=611,e.C=667,e.D=722,e.E=611,e.F=611,e.G=722,e.H=722,e.I=333,e.J=444,e.K=667,e.L=556,e.M=833,e.N=667,e.O=722,e.P=611,e.Q=722,e.R=611,e.S=500,e.T=556,e.U=722,e.V=611,e.W=833,e.X=611,e.Y=556,e.Z=556,e.bracketleft=389,e.backslash=278,e.bracketright=389,e.asciicircum=422,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=278,e.g=500,e.h=500,e.i=278,e.j=278,e.k=444,e.l=278,e.m=722,e.n=500,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=500,e.v=444,e.w=667,e.x=444,e.y=444,e.z=389,e.braceleft=400,e.bar=275,e.braceright=400,e.asciitilde=541,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=214,e.quotedblleft=556,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=523,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=556,e.quotedblright=556,e.guillemotright=500,e.ellipsis=889,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=889,e.AE=889,e.ordfeminine=276,e.Lslash=556,e.Oslash=722,e.OE=944,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=667,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=500,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=556,e.divide=675,e.Yacute=556,e.Acircumflex=611,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=500,e.Ncommaaccent=667,e.lacute=278,e.agrave=500,e.Tcommaaccent=556,e.Cacute=667,e.atilde=500,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=611,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=500,e.Amacron=611,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=556,e.Thorn=611,e.Omacron=722,e.Racute=611,e.Sacute=500,e.dcaron=544,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=611,e.Abreve=611,e.multiply=675,e.uacute=500,e.Tcaron=556,e.partialdiff=476,e.ydieresis=444,e.Nacute=667,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=667,e.Iacute=333,e.plusminus=675,e.brokenbar=275,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=389,e.omacron=500,e.Zacute=556,e.Zcaron=556,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=300,e.eogonek=444,e.Uogonek=722,e.Aacute=611,e.Adieresis=611,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=500,e.lcaron=300,e.Kcommaaccent=667,e.Lacute=556,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=500,e.Scommaaccent=500,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=667,e.otilde=500,e.Rcommaaccent=611,e.Lcommaaccent=556,e.Atilde=611,e.Aogonek=611,e.Aring=611,e.Otilde=722,e.zdotaccent=389,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=444,e.minus=675,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=675,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500}),e.ZapfDingbats=(0,a.getLookupTableFactory)(function(e){e.space=278,e.a1=974,e.a2=961,e.a202=974,e.a3=980,e.a4=719,e.a5=789,e.a119=790,e.a118=791,e.a117=690,e.a11=960,e.a12=939,e.a13=549,e.a14=855,e.a15=911,e.a16=933,e.a105=911,e.a17=945,e.a18=974,e.a19=755,e.a20=846,e.a21=762,e.a22=761,e.a23=571,e.a24=677,e.a25=763,e.a26=760,e.a27=759,e.a28=754,e.a6=494,e.a7=552,e.a8=537,e.a9=577,e.a10=692,e.a29=786,e.a30=788,e.a31=788,e.a32=790,e.a33=793,e.a34=794,e.a35=816,e.a36=823,e.a37=789,e.a38=841,e.a39=823,e.a40=833,e.a41=816,e.a42=831,e.a43=923,e.a44=744,e.a45=723,e.a46=749,e.a47=790,e.a48=792,e.a49=695,e.a50=776,e.a51=768,e.a52=792,e.a53=759,e.a54=707,e.a55=708,e.a56=682,e.a57=701,e.a58=826,e.a59=815,e.a60=789,e.a61=789,e.a62=707,e.a63=687,e.a64=696,e.a65=689,e.a66=786,e.a67=787,e.a68=713,e.a69=791,e.a70=785,e.a71=791,e.a72=873,e.a73=761,e.a74=762,e.a203=762,e.a75=759,e.a204=759,e.a76=892,e.a77=892,e.a78=788,e.a79=784,e.a81=438,e.a82=138,e.a83=277,e.a84=415,e.a97=392,e.a98=392,e.a99=668,e.a100=668,e.a89=390,e.a90=390,e.a93=317,e.a94=317,e.a91=276,e.a92=276,e.a205=509,e.a85=509,e.a206=410,e.a86=410,e.a87=234,e.a88=234,e.a95=334,e.a96=334,e.a101=732,e.a102=544,e.a103=544,e.a104=910,e.a106=667,e.a107=760,e.a108=760,e.a112=776,e.a111=595,e.a110=694,e.a109=626,e.a120=788,e.a121=788,e.a122=788,e.a123=788,e.a124=788,e.a125=788,e.a126=788,e.a127=788,e.a128=788,e.a129=788,e.a130=788,e.a131=788,e.a132=788,e.a133=788,e.a134=788,e.a135=788,e.a136=788,e.a137=788,e.a138=788,e.a139=788,e.a140=788,e.a141=788,e.a142=788,e.a143=788,e.a144=788,e.a145=788,e.a146=788,e.a147=788,e.a148=788,e.a149=788,e.a150=788,e.a151=788,e.a152=788,e.a153=788,e.a154=788,e.a155=788,e.a156=788,e.a157=788,e.a158=788,e.a159=788,e.a160=894,e.a161=838,e.a163=1016,e.a164=458,e.a196=748,e.a165=924,e.a192=748,e.a166=918,e.a167=927,e.a168=928,e.a169=928,e.a170=834,e.a171=873,e.a172=828,e.a173=924,e.a162=924,e.a174=917,e.a175=930,e.a176=931,e.a177=463,e.a178=883,e.a179=836,e.a193=836,e.a180=867,e.a199=867,e.a181=696,e.a200=696,e.a182=874,e.a201=874,e.a183=760,e.a184=946,e.a197=771,e.a185=865,e.a194=771,e.a198=888,e.a186=967,e.a195=888,e.a187=831,e.a188=873,e.a189=927,e.a190=970,e.a191=918})});t.getMetrics=i},\"./node_modules/pdfjs-dist/lib/core/murmurhash3.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/murmurhash3.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MurmurHash3_64=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=function(e){function t(e){this.h1=e?4294967295&e:3285377520,this.h2=e?4294967295&e:3285377520}return t.prototype={update:function(e){var t=void 0,r=void 0;if((0,a.isString)(e)){t=new Uint8Array(2*e.length),r=0;for(var i=0,n=e.length;i<n;i++){var o=e.charCodeAt(i);o<=255?t[r++]=o:(t[r++]=o>>>8,t[r++]=255&o)}}else{if(!(0,a.isArrayBuffer)(e))throw new Error(\"Wrong data format in MurmurHash3_64_update. Input must be a string or array.\");r=(t=e).byteLength}for(var s=r>>2,c=r-4*s,l=new Uint32Array(t.buffer,0,s),h=0,u=0,d=this.h1,f=this.h2,g=3432918353,m=461845907,p=0;p<s;p++)1&p?d=5*(d=(d^=h=(h=(h=(h=l[p])*g&4294901760|11601*h&65535)<<15|h>>>17)*m&4294901760|13715*h&65535)<<13|d>>>19)+3864292196:f=5*(f=(f^=u=(u=(u=(u=l[p])*g&4294901760|11601*u&65535)<<15|u>>>17)*m&4294901760|13715*u&65535)<<13|f>>>19)+3864292196;switch(h=0,c){case 3:h^=t[4*s+2]<<16;case 2:h^=t[4*s+1]<<8;case 1:h=(h=(h=(h^=t[4*s])*g&4294901760|11601*h&65535)<<15|h>>>17)*m&4294901760|13715*h&65535,1&s?d^=h:f^=h}return this.h1=d,this.h2=f,this},hexdigest:function(){var e=this.h1,t=this.h2;e=3981806797*(e^=t>>>1)&4294901760|36045*e&65535,e=444984403*(e^=(t=4283543511*t&4294901760|(2950163797*(t<<16|e>>>16)&4294901760)>>>16)>>>1)&4294901760|60499*e&65535;for(var r=0,a=[e^=(t=3301882366*t&4294901760|(3120437893*(t<<16|e>>>16)&4294901760)>>>16)>>>1,t],i=\"\";r<a.length;r++){for(var n=(a[r]>>>0).toString(16);n.length<8;)n=\"0\"+n;i+=n}return i}},t}();t.MurmurHash3_64=i},\"./node_modules/pdfjs-dist/lib/core/obj.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/obj.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FileSpec=t.XRef=t.ObjectLoader=t.Catalog=void 0;var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},n=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),o=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),s=r(/*! ./parser */\"./node_modules/pdfjs-dist/lib/core/parser.js\"),c=r(/*! ./chunked_stream */\"./node_modules/pdfjs-dist/lib/core/chunked_stream.js\"),l=r(/*! ./crypto */\"./node_modules/pdfjs-dist/lib/core/crypto.js\"),h=r(/*! ./colorspace */\"./node_modules/pdfjs-dist/lib/core/colorspace.js\"),u=function(){function e(e,t,r){if(this.pdfManager=e,this.xref=t,this.catDict=t.getCatalogObj(),!(0,o.isDict)(this.catDict))throw new n.FormatError(\"catalog object is not a dictionary\");this.fontCache=new o.RefSetCache,this.builtInCMapCache=Object.create(null),this.pageKidsCountCache=new o.RefSetCache,this.pageFactory=r,this.pagePromises=[]}return e.prototype={get metadata(){var e=this.catDict.getRaw(\"Metadata\");if(!(0,o.isRef)(e))return(0,n.shadow)(this,\"metadata\",null);var t,r=!!this.xref.encrypt&&this.xref.encrypt.encryptMetadata,a=this.xref.fetch(e,!r);if(a&&(0,o.isDict)(a.dict)){var i=a.dict.get(\"Type\"),s=a.dict.get(\"Subtype\");if((0,o.isName)(i,\"Metadata\")&&(0,o.isName)(s,\"XML\"))try{t=(0,n.stringToUTF8String)((0,n.bytesToString)(a.getBytes()))}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.info)(\"Skipping invalid metadata.\")}}return(0,n.shadow)(this,\"metadata\",t)},get toplevelPagesDict(){var e=this.catDict.get(\"Pages\");if(!(0,o.isDict)(e))throw new n.FormatError(\"invalid top-level pages dictionary\");return(0,n.shadow)(this,\"toplevelPagesDict\",e)},get documentOutline(){var e=null;try{e=this.readDocumentOutline()}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.warn)(\"Unable to read document outline\")}return(0,n.shadow)(this,\"documentOutline\",e)},readDocumentOutline:function(){var t=this.catDict.get(\"Outlines\");if(!(0,o.isDict)(t))return null;if(t=t.getRaw(\"First\"),!(0,o.isRef)(t))return null;var r={items:[]},a=[{obj:t,parent:r}],i=new o.RefSet;i.put(t);for(var s=this.xref,c=new Uint8Array(3);a.length>0;){var l=a.shift(),u=s.fetchIfRef(l.obj);if(null!==u){if(!u.has(\"Title\"))throw new n.FormatError(\"Invalid outline item\");var d={url:null,dest:null};e.parseDestDictionary({destDict:u,resultObj:d,docBaseUrl:this.pdfManager.docBaseUrl});var f=u.get(\"Title\"),g=u.get(\"F\")||0,m=u.getArray(\"C\"),p=c;!Array.isArray(m)||3!==m.length||0===m[0]&&0===m[1]&&0===m[2]||(p=h.ColorSpace.singletons.rgb.getRgb(m,0));var b={dest:d.dest,url:d.url,unsafeUrl:d.unsafeUrl,newWindow:d.newWindow,title:(0,n.stringToPDFString)(f),color:p,count:u.get(\"Count\"),bold:!!(2&g),italic:!!(1&g),items:[]};l.parent.items.push(b),t=u.getRaw(\"First\"),(0,o.isRef)(t)&&!i.has(t)&&(a.push({obj:t,parent:b}),i.put(t)),t=u.getRaw(\"Next\"),(0,o.isRef)(t)&&!i.has(t)&&(a.push({obj:t,parent:l.parent}),i.put(t))}}return r.items.length>0?r.items:null},get numPages(){var e=this.toplevelPagesDict.get(\"Count\");if(!Number.isInteger(e))throw new n.FormatError(\"page count in top level pages object is not an integer\");return(0,n.shadow)(this,\"numPages\",e)},get destinations(){function e(e){return(0,o.isDict)(e)?e.get(\"D\"):e}var t,r,a=this.xref,i={},s=this.catDict.get(\"Names\");if(s&&s.has(\"Dests\")?t=s.getRaw(\"Dests\"):this.catDict.has(\"Dests\")&&(r=this.catDict.get(\"Dests\")),r&&(s=r).forEach(function(t,r){r&&(i[t]=e(r))}),t){var c=new g(t,a).getAll();for(var l in c)i[l]=e(c[l])}return(0,n.shadow)(this,\"destinations\",i)},getDestination:function(e){function t(e){return(0,o.isDict)(e)?e.get(\"D\"):e}var r,a,i=this.xref,n=null,s=this.catDict.get(\"Names\");if(s&&s.has(\"Dests\")?r=s.getRaw(\"Dests\"):this.catDict.has(\"Dests\")&&(a=this.catDict.get(\"Dests\")),a){var c=a.get(e);c&&(n=t(c))}r&&(n=t(new g(r,i).get(e)));return n},get pageLabels(){var e=null;try{e=this.readPageLabels()}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.warn)(\"Unable to read page labels.\")}return(0,n.shadow)(this,\"pageLabels\",e)},readPageLabels:function(){var e=this.catDict.getRaw(\"PageLabels\");if(!e)return null;for(var t=new Array(this.numPages),r=null,a=\"\",i=new m(e,this.xref).getAll(),s=\"\",c=1,l=0,h=this.numPages;l<h;l++){if(l in i){var u=i[l];if(!(0,o.isDict)(u))throw new n.FormatError(\"The PageLabel is not a dictionary.\");var d=u.get(\"Type\");if(d&&!(0,o.isName)(d,\"PageLabel\"))throw new n.FormatError(\"Invalid type in PageLabel dictionary.\");var f=u.get(\"S\");if(f&&!(0,o.isName)(f))throw new n.FormatError(\"Invalid style in PageLabel dictionary.\");r=f?f.name:null;var g=u.get(\"P\");if(g&&!(0,n.isString)(g))throw new n.FormatError(\"Invalid prefix in PageLabel dictionary.\");a=g?(0,n.stringToPDFString)(g):\"\";var p=u.get(\"St\");if(p&&!(Number.isInteger(p)&&p>=1))throw new n.FormatError(\"Invalid start in PageLabel dictionary.\");c=p||1}switch(r){case\"D\":s=c;break;case\"R\":case\"r\":s=n.Util.toRoman(c,\"r\"===r);break;case\"A\":case\"a\":for(var b=\"a\"===r?97:65,v=c-1,y=String.fromCharCode(b+v%26),w=[],k=0,S=v/26|0;k<=S;k++)w.push(y);s=w.join(\"\");break;default:if(r)throw new n.FormatError('Invalid style \"'+r+'\" in PageLabel dictionary.')}t[l]=a+s,s=\"\",c++}return t},get pageMode(){var e=this.catDict.get(\"PageMode\"),t=\"UseNone\";if((0,o.isName)(e))switch(e.name){case\"UseNone\":case\"UseOutlines\":case\"UseThumbs\":case\"FullScreen\":case\"UseOC\":case\"UseAttachments\":t=e.name}return(0,n.shadow)(this,\"pageMode\",t)},get attachments(){var e,t=this.xref,r=null,a=this.catDict.get(\"Names\");if(a&&(e=a.getRaw(\"EmbeddedFiles\")),e){var i=new g(e,t).getAll();for(var o in i){var s=new p(i[o],t);r||(r=Object.create(null)),r[(0,n.stringToPDFString)(o)]=s.serializable}}return(0,n.shadow)(this,\"attachments\",r)},get javaScript(){var e=this.xref,t=this.catDict.get(\"Names\"),r=null;function a(e){var t=e.get(\"S\");if((0,o.isName)(t,\"JavaScript\")){var a=e.get(\"JS\");if((0,o.isStream)(a))a=(0,n.bytesToString)(a.getBytes());else if(!(0,n.isString)(a))return;r||(r=[]),r.push((0,n.stringToPDFString)(a))}}if(t&&t.has(\"JavaScript\")){var i=new g(t.getRaw(\"JavaScript\"),e).getAll();for(var s in i){var c=i[s];(0,o.isDict)(c)&&a(c)}}var l=this.catDict.get(\"OpenAction\");if((0,o.isDict)(l,\"Action\")){var h=l.get(\"S\");if((0,o.isName)(h,\"Named\")){var u=l.get(\"N\");(0,o.isName)(u,\"Print\")&&(r||(r=[]),r.push(\"print({});\"))}else a(l)}return(0,n.shadow)(this,\"javaScript\",r)},cleanup:function(){var e=this;this.pageKidsCountCache.clear();var t=[];return this.fontCache.forEach(function(e){t.push(e)}),Promise.all(t).then(function(t){for(var r=0,a=t.length;r<a;r++){delete t[r].dict.translated}e.fontCache.clear(),e.builtInCMapCache=Object.create(null)})},getPage:function(e){var t=this;return e in this.pagePromises||(this.pagePromises[e]=this.getPageDict(e).then(function(r){var a=i(r,2),n=a[0],o=a[1];return t.pageFactory.createPage(e,n,o,t.fontCache,t.builtInCMapCache)})),this.pagePromises[e]},getPageDict:function(e){var t,r=(0,n.createPromiseCapability)(),a=[this.catDict.getRaw(\"Pages\")],i=0,s=this.xref,c=this.pageKidsCountCache;return function l(){for(;a.length;){var h=a.pop();if((0,o.isRef)(h)){if((t=c.get(h))>0&&i+t<e){i+=t;continue}return void s.fetchAsync(h).then(function(t){(0,o.isDict)(t,\"Page\")||(0,o.isDict)(t)&&!t.has(\"Kids\")?e===i?(h&&!c.has(h)&&c.put(h,1),r.resolve([t,h])):(i++,l()):(a.push(t),l())},r.reject)}if(!(0,o.isDict)(h))return void r.reject(new n.FormatError(\"page dictionary kid reference points to wrong type of object\"));t=h.get(\"Count\");var u=h.objId;if(u&&!c.has(u)&&c.put(u,t),i+t<=e)i+=t;else{var d=h.get(\"Kids\");if(!Array.isArray(d))return void r.reject(new n.FormatError(\"page dictionary kids object is not an array\"));for(var f=d.length-1;f>=0;f--)a.push(d[f])}}r.reject(new Error(\"Page index \"+e+\" not found.\"))}(),r.promise},getPageIndex:function(e){var t=this.xref;var r=0;return function a(i){return function(r){var a,i=0;return t.fetchAsync(r).then(function(t){if((0,o.isRefsEqual)(r,e)&&!(0,o.isDict)(t,\"Page\")&&(!(0,o.isDict)(t)||t.has(\"Type\")||!t.has(\"Contents\")))throw new n.FormatError(\"The reference does not point to a /Page Dict.\");if(!t)return null;if(!(0,o.isDict)(t))throw new n.FormatError(\"node must be a Dict.\");return a=t.getRaw(\"Parent\"),t.getAsync(\"Parent\")}).then(function(e){if(!e)return null;if(!(0,o.isDict)(e))throw new n.FormatError(\"parent must be a Dict.\");return e.getAsync(\"Kids\")}).then(function(e){if(!e)return null;for(var s=[],c=!1,l=0;l<e.length;l++){var h=e[l];if(!(0,o.isRef)(h))throw new n.FormatError(\"kid must be a Ref.\");if(h.num===r.num){c=!0;break}s.push(t.fetchAsync(h).then(function(e){if(e.has(\"Count\")){var t=e.get(\"Count\");i+=t}else i++}))}if(!c)throw new n.FormatError(\"kid ref not found in parents kids\");return Promise.all(s).then(function(){return[i,a]})})}(i).then(function(e){if(!e)return r;var t=e[0],i=e[1];return r+=t,a(i)})}(e)}},e.parseDestDictionary=function(e){var t=e.destDict;if((0,o.isDict)(t)){var r=e.resultObj;if(\"object\"===(void 0===r?\"undefined\":a(r))){var i,s,c=e.docBaseUrl||null,l=t.get(\"A\");if(!(0,o.isDict)(l)&&t.has(\"Dest\")&&(l=t.get(\"Dest\")),(0,o.isDict)(l)){var h=l.get(\"S\");if(!(0,o.isName)(h))return void(0,n.warn)(\"parseDestDictionary: Invalid type in Action dictionary.\");var u=h.name;switch(u){case\"URI\":i=l.get(\"URI\"),(0,o.isName)(i)?i=\"/\"+i.name:(0,n.isString)(i)&&(i=function(e){return 0===e.indexOf(\"www.\")?\"http://\"+e:e}(i));break;case\"GoTo\":s=l.get(\"D\");break;case\"Launch\":case\"GoToR\":var d=l.get(\"F\");(0,o.isDict)(d)?i=d.get(\"F\")||null:(0,n.isString)(d)&&(i=d);var f=l.get(\"D\");if(f&&((0,o.isName)(f)&&(f=f.name),(0,n.isString)(i))){var g=i.split(\"#\")[0];(0,n.isString)(f)?i=g+\"#\"+f:Array.isArray(f)&&(i=g+\"#\"+JSON.stringify(f))}var m=l.get(\"NewWindow\");(0,n.isBool)(m)&&(r.newWindow=m);break;case\"Named\":var p=l.get(\"N\");(0,o.isName)(p)&&(r.action=p.name);break;case\"JavaScript\":var b,v=l.get(\"JS\");if((0,o.isStream)(v)?b=(0,n.bytesToString)(v.getBytes()):(0,n.isString)(v)&&(b=v),b){var y=new RegExp(\"^\\\\s*(\"+[\"app.launchURL\",\"window.open\"].join(\"|\").split(\".\").join(\"\\\\.\")+\")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\"i\").exec((0,n.stringToPDFString)(b));if(y&&y[2]){i=y[2],\"true\"===y[3]&&\"app.launchURL\"===y[1]&&(r.newWindow=!0);break}}default:(0,n.warn)('parseDestDictionary: Unsupported Action type \"'+u+'\".')}}else t.has(\"Dest\")&&(s=t.get(\"Dest\"));if((0,n.isString)(i)){i=function(e){try{return(0,n.stringToUTF8String)(e)}catch(t){return e}}(i);var w=(0,n.createValidAbsoluteUrl)(i,c);w&&(r.url=w.href),r.unsafeUrl=i}s&&((0,o.isName)(s)&&(s=s.name),((0,n.isString)(s)||Array.isArray(s))&&(r.dest=s))}else(0,n.warn)('parseDestDictionary: \"resultObj\" must be an object.')}else(0,n.warn)('parseDestDictionary: \"destDict\" must be a dictionary.')},e}(),d=function(){function e(e,t){this.stream=e,this.pdfManager=t,this.entries=[],this.xrefstms=Object.create(null),this.cache=[],this.stats={streamTypes:[],fontTypes:[]}}return e.prototype={setStartXRef:function(e){this.startXRefQueue=[e]},parse:function(e){var t;e?((0,n.warn)(\"Indexing all PDF objects\"),t=this.indexObjects()):t=this.readXRef(),t.assignXref(this),this.trailer=t;var r=t.get(\"Encrypt\");if((0,o.isDict)(r)){var a=t.get(\"ID\"),i=a&&a.length?a[0]:\"\";r.suppressEncryption=!0,this.encrypt=new l.CipherTransformFactory(r,i,this.pdfManager.password)}if(!(this.root=t.get(\"Root\")))throw new n.FormatError(\"Invalid root reference\")},processXRefTable:function(e){\"tableState\"in this||(this.tableState={entryNum:0,streamPos:e.lexer.stream.pos,parserBuf1:e.buf1,parserBuf2:e.buf2});var t=this.readXRefTable(e);if(!(0,o.isCmd)(t,\"trailer\"))throw new n.FormatError(\"Invalid XRef table: could not find trailer dictionary\");var r=e.getObj();if(!(0,o.isDict)(r)&&r.dict&&(r=r.dict),!(0,o.isDict)(r))throw new n.FormatError(\"Invalid XRef table: could not parse trailer dictionary\");return delete this.tableState,r},readXRefTable:function(e){var t,r=e.lexer.stream,a=this.tableState;for(r.pos=a.streamPos,e.buf1=a.parserBuf1,e.buf2=a.parserBuf2;;){if(!(\"firstEntryNum\"in a&&\"entryCount\"in a)){if((0,o.isCmd)(t=e.getObj(),\"trailer\"))break;a.firstEntryNum=t,a.entryCount=e.getObj()}var i=a.firstEntryNum,s=a.entryCount;if(!Number.isInteger(i)||!Number.isInteger(s))throw new n.FormatError(\"Invalid XRef table: wrong types in subsection header\");for(var c=a.entryNum;c<s;c++){a.streamPos=r.pos,a.entryNum=c,a.parserBuf1=e.buf1,a.parserBuf2=e.buf2;var l={};l.offset=e.getObj(),l.gen=e.getObj();var h=e.getObj();if((0,o.isCmd)(h,\"f\")?l.free=!0:(0,o.isCmd)(h,\"n\")&&(l.uncompressed=!0),!Number.isInteger(l.offset)||!Number.isInteger(l.gen)||!l.free&&!l.uncompressed)throw new n.FormatError(\"Invalid entry in XRef subsection: \"+i+\", \"+s);0===c&&l.free&&1===i&&(i=0),this.entries[c+i]||(this.entries[c+i]=l)}a.entryNum=0,a.streamPos=r.pos,a.parserBuf1=e.buf1,a.parserBuf2=e.buf2,delete a.firstEntryNum,delete a.entryCount}if(this.entries[0]&&!this.entries[0].free)throw new n.FormatError(\"Invalid XRef table: unexpected first object\");return t},processXRefStream:function(e){if(!(\"streamState\"in this)){var t=e.dict,r=t.get(\"W\"),a=t.get(\"Index\");a||(a=[0,t.get(\"Size\")]),this.streamState={entryRanges:a,byteWidths:r,entryNum:0,streamPos:e.pos}}return this.readXRefStream(e),delete this.streamState,e.dict},readXRefStream:function(e){var t,r,a=this.streamState;e.pos=a.streamPos;for(var i=a.byteWidths,o=i[0],s=i[1],c=i[2],l=a.entryRanges;l.length>0;){var h=l[0],u=l[1];if(!Number.isInteger(h)||!Number.isInteger(u))throw new n.FormatError(\"Invalid XRef range fields: \"+h+\", \"+u);if(!Number.isInteger(o)||!Number.isInteger(s)||!Number.isInteger(c))throw new n.FormatError(\"Invalid XRef entry fields length: \"+h+\", \"+u);for(t=a.entryNum;t<u;++t){a.entryNum=t,a.streamPos=e.pos;var d=0,f=0,g=0;for(r=0;r<o;++r)d=d<<8|e.getByte();for(0===o&&(d=1),r=0;r<s;++r)f=f<<8|e.getByte();for(r=0;r<c;++r)g=g<<8|e.getByte();var m={};switch(m.offset=f,m.gen=g,d){case 0:m.free=!0;break;case 1:m.uncompressed=!0;break;case 2:break;default:throw new n.FormatError(\"Invalid XRef entry type: \"+d)}this.entries[h+t]||(this.entries[h+t]=m)}a.entryNum=0,a.streamPos=e.pos,l.splice(0,2)}},indexObjects:function(){var e=10,t=13,r=60;function a(a,i){for(var n=\"\",o=a[i];o!==e&&o!==t&&o!==r&&!(++i>=a.length);)n+=String.fromCharCode(o),o=a[i];return n}function i(e,t,r){for(var a=r.length,i=e.length,n=0;t<i;){for(var o=0;o<a&&e[t+o]===r[o];)++o;if(o>=a)break;t++,n++}return n}var c=/^(\\d+)\\s+(\\d+)\\s+obj\\b/,l=/\\bendobj[\\b\\s]$/,h=/\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/,u=new Uint8Array([116,114,97,105,108,101,114]),d=new Uint8Array([115,116,97,114,116,120,114,101,102]),f=new Uint8Array([111,98,106]),g=new Uint8Array([47,88,82,101,102]);this.entries.length=0;var m=this.stream;m.pos=0;for(var p,b,v,y=m.getBytes(),w=m.start,k=y.length,S=[],x=[];w<k;){var C=y[w];if(9!==C&&C!==e&&C!==t&&32!==C)if(37!==C){var A,I=a(y,w);if(0!==I.indexOf(\"xref\")||4!==I.length&&!/\\s/.test(I[4]))if(A=c.exec(I)){void 0===this.entries[A[1]]&&(this.entries[A[1]]={offset:w-m.start,gen:0|A[2],uncompressed:!0});for(var F=void 0,O=w+I.length;O<y.length;){var B=O+i(y,O,f)+4;F=B-w;var P=Math.max(B-25,O),T=(0,n.bytesToString)(y.subarray(P,B));if(l.test(T))break;var E=h.exec(T);if(E&&E[1]){(0,n.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", caused by missing \"endobj\" -- trying to recover.'),F-=E[1].length;break}O+=F}var M=y.subarray(w,w+F),D=i(M,0,g);D<F&&M[D+5]<64&&(x.push(w-m.start),this.xrefstms[w-m.start]=1),w+=F}else 0!==I.indexOf(\"trailer\")||7!==I.length&&!/\\s/.test(I[7])?w+=I.length+1:(S.push(w),w+=i(y,w,d));else w+=i(y,w,u),S.push(w),w+=i(y,w,d)}else do{if(++w>=k)break;C=y[w]}while(C!==e&&C!==t);else++w}for(p=0,b=x.length;p<b;++p)this.startXRefQueue.push(x[p]),this.readXRef(!0);for(p=0,b=S.length;p<b;++p){m.pos=S[p];var R=new s.Parser(new s.Lexer(m),!0,this,!0),L=R.getObj();if((0,o.isCmd)(L,\"trailer\")&&(v=R.getObj(),(0,o.isDict)(v)&&v.has(\"ID\")))return v}if(v)return v;throw new n.InvalidPDFException(\"Invalid PDF structure\")},readXRef:function(e){var t=this.stream,r=Object.create(null);try{for(;this.startXRefQueue.length;){var a=this.startXRefQueue[0];if(r[a])(0,n.warn)(\"readXRef - skipping XRef table since it was already parsed.\"),this.startXRefQueue.shift();else{r[a]=!0,t.pos=a+t.start;var i,c=new s.Parser(new s.Lexer(t),!0,this),l=c.getObj();if((0,o.isCmd)(l,\"xref\")){if(i=this.processXRefTable(c),this.topDict||(this.topDict=i),l=i.get(\"XRefStm\"),Number.isInteger(l)){var h=l;h in this.xrefstms||(this.xrefstms[h]=1,this.startXRefQueue.push(h))}}else{if(!Number.isInteger(l))throw new n.FormatError(\"Invalid XRef stream header\");if(!Number.isInteger(c.getObj())||!(0,o.isCmd)(c.getObj(),\"obj\")||!(0,o.isStream)(l=c.getObj()))throw new n.FormatError(\"Invalid XRef stream\");if(i=this.processXRefStream(l),this.topDict||(this.topDict=i),!i)throw new n.FormatError(\"Failed to read XRef stream\")}l=i.get(\"Prev\"),Number.isInteger(l)?this.startXRefQueue.push(l):(0,o.isRef)(l)&&this.startXRefQueue.push(l.num),this.startXRefQueue.shift()}}return this.topDict}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.info)(\"(while reading XRef): \"+e)}if(!e)throw new n.XRefParseException},getEntry:function(e){var t=this.entries[e];return t&&!t.free&&t.offset?t:null},fetchIfRef:function(e,t){return(0,o.isRef)(e)?this.fetch(e,t):e},fetch:function(e,t){if(!(0,o.isRef)(e))throw new Error(\"ref object is not a reference\");var r=e.num;if(r in this.cache){var a=this.cache[r];return a instanceof o.Dict&&!a.objId&&(a.objId=e.toString()),a}var i=this.getEntry(r);return null===i?this.cache[r]=null:(i=i.uncompressed?this.fetchUncompressed(e,i,t):this.fetchCompressed(i,t),(0,o.isDict)(i)?i.objId=e.toString():(0,o.isStream)(i)&&(i.dict.objId=e.toString()),i)},fetchUncompressed:function(e,t,r){var a=e.gen,i=e.num;if(t.gen!==a)throw new n.FormatError(\"inconsistent generation in XRef\");var c=this.stream.makeSubStream(t.offset+this.stream.start),l=new s.Parser(new s.Lexer(c),!0,this),h=l.getObj(),u=l.getObj(),d=l.getObj();if(Number.isInteger(h)||(h=parseInt(h,10)),Number.isInteger(u)||(u=parseInt(u,10)),h!==i||u!==a||!(0,o.isCmd)(d))throw new n.FormatError(\"bad XRef entry\");if(\"obj\"!==d.cmd){if(0===d.cmd.indexOf(\"obj\")&&(i=parseInt(d.cmd.substring(3),10),!Number.isNaN(i)))return i;throw new n.FormatError(\"bad XRef entry\")}return t=this.encrypt&&!r?l.getObj(this.encrypt.createCipherTransform(i,a)):l.getObj(),(0,o.isStream)(t)||(this.cache[i]=t),t},fetchCompressed:function(e,t){var r=e.offset,a=this.fetch(new o.Ref(r,0));if(!(0,o.isStream)(a))throw new n.FormatError(\"bad ObjStm stream\");var i=a.dict.get(\"First\"),c=a.dict.get(\"N\");if(!Number.isInteger(i)||!Number.isInteger(c))throw new n.FormatError(\"invalid first and n parameters for ObjStm stream\");var l=new s.Parser(new s.Lexer(a),!1,this);l.allowStreams=!0;var h,u,d=[],f=[];for(h=0;h<c;++h){if(u=l.getObj(),!Number.isInteger(u))throw new n.FormatError(\"invalid object number in the ObjStm stream: \"+u);f.push(u);var g=l.getObj();if(!Number.isInteger(g))throw new n.FormatError(\"invalid object offset in the ObjStm stream: \"+g)}for(h=0;h<c;++h){d.push(l.getObj()),(0,o.isCmd)(l.buf1,\"endobj\")&&l.shift(),u=f[h];var m=this.entries[u];m&&m.offset===r&&m.gen===h&&(this.cache[u]=d[h])}if(void 0===(e=d[e.gen]))throw new n.FormatError(\"bad XRef entry for compressed object\");return e},fetchIfRefAsync:function(e,t){return(0,o.isRef)(e)?this.fetchAsync(e,t):Promise.resolve(e)},fetchAsync:function(e,t){var r=this.stream.manager,a=this;return new Promise(function i(o,s){try{o(a.fetch(e,t))}catch(e){if(e instanceof n.MissingDataException)return void r.requestRange(e.begin,e.end).then(function(){i(o,s)},s);s(e)}})},getCatalogObj:function(){return this.root}},e}(),f=function(){function e(e,t){(0,n.unreachable)(\"Cannot initialize NameOrNumberTree.\")}return e.prototype={getAll:function(){var e=Object.create(null);if(!this.root)return e;var t=this.xref,r=new o.RefSet;r.put(this.root);for(var a=[this.root];a.length>0;){var i,s,c=t.fetchIfRef(a.shift());if((0,o.isDict)(c))if(c.has(\"Kids\")){var l=c.get(\"Kids\");for(i=0,s=l.length;i<s;i++){var h=l[i];if(r.has(h))throw new n.FormatError('Duplicate entry in \"'+this._type+'\" tree.');a.push(h),r.put(h)}}else{var u=c.get(this._type);if(Array.isArray(u))for(i=0,s=u.length;i<s;i+=2)e[t.fetchIfRef(u[i])]=t.fetchIfRef(u[i+1])}}return e},get:function(e){if(!this.root)return null;for(var t,r,a,i=this.xref,o=i.fetchIfRef(this.root),s=0;o.has(\"Kids\");){if(++s>10)return(0,n.warn)('Search depth limit reached for \"'+this._type+'\" tree.'),null;var c=o.get(\"Kids\");if(!Array.isArray(c))return null;for(t=0,r=c.length-1;t<=r;){a=t+r>>1;var l=i.fetchIfRef(c[a]).get(\"Limits\");if(e<i.fetchIfRef(l[0]))r=a-1;else{if(!(e>i.fetchIfRef(l[1]))){o=i.fetchIfRef(c[a]);break}t=a+1}}if(t>r)return null}var h=o.get(this._type);if(Array.isArray(h))for(t=0,r=h.length-2;t<=r;){a=t+r&-2;var u=i.fetchIfRef(h[a]);if(e<u)r=a-2;else{if(!(e>u))return i.fetchIfRef(h[a+1]);t=a+2}}return null}},e}(),g=function(){function e(e,t){this.root=e,this.xref=t,this._type=\"Names\"}return n.Util.inherit(e,f,{}),e}(),m=function(){function e(e,t){this.root=e,this.xref=t,this._type=\"Nums\"}return n.Util.inherit(e,f,{}),e}(),p=function(){function e(e,t){e&&(0,o.isDict)(e)&&(this.xref=t,this.root=e,e.has(\"FS\")&&(this.fs=e.get(\"FS\")),this.description=e.has(\"Desc\")?(0,n.stringToPDFString)(e.get(\"Desc\")):\"\",e.has(\"RF\")&&(0,n.warn)(\"Related file specifications are not supported\"),this.contentAvailable=!0,e.has(\"EF\")||(this.contentAvailable=!1,(0,n.warn)(\"Non-embedded file specifications are not supported\")))}function t(e){return e.has(\"UF\")?e.get(\"UF\"):e.has(\"F\")?e.get(\"F\"):e.has(\"Unix\")?e.get(\"Unix\"):e.has(\"Mac\")?e.get(\"Mac\"):e.has(\"DOS\")?e.get(\"DOS\"):null}return e.prototype={get filename(){if(!this._filename&&this.root){var e=t(this.root)||\"unnamed\";this._filename=(0,n.stringToPDFString)(e).replace(/\\\\\\\\/g,\"\\\\\").replace(/\\\\\\//g,\"/\").replace(/\\\\/g,\"/\")}return this._filename},get content(){if(!this.contentAvailable)return null;!this.contentRef&&this.root&&(this.contentRef=t(this.root.get(\"EF\")));var e=null;if(this.contentRef){var r=this.xref.fetchIfRef(this.contentRef);r&&(0,o.isStream)(r)?e=r.getBytes():(0,n.warn)(\"Embedded file specification points to non-existing/invalid content\")}else(0,n.warn)(\"Embedded file specification does not have a content\");return e},get serializable(){return{filename:this.filename,content:this.content}}},e}(),b=function(){function e(e){return(0,o.isRef)(e)||(0,o.isDict)(e)||Array.isArray(e)||(0,o.isStream)(e)}function t(t,r){if((0,o.isDict)(t)||(0,o.isStream)(t))for(var a=(0,o.isDict)(t)?t:t.dict,i=a.getKeys(),n=0,s=i.length;n<s;n++){var c=a.getRaw(i[n]);e(c)&&r.push(c)}else if(Array.isArray(t))for(var l=0,h=t.length;l<h;l++){var u=t[l];e(u)&&r.push(u)}}function r(e,t,r){this.dict=e,this.keys=t,this.xref=r,this.refSet=null,this.capability=null}return r.prototype={load:function(){if(this.capability=(0,n.createPromiseCapability)(),!(this.xref.stream instanceof c.ChunkedStream)||0===this.xref.stream.getMissingChunks().length)return this.capability.resolve(),this.capability.promise;var e=this.keys,t=this.dict;this.refSet=new o.RefSet;for(var r=[],a=0,i=e.length;a<i;a++){var s=t.getRaw(e[a]);void 0!==s&&r.push(s)}return this._walk(r),this.capability.promise},_walk:function(e){for(var r=this,a=[],i=[];e.length;){var s=e.pop();if((0,o.isRef)(s)){if(this.refSet.has(s))continue;try{this.refSet.put(s),s=this.xref.fetch(s)}catch(e){if(!(e instanceof n.MissingDataException))throw e;a.push(s),i.push({begin:e.begin,end:e.end})}}if(s&&s.getBaseStreams){for(var c=s.getBaseStreams(),l=!1,h=0,u=c.length;h<u;h++){var d=c[h];d.getMissingChunks&&d.getMissingChunks().length&&(l=!0,i.push({begin:d.start,end:d.end}))}l&&a.push(s)}t(s,e)}i.length?this.xref.stream.manager.requestRanges(i).then(function(){for(var e=0,t=a.length;e<t;e++){var i=a[e];(0,o.isRef)(i)&&r.refSet.remove(i)}r._walk(a)},this.capability.reject):(this.refSet=null,this.capability.resolve())}},r}();t.Catalog=u,t.ObjectLoader=b,t.XRef=d,t.FileSpec=p},\"./node_modules/pdfjs-dist/lib/core/operator_list.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/operator_list.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.OperatorList=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=function(){function e(e,t,r,a,i){for(var n=e,o=0,s=t.length-1;o<s;o++){var c=t[o];n=n[c]||(n[c]=[])}n[t[t.length-1]]={checkFn:r,iterateFn:a,processFn:i}}var t=[];function r(e){this.queue=e,this.state=null,this.context={iCurr:0,fnArray:e.fnArray,argsArray:e.argsArray},this.match=null,this.lastProcessed=0}return e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintInlineImageXObject,a.OPS.restore],null,function(e,t){var r=e.fnArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:return r[t]===a.OPS.transform;case 2:return r[t]===a.OPS.paintInlineImageXObject;case 3:return r[t]===a.OPS.restore}},function(e,t){var r=e.fnArray,i=e.argsArray,n=e.iCurr,o=n-3,s=n-2,c=n-1,l=Math.min(Math.floor((t-o)/4),200);if(l<10)return t-(t-o)%4;var h,u=0,d=[],f=0,g=1,m=1;for(h=0;h<l;h++){var p=i[s+(h<<2)],b=i[c+(h<<2)][0];g+b.width>1e3&&(u=Math.max(u,g),m+=f+2,g=0,f=0),d.push({transform:p,x:g,y:m,w:b.width,h:b.height}),g+=b.width+2,f=Math.max(f,b.height)}var v=Math.max(u,g)+1,y=m+f+1,w=new Uint8Array(v*y*4),k=v<<2;for(h=0;h<l;h++){var S=i[c+(h<<2)][0].data,x=d[h].w<<2,C=0,A=d[h].x+d[h].y*v<<2;w.set(S.subarray(0,x),A-k);for(var I=0,F=d[h].h;I<F;I++)w.set(S.subarray(C,C+x),A),C+=x,A+=k;for(w.set(S.subarray(C-x,C),A);A>=0;)S[A-4]=S[A],S[A-3]=S[A+1],S[A-2]=S[A+2],S[A-1]=S[A+3],S[A+x]=S[A+x-4],S[A+x+1]=S[A+x-3],S[A+x+2]=S[A+x-2],S[A+x+3]=S[A+x-1],A-=k}return r.splice(o,4*l,a.OPS.paintInlineImageXObjectGroup),i.splice(o,4*l,[{width:v,height:y,kind:a.ImageKind.RGBA_32BPP,data:w},d]),o+1}),e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintImageMaskXObject,a.OPS.restore],null,function(e,t){var r=e.fnArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:return r[t]===a.OPS.transform;case 2:return r[t]===a.OPS.paintImageMaskXObject;case 3:return r[t]===a.OPS.restore}},function(e,t){var r,i=e.fnArray,n=e.argsArray,o=e.iCurr,s=o-3,c=o-2,l=o-1,h=Math.floor((t-s)/4);if((h=function(e,t,r,i){for(var n=e+2,o=0;o<t;o++){var s=i[n+4*o],c=1===s.length&&s[0];if(!c||1!==c.width||1!==c.height||c.data.length&&(1!==c.data.length||0!==c.data[0]))break;r[n+4*o]=a.OPS.paintSolidColorImageMask}return t-o}(s,h,i,n))<10)return t-(t-s)%4;var u,d,f=!1,g=n[l][0];if(0===n[c][1]&&0===n[c][2]){f=!0;var m=n[c][0],p=n[c][3];u=c+4;var b=l+4;for(r=1;r<h;r++,u+=4,b+=4)if(d=n[u],n[b][0]!==g||d[0]!==m||0!==d[1]||0!==d[2]||d[3]!==p){r<10?f=!1:h=r;break}}if(f){h=Math.min(h,1e3);var v=new Float32Array(2*h);for(u=c,r=0;r<h;r++,u+=4)d=n[u],v[r<<1]=d[4],v[1+(r<<1)]=d[5];i.splice(s,4*h,a.OPS.paintImageMaskXObjectRepeat),n.splice(s,4*h,[g,m,p,v])}else{h=Math.min(h,100);var y=[];for(r=0;r<h;r++){d=n[c+(r<<2)];var w=n[l+(r<<2)][0];y.push({data:w.data,width:w.width,height:w.height,transform:d})}i.splice(s,4*h,a.OPS.paintImageMaskXObjectGroup),n.splice(s,4*h,[y])}return s+1}),e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintImageXObject,a.OPS.restore],function(e){var t=e.argsArray,r=e.iCurr-2;return 0===t[r][1]&&0===t[r][2]},function(e,t){var r=e.fnArray,i=e.argsArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:if(r[t]!==a.OPS.transform)return!1;var n=e.iCurr-2,o=i[n][0],s=i[n][3];return i[t][0]===o&&0===i[t][1]&&0===i[t][2]&&i[t][3]===s;case 2:if(r[t]!==a.OPS.paintImageXObject)return!1;var c=i[e.iCurr-1][0];return i[t][0]===c;case 3:return r[t]===a.OPS.restore}},function(e,t){var r=e.fnArray,i=e.argsArray,n=e.iCurr,o=n-3,s=n-2,c=i[n-1][0],l=i[s][0],h=i[s][3],u=Math.min(Math.floor((t-o)/4),1e3);if(u<3)return t-(t-o)%4;for(var d=new Float32Array(2*u),f=s,g=0;g<u;g++,f+=4){var m=i[f];d[g<<1]=m[4],d[1+(g<<1)]=m[5]}var p=[c,l,h,d];return r.splice(o,4*u,a.OPS.paintImageXObjectRepeat),i.splice(o,4*u,p),o+1}),e(t,[a.OPS.beginText,a.OPS.setFont,a.OPS.setTextMatrix,a.OPS.showText,a.OPS.endText],null,function(e,t){var r=e.fnArray,i=e.argsArray;switch((t-(e.iCurr-4))%5){case 0:return r[t]===a.OPS.beginText;case 1:return r[t]===a.OPS.setFont;case 2:return r[t]===a.OPS.setTextMatrix;case 3:if(r[t]!==a.OPS.showText)return!1;var n=e.iCurr-3,o=i[n][0],s=i[n][1];return i[t][0]===o&&i[t][1]===s;case 4:return r[t]===a.OPS.endText}},function(e,t){var r=e.fnArray,a=e.argsArray,i=e.iCurr,n=i-4,o=i-3,s=i-2,c=i-1,l=i,h=a[o][0],u=a[o][1],d=Math.min(Math.floor((t-n)/5),1e3);if(d<3)return t-(t-n)%5;var f=n;n>=4&&r[n-4]===r[o]&&r[n-3]===r[s]&&r[n-2]===r[c]&&r[n-1]===r[l]&&a[n-4][0]===h&&a[n-4][1]===u&&(d++,f-=5);for(var g=f+4,m=1;m<d;m++)r.splice(g,3),a.splice(g,3),g+=2;return g+1}),r.prototype={_optimize:function(){var e=this.queue.fnArray,r=this.lastProcessed,a=e.length,i=this.state,n=this.match;if(i||n||r+1!==a||t[e[r]]){for(var o=this.context;r<a;){if(n){if((0,n.iterateFn)(o,r)){r++;continue}if(r=(0,n.processFn)(o,r+1),n=null,i=null,r>=(a=e.length))break}(i=(i||t)[e[r]])&&!Array.isArray(i)?(o.iCurr=r,r++,!i.checkFn||(0,i.checkFn)(o)?(n=i,i=null):i=null):r++}this.state=i,this.match=n,this.lastProcessed=r}else this.lastProcessed=a},push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t),this._optimize()},flush:function(){for(;this.match;){var e=this.queue.fnArray.length;this.lastProcessed=(0,this.match.processFn)(this.context,e),this.match=null,this.state=null,this._optimize()}},reset:function(){this.state=null,this.match=null,this.lastProcessed=0}},r}(),n=function(){function e(e){this.queue=e}return e.prototype={push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t)},flush:function(){}},e}(),o=function(){function e(e,t,r){this.messageHandler=t,this.fnArray=[],this.argsArray=[],t&&\"oplist\"!==this.intent?this.optimizer=new i(this):this.optimizer=new n(this),this.dependencies=Object.create(null),this._totalLength=0,this.pageIndex=r,this.intent=e,this.weight=0}return e.prototype={get length(){return this.argsArray.length},get totalLength(){return this._totalLength+this.length},addOp:function(e,t){this.optimizer.push(e,t),this.weight++,this.messageHandler&&(this.weight>=1e3?this.flush():this.weight>=995&&(e===a.OPS.restore||e===a.OPS.endText)&&this.flush())},addDependency:function(e){e in this.dependencies||(this.dependencies[e]=!0,this.addOp(a.OPS.dependency,[e]))},addDependencies:function(e){for(var t in e)this.addDependency(t)},addOpList:function(e){a.Util.extendObj(this.dependencies,e.dependencies);for(var t=0,r=e.length;t<r;t++)this.addOp(e.fnArray[t],e.argsArray[t])},getIR:function(){return{fnArray:this.fnArray,argsArray:this.argsArray,length:this.length}},flush:function(e){this.optimizer.flush();var t=function(e){for(var t=[],r=e.fnArray,i=e.argsArray,n=0,o=e.length;n<o;n++)switch(r[n]){case a.OPS.paintInlineImageXObject:case a.OPS.paintInlineImageXObjectGroup:case a.OPS.paintImageMaskXObject:var s=i[n][0];s.cached||t.push(s.data.buffer)}return t}(this),r=this.length;this._totalLength+=r,this.messageHandler.send(\"RenderPageChunk\",{operatorList:{fnArray:this.fnArray,argsArray:this.argsArray,lastChunk:e,length:r},pageIndex:this.pageIndex,intent:this.intent},t),this.dependencies=Object.create(null),this.fnArray.length=0,this.argsArray.length=0,this.weight=0,this.optimizer.reset()}},e}();t.OperatorList=o},\"./node_modules/pdfjs-dist/lib/core/parser.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/parser.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Parser=t.Linearization=t.Lexer=void 0;var a=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),i=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),n=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),o=r(/*! ./ccitt_stream */\"./node_modules/pdfjs-dist/lib/core/ccitt_stream.js\"),s=r(/*! ./jbig2_stream */\"./node_modules/pdfjs-dist/lib/core/jbig2_stream.js\"),c=r(/*! ./jpeg_stream */\"./node_modules/pdfjs-dist/lib/core/jpeg_stream.js\"),l=r(/*! ./jpx_stream */\"./node_modules/pdfjs-dist/lib/core/jpx_stream.js\"),h=function(){function e(e,t,r,a){this.lexer=e,this.allowStreams=t,this.xref=r,this.recoveryMode=a||!1,this.imageCache=Object.create(null),this.refill()}return e.prototype={refill:function(){this.buf1=this.lexer.getObj(),this.buf2=this.lexer.getObj()},shift:function(){(0,n.isCmd)(this.buf2,\"ID\")?(this.buf1=this.buf2,this.buf2=null):(this.buf1=this.buf2,this.buf2=this.lexer.getObj())},tryShift:function(){try{return this.shift(),!0}catch(e){if(e instanceof i.MissingDataException)throw e;return!1}},getObj:function(e){var t=this.buf1;if(this.shift(),t instanceof n.Cmd)switch(t.cmd){case\"BI\":return this.makeInlineImage(e);case\"[\":for(var r=[];!(0,n.isCmd)(this.buf1,\"]\")&&!(0,n.isEOF)(this.buf1);)r.push(this.getObj(e));if((0,n.isEOF)(this.buf1)){if(!this.recoveryMode)throw new i.FormatError(\"End of file inside array\");return r}return this.shift(),r;case\"<<\":for(var a=new n.Dict(this.xref);!(0,n.isCmd)(this.buf1,\">>\")&&!(0,n.isEOF)(this.buf1);)if((0,n.isName)(this.buf1)){var o=this.buf1.name;if(this.shift(),(0,n.isEOF)(this.buf1))break;a.set(o,this.getObj(e))}else(0,i.info)(\"Malformed dictionary: key must be a name object\"),this.shift();if((0,n.isEOF)(this.buf1)){if(!this.recoveryMode)throw new i.FormatError(\"End of file inside dictionary\");return a}return(0,n.isCmd)(this.buf2,\"stream\")?this.allowStreams?this.makeStream(a,e):a:(this.shift(),a);default:return t}if(Number.isInteger(t)){var s=t;if(Number.isInteger(this.buf1)&&(0,n.isCmd)(this.buf2,\"R\")){var c=new n.Ref(s,this.buf1);return this.shift(),this.shift(),c}return s}if((0,i.isString)(t)){var l=t;return e&&(l=e.decryptString(l)),l}return t},findDefaultInlineStreamEnd:function(e){for(var t=e.pos,r=0,a=void 0,n=void 0;-1!==(a=e.getByte());)if(0===r)r=69===a?1:0;else if(1===r)r=73===a?2:0;else if((0,i.assert)(2===r),32===a||10===a||13===a){n=e.pos;for(var o=e.peekBytes(10),s=0,c=o.length;s<c;s++)if((0!==(a=o[s])||0===o[s+1])&&10!==a&&13!==a&&(a<32||a>127)){r=0;break}if(2===r)break}else r=0;return-1===a&&((0,i.warn)(\"findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker\"),n&&((0,i.warn)('... trying to recover by using the last \"EI\" occurrence.'),e.skip(-(e.pos-n)))),e.pos-4-t},findDCTDecodeInlineStreamEnd:function(e){for(var t,r,a,n=e.pos,o=!1;-1!==(t=e.getByte());)if(255===t){switch(e.getByte()){case 0:break;case 255:e.skip(-1);break;case 217:o=!0;break;case 192:case 193:case 194:case 195:case 197:case 198:case 199:case 201:case 202:case 203:case 205:case 206:case 207:case 196:case 204:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 254:(r=e.getUint16())>2?e.skip(r-2):e.skip(-2)}if(o)break}return a=e.pos-n,-1===t?((0,i.warn)(\"Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead.\"),e.skip(-a),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),a)},findASCII85DecodeInlineStreamEnd:function(e){for(var t,r,a=e.pos;-1!==(t=e.getByte());)if(126===t&&62===e.peekByte()){e.skip();break}return r=e.pos-a,-1===t?((0,i.warn)(\"Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-r),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),r)},findASCIIHexDecodeInlineStreamEnd:function(e){for(var t,r,a=e.pos;-1!==(t=e.getByte())&&62!==t;);return r=e.pos-a,-1===t?((0,i.warn)(\"Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-r),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),r)},inlineStreamSkipEI:function(e){for(var t,r=0;-1!==(t=e.getByte());)if(0===r)r=69===t?1:0;else if(1===r)r=73===t?2:0;else if(2===r)break},makeInlineImage:function(e){for(var t=this.lexer.stream,r=new n.Dict(this.xref);!(0,n.isCmd)(this.buf1,\"ID\")&&!(0,n.isEOF)(this.buf1);){if(!(0,n.isName)(this.buf1))throw new i.FormatError(\"Dictionary key must be a name object\");var a=this.buf1.name;if(this.shift(),(0,n.isEOF)(this.buf1))break;r.set(a,this.getObj(e))}var o,s=r.get(\"Filter\",\"F\");if((0,n.isName)(s))o=s.name;else if(Array.isArray(s)){var c=this.xref.fetchIfRef(s[0]);(0,n.isName)(c)&&(o=c.name)}var l,h,u,d=t.pos;l=\"DCTDecode\"===o||\"DCT\"===o?this.findDCTDecodeInlineStreamEnd(t):\"ASCII85Decode\"===o||\"A85\"===o?this.findASCII85DecodeInlineStreamEnd(t):\"ASCIIHexDecode\"===o||\"AHx\"===o?this.findASCIIHexDecodeInlineStreamEnd(t):this.findDefaultInlineStreamEnd(t);var f,g=t.makeSubStream(d,l,r);if(l<1e3){var m=g.getBytes();g.reset();var p=1,b=0;for(h=0,u=m.length;h<u;++h)b+=p+=255&m[h];f=b%65521<<16|p%65521;var v=this.imageCache[f];if(void 0!==v)return this.buf2=n.Cmd.get(\"EI\"),this.shift(),v.reset(),v}return e&&(g=e.createStream(g,l)),(g=this.filter(g,r,l)).dict=r,void 0!==f&&(g.cacheKey=\"inline_\"+l+\"_\"+f,this.imageCache[f]=g),this.buf2=n.Cmd.get(\"EI\"),this.shift(),g},makeStream:function(e,t){var r=this.lexer,a=r.stream;r.skipToNextLine();var o=a.pos-1,s=e.get(\"Length\");if(Number.isInteger(s)||((0,i.info)(\"Bad \"+s+\" attribute in stream\"),s=0),a.pos=o+s,r.nextChar(),this.tryShift()&&(0,n.isCmd)(this.buf2,\"endstream\"))this.shift();else{a.pos=o;for(var c,l,h=[101,110,100,115,116,114,101,97,109],u=0,d=!1;a.pos<a.end;){var f=a.peekBytes(2048),g=f.length-9;if(g<=0)break;for(d=!1,c=0;c<g;){for(l=0;l<9&&f[c+l]===h[l];)l++;if(l>=9){d=!0;break}c++}if(d){u+=c,a.pos+=c;break}u+=g,a.pos+=g}if(!d)throw new i.FormatError(\"Missing endstream\");s=u,r.nextChar(),this.shift(),this.shift()}return this.shift(),a=a.makeSubStream(o,s,e),t&&(a=t.createStream(a,s)),(a=this.filter(a,e,s)).dict=e,a},filter:function(e,t,r){var a=t.get(\"Filter\",\"F\"),o=t.get(\"DecodeParms\",\"DP\");if((0,n.isName)(a))return Array.isArray(o)&&(0,i.warn)(\"/DecodeParms should not contain an Array, when /Filter contains a Name.\"),this.makeFilter(e,a.name,r,o);var s=r;if(Array.isArray(a))for(var c=a,l=o,h=0,u=c.length;h<u;++h){if(a=this.xref.fetchIfRef(c[h]),!(0,n.isName)(a))throw new i.FormatError(\"Bad filter name: \"+a);o=null,Array.isArray(l)&&h in l&&(o=this.xref.fetchIfRef(l[h])),e=this.makeFilter(e,a.name,s,o),s=null}return e},makeFilter:function(e,t,r,n){if(0===r)return(0,i.warn)('Empty \"'+t+'\" stream.'),new a.NullStream;try{var h=this.xref.stats.streamTypes;if(\"FlateDecode\"===t||\"Fl\"===t)return h[i.StreamType.FLATE]=!0,n?new a.PredictorStream(new a.FlateStream(e,r),r,n):new a.FlateStream(e,r);if(\"LZWDecode\"===t||\"LZW\"===t){h[i.StreamType.LZW]=!0;var u=1;return n?(n.has(\"EarlyChange\")&&(u=n.get(\"EarlyChange\")),new a.PredictorStream(new a.LZWStream(e,r,u),r,n)):new a.LZWStream(e,r,u)}return\"DCTDecode\"===t||\"DCT\"===t?(h[i.StreamType.DCT]=!0,new c.JpegStream(e,r,e.dict,n)):\"JPXDecode\"===t||\"JPX\"===t?(h[i.StreamType.JPX]=!0,new l.JpxStream(e,r,e.dict,n)):\"ASCII85Decode\"===t||\"A85\"===t?(h[i.StreamType.A85]=!0,new a.Ascii85Stream(e,r)):\"ASCIIHexDecode\"===t||\"AHx\"===t?(h[i.StreamType.AHX]=!0,new a.AsciiHexStream(e,r)):\"CCITTFaxDecode\"===t||\"CCF\"===t?(h[i.StreamType.CCF]=!0,new o.CCITTFaxStream(e,r,n)):\"RunLengthDecode\"===t||\"RL\"===t?(h[i.StreamType.RL]=!0,new a.RunLengthStream(e,r)):\"JBIG2Decode\"===t?(h[i.StreamType.JBIG]=!0,new s.Jbig2Stream(e,r,e.dict,n)):((0,i.warn)('filter \"'+t+'\" not supported yet'),e)}catch(e){if(e instanceof i.MissingDataException)throw e;return(0,i.warn)('Invalid stream: \"'+e+'\"'),new a.NullStream}}},e}(),u=function(){function e(e,t){this.stream=e,this.nextChar(),this.strBuf=[],this.knownCommands=t}var t=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function r(e){return e>=48&&e<=57?15&e:e>=65&&e<=70||e>=97&&e<=102?9+(15&e):-1}return e.prototype={nextChar:function(){return this.currentChar=this.stream.getByte()},peekChar:function(){return this.stream.peekByte()},getNumber:function(){var e=this.currentChar,t=!1,r=0,a=1;if(45===e?(a=-1,45===(e=this.nextChar())&&(e=this.nextChar())):43===e&&(e=this.nextChar()),46===e&&(r=10,e=this.nextChar()),10===e||13===e)do{e=this.nextChar()}while(10===e||13===e);if(e<48||e>57)throw new i.FormatError(\"Invalid number: \"+String.fromCharCode(e)+\" (charCode \"+e+\")\");for(var n=e-48,o=0,s=1;(e=this.nextChar())>=0;)if(48<=e&&e<=57){var c=e-48;t?o=10*o+c:(0!==r&&(r*=10),n=10*n+c)}else if(46===e){if(0!==r)break;r=1}else if(45===e)(0,i.warn)(\"Badly formatted number\");else{if(69!==e&&101!==e)break;if(43===(e=this.peekChar())||45===e)s=45===e?-1:1,this.nextChar();else if(e<48||e>57)break;t=!0}return 0!==r&&(n/=r),t&&(n*=Math.pow(10,s*o)),a*n},getString:function(){var e=1,t=!1,r=this.strBuf;r.length=0;for(var a=this.nextChar();;){var n=!1;switch(0|a){case-1:(0,i.warn)(\"Unterminated string\"),t=!0;break;case 40:++e,r.push(\"(\");break;case 41:0==--e?(this.nextChar(),t=!0):r.push(\")\");break;case 92:switch(a=this.nextChar()){case-1:(0,i.warn)(\"Unterminated string\"),t=!0;break;case 110:r.push(\"\\n\");break;case 114:r.push(\"\\r\");break;case 116:r.push(\"\\t\");break;case 98:r.push(\"\\b\");break;case 102:r.push(\"\\f\");break;case 92:case 40:case 41:r.push(String.fromCharCode(a));break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:var o=15&a;n=!0,(a=this.nextChar())>=48&&a<=55&&(o=(o<<3)+(15&a),(a=this.nextChar())>=48&&a<=55&&(n=!1,o=(o<<3)+(15&a))),r.push(String.fromCharCode(o));break;case 13:10===this.peekChar()&&this.nextChar();break;case 10:break;default:r.push(String.fromCharCode(a))}break;default:r.push(String.fromCharCode(a))}if(t)break;n||(a=this.nextChar())}return r.join(\"\")},getName:function(){var e,a,o=this.strBuf;for(o.length=0;(e=this.nextChar())>=0&&!t[e];)if(35===e){if(e=this.nextChar(),t[e]){(0,i.warn)(\"Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number.\"),o.push(\"#\");break}var s=r(e);if(-1!==s){a=e;var c=r(e=this.nextChar());if(-1===c){if((0,i.warn)(\"Lexer_getName: Illegal digit (\"+String.fromCharCode(e)+\") in hexadecimal number.\"),o.push(\"#\",String.fromCharCode(a)),t[e])break;o.push(String.fromCharCode(e));continue}o.push(String.fromCharCode(s<<4|c))}else o.push(\"#\",String.fromCharCode(e))}else o.push(String.fromCharCode(e));return o.length>127&&(0,i.warn)(\"name token is longer than allowed by the spec: \"+o.length),n.Name.get(o.join(\"\"))},getHexString:function(){var e=this.strBuf;e.length=0;for(var a,n,o=this.currentChar,s=!0;;){if(o<0){(0,i.warn)(\"Unterminated hex string\");break}if(62===o){this.nextChar();break}if(1!==t[o]){if(s){if(-1===(a=r(o))){(0,i.warn)('Ignoring invalid character \"'+o+'\" in hex string'),o=this.nextChar();continue}}else{if(-1===(n=r(o))){(0,i.warn)('Ignoring invalid character \"'+o+'\" in hex string'),o=this.nextChar();continue}e.push(String.fromCharCode(a<<4|n))}s=!s,o=this.nextChar()}else o=this.nextChar()}return e.join(\"\")},getObj:function(){for(var e=!1,r=this.currentChar;;){if(r<0)return n.EOF;if(e)10!==r&&13!==r||(e=!1);else if(37===r)e=!0;else if(1!==t[r])break;r=this.nextChar()}switch(0|r){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return this.getNumber();case 40:return this.getString();case 47:return this.getName();case 91:return this.nextChar(),n.Cmd.get(\"[\");case 93:return this.nextChar(),n.Cmd.get(\"]\");case 60:return 60===(r=this.nextChar())?(this.nextChar(),n.Cmd.get(\"<<\")):this.getHexString();case 62:return 62===(r=this.nextChar())?(this.nextChar(),n.Cmd.get(\">>\")):n.Cmd.get(\">\");case 123:return this.nextChar(),n.Cmd.get(\"{\");case 125:return this.nextChar(),n.Cmd.get(\"}\");case 41:throw this.nextChar(),new i.FormatError(\"Illegal character: \"+r)}for(var a=String.fromCharCode(r),o=this.knownCommands,s=o&&void 0!==o[a];(r=this.nextChar())>=0&&!t[r];){var c=a+String.fromCharCode(r);if(s&&void 0===o[c])break;if(128===a.length)throw new i.FormatError(\"Command token too long: \"+a.length);a=c,s=o&&void 0!==o[a]}return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:n.Cmd.get(a))},skipToNextLine:function(){for(var e=this.currentChar;e>=0;){if(13===e){10===(e=this.nextChar())&&this.nextChar();break}if(10===e){this.nextChar();break}e=this.nextChar()}}},e}(),d={create:function(e){function t(e,t){var r=d.get(e);if(Number.isInteger(r)&&(t?r>=0:r>0))return r;throw new Error('The \"'+e+'\" parameter in the linearization dictionary is invalid.')}var r,a,o=new h(new u(e),!1,null),s=o.getObj(),c=o.getObj(),l=o.getObj(),d=o.getObj();if(!(Number.isInteger(s)&&Number.isInteger(c)&&(0,n.isCmd)(l,\"obj\")&&(0,n.isDict)(d)&&(0,i.isNum)(r=d.get(\"Linearized\"))&&r>0))return null;if((a=t(\"L\"))!==e.length)throw new Error('The \"L\" parameter in the linearization dictionary does not equal the stream length.');return{length:a,hints:function(){var e,t,r=d.get(\"H\");if(Array.isArray(r)&&(2===(e=r.length)||4===e)){for(var a=0;a<e;a++)if(!(Number.isInteger(t=r[a])&&t>0))throw new Error(\"Hint (\"+a+\") in the linearization dictionary is invalid.\");return r}throw new Error(\"Hint array in the linearization dictionary is invalid.\")}(),objectNumberFirst:t(\"O\"),endFirst:t(\"E\"),numPages:t(\"N\"),mainXRefEntriesOffset:t(\"T\"),pageFirst:d.has(\"P\")?t(\"P\",!0):0}}};t.Lexer=u,t.Linearization=d,t.Parser=h},\"./node_modules/pdfjs-dist/lib/core/pattern.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/pattern.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getTilingPatternIR=t.Pattern=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./colorspace */\"./node_modules/pdfjs-dist/lib/core/colorspace.js\"),n=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),o={FUNCTION_BASED:1,AXIAL:2,RADIAL:3,FREE_FORM_MESH:4,LATTICE_FORM_MESH:5,COONS_PATCH_MESH:6,TENSOR_PATCH_MESH:7},s=function(){function e(){(0,a.unreachable)(\"should not call Pattern constructor\")}return e.prototype={getPattern:function(e){(0,a.unreachable)(\"Should not call Pattern.getStyle: \"+e)}},e.parseShading=function(e,t,r,i,s,l){var h=(0,n.isStream)(e)?e.dict:e,u=h.get(\"ShadingType\");try{switch(u){case o.AXIAL:case o.RADIAL:return new c.RadialAxial(h,t,r,i,l);case o.FREE_FORM_MESH:case o.LATTICE_FORM_MESH:case o.COONS_PATCH_MESH:case o.TENSOR_PATCH_MESH:return new c.Mesh(e,t,r,i,l);default:throw new a.FormatError(\"Unsupported ShadingType: \"+u)}}catch(e){if(e instanceof a.MissingDataException)throw e;return s.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.shadingPattern}),(0,a.warn)(e),new c.Dummy}},e}(),c={};c.SMALL_NUMBER=1e-6,c.RadialAxial=function(){function e(e,t,r,n,s){this.matrix=t,this.coordsArr=e.getArray(\"Coords\"),this.shadingType=e.get(\"ShadingType\"),this.type=\"Pattern\";var l=e.get(\"ColorSpace\",\"CS\");l=i.ColorSpace.parse(l,r,n,s),this.cs=l;var h=0,u=1;if(e.has(\"Domain\")){var d=e.getArray(\"Domain\");h=d[0],u=d[1]}var f=!1,g=!1;if(e.has(\"Extend\")){var m=e.getArray(\"Extend\");f=m[0],g=m[1]}if(!(this.shadingType!==o.RADIAL||f&&g)){var p=this.coordsArr[0],b=this.coordsArr[1],v=this.coordsArr[2],y=this.coordsArr[3],w=this.coordsArr[4],k=this.coordsArr[5],S=Math.sqrt((p-y)*(p-y)+(b-w)*(b-w));v<=k+S&&k<=v+S&&(0,a.warn)(\"Unsupported radial gradient.\")}this.extendStart=f,this.extendEnd=g;var x=e.get(\"Function\"),C=s.createFromArray(x),A=u-h,I=A/10,F=this.colorStops=[];if(h>=u||I<=0)(0,a.info)(\"Bad shading domain.\");else{for(var O,B=new Float32Array(l.numComps),P=new Float32Array(1),T=h;T<=u;T+=I){P[0]=T,C(P,0,B,0),O=l.getRgb(B,0);var E=a.Util.makeCssRgb(O[0],O[1],O[2]);F.push([(T-h)/A,E])}var M=\"transparent\";e.has(\"Background\")&&(O=l.getRgb(e.get(\"Background\"),0),M=a.Util.makeCssRgb(O[0],O[1],O[2])),f||(F.unshift([0,M]),F[1][0]+=c.SMALL_NUMBER),g||(F[F.length-1][0]-=c.SMALL_NUMBER,F.push([1,M])),this.colorStops=F}}return e.prototype={getIR:function(){var e,t,r,i,n,s=this.coordsArr,c=this.shadingType;c===o.AXIAL?(t=[s[0],s[1]],r=[s[2],s[3]],i=null,n=null,e=\"axial\"):c===o.RADIAL?(t=[s[0],s[1]],r=[s[3],s[4]],i=s[2],n=s[5],e=\"radial\"):(0,a.unreachable)(\"getPattern type unknown: \"+c);var l=this.matrix;if(l&&(t=a.Util.applyTransform(t,l),r=a.Util.applyTransform(r,l),c===o.RADIAL)){var h=a.Util.singularValueDecompose2dScale(l);i*=h[0],n*=h[1]}return[\"RadialAxial\",e,this.colorStops,t,r,i,n]}},e}(),c.Mesh=function(){function e(e,t){this.stream=e,this.context=t,this.buffer=0,this.bufferLength=0;var r=t.numComps;this.tmpCompsBuf=new Float32Array(r);var a=t.colorSpace.numComps;this.tmpCsCompsBuf=t.colorFn?new Float32Array(a):this.tmpCompsBuf}e.prototype={get hasData(){if(this.stream.end)return this.stream.pos<this.stream.end;if(this.bufferLength>0)return!0;var e=this.stream.getByte();return!(e<0)&&(this.buffer=e,this.bufferLength=8,!0)},readBits:function(e){var t=this.buffer,r=this.bufferLength;if(32===e){if(0===r)return(this.stream.getByte()<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte())>>>0;t=t<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte();var a=this.stream.getByte();return this.buffer=a&(1<<r)-1,(t<<8-r|(255&a)>>r)>>>0}if(8===e&&0===r)return this.stream.getByte();for(;r<e;)t=t<<8|this.stream.getByte(),r+=8;return r-=e,this.bufferLength=r,this.buffer=t&(1<<r)-1,t>>r},align:function(){this.buffer=0,this.bufferLength=0},readFlag:function(){return this.readBits(this.context.bitsPerFlag)},readCoordinate:function(){var e=this.context.bitsPerCoordinate,t=this.readBits(e),r=this.readBits(e),a=this.context.decode,i=e<32?1/((1<<e)-1):2.3283064365386963e-10;return[t*i*(a[1]-a[0])+a[0],r*i*(a[3]-a[2])+a[2]]},readComponents:function(){for(var e=this.context.numComps,t=this.context.bitsPerComponent,r=t<32?1/((1<<t)-1):2.3283064365386963e-10,a=this.context.decode,i=this.tmpCompsBuf,n=0,o=4;n<e;n++,o+=2){var s=this.readBits(t);i[n]=s*r*(a[o+1]-a[o])+a[o]}var c=this.tmpCsCompsBuf;return this.context.colorFn&&this.context.colorFn(i,0,c,0),this.context.colorSpace.getRgb(c,0)}};var t,r=3,s=20,c=20,l=(t=[],function(e){return t[e]||(t[e]=function(e){for(var t=[],r=0;r<=e;r++){var a=r/e,i=1-a;t.push(new Float32Array([i*i*i,3*a*i*i,3*a*a*i,a*a*a]))}return t}(e)),t[e]});function h(e,t){var i=e.figures[t];(0,a.assert)(\"patch\"===i.type,\"Unexpected patch mesh figure\");var n=e.coords,o=e.colors,h=i.coords,u=i.colors,d=Math.min(n[h[0]][0],n[h[3]][0],n[h[12]][0],n[h[15]][0]),f=Math.min(n[h[0]][1],n[h[3]][1],n[h[12]][1],n[h[15]][1]),g=Math.max(n[h[0]][0],n[h[3]][0],n[h[12]][0],n[h[15]][0]),m=Math.max(n[h[0]][1],n[h[3]][1],n[h[12]][1],n[h[15]][1]),p=Math.ceil((g-d)*c/(e.bounds[2]-e.bounds[0]));p=Math.max(r,Math.min(s,p));var b=Math.ceil((m-f)*c/(e.bounds[3]-e.bounds[1]));b=Math.max(r,Math.min(s,b));for(var v=p+1,y=new Int32Array((b+1)*v),w=new Int32Array((b+1)*v),k=0,S=new Uint8Array(3),x=new Uint8Array(3),C=o[u[0]],A=o[u[1]],I=o[u[2]],F=o[u[3]],O=l(b),B=l(p),P=0;P<=b;P++){S[0]=(C[0]*(b-P)+I[0]*P)/b|0,S[1]=(C[1]*(b-P)+I[1]*P)/b|0,S[2]=(C[2]*(b-P)+I[2]*P)/b|0,x[0]=(A[0]*(b-P)+F[0]*P)/b|0,x[1]=(A[1]*(b-P)+F[1]*P)/b|0,x[2]=(A[2]*(b-P)+F[2]*P)/b|0;for(var T=0;T<=p;T++,k++)if(0!==P&&P!==b||0!==T&&T!==p){for(var E=0,M=0,D=0,R=0;R<=3;R++)for(var L=0;L<=3;L++,D++){var N=O[P][R]*B[T][L];E+=n[h[D]][0]*N,M+=n[h[D]][1]*N}y[k]=n.length,n.push([E,M]),w[k]=o.length;var j=new Uint8Array(3);j[0]=(S[0]*(p-T)+x[0]*T)/p|0,j[1]=(S[1]*(p-T)+x[1]*T)/p|0,j[2]=(S[2]*(p-T)+x[2]*T)/p|0,o.push(j)}}y[0]=h[0],w[0]=u[0],y[p]=h[3],w[p]=u[1],y[v*b]=h[12],w[v*b]=u[2],y[v*b+p]=h[15],w[v*b+p]=u[3],e.figures[t]={type:\"lattice\",coords:y,colors:w,verticesPerRow:v}}function u(e){for(var t=e.coords[0][0],r=e.coords[0][1],a=t,i=r,n=1,o=e.coords.length;n<o;n++){var s=e.coords[n][0],c=e.coords[n][1];t=t>s?s:t,r=r>c?c:r,a=a<s?s:a,i=i<c?c:i}e.bounds=[t,r,a,i]}function d(t,r,s,c,l){if(!(0,n.isStream)(t))throw new a.FormatError(\"Mesh data is not a stream\");var d=t.dict;this.matrix=r,this.shadingType=d.get(\"ShadingType\"),this.type=\"Pattern\",this.bbox=d.getArray(\"BBox\");var f=d.get(\"ColorSpace\",\"CS\");f=i.ColorSpace.parse(f,s,c,l),this.cs=f,this.background=d.has(\"Background\")?f.getRgb(d.get(\"Background\"),0):null;var g=d.get(\"Function\"),m=g?l.createFromArray(g):null;this.coords=[],this.colors=[],this.figures=[];var p=new e(t,{bitsPerCoordinate:d.get(\"BitsPerCoordinate\"),bitsPerComponent:d.get(\"BitsPerComponent\"),bitsPerFlag:d.get(\"BitsPerFlag\"),decode:d.getArray(\"Decode\"),colorFn:m,colorSpace:f,numComps:m?1:f.numComps}),b=!1;switch(this.shadingType){case o.FREE_FORM_MESH:!function(e,t){for(var r=e.coords,i=e.colors,n=[],o=[],s=0;t.hasData;){var c=t.readFlag(),l=t.readCoordinate(),h=t.readComponents();if(0===s){if(!(0<=c&&c<=2))throw new a.FormatError(\"Unknown type4 flag\");switch(c){case 0:s=3;break;case 1:o.push(o[o.length-2],o[o.length-1]),s=1;break;case 2:o.push(o[o.length-3],o[o.length-1]),s=1}n.push(c)}o.push(r.length),r.push(l),i.push(h),s--,t.align()}e.figures.push({type:\"triangles\",coords:new Int32Array(o),colors:new Int32Array(o)})}(this,p);break;case o.LATTICE_FORM_MESH:var v=0|d.get(\"VerticesPerRow\");if(v<2)throw new a.FormatError(\"Invalid VerticesPerRow\");!function(e,t,r){for(var a=e.coords,i=e.colors,n=[];t.hasData;){var o=t.readCoordinate(),s=t.readComponents();n.push(a.length),a.push(o),i.push(s)}e.figures.push({type:\"lattice\",coords:new Int32Array(n),colors:new Int32Array(n),verticesPerRow:r})}(this,p,v);break;case o.COONS_PATCH_MESH:!function(e,t){for(var r=e.coords,i=e.colors,n=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new a.FormatError(\"Unknown type6 flag\");var h=r.length;for(s=0,c=0!==l?8:12;s<c;s++)r.push(t.readCoordinate());var u,d,f,g,m=i.length;for(s=0,c=0!==l?2:4;s<c;s++)i.push(t.readComponents());switch(l){case 0:n[12]=h+3,n[13]=h+4,n[14]=h+5,n[15]=h+6,n[8]=h+2,n[11]=h+7,n[4]=h+1,n[7]=h+8,n[0]=h,n[1]=h+11,n[2]=h+10,n[3]=h+9,o[2]=m+1,o[3]=m+2,o[0]=m,o[1]=m+3;break;case 1:u=n[12],d=n[13],f=n[14],g=n[15],n[12]=g,n[13]=h+0,n[14]=h+1,n[15]=h+2,n[8]=f,n[11]=h+3,n[4]=d,n[7]=h+4,n[0]=u,n[1]=h+7,n[2]=h+6,n[3]=h+5,u=o[2],d=o[3],o[2]=d,o[3]=m,o[0]=u,o[1]=m+1;break;case 2:u=n[15],d=n[11],n[12]=n[3],n[13]=h+0,n[14]=h+1,n[15]=h+2,n[8]=n[7],n[11]=h+3,n[4]=d,n[7]=h+4,n[0]=u,n[1]=h+7,n[2]=h+6,n[3]=h+5,u=o[3],o[2]=o[1],o[3]=m,o[0]=u,o[1]=m+1;break;case 3:n[12]=n[0],n[13]=h+0,n[14]=h+1,n[15]=h+2,n[8]=n[1],n[11]=h+3,n[4]=n[2],n[7]=h+4,n[0]=n[3],n[1]=h+7,n[2]=h+6,n[3]=h+5,o[2]=o[0],o[3]=m,o[0]=o[1],o[1]=m+1}n[5]=r.length,r.push([(-4*r[n[0]][0]-r[n[15]][0]+6*(r[n[4]][0]+r[n[1]][0])-2*(r[n[12]][0]+r[n[3]][0])+3*(r[n[13]][0]+r[n[7]][0]))/9,(-4*r[n[0]][1]-r[n[15]][1]+6*(r[n[4]][1]+r[n[1]][1])-2*(r[n[12]][1]+r[n[3]][1])+3*(r[n[13]][1]+r[n[7]][1]))/9]),n[6]=r.length,r.push([(-4*r[n[3]][0]-r[n[12]][0]+6*(r[n[2]][0]+r[n[7]][0])-2*(r[n[0]][0]+r[n[15]][0])+3*(r[n[4]][0]+r[n[14]][0]))/9,(-4*r[n[3]][1]-r[n[12]][1]+6*(r[n[2]][1]+r[n[7]][1])-2*(r[n[0]][1]+r[n[15]][1])+3*(r[n[4]][1]+r[n[14]][1]))/9]),n[9]=r.length,r.push([(-4*r[n[12]][0]-r[n[3]][0]+6*(r[n[8]][0]+r[n[13]][0])-2*(r[n[0]][0]+r[n[15]][0])+3*(r[n[11]][0]+r[n[1]][0]))/9,(-4*r[n[12]][1]-r[n[3]][1]+6*(r[n[8]][1]+r[n[13]][1])-2*(r[n[0]][1]+r[n[15]][1])+3*(r[n[11]][1]+r[n[1]][1]))/9]),n[10]=r.length,r.push([(-4*r[n[15]][0]-r[n[0]][0]+6*(r[n[11]][0]+r[n[14]][0])-2*(r[n[12]][0]+r[n[3]][0])+3*(r[n[2]][0]+r[n[8]][0]))/9,(-4*r[n[15]][1]-r[n[0]][1]+6*(r[n[11]][1]+r[n[14]][1])-2*(r[n[12]][1]+r[n[3]][1])+3*(r[n[2]][1]+r[n[8]][1]))/9]),e.figures.push({type:\"patch\",coords:new Int32Array(n),colors:new Int32Array(o)})}}(this,p),b=!0;break;case o.TENSOR_PATCH_MESH:!function(e,t){for(var r=e.coords,i=e.colors,n=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new a.FormatError(\"Unknown type7 flag\");var h=r.length;for(s=0,c=0!==l?12:16;s<c;s++)r.push(t.readCoordinate());var u,d,f,g,m=i.length;for(s=0,c=0!==l?2:4;s<c;s++)i.push(t.readComponents());switch(l){case 0:n[12]=h+3,n[13]=h+4,n[14]=h+5,n[15]=h+6,n[8]=h+2,n[9]=h+13,n[10]=h+14,n[11]=h+7,n[4]=h+1,n[5]=h+12,n[6]=h+15,n[7]=h+8,n[0]=h,n[1]=h+11,n[2]=h+10,n[3]=h+9,o[2]=m+1,o[3]=m+2,o[0]=m,o[1]=m+3;break;case 1:u=n[12],d=n[13],f=n[14],g=n[15],n[12]=g,n[13]=h+0,n[14]=h+1,n[15]=h+2,n[8]=f,n[9]=h+9,n[10]=h+10,n[11]=h+3,n[4]=d,n[5]=h+8,n[6]=h+11,n[7]=h+4,n[0]=u,n[1]=h+7,n[2]=h+6,n[3]=h+5,u=o[2],d=o[3],o[2]=d,o[3]=m,o[0]=u,o[1]=m+1;break;case 2:u=n[15],d=n[11],n[12]=n[3],n[13]=h+0,n[14]=h+1,n[15]=h+2,n[8]=n[7],n[9]=h+9,n[10]=h+10,n[11]=h+3,n[4]=d,n[5]=h+8,n[6]=h+11,n[7]=h+4,n[0]=u,n[1]=h+7,n[2]=h+6,n[3]=h+5,u=o[3],o[2]=o[1],o[3]=m,o[0]=u,o[1]=m+1;break;case 3:n[12]=n[0],n[13]=h+0,n[14]=h+1,n[15]=h+2,n[8]=n[1],n[9]=h+9,n[10]=h+10,n[11]=h+3,n[4]=n[2],n[5]=h+8,n[6]=h+11,n[7]=h+4,n[0]=n[3],n[1]=h+7,n[2]=h+6,n[3]=h+5,o[2]=o[0],o[3]=m,o[0]=o[1],o[1]=m+1}e.figures.push({type:\"patch\",coords:new Int32Array(n),colors:new Int32Array(o)})}}(this,p),b=!0;break;default:(0,a.unreachable)(\"Unsupported mesh type.\")}if(b){u(this);for(var y=0,w=this.figures.length;y<w;y++)h(this,y)}u(this),function(e){var t,r,a,i,n=e.coords,o=new Float32Array(2*n.length);for(t=0,a=0,r=n.length;t<r;t++){var s=n[t];o[a++]=s[0],o[a++]=s[1]}e.coords=o;var c=e.colors,l=new Uint8Array(3*c.length);for(t=0,a=0,r=c.length;t<r;t++){var h=c[t];l[a++]=h[0],l[a++]=h[1],l[a++]=h[2]}e.colors=l;var u=e.figures;for(t=0,r=u.length;t<r;t++){var d=u[t],f=d.coords,g=d.colors;for(a=0,i=f.length;a<i;a++)f[a]*=2,g[a]*=3}}(this)}return d.prototype={getIR:function(){return[\"Mesh\",this.shadingType,this.coords,this.colors,this.figures,this.bounds,this.matrix,this.bbox,this.background]}},d}(),c.Dummy=function(){function e(){this.type=\"Pattern\"}return e.prototype={getIR:function(){return[\"Dummy\"]}},e}(),t.Pattern=s,t.getTilingPatternIR=function(e,t,r){var i=t.getArray(\"Matrix\"),n=a.Util.normalizeRect(t.getArray(\"BBox\")),o=t.get(\"XStep\"),s=t.get(\"YStep\"),c=t.get(\"PaintType\"),l=t.get(\"TilingType\");if(n[2]-n[0]==0||n[3]-n[1]==0)throw new a.FormatError(\"Invalid getTilingPatternIR /BBox array: [\"+n+\"].\");return[\"TilingPattern\",r,e,i,n,o,s,c,l]}},\"./node_modules/pdfjs-dist/lib/core/pdf_manager.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/pdf_manager.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.NetworkPdfManager=t.LocalPdfManager=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./chunked_stream */\"./node_modules/pdfjs-dist/lib/core/chunked_stream.js\"),n=r(/*! ./document */\"./node_modules/pdfjs-dist/lib/core/document.js\"),o=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),s=function(){function e(){(0,a.unreachable)(\"Cannot initialize BaseManagerManager\")}return e.prototype={get docId(){return this._docId},get password(){return this._password},get docBaseUrl(){var e=null;if(this._docBaseUrl){var t=(0,a.createValidAbsoluteUrl)(this._docBaseUrl);t?e=t.href:(0,a.warn)('Invalid absolute docBaseUrl: \"'+this._docBaseUrl+'\".')}return(0,a.shadow)(this,\"docBaseUrl\",e)},onLoadedStream:function(){throw new a.NotImplementedException},ensureDoc:function(e,t){return this.ensure(this.pdfDocument,e,t)},ensureXRef:function(e,t){return this.ensure(this.pdfDocument.xref,e,t)},ensureCatalog:function(e,t){return this.ensure(this.pdfDocument.catalog,e,t)},getPage:function(e){return this.pdfDocument.getPage(e)},cleanup:function(){return this.pdfDocument.cleanup()},ensure:function(e,t,r){return new a.NotImplementedException},requestRange:function(e,t){return new a.NotImplementedException},requestLoadedStream:function(){return new a.NotImplementedException},sendProgressiveData:function(e){return new a.NotImplementedException},updatePassword:function(e){this._password=e},terminate:function(){return new a.NotImplementedException}},e}(),c=function(){function e(e,t,r,i,s){this._docId=e,this._password=r,this._docBaseUrl=s,this.evaluatorOptions=i;var c=new o.Stream(t);this.pdfDocument=new n.PDFDocument(this,c),this._loadedStreamCapability=(0,a.createPromiseCapability)(),this._loadedStreamCapability.resolve(c)}return a.Util.inherit(e,s,{ensure:function(e,t,r){return new Promise(function(a,i){try{var n=e[t];a(\"function\"==typeof n?n.apply(e,r):n)}catch(e){i(e)}})},requestRange:function(e,t){return Promise.resolve()},requestLoadedStream:function(){},onLoadedStream:function(){return this._loadedStreamCapability.promise},terminate:function(){}}),e}(),l=function(){function e(e,t,r,a,o){this._docId=e,this._password=r.password,this._docBaseUrl=o,this.msgHandler=r.msgHandler,this.evaluatorOptions=a;var s={msgHandler:r.msgHandler,url:r.url,length:r.length,disableAutoFetch:r.disableAutoFetch,rangeChunkSize:r.rangeChunkSize};this.streamManager=new i.ChunkedStreamManager(t,s),this.pdfDocument=new n.PDFDocument(this,this.streamManager.getStream())}return a.Util.inherit(e,s,{ensure:function(e,t,r){var i=this;return new Promise(function(n,o){!function s(){try{var c,l=e[t];c=\"function\"==typeof l?l.apply(e,r):l,n(c)}catch(e){if(!(e instanceof a.MissingDataException))return void o(e);i.streamManager.requestRange(e.begin,e.end).then(s,o)}}()})},requestRange:function(e,t){return this.streamManager.requestRange(e,t)},requestLoadedStream:function(){this.streamManager.requestAllChunks()},sendProgressiveData:function(e){this.streamManager.onReceiveData({chunk:e})},onLoadedStream:function(){return this.streamManager.onLoadedStream()},terminate:function(){this.streamManager.abort()}}),e}();t.LocalPdfManager=c,t.NetworkPdfManager=l},\"./node_modules/pdfjs-dist/lib/core/primitives.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/primitives.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i={},n=function(){function e(e){this.name=e}e.prototype={};var t=Object.create(null);return e.get=function(r){var a=t[r];return a||(t[r]=new e(r))},e}(),o=function(){function e(e){this.cmd=e}e.prototype={};var t=Object.create(null);return e.get=function(r){var a=t[r];return a||(t[r]=new e(r))},e}(),s=function(){var e=function(){return e};function t(t){this._map=Object.create(null),this.xref=t,this.objId=null,this.suppressEncryption=!1,this.__nonSerializable__=e}return t.prototype={assignXref:function(e){this.xref=e},get:function(e,t,r){var a,i=this.xref,n=this.suppressEncryption;return void 0!==(a=this._map[e])||e in this._map||void 0===t?i?i.fetchIfRef(a,n):a:void 0!==(a=this._map[t])||t in this._map||void 0===r?i?i.fetchIfRef(a,n):a:(a=this._map[r]||null,i?i.fetchIfRef(a,n):a)},getAsync:function(e,t,r){var a,i=this.xref,n=this.suppressEncryption;return void 0!==(a=this._map[e])||e in this._map||void 0===t?i?i.fetchIfRefAsync(a,n):Promise.resolve(a):void 0!==(a=this._map[t])||t in this._map||void 0===r?i?i.fetchIfRefAsync(a,n):Promise.resolve(a):(a=this._map[r]||null,i?i.fetchIfRefAsync(a,n):Promise.resolve(a))},getArray:function(e,t,r){var a=this.get(e,t,r),i=this.xref,n=this.suppressEncryption;if(!Array.isArray(a)||!i)return a;for(var o=0,s=(a=a.slice()).length;o<s;o++)f(a[o])&&(a[o]=i.fetch(a[o],n));return a},getRaw:function(e){return this._map[e]},getKeys:function(){return Object.keys(this._map)},set:function(e,t){this._map[e]=t},has:function(e){return e in this._map},forEach:function(e){for(var t in this._map)e(t,this.get(t))}},t.empty=new t(null),t.merge=function(e,r){for(var a=new t(e),i=0,n=r.length;i<n;i++){var o=r[i];if(d(o))for(var s in o._map)void 0===a._map[s]&&(a._map[s]=o._map[s])}return a},t}(),c=function(){function e(e,t){this.num=e,this.gen=t}return e.prototype={toString:function(){var e=this.num+\"R\";return 0!==this.gen&&(e+=this.gen),e}},e}(),l=function(){function e(){this.dict=Object.create(null)}return e.prototype={has:function(e){return e.toString()in this.dict},put:function(e){this.dict[e.toString()]=!0},remove:function(e){delete this.dict[e.toString()]}},e}(),h=function(){function e(){this.dict=Object.create(null)}return e.prototype={get:function(e){return this.dict[e.toString()]},has:function(e){return e.toString()in this.dict},put:function(e,t){this.dict[e.toString()]=t},putAlias:function(e,t){this.dict[e.toString()]=this.get(t)},forEach:function(e,t){for(var r in this.dict)e.call(t,this.dict[r])},clear:function(){this.dict=Object.create(null)}},e}();function u(e,t){return e instanceof n&&(void 0===t||e.name===t)}function d(e,t){return e instanceof s&&(void 0===t||u(e.get(\"Type\"),t))}function f(e){return e instanceof c}t.EOF=i,t.Cmd=o,t.Dict=s,t.Name=n,t.Ref=c,t.RefSet=l,t.RefSetCache=h,t.isEOF=function(e){return e===i},t.isCmd=function(e,t){return e instanceof o&&(void 0===t||e.cmd===t)},t.isDict=d,t.isName=u,t.isRef=f,t.isRefsEqual=function(e,t){return e.num===t.num&&e.gen===t.gen},t.isStream=function(e){return\"object\"===(void 0===e?\"undefined\":a(e))&&null!==e&&void 0!==e.getBytes}},\"./node_modules/pdfjs-dist/lib/core/ps_parser.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/ps_parser.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PostScriptParser=t.PostScriptLexer=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),n=function(){function e(e){this.lexer=e,this.operators=[],this.token=null,this.prev=null}return e.prototype={nextToken:function(){this.prev=this.token,this.token=this.lexer.getToken()},accept:function(e){return this.token.type===e&&(this.nextToken(),!0)},expect:function(e){if(this.accept(e))return!0;throw new a.FormatError(\"Unexpected symbol: found \"+this.token.type+\" expected \"+e+\".\")},parse:function(){return this.nextToken(),this.expect(o.LBRACE),this.parseBlock(),this.expect(o.RBRACE),this.operators},parseBlock:function(){for(;;)if(this.accept(o.NUMBER))this.operators.push(this.prev.value);else if(this.accept(o.OPERATOR))this.operators.push(this.prev.value);else{if(!this.accept(o.LBRACE))return;this.parseCondition()}},parseCondition:function(){var e=this.operators.length;if(this.operators.push(null,null),this.parseBlock(),this.expect(o.RBRACE),this.accept(o.IF))this.operators[e]=this.operators.length,this.operators[e+1]=\"jz\";else{if(!this.accept(o.LBRACE))throw new a.FormatError(\"PS Function: error parsing conditional.\");var t=this.operators.length;this.operators.push(null,null);var r=this.operators.length;this.parseBlock(),this.expect(o.RBRACE),this.expect(o.IFELSE),this.operators[t]=this.operators.length,this.operators[t+1]=\"j\",this.operators[e]=r,this.operators[e+1]=\"jz\"}}},e}(),o={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5},s=function(){function e(e,t){this.type=e,this.value=t}var t=Object.create(null);return e.getOperator=function(r){var a=t[r];return a||(t[r]=new e(o.OPERATOR,r))},e.LBRACE=new e(o.LBRACE,\"{\"),e.RBRACE=new e(o.RBRACE,\"}\"),e.IF=new e(o.IF,\"IF\"),e.IFELSE=new e(o.IFELSE,\"IFELSE\"),e}(),c=function(){function e(e){this.stream=e,this.nextChar(),this.strBuf=[]}return e.prototype={nextChar:function(){return this.currentChar=this.stream.getByte()},getToken:function(){for(var e=!1,t=this.currentChar;;){if(t<0)return i.EOF;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,a.isSpace)(t))break;t=this.nextChar()}switch(0|t){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return new s(o.NUMBER,this.getNumber());case 123:return this.nextChar(),s.LBRACE;case 125:return this.nextChar(),s.RBRACE}var r=this.strBuf;for(r.length=0,r[0]=String.fromCharCode(t);(t=this.nextChar())>=0&&(t>=65&&t<=90||t>=97&&t<=122);)r.push(String.fromCharCode(t));var n=r.join(\"\");switch(n.toLowerCase()){case\"if\":return s.IF;case\"ifelse\":return s.IFELSE;default:return s.getOperator(n)}},getNumber:function(){var e=this.currentChar,t=this.strBuf;for(t.length=0,t[0]=String.fromCharCode(e);(e=this.nextChar())>=0&&(e>=48&&e<=57||45===e||46===e);)t.push(String.fromCharCode(e));var r=parseFloat(t.join(\"\"));if(isNaN(r))throw new a.FormatError(\"Invalid floating point number: \"+r);return r}},e}();t.PostScriptLexer=c,t.PostScriptParser=n},\"./node_modules/pdfjs-dist/lib/core/standard_fonts.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/standard_fonts.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getSupplementalGlyphMapForCalibri=t.getSupplementalGlyphMapForArialBlack=t.getGlyphMapForStandardFonts=t.getSymbolsFonts=t.getSerifFonts=t.getNonStdFontMap=t.getStdFontMap=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=(0,a.getLookupTableFactory)(function(e){e.ArialNarrow=\"Helvetica\",e[\"ArialNarrow-Bold\"]=\"Helvetica-Bold\",e[\"ArialNarrow-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialNarrow-Italic\"]=\"Helvetica-Oblique\",e.ArialBlack=\"Helvetica\",e[\"ArialBlack-Bold\"]=\"Helvetica-Bold\",e[\"ArialBlack-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialBlack-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-Black\"]=\"Helvetica\",e[\"Arial-Black-Bold\"]=\"Helvetica-Bold\",e[\"Arial-Black-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Black-Italic\"]=\"Helvetica-Oblique\",e.Arial=\"Helvetica\",e[\"Arial-Bold\"]=\"Helvetica-Bold\",e[\"Arial-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-BoldItalicMT\"]=\"Helvetica-BoldOblique\",e[\"Arial-BoldMT\"]=\"Helvetica-Bold\",e[\"Arial-ItalicMT\"]=\"Helvetica-Oblique\",e.ArialMT=\"Helvetica\",e[\"Courier-Bold\"]=\"Courier-Bold\",e[\"Courier-BoldItalic\"]=\"Courier-BoldOblique\",e[\"Courier-Italic\"]=\"Courier-Oblique\",e.CourierNew=\"Courier\",e[\"CourierNew-Bold\"]=\"Courier-Bold\",e[\"CourierNew-BoldItalic\"]=\"Courier-BoldOblique\",e[\"CourierNew-Italic\"]=\"Courier-Oblique\",e[\"CourierNewPS-BoldItalicMT\"]=\"Courier-BoldOblique\",e[\"CourierNewPS-BoldMT\"]=\"Courier-Bold\",e[\"CourierNewPS-ItalicMT\"]=\"Courier-Oblique\",e.CourierNewPSMT=\"Courier\",e.Helvetica=\"Helvetica\",e[\"Helvetica-Bold\"]=\"Helvetica-Bold\",e[\"Helvetica-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-BoldOblique\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-Italic\"]=\"Helvetica-Oblique\",e[\"Helvetica-Oblique\"]=\"Helvetica-Oblique\",e.SegoeUISymbol=\"Helvetica\",e[\"Symbol-Bold\"]=\"Symbol\",e[\"Symbol-BoldItalic\"]=\"Symbol\",e[\"Symbol-Italic\"]=\"Symbol\",e.TimesNewRoman=\"Times-Roman\",e[\"TimesNewRoman-Bold\"]=\"Times-Bold\",e[\"TimesNewRoman-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRoman-Italic\"]=\"Times-Italic\",e.TimesNewRomanPS=\"Times-Roman\",e[\"TimesNewRomanPS-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPS-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldItalicMT\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldMT\"]=\"Times-Bold\",e[\"TimesNewRomanPS-Italic\"]=\"Times-Italic\",e[\"TimesNewRomanPS-ItalicMT\"]=\"Times-Italic\",e.TimesNewRomanPSMT=\"Times-Roman\",e[\"TimesNewRomanPSMT-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPSMT-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPSMT-Italic\"]=\"Times-Italic\"}),n=(0,a.getLookupTableFactory)(function(e){e.Calibri=\"Helvetica\",e[\"Calibri-Bold\"]=\"Helvetica-Bold\",e[\"Calibri-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Calibri-Italic\"]=\"Helvetica-Oblique\",e.CenturyGothic=\"Helvetica\",e[\"CenturyGothic-Bold\"]=\"Helvetica-Bold\",e[\"CenturyGothic-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"CenturyGothic-Italic\"]=\"Helvetica-Oblique\",e.ComicSansMS=\"Comic Sans MS\",e[\"ComicSansMS-Bold\"]=\"Comic Sans MS-Bold\",e[\"ComicSansMS-BoldItalic\"]=\"Comic Sans MS-BoldItalic\",e[\"ComicSansMS-Italic\"]=\"Comic Sans MS-Italic\",e.LucidaConsole=\"Courier\",e[\"LucidaConsole-Bold\"]=\"Courier-Bold\",e[\"LucidaConsole-BoldItalic\"]=\"Courier-BoldOblique\",e[\"LucidaConsole-Italic\"]=\"Courier-Oblique\",e[\"LucidaSans-Demi\"]=\"Helvetica-Bold\",e[\"MS-Gothic\"]=\"MS Gothic\",e[\"MS-Gothic-Bold\"]=\"MS Gothic-Bold\",e[\"MS-Gothic-BoldItalic\"]=\"MS Gothic-BoldItalic\",e[\"MS-Gothic-Italic\"]=\"MS Gothic-Italic\",e[\"MS-Mincho\"]=\"MS Mincho\",e[\"MS-Mincho-Bold\"]=\"MS Mincho-Bold\",e[\"MS-Mincho-BoldItalic\"]=\"MS Mincho-BoldItalic\",e[\"MS-Mincho-Italic\"]=\"MS Mincho-Italic\",e[\"MS-PGothic\"]=\"MS PGothic\",e[\"MS-PGothic-Bold\"]=\"MS PGothic-Bold\",e[\"MS-PGothic-BoldItalic\"]=\"MS PGothic-BoldItalic\",e[\"MS-PGothic-Italic\"]=\"MS PGothic-Italic\",e[\"MS-PMincho\"]=\"MS PMincho\",e[\"MS-PMincho-Bold\"]=\"MS PMincho-Bold\",e[\"MS-PMincho-BoldItalic\"]=\"MS PMincho-BoldItalic\",e[\"MS-PMincho-Italic\"]=\"MS PMincho-Italic\",e.NuptialScript=\"Times-Italic\",e.Wingdings=\"ZapfDingbats\"}),o=(0,a.getLookupTableFactory)(function(e){e[\"Adobe Jenson\"]=!0,e[\"Adobe Text\"]=!0,e.Albertus=!0,e.Aldus=!0,e.Alexandria=!0,e.Algerian=!0,e[\"American Typewriter\"]=!0,e.Antiqua=!0,e.Apex=!0,e.Arno=!0,e.Aster=!0,e.Aurora=!0,e.Baskerville=!0,e.Bell=!0,e.Bembo=!0,e[\"Bembo Schoolbook\"]=!0,e.Benguiat=!0,e[\"Berkeley Old Style\"]=!0,e[\"Bernhard Modern\"]=!0,e[\"Berthold City\"]=!0,e.Bodoni=!0,e[\"Bauer Bodoni\"]=!0,e[\"Book Antiqua\"]=!0,e.Bookman=!0,e[\"Bordeaux Roman\"]=!0,e[\"Californian FB\"]=!0,e.Calisto=!0,e.Calvert=!0,e.Capitals=!0,e.Cambria=!0,e.Cartier=!0,e.Caslon=!0,e.Catull=!0,e.Centaur=!0,e[\"Century Old Style\"]=!0,e[\"Century Schoolbook\"]=!0,e.Chaparral=!0,e[\"Charis SIL\"]=!0,e.Cheltenham=!0,e[\"Cholla Slab\"]=!0,e.Clarendon=!0,e.Clearface=!0,e.Cochin=!0,e.Colonna=!0,e[\"Computer Modern\"]=!0,e[\"Concrete Roman\"]=!0,e.Constantia=!0,e[\"Cooper Black\"]=!0,e.Corona=!0,e.Ecotype=!0,e.Egyptienne=!0,e.Elephant=!0,e.Excelsior=!0,e.Fairfield=!0,e[\"FF Scala\"]=!0,e.Folkard=!0,e.Footlight=!0,e.FreeSerif=!0,e[\"Friz Quadrata\"]=!0,e.Garamond=!0,e.Gentium=!0,e.Georgia=!0,e.Gloucester=!0,e[\"Goudy Old Style\"]=!0,e[\"Goudy Schoolbook\"]=!0,e[\"Goudy Pro Font\"]=!0,e.Granjon=!0,e[\"Guardian Egyptian\"]=!0,e.Heather=!0,e.Hercules=!0,e[\"High Tower Text\"]=!0,e.Hiroshige=!0,e[\"Hoefler Text\"]=!0,e[\"Humana Serif\"]=!0,e.Imprint=!0,e[\"Ionic No. 5\"]=!0,e.Janson=!0,e.Joanna=!0,e.Korinna=!0,e.Lexicon=!0,e[\"Liberation Serif\"]=!0,e[\"Linux Libertine\"]=!0,e.Literaturnaya=!0,e.Lucida=!0,e[\"Lucida Bright\"]=!0,e.Melior=!0,e.Memphis=!0,e.Miller=!0,e.Minion=!0,e.Modern=!0,e[\"Mona Lisa\"]=!0,e[\"Mrs Eaves\"]=!0,e[\"MS Serif\"]=!0,e[\"Museo Slab\"]=!0,e[\"New York\"]=!0,e[\"Nimbus Roman\"]=!0,e[\"NPS Rawlinson Roadway\"]=!0,e.NuptialScript=!0,e.Palatino=!0,e.Perpetua=!0,e.Plantin=!0,e[\"Plantin Schoolbook\"]=!0,e.Playbill=!0,e[\"Poor Richard\"]=!0,e[\"Rawlinson Roadway\"]=!0,e.Renault=!0,e.Requiem=!0,e.Rockwell=!0,e.Roman=!0,e[\"Rotis Serif\"]=!0,e.Sabon=!0,e.Scala=!0,e.Seagull=!0,e.Sistina=!0,e.Souvenir=!0,e.STIX=!0,e[\"Stone Informal\"]=!0,e[\"Stone Serif\"]=!0,e.Sylfaen=!0,e.Times=!0,e.Trajan=!0,e[\"Trinité\"]=!0,e[\"Trump Mediaeval\"]=!0,e.Utopia=!0,e[\"Vale Type\"]=!0,e[\"Bitstream Vera\"]=!0,e[\"Vera Serif\"]=!0,e.Versailles=!0,e.Wanted=!0,e.Weiss=!0,e[\"Wide Latin\"]=!0,e.Windsor=!0,e.XITS=!0}),s=(0,a.getLookupTableFactory)(function(e){e.Dingbats=!0,e.Symbol=!0,e.ZapfDingbats=!0}),c=(0,a.getLookupTableFactory)(function(e){e[2]=10,e[3]=32,e[4]=33,e[5]=34,e[6]=35,e[7]=36,e[8]=37,e[9]=38,e[10]=39,e[11]=40,e[12]=41,e[13]=42,e[14]=43,e[15]=44,e[16]=45,e[17]=46,e[18]=47,e[19]=48,e[20]=49,e[21]=50,e[22]=51,e[23]=52,e[24]=53,e[25]=54,e[26]=55,e[27]=56,e[28]=57,e[29]=58,e[30]=894,e[31]=60,e[32]=61,e[33]=62,e[34]=63,e[35]=64,e[36]=65,e[37]=66,e[38]=67,e[39]=68,e[40]=69,e[41]=70,e[42]=71,e[43]=72,e[44]=73,e[45]=74,e[46]=75,e[47]=76,e[48]=77,e[49]=78,e[50]=79,e[51]=80,e[52]=81,e[53]=82,e[54]=83,e[55]=84,e[56]=85,e[57]=86,e[58]=87,e[59]=88,e[60]=89,e[61]=90,e[62]=91,e[63]=92,e[64]=93,e[65]=94,e[66]=95,e[67]=96,e[68]=97,e[69]=98,e[70]=99,e[71]=100,e[72]=101,e[73]=102,e[74]=103,e[75]=104,e[76]=105,e[77]=106,e[78]=107,e[79]=108,e[80]=109,e[81]=110,e[82]=111,e[83]=112,e[84]=113,e[85]=114,e[86]=115,e[87]=116,e[88]=117,e[89]=118,e[90]=119,e[91]=120,e[92]=121,e[93]=122,e[94]=123,e[95]=124,e[96]=125,e[97]=126,e[98]=196,e[99]=197,e[100]=199,e[101]=201,e[102]=209,e[103]=214,e[104]=220,e[105]=225,e[106]=224,e[107]=226,e[108]=228,e[109]=227,e[110]=229,e[111]=231,e[112]=233,e[113]=232,e[114]=234,e[115]=235,e[116]=237,e[117]=236,e[118]=238,e[119]=239,e[120]=241,e[121]=243,e[122]=242,e[123]=244,e[124]=246,e[125]=245,e[126]=250,e[127]=249,e[128]=251,e[129]=252,e[130]=8224,e[131]=176,e[132]=162,e[133]=163,e[134]=167,e[135]=8226,e[136]=182,e[137]=223,e[138]=174,e[139]=169,e[140]=8482,e[141]=180,e[142]=168,e[143]=8800,e[144]=198,e[145]=216,e[146]=8734,e[147]=177,e[148]=8804,e[149]=8805,e[150]=165,e[151]=181,e[152]=8706,e[153]=8721,e[154]=8719,e[156]=8747,e[157]=170,e[158]=186,e[159]=8486,e[160]=230,e[161]=248,e[162]=191,e[163]=161,e[164]=172,e[165]=8730,e[166]=402,e[167]=8776,e[168]=8710,e[169]=171,e[170]=187,e[171]=8230,e[210]=218,e[223]=711,e[224]=321,e[225]=322,e[227]=353,e[229]=382,e[234]=253,e[252]=263,e[253]=268,e[254]=269,e[258]=258,e[260]=260,e[261]=261,e[265]=280,e[266]=281,e[268]=283,e[269]=313,e[275]=323,e[276]=324,e[278]=328,e[284]=345,e[285]=346,e[286]=347,e[292]=367,e[295]=377,e[296]=378,e[298]=380,e[305]=963,e[306]=964,e[307]=966,e[308]=8215,e[309]=8252,e[310]=8319,e[311]=8359,e[312]=8592,e[313]=8593,e[337]=9552,e[493]=1039,e[494]=1040,e[705]=1524,e[706]=8362,e[710]=64288,e[711]=64298,e[759]=1617,e[761]=1776,e[763]=1778,e[775]=1652,e[777]=1764,e[778]=1780,e[779]=1781,e[780]=1782,e[782]=771,e[783]=64726,e[786]=8363,e[788]=8532,e[790]=768,e[791]=769,e[792]=768,e[795]=803,e[797]=64336,e[798]=64337,e[799]=64342,e[800]=64343,e[801]=64344,e[802]=64345,e[803]=64362,e[804]=64363,e[805]=64364,e[2424]=7821,e[2425]=7822,e[2426]=7823,e[2427]=7824,e[2428]=7825,e[2429]=7826,e[2430]=7827,e[2433]=7682,e[2678]=8045,e[2679]=8046,e[2830]=1552,e[2838]=686,e[2840]=751,e[2842]=753,e[2843]=754,e[2844]=755,e[2846]=757,e[2856]=767,e[2857]=848,e[2858]=849,e[2862]=853,e[2863]=854,e[2864]=855,e[2865]=861,e[2866]=862,e[2906]=7460,e[2908]=7462,e[2909]=7463,e[2910]=7464,e[2912]=7466,e[2913]=7467,e[2914]=7468,e[2916]=7470,e[2917]=7471,e[2918]=7472,e[2920]=7474,e[2921]=7475,e[2922]=7476,e[2924]=7478,e[2925]=7479,e[2926]=7480,e[2928]=7482,e[2929]=7483,e[2930]=7484,e[2932]=7486,e[2933]=7487,e[2934]=7488,e[2936]=7490,e[2937]=7491,e[2938]=7492,e[2940]=7494,e[2941]=7495,e[2942]=7496,e[2944]=7498,e[2946]=7500,e[2948]=7502,e[2950]=7504,e[2951]=7505,e[2952]=7506,e[2954]=7508,e[2955]=7509,e[2956]=7510,e[2958]=7512,e[2959]=7513,e[2960]=7514,e[2962]=7516,e[2963]=7517,e[2964]=7518,e[2966]=7520,e[2967]=7521,e[2968]=7522,e[2970]=7524,e[2971]=7525,e[2972]=7526,e[2974]=7528,e[2975]=7529,e[2976]=7530,e[2978]=1537,e[2979]=1538,e[2980]=1539,e[2982]=1549,e[2983]=1551,e[2984]=1552,e[2986]=1554,e[2987]=1555,e[2988]=1556,e[2990]=1623,e[2991]=1624,e[2995]=1775,e[2999]=1791,e[3002]=64290,e[3003]=64291,e[3004]=64292,e[3006]=64294,e[3007]=64295,e[3008]=64296,e[3011]=1900,e[3014]=8223,e[3015]=8244,e[3017]=7532,e[3018]=7533,e[3019]=7534,e[3075]=7590,e[3076]=7591,e[3079]=7594,e[3080]=7595,e[3083]=7598,e[3084]=7599,e[3087]=7602,e[3088]=7603,e[3091]=7606,e[3092]=7607,e[3095]=7610,e[3096]=7611,e[3099]=7614,e[3100]=7615,e[3103]=7618,e[3104]=7619,e[3107]=8337,e[3108]=8338,e[3116]=1884,e[3119]=1885,e[3120]=1885,e[3123]=1886,e[3124]=1886,e[3127]=1887,e[3128]=1887,e[3131]=1888,e[3132]=1888,e[3135]=1889,e[3136]=1889,e[3139]=1890,e[3140]=1890,e[3143]=1891,e[3144]=1891,e[3147]=1892,e[3148]=1892,e[3153]=580,e[3154]=581,e[3157]=584,e[3158]=585,e[3161]=588,e[3162]=589,e[3165]=891,e[3166]=892,e[3169]=1274,e[3170]=1275,e[3173]=1278,e[3174]=1279,e[3181]=7622,e[3182]=7623,e[3282]=11799,e[3316]=578,e[3379]=42785,e[3393]=1159,e[3416]=8377}),l=(0,a.getLookupTableFactory)(function(e){e[227]=322,e[264]=261,e[291]=346}),h=(0,a.getLookupTableFactory)(function(e){e[1]=32,e[4]=65,e[17]=66,e[18]=67,e[24]=68,e[28]=69,e[38]=70,e[39]=71,e[44]=72,e[47]=73,e[58]=74,e[60]=75,e[62]=76,e[68]=77,e[69]=78,e[75]=79,e[87]=80,e[89]=81,e[90]=82,e[94]=83,e[100]=84,e[104]=85,e[115]=86,e[116]=87,e[121]=88,e[122]=89,e[127]=90,e[258]=97,e[268]=261,e[271]=98,e[272]=99,e[273]=263,e[282]=100,e[286]=101,e[295]=281,e[296]=102,e[336]=103,e[346]=104,e[349]=105,e[361]=106,e[364]=107,e[367]=108,e[371]=322,e[373]=109,e[374]=110,e[381]=111,e[383]=243,e[393]=112,e[395]=113,e[396]=114,e[400]=115,e[401]=347,e[410]=116,e[437]=117,e[448]=118,e[449]=119,e[454]=120,e[455]=121,e[460]=122,e[463]=380,e[853]=44,e[855]=58,e[856]=46,e[876]=47,e[878]=45,e[882]=45,e[894]=40,e[895]=41,e[896]=91,e[897]=93,e[923]=64,e[1004]=48,e[1005]=49,e[1006]=50,e[1007]=51,e[1008]=52,e[1009]=53,e[1010]=54,e[1011]=55,e[1012]=56,e[1013]=57,e[1081]=37,e[1085]=43,e[1086]=45});t.getStdFontMap=i,t.getNonStdFontMap=n,t.getSerifFonts=o,t.getSymbolsFonts=s,t.getGlyphMapForStandardFonts=c,t.getSupplementalGlyphMapForArialBlack=l,t.getSupplementalGlyphMapForCalibri=h},\"./node_modules/pdfjs-dist/lib/core/stream.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/stream.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.LZWStream=t.StringStream=t.StreamsSequenceStream=t.Stream=t.RunLengthStream=t.PredictorStream=t.NullStream=t.FlateStream=t.DecodeStream=t.DecryptStream=t.AsciiHexStream=t.Ascii85Stream=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\"),n=function(){function e(e,t,r,a){this.bytes=e instanceof Uint8Array?e:new Uint8Array(e),this.start=t||0,this.pos=this.start,this.end=t+r||this.bytes.length,this.dict=a}return e.prototype={get length(){return this.end-this.start},get isEmpty(){return 0===this.length},getByte:function(){return this.pos>=this.end?-1:this.bytes[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t=this.bytes,r=this.pos,a=this.end;if(!e)return t.subarray(r,a);var i=r+e;return i>a&&(i=a),this.pos=i,t.subarray(r,i)},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=this.getBytes(e);return this.pos-=t.length,t},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=this.start},moveStart:function(){this.start=this.pos},makeSubStream:function(t,r,a){return new e(this.bytes.buffer,t,r,a)}},e}(),o=function(){function e(e){var t=(0,a.stringToBytes)(e);n.call(this,t)}return e.prototype=n.prototype,e}(),s=function(){var e=new Uint8Array(0);function t(t){if(this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=e,this.minBufferLength=512,t)for(;this.minBufferLength<t;)this.minBufferLength*=2}return t.prototype={get isEmpty(){for(;!this.eof&&0===this.bufferLength;)this.readBlock();return 0===this.bufferLength},ensureBuffer:function(e){var t=this.buffer;if(e<=t.byteLength)return t;for(var r=this.minBufferLength;r<e;)r*=2;var a=new Uint8Array(r);return a.set(t),this.buffer=a},getByte:function(){for(var e=this.pos;this.bufferLength<=e;){if(this.eof)return-1;this.readBlock()}return this.buffer[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t,r=this.pos;if(e){for(this.ensureBuffer(r+e),t=r+e;!this.eof&&this.bufferLength<t;)this.readBlock();var a=this.bufferLength;t>a&&(t=a)}else{for(;!this.eof;)this.readBlock();t=this.bufferLength}return this.pos=t,this.buffer.subarray(r,t)},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=this.getBytes(e);return this.pos-=t.length,t},makeSubStream:function(e,t,r){for(var a=e+t;this.bufferLength<=a&&!this.eof;)this.readBlock();return new n(this.buffer,e,t,r)},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=0},getBaseStreams:function(){return this.str&&this.str.getBaseStreams?this.str.getBaseStreams():[]}},t}(),c=function(){function e(e){this.streams=e,s.call(this,null)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e=this.streams;if(0!==e.length){var t=e.shift().getBytes(),r=this.bufferLength,a=r+t.length;this.ensureBuffer(a).set(t,r),this.bufferLength=a}else this.eof=!0},e.prototype.getBaseStreams=function(){for(var e=[],t=0,r=this.streams.length;t<r;t++){var i=this.streams[t];i.getBaseStreams&&a.Util.appendToArray(e,i.getBaseStreams())}return e},e}(),l=function(){var e=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),t=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),r=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),i=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],n=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];function o(e,t){this.str=e,this.dict=e.dict;var r=e.getByte(),i=e.getByte();if(-1===r||-1===i)throw new a.FormatError(\"Invalid header in flate stream: \"+r+\", \"+i);if(8!=(15&r))throw new a.FormatError(\"Unknown compression method in flate stream: \"+r+\", \"+i);if(((r<<8)+i)%31!=0)throw new a.FormatError(\"Bad FCHECK in flate stream: \"+r+\", \"+i);if(32&i)throw new a.FormatError(\"FDICT bit set in flate stream: \"+r+\", \"+i);this.codeSize=0,this.codeBuf=0,s.call(this,t)}return o.prototype=Object.create(s.prototype),o.prototype.getBits=function(e){for(var t,r=this.str,i=this.codeSize,n=this.codeBuf;i<e;){if(-1===(t=r.getByte()))throw new a.FormatError(\"Bad encoding in flate stream\");n|=t<<i,i+=8}return t=n&(1<<e)-1,this.codeBuf=n>>e,this.codeSize=i-=e,t},o.prototype.getCode=function(e){for(var t,r=this.str,i=e[0],n=e[1],o=this.codeSize,s=this.codeBuf;o<n&&-1!==(t=r.getByte());)s|=t<<o,o+=8;var c=i[s&(1<<n)-1],l=c>>16,h=65535&c;if(l<1||o<l)throw new a.FormatError(\"Bad encoding in flate stream\");return this.codeBuf=s>>l,this.codeSize=o-l,h},o.prototype.generateHuffmanTable=function(e){var t,r=e.length,a=0;for(t=0;t<r;++t)e[t]>a&&(a=e[t]);for(var i=1<<a,n=new Int32Array(i),o=1,s=0,c=2;o<=a;++o,s<<=1,c<<=1)for(var l=0;l<r;++l)if(e[l]===o){var h=0,u=s;for(t=0;t<o;++t)h=h<<1|1&u,u>>=1;for(t=h;t<i;t+=c)n[t]=o<<16|l;++s}return[n,a]},o.prototype.readBlock=function(){var o,s,c=this.str,l=this.getBits(3);if(1&l&&(this.eof=!0),0!==(l>>=1)){var h,u;if(1===l)h=i,u=n;else{if(2!==l)throw new a.FormatError(\"Unknown block type in flate stream\");var d,f=this.getBits(5)+257,g=this.getBits(5)+1,m=this.getBits(4)+4,p=new Uint8Array(e.length);for(d=0;d<m;++d)p[e[d]]=this.getBits(3);var b=this.generateHuffmanTable(p);s=0,d=0;for(var v,y,w,k=f+g,S=new Uint8Array(k);d<k;){var x=this.getCode(b);if(16===x)v=2,y=3,w=s;else if(17===x)v=3,y=3,w=s=0;else{if(18!==x){S[d++]=s=x;continue}v=7,y=11,w=s=0}for(var C=this.getBits(v)+y;C-- >0;)S[d++]=w}h=this.generateHuffmanTable(S.subarray(0,f)),u=this.generateHuffmanTable(S.subarray(f,k))}for(var A=(o=this.buffer)?o.length:0,I=this.bufferLength;;){var F=this.getCode(h);if(F<256)I+1>=A&&(A=(o=this.ensureBuffer(I+1)).length),o[I++]=F;else{if(256===F)return void(this.bufferLength=I);var O=(F=t[F-=257])>>16;O>0&&(O=this.getBits(O)),s=(65535&F)+O,F=this.getCode(u),(O=(F=r[F])>>16)>0&&(O=this.getBits(O));var B=(65535&F)+O;I+s>=A&&(A=(o=this.ensureBuffer(I+s)).length);for(var P=0;P<s;++P,++I)o[I]=o[I-B]}}}else{var T;if(-1===(T=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");var E=T;if(-1===(T=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");if(E|=T<<8,-1===(T=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");var M=T;if(-1===(T=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");if((M|=T<<8)!==(65535&~E)&&(0!==E||0!==M))throw new a.FormatError(\"Bad uncompressed block length in flate stream\");this.codeBuf=0,this.codeSize=0;var D=this.bufferLength;o=this.ensureBuffer(D+E);var R=D+E;if(this.bufferLength=R,0===E)-1===c.peekByte()&&(this.eof=!0);else for(var L=D;L<R;++L){if(-1===(T=c.getByte())){this.eof=!0;break}o[L]=T}}},o}(),h=function(){function e(e,t,r){if(!(0,i.isDict)(r))return e;var n=this.predictor=r.get(\"Predictor\")||1;if(n<=1)return e;if(2!==n&&(n<10||n>15))throw new a.FormatError(\"Unsupported predictor: \"+n);this.readBlock=2===n?this.readBlockTiff:this.readBlockPng,this.str=e,this.dict=e.dict;var o=this.colors=r.get(\"Colors\")||1,c=this.bits=r.get(\"BitsPerComponent\")||8,l=this.columns=r.get(\"Columns\")||1;return this.pixBytes=o*c+7>>3,this.rowBytes=l*o*c+7>>3,s.call(this,t),this}return e.prototype=Object.create(s.prototype),e.prototype.readBlockTiff=function(){var e=this.rowBytes,t=this.bufferLength,r=this.ensureBuffer(t+e),a=this.bits,i=this.colors,n=this.str.getBytes(e);if(this.eof=!n.length,!this.eof){var o,s=0,c=0,l=0,h=0,u=t;if(1===a&&1===i)for(o=0;o<e;++o){var d=n[o]^s;d^=d>>1,d^=d>>2,s=(1&(d^=d>>4))<<7,r[u++]=d}else if(8===a){for(o=0;o<i;++o)r[u++]=n[o];for(;o<e;++o)r[u]=r[u-i]+n[o],u++}else if(16===a){var f=2*i;for(o=0;o<f;++o)r[u++]=n[o];for(;o<e;o+=2){var g=((255&n[o])<<8)+(255&n[o+1])+((255&r[u-f])<<8)+(255&r[u-f+1]);r[u++]=g>>8&255,r[u++]=255&g}}else{var m=new Uint8Array(i+1),p=(1<<a)-1,b=0,v=t,y=this.columns;for(o=0;o<y;++o)for(var w=0;w<i;++w)l<a&&(s=s<<8|255&n[b++],l+=8),m[w]=m[w]+(s>>l-a)&p,l-=a,c=c<<a|m[w],(h+=a)>=8&&(r[v++]=c>>h-8&255,h-=8);h>0&&(r[v++]=(c<<8-h)+(s&(1<<8-h)-1))}this.bufferLength+=e}},e.prototype.readBlockPng=function(){var e=this.rowBytes,t=this.pixBytes,r=this.str.getByte(),i=this.str.getBytes(e);if(this.eof=!i.length,!this.eof){var n=this.bufferLength,o=this.ensureBuffer(n+e),s=o.subarray(n-e,n);0===s.length&&(s=new Uint8Array(e));var c,l,h,u=n;switch(r){case 0:for(c=0;c<e;++c)o[u++]=i[c];break;case 1:for(c=0;c<t;++c)o[u++]=i[c];for(;c<e;++c)o[u]=o[u-t]+i[c]&255,u++;break;case 2:for(c=0;c<e;++c)o[u++]=s[c]+i[c]&255;break;case 3:for(c=0;c<t;++c)o[u++]=(s[c]>>1)+i[c];for(;c<e;++c)o[u]=(s[c]+o[u-t]>>1)+i[c]&255,u++;break;case 4:for(c=0;c<t;++c)l=s[c],h=i[c],o[u++]=l+h;for(;c<e;++c){l=s[c];var d=s[c-t],f=o[u-t],g=f+l-d,m=g-f;m<0&&(m=-m);var p=g-l;p<0&&(p=-p);var b=g-d;b<0&&(b=-b),h=i[c],o[u++]=m<=p&&m<=b?f+h:p<=b?l+h:d+h}break;default:throw new a.FormatError(\"Unsupported predictor: \"+r)}this.bufferLength+=e}},e}(),u=function(){function e(e,t,r){this.str=e,this.dict=e.dict,this.decrypt=r,this.nextChunk=null,this.initialized=!1,s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e;if(this.initialized?e=this.nextChunk:(e=this.str.getBytes(512),this.initialized=!0),e&&0!==e.length){this.nextChunk=this.str.getBytes(512);var t=this.nextChunk&&this.nextChunk.length>0;e=(0,this.decrypt)(e,!t);var r,a=this.bufferLength,i=e.length,n=this.ensureBuffer(a+i);for(r=0;r<i;r++)n[a++]=e[r];this.bufferLength=a}else this.eof=!0},e}(),d=function(){function e(e,t){this.str=e,this.dict=e.dict,this.input=new Uint8Array(5),t&&(t*=.8),s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){for(var e=this.str,t=e.getByte();(0,a.isSpace)(t);)t=e.getByte();if(-1!==t&&126!==t){var r,i,n=this.bufferLength;if(122===t){for(r=this.ensureBuffer(n+4),i=0;i<4;++i)r[n+i]=0;this.bufferLength+=4}else{var o=this.input;for(o[0]=t,i=1;i<5;++i){for(t=e.getByte();(0,a.isSpace)(t);)t=e.getByte();if(o[i]=t,-1===t||126===t)break}if(r=this.ensureBuffer(n+i-1),this.bufferLength+=i-1,i<5){for(;i<5;++i)o[i]=117;this.eof=!0}var s=0;for(i=0;i<5;++i)s=85*s+(o[i]-33);for(i=3;i>=0;--i)r[n+i]=255&s,s>>=8}}else this.eof=!0},e}(),f=function(){function e(e,t){this.str=e,this.dict=e.dict,this.firstDigit=-1,t&&(t*=.5),s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(8e3);if(e.length){for(var t=e.length+1>>1,r=this.ensureBuffer(this.bufferLength+t),a=this.bufferLength,i=this.firstDigit,n=0,o=e.length;n<o;n++){var s,c=e[n];if(c>=48&&c<=57)s=15&c;else{if(!(c>=65&&c<=70||c>=97&&c<=102)){if(62===c){this.eof=!0;break}continue}s=9+(15&c)}i<0?i=s:(r[a++]=i<<4|s,i=-1)}i>=0&&this.eof&&(r[a++]=i<<4,i=-1),this.firstDigit=i,this.bufferLength=a}else this.eof=!0},e}(),g=function(){function e(e,t){this.str=e,this.dict=e.dict,s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(2);if(!e||e.length<2||128===e[0])this.eof=!0;else{var t,r=this.bufferLength,a=e[0];if(a<128){if((t=this.ensureBuffer(r+a+1))[r++]=e[1],a>0){var i=this.str.getBytes(a);t.set(i,r),r+=a}}else{a=257-a;var n=e[1];t=this.ensureBuffer(r+a+1);for(var o=0;o<a;o++)t[r++]=n}this.bufferLength=r}},e}(),m=function(){function e(e,t,r){this.str=e,this.dict=e.dict,this.cachedData=0,this.bitsCached=0;for(var a={earlyChange:r,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(4096),dictionaryLengths:new Uint16Array(4096),dictionaryPrevCodes:new Uint16Array(4096),currentSequence:new Uint8Array(4096),currentSequenceLength:0},i=0;i<256;++i)a.dictionaryValues[i]=i,a.dictionaryLengths[i]=1;this.lzwState=a,s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBits=function(e){for(var t=this.bitsCached,r=this.cachedData;t<e;){var a=this.str.getByte();if(-1===a)return this.eof=!0,null;r=r<<8|a,t+=8}return this.bitsCached=t-=e,this.cachedData=r,this.lastCode=null,r>>>t&(1<<e)-1},e.prototype.readBlock=function(){var e,t,r,a=1024,i=this.lzwState;if(i){var n=i.earlyChange,o=i.nextCode,s=i.dictionaryValues,c=i.dictionaryLengths,l=i.dictionaryPrevCodes,h=i.codeLength,u=i.prevCode,d=i.currentSequence,f=i.currentSequenceLength,g=0,m=this.bufferLength,p=this.ensureBuffer(this.bufferLength+a);for(e=0;e<512;e++){var b=this.readBits(h),v=f>0;if(b<256)d[0]=b,f=1;else{if(!(b>=258)){if(256===b){h=9,o=258,f=0;continue}this.eof=!0,delete this.lzwState;break}if(b<o)for(t=(f=c[b])-1,r=b;t>=0;t--)d[t]=s[r],r=l[r];else d[f++]=d[0]}if(v&&(l[o]=u,c[o]=c[u]+1,s[o]=d[0],h=++o+n&o+n-1?h:0|Math.min(Math.log(o+n)/.6931471805599453+1,12)),u=b,a<(g+=f)){do{a+=512}while(a<g);p=this.ensureBuffer(this.bufferLength+a)}for(t=0;t<f;t++)p[m++]=d[t]}i.nextCode=o,i.codeLength=h,i.prevCode=u,i.currentSequenceLength=f,this.bufferLength=m}},e}(),p=function(){function e(){n.call(this,new Uint8Array(0))}return e.prototype=n.prototype,e}();t.Ascii85Stream=d,t.AsciiHexStream=f,t.DecryptStream=u,t.DecodeStream=s,t.FlateStream=l,t.NullStream=p,t.PredictorStream=h,t.RunLengthStream=g,t.Stream=n,t.StreamsSequenceStream=c,t.StringStream=o,t.LZWStream=m},\"./node_modules/pdfjs-dist/lib/core/type1_parser.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/type1_parser.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Type1Parser=void 0;var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),i=r(/*! ./encodings */\"./node_modules/pdfjs-dist/lib/core/encodings.js\"),n=r(/*! ./stream */\"./node_modules/pdfjs-dist/lib/core/stream.js\"),o=function(){var e=[4],t=[5],r=[6],i=[7],n=[8],o=[12,35],s=[14],c=[21],l=[22],h=[30],u=[31];function d(){this.width=0,this.lsb=0,this.flexing=!1,this.output=[],this.stack=[]}return d.prototype={convert:function(d,f,g){for(var m,p,b,v=d.length,y=!1,w=0;w<v;w++){var k=d[w];if(k<32){switch(12===k&&(k=(k<<8)+d[++w]),k){case 1:case 3:this.stack=[];break;case 4:if(this.flexing){if(this.stack.length<1){y=!0;break}var S=this.stack.pop();this.stack.push(0,S);break}y=this.executeCommand(1,e);break;case 5:y=this.executeCommand(2,t);break;case 6:y=this.executeCommand(1,r);break;case 7:y=this.executeCommand(1,i);break;case 8:y=this.executeCommand(6,n);break;case 9:this.stack=[];break;case 10:if(this.stack.length<1){y=!0;break}if(!f[b=this.stack.pop()]){y=!0;break}y=this.convert(f[b],f,g);break;case 11:return y;case 13:if(this.stack.length<2){y=!0;break}m=this.stack.pop(),p=this.stack.pop(),this.lsb=p,this.width=m,this.stack.push(m,p),y=this.executeCommand(2,l);break;case 14:this.output.push(s[0]);break;case 21:if(this.flexing)break;y=this.executeCommand(2,c);break;case 22:if(this.flexing){this.stack.push(0);break}y=this.executeCommand(1,l);break;case 30:y=this.executeCommand(4,h);break;case 31:y=this.executeCommand(4,u);break;case 3072:case 3073:case 3074:this.stack=[];break;case 3078:g?(this.seac=this.stack.splice(-4,4),y=this.executeCommand(0,s)):y=this.executeCommand(4,s);break;case 3079:if(this.stack.length<4){y=!0;break}this.stack.pop(),m=this.stack.pop();var x=this.stack.pop();p=this.stack.pop(),this.lsb=p,this.width=m,this.stack.push(m,p,x),y=this.executeCommand(3,c);break;case 3084:if(this.stack.length<2){y=!0;break}var C=this.stack.pop(),A=this.stack.pop();this.stack.push(A/C);break;case 3088:if(this.stack.length<2){y=!0;break}b=this.stack.pop();var I=this.stack.pop();if(0===b&&3===I){var F=this.stack.splice(this.stack.length-17,17);this.stack.push(F[2]+F[0],F[3]+F[1],F[4],F[5],F[6],F[7],F[8],F[9],F[10],F[11],F[12],F[13],F[14]),y=this.executeCommand(13,o,!0),this.flexing=!1,this.stack.push(F[15],F[16])}else 1===b&&0===I&&(this.flexing=!0);break;case 3089:break;case 3105:this.stack=[];break;default:(0,a.warn)('Unknown type 1 charstring command of \"'+k+'\"')}if(y)break}else k<=246?k-=139:k=k<=250?256*(k-247)+d[++w]+108:k<=254?-256*(k-251)-d[++w]-108:(255&d[++w])<<24|(255&d[++w])<<16|(255&d[++w])<<8|(255&d[++w])<<0,this.stack.push(k)}return y},executeCommand:function(e,t,r){var a=this.stack.length;if(e>a)return!0;for(var i=a-e,n=i;n<a;n++){var o=this.stack[n];Number.isInteger(o)?this.output.push(28,o>>8&255,255&o):(o=65536*o|0,this.output.push(255,o>>24&255,o>>16&255,o>>8&255,255&o))}return this.output.push.apply(this.output,t),r?this.stack.splice(i,e):this.stack.length=0,!1}},d}(),s=function(){var e=55665;function t(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function r(e,t,r){if(r>=e.length)return new Uint8Array(0);var a,i,n=0|t;for(a=0;a<r;a++)n=52845*(e[a]+n)+22719&65535;var o=e.length-r,s=new Uint8Array(o);for(a=r,i=0;i<o;a++,i++){var c=e[a];s[i]=c^n>>8,n=52845*(c+n)+22719&65535}return s}function s(e){return 47===e||91===e||93===e||123===e||125===e||40===e||41===e}function c(a,i,o){if(i){var s=a.getBytes(),c=!(t(s[0])&&t(s[1])&&t(s[2])&&t(s[3]));a=new n.Stream(c?r(s,e,4):function(e,r,a){var i,n,o=0|r,s=e.length,c=new Uint8Array(s>>>1);for(i=0,n=0;i<s;i++){var l=e[i];if(t(l)){var h;for(i++;i<s&&!t(h=e[i]);)i++;if(i<s){var u=parseInt(String.fromCharCode(l,h),16);c[n++]=u^o>>8,o=52845*(u+o)+22719&65535}}}return Array.prototype.slice.call(c,a,n)}(s,e,4))}this.seacAnalysisEnabled=!!o,this.stream=a,this.nextChar()}return c.prototype={readNumberArray:function(){this.getToken();for(var e=[];;){var t=this.getToken();if(null===t||\"]\"===t||\"}\"===t)break;e.push(parseFloat(t||0))}return e},readNumber:function(){var e=this.getToken();return parseFloat(e||0)},readInt:function(){var e=this.getToken();return 0|parseInt(e||0,10)},readBoolean:function(){return\"true\"===this.getToken()?1:0},nextChar:function(){return this.currentChar=this.stream.getByte()},getToken:function(){for(var e=!1,t=this.currentChar;;){if(-1===t)return null;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,a.isSpace)(t))break;t=this.nextChar()}if(s(t))return this.nextChar(),String.fromCharCode(t);var r=\"\";do{r+=String.fromCharCode(t),t=this.nextChar()}while(t>=0&&!(0,a.isSpace)(t)&&!s(t));return r},readCharStrings:function(e,t){return-1===t?e:r(e,4330,t)},extractFontProgram:function(){var e=this.stream,t=[],r=[],a=Object.create(null);a.lenIV=4;for(var i,n,s,c,l,h={subrs:[],charstrings:[],properties:{privateData:a}};null!==(i=this.getToken());)if(\"/\"===i)switch(i=this.getToken()){case\"CharStrings\":for(this.getToken(),this.getToken(),this.getToken(),this.getToken();null!==(i=this.getToken())&&\"end\"!==i;)if(\"/\"===i){var u=this.getToken();n=this.readInt(),this.getToken(),s=e.makeSubStream(e.pos,n),c=h.properties.privateData.lenIV,l=this.readCharStrings(s.getBytes(),c),e.skip(n),this.nextChar(),\"noaccess\"===(i=this.getToken())&&this.getToken(),r.push({glyph:u,encoded:l})}break;case\"Subrs\":for(this.readInt(),this.getToken();\"dup\"===this.getToken();){var d=this.readInt();n=this.readInt(),this.getToken(),s=e.makeSubStream(e.pos,n),c=h.properties.privateData.lenIV,l=this.readCharStrings(s.getBytes(),c),e.skip(n),this.nextChar(),\"noaccess\"===(i=this.getToken())&&this.getToken(),t[d]=l}break;case\"BlueValues\":case\"OtherBlues\":case\"FamilyBlues\":case\"FamilyOtherBlues\":var f=this.readNumberArray();f.length>0&&f.length,0;break;case\"StemSnapH\":case\"StemSnapV\":h.properties.privateData[i]=this.readNumberArray();break;case\"StdHW\":case\"StdVW\":h.properties.privateData[i]=this.readNumberArray()[0];break;case\"BlueShift\":case\"lenIV\":case\"BlueFuzz\":case\"BlueScale\":case\"LanguageGroup\":case\"ExpansionFactor\":h.properties.privateData[i]=this.readNumber();break;case\"ForceBold\":h.properties.privateData[i]=this.readBoolean()}for(var g=0;g<r.length;g++){u=r[g].glyph,l=r[g].encoded;var m=new o,p=m.convert(l,t,this.seacAnalysisEnabled),b=m.output;p&&(b=[14]),h.charstrings.push({glyphName:u,charstring:b,width:m.width,lsb:m.lsb,seac:m.seac})}return h},extractFontHeader:function(e){for(var t;null!==(t=this.getToken());)if(\"/\"===t)switch(t=this.getToken()){case\"FontMatrix\":var r=this.readNumberArray();e.fontMatrix=r;break;case\"Encoding\":var a,n=this.getToken();if(/^\\d+$/.test(n)){a=[];var o=0|parseInt(n,10);this.getToken();for(var s=0;s<o;s++){for(t=this.getToken();\"dup\"!==t&&\"def\"!==t;)if(null===(t=this.getToken()))return;if(\"def\"===t)break;var c=this.readInt();this.getToken();var l=this.getToken();a[c]=l,this.getToken()}}else a=(0,i.getEncoding)(n);e.builtInEncoding=a;break;case\"FontBBox\":var h=this.readNumberArray();e.ascent=Math.max(h[3],h[1]),e.descent=Math.min(h[1],h[3]),e.ascentScaled=!0}}},c}();t.Type1Parser=s},\"./node_modules/pdfjs-dist/lib/core/unicode.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/unicode.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";var a=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\").getLookupTableFactory,i=a(function(e){e[63721]=169,e[63193]=169,e[63720]=174,e[63194]=174,e[63722]=8482,e[63195]=8482,e[63729]=9127,e[63730]=9128,e[63731]=9129,e[63740]=9131,e[63741]=9132,e[63742]=9133,e[63726]=9121,e[63727]=9122,e[63728]=9123,e[63737]=9124,e[63738]=9125,e[63739]=9126,e[63723]=9115,e[63724]=9116,e[63725]=9117,e[63734]=9118,e[63735]=9119,e[63736]=9120});var n=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];var o=a(function(e){e[\"¨\"]=\" ̈\",e[\"¯\"]=\" ̄\",e[\"´\"]=\" ́\",e[\"µ\"]=\"μ\",e[\"¸\"]=\" ̧\",e[\"Ĳ\"]=\"IJ\",e[\"ĳ\"]=\"ij\",e[\"Ŀ\"]=\"L·\",e[\"ŀ\"]=\"l·\",e[\"ŉ\"]=\"ʼn\",e[\"ſ\"]=\"s\",e[\"Ǆ\"]=\"DŽ\",e[\"ǅ\"]=\"Dž\",e[\"ǆ\"]=\"dž\",e[\"Ǉ\"]=\"LJ\",e[\"ǈ\"]=\"Lj\",e[\"ǉ\"]=\"lj\",e[\"Ǌ\"]=\"NJ\",e[\"ǋ\"]=\"Nj\",e[\"ǌ\"]=\"nj\",e[\"Ǳ\"]=\"DZ\",e[\"ǲ\"]=\"Dz\",e[\"ǳ\"]=\"dz\",e[\"˘\"]=\" ̆\",e[\"˙\"]=\" ̇\",e[\"˚\"]=\" ̊\",e[\"˛\"]=\" ̨\",e[\"˜\"]=\" ̃\",e[\"˝\"]=\" ̋\",e[\"ͺ\"]=\" ͅ\",e[\"΄\"]=\" ́\",e[\"ϐ\"]=\"β\",e[\"ϑ\"]=\"θ\",e[\"ϒ\"]=\"Υ\",e[\"ϕ\"]=\"φ\",e[\"ϖ\"]=\"π\",e[\"ϰ\"]=\"κ\",e[\"ϱ\"]=\"ρ\",e[\"ϲ\"]=\"ς\",e[\"ϴ\"]=\"Θ\",e[\"ϵ\"]=\"ε\",e[\"Ϲ\"]=\"Σ\",e[\"և\"]=\"եւ\",e[\"ٵ\"]=\"اٴ\",e[\"ٶ\"]=\"وٴ\",e[\"ٷ\"]=\"ۇٴ\",e[\"ٸ\"]=\"يٴ\",e[\"ำ\"]=\"ํา\",e[\"ຳ\"]=\"ໍາ\",e[\"ໜ\"]=\"ຫນ\",e[\"ໝ\"]=\"ຫມ\",e[\"ཷ\"]=\"ྲཱྀ\",e[\"ཹ\"]=\"ླཱྀ\",e[\"ẚ\"]=\"aʾ\",e[\"᾽\"]=\" ̓\",e[\"᾿\"]=\" ̓\",e[\"῀\"]=\" ͂\",e[\"῾\"]=\" ̔\",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\"‗\"]=\" ̳\",e[\"․\"]=\".\",e[\"‥\"]=\"..\",e[\"…\"]=\"...\",e[\"″\"]=\"′′\",e[\"‴\"]=\"′′′\",e[\"‶\"]=\"‵‵\",e[\"‷\"]=\"‵‵‵\",e[\"‼\"]=\"!!\",e[\"‾\"]=\" ̅\",e[\"⁇\"]=\"??\",e[\"⁈\"]=\"?!\",e[\"⁉\"]=\"!?\",e[\"⁗\"]=\"′′′′\",e[\" \"]=\" \",e[\"₨\"]=\"Rs\",e[\"℀\"]=\"a/c\",e[\"℁\"]=\"a/s\",e[\"℃\"]=\"°C\",e[\"℅\"]=\"c/o\",e[\"℆\"]=\"c/u\",e[\"ℇ\"]=\"Ɛ\",e[\"℉\"]=\"°F\",e[\"№\"]=\"No\",e[\"℡\"]=\"TEL\",e[\"ℵ\"]=\"א\",e[\"ℶ\"]=\"ב\",e[\"ℷ\"]=\"ג\",e[\"ℸ\"]=\"ד\",e[\"℻\"]=\"FAX\",e[\"Ⅰ\"]=\"I\",e[\"Ⅱ\"]=\"II\",e[\"Ⅲ\"]=\"III\",e[\"Ⅳ\"]=\"IV\",e[\"Ⅴ\"]=\"V\",e[\"Ⅵ\"]=\"VI\",e[\"Ⅶ\"]=\"VII\",e[\"Ⅷ\"]=\"VIII\",e[\"Ⅸ\"]=\"IX\",e[\"Ⅹ\"]=\"X\",e[\"Ⅺ\"]=\"XI\",e[\"Ⅻ\"]=\"XII\",e[\"Ⅼ\"]=\"L\",e[\"Ⅽ\"]=\"C\",e[\"Ⅾ\"]=\"D\",e[\"Ⅿ\"]=\"M\",e[\"ⅰ\"]=\"i\",e[\"ⅱ\"]=\"ii\",e[\"ⅲ\"]=\"iii\",e[\"ⅳ\"]=\"iv\",e[\"ⅴ\"]=\"v\",e[\"ⅵ\"]=\"vi\",e[\"ⅶ\"]=\"vii\",e[\"ⅷ\"]=\"viii\",e[\"ⅸ\"]=\"ix\",e[\"ⅹ\"]=\"x\",e[\"ⅺ\"]=\"xi\",e[\"ⅻ\"]=\"xii\",e[\"ⅼ\"]=\"l\",e[\"ⅽ\"]=\"c\",e[\"ⅾ\"]=\"d\",e[\"ⅿ\"]=\"m\",e[\"∬\"]=\"∫∫\",e[\"∭\"]=\"∫∫∫\",e[\"∯\"]=\"∮∮\",e[\"∰\"]=\"∮∮∮\",e[\"⑴\"]=\"(1)\",e[\"⑵\"]=\"(2)\",e[\"⑶\"]=\"(3)\",e[\"⑷\"]=\"(4)\",e[\"⑸\"]=\"(5)\",e[\"⑹\"]=\"(6)\",e[\"⑺\"]=\"(7)\",e[\"⑻\"]=\"(8)\",e[\"⑼\"]=\"(9)\",e[\"⑽\"]=\"(10)\",e[\"⑾\"]=\"(11)\",e[\"⑿\"]=\"(12)\",e[\"⒀\"]=\"(13)\",e[\"⒁\"]=\"(14)\",e[\"⒂\"]=\"(15)\",e[\"⒃\"]=\"(16)\",e[\"⒄\"]=\"(17)\",e[\"⒅\"]=\"(18)\",e[\"⒆\"]=\"(19)\",e[\"⒇\"]=\"(20)\",e[\"⒈\"]=\"1.\",e[\"⒉\"]=\"2.\",e[\"⒊\"]=\"3.\",e[\"⒋\"]=\"4.\",e[\"⒌\"]=\"5.\",e[\"⒍\"]=\"6.\",e[\"⒎\"]=\"7.\",e[\"⒏\"]=\"8.\",e[\"⒐\"]=\"9.\",e[\"⒑\"]=\"10.\",e[\"⒒\"]=\"11.\",e[\"⒓\"]=\"12.\",e[\"⒔\"]=\"13.\",e[\"⒕\"]=\"14.\",e[\"⒖\"]=\"15.\",e[\"⒗\"]=\"16.\",e[\"⒘\"]=\"17.\",e[\"⒙\"]=\"18.\",e[\"⒚\"]=\"19.\",e[\"⒛\"]=\"20.\",e[\"⒜\"]=\"(a)\",e[\"⒝\"]=\"(b)\",e[\"⒞\"]=\"(c)\",e[\"⒟\"]=\"(d)\",e[\"⒠\"]=\"(e)\",e[\"⒡\"]=\"(f)\",e[\"⒢\"]=\"(g)\",e[\"⒣\"]=\"(h)\",e[\"⒤\"]=\"(i)\",e[\"⒥\"]=\"(j)\",e[\"⒦\"]=\"(k)\",e[\"⒧\"]=\"(l)\",e[\"⒨\"]=\"(m)\",e[\"⒩\"]=\"(n)\",e[\"⒪\"]=\"(o)\",e[\"⒫\"]=\"(p)\",e[\"⒬\"]=\"(q)\",e[\"⒭\"]=\"(r)\",e[\"⒮\"]=\"(s)\",e[\"⒯\"]=\"(t)\",e[\"⒰\"]=\"(u)\",e[\"⒱\"]=\"(v)\",e[\"⒲\"]=\"(w)\",e[\"⒳\"]=\"(x)\",e[\"⒴\"]=\"(y)\",e[\"⒵\"]=\"(z)\",e[\"⨌\"]=\"∫∫∫∫\",e[\"⩴\"]=\"::=\",e[\"⩵\"]=\"==\",e[\"⩶\"]=\"===\",e[\"⺟\"]=\"母\",e[\"⻳\"]=\"龟\",e[\"⼀\"]=\"一\",e[\"⼁\"]=\"丨\",e[\"⼂\"]=\"丶\",e[\"⼃\"]=\"丿\",e[\"⼄\"]=\"乙\",e[\"⼅\"]=\"亅\",e[\"⼆\"]=\"二\",e[\"⼇\"]=\"亠\",e[\"⼈\"]=\"人\",e[\"⼉\"]=\"儿\",e[\"⼊\"]=\"入\",e[\"⼋\"]=\"八\",e[\"⼌\"]=\"冂\",e[\"⼍\"]=\"冖\",e[\"⼎\"]=\"冫\",e[\"⼏\"]=\"几\",e[\"⼐\"]=\"凵\",e[\"⼑\"]=\"刀\",e[\"⼒\"]=\"力\",e[\"⼓\"]=\"勹\",e[\"⼔\"]=\"匕\",e[\"⼕\"]=\"匚\",e[\"⼖\"]=\"匸\",e[\"⼗\"]=\"十\",e[\"⼘\"]=\"卜\",e[\"⼙\"]=\"卩\",e[\"⼚\"]=\"厂\",e[\"⼛\"]=\"厶\",e[\"⼜\"]=\"又\",e[\"⼝\"]=\"口\",e[\"⼞\"]=\"囗\",e[\"⼟\"]=\"土\",e[\"⼠\"]=\"士\",e[\"⼡\"]=\"夂\",e[\"⼢\"]=\"夊\",e[\"⼣\"]=\"夕\",e[\"⼤\"]=\"大\",e[\"⼥\"]=\"女\",e[\"⼦\"]=\"子\",e[\"⼧\"]=\"宀\",e[\"⼨\"]=\"寸\",e[\"⼩\"]=\"小\",e[\"⼪\"]=\"尢\",e[\"⼫\"]=\"尸\",e[\"⼬\"]=\"屮\",e[\"⼭\"]=\"山\",e[\"⼮\"]=\"巛\",e[\"⼯\"]=\"工\",e[\"⼰\"]=\"己\",e[\"⼱\"]=\"巾\",e[\"⼲\"]=\"干\",e[\"⼳\"]=\"幺\",e[\"⼴\"]=\"广\",e[\"⼵\"]=\"廴\",e[\"⼶\"]=\"廾\",e[\"⼷\"]=\"弋\",e[\"⼸\"]=\"弓\",e[\"⼹\"]=\"彐\",e[\"⼺\"]=\"彡\",e[\"⼻\"]=\"彳\",e[\"⼼\"]=\"心\",e[\"⼽\"]=\"戈\",e[\"⼾\"]=\"戶\",e[\"⼿\"]=\"手\",e[\"⽀\"]=\"支\",e[\"⽁\"]=\"攴\",e[\"⽂\"]=\"文\",e[\"⽃\"]=\"斗\",e[\"⽄\"]=\"斤\",e[\"⽅\"]=\"方\",e[\"⽆\"]=\"无\",e[\"⽇\"]=\"日\",e[\"⽈\"]=\"曰\",e[\"⽉\"]=\"月\",e[\"⽊\"]=\"木\",e[\"⽋\"]=\"欠\",e[\"⽌\"]=\"止\",e[\"⽍\"]=\"歹\",e[\"⽎\"]=\"殳\",e[\"⽏\"]=\"毋\",e[\"⽐\"]=\"比\",e[\"⽑\"]=\"毛\",e[\"⽒\"]=\"氏\",e[\"⽓\"]=\"气\",e[\"⽔\"]=\"水\",e[\"⽕\"]=\"火\",e[\"⽖\"]=\"爪\",e[\"⽗\"]=\"父\",e[\"⽘\"]=\"爻\",e[\"⽙\"]=\"爿\",e[\"⽚\"]=\"片\",e[\"⽛\"]=\"牙\",e[\"⽜\"]=\"牛\",e[\"⽝\"]=\"犬\",e[\"⽞\"]=\"玄\",e[\"⽟\"]=\"玉\",e[\"⽠\"]=\"瓜\",e[\"⽡\"]=\"瓦\",e[\"⽢\"]=\"甘\",e[\"⽣\"]=\"生\",e[\"⽤\"]=\"用\",e[\"⽥\"]=\"田\",e[\"⽦\"]=\"疋\",e[\"⽧\"]=\"疒\",e[\"⽨\"]=\"癶\",e[\"⽩\"]=\"白\",e[\"⽪\"]=\"皮\",e[\"⽫\"]=\"皿\",e[\"⽬\"]=\"目\",e[\"⽭\"]=\"矛\",e[\"⽮\"]=\"矢\",e[\"⽯\"]=\"石\",e[\"⽰\"]=\"示\",e[\"⽱\"]=\"禸\",e[\"⽲\"]=\"禾\",e[\"⽳\"]=\"穴\",e[\"⽴\"]=\"立\",e[\"⽵\"]=\"竹\",e[\"⽶\"]=\"米\",e[\"⽷\"]=\"糸\",e[\"⽸\"]=\"缶\",e[\"⽹\"]=\"网\",e[\"⽺\"]=\"羊\",e[\"⽻\"]=\"羽\",e[\"⽼\"]=\"老\",e[\"⽽\"]=\"而\",e[\"⽾\"]=\"耒\",e[\"⽿\"]=\"耳\",e[\"⾀\"]=\"聿\",e[\"⾁\"]=\"肉\",e[\"⾂\"]=\"臣\",e[\"⾃\"]=\"自\",e[\"⾄\"]=\"至\",e[\"⾅\"]=\"臼\",e[\"⾆\"]=\"舌\",e[\"⾇\"]=\"舛\",e[\"⾈\"]=\"舟\",e[\"⾉\"]=\"艮\",e[\"⾊\"]=\"色\",e[\"⾋\"]=\"艸\",e[\"⾌\"]=\"虍\",e[\"⾍\"]=\"虫\",e[\"⾎\"]=\"血\",e[\"⾏\"]=\"行\",e[\"⾐\"]=\"衣\",e[\"⾑\"]=\"襾\",e[\"⾒\"]=\"見\",e[\"⾓\"]=\"角\",e[\"⾔\"]=\"言\",e[\"⾕\"]=\"谷\",e[\"⾖\"]=\"豆\",e[\"⾗\"]=\"豕\",e[\"⾘\"]=\"豸\",e[\"⾙\"]=\"貝\",e[\"⾚\"]=\"赤\",e[\"⾛\"]=\"走\",e[\"⾜\"]=\"足\",e[\"⾝\"]=\"身\",e[\"⾞\"]=\"車\",e[\"⾟\"]=\"辛\",e[\"⾠\"]=\"辰\",e[\"⾡\"]=\"辵\",e[\"⾢\"]=\"邑\",e[\"⾣\"]=\"酉\",e[\"⾤\"]=\"釆\",e[\"⾥\"]=\"里\",e[\"⾦\"]=\"金\",e[\"⾧\"]=\"長\",e[\"⾨\"]=\"門\",e[\"⾩\"]=\"阜\",e[\"⾪\"]=\"隶\",e[\"⾫\"]=\"隹\",e[\"⾬\"]=\"雨\",e[\"⾭\"]=\"靑\",e[\"⾮\"]=\"非\",e[\"⾯\"]=\"面\",e[\"⾰\"]=\"革\",e[\"⾱\"]=\"韋\",e[\"⾲\"]=\"韭\",e[\"⾳\"]=\"音\",e[\"⾴\"]=\"頁\",e[\"⾵\"]=\"風\",e[\"⾶\"]=\"飛\",e[\"⾷\"]=\"食\",e[\"⾸\"]=\"首\",e[\"⾹\"]=\"香\",e[\"⾺\"]=\"馬\",e[\"⾻\"]=\"骨\",e[\"⾼\"]=\"高\",e[\"⾽\"]=\"髟\",e[\"⾾\"]=\"鬥\",e[\"⾿\"]=\"鬯\",e[\"⿀\"]=\"鬲\",e[\"⿁\"]=\"鬼\",e[\"⿂\"]=\"魚\",e[\"⿃\"]=\"鳥\",e[\"⿄\"]=\"鹵\",e[\"⿅\"]=\"鹿\",e[\"⿆\"]=\"麥\",e[\"⿇\"]=\"麻\",e[\"⿈\"]=\"黃\",e[\"⿉\"]=\"黍\",e[\"⿊\"]=\"黑\",e[\"⿋\"]=\"黹\",e[\"⿌\"]=\"黽\",e[\"⿍\"]=\"鼎\",e[\"⿎\"]=\"鼓\",e[\"⿏\"]=\"鼠\",e[\"⿐\"]=\"鼻\",e[\"⿑\"]=\"齊\",e[\"⿒\"]=\"齒\",e[\"⿓\"]=\"龍\",e[\"⿔\"]=\"龜\",e[\"⿕\"]=\"龠\",e[\"〶\"]=\"〒\",e[\"〸\"]=\"十\",e[\"〹\"]=\"卄\",e[\"〺\"]=\"卅\",e[\"゛\"]=\" ゙\",e[\"゜\"]=\" ゚\",e[\"ㄱ\"]=\"ᄀ\",e[\"ㄲ\"]=\"ᄁ\",e[\"ㄳ\"]=\"ᆪ\",e[\"ㄴ\"]=\"ᄂ\",e[\"ㄵ\"]=\"ᆬ\",e[\"ㄶ\"]=\"ᆭ\",e[\"ㄷ\"]=\"ᄃ\",e[\"ㄸ\"]=\"ᄄ\",e[\"ㄹ\"]=\"ᄅ\",e[\"ㄺ\"]=\"ᆰ\",e[\"ㄻ\"]=\"ᆱ\",e[\"ㄼ\"]=\"ᆲ\",e[\"ㄽ\"]=\"ᆳ\",e[\"ㄾ\"]=\"ᆴ\",e[\"ㄿ\"]=\"ᆵ\",e[\"ㅀ\"]=\"ᄚ\",e[\"ㅁ\"]=\"ᄆ\",e[\"ㅂ\"]=\"ᄇ\",e[\"ㅃ\"]=\"ᄈ\",e[\"ㅄ\"]=\"ᄡ\",e[\"ㅅ\"]=\"ᄉ\",e[\"ㅆ\"]=\"ᄊ\",e[\"ㅇ\"]=\"ᄋ\",e[\"ㅈ\"]=\"ᄌ\",e[\"ㅉ\"]=\"ᄍ\",e[\"ㅊ\"]=\"ᄎ\",e[\"ㅋ\"]=\"ᄏ\",e[\"ㅌ\"]=\"ᄐ\",e[\"ㅍ\"]=\"ᄑ\",e[\"ㅎ\"]=\"ᄒ\",e[\"ㅏ\"]=\"ᅡ\",e[\"ㅐ\"]=\"ᅢ\",e[\"ㅑ\"]=\"ᅣ\",e[\"ㅒ\"]=\"ᅤ\",e[\"ㅓ\"]=\"ᅥ\",e[\"ㅔ\"]=\"ᅦ\",e[\"ㅕ\"]=\"ᅧ\",e[\"ㅖ\"]=\"ᅨ\",e[\"ㅗ\"]=\"ᅩ\",e[\"ㅘ\"]=\"ᅪ\",e[\"ㅙ\"]=\"ᅫ\",e[\"ㅚ\"]=\"ᅬ\",e[\"ㅛ\"]=\"ᅭ\",e[\"ㅜ\"]=\"ᅮ\",e[\"ㅝ\"]=\"ᅯ\",e[\"ㅞ\"]=\"ᅰ\",e[\"ㅟ\"]=\"ᅱ\",e[\"ㅠ\"]=\"ᅲ\",e[\"ㅡ\"]=\"ᅳ\",e[\"ㅢ\"]=\"ᅴ\",e[\"ㅣ\"]=\"ᅵ\",e[\"ㅤ\"]=\"ᅠ\",e[\"ㅥ\"]=\"ᄔ\",e[\"ㅦ\"]=\"ᄕ\",e[\"ㅧ\"]=\"ᇇ\",e[\"ㅨ\"]=\"ᇈ\",e[\"ㅩ\"]=\"ᇌ\",e[\"ㅪ\"]=\"ᇎ\",e[\"ㅫ\"]=\"ᇓ\",e[\"ㅬ\"]=\"ᇗ\",e[\"ㅭ\"]=\"ᇙ\",e[\"ㅮ\"]=\"ᄜ\",e[\"ㅯ\"]=\"ᇝ\",e[\"ㅰ\"]=\"ᇟ\",e[\"ㅱ\"]=\"ᄝ\",e[\"ㅲ\"]=\"ᄞ\",e[\"ㅳ\"]=\"ᄠ\",e[\"ㅴ\"]=\"ᄢ\",e[\"ㅵ\"]=\"ᄣ\",e[\"ㅶ\"]=\"ᄧ\",e[\"ㅷ\"]=\"ᄩ\",e[\"ㅸ\"]=\"ᄫ\",e[\"ㅹ\"]=\"ᄬ\",e[\"ㅺ\"]=\"ᄭ\",e[\"ㅻ\"]=\"ᄮ\",e[\"ㅼ\"]=\"ᄯ\",e[\"ㅽ\"]=\"ᄲ\",e[\"ㅾ\"]=\"ᄶ\",e[\"ㅿ\"]=\"ᅀ\",e[\"ㆀ\"]=\"ᅇ\",e[\"ㆁ\"]=\"ᅌ\",e[\"ㆂ\"]=\"ᇱ\",e[\"ㆃ\"]=\"ᇲ\",e[\"ㆄ\"]=\"ᅗ\",e[\"ㆅ\"]=\"ᅘ\",e[\"ㆆ\"]=\"ᅙ\",e[\"ㆇ\"]=\"ᆄ\",e[\"ㆈ\"]=\"ᆅ\",e[\"ㆉ\"]=\"ᆈ\",e[\"ㆊ\"]=\"ᆑ\",e[\"ㆋ\"]=\"ᆒ\",e[\"ㆌ\"]=\"ᆔ\",e[\"ㆍ\"]=\"ᆞ\",e[\"ㆎ\"]=\"ᆡ\",e[\"㈀\"]=\"(ᄀ)\",e[\"㈁\"]=\"(ᄂ)\",e[\"㈂\"]=\"(ᄃ)\",e[\"㈃\"]=\"(ᄅ)\",e[\"㈄\"]=\"(ᄆ)\",e[\"㈅\"]=\"(ᄇ)\",e[\"㈆\"]=\"(ᄉ)\",e[\"㈇\"]=\"(ᄋ)\",e[\"㈈\"]=\"(ᄌ)\",e[\"㈉\"]=\"(ᄎ)\",e[\"㈊\"]=\"(ᄏ)\",e[\"㈋\"]=\"(ᄐ)\",e[\"㈌\"]=\"(ᄑ)\",e[\"㈍\"]=\"(ᄒ)\",e[\"㈎\"]=\"(가)\",e[\"㈏\"]=\"(나)\",e[\"㈐\"]=\"(다)\",e[\"㈑\"]=\"(라)\",e[\"㈒\"]=\"(마)\",e[\"㈓\"]=\"(바)\",e[\"㈔\"]=\"(사)\",e[\"㈕\"]=\"(아)\",e[\"㈖\"]=\"(자)\",e[\"㈗\"]=\"(차)\",e[\"㈘\"]=\"(카)\",e[\"㈙\"]=\"(타)\",e[\"㈚\"]=\"(파)\",e[\"㈛\"]=\"(하)\",e[\"㈜\"]=\"(주)\",e[\"㈝\"]=\"(오전)\",e[\"㈞\"]=\"(오후)\",e[\"㈠\"]=\"(一)\",e[\"㈡\"]=\"(二)\",e[\"㈢\"]=\"(三)\",e[\"㈣\"]=\"(四)\",e[\"㈤\"]=\"(五)\",e[\"㈥\"]=\"(六)\",e[\"㈦\"]=\"(七)\",e[\"㈧\"]=\"(八)\",e[\"㈨\"]=\"(九)\",e[\"㈩\"]=\"(十)\",e[\"㈪\"]=\"(月)\",e[\"㈫\"]=\"(火)\",e[\"㈬\"]=\"(水)\",e[\"㈭\"]=\"(木)\",e[\"㈮\"]=\"(金)\",e[\"㈯\"]=\"(土)\",e[\"㈰\"]=\"(日)\",e[\"㈱\"]=\"(株)\",e[\"㈲\"]=\"(有)\",e[\"㈳\"]=\"(社)\",e[\"㈴\"]=\"(名)\",e[\"㈵\"]=\"(特)\",e[\"㈶\"]=\"(財)\",e[\"㈷\"]=\"(祝)\",e[\"㈸\"]=\"(労)\",e[\"㈹\"]=\"(代)\",e[\"㈺\"]=\"(呼)\",e[\"㈻\"]=\"(学)\",e[\"㈼\"]=\"(監)\",e[\"㈽\"]=\"(企)\",e[\"㈾\"]=\"(資)\",e[\"㈿\"]=\"(協)\",e[\"㉀\"]=\"(祭)\",e[\"㉁\"]=\"(休)\",e[\"㉂\"]=\"(自)\",e[\"㉃\"]=\"(至)\",e[\"㋀\"]=\"1月\",e[\"㋁\"]=\"2月\",e[\"㋂\"]=\"3月\",e[\"㋃\"]=\"4月\",e[\"㋄\"]=\"5月\",e[\"㋅\"]=\"6月\",e[\"㋆\"]=\"7月\",e[\"㋇\"]=\"8月\",e[\"㋈\"]=\"9月\",e[\"㋉\"]=\"10月\",e[\"㋊\"]=\"11月\",e[\"㋋\"]=\"12月\",e[\"㍘\"]=\"0点\",e[\"㍙\"]=\"1点\",e[\"㍚\"]=\"2点\",e[\"㍛\"]=\"3点\",e[\"㍜\"]=\"4点\",e[\"㍝\"]=\"5点\",e[\"㍞\"]=\"6点\",e[\"㍟\"]=\"7点\",e[\"㍠\"]=\"8点\",e[\"㍡\"]=\"9点\",e[\"㍢\"]=\"10点\",e[\"㍣\"]=\"11点\",e[\"㍤\"]=\"12点\",e[\"㍥\"]=\"13点\",e[\"㍦\"]=\"14点\",e[\"㍧\"]=\"15点\",e[\"㍨\"]=\"16点\",e[\"㍩\"]=\"17点\",e[\"㍪\"]=\"18点\",e[\"㍫\"]=\"19点\",e[\"㍬\"]=\"20点\",e[\"㍭\"]=\"21点\",e[\"㍮\"]=\"22点\",e[\"㍯\"]=\"23点\",e[\"㍰\"]=\"24点\",e[\"㏠\"]=\"1日\",e[\"㏡\"]=\"2日\",e[\"㏢\"]=\"3日\",e[\"㏣\"]=\"4日\",e[\"㏤\"]=\"5日\",e[\"㏥\"]=\"6日\",e[\"㏦\"]=\"7日\",e[\"㏧\"]=\"8日\",e[\"㏨\"]=\"9日\",e[\"㏩\"]=\"10日\",e[\"㏪\"]=\"11日\",e[\"㏫\"]=\"12日\",e[\"㏬\"]=\"13日\",e[\"㏭\"]=\"14日\",e[\"㏮\"]=\"15日\",e[\"㏯\"]=\"16日\",e[\"㏰\"]=\"17日\",e[\"㏱\"]=\"18日\",e[\"㏲\"]=\"19日\",e[\"㏳\"]=\"20日\",e[\"㏴\"]=\"21日\",e[\"㏵\"]=\"22日\",e[\"㏶\"]=\"23日\",e[\"㏷\"]=\"24日\",e[\"㏸\"]=\"25日\",e[\"㏹\"]=\"26日\",e[\"㏺\"]=\"27日\",e[\"㏻\"]=\"28日\",e[\"㏼\"]=\"29日\",e[\"㏽\"]=\"30日\",e[\"㏾\"]=\"31日\",e[\"ﬀ\"]=\"ff\",e[\"ﬁ\"]=\"fi\",e[\"ﬂ\"]=\"fl\",e[\"ﬃ\"]=\"ffi\",e[\"ﬄ\"]=\"ffl\",e[\"ﬅ\"]=\"ſt\",e[\"ﬆ\"]=\"st\",e[\"ﬓ\"]=\"մն\",e[\"ﬔ\"]=\"մե\",e[\"ﬕ\"]=\"մի\",e[\"ﬖ\"]=\"վն\",e[\"ﬗ\"]=\"մխ\",e[\"ﭏ\"]=\"אל\",e[\"ﭐ\"]=\"ٱ\",e[\"ﭑ\"]=\"ٱ\",e[\"ﭒ\"]=\"ٻ\",e[\"ﭓ\"]=\"ٻ\",e[\"ﭔ\"]=\"ٻ\",e[\"ﭕ\"]=\"ٻ\",e[\"ﭖ\"]=\"پ\",e[\"ﭗ\"]=\"پ\",e[\"ﭘ\"]=\"پ\",e[\"ﭙ\"]=\"پ\",e[\"ﭚ\"]=\"ڀ\",e[\"ﭛ\"]=\"ڀ\",e[\"ﭜ\"]=\"ڀ\",e[\"ﭝ\"]=\"ڀ\",e[\"ﭞ\"]=\"ٺ\",e[\"ﭟ\"]=\"ٺ\",e[\"ﭠ\"]=\"ٺ\",e[\"ﭡ\"]=\"ٺ\",e[\"ﭢ\"]=\"ٿ\",e[\"ﭣ\"]=\"ٿ\",e[\"ﭤ\"]=\"ٿ\",e[\"ﭥ\"]=\"ٿ\",e[\"ﭦ\"]=\"ٹ\",e[\"ﭧ\"]=\"ٹ\",e[\"ﭨ\"]=\"ٹ\",e[\"ﭩ\"]=\"ٹ\",e[\"ﭪ\"]=\"ڤ\",e[\"ﭫ\"]=\"ڤ\",e[\"ﭬ\"]=\"ڤ\",e[\"ﭭ\"]=\"ڤ\",e[\"ﭮ\"]=\"ڦ\",e[\"ﭯ\"]=\"ڦ\",e[\"ﭰ\"]=\"ڦ\",e[\"ﭱ\"]=\"ڦ\",e[\"ﭲ\"]=\"ڄ\",e[\"ﭳ\"]=\"ڄ\",e[\"ﭴ\"]=\"ڄ\",e[\"ﭵ\"]=\"ڄ\",e[\"ﭶ\"]=\"ڃ\",e[\"ﭷ\"]=\"ڃ\",e[\"ﭸ\"]=\"ڃ\",e[\"ﭹ\"]=\"ڃ\",e[\"ﭺ\"]=\"چ\",e[\"ﭻ\"]=\"چ\",e[\"ﭼ\"]=\"چ\",e[\"ﭽ\"]=\"چ\",e[\"ﭾ\"]=\"ڇ\",e[\"ﭿ\"]=\"ڇ\",e[\"ﮀ\"]=\"ڇ\",e[\"ﮁ\"]=\"ڇ\",e[\"ﮂ\"]=\"ڍ\",e[\"ﮃ\"]=\"ڍ\",e[\"ﮄ\"]=\"ڌ\",e[\"ﮅ\"]=\"ڌ\",e[\"ﮆ\"]=\"ڎ\",e[\"ﮇ\"]=\"ڎ\",e[\"ﮈ\"]=\"ڈ\",e[\"ﮉ\"]=\"ڈ\",e[\"ﮊ\"]=\"ژ\",e[\"ﮋ\"]=\"ژ\",e[\"ﮌ\"]=\"ڑ\",e[\"ﮍ\"]=\"ڑ\",e[\"ﮎ\"]=\"ک\",e[\"ﮏ\"]=\"ک\",e[\"ﮐ\"]=\"ک\",e[\"ﮑ\"]=\"ک\",e[\"ﮒ\"]=\"گ\",e[\"ﮓ\"]=\"گ\",e[\"ﮔ\"]=\"گ\",e[\"ﮕ\"]=\"گ\",e[\"ﮖ\"]=\"ڳ\",e[\"ﮗ\"]=\"ڳ\",e[\"ﮘ\"]=\"ڳ\",e[\"ﮙ\"]=\"ڳ\",e[\"ﮚ\"]=\"ڱ\",e[\"ﮛ\"]=\"ڱ\",e[\"ﮜ\"]=\"ڱ\",e[\"ﮝ\"]=\"ڱ\",e[\"ﮞ\"]=\"ں\",e[\"ﮟ\"]=\"ں\",e[\"ﮠ\"]=\"ڻ\",e[\"ﮡ\"]=\"ڻ\",e[\"ﮢ\"]=\"ڻ\",e[\"ﮣ\"]=\"ڻ\",e[\"ﮤ\"]=\"ۀ\",e[\"ﮥ\"]=\"ۀ\",e[\"ﮦ\"]=\"ہ\",e[\"ﮧ\"]=\"ہ\",e[\"ﮨ\"]=\"ہ\",e[\"ﮩ\"]=\"ہ\",e[\"ﮪ\"]=\"ھ\",e[\"ﮫ\"]=\"ھ\",e[\"ﮬ\"]=\"ھ\",e[\"ﮭ\"]=\"ھ\",e[\"ﮮ\"]=\"ے\",e[\"ﮯ\"]=\"ے\",e[\"ﮰ\"]=\"ۓ\",e[\"ﮱ\"]=\"ۓ\",e[\"ﯓ\"]=\"ڭ\",e[\"ﯔ\"]=\"ڭ\",e[\"ﯕ\"]=\"ڭ\",e[\"ﯖ\"]=\"ڭ\",e[\"ﯗ\"]=\"ۇ\",e[\"ﯘ\"]=\"ۇ\",e[\"ﯙ\"]=\"ۆ\",e[\"ﯚ\"]=\"ۆ\",e[\"ﯛ\"]=\"ۈ\",e[\"ﯜ\"]=\"ۈ\",e[\"ﯝ\"]=\"ٷ\",e[\"ﯞ\"]=\"ۋ\",e[\"ﯟ\"]=\"ۋ\",e[\"ﯠ\"]=\"ۅ\",e[\"ﯡ\"]=\"ۅ\",e[\"ﯢ\"]=\"ۉ\",e[\"ﯣ\"]=\"ۉ\",e[\"ﯤ\"]=\"ې\",e[\"ﯥ\"]=\"ې\",e[\"ﯦ\"]=\"ې\",e[\"ﯧ\"]=\"ې\",e[\"ﯨ\"]=\"ى\",e[\"ﯩ\"]=\"ى\",e[\"ﯪ\"]=\"ئا\",e[\"ﯫ\"]=\"ئا\",e[\"ﯬ\"]=\"ئە\",e[\"ﯭ\"]=\"ئە\",e[\"ﯮ\"]=\"ئو\",e[\"ﯯ\"]=\"ئو\",e[\"ﯰ\"]=\"ئۇ\",e[\"ﯱ\"]=\"ئۇ\",e[\"ﯲ\"]=\"ئۆ\",e[\"ﯳ\"]=\"ئۆ\",e[\"ﯴ\"]=\"ئۈ\",e[\"ﯵ\"]=\"ئۈ\",e[\"ﯶ\"]=\"ئې\";e[\"ﯷ\"]=\"ئې\",e[\"ﯸ\"]=\"ئې\",e[\"ﯹ\"]=\"ئى\",e[\"ﯺ\"]=\"ئى\",e[\"ﯻ\"]=\"ئى\",e[\"ﯼ\"]=\"ی\",e[\"ﯽ\"]=\"ی\",e[\"ﯾ\"]=\"ی\",e[\"ﯿ\"]=\"ی\",e[\"ﰀ\"]=\"ئج\",e[\"ﰁ\"]=\"ئح\",e[\"ﰂ\"]=\"ئم\",e[\"ﰃ\"]=\"ئى\",e[\"ﰄ\"]=\"ئي\",e[\"ﰅ\"]=\"بج\",e[\"ﰆ\"]=\"بح\",e[\"ﰇ\"]=\"بخ\",e[\"ﰈ\"]=\"بم\",e[\"ﰉ\"]=\"بى\",e[\"ﰊ\"]=\"بي\",e[\"ﰋ\"]=\"تج\",e[\"ﰌ\"]=\"تح\",e[\"ﰍ\"]=\"تخ\",e[\"ﰎ\"]=\"تم\",e[\"ﰏ\"]=\"تى\",e[\"ﰐ\"]=\"تي\",e[\"ﰑ\"]=\"ثج\",e[\"ﰒ\"]=\"ثم\",e[\"ﰓ\"]=\"ثى\",e[\"ﰔ\"]=\"ثي\",e[\"ﰕ\"]=\"جح\",e[\"ﰖ\"]=\"جم\",e[\"ﰗ\"]=\"حج\",e[\"ﰘ\"]=\"حم\",e[\"ﰙ\"]=\"خج\",e[\"ﰚ\"]=\"خح\",e[\"ﰛ\"]=\"خم\",e[\"ﰜ\"]=\"سج\",e[\"ﰝ\"]=\"سح\",e[\"ﰞ\"]=\"سخ\",e[\"ﰟ\"]=\"سم\",e[\"ﰠ\"]=\"صح\",e[\"ﰡ\"]=\"صم\",e[\"ﰢ\"]=\"ضج\",e[\"ﰣ\"]=\"ضح\",e[\"ﰤ\"]=\"ضخ\",e[\"ﰥ\"]=\"ضم\",e[\"ﰦ\"]=\"طح\",e[\"ﰧ\"]=\"طم\",e[\"ﰨ\"]=\"ظم\",e[\"ﰩ\"]=\"عج\",e[\"ﰪ\"]=\"عم\",e[\"ﰫ\"]=\"غج\",e[\"ﰬ\"]=\"غم\",e[\"ﰭ\"]=\"فج\",e[\"ﰮ\"]=\"فح\",e[\"ﰯ\"]=\"فخ\",e[\"ﰰ\"]=\"فم\",e[\"ﰱ\"]=\"فى\",e[\"ﰲ\"]=\"في\",e[\"ﰳ\"]=\"قح\",e[\"ﰴ\"]=\"قم\",e[\"ﰵ\"]=\"قى\",e[\"ﰶ\"]=\"قي\",e[\"ﰷ\"]=\"كا\",e[\"ﰸ\"]=\"كج\",e[\"ﰹ\"]=\"كح\",e[\"ﰺ\"]=\"كخ\",e[\"ﰻ\"]=\"كل\",e[\"ﰼ\"]=\"كم\",e[\"ﰽ\"]=\"كى\",e[\"ﰾ\"]=\"كي\",e[\"ﰿ\"]=\"لج\",e[\"ﱀ\"]=\"لح\",e[\"ﱁ\"]=\"لخ\",e[\"ﱂ\"]=\"لم\",e[\"ﱃ\"]=\"لى\",e[\"ﱄ\"]=\"لي\",e[\"ﱅ\"]=\"مج\",e[\"ﱆ\"]=\"مح\",e[\"ﱇ\"]=\"مخ\",e[\"ﱈ\"]=\"مم\",e[\"ﱉ\"]=\"مى\",e[\"ﱊ\"]=\"مي\",e[\"ﱋ\"]=\"نج\",e[\"ﱌ\"]=\"نح\",e[\"ﱍ\"]=\"نخ\",e[\"ﱎ\"]=\"نم\",e[\"ﱏ\"]=\"نى\",e[\"ﱐ\"]=\"ني\",e[\"ﱑ\"]=\"هج\",e[\"ﱒ\"]=\"هم\",e[\"ﱓ\"]=\"هى\",e[\"ﱔ\"]=\"هي\",e[\"ﱕ\"]=\"يج\",e[\"ﱖ\"]=\"يح\",e[\"ﱗ\"]=\"يخ\",e[\"ﱘ\"]=\"يم\",e[\"ﱙ\"]=\"يى\",e[\"ﱚ\"]=\"يي\",e[\"ﱛ\"]=\"ذٰ\",e[\"ﱜ\"]=\"رٰ\",e[\"ﱝ\"]=\"ىٰ\",e[\"ﱞ\"]=\" ٌّ\",e[\"ﱟ\"]=\" ٍّ\",e[\"ﱠ\"]=\" َّ\",e[\"ﱡ\"]=\" ُّ\",e[\"ﱢ\"]=\" ِّ\",e[\"ﱣ\"]=\" ّٰ\",e[\"ﱤ\"]=\"ئر\",e[\"ﱥ\"]=\"ئز\",e[\"ﱦ\"]=\"ئم\",e[\"ﱧ\"]=\"ئن\",e[\"ﱨ\"]=\"ئى\",e[\"ﱩ\"]=\"ئي\",e[\"ﱪ\"]=\"بر\",e[\"ﱫ\"]=\"بز\",e[\"ﱬ\"]=\"بم\",e[\"ﱭ\"]=\"بن\",e[\"ﱮ\"]=\"بى\",e[\"ﱯ\"]=\"بي\",e[\"ﱰ\"]=\"تر\",e[\"ﱱ\"]=\"تز\",e[\"ﱲ\"]=\"تم\",e[\"ﱳ\"]=\"تن\",e[\"ﱴ\"]=\"تى\",e[\"ﱵ\"]=\"تي\",e[\"ﱶ\"]=\"ثر\",e[\"ﱷ\"]=\"ثز\",e[\"ﱸ\"]=\"ثم\",e[\"ﱹ\"]=\"ثن\",e[\"ﱺ\"]=\"ثى\",e[\"ﱻ\"]=\"ثي\",e[\"ﱼ\"]=\"فى\",e[\"ﱽ\"]=\"في\",e[\"ﱾ\"]=\"قى\",e[\"ﱿ\"]=\"قي\",e[\"ﲀ\"]=\"كا\",e[\"ﲁ\"]=\"كل\",e[\"ﲂ\"]=\"كم\",e[\"ﲃ\"]=\"كى\",e[\"ﲄ\"]=\"كي\",e[\"ﲅ\"]=\"لم\",e[\"ﲆ\"]=\"لى\",e[\"ﲇ\"]=\"لي\",e[\"ﲈ\"]=\"ما\",e[\"ﲉ\"]=\"مم\",e[\"ﲊ\"]=\"نر\",e[\"ﲋ\"]=\"نز\",e[\"ﲌ\"]=\"نم\",e[\"ﲍ\"]=\"نن\",e[\"ﲎ\"]=\"نى\",e[\"ﲏ\"]=\"ني\",e[\"ﲐ\"]=\"ىٰ\",e[\"ﲑ\"]=\"ير\",e[\"ﲒ\"]=\"يز\",e[\"ﲓ\"]=\"يم\",e[\"ﲔ\"]=\"ين\",e[\"ﲕ\"]=\"يى\",e[\"ﲖ\"]=\"يي\",e[\"ﲗ\"]=\"ئج\",e[\"ﲘ\"]=\"ئح\",e[\"ﲙ\"]=\"ئخ\",e[\"ﲚ\"]=\"ئم\",e[\"ﲛ\"]=\"ئه\",e[\"ﲜ\"]=\"بج\",e[\"ﲝ\"]=\"بح\",e[\"ﲞ\"]=\"بخ\",e[\"ﲟ\"]=\"بم\",e[\"ﲠ\"]=\"به\",e[\"ﲡ\"]=\"تج\",e[\"ﲢ\"]=\"تح\",e[\"ﲣ\"]=\"تخ\",e[\"ﲤ\"]=\"تم\",e[\"ﲥ\"]=\"ته\",e[\"ﲦ\"]=\"ثم\",e[\"ﲧ\"]=\"جح\",e[\"ﲨ\"]=\"جم\",e[\"ﲩ\"]=\"حج\",e[\"ﲪ\"]=\"حم\",e[\"ﲫ\"]=\"خج\",e[\"ﲬ\"]=\"خم\",e[\"ﲭ\"]=\"سج\",e[\"ﲮ\"]=\"سح\",e[\"ﲯ\"]=\"سخ\",e[\"ﲰ\"]=\"سم\",e[\"ﲱ\"]=\"صح\",e[\"ﲲ\"]=\"صخ\",e[\"ﲳ\"]=\"صم\",e[\"ﲴ\"]=\"ضج\",e[\"ﲵ\"]=\"ضح\",e[\"ﲶ\"]=\"ضخ\",e[\"ﲷ\"]=\"ضم\",e[\"ﲸ\"]=\"طح\",e[\"ﲹ\"]=\"ظم\",e[\"ﲺ\"]=\"عج\",e[\"ﲻ\"]=\"عم\",e[\"ﲼ\"]=\"غج\",e[\"ﲽ\"]=\"غم\",e[\"ﲾ\"]=\"فج\",e[\"ﲿ\"]=\"فح\",e[\"ﳀ\"]=\"فخ\",e[\"ﳁ\"]=\"فم\",e[\"ﳂ\"]=\"قح\",e[\"ﳃ\"]=\"قم\",e[\"ﳄ\"]=\"كج\",e[\"ﳅ\"]=\"كح\",e[\"ﳆ\"]=\"كخ\",e[\"ﳇ\"]=\"كل\",e[\"ﳈ\"]=\"كم\",e[\"ﳉ\"]=\"لج\",e[\"ﳊ\"]=\"لح\",e[\"ﳋ\"]=\"لخ\",e[\"ﳌ\"]=\"لم\",e[\"ﳍ\"]=\"له\",e[\"ﳎ\"]=\"مج\",e[\"ﳏ\"]=\"مح\",e[\"ﳐ\"]=\"مخ\",e[\"ﳑ\"]=\"مم\",e[\"ﳒ\"]=\"نج\",e[\"ﳓ\"]=\"نح\",e[\"ﳔ\"]=\"نخ\",e[\"ﳕ\"]=\"نم\",e[\"ﳖ\"]=\"نه\",e[\"ﳗ\"]=\"هج\",e[\"ﳘ\"]=\"هم\",e[\"ﳙ\"]=\"هٰ\",e[\"ﳚ\"]=\"يج\",e[\"ﳛ\"]=\"يح\",e[\"ﳜ\"]=\"يخ\",e[\"ﳝ\"]=\"يم\",e[\"ﳞ\"]=\"يه\",e[\"ﳟ\"]=\"ئم\",e[\"ﳠ\"]=\"ئه\",e[\"ﳡ\"]=\"بم\",e[\"ﳢ\"]=\"به\",e[\"ﳣ\"]=\"تم\",e[\"ﳤ\"]=\"ته\",e[\"ﳥ\"]=\"ثم\",e[\"ﳦ\"]=\"ثه\",e[\"ﳧ\"]=\"سم\",e[\"ﳨ\"]=\"سه\",e[\"ﳩ\"]=\"شم\",e[\"ﳪ\"]=\"شه\",e[\"ﳫ\"]=\"كل\",e[\"ﳬ\"]=\"كم\",e[\"ﳭ\"]=\"لم\",e[\"ﳮ\"]=\"نم\",e[\"ﳯ\"]=\"نه\",e[\"ﳰ\"]=\"يم\",e[\"ﳱ\"]=\"يه\",e[\"ﳲ\"]=\"ـَّ\",e[\"ﳳ\"]=\"ـُّ\",e[\"ﳴ\"]=\"ـِّ\",e[\"ﳵ\"]=\"طى\",e[\"ﳶ\"]=\"طي\",e[\"ﳷ\"]=\"عى\",e[\"ﳸ\"]=\"عي\",e[\"ﳹ\"]=\"غى\",e[\"ﳺ\"]=\"غي\",e[\"ﳻ\"]=\"سى\",e[\"ﳼ\"]=\"سي\",e[\"ﳽ\"]=\"شى\",e[\"ﳾ\"]=\"شي\",e[\"ﳿ\"]=\"حى\",e[\"ﴀ\"]=\"حي\",e[\"ﴁ\"]=\"جى\",e[\"ﴂ\"]=\"جي\",e[\"ﴃ\"]=\"خى\",e[\"ﴄ\"]=\"خي\",e[\"ﴅ\"]=\"صى\",e[\"ﴆ\"]=\"صي\",e[\"ﴇ\"]=\"ضى\",e[\"ﴈ\"]=\"ضي\",e[\"ﴉ\"]=\"شج\",e[\"ﴊ\"]=\"شح\",e[\"ﴋ\"]=\"شخ\",e[\"ﴌ\"]=\"شم\",e[\"ﴍ\"]=\"شر\",e[\"ﴎ\"]=\"سر\",e[\"ﴏ\"]=\"صر\",e[\"ﴐ\"]=\"ضر\",e[\"ﴑ\"]=\"طى\",e[\"ﴒ\"]=\"طي\",e[\"ﴓ\"]=\"عى\",e[\"ﴔ\"]=\"عي\",e[\"ﴕ\"]=\"غى\",e[\"ﴖ\"]=\"غي\",e[\"ﴗ\"]=\"سى\",e[\"ﴘ\"]=\"سي\",e[\"ﴙ\"]=\"شى\",e[\"ﴚ\"]=\"شي\",e[\"ﴛ\"]=\"حى\",e[\"ﴜ\"]=\"حي\",e[\"ﴝ\"]=\"جى\",e[\"ﴞ\"]=\"جي\",e[\"ﴟ\"]=\"خى\",e[\"ﴠ\"]=\"خي\",e[\"ﴡ\"]=\"صى\",e[\"ﴢ\"]=\"صي\",e[\"ﴣ\"]=\"ضى\",e[\"ﴤ\"]=\"ضي\",e[\"ﴥ\"]=\"شج\",e[\"ﴦ\"]=\"شح\",e[\"ﴧ\"]=\"شخ\",e[\"ﴨ\"]=\"شم\",e[\"ﴩ\"]=\"شر\",e[\"ﴪ\"]=\"سر\",e[\"ﴫ\"]=\"صر\",e[\"ﴬ\"]=\"ضر\",e[\"ﴭ\"]=\"شج\",e[\"ﴮ\"]=\"شح\",e[\"ﴯ\"]=\"شخ\",e[\"ﴰ\"]=\"شم\",e[\"ﴱ\"]=\"سه\",e[\"ﴲ\"]=\"شه\",e[\"ﴳ\"]=\"طم\",e[\"ﴴ\"]=\"سج\",e[\"ﴵ\"]=\"سح\",e[\"ﴶ\"]=\"سخ\",e[\"ﴷ\"]=\"شج\",e[\"ﴸ\"]=\"شح\",e[\"ﴹ\"]=\"شخ\",e[\"ﴺ\"]=\"طم\",e[\"ﴻ\"]=\"ظم\",e[\"ﴼ\"]=\"اً\",e[\"ﴽ\"]=\"اً\",e[\"ﵐ\"]=\"تجم\",e[\"ﵑ\"]=\"تحج\",e[\"ﵒ\"]=\"تحج\",e[\"ﵓ\"]=\"تحم\",e[\"ﵔ\"]=\"تخم\",e[\"ﵕ\"]=\"تمج\",e[\"ﵖ\"]=\"تمح\",e[\"ﵗ\"]=\"تمخ\",e[\"ﵘ\"]=\"جمح\",e[\"ﵙ\"]=\"جمح\",e[\"ﵚ\"]=\"حمي\",e[\"ﵛ\"]=\"حمى\",e[\"ﵜ\"]=\"سحج\",e[\"ﵝ\"]=\"سجح\",e[\"ﵞ\"]=\"سجى\",e[\"ﵟ\"]=\"سمح\",e[\"ﵠ\"]=\"سمح\",e[\"ﵡ\"]=\"سمج\",e[\"ﵢ\"]=\"سمم\",e[\"ﵣ\"]=\"سمم\",e[\"ﵤ\"]=\"صحح\",e[\"ﵥ\"]=\"صحح\",e[\"ﵦ\"]=\"صمم\",e[\"ﵧ\"]=\"شحم\",e[\"ﵨ\"]=\"شحم\",e[\"ﵩ\"]=\"شجي\",e[\"ﵪ\"]=\"شمخ\",e[\"ﵫ\"]=\"شمخ\",e[\"ﵬ\"]=\"شمم\",e[\"ﵭ\"]=\"شمم\",e[\"ﵮ\"]=\"ضحى\",e[\"ﵯ\"]=\"ضخم\",e[\"ﵰ\"]=\"ضخم\",e[\"ﵱ\"]=\"طمح\",e[\"ﵲ\"]=\"طمح\",e[\"ﵳ\"]=\"طمم\",e[\"ﵴ\"]=\"طمي\",e[\"ﵵ\"]=\"عجم\",e[\"ﵶ\"]=\"عمم\",e[\"ﵷ\"]=\"عمم\",e[\"ﵸ\"]=\"عمى\",e[\"ﵹ\"]=\"غمم\",e[\"ﵺ\"]=\"غمي\",e[\"ﵻ\"]=\"غمى\",e[\"ﵼ\"]=\"فخم\",e[\"ﵽ\"]=\"فخم\",e[\"ﵾ\"]=\"قمح\",e[\"ﵿ\"]=\"قمم\",e[\"ﶀ\"]=\"لحم\",e[\"ﶁ\"]=\"لحي\",e[\"ﶂ\"]=\"لحى\",e[\"ﶃ\"]=\"لجج\",e[\"ﶄ\"]=\"لجج\",e[\"ﶅ\"]=\"لخم\",e[\"ﶆ\"]=\"لخم\",e[\"ﶇ\"]=\"لمح\",e[\"ﶈ\"]=\"لمح\",e[\"ﶉ\"]=\"محج\",e[\"ﶊ\"]=\"محم\",e[\"ﶋ\"]=\"محي\",e[\"ﶌ\"]=\"مجح\",e[\"ﶍ\"]=\"مجم\",e[\"ﶎ\"]=\"مخج\",e[\"ﶏ\"]=\"مخم\",e[\"ﶒ\"]=\"مجخ\",e[\"ﶓ\"]=\"همج\",e[\"ﶔ\"]=\"همم\",e[\"ﶕ\"]=\"نحم\",e[\"ﶖ\"]=\"نحى\",e[\"ﶗ\"]=\"نجم\",e[\"ﶘ\"]=\"نجم\",e[\"ﶙ\"]=\"نجى\",e[\"ﶚ\"]=\"نمي\",e[\"ﶛ\"]=\"نمى\",e[\"ﶜ\"]=\"يمم\",e[\"ﶝ\"]=\"يمم\",e[\"ﶞ\"]=\"بخي\",e[\"ﶟ\"]=\"تجي\",e[\"ﶠ\"]=\"تجى\",e[\"ﶡ\"]=\"تخي\",e[\"ﶢ\"]=\"تخى\",e[\"ﶣ\"]=\"تمي\",e[\"ﶤ\"]=\"تمى\",e[\"ﶥ\"]=\"جمي\",e[\"ﶦ\"]=\"جحى\",e[\"ﶧ\"]=\"جمى\",e[\"ﶨ\"]=\"سخى\",e[\"ﶩ\"]=\"صحي\",e[\"ﶪ\"]=\"شحي\",e[\"ﶫ\"]=\"ضحي\",e[\"ﶬ\"]=\"لجي\",e[\"ﶭ\"]=\"لمي\",e[\"ﶮ\"]=\"يحي\",e[\"ﶯ\"]=\"يجي\",e[\"ﶰ\"]=\"يمي\",e[\"ﶱ\"]=\"ممي\",e[\"ﶲ\"]=\"قمي\",e[\"ﶳ\"]=\"نحي\",e[\"ﶴ\"]=\"قمح\",e[\"ﶵ\"]=\"لحم\",e[\"ﶶ\"]=\"عمي\",e[\"ﶷ\"]=\"كمي\",e[\"ﶸ\"]=\"نجح\",e[\"ﶹ\"]=\"مخي\",e[\"ﶺ\"]=\"لجم\",e[\"ﶻ\"]=\"كمم\",e[\"ﶼ\"]=\"لجم\",e[\"ﶽ\"]=\"نجح\",e[\"ﶾ\"]=\"جحي\",e[\"ﶿ\"]=\"حجي\",e[\"ﷀ\"]=\"مجي\",e[\"ﷁ\"]=\"فمي\",e[\"ﷂ\"]=\"بحي\",e[\"ﷃ\"]=\"كمم\",e[\"ﷄ\"]=\"عجم\",e[\"ﷅ\"]=\"صمم\",e[\"ﷆ\"]=\"سخي\",e[\"ﷇ\"]=\"نجي\",e[\"﹉\"]=\"‾\",e[\"﹊\"]=\"‾\",e[\"﹋\"]=\"‾\",e[\"﹌\"]=\"‾\",e[\"﹍\"]=\"_\",e[\"﹎\"]=\"_\",e[\"﹏\"]=\"_\",e[\"ﺀ\"]=\"ء\",e[\"ﺁ\"]=\"آ\",e[\"ﺂ\"]=\"آ\",e[\"ﺃ\"]=\"أ\",e[\"ﺄ\"]=\"أ\",e[\"ﺅ\"]=\"ؤ\",e[\"ﺆ\"]=\"ؤ\",e[\"ﺇ\"]=\"إ\",e[\"ﺈ\"]=\"إ\",e[\"ﺉ\"]=\"ئ\",e[\"ﺊ\"]=\"ئ\",e[\"ﺋ\"]=\"ئ\",e[\"ﺌ\"]=\"ئ\",e[\"ﺍ\"]=\"ا\",e[\"ﺎ\"]=\"ا\",e[\"ﺏ\"]=\"ب\",e[\"ﺐ\"]=\"ب\",e[\"ﺑ\"]=\"ب\",e[\"ﺒ\"]=\"ب\",e[\"ﺓ\"]=\"ة\",e[\"ﺔ\"]=\"ة\",e[\"ﺕ\"]=\"ت\",e[\"ﺖ\"]=\"ت\",e[\"ﺗ\"]=\"ت\",e[\"ﺘ\"]=\"ت\",e[\"ﺙ\"]=\"ث\",e[\"ﺚ\"]=\"ث\",e[\"ﺛ\"]=\"ث\",e[\"ﺜ\"]=\"ث\",e[\"ﺝ\"]=\"ج\",e[\"ﺞ\"]=\"ج\",e[\"ﺟ\"]=\"ج\",e[\"ﺠ\"]=\"ج\",e[\"ﺡ\"]=\"ح\",e[\"ﺢ\"]=\"ح\",e[\"ﺣ\"]=\"ح\",e[\"ﺤ\"]=\"ح\",e[\"ﺥ\"]=\"خ\",e[\"ﺦ\"]=\"خ\",e[\"ﺧ\"]=\"خ\",e[\"ﺨ\"]=\"خ\",e[\"ﺩ\"]=\"د\",e[\"ﺪ\"]=\"د\",e[\"ﺫ\"]=\"ذ\",e[\"ﺬ\"]=\"ذ\",e[\"ﺭ\"]=\"ر\",e[\"ﺮ\"]=\"ر\",e[\"ﺯ\"]=\"ز\",e[\"ﺰ\"]=\"ز\",e[\"ﺱ\"]=\"س\",e[\"ﺲ\"]=\"س\",e[\"ﺳ\"]=\"س\",e[\"ﺴ\"]=\"س\",e[\"ﺵ\"]=\"ش\",e[\"ﺶ\"]=\"ش\",e[\"ﺷ\"]=\"ش\",e[\"ﺸ\"]=\"ش\",e[\"ﺹ\"]=\"ص\",e[\"ﺺ\"]=\"ص\",e[\"ﺻ\"]=\"ص\",e[\"ﺼ\"]=\"ص\",e[\"ﺽ\"]=\"ض\",e[\"ﺾ\"]=\"ض\",e[\"ﺿ\"]=\"ض\",e[\"ﻀ\"]=\"ض\",e[\"ﻁ\"]=\"ط\",e[\"ﻂ\"]=\"ط\",e[\"ﻃ\"]=\"ط\",e[\"ﻄ\"]=\"ط\",e[\"ﻅ\"]=\"ظ\",e[\"ﻆ\"]=\"ظ\",e[\"ﻇ\"]=\"ظ\",e[\"ﻈ\"]=\"ظ\",e[\"ﻉ\"]=\"ع\",e[\"ﻊ\"]=\"ع\",e[\"ﻋ\"]=\"ع\",e[\"ﻌ\"]=\"ع\",e[\"ﻍ\"]=\"غ\",e[\"ﻎ\"]=\"غ\",e[\"ﻏ\"]=\"غ\",e[\"ﻐ\"]=\"غ\",e[\"ﻑ\"]=\"ف\",e[\"ﻒ\"]=\"ف\",e[\"ﻓ\"]=\"ف\",e[\"ﻔ\"]=\"ف\",e[\"ﻕ\"]=\"ق\",e[\"ﻖ\"]=\"ق\",e[\"ﻗ\"]=\"ق\",e[\"ﻘ\"]=\"ق\",e[\"ﻙ\"]=\"ك\",e[\"ﻚ\"]=\"ك\",e[\"ﻛ\"]=\"ك\",e[\"ﻜ\"]=\"ك\",e[\"ﻝ\"]=\"ل\",e[\"ﻞ\"]=\"ل\",e[\"ﻟ\"]=\"ل\",e[\"ﻠ\"]=\"ل\",e[\"ﻡ\"]=\"م\",e[\"ﻢ\"]=\"م\",e[\"ﻣ\"]=\"م\",e[\"ﻤ\"]=\"م\",e[\"ﻥ\"]=\"ن\",e[\"ﻦ\"]=\"ن\",e[\"ﻧ\"]=\"ن\",e[\"ﻨ\"]=\"ن\",e[\"ﻩ\"]=\"ه\",e[\"ﻪ\"]=\"ه\",e[\"ﻫ\"]=\"ه\",e[\"ﻬ\"]=\"ه\",e[\"ﻭ\"]=\"و\",e[\"ﻮ\"]=\"و\",e[\"ﻯ\"]=\"ى\",e[\"ﻰ\"]=\"ى\",e[\"ﻱ\"]=\"ي\",e[\"ﻲ\"]=\"ي\",e[\"ﻳ\"]=\"ي\",e[\"ﻴ\"]=\"ي\",e[\"ﻵ\"]=\"لآ\",e[\"ﻶ\"]=\"لآ\",e[\"ﻷ\"]=\"لأ\",e[\"ﻸ\"]=\"لأ\",e[\"ﻹ\"]=\"لإ\",e[\"ﻺ\"]=\"لإ\",e[\"ﻻ\"]=\"لا\",e[\"ﻼ\"]=\"لا\"});t.mapSpecialUnicodeValues=function(e){return e>=65520&&e<=65535?0:e>=62976&&e<=63743?i()[e]||e:173===e?45:e},t.reverseIfRtl=function(e){var t,r,a=e.length;if(a<=1||(t=e.charCodeAt(0),r=n[13],!(t>=r.begin&&t<r.end||t>=(r=n[11]).begin&&t<r.end)))return e;for(var i=\"\",o=a-1;o>=0;o--)i+=e[o];return i},t.getUnicodeRangeFor=function(e){for(var t=0,r=n.length;t<r;t++){var a=n[t];if(e>=a.begin&&e<a.end)return t}return-1},t.getNormalizedUnicodes=o,t.getUnicodeForGlyph=function(e,t){var r=t[e];if(void 0!==r)return r;if(!e)return-1;if(\"u\"===e[0]){var a,i=e.length;if(7===i&&\"n\"===e[1]&&\"i\"===e[2])a=e.substr(3);else{if(!(i>=5&&i<=7))return-1;a=e.substr(1)}if(a===a.toUpperCase()&&(r=parseInt(a,16))>=0)return r}return-1}},\"./node_modules/pdfjs-dist/lib/core/worker.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/core/worker.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WorkerMessageHandler=t.WorkerTask=void 0;var a,i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},o=r(/*! ../shared/util */\"./node_modules/pdfjs-dist/lib/shared/util.js\"),s=r(/*! ./pdf_manager */\"./node_modules/pdfjs-dist/lib/core/pdf_manager.js\"),c=r(/*! ../shared/is_node */\"./node_modules/pdfjs-dist/lib/shared/is_node.js\"),l=(a=c)&&a.__esModule?a:{default:a},h=r(/*! ./primitives */\"./node_modules/pdfjs-dist/lib/core/primitives.js\");var u,d=function(){function e(e){this.name=e,this.terminated=!1,this._capability=(0,o.createPromiseCapability)()}return e.prototype={get finished(){return this._capability.promise},finish:function(){this._capability.resolve()},terminate:function(){this.terminated=!0},ensureNotTerminated:function(){if(this.terminated)throw new Error(\"Worker task was terminated\")}},e}(),f=function(){function e(e){this._msgHandler=e,this._contentLength=null,this._fullRequestReader=null,this._rangeRequestReaders=[]}function t(e){var t=this;this._msgHandler=e,this._contentLength=null,this._isRangeSupported=!1,this._isStreamingSupported=!1;var r=this._msgHandler.sendWithStream(\"GetReader\");this._reader=r.getReader(),this._headersReady=this._msgHandler.sendWithPromise(\"ReaderHeadersReady\").then(function(e){t._isStreamingSupported=e.isStreamingSupported,t._isRangeSupported=e.isRangeSupported,t._contentLength=e.contentLength})}function r(e,t,r){this._msgHandler=r,this.onProgress=null;var a=this._msgHandler.sendWithStream(\"GetRangeReader\",{begin:e,end:t});this._reader=a.getReader()}return e.prototype={getFullReader:function(){return(0,o.assert)(!this._fullRequestReader),this._fullRequestReader=new t(this._msgHandler),this._fullRequestReader},getRangeReader:function(e,t){var a=new r(e,t,this._msgHandler);return this._rangeRequestReaders.push(a),a},cancelAllRequests:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeRequestReaders.slice(0).forEach(function(t){t.cancel(e)})}},t.prototype={get headersReady(){return this._headersReady},get contentLength(){return this._contentLength},get isStreamingSupported(){return this._isStreamingSupported},get isRangeSupported(){return this._isRangeSupported},read:function(){return this._reader.read().then(function(e){var t=e.value;return e.done?{value:void 0,done:!0}:{value:t.buffer,done:!1}})},cancel:function(e){this._reader.cancel(e)}},r.prototype={get isStreamingSupported(){return!1},read:function(){return this._reader.read().then(function(e){var t=e.value;return e.done?{value:void 0,done:!0}:{value:t.buffer,done:!1}})},cancel:function(e){this._reader.cancel(e)}},e}(),g={setup:function(e,t){var r=!1;e.on(\"test\",function(t){if(!r)if(r=!0,t instanceof Uint8Array){var a=255===t[0];e.postMessageTransfers=a;var i=new XMLHttpRequest,n=\"response\"in i;try{i.responseType}catch(e){n=!1}n?e.send(\"test\",{supportTypedArray:!0,supportTransfers:a}):e.send(\"test\",!1)}else e.send(\"test\",\"main\",!1)}),e.on(\"configure\",function(e){(0,o.setVerbosityLevel)(e.verbosity)}),e.on(\"GetDocRequest\",function(e){return g.createDocumentHandler(e,t)})},createDocumentHandler:function(e,t){var r,a=!1,c=null,l=[],u=e.apiVersion;if(null!==u&&\"2.0.305\"!==u)throw new Error('The API version \"'+u+'\" does not match the Worker version \"2.0.305\".');var g=e.docId,m=e.docBaseUrl,p=e.docId+\"_worker\",b=new o.MessageHandler(p,g,t);function v(){if(a)throw new Error(\"Worker was terminated\")}function y(e){l.push(e)}function w(e){e.finish();var t=l.indexOf(e);l.splice(t,1)}function k(e){var t=(0,o.createPromiseCapability)(),a=function(){Promise.all([r.ensureDoc(\"numPages\"),r.ensureDoc(\"fingerprint\")]).then(function(e){var r=n(e,2),a=r[0],i=r[1];t.resolve({numPages:a,fingerprint:i})},i)},i=function(e){t.reject(e)};return r.ensureDoc(\"checkHeader\",[]).then(function(){r.ensureDoc(\"parseStartXRef\",[]).then(function(){r.ensureDoc(\"parse\",[e]).then(a,i)},i)},i),t.promise}function S(e,t){var r,a=(0,o.createPromiseCapability)(),i=e.source;if(i.data){try{r=new s.LocalPdfManager(g,i.data,i.password,t,m),a.resolve(r)}catch(e){a.reject(e)}return a.promise}var n,l=[];try{n=new f(b)}catch(e){return a.reject(e),a.promise}var h=n.getFullReader();h.headersReady.then(function(){if(h.isRangeSupported){var e=i.disableAutoFetch||h.isStreamingSupported;r=new s.NetworkPdfManager(g,n,{msgHandler:b,url:i.url,password:i.password,length:h.contentLength,disableAutoFetch:e,rangeChunkSize:i.rangeChunkSize},t,m);for(var o=0;o<l.length;o++)r.sendProgressiveData(l[o]);l=[],a.resolve(r),c=null}}).catch(function(e){a.reject(e),c=null});var u=0;return new Promise(function(e,n){h.read().then(function e(d){try{if(v(),d.done)return r||function(){var e=(0,o.arraysToBytes)(l);i.length&&e.length!==i.length&&(0,o.warn)(\"reported HTTP length is different from actual\");try{r=new s.LocalPdfManager(g,e,i.password,t,m),a.resolve(r)}catch(e){a.reject(e)}l=[]}(),void(c=null);var f=d.value;u+=(0,o.arrayByteLength)(f),h.isStreamingSupported||b.send(\"DocProgress\",{loaded:u,total:Math.max(u,h.contentLength||0)}),r?r.sendProgressiveData(f):l.push(f),h.read().then(e,n)}catch(e){n(e)}},n)}).catch(function(e){a.reject(e),c=null}),c=function(){n.cancelAllRequests(\"abort\")},a.promise}return b.postMessageTransfers=e.postMessageTransfers,b.on(\"GetPage\",function(e){return r.getPage(e.pageIndex).then(function(e){var t=r.ensure(e,\"rotate\"),a=r.ensure(e,\"ref\"),i=r.ensure(e,\"userUnit\"),n=r.ensure(e,\"view\");return Promise.all([t,a,i,n]).then(function(e){return{rotate:e[0],ref:e[1],userUnit:e[2],view:e[3]}})})}),b.on(\"GetPageIndex\",function(e){var t=new h.Ref(e.ref.num,e.ref.gen);return r.pdfDocument.catalog.getPageIndex(t)}),b.on(\"GetDestinations\",function(e){return r.ensureCatalog(\"destinations\")}),b.on(\"GetDestination\",function(e){return r.ensureCatalog(\"getDestination\",[e.id])}),b.on(\"GetPageLabels\",function(e){return r.ensureCatalog(\"pageLabels\")}),b.on(\"GetPageMode\",function(e){return r.ensureCatalog(\"pageMode\")}),b.on(\"GetAttachments\",function(e){return r.ensureCatalog(\"attachments\")}),b.on(\"GetJavaScript\",function(e){return r.ensureCatalog(\"javaScript\")}),b.on(\"GetOutline\",function(e){return r.ensureCatalog(\"documentOutline\")}),b.on(\"GetMetadata\",function(e){return Promise.all([r.ensureDoc(\"documentInfo\"),r.ensureCatalog(\"metadata\")])}),b.on(\"GetData\",function(e){return r.requestLoadedStream(),r.onLoadedStream().then(function(e){return e.bytes})}),b.on(\"GetStats\",function(e){return r.pdfDocument.xref.stats}),b.on(\"GetAnnotations\",function(e){return r.getPage(e.pageIndex).then(function(t){return r.ensure(t,\"getAnnotationsData\",[e.intent])})}),b.on(\"RenderPageRequest\",function(e){var t=e.pageIndex;r.getPage(t).then(function(r){var a=new d(\"RenderPageRequest: page \"+t);y(a);var n=t+1,s=Date.now();r.getOperatorList({handler:b,task:a,intent:e.intent,renderInteractiveForms:e.renderInteractiveForms}).then(function(e){w(a),(0,o.info)(\"page=\"+n+\" - getOperatorList: time=\"+(Date.now()-s)+\"ms, len=\"+e.totalLength)},function(t){if(w(a),!a.terminated){b.send(\"UnsupportedFeature\",{featureId:o.UNSUPPORTED_FEATURES.unknown});var r,s=\"worker.js: while trying to getPage() and getOperatorList()\";r=\"string\"==typeof t?{message:t,stack:s}:\"object\"===(void 0===t?\"undefined\":i(t))?{message:t.message||t.toString(),stack:t.stack||s}:{message:\"Unknown exception type: \"+(void 0===t?\"undefined\":i(t)),stack:s},b.send(\"PageError\",{pageNum:n,error:r,intent:e.intent})}})})},this),b.on(\"GetTextContent\",function(e,t){var a=e.pageIndex;t.onPull=function(e){},t.onCancel=function(e){},r.getPage(a).then(function(r){var i=new d(\"GetTextContent: page \"+a);y(i);var n=a+1,s=Date.now();r.extractTextContent({handler:b,task:i,sink:t,normalizeWhitespace:e.normalizeWhitespace,combineTextItems:e.combineTextItems}).then(function(){w(i),(0,o.info)(\"text indexing: page=\"+n+\" - time=\"+(Date.now()-s)+\"ms\"),t.close()},function(e){if(w(i),!i.terminated)throw t.error(e),e})})}),b.on(\"Cleanup\",function(e){return r.cleanup()}),b.on(\"Terminate\",function(e){a=!0,r&&(r.terminate(),r=null),c&&c();var t=[];return l.forEach(function(e){t.push(e.finished),e.terminate()}),Promise.all(t).then(function(){b.destroy(),b=null})}),b.on(\"Ready\",function(t){!function(e){function t(e){v(),b.send(\"GetDoc\",{pdfInfo:e})}function i(e){if(v(),e instanceof o.PasswordException){var t=new d(\"PasswordException: response \"+e.code);y(t),b.sendWithPromise(\"PasswordRequest\",e).then(function(e){w(t),r.updatePassword(e.password),n()}).catch(function(e){w(t),b.send(\"PasswordException\",e)}.bind(null,e))}else e instanceof o.InvalidPDFException?b.send(\"InvalidPDF\",e):e instanceof o.MissingPDFException?b.send(\"MissingPDF\",e):e instanceof o.UnexpectedResponseException?b.send(\"UnexpectedResponse\",e):b.send(\"UnknownError\",new o.UnknownErrorException(e.message,e.toString()))}function n(){v(),k(!1).then(t,function(e){v(),e instanceof o.XRefParseException?(r.requestLoadedStream(),r.onLoadedStream().then(function(){v(),k(!0).then(t,i)})):i(e)},i)}v(),S(e,{forceDataSchema:e.disableCreateObjectURL,maxImageSize:void 0===e.maxImageSize?-1:e.maxImageSize,disableFontFace:e.disableFontFace,nativeImageDecoderSupport:e.nativeImageDecoderSupport,ignoreErrors:e.ignoreErrors,isEvalSupported:e.isEvalSupported}).then(function(e){if(a)throw e.terminate(),new Error(\"Worker was terminated\");r=e,b.send(\"PDFManagerReady\",null),r.onLoadedStream().then(function(e){b.send(\"DataLoaded\",{length:e.bytes.byteLength})})}).then(n,i)}(e),e=null}),p},initializeFromPort:function(e){var t=new o.MessageHandler(\"worker\",\"main\",e);g.setup(t,e),t.send(\"ready\",null)}};\"undefined\"==typeof window&&!(0,l.default)()&&\"undefined\"!=typeof self&&(\"function\"==typeof(u=self).postMessage&&\"onmessage\"in u)&&g.initializeFromPort(self),t.WorkerTask=d,t.WorkerMessageHandler=g},\"./node_modules/pdfjs-dist/lib/pdf.worker.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/lib/pdf.worker.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){\"use strict\";var a=r(/*! ./core/worker.js */\"./node_modules/pdfjs-dist/lib/core/worker.js\");t.WorkerMessageHandler=a.WorkerMessageHandler}}]);","extractedComments":[]}