{"map":"{\"version\":3,\"sources\":[\"/Users/bradsmith/dev/proj/music-studio/node_modules/pdfjs-dist/build/pdf.worker.js\"],\"names\":[\"process\",\"Buffer\",\"global\",\"factory\",\"self\",\"modules\",\"installedModules\",\"__w_pdfjs_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"value\",\"unreachable\",\"warn\",\"utf8StringToString\",\"stringToUTF8String\",\"stringToPDFString\",\"stringToBytes\",\"string32\",\"shadow\",\"setVerbosityLevel\",\"ReadableStream\",\"removeNullCharacters\",\"readUint32\",\"readUint16\",\"readInt8\",\"log2\",\"loadJpegStream\",\"isEvalSupported\",\"isLittleEndian\",\"createValidAbsoluteUrl\",\"isSameOrigin\",\"isSpace\",\"isString\",\"isNum\",\"isEmptyObj\",\"isBool\",\"isArrayBuffer\",\"info\",\"getVerbosityLevel\",\"getLookupTableFactory\",\"deprecated\",\"createObjectURL\",\"createPromiseCapability\",\"createBlob\",\"bytesToString\",\"assert\",\"arraysToBytes\",\"arrayByteLength\",\"FormatError\",\"XRefParseException\",\"Util\",\"UnknownErrorException\",\"UnexpectedResponseException\",\"TextRenderingMode\",\"StreamType\",\"PasswordResponses\",\"PasswordException\",\"PageViewport\",\"NotImplementedException\",\"NativeImageDecoding\",\"MissingPDFException\",\"MissingDataException\",\"MessageHandler\",\"InvalidPDFException\",\"AbortException\",\"CMapCompressionType\",\"ImageKind\",\"FontType\",\"AnnotationType\",\"AnnotationFlag\",\"AnnotationFieldFlag\",\"AnnotationBorderStyleType\",\"UNSUPPORTED_FEATURES\",\"VERBOSITY_LEVELS\",\"OPS\",\"IDENTITY_MATRIX\",\"FONT_IDENTITY_MATRIX\",\"undefined\",\"_typeof\",\"Symbol\",\"iterator\",\"obj\",\"constructor\",\"_streams_polyfill\",\"errors\",\"warnings\",\"infos\",\"verbosity\",\"msg\",\"console\",\"log\",\"Error\",\"cond\",\"code\",\"this\",\"message\",\"details\",\"status\",\"begin\",\"end\",\"NullCharactersRegExp\",\"str\",\"length\",\"bytes\",\"Uint8Array\",\"charCodeAt\",\"arr\",\"byteLength\",\"rgbBuf\",\"makeCssRgb\",\"r\",\"g\",\"b\",\"join\",\"transform\",\"m1\",\"m2\",\"applyTransform\",\"applyInverseTransform\",\"getAxialAlignedBoundingBox\",\"p1\",\"p2\",\"slice\",\"p3\",\"p4\",\"Math\",\"min\",\"max\",\"inverseTransform\",\"apply3dTransform\",\"v\",\"singularValueDecompose2dScale\",\"transpose\",\"a\",\"first\",\"second\",\"sqrt\",\"sx\",\"sy\",\"normalizeRect\",\"rect\",\"intersect\",\"rect1\",\"rect2\",\"compare\",\"orderedX\",\"sort\",\"orderedY\",\"result\",\"ROMAN_NUMBER_MAP\",\"toRoman\",\"number\",\"lowerCase\",\"Number\",\"isInteger\",\"pos\",\"romanBuf\",\"push\",\"romanStr\",\"toLowerCase\",\"appendToArray\",\"arr1\",\"arr2\",\"Array\",\"apply\",\"prependToArray\",\"unshift\",\"extendObj\",\"obj1\",\"obj2\",\"key\",\"getInheritableProperty\",\"dict\",\"getArray\",\"has\",\"inherit\",\"sub\",\"base\",\"prop\",\"create\",\"loadScript\",\"src\",\"callback\",\"script\",\"document\",\"createElement\",\"loaded\",\"setAttribute\",\"onload\",\"getElementsByTagName\",\"appendChild\",\"viewBox\",\"scale\",\"rotation\",\"offsetX\",\"offsetY\",\"dontFlip\",\"rotateA\",\"rotateB\",\"rotateC\",\"rotateD\",\"offsetCanvasX\",\"offsetCanvasY\",\"width\",\"height\",\"centerX\",\"centerY\",\"abs\",\"fontScale\",\"clone\",\"args\",\"convertToViewportPoint\",\"x\",\"y\",\"convertToViewportRectangle\",\"tl\",\"br\",\"convertToPdfPoint\",\"PDFStringTranslateTable\",\"capability\",\"promise\",\"Promise\",\"resolve\",\"reject\",\"digits\",\"data\",\"contentType\",\"Blob\",\"type\",\"forceDataSchema\",\"arguments\",\"URL\",\"blob\",\"buffer\",\"ii\",\"b1\",\"b2\",\"b3\",\"d1\",\"d2\",\"d3\",\"d4\",\"resolveCall\",\"fn\",\"thisArg\",\"wrapReason\",\"reason\",\"makeReasonSerializable\",\"toString\",\"resolveOrReject\",\"success\",\"sourceName\",\"targetName\",\"comObj\",\"_this\",\"callbackId\",\"streamId\",\"postMessageTransfers\",\"streamSinks\",\"streamControllers\",\"callbacksCapabilities\",\"ah\",\"actionHandler\",\"_onComObjOnMessage\",\"event\",\"stream\",\"_processStreamMessage\",\"isReply\",\"error\",\"action\",\"_sourceName\",\"_targetName\",\"then\",\"postMessage\",\"_createStreamSink\",\"addEventListener\",\"on\",\"actionName\",\"handler\",\"scope\",\"send\",\"transfers\",\"sendWithPromise\",\"e\",\"sendWithStream\",\"queueingStrategy\",\"_this2\",\"start\",\"controller\",\"startCapability\",\"startCall\",\"isClosed\",\"desiredSize\",\"pull\",\"pullCapability\",\"pullCall\",\"cancel\",\"cancelCapability\",\"cancelCall\",\"_this3\",\"sendStreamRequest\",\"_ref\",\"chunk\",\"streamSink\",\"enqueue\",\"size\",\"isCancelled\",\"lastDesiredSize\",\"sinkCapability\",\"ready\",\"close\",\"onPull\",\"onCancel\",\"_this4\",\"sendStreamResponse\",\"_ref2\",\"deleteStreamController\",\"all\",\"map\",\"catch\",\"destroy\",\"removeEventListener\",\"dependency\",\"setLineWidth\",\"setLineCap\",\"setLineJoin\",\"setMiterLimit\",\"setDash\",\"setRenderingIntent\",\"setFlatness\",\"setGState\",\"save\",\"restore\",\"moveTo\",\"lineTo\",\"curveTo\",\"curveTo2\",\"curveTo3\",\"closePath\",\"rectangle\",\"stroke\",\"closeStroke\",\"fill\",\"eoFill\",\"fillStroke\",\"eoFillStroke\",\"closeFillStroke\",\"closeEOFillStroke\",\"endPath\",\"clip\",\"eoClip\",\"beginText\",\"endText\",\"setCharSpacing\",\"setWordSpacing\",\"setHScale\",\"setLeading\",\"setFont\",\"setTextRenderingMode\",\"setTextRise\",\"moveText\",\"setLeadingMoveText\",\"setTextMatrix\",\"nextLine\",\"showText\",\"showSpacedText\",\"nextLineShowText\",\"nextLineSetSpacingShowText\",\"setCharWidth\",\"setCharWidthAndBounds\",\"setStrokeColorSpace\",\"setFillColorSpace\",\"setStrokeColor\",\"setStrokeColorN\",\"setFillColor\",\"setFillColorN\",\"setStrokeGray\",\"setFillGray\",\"setStrokeRGBColor\",\"setFillRGBColor\",\"setStrokeCMYKColor\",\"setFillCMYKColor\",\"shadingFill\",\"beginInlineImage\",\"beginImageData\",\"endInlineImage\",\"paintXObject\",\"markPoint\",\"markPointProps\",\"beginMarkedContent\",\"beginMarkedContentProps\",\"endMarkedContent\",\"beginCompat\",\"endCompat\",\"paintFormXObjectBegin\",\"paintFormXObjectEnd\",\"beginGroup\",\"endGroup\",\"beginAnnotations\",\"endAnnotations\",\"beginAnnotation\",\"endAnnotation\",\"paintJpegXObject\",\"paintImageMaskXObject\",\"paintImageMaskXObjectGroup\",\"paintImageXObject\",\"paintInlineImageXObject\",\"paintInlineImageXObjectGroup\",\"paintImageXObjectRepeat\",\"paintImageMaskXObjectRepeat\",\"paintSolidColorImageMask\",\"constructPath\",\"unknown\",\"forms\",\"javaScript\",\"smask\",\"shadingPattern\",\"font\",\"SOLID\",\"DASHED\",\"BEVELED\",\"INSET\",\"UNDERLINE\",\"READONLY\",\"REQUIRED\",\"NOEXPORT\",\"MULTILINE\",\"PASSWORD\",\"NOTOGGLETOOFF\",\"RADIO\",\"PUSHBUTTON\",\"COMBO\",\"EDIT\",\"SORT\",\"FILESELECT\",\"MULTISELECT\",\"DONOTSPELLCHECK\",\"DONOTSCROLL\",\"COMB\",\"RICHTEXT\",\"RADIOSINUNISON\",\"COMMITONSELCHANGE\",\"INVISIBLE\",\"HIDDEN\",\"PRINT\",\"NOZOOM\",\"NOROTATE\",\"NOVIEW\",\"LOCKED\",\"TOGGLENOVIEW\",\"LOCKEDCONTENTS\",\"TEXT\",\"LINK\",\"FREETEXT\",\"LINE\",\"SQUARE\",\"CIRCLE\",\"POLYGON\",\"POLYLINE\",\"HIGHLIGHT\",\"SQUIGGLY\",\"STRIKEOUT\",\"STAMP\",\"CARET\",\"INK\",\"POPUP\",\"FILEATTACHMENT\",\"SOUND\",\"MOVIE\",\"WIDGET\",\"SCREEN\",\"PRINTERMARK\",\"TRAPNET\",\"WATERMARK\",\"THREED\",\"REDACT\",\"UNKNOWN\",\"TYPE1\",\"TYPE1C\",\"CIDFONTTYPE0\",\"CIDFONTTYPE0C\",\"TRUETYPE\",\"CIDFONTTYPE2\",\"TYPE3\",\"OPENTYPE\",\"TYPE0\",\"MMTYPE1\",\"GRAYSCALE_1BPP\",\"RGB_24BPP\",\"RGBA_32BPP\",\"NONE\",\"BINARY\",\"STREAM\",\"DECODE\",\"DISPLAY\",\"NEED_PASSWORD\",\"INCORRECT_PASSWORD\",\"FLATE\",\"LZW\",\"DCT\",\"JPX\",\"JBIG\",\"A85\",\"AHX\",\"CCF\",\"RL\",\"FILL\",\"STROKE\",\"FILL_STROKE\",\"FILL_ADD_TO_PATH\",\"STROKE_ADD_TO_PATH\",\"FILL_STROKE_ADD_TO_PATH\",\"ADD_TO_PATH\",\"FILL_STROKE_MASK\",\"ADD_TO_PATH_FLAG\",\"item\",\"itemLength\",\"resultLength\",\"set\",\"String\",\"fromCharCode\",\"strBuf\",\"chunkEnd\",\"subarray\",\"initializer\",\"lookup\",\"ch\",\"baseUrl\",\"otherUrl\",\"origin\",\"other\",\"url\",\"absoluteUrl\",\"protocol\",\"isValidProtocol\",\"ex\",\"buffer8\",\"Uint32Array\",\"Function\",\"id\",\"imageUrl\",\"objs\",\"img\",\"Image\",\"onerror\",\"ceil\",\"offset\",\"replace\",\"level\",\"writable\",\"charAt\",\"decodeURIComponent\",\"escape\",\"unescape\",\"encodeURIComponent\",\"EOF\",\"Name\",\"nameCache\",\"nameValue\",\"Cmd\",\"cmd\",\"cmdCache\",\"cmdValue\",\"Dict\",\"nonSerializable\",\"xref\",\"_map\",\"objId\",\"suppressEncryption\",\"__nonSerializable__\",\"assignXref\",\"newXref\",\"key1\",\"key2\",\"key3\",\"fetchIfRef\",\"getAsync\",\"fetchIfRefAsync\",\"isArray\",\"isRef\",\"fetch\",\"getRaw\",\"getKeys\",\"keys\",\"forEach\",\"empty\",\"merge\",\"dictArray\",\"mergedDict\",\"isDict\",\"keyName\",\"Ref\",\"num\",\"gen\",\"RefSet\",\"ref\",\"put\",\"remove\",\"RefSetCache\",\"putAlias\",\"aliasRef\",\"clear\",\"isName\",\"isEOF\",\"isCmd\",\"isRefsEqual\",\"v1\",\"v2\",\"isStream\",\"getBytes\",\"LZWStream\",\"StringStream\",\"StreamsSequenceStream\",\"Stream\",\"RunLengthStream\",\"PredictorStream\",\"NullStream\",\"FlateStream\",\"DecodeStream\",\"DecryptStream\",\"AsciiHexStream\",\"Ascii85Stream\",\"_util\",\"_primitives\",\"arrayBuffer\",\"isEmpty\",\"getByte\",\"getUint16\",\"b0\",\"getInt32\",\"strEnd\",\"peekByte\",\"peekedByte\",\"peekBytes\",\"skip\",\"reset\",\"moveStart\",\"makeSubStream\",\"emptyBuffer\",\"maybeMinBufferLength\",\"bufferLength\",\"eof\",\"minBufferLength\",\"readBlock\",\"ensureBuffer\",\"requested\",\"buffer2\",\"bufEnd\",\"getBaseStreams\",\"streams\",\"shift\",\"newLength\",\"baseStreams\",\"codeLenCodeMap\",\"Int32Array\",\"lengthDecode\",\"distDecode\",\"fixedLitCodeTab\",\"fixedDistCodeTab\",\"maybeLength\",\"cmf\",\"flg\",\"codeSize\",\"codeBuf\",\"getBits\",\"bits\",\"getCode\",\"table\",\"codes\",\"maxLen\",\"codeLen\",\"codeVal\",\"generateHuffmanTable\",\"lengths\",\"len\",\"val\",\"code2\",\"t\",\"hdr\",\"litCodeTable\",\"distCodeTable\",\"numLitCodes\",\"numDistCodes\",\"numCodeLenCodes\",\"codeLenCodeLengths\",\"codeLenCodeTab\",\"bitsLength\",\"bitsOffset\",\"what\",\"codeLengths\",\"repeatLength\",\"limit\",\"code1\",\"dist\",\"k\",\"blockLen\",\"check\",\"params\",\"predictor\",\"readBlockTiff\",\"readBlockPng\",\"colors\",\"columns\",\"pixBytes\",\"rowBytes\",\"rawBytes\",\"inbuf\",\"outbuf\",\"inbits\",\"outbits\",\"bytesPerPixel\",\"sum\",\"compArray\",\"bitMask\",\"j\",\"kk\",\"prevRow\",\"up\",\"upLeft\",\"left\",\"pa\",\"pb\",\"pc\",\"decrypt\",\"nextChunk\",\"initialized\",\"hasMoreData\",\"input\",\"firstDigit\",\"maxDecodeLength\",\"digit\",\"repeatHeader\",\"source\",\"earlyChange\",\"cachedData\",\"bitsCached\",\"lzwState\",\"codeLength\",\"nextCode\",\"dictionaryValues\",\"dictionaryLengths\",\"Uint16Array\",\"dictionaryPrevCodes\",\"currentSequence\",\"currentSequenceLength\",\"readBits\",\"lastCode\",\"q\",\"estimatedDecodedSize\",\"blockSize\",\"prevCode\",\"decodedLength\",\"currentBufferLength\",\"hasPrev\",\"it\",\"store\",\"uid\",\"_Symbol\",\"USE_SYMBOL\",\"window\",\"__g\",\"core\",\"hide\",\"redefine\",\"ctx\",\"$export\",\"own\",\"out\",\"exp\",\"IS_FORCED\",\"F\",\"IS_GLOBAL\",\"G\",\"IS_PROTO\",\"P\",\"IS_BIND\",\"B\",\"target\",\"S\",\"expProto\",\"U\",\"W\",\"R\",\"version\",\"__e\",\"isObject\",\"TypeError\",\"SRC\",\"$toString\",\"TPL\",\"split\",\"inspectSource\",\"O\",\"safe\",\"isFunction\",\"aFunction\",\"that\",\"dP\",\"createDesc\",\"f\",\"exec\",\"anObject\",\"IE8_DOM_DEFINE\",\"toPrimitive\",\"Attributes\",\"IObject\",\"defined\",\"ColorSpace\",\"getRgb\",\"srcOffset\",\"rgb\",\"getRgbItem\",\"dest\",\"destOffset\",\"getRgbBuffer\",\"count\",\"alpha01\",\"getOutputLength\",\"inputLength\",\"isPassthrough\",\"fillRgb\",\"originalWidth\",\"originalHeight\",\"actualHeight\",\"bpc\",\"comps\",\"numComponentColors\",\"needsResizing\",\"numComps\",\"allColors\",\"destPos\",\"rgbPos\",\"colorMap\",\"w1\",\"h1\",\"w2\",\"h2\",\"py\",\"oldIndex\",\"xRatio\",\"yRatio\",\"newIndex\",\"xScaled\",\"w1Scanline\",\"floor\",\"resizeRgbImage\",\"usesZeroToOneRange\",\"parse\",\"cs\",\"res\",\"pdfFunctionFactory\",\"IR\",\"parseToIR\",\"fromIR\",\"whitePoint\",\"blackPoint\",\"gamma\",\"singletons\",\"gray\",\"cmyk\",\"CalGrayCS\",\"matrix\",\"CalRGBCS\",\"basePatternCS\",\"PatternCS\",\"baseIndexedCS\",\"hiVal\",\"IndexedCS\",\"alt\",\"tintFnIR\",\"AlternateCS\",\"createFromIR\",\"range\",\"LabCS\",\"colorSpaces\",\"resCS\",\"mode\",\"altIR\",\"altCS\",\"createIR\",\"isDefaultDecode\",\"decode\",\"DeviceGrayCS\",\"DeviceRgbCS\",\"DeviceCmykCS\",\"tintFn\",\"defaultColor\",\"Float32Array\",\"tmpBuf\",\"baseNumComps\",\"baseBuf\",\"scaled\",\"tinted\",\"decodeMap\",\"baseCS\",\"highVal\",\"outputDelta\",\"lookupPos\",\"convertToRgb\",\"srcScale\",\"XW\",\"YW\",\"ZW\",\"XB\",\"YB\",\"ZB\",\"A\",\"AG\",\"pow\",\"L\",\"BRADFORD_SCALE_MATRIX\",\"BRADFORD_SCALE_INVERSE_MATRIX\",\"SRGB_D65_XYZ_TO_RGB_MATRIX\",\"FLAT_WHITEPOINT_MATRIX\",\"tempNormalizeMatrix\",\"tempConvertMatrix1\",\"tempConvertMatrix2\",\"DECODE_L_CONSTANT\",\"GR\",\"GG\",\"GB\",\"MXA\",\"MYA\",\"MZA\",\"MXB\",\"MYB\",\"MZB\",\"MXC\",\"MYC\",\"MZC\",\"matrixProduct\",\"sRGBTransferFunction\",\"color\",\"adjustToRange\",\"decodeL\",\"C\",\"AGR\",\"BGG\",\"CGB\",\"X\",\"Y\",\"Z\",\"XYZ\",\"XYZ_Flat\",\"sourceWhitePoint\",\"XYZ_In\",\"LMS\",\"LMS_Flat\",\"convertToFlat\",\"normalizeWhitePointToFlat\",\"XYZ_Black\",\"sourceBlackPoint\",\"zeroDecodeL\",\"X_Scale\",\"X_Offset\",\"Y_Scale\",\"Y_Offset\",\"Z_Scale\",\"Z_Offset\",\"compensateBlackPoint\",\"XYZ_D65\",\"LMS_D65\",\"convertToD65\",\"normalizeWhitePointToD65\",\"SRGB\",\"sR\",\"sG\",\"sB\",\"round\",\"amin\",\"amax\",\"bmin\",\"bmax\",\"fn_g\",\"high1\",\"low2\",\"high2\",\"maxVal\",\"Ls\",\"as\",\"bs\",\"M\",\"N\",\"ExpertEncoding\",\"MacExpertEncoding\",\"MacRomanEncoding\",\"StandardEncoding\",\"WinAnsiEncoding\",\"SymbolSetEncoding\",\"ZapfDingbatsEncoding\",\"getEncoding\",\"encodingName\",\"px\",\"random\",\"concat\",\"$keys\",\"enumBugKeys\",\"def\",\"TAG\",\"tag\",\"stat\",\"isArrayIter\",\"toLength\",\"getIterFn\",\"BREAK\",\"RETURN\",\"_exports\",\"iterable\",\"entries\",\"ITERATOR\",\"step\",\"iterFn\",\"index\",\"next\",\"done\",\"Parser\",\"Linearization\",\"Lexer\",\"_stream\",\"_ccitt_stream\",\"_jbig2_stream\",\"_jpeg_stream\",\"_jpx_stream\",\"lexer\",\"allowStreams\",\"recoveryMode\",\"imageCache\",\"refill\",\"buf1\",\"getObj\",\"buf2\",\"tryShift\",\"cipherTransform\",\"makeInlineImage\",\"array\",\"makeStream\",\"decryptString\",\"findDefaultInlineStreamEnd\",\"startPos\",\"state\",\"maybeEIPos\",\"followingBytes\",\"findDCTDecodeInlineStreamEnd\",\"markerLength\",\"foundEOI\",\"inlineStreamSkipEI\",\"findASCII85DecodeInlineStreamEnd\",\"findASCIIHexDecodeInlineStreamEnd\",\"filterName\",\"filter\",\"filterZero\",\"adler32\",\"imageStream\",\"imageBytes\",\"cacheEntry\",\"createStream\",\"cacheKey\",\"skipToNextLine\",\"nextChar\",\"ENDSTREAM_SIGNATURE\",\"skipped\",\"found\",\"scanBytes\",\"scanLength\",\"makeFilter\",\"filterArray\",\"paramsArray\",\"xrefStreamStats\",\"stats\",\"streamTypes\",\"JpegStream\",\"JpxStream\",\"CCITTFaxStream\",\"Jbig2Stream\",\"knownCommands\",\"specialChars\",\"toHexDigit\",\"currentChar\",\"peekChar\",\"getNumber\",\"eNotation\",\"divideBy\",\"sign\",\"baseValue\",\"powerValue\",\"powerValueSign\",\"currentDigit\",\"getString\",\"numParen\",\"charBuffered\",\"getName\",\"previousCh\",\"x2\",\"getHexString\",\"secondDigit\",\"isFirstHex\",\"comment\",\"knownCommandFound\",\"possibleCommand\",\"getInt\",\"allowZeroValue\",\"linDict\",\"parser\",\"obj3\",\"hints\",\"hintsLength\",\"getHints\",\"objectNumberFirst\",\"endFirst\",\"numPages\",\"mainXRefEntriesOffset\",\"pageFirst\",\"is\",\"bitmap\",\"cof\",\"propertyIsEnumerable\",\"toInteger\",\"isNaN\",\"ARG\",\"T\",\"tryGet\",\"callee\",\"shared\",\"Constructor\",\"forbiddenField\",\"PromiseCapability\",\"$$resolve\",\"$$reject\",\"META\",\"setDesc\",\"isExtensible\",\"FREEZE\",\"preventExtensions\",\"setMeta\",\"w\",\"meta\",\"KEY\",\"NEED\",\"fastKey\",\"getWeak\",\"onFreeze\",\"_jpg\",\"jpegImage\",\"JpegImage\",\"decodeArr\",\"forceRGB\",\"bitsPerComponent\",\"decodeArrLength\",\"transformNeeded\",\"maxValue\",\"decodeTransform\",\"colorTransform\",\"getData\",\"drawWidth\",\"drawHeight\",\"getIR\",\"OperatorList\",\"QueueOptimizer\",\"addState\",\"parentState\",\"pattern\",\"checkFn\",\"iterateFn\",\"processFn\",\"InitialState\",\"queue\",\"context\",\"iCurr\",\"fnArray\",\"argsArray\",\"match\",\"lastProcessed\",\"curr\",\"iFirstSave\",\"iFirstTransform\",\"iFirstPIIXO\",\"maxX\",\"maxLineHeight\",\"currentX\",\"currentY\",\"h\",\"imgWidth\",\"imgHeight\",\"imgData\",\"imgRowSize\",\"rowSize\",\"dataOffset\",\"splice\",\"kind\",\"iFirstPIMXO\",\"arg\",\"imageMask\",\"handlePaintSolidColorImageMask\",\"iTransform\",\"transformArgs\",\"isSameImage\",\"firstPIMXOArg0\",\"firstTransformArg0\",\"firstTransformArg3\",\"iPIMXO\",\"positions\",\"images\",\"maskParams\",\"firstPIXOArg0\",\"iFirstSetFont\",\"firstSetFontArg0\",\"firstSetFontArg1\",\"iFirstBeginText\",\"iFirstSetTextMatrix\",\"iFirstShowText\",\"iFirstEndText\",\"iFirst\",\"iEndText\",\"_optimize\",\"flush\",\"NullOptimizer\",\"intent\",\"messageHandler\",\"pageIndex\",\"optimizer\",\"dependencies\",\"_totalLength\",\"weight\",\"totalLength\",\"addOp\",\"CHUNK_SIZE\",\"addDependency\",\"addDependencies\",\"addOpList\",\"opList\",\"lastChunk\",\"cached\",\"getTransfers\",\"operatorList\",\"getGlyphsUnicode\",\"getDingbatsGlyphsUnicode\",\"valueOf\",\"toIObject\",\"toAbsoluteIndex\",\"IS_INCLUDES\",\"$this\",\"el\",\"fromIndex\",\"UNSCOPABLES\",\"ArrayProto\",\"classof\",\"test\",\"LIBRARY\",\"Iterators\",\"$iterCreate\",\"setToStringTag\",\"getPrototypeOf\",\"BUGGY\",\"returnThis\",\"Base\",\"NAME\",\"DEFAULT\",\"IS_SET\",\"FORCED\",\"methods\",\"IteratorPrototype\",\"getMethod\",\"proto\",\"DEF_VALUES\",\"VALUES_BUG\",\"$native\",\"$default\",\"$entries\",\"$anyNative\",\"values\",\"documentElement\",\"$iterators\",\"wks\",\"TO_STRING_TAG\",\"ArrayValues\",\"DOMIterables\",\"CSSRuleList\",\"CSSStyleDeclaration\",\"CSSValueList\",\"ClientRectList\",\"DOMRectList\",\"DOMStringList\",\"DOMTokenList\",\"DataTransferItemList\",\"FileList\",\"HTMLAllCollection\",\"HTMLCollection\",\"HTMLFormElement\",\"HTMLSelectElement\",\"MediaList\",\"MimeTypeArray\",\"NamedNodeMap\",\"NodeList\",\"PaintRequestList\",\"Plugin\",\"PluginArray\",\"SVGLengthList\",\"SVGNumberList\",\"SVGPathSegList\",\"SVGPointList\",\"SVGStringList\",\"SVGTransformList\",\"SourceBufferList\",\"StyleSheetList\",\"TextTrackCueList\",\"TextTrackList\",\"TouchList\",\"collections\",\"explicit\",\"Collection\",\"SPECIES\",\"D\",\"defer\",\"channel\",\"port\",\"invoke\",\"html\",\"cel\",\"setTask\",\"setImmediate\",\"clearTask\",\"clearImmediate\",\"MessageChannel\",\"Dispatch\",\"counter\",\"run\",\"listener\",\"nextTick\",\"now\",\"port2\",\"port1\",\"onmessage\",\"importScripts\",\"removeChild\",\"setTimeout\",\"newPromiseCapability\",\"promiseCapability\",\"SAFE_CLOSING\",\"riter\",\"from\",\"skipClosing\",\"iter\",\"toObject\",\"asc\",\"TYPE\",\"$create\",\"IS_MAP\",\"IS_FILTER\",\"IS_SOME\",\"IS_EVERY\",\"IS_FIND_INDEX\",\"NO_HOLES\",\"callbackfn\",\"_t\",\"ChunkedStreamManager\",\"ChunkedStream\",\"chunkSize\",\"manager\",\"loadedChunks\",\"numChunksLoaded\",\"numChunks\",\"progressiveDataLength\",\"lastSuccessfulEnsureByteChunk\",\"getMissingChunks\",\"chunks\",\"allChunksLoaded\",\"onReceiveData\",\"curChunk\",\"beginChunk\",\"endChunk\",\"onReceiveProgressiveData\",\"position\",\"ensureByte\",\"ensureRange\",\"nextEmptyChunk\",\"hasChunk\",\"getByteRange\",\"ChunkedStreamSubstream\",\"missingChunks\",\"subStream\",\"pdfNetworkStream\",\"rangeChunkSize\",\"disableAutoFetch\",\"msgHandler\",\"currRequestId\",\"chunksNeededByRequest\",\"requestsByChunk\",\"promisesByRequest\",\"aborted\",\"_loadedStreamCapability\",\"onLoadedStream\",\"sendRequest\",\"rangeReader\",\"getRangeReader\",\"isStreamingSupported\",\"onProgress\",\"bind\",\"read\",\"readChunk\",\"chunkData\",\"requestAllChunks\",\"_requestChunks\",\"requestId\",\"chunksNeeded\",\"chunksToRequest\",\"groupedChunksToRequest\",\"groupChunks\",\"groupedChunk\",\"getStream\",\"requestRange\",\"getBeginChunk\",\"getEndChunk\",\"requestRanges\",\"ranges\",\"indexOf\",\"groupedChunks\",\"prevChunk\",\"bytesLoaded\",\"total\",\"isProgressive\",\"loadedRequests\",\"requestIds\",\"onError\",\"err\",\"abort\",\"cancelAllRequests\",\"FileSpec\",\"XRef\",\"ObjectLoader\",\"Catalog\",\"_slicedToArray\",\"_arr\",\"_n\",\"_d\",\"_e\",\"_s\",\"_i\",\"sliceIterator\",\"_parser\",\"_chunked_stream\",\"_crypto\",\"_colorspace\",\"pdfManager\",\"pageFactory\",\"catDict\",\"getCatalogObj\",\"fontCache\",\"builtInCMapCache\",\"pageKidsCountCache\",\"pagePromises\",\"metadata\",\"streamRef\",\"encryptMetadata\",\"encrypt\",\"subtype\",\"toplevelPagesDict\",\"pagesObj\",\"documentOutline\",\"readDocumentOutline\",\"root\",\"items\",\"parent\",\"processed\",\"blackColor\",\"outlineDict\",\"parseDestDictionary\",\"destDict\",\"resultObj\",\"docBaseUrl\",\"title\",\"flags\",\"rgbColor\",\"outlineItem\",\"unsafeUrl\",\"newWindow\",\"bold\",\"italic\",\"destinations\",\"fetchDestination\",\"nameTreeRef\",\"nameDictionaryRef\",\"dests\",\"names\",\"NameTree\",\"getAll\",\"getDestination\",\"destinationId\",\"pageLabels\",\"readPageLabels\",\"style\",\"prefix\",\"nums\",\"NumberTree\",\"currentLabel\",\"currentIndex\",\"labelDict\",\"st\",\"baseCharCode\",\"letterIndex\",\"character\",\"charBuf\",\"jj\",\"pageMode\",\"attachments\",\"fs\",\"serializable\",\"appendIfJavaScriptDict\",\"jsDict\",\"js\",\"openactionDict\",\"actionType\",\"cleanup\",\"promises\",\"translatedFonts\",\"translated\",\"getPage\",\"getPageDict\",\"createPage\",\"nodesToVisit\",\"currentPageIndex\",\"currentNode\",\"pop\",\"fetchAsync\",\"kids\",\"last\",\"getPageIndex\",\"pageRef\",\"kidRef\",\"parentRef\",\"node\",\"kidPromises\",\"kid\",\"pagesBeforeRef\",\"addDefaultProtocolToUrl\",\"urlDict\",\"remoteDest\",\"JSON\",\"stringify\",\"namedAction\",\"jsAction\",\"jsUrl\",\"RegExp\",\"tryConvertUrlEncoding\",\"href\",\"xrefstms\",\"cache\",\"fontTypes\",\"setStartXRef\",\"startXRef\",\"startXRefQueue\",\"trailerDict\",\"indexObjects\",\"readXRef\",\"trailer\",\"ids\",\"fileId\",\"CipherTransformFactory\",\"password\",\"processXRefTable\",\"tableState\",\"entryNum\",\"streamPos\",\"parserBuf1\",\"parserBuf2\",\"readXRefTable\",\"firstEntryNum\",\"entryCount\",\"entry\",\"free\",\"uncompressed\",\"processXRefStream\",\"streamParameters\",\"byteWidths\",\"streamState\",\"entryRanges\",\"readXRefStream\",\"typeFieldWidth\",\"offsetFieldWidth\",\"generationFieldWidth\",\"generation\",\"LF\",\"CR\",\"LT\",\"readToken\",\"token\",\"skipUntil\",\"dataLength\",\"objRegExp\",\"endobjRegExp\",\"nestedObjRegExp\",\"trailerBytes\",\"startxrefBytes\",\"objBytes\",\"xrefBytes\",\"trailers\",\"xrefStms\",\"contentLength\",\"endPos\",\"checkPos\",\"tokenStr\",\"objToken\",\"content\",\"xrefTagOffset\",\"startXRefParsedCache\",\"topDict\",\"getEntry\",\"xrefEntry\",\"fetchUncompressed\",\"fetchCompressed\",\"parseInt\",\"substring\",\"createCipherTransform\",\"tableOffset\",\"streamManager\",\"tryFetch\",\"NameOrNumberTree\",\"_type\",\"kidsOrEntries\",\"loopCount\",\"limits\",\"currentKey\",\"description\",\"contentAvailable\",\"pickPlatformItem\",\"filename\",\"_filename\",\"contentRef\",\"fileObj\",\"mayHaveChildren\",\"addChildren\",\"dictKeys\",\"rawValue\",\"_ii\",\"refSet\",\"load\",\"_walk\",\"nodesToRevisit\",\"pendingRequests\",\"foundMissingData\",\"_i2\",\"_ii2\",\"CCITTFaxDecoder\",\"twoDimTable\",\"whiteTable1\",\"whiteTable2\",\"blackTable1\",\"blackTable2\",\"blackTable3\",\"options\",\"encoding\",\"eoline\",\"byteAlign\",\"rows\",\"eoblock\",\"black\",\"codingLine\",\"refLine\",\"codingPos\",\"row\",\"nextLine2D\",\"inputBits\",\"inputBuf\",\"outputBits\",\"rowsDone\",\"_lookBits\",\"_eatBits\",\"readNextChar\",\"refPos\",\"blackPixels\",\"code3\",\"_getTwoDimCode\",\"_addPixels\",\"_getBlackCode\",\"_getWhiteCode\",\"_addPixelsNeg\",\"gotEOL\",\"a1\",\"_findTableCode\",\"limitValue\",\"ArithmeticDecoder\",\"QeTable\",\"qe\",\"nmps\",\"nlps\",\"switchFlag\",\"bp\",\"dataEnd\",\"chigh\",\"clow\",\"byteIn\",\"ct\",\"readBit\",\"contexts\",\"cx_index\",\"cx_mps\",\"qeTableIcx\",\"qeIcx\",\"JpxImage\",\"_arithmetic_decoder\",\"JpxError\",\"SubbandsGainLog2\",\"LL\",\"LH\",\"HL\",\"HH\",\"failOnCorruptedImage\",\"calculateComponentDimensions\",\"component\",\"siz\",\"x0\",\"XOsiz\",\"XRsiz\",\"x1\",\"Xsiz\",\"y0\",\"YOsiz\",\"YRsiz\",\"y1\",\"Ysiz\",\"calculateTileGrids\",\"components\",\"tile\",\"SIZ\",\"tiles\",\"numXtiles\",\"XTOsiz\",\"XTsiz\",\"numYtiles\",\"YTOsiz\",\"YTsiz\",\"tx0\",\"ty0\",\"tx1\",\"ty1\",\"Csiz\",\"tileComponent\",\"tcx0\",\"tcy0\",\"tcx1\",\"tcy1\",\"getBlocksDimensions\",\"codOrCoc\",\"codingStyleParameters\",\"entropyCoderWithCustomPrecincts\",\"PPx\",\"precinctsSizes\",\"PPy\",\"xcb_\",\"xcb\",\"ycb_\",\"ycb\",\"buildPrecincts\",\"resolution\",\"dimensions\",\"precinctWidth\",\"precinctHeight\",\"isZeroRes\",\"resLevel\",\"precinctWidthInSubband\",\"precinctHeightInSubband\",\"numprecinctswide\",\"trx1\",\"trx0\",\"numprecinctshigh\",\"try1\",\"try0\",\"numprecincts\",\"precinctParameters\",\"buildCodeblocks\",\"subband\",\"codeblock\",\"precinctNumber\",\"codeblockWidth\",\"codeblockHeight\",\"cbx0\",\"tbx0\",\"cby0\",\"tby0\",\"cbx1\",\"tbx1\",\"cby1\",\"tby1\",\"codeblocks\",\"precincts\",\"cbx\",\"cby\",\"tbx0_\",\"tby0_\",\"tbx1_\",\"tby1_\",\"subbandType\",\"Lblock\",\"precinct\",\"cbxMin\",\"cbxMax\",\"cbyMin\",\"cbyMax\",\"codeblockParameters\",\"numcodeblockwide\",\"numcodeblockhigh\",\"createPacket\",\"layerNumber\",\"precinctCodeblocks\",\"subbands\",\"LayerResolutionComponentPositionIterator\",\"tileIndex\",\"currentTile\",\"layersCount\",\"codingStyleDefaultParameters\",\"componentsCount\",\"maxDecompositionLevelsCount\",\"decompositionLevelsCount\",\"nextPacket\",\"resolutions\",\"packet\",\"ResolutionLayerComponentPositionIterator\",\"ResolutionPositionComponentLayerIterator\",\"maxNumPrecinctsInLevel\",\"maxNumPrecincts\",\"PositionComponentResolutionLayerIterator\",\"getPrecinctSizesInImageScale\",\"precinctsIterationSizes\",\"maxNumHigh\",\"maxNumWide\",\"sizeInImageScale\",\"getPrecinctIndexIfExist\",\"ComponentPositionResolutionLayerIterator\",\"pxIndex\",\"pyIndex\",\"precinctIterationSizes\",\"posX\",\"minWidth\",\"posY\",\"minHeight\",\"startPrecinctRowIndex\",\"MAX_VALUE\",\"sizePerComponent\",\"sizePerResolution\",\"minWidthCurrentComponent\",\"minHeightCurrentComponent\",\"maxNumWideCurrentComponent\",\"maxNumHighCurrentComponent\",\"widthCurrentResolution\",\"heightCurrentResolution\",\"buildPackets\",\"blocksDimensions\",\"bscale\",\"resolutionSubbands\",\"progressionOrder\",\"packetsIterator\",\"parseTilePackets\",\"bufferSize\",\"skipNextBit\",\"skipMarkerIfEqual\",\"skipBytes\",\"alignToByte\",\"readCodingpasses\",\"sopMarkerUsed\",\"COD\",\"ephMarkerUsed\",\"codeblockColumn\",\"codeblockRow\",\"codeblockIncluded\",\"firstTimeInclusion\",\"inclusionTree\",\"zeroBitPlanesTree\",\"InclusionTree\",\"TagTree\",\"incrementValue\",\"nextLevel\",\"included\",\"zeroBitPlanes\",\"codingpasses\",\"codingpassesLog2\",\"codedDataLength\",\"packetItem\",\"copyCoefficients\",\"coefficients\",\"levelWidth\",\"levelHeight\",\"delta\",\"mb\",\"reversible\",\"segmentationSymbolUsed\",\"right\",\"bottom\",\"blockWidth\",\"blockHeight\",\"bitModel\",\"currentCodingpassType\",\"BitModel\",\"dataItem\",\"encodedData\",\"decoder\",\"setDecoder\",\"runSignificancePropagationPass\",\"runMagnitudeRefinementPass\",\"runCleanupPass\",\"checkSegmentationSymbol\",\"nb\",\"coefficentsSign\",\"magnitude\",\"coefficentsMagnitude\",\"bitsDecoded\",\"magnitudeCorrection\",\"interleave\",\"levelOffset\",\"transformTile\",\"quantizationParameters\",\"spqcds\",\"SPqcds\",\"scalarExpounded\",\"guardBits\",\"precision\",\"reversibleTransformation\",\"ReversibleTransform\",\"IrreversibleTransform\",\"subbandCoefficients\",\"mu\",\"epsilon\",\"gainLog2\",\"calculate\",\"top\",\"initializeTile\",\"qcdOrQcc\",\"QCC\",\"QCD\",\"COC\",\"headerSize\",\"lbox\",\"tbox\",\"jumpDataLength\",\"method\",\"colorspace\",\"parseCodestream\",\"headerType\",\"parseImageProperties\",\"newByte\",\"doNotRecover\",\"sqcd\",\"spqcdSize\",\"mainHeader\",\"isSigned\",\"qcd\",\"noQuantization\",\"spqcd\",\"cqcc\",\"qcc\",\"cod\",\"scod\",\"multipleComponentTransform\",\"blockStyle\",\"selectiveArithmeticCodingBypass\",\"resetContextProbabilities\",\"terminationOnEachCodingPass\",\"verticalyStripe\",\"predictableTermination\",\"precinctsSize\",\"unsupported\",\"partIndex\",\"partsCount\",\"resultImages\",\"transformedTiles\",\"y2\",\"tile0\",\"Uint8ClampedArray\",\"fourComponents\",\"y0items\",\"y1items\",\"y2items\",\"y3items\",\"component0\",\"transformComponents\",\"levelsLength\",\"levels\",\"currentLevel\",\"defaultValue\",\"stopValue\",\"propagateValues\",\"levelIndex\",\"currentValue\",\"LLAndLHContextsLabel\",\"HLContextLabel\",\"HHContextLabel\",\"contextLabelTable\",\"coefficientCount\",\"neighborsSignificance\",\"processingFlags\",\"Int8Array\",\"setNeighborsSignificance\",\"column\",\"labels\",\"i0\",\"i1\",\"contextLabel\",\"decodeSignBit\",\"contribution\",\"sign0\",\"sign1\",\"significance1\",\"decoded\",\"horizontalContribution\",\"indexNext\",\"width4\",\"index0\",\"bit\",\"iNext\",\"oneRowDown\",\"twoRowsDown\",\"threeRowsDown\",\"indexBase\",\"checkAllEmpty\",\"i2\",\"Transform\",\"u0\",\"v0\",\"ll\",\"iterate\",\"extend\",\"j1\",\"j2\",\"hl_lh_hh\",\"u\",\"llWidth\",\"llHeight\",\"llItems\",\"rowBuffer\",\"numBuffers\",\"colBuffers\",\"currentBuffer\",\"current\",\"alpha\",\"beta\",\"K\",\"calculateSHA512\",\"calculateSHA384\",\"calculateSHA256\",\"calculateMD5\",\"PDF20\",\"PDF17\",\"ARCFourCipher\",\"AES256Cipher\",\"AES128Cipher\",\"tmp\",\"keyLength\",\"encryptBlock\",\"tmp2\",\"output\",\"decryptBlock\",\"h0\",\"h3\",\"paddedLength\",\"padded\",\"rotateArg\",\"rotate\",\"Word64\",\"highInteger\",\"lowInteger\",\"high\",\"low\",\"and\",\"word\",\"xor\",\"or\",\"shiftRight\",\"places\",\"shiftLeft\",\"rotateRight\",\"not\",\"add\",\"lowAdd\",\"highAdd\",\"copyTo\",\"assign\",\"rotr\",\"z\",\"maj\",\"sigma\",\"sigmaPrime\",\"littleSigma\",\"h4\",\"h5\",\"h6\",\"h7\",\"t1\",\"t2\",\"littleSigmaPrime\",\"mode384\",\"tmp3\",\"tmp1\",\"NullCipher\",\"rcon\",\"inv_s\",\"mixCol\",\"mix\",\"decrypt128\",\"s0\",\"s1\",\"s2\",\"s3\",\"encrypt128\",\"cipherKey\",\"t3\",\"t4\",\"expandKey128\",\"bufferPosition\",\"decryptBlock2\",\"finalize\",\"sourceLength\",\"iv\",\"plain\",\"outputLength\",\"lastBlock\",\"psLen\",\"cipher\",\"decrypt256\",\"encrypt256\",\"expandKey256\",\"compareByteArrays\",\"array1\",\"array2\",\"checkOwnerPassword\",\"ownerValidationSalt\",\"userBytes\",\"ownerPassword\",\"hashData\",\"checkUserPassword\",\"userValidationSalt\",\"userPassword\",\"getOwnerKey\",\"ownerKeySalt\",\"ownerEncryption\",\"getUserKey\",\"userKeySalt\",\"userEncryption\",\"concatArrays\",\"calculatePDF20Hash\",\"arrayLength\",\"k1\",\"remainder\",\"hash\",\"concatBytes\",\"CipherTransform\",\"stringCipherConstructor\",\"streamCipherConstructor\",\"StringCipherConstructor\",\"StreamCipherConstructor\",\"defaultPasswordBytes\",\"prepareKeyData\",\"revision\",\"hashDataSize\",\"keyLengthInBytes\",\"checkData\",\"encryptionKey\",\"derivedKey\",\"identityName\",\"algorithm\",\"cfDict\",\"streamCryptoName\",\"handlerDict\",\"passwordBytes\",\"fileIdBytes\",\"uBytes\",\"perms\",\"passwordLength\",\"pdfAlgorithm\",\"createEncryptionKey20\",\"decodeUserPassword\",\"cf\",\"stmf\",\"strf\",\"eff\",\"buildObjectKey\",\"isAes\",\"buildCipherConstructor\",\"cfm\",\"cryptFilter\",\"cipherConstructor\",\"CFFCompiler\",\"CFFPrivateDict\",\"CFFTopDict\",\"CFFCharset\",\"CFFIndex\",\"CFFStrings\",\"CFFHeader\",\"CFF\",\"CFFParser\",\"CFFStandardStrings\",\"_charsets\",\"_encodings\",\"CharstringValidationData\",\"stackClearing\",\"stem\",\"resetStack\",\"undefStack\",\"CharstringValidationData12\",\"stackDelta\",\"stackFn\",\"stack\",\"file\",\"properties\",\"seacAnalysisEnabled\",\"cff\",\"header\",\"parseHeader\",\"nameIndex\",\"parseIndex\",\"topDictIndex\",\"stringIndex\",\"globalSubrIndex\",\"topDictParsed\",\"parseDict\",\"createDict\",\"strings\",\"parseNameIndex\",\"parseStringIndex\",\"parsePrivateDict\",\"isCIDFont\",\"hasName\",\"charStringOffset\",\"getByName\",\"charStringIndex\",\"fontMatrix\",\"charset\",\"fontBBox\",\"ascent\",\"descent\",\"ascentScaled\",\"fdArrayIndex\",\"dictRaw\",\"fontDict\",\"fdArray\",\"parseCharsets\",\"fdSelect\",\"parseFDSelect\",\"parseEncoding\",\"charStringsAndSeacs\",\"parseCharStrings\",\"charStrings\",\"localSubrIndex\",\"privateDict\",\"subrsIndex\",\"seacs\",\"widths\",\"bytesLength\",\"major\",\"minor\",\"hdrSize\",\"offSize\",\"parseOperand\",\"parseFloat\",\"parseFloatOperand\",\"NaN\",\"operands\",\"cffIndex\",\"offsets\",\"offsetSize\",\"offsetStart\",\"offsetEnd\",\"Type\",\"cffDict\",\"pair\",\"setByKey\",\"parseCharString\",\"callDepth\",\"stackSize\",\"validationCommand\",\"seac\",\"bias\",\"subrNumber\",\"firstStackClearing\",\"charstring\",\"valid\",\"localSubrToUse\",\"privateDictToUse\",\"fdIndex\",\"getFDIndex\",\"nominalWidth\",\"defaultWidth\",\"emptyPrivateDictionary\",\"parentDict\",\"privateOffset\",\"privateDictEnd\",\"dictData\",\"subrsOffset\",\"relativeOffset\",\"removeByName\",\"cid\",\"CFFCharsetPredefinedTypes\",\"ISO_ADOBE\",\"ISOAdobeCharset\",\"EXPERT\",\"ExpertCharset\",\"EXPERT_SUBSET\",\"ExpertSubsetCharset\",\"format\",\"raw\",\"predefined\",\"baseEncoding\",\"dataStart\",\"glyphsCount\",\"rangesCount\",\"gid\",\"supplementsCount\",\"sid\",\"readSupplement\",\"CFFEncoding\",\"invalidFirstGID\",\"CFFFDSelect\",\"objects\",\"CFFDict\",\"tables\",\"keyToNameMap\",\"nameToKeyMap\",\"defaults\",\"types\",\"opcodes\",\"order\",\"valueLength\",\"setByName\",\"createTables\",\"layout\",\"glyphIndex\",\"CFFOffsetTracker\",\"isTracking\",\"track\",\"location\",\"setEntryLocation\",\"offset0\",\"offset1\",\"offset2\",\"offset3\",\"offset4\",\"compile\",\"compileHeader\",\"compileNameIndex\",\"subDict\",\"compiled\",\"compileTopDicts\",\"topDictTracker\",\"trackers\",\"compileStringIndex\",\"compileIndex\",\"compileEncoding\",\"compileCharset\",\"compileCharStrings\",\"compileFDSelect\",\"fontDictTrackers\",\"compilePrivateDicts\",\"encodeNumber\",\"encodeFloat\",\"encodeInteger\",\"nibbles\",\"substr\",\"sanitizedName\",\"char\",\"dicts\",\"removeCidKeys\",\"fontDictTracker\",\"fontDictData\",\"compileDict\",\"privateDictTracker\",\"privateDictData\",\"subrs\",\"offsetTracker\",\"compileGlobalSubrIndex\",\"writeByteArray\",\"compileTypedArray\",\"lastOffset\",\"getSupplementalGlyphMapForCalibri\",\"getSupplementalGlyphMapForArialBlack\",\"getGlyphMapForStandardFonts\",\"getSymbolsFonts\",\"getSerifFonts\",\"getNonStdFontMap\",\"getStdFontMap\",\"getSpecialPUASymbols\",\"UnicodeRanges\",\"getNormalizedUnicodes\",\"mapSpecialUnicodeValues\",\"reverseIfRtl\",\"chars\",\"charsLength\",\"getUnicodeRangeFor\",\"getUnicodeForGlyph\",\"glyphsUnicodeMap\",\"unicode\",\"hexStr\",\"nameLen\",\"toUpperCase\",\"PostScriptCompiler\",\"PostScriptEvaluator\",\"PDFFunctionFactory\",\"isPDFFunction\",\"_createClass\",\"defineProperties\",\"props\",\"descriptor\",\"protoProps\",\"staticProps\",\"_ps_parser\",\"IsEvalSupportedCached\",\"_ref$isEvalSupported\",\"instance\",\"_classCallCheck\",\"PDFFunction\",\"fnObj\",\"parseArray\",\"getSampleArray\",\"outputSize\",\"bps\",\"sampleMul\",\"strBytes\",\"strIdx\",\"typeFn\",\"constructSampled\",\"constructInterpolated\",\"constructStiched\",\"constructPostScript\",\"_ref3\",\"constructSampledFromIR\",\"constructInterpolatedFromIR\",\"constructStichedFromIR\",\"constructPostScriptFromIR\",\"_ref4\",\"_ref5\",\"_ref6\",\"toMultiArray\",\"domain\",\"inputSize\",\"encode\",\"_ref7\",\"interpolate\",\"xmin\",\"xmax\",\"ymin\",\"ymax\",\"samples\",\"cubeVertices\",\"cubeN\",\"Float64Array\",\"cubeVertex\",\"domain_2i\",\"domain_2i_1\",\"size_i\",\"e0\",\"n0\",\"n1\",\"rj\",\"_ref8\",\"c0\",\"c1\",\"diff\",\"_ref9\",\"_ref10\",\"fnRefs\",\"fns\",\"_ref11\",\"bounds\",\"fnsIR\",\"dmin\",\"dmax\",\"rmin\",\"rmax\",\"_ref12\",\"PostScriptLexer\",\"PostScriptParser\",\"_ref13\",\"numOutputs\",\"numInputs\",\"evaluator\",\"cache_available\",\"cachedValue\",\"execute\",\"stackIndex\",\"bound\",\"PostScriptStack\",\"initialStack\",\"copy\",\"roll\",\"operators\",\"operator\",\"atan\",\"cos\",\"LN10\",\"sin\",\"AstNode\",\"AstArgument\",\"AstLiteral\",\"AstBinaryOperation\",\"op\",\"arg1\",\"arg2\",\"AstMin\",\"AstVariable\",\"AstVariableDefinition\",\"variable\",\"ExpressionBuilderVisitor\",\"parts\",\"buildAddOperation\",\"num1\",\"num2\",\"buildMulOperation\",\"buildSubOperation\",\"buildMinOperation\",\"visit\",\"visitor\",\"visitArgument\",\"visitLiteral\",\"visitBinaryOperation\",\"visitMin\",\"visitVariable\",\"visitVariableDefinition\",\"literal\",\"operation\",\"definition\",\"ast1\",\"ast2\",\"tmpVar\",\"instructions\",\"lastRegister\",\"instruction\",\"statementBuilder\",\"expr\",\"fnDict\",\"pdfjsCoreWorker\",\"WorkerMessageHandler\",\"WorkerTask\",\"_pdf_manager\",\"_is_node\",\"_is_node2\",\"default\",\"maybePort\",\"terminated\",\"_capability\",\"finished\",\"finish\",\"terminate\",\"ensureNotTerminated\",\"PDFWorkerStream\",\"_msgHandler\",\"_contentLength\",\"_fullRequestReader\",\"_rangeRequestReaders\",\"PDFWorkerStreamReader\",\"_isRangeSupported\",\"_isStreamingSupported\",\"readableStream\",\"_reader\",\"getReader\",\"_headersReady\",\"isRangeSupported\",\"PDFWorkerStreamRangeReader\",\"getFullReader\",\"reader\",\"headersReady\",\"setup\",\"testMessageProcessed\",\"supportTransfers\",\"xhr\",\"XMLHttpRequest\",\"responseExists\",\"responseType\",\"supportTypedArray\",\"createDocumentHandler\",\"docParams\",\"cancelXHRs\",\"WorkerTasks\",\"apiVersion\",\"docId\",\"workerHandlerName\",\"startWorkerTask\",\"task\",\"finishWorkerTask\",\"loadDocument\",\"loadDocumentCapability\",\"parseSuccess\",\"ensureDoc\",\"fingerprint\",\"parseFailure\",\"getPdfManager\",\"evaluatorOptions\",\"pdfManagerCapability\",\"LocalPdfManager\",\"pdfStream\",\"cachedChunks\",\"fullRequest\",\"NetworkPdfManager\",\"sendProgressiveData\",\"pdfFile\",\"flushChunks\",\"page\",\"rotatePromise\",\"ensure\",\"refPromise\",\"userUnitPromise\",\"viewPromise\",\"results\",\"userUnit\",\"view\",\"pdfDocument\",\"catalog\",\"ensureCatalog\",\"requestLoadedStream\",\"pageNum\",\"Date\",\"getOperatorList\",\"renderInteractiveForms\",\"featureId\",\"wrappedException\",\"minimumStackMessage\",\"sink\",\"extractTextContent\",\"normalizeWhitespace\",\"combineTextItems\",\"waitOn\",\"onSuccess\",\"doc\",\"pdfInfo\",\"onFailure\",\"updatePassword\",\"pdfManagerReady\",\"disableCreateObjectURL\",\"maxImageSize\",\"disableFontFace\",\"nativeImageDecoderSupport\",\"ignoreErrors\",\"newPdfManager\",\"setupDoc\",\"initializeFromPort\",\"PDFJS\",\"compatibilityChecked\",\"globalScope\",\"isNodeJS\",\"userAgent\",\"navigator\",\"isAndroid\",\"isIOSChrome\",\"isIE\",\"isIOS\",\"isSafari\",\"hasDOM\",\"btoa\",\"atob\",\"locale\",\"userLanguage\",\"disableRange\",\"disableStream\",\"maxCanvasPixels\",\"disableFullscreen\",\"scripts\",\"Element\",\"parentNode\",\"includes\",\"WeakMap\",\"hasWorkingUrl\",\"pathname\",\"relative\",\"relativePathDotMapping\",\"ALPHA\",\"ALPHANUMERIC\",\"JURL\",\"_isInvalid\",\"_url\",\"authority\",\"_username\",\"_password\",\"_isRelative\",\"host\",\"_query\",\"_fragment\",\"_scheme\",\"_port\",\"_host\",\"hostname\",\"_path\",\"_schemeData\",\"search\",\"_\",\"OriginalURL\",\"revokeObjectURL\",\"isRelativeScheme\",\"scheme\",\"invalid\",\"IDNAToASCII\",\"percentEscape\",\"percentEscapeQuery\",\"stateOverride\",\"cursor\",\"seenAt\",\"seenBracket\",\"loop\",\"nextC\",\"nextNextC\",\"cp\",\"tempC\",\"temp\",\"$includes\",\"LN2\",\"isFinite\",\"$at\",\"iterated\",\"point\",\"TO_STRING\",\"dPs\",\"IE_PROTO\",\"Empty\",\"_createDict\",\"iframeDocument\",\"iframe\",\"display\",\"contentWindow\",\"open\",\"write\",\"lt\",\"Properties\",\"arrayIndexOf\",\"ObjectProto\",\"addToUnscopables\",\"_k\",\"Arguments\",\"Internal\",\"newGenericPromiseCapability\",\"OwnPromiseCapability\",\"Wrapper\",\"anInstance\",\"forOf\",\"speciesConstructor\",\"microtask\",\"newPromiseCapabilityModule\",\"perform\",\"promiseResolve\",\"$Promise\",\"isNode\",\"USE_NATIVE\",\"FakePromise\",\"PromiseRejectionEvent\",\"isThenable\",\"notify\",\"isReject\",\"chain\",\"_c\",\"_v\",\"ok\",\"reaction\",\"fail\",\"_h\",\"onHandleUnhandled\",\"enter\",\"exit\",\"onUnhandled\",\"unhandled\",\"isUnhandled\",\"emit\",\"onunhandledrejection\",\"_a\",\"onrejectionhandled\",\"$reject\",\"_w\",\"$resolve\",\"wrapper\",\"executor\",\"onFulfilled\",\"onRejected\",\"remaining\",\"$index\",\"alreadyCalled\",\"race\",\"ret\",\"getIteratorMethod\",\"un\",\"macrotask\",\"Observer\",\"MutationObserver\",\"WebKitMutationObserver\",\"head\",\"standalone\",\"toggle\",\"createTextNode\",\"observe\",\"characterData\",\"DESCRIPTORS\",\"finally\",\"onFinally\",\"try\",\"InternalMap\",\"each\",\"weak\",\"fails\",\"validate\",\"uncaughtFrozenStore\",\"ufstore\",\"$WeakMap\",\"freeze\",\"getConstructor\",\"_f\",\"original\",\"gOPS\",\"pIE\",\"$assign\",\"aLen\",\"getSymbols\",\"isEnum\",\"getOwnPropertySymbols\",\"redefineAll\",\"createArrayMethod\",\"$has\",\"arrayFind\",\"arrayFindIndex\",\"_l\",\"UncaughtFrozenStore\",\"findUncaughtFrozen\",\"delete\",\"ADDER\",\"$iterDetect\",\"inheritIfRequired\",\"common\",\"IS_WEAK\",\"fixMethod\",\"HASNT_CHAINING\",\"THROWS_ON_PRIMITIVES\",\"ACCEPT_ITERABLES\",\"BUGGY_ZERO\",\"$instance\",\"setStrong\",\"setPrototypeOf\",\"buggy\",\"__proto__\",\"gOPD\",\"getOwnPropertyDescriptor\",\"COLLECTION\",\"of\",\"mapping\",\"cb\",\"mapFn\",\"nextItem\",\"$values\",\"isEntries\",\"isReadableStreamSupported\",\"_typeof2\",\"IsPropertyKey\",\"argument\",\"Call\",\"V\",\"typeIsObject\",\"createDataProperty\",\"createArrayFromList\",\"elements\",\"ArrayBufferCopy\",\"CreateIterResultObject\",\"IsFiniteNonNegativeNumber\",\"Infinity\",\"InvokeOrNoop\",\"PromiseInvokeOrNoop\",\"returnValueE\",\"PromiseInvokeOrPerformFallback\",\"argsF\",\"methodE\",\"TransferArrayBuffer\",\"ValidateAndNormalizeHighWaterMark\",\"highWaterMark\",\"RangeError\",\"ValidateAndNormalizeQueuingStrategy\",\"AssertionError\",\"rethrowAssertionErrorRejection\",\"_require\",\"_require2\",\"_require3\",\"DequeueValue\",\"EnqueueValueWithSize\",\"PeekQueueValue\",\"ResetQueue\",\"WritableStream\",\"underlyingSink\",\"_ref$highWaterMark\",\"_state\",\"_storedError\",\"_writer\",\"_writableStreamController\",\"_writeRequests\",\"_inFlightWriteRequest\",\"_closeRequest\",\"_inFlightCloseRequest\",\"_pendingAbortRequest\",\"_backpressure\",\"WritableStreamDefaultController\",\"__startSteps\",\"IsWritableStream\",\"streamBrandCheckException\",\"IsWritableStreamLocked\",\"WritableStreamAbort\",\"AcquireWritableStreamDefaultWriter\",\"WritableStreamDefaultWriter\",\"wasAlreadyErroring\",\"_resolve\",\"_reject\",\"_reason\",\"_wasAlreadyErroring\",\"WritableStreamStartErroring\",\"WritableStreamDealWithRejection\",\"WritableStreamFinishErroring\",\"writer\",\"WritableStreamDefaultWriterEnsureReadyPromiseRejected\",\"WritableStreamHasOperationMarkedInFlight\",\"_started\",\"__errorSteps\",\"storedError\",\"abortRequest\",\"WritableStreamRejectCloseAndClosedPromiseIfNeeded\",\"__abortSteps\",\"WritableStreamFinishInFlightClose\",\"_closedPromise_resolve\",\"_closedPromise_reject\",\"_closedPromiseState\",\"defaultWriterClosedPromiseResolve\",\"WritableStreamCloseQueuedOrInFlight\",\"defaultWriterClosedPromiseReject\",\"_closedPromise\",\"WritableStreamUpdateBackpressure\",\"backpressure\",\"_readyPromise_resolve\",\"_readyPromise_reject\",\"_readyPromise\",\"_readyPromiseState\",\"defaultWriterReadyPromiseReset\",\"defaultWriterReadyPromiseResolve\",\"WritableStreamDefaultControllerError\",\"WritableStreamDefaultWriterCloseWithErrorPropagation\",\"_ownerWritableStream\",\"WritableStreamDefaultWriterClose\",\"WritableStreamDefaultWriterRelease\",\"WritableStreamDefaultWriterWrite\",\"defaultWriterReadyPromiseInitializeAsResolved\",\"defaultWriterClosedPromiseInitialize\",\"defaultWriterReadyPromiseInitializeAsRejected\",\"defaultWriterClosedPromiseInitializeAsResolved\",\"defaultWriterClosedPromiseInitializeAsRejected\",\"IsWritableStreamDefaultWriter\",\"defaultWriterBrandCheckException\",\"defaultWriterLockException\",\"WritableStreamDefaultWriterAbort\",\"WritableStreamDefaultControllerGetDesiredSize\",\"WritableStreamDefaultWriterGetDesiredSize\",\"closeRequest\",\"WritableStreamDefaultControllerAdvanceQueueIfNeeded\",\"WritableStreamDefaultWriterEnsureClosedPromiseRejected\",\"defaultWriterClosedPromiseResetToRejected\",\"defaultWriterReadyPromiseReject\",\"defaultWriterReadyPromiseResetToRejected\",\"releasedError\",\"strategySize\",\"_strategySize\",\"chunkSizeE\",\"WritableStreamDefaultControllerErrorIfNeeded\",\"WritableStreamDefaultControllerGetChunkSize\",\"writeRequest\",\"WritableStreamAddWriteRequest\",\"writeRecord\",\"enqueueE\",\"_controlledWritableStream\",\"WritableStreamDefaultControllerGetBackpressure\",\"WritableStreamDefaultControllerWrite\",\"_underlyingSink\",\"_queue\",\"_queueTotalSize\",\"normalizedStrategy\",\"_strategyHWM\",\"IsWritableStreamDefaultController\",\"startResult\",\"WritableStreamMarkCloseRequestInFlight\",\"WritableStreamFinishInFlightCloseWithError\",\"WritableStreamDefaultControllerProcessClose\",\"WritableStreamMarkFirstWriteRequestInFlight\",\"WritableStreamFinishInFlightWrite\",\"WritableStreamFinishInFlightWriteWithError\",\"WritableStreamDefaultControllerProcessWrite\",\"container\",\"_require4\",\"_require5\",\"underlyingSource\",\"_disturbed\",\"_readableStreamController\",\"ReadableByteStreamController\",\"ReadableStreamDefaultController\",\"IsReadableStream\",\"IsReadableStreamLocked\",\"ReadableStreamCancel\",\"AcquireReadableStreamDefaultReader\",\"AcquireReadableStreamBYOBReader\",\"readable\",\"ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue\",\"pipeTo\",\"preventClose\",\"preventAbort\",\"preventCancel\",\"Boolean\",\"shuttingDown\",\"currentWrite\",\"isOrBecomesErrored\",\"shutdownWithAction\",\"shutdown\",\"destClosed\",\"waitForWritesToFinish\",\"oldCurrentWrite\",\"originalIsError\",\"originalError\",\"doTheRest\",\"newError\",\"isError\",\"ReadableStreamReaderGenericRelease\",\"pipeLoop\",\"ReadableStreamDefaultReaderRead\",\"branches\",\"ReadableStreamTee\",\"ReadableStreamBYOBReader\",\"ReadableStreamDefaultReader\",\"cloneForBranch2\",\"teeState\",\"closedOrErrored\",\"canceled1\",\"canceled2\",\"reason1\",\"reason2\",\"branch1\",\"_branch1\",\"branch2\",\"_branch2\",\"_teeState\",\"ReadableStreamDefaultControllerClose\",\"value1\",\"value2\",\"ReadableStreamDefaultControllerEnqueue\",\"_cloneForBranch2\",\"cancel1\",\"compositeReason\",\"cancelResult\",\"cancel2\",\"underlyingSource1\",\"branch1Stream\",\"underlyingSource2\",\"branch2Stream\",\"ReadableStreamDefaultControllerError\",\"ReadableStreamAddReadIntoRequest\",\"IsReadableStreamBYOBReader\",\"readIntoRequest\",\"_readIntoRequests\",\"ReadableStreamAddReadRequest\",\"IsReadableStreamDefaultReader\",\"readRequest\",\"_readRequests\",\"ReadableStreamClose\",\"__cancelSteps\",\"defaultReaderClosedPromiseResolve\",\"ReadableStreamError\",\"defaultReaderClosedPromiseReject\",\"ReadableStreamFulfillReadRequest\",\"ReadableStreamGetNumReadIntoRequests\",\"ReadableStreamGetNumReadRequests\",\"ReadableStreamHasBYOBReader\",\"ReadableStreamHasDefaultReader\",\"IsReadableStreamDisturbed\",\"ReadableStreamDefaultControllerGetDesiredSize\",\"ReadableStreamReaderGenericInitialize\",\"defaultReaderBrandCheckException\",\"_ownerReadableStream\",\"readerLockException\",\"ReadableStreamReaderGenericCancel\",\"IsReadableByteStreamController\",\"byobReaderBrandCheckException\",\"ArrayBuffer\",\"isView\",\"_controlledReadableStream\",\"elementSize\",\"DataView\",\"BYTES_PER_ELEMENT\",\"ctor\",\"pullIntoDescriptor\",\"byteOffset\",\"bytesFilled\",\"readerType\",\"_pendingPullIntos\",\"emptyView\",\"ReadableByteStreamControllerFillPullIntoDescriptorFromQueue\",\"filledView\",\"ReadableByteStreamControllerConvertPullIntoDescriptor\",\"ReadableByteStreamControllerHandleQueueDrain\",\"_closeRequested\",\"ReadableByteStreamControllerError\",\"ReadableByteStreamControllerCallPullIfNeeded\",\"ReadableByteStreamControllerPullInto\",\"ReadableStreamBYOBReaderRead\",\"defaultReaderClosedPromiseInitialize\",\"defaultReaderClosedPromiseInitializeAsResolved\",\"defaultReaderClosedPromiseInitializeAsRejected\",\"defaultReaderClosedPromiseResetToRejected\",\"__pullSteps\",\"_underlyingSource\",\"_pullAgain\",\"_pulling\",\"ReadableStreamDefaultControllerCallPullIfNeeded\",\"ReadableStreamDefaultControllerErrorIfNeeded\",\"IsReadableStreamDefaultController\",\"defaultControllerBrandCheckException\",\"pendingPromise\",\"ReadableStreamDefaultControllerShouldCallPull\",\"ReadableStreamBYOBRequest\",\"_associatedReadableByteStreamController\",\"_view\",\"bytesWritten\",\"IsReadableStreamBYOBRequest\",\"byobRequestBrandCheckException\",\"ReadableByteStreamControllerRespondInternal\",\"ReadableByteStreamControllerRespond\",\"firstDescriptor\",\"ReadableByteStreamControllerRespondWithNewView\",\"underlyingByteSource\",\"_underlyingByteSource\",\"ReadableByteStreamControllerClearPendingPullIntos\",\"autoAllocateChunkSize\",\"_autoAllocateChunkSize\",\"byteStreamControllerBrandCheckException\",\"firstPendingPullInto\",\"ReadableByteStreamControllerClose\",\"transferredBuffer\",\"ReadableByteStreamControllerEnqueueChunkToQueue\",\"transferredView\",\"ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue\",\"ReadableByteStreamControllerEnqueue\",\"viewE\",\"bufferE\",\"_byobRequest\",\"ReadableByteStreamControllerGetDesiredSize\",\"ReadableByteStreamControllerShouldCallPull\",\"ReadableByteStreamControllerInvalidateBYOBRequest\",\"ReadableByteStreamControllerCommitPullIntoDescriptor\",\"ReadableStreamFulfillReadIntoRequest\",\"currentAlignedBytes\",\"maxBytesToCopy\",\"maxBytesFilled\",\"maxAlignedBytes\",\"totalBytesToCopyRemaining\",\"headOfQueue\",\"bytesToCopy\",\"destStart\",\"ReadableByteStreamControllerFillHeadPullIntoDescriptor\",\"ReadableByteStreamControllerShiftPendingPullInto\",\"ReadableByteStreamControllerRespondInClosedState\",\"remainderSize\",\"ReadableByteStreamControllerRespondInReadableState\",\"transformStream\",\"writableStream\",\"TransformStream\",\"TransformStreamEnqueueToReadable\",\"_errored\",\"_readableClosed\",\"_readableController\",\"TransformStreamErrorIfNeeded\",\"TransformStreamSetBackpressure\",\"TransformStreamCloseReadableInternal\",\"TransformStreamErrorInternal\",\"_writableDone\",\"_writableController\",\"TransformStreamReadableReadyPromise\",\"_backpressureChangePromise\",\"_backpressureChangePromise_resolve\",\"TransformStreamDefaultTransform\",\"transformStreamController\",\"_controlledTransformStream\",\"IsTransformStreamDefaultController\",\"IsTransformStream\",\"TransformStreamSink\",\"startPromise\",\"_transformStream\",\"_startPromise\",\"_transforming\",\"transformer\",\"_transformer\",\"_transformStreamController\",\"TransformStreamTransform\",\"TransformStreamSource\",\"TransformStreamDefaultController\",\"TransformStreamCloseReadable\",\"TransformStreamError\",\"readableController\",\"readableStrategy\",\"writableStrategy\",\"startPromise_resolve\",\"_readable\",\"_writable\",\"_document\",\"BasePdfManager\",\"_docId\",\"_docBaseUrl\",\"ensureXRef\",\"PDFDocument\",\"ensureHelper\",\"Page\",\"_obj\",\"_annotation\",\"_operator_list\",\"_evaluator\",\"_function\",\"LETTER_SIZE_MEDIABOX\",\"isAnnotationRenderable\",\"annotation\",\"viewable\",\"printable\",\"pageDict\",\"resourcesPromise\",\"uniquePrefix\",\"idCounters\",\"idFactory\",\"createObjId\",\"getPageProp\",\"getInheritedPageProp\",\"valueArray\",\"resources\",\"mediaBox\",\"cropBox\",\"intersection\",\"getContentStream\",\"loadResources\",\"contentStreamPromise\",\"partialEvaluator\",\"PartialEvaluator\",\"pageListPromise\",\"contentStream\",\"transparency\",\"hasBlendModes\",\"annotationsPromise\",\"pageOpList\",\"annotations\",\"opListPromises\",\"opLists\",\"getTextContent\",\"getAnnotationsData\",\"annotationsData\",\"annotationRefs\",\"annotationRef\",\"AnnotationFactory\",\"find\",\"needle\",\"backwards\",\"lastIndexOf\",\"DocumentInfoValidators\",\"Title\",\"Author\",\"Subject\",\"Keywords\",\"Creator\",\"Producer\",\"CreationDate\",\"ModDate\",\"Trapped\",\"pdfFormatVersion\",\"acroForm\",\"xfa\",\"fields\",\"linearization\",\"checkHeader\",\"parseStartXRef\",\"documentInfo\",\"infoDict\",\"docInfo\",\"PDFFormatVersion\",\"IsAcroFormPresent\",\"IsXFAPresent\",\"validEntries\",\"fileID\",\"idArray\",\"hex\",\"_ccitt\",\"ccittFaxDecoder\",\"EndOfLine\",\"EncodedByteAlign\",\"Columns\",\"Rows\",\"EndOfBlock\",\"BlackIs1\",\"_jbig\",\"jbig2Image\",\"Jbig2Image\",\"globalsStream\",\"globals\",\"parseChunks\",\"Jbig2Error\",\"ContextCache\",\"DecodingContext\",\"decodeInteger\",\"contextCache\",\"procedure\",\"getContexts\",\"prev\",\"decodeIAID\",\"SegmentTypes\",\"CodingTemplates\",\"RefinementTemplates\",\"coding\",\"reference\",\"ReusedContexts\",\"RefinementReusedContexts\",\"decodeBitmap\",\"mmr\",\"templateIndex\",\"prediction\",\"at\",\"decodingContext\",\"decodeMMRBitmap\",\"Reader\",\"pixel\",\"row1\",\"row2\",\"decodeBitmapTemplate0\",\"useskip\",\"template\",\"templateLength\",\"templateX\",\"templateY\",\"changingTemplateEntries\",\"reuseMask\",\"minX\",\"minY\",\"changingEntriesLength\",\"changingTemplateX\",\"changingTemplateY\",\"changingTemplateBit\",\"j0\",\"sbb_left\",\"sbb_top\",\"sbb_right\",\"pseudoPixelContext\",\"ltp\",\"decodeRefinement\",\"referenceBitmap\",\"codingTemplate\",\"codingTemplateLength\",\"codingTemplateX\",\"codingTemplateY\",\"referenceTemplate\",\"referenceTemplateLength\",\"referenceTemplateX\",\"referenceTemplateY\",\"referenceWidth\",\"referenceHeight\",\"decodeTextRegion\",\"huffman\",\"refinement\",\"defaultPixelValue\",\"numberOfSymbolInstances\",\"stripSize\",\"inputSymbols\",\"symbolCodeLength\",\"transposed\",\"dsOffset\",\"referenceCorner\",\"combinationOperator\",\"huffmanTables\",\"refinementTemplateIndex\",\"refinementAt\",\"logStripSize\",\"huffmanInput\",\"stripT\",\"tableDeltaT\",\"firstS\",\"currentS\",\"tableFirstS\",\"currentT\",\"symbolId\",\"symbolIDTable\",\"applyRefinement\",\"symbolBitmap\",\"symbolWidth\",\"symbolHeight\",\"rdw\",\"rdh\",\"symbolRow\",\"offsetT\",\"offsetS\",\"maxWidth\",\"deltaS\",\"tableDeltaS\",\"readSegmentHeader\",\"segmentHeader\",\"segmentType\",\"typeName\",\"deferredNonRetain\",\"pageAssociationFieldSize\",\"referredFlags\",\"referredToCount\",\"retainBits\",\"referredToSegmentNumberSize\",\"referredTo\",\"pageAssociation\",\"genericRegionInfo\",\"readRegionSegmentInformation\",\"genericRegionMmr\",\"RegionSegmentInformationFieldLength\",\"searchPattern\",\"headerEnd\",\"readSegments\",\"segments\",\"segment\",\"randomAccess\",\"processSegment\",\"atLength\",\"dictionary\",\"dictionaryFlags\",\"huffmanDHSelector\",\"huffmanDWSelector\",\"bitmapSizeSelector\",\"aggregationInstancesSelector\",\"bitmapCodingContextUsed\",\"bitmapCodingContextRetained\",\"refinementTemplate\",\"numberOfExportedSymbols\",\"numberOfNewSymbols\",\"textRegion\",\"textRegionSegmentFlags\",\"textRegionHuffmanFlags\",\"huffmanFS\",\"huffmanDS\",\"huffmanDT\",\"huffmanRefinementDW\",\"huffmanRefinementDH\",\"huffmanRefinementDX\",\"huffmanRefinementDY\",\"huffmanRefinementSizeSelector\",\"patternDictionary\",\"patternDictionaryFlags\",\"patternWidth\",\"patternHeight\",\"maxPatternIndex\",\"halftoneRegion\",\"halftoneRegionFlags\",\"enableSkip\",\"gridWidth\",\"gridHeight\",\"gridOffsetX\",\"gridOffsetY\",\"gridVectorX\",\"gridVectorY\",\"genericRegion\",\"genericRegionSegmentFlags\",\"pageInfo\",\"resolutionX\",\"resolutionY\",\"pageSegmentFlags\",\"lossless\",\"requiresBuffer\",\"combinationOperatorOverride\",\"callbackName\",\"processSegments\",\"SimpleSegmentVisitor\",\"HuffmanLine\",\"lineData\",\"isOOB\",\"rangeLow\",\"prefixLength\",\"rangeLength\",\"prefixCode\",\"isLowerRange\",\"HuffmanTreeNode\",\"line\",\"children\",\"isLeaf\",\"HuffmanTable\",\"lines\",\"prefixCodesDone\",\"assignPrefixCodes\",\"rootNode\",\"buildTree\",\"onPageInformation\",\"currentPageInfo\",\"drawBitmap\",\"regionInfo\",\"mask\",\"mask0\",\"onImmediateGenericRegion\",\"region\",\"onImmediateLosslessGenericRegion\",\"onSymbolDictionary\",\"currentSegment\",\"referredSegments\",\"customTables\",\"customIndex\",\"tableDeltaHeight\",\"tableDeltaWidth\",\"getStandardTable\",\"getCustomHuffmanTable\",\"tableBitmapSize\",\"tableAggregateInstances\",\"getSymbolDictionaryHuffmanTables\",\"symbols\",\"referredSymbols\",\"newSymbols\",\"currentHeight\",\"tableB1\",\"symbolWidths\",\"currentWidth\",\"totalWidth\",\"firstSymbol\",\"deltaWidth\",\"numberOfInstances\",\"rdx\",\"rdy\",\"bitmapSize\",\"collectiveBitmap\",\"readUncompressedBitmap\",\"originalEnd\",\"bitmapEnd\",\"numberOfSymbolsDecoded\",\"xMin\",\"xMax\",\"exportedSymbols\",\"currentFlag\",\"totalSymbolsLength\",\"runLength\",\"decodeSymbolDictionary\",\"onImmediateTextRegion\",\"numberOfSymbols\",\"runCodesTable\",\"repeatedLength\",\"numberOfRepeats\",\"getTextRegionHuffmanTables\",\"onImmediateLosslessTextRegion\",\"onPatternDictionary\",\"patterns\",\"patternBitmap\",\"decodePatternDictionary\",\"onImmediateHalftoneRegion\",\"regionWidth\",\"regionHeight\",\"regionBitmap\",\"numberOfPatterns\",\"pattern0\",\"bitsPerValue\",\"grayScaleBitPlanes\",\"mmrInput\",\"mg\",\"ng\",\"patternIndex\",\"patternRow\",\"regionRow\",\"regionX\",\"regionY\",\"decodeHalftoneRegion\",\"onImmediateLosslessHalftoneRegion\",\"onTables\",\"lowestValue\",\"highestValue\",\"prefixSizeBits\",\"rangeSizeBits\",\"currentRangeLow\",\"decodeTablesSegment\",\"decodeNode\",\"htOffset\",\"linesLength\",\"prefixLengthMax\",\"histogram\",\"currentLength\",\"firstCode\",\"currentCode\",\"currentTemp\",\"standardTablesCache\",\"currentByte\",\"endOfBlock\",\"numBits\",\"parseJbig2Chunks\",\"JpegError\",\"dctZigZag\",\"dctCos1\",\"dctSin1\",\"dctCos3\",\"dctSin3\",\"dctCos6\",\"dctSin6\",\"dctSqrt2\",\"dctSqrt1d2\",\"buildHuffmanTable\",\"getBlockBufferOffset\",\"col\",\"blocksPerLine\",\"decodeScan\",\"frame\",\"resetInterval\",\"spectralStart\",\"spectralEnd\",\"successivePrev\",\"successive\",\"mcusPerLine\",\"progressive\",\"startOffset\",\"bitsData\",\"bitsCount\",\"nextByte\",\"decodeHuffman\",\"tree\",\"receive\",\"receiveAndExtend\",\"eobrun\",\"successiveACNextValue\",\"successiveACState\",\"decodeMcu\",\"mcu\",\"mcuCol\",\"decodeBlock\",\"decodeFn\",\"componentsLength\",\"huffmanTableDC\",\"blockData\",\"pred\",\"rs\",\"huffmanTableAC\",\"offsetZ\",\"fileMarker\",\"mcuExpected\",\"blocksPerColumn\",\"mcusPerColumn\",\"mcuToRead\",\"findNextFileMarker\",\"marker\",\"quantizeAndInverse\",\"blockBufferOffset\",\"v3\",\"v4\",\"v5\",\"v6\",\"v7\",\"p0\",\"p5\",\"p6\",\"p7\",\"qt\",\"quantizationTable\",\"buildComponentData\",\"computationBuffer\",\"Int16Array\",\"blockRow\",\"blockCol\",\"currentPos\",\"peekUint16\",\"maxPos\",\"newPos\",\"currentMarker\",\"newMarker\",\"readDataBlock\",\"endOffset\",\"prepareComponents\",\"samplesPerLine\",\"maxH\",\"scanLines\",\"maxV\",\"blocksPerLineForMcu\",\"blocksBufferSize\",\"jfif\",\"adobe\",\"quantizationTables\",\"huffmanTablesAC\",\"huffmanTablesDC\",\"appData\",\"densityUnits\",\"xDensity\",\"yDensity\",\"thumbWidth\",\"thumbHeight\",\"thumbData\",\"flags0\",\"flags1\",\"transformCode\",\"quantizationTablesEnd\",\"quantizationTableSpec\",\"tableData\",\"extended\",\"componentIds\",\"componentId\",\"qId\",\"quantizationId\",\"huffmanLength\",\"huffmanTableSpec\",\"codeLengthSum\",\"huffmanValues\",\"selectorsCount\",\"componentIndex\",\"tableSpec\",\"successiveApproximation\",\"scaleX\",\"scaleY\",\"numComponents\",\"_getLinearizedBlockData\",\"componentScaleX\",\"componentScaleY\",\"blocksPerScanline\",\"xScaleBlockOffset\",\"_isColorConversionNeeded\",\"_convertYccToRgb\",\"Cb\",\"Cr\",\"_convertYcckToRgb\",\"_convertYcckToCmyk\",\"_convertCmykToRgb\",\"forceRGBoutput\",\"rgbData\",\"grayColor\",\"_jpx\",\"jpxImage\",\"tileCount\",\"tileComponents\",\"tileWidth\",\"tileHeight\",\"tileLeft\",\"tileTop\",\"srcPosition\",\"dataPosition\",\"tileRowSize\",\"AnnotationBorderStyle\",\"Annotation\",\"_get\",\"receiver\",\"desc\",\"_possibleConstructorReturn\",\"ReferenceError\",\"_inherits\",\"subClass\",\"superClass\",\"parameters\",\"LinkAnnotation\",\"TextAnnotation\",\"fieldType\",\"TextWidgetAnnotation\",\"ButtonWidgetAnnotation\",\"ChoiceWidgetAnnotation\",\"WidgetAnnotation\",\"PopupAnnotation\",\"LineAnnotation\",\"SquareAnnotation\",\"CircleAnnotation\",\"PolylineAnnotation\",\"PolygonAnnotation\",\"HighlightAnnotation\",\"UnderlineAnnotation\",\"SquigglyAnnotation\",\"StrikeOutAnnotation\",\"StampAnnotation\",\"FileAttachmentAnnotation\",\"setFlags\",\"setRectangle\",\"setColor\",\"setBorderStyle\",\"setAppearance\",\"annotationFlags\",\"borderStyle\",\"hasAppearance\",\"appearance\",\"flag\",\"_hasFlag\",\"dictType\",\"setWidth\",\"setStyle\",\"setDashArray\",\"setHorizontalCornerRadius\",\"setVerticalCornerRadius\",\"appearanceStates\",\"normalAppearanceState\",\"hasPopup\",\"contents\",\"renderForms\",\"appearanceDict\",\"bbox\",\"maxY\",\"getTransformMatrix\",\"_isViewable\",\"_isPrintable\",\"dashArray\",\"horizontalCornerRadius\",\"verticalCornerRadius\",\"isValid\",\"allZeros\",\"element\",\"radius\",\"_Annotation\",\"annotationType\",\"fieldName\",\"_constructFieldName\",\"fieldValue\",\"alternativeText\",\"defaultAppearance\",\"fieldResources\",\"fieldFlags\",\"readOnly\",\"hasFieldFlag\",\"loopDict\",\"_WidgetAnnotation\",\"alignment\",\"textAlignment\",\"maximumLength\",\"multiLine\",\"comb\",\"_WidgetAnnotation2\",\"checkBox\",\"radioButton\",\"pushButton\",\"_processCheckBox\",\"_processRadioButton\",\"_processPushButton\",\"buttonValue\",\"fieldParent\",\"fieldParentValue\",\"_WidgetAnnotation3\",\"_this5\",\"option\",\"isOptionArray\",\"exportValue\",\"displayValue\",\"combo\",\"multiSelect\",\"_Annotation2\",\"_this6\",\"_preparePopup\",\"_Annotation3\",\"_this7\",\"_Annotation4\",\"_this8\",\"parentItem\",\"parentSubtype\",\"parentType\",\"parentId\",\"parentFlags\",\"_Annotation5\",\"_this9\",\"lineCoordinates\",\"_Annotation6\",\"_this10\",\"_Annotation7\",\"_this11\",\"_Annotation8\",\"_this12\",\"rawVertices\",\"vertices\",\"_PolylineAnnotation\",\"_this13\",\"_Annotation9\",\"_this14\",\"_Annotation10\",\"_this15\",\"_Annotation11\",\"_this16\",\"_Annotation12\",\"_this17\",\"_Annotation13\",\"_this18\",\"_Annotation14\",\"_this19\",\"_cmap\",\"_fonts\",\"_unicode\",\"_standard_fonts\",\"_pattern\",\"_bidi\",\"_glyphlist\",\"_metrics\",\"_murmurhash\",\"_image\",\"DefaultPartialEvaluatorOptions\",\"NativeImageDecoder\",\"_ref$forceDataSchema\",\"_ref2$options\",\"fetchBuiltInCMap\",\"cachedCMap\",\"compressionType\",\"canDecode\",\"image\",\"isDecodable\",\"colorSpace\",\"isSupported\",\"TimeSlotManager\",\"normalizeBlendMode\",\"checked\",\"endTime\",\"deferred\",\"newOptions\",\"newEvaluator\",\"nodes\",\"graphicStates\",\"graphicStatesKeys\",\"bm\",\"xObjects\",\"xObjectsKeys\",\"xObject\",\"xResources\",\"buildFormXObject\",\"xobj\",\"initialState\",\"group\",\"groupOptions\",\"isolated\",\"knockout\",\"groupSubtype\",\"backdrop\",\"buildPaintImageXObject\",\"inline\",\"bitStrideLength\",\"imgArray\",\"PDFImage\",\"createMask\",\"imageIsFromDecodeStream\",\"inverseDecode\",\"softMask\",\"isInline\",\"createImageData\",\"nativeImageDecoder\",\"buildImage\",\"nativeDecoder\",\"imageObj\",\"handleSMask\",\"stateManager\",\"smaskContent\",\"smaskOptions\",\"transferObj\",\"transferFn\",\"transferMap\",\"handleTilingType\",\"patternDict\",\"tilingOpList\",\"resourcesArray\",\"patternResources\",\"getTilingPatternIR\",\"tilingPatternIR\",\"handleSetFont\",\"fontArgs\",\"fontRef\",\"fontName\",\"loadFont\",\"isType3Font\",\"loadType3Data\",\"TranslatedFont\",\"ErrorFont\",\"loadedName\",\"handleText\",\"glyphs\",\"charsToGlyphs\",\"isAddToPathSet\",\"textRenderingMode\",\"fillColorSpace\",\"buildPath\",\"fontChar\",\"renderer\",\"hasBuiltPath\",\"path\",\"getPathJs\",\"glyph\",\"accent\",\"gState\",\"gStateObj\",\"gStateKeys\",\"_loop\",\"errorFont\",\"fontRes\",\"fontID\",\"translatedPromise\",\"fontCapability\",\"preEvaluatedFont\",\"preEvaluateFont\",\"fontRefIsRef\",\"fontAliases\",\"aliasFontRef\",\"Font\",\"getFontID\",\"translateFont\",\"translatedFont\",\"fontType\",\"fontFile3\",\"getFontType\",\"lastIndex\",\"opArgs\",\"handleColorN\",\"patternName\",\"typeNum\",\"shading\",\"Pattern\",\"parseShading\",\"_ref3$initialState\",\"EvalState\",\"xobjs\",\"StateManager\",\"preprocessor\",\"EvaluatorPreprocessor\",\"timeSlotManager\",\"closePendingRestoreOPS\",\"savedStatesDepth\",\"promiseBody\",\"stop\",\"resolveXObject\",\"rejectXObject\",\"fontSize\",\"combinedGlyphs\",\"arrLength\",\"arrItem\",\"strokeColorSpace\",\"shadingRes\",\"patternIR\",\"dictName\",\"extGState\",\"_ref4$stateManager\",\"_ref4$normalizeWhites\",\"_ref4$combineTextItem\",\"_ref4$seenStyles\",\"seenStyles\",\"TextState\",\"textState\",\"WhitespaceRegexp\",\"textContent\",\"styles\",\"textContentItem\",\"vertical\",\"lastAdvanceWidth\",\"lastAdvanceHeight\",\"textAdvanceScale\",\"spaceWidth\",\"fakeSpaceMin\",\"fakeMultiSpaceMin\",\"fakeMultiSpaceMax\",\"textRunBreakAllowed\",\"SPACE_FACTOR\",\"MULTI_SPACE_FACTOR\",\"MULTI_SPACE_FACTOR_MAX\",\"skipEmptyXObjs\",\"ensureTextContentItem\",\"fontFamily\",\"fallbackName\",\"tsm\",\"textHScale\",\"textRise\",\"glyphHeight\",\"trm\",\"ctm\",\"textMatrix\",\"textLineMatrix\",\"scaleLineX\",\"scaleCtmX\",\"isMonospace\",\"replaceWhitespace\",\"buildTextContentItem\",\"textChunk\",\"glyphWidth\",\"vmetric\",\"glyphUnicode\",\"NormalizedUnicodes\",\"charSpacing\",\"wordSpacing\",\"addFakeSpaces\",\"tx\",\"ty\",\"translateTextMatrix\",\"fakeSpaces\",\"flushTextContentItem\",\"bidiResult\",\"bidi\",\"dir\",\"enqueueChunk\",\"advance\",\"fontNameArg\",\"fontSizeArg\",\"leading\",\"isSameTextLine\",\"translateTextLineMatrix\",\"carriageReturn\",\"calcTextLineMatrixAdvance\",\"setTextLineMatrix\",\"breakTextRun\",\"currentState\",\"xObjStateManager\",\"sinkWrapper\",\"enqueueInvoked\",\"gStateFont\",\"extractDataStructures\",\"baseDict\",\"toUnicode\",\"toUnicodePromise\",\"readToUnicode\",\"composite\",\"cidSystemInfo\",\"registry\",\"ordering\",\"supplement\",\"cidToGidMap\",\"readCidToGidMap\",\"differences\",\"baseEncodingName\",\"diffEncoding\",\"defaultEncoding\",\"isSymbolicFont\",\"FontFlags\",\"Symbolic\",\"isNonsymbolicFont\",\"Nonsymbolic\",\"hasEncoding\",\"buildToUnicode\",\"_buildSimpleFontToUnicode\",\"charcode\",\"glyphName\",\"ToUnicodeMap\",\"hasIncludedToUnicodeMap\",\"fallbackToUnicode\",\"cMap\",\"builtInCMap\",\"IdentityCMap\",\"ucs2CMapName\",\"CMapFactory\",\"useCMap\",\"ucs2CMap\",\"ucs2\",\"IdentityToUnicodeMap\",\"firstChar\",\"lastChar\",\"cmapObj\",\"cmap\",\"getMap\",\"charCode\",\"cidToGidStream\",\"glyphsData\",\"glyphID\",\"extractWidths\",\"defaultVMetrics\",\"glyphsWidths\",\"glyphsVMetrics\",\"vmetrics\",\"baseFontName\",\"metrics\",\"getBaseFontMetrics\",\"buildCharCodeToWidth\",\"firstWidth\",\"FixedPitch\",\"isSerifFont\",\"fontNameWoStyle\",\"monospace\",\"lookupName\",\"Metrics\",\"getMetrics\",\"glyphWidths\",\"widthsByGlyphName\",\"uint8array\",\"df\",\"MurmurHash3_64\",\"update\",\"diffLength\",\"diffBuf\",\"diffEntry\",\"hexdigest\",\"maxCharIndex\",\"Serif\",\"baseFont\",\"fontNameStr\",\"baseFontStr\",\"cMapPromise\",\"fontFile\",\"length1\",\"length2\",\"length3\",\"wideChars\",\"fixedPitch\",\"xHeight\",\"capHeight\",\"italicAngle\",\"cidEncoding\",\"type3Loaded\",\"sent\",\"fontData\",\"exportData\",\"parentOperatorList\",\"type3Options\",\"type3Evaluator\",\"loadCharProcsPromise\",\"charProcs\",\"fontResources\",\"charProcKeys\",\"charProcOperatorList\",\"_loop2\",\"glyphStream\",\"stateStack\",\"old\",\"txDiff\",\"tyDiff\",\"denominator\",\"calcRenderMatrix\",\"getOPMap\",\"numArgs\",\"variableArgs\",\"opMap\",\"nonProcessedArgs\",\"opSpec\",\"argsLength\",\"preprocessCommand\",\"CMap\",\"BUILT_IN_CMAPS\",\"codespaceRanges\",\"numCodespaceRanges\",\"addCodespaceRange\",\"mapCidRange\",\"dstLow\",\"mapBfRange\",\"lastByte\",\"mapBfRangeToArray\",\"mapOne\",\"dst\",\"contains\",\"charCodeOf\",\"readCharCode\",\"codespaceRangesLen\",\"codespaceRange\",\"isIdentityCMap\",\"BinaryCMapReader\",\"hexToInt\",\"hexToStr\",\"addHex\",\"incHex\",\"MAX_NUM_SIZE\",\"MAX_ENCODED_NUM_SIZE\",\"BinaryCMapStream\",\"readByte\",\"readNumber\",\"readSigned\",\"readHex\",\"readHexNumber\",\"sp\",\"readHexSigned\",\"readString\",\"sequence\",\"dataSize\",\"subitemsCount\",\"strToInt\",\"expectString\",\"expectInt\",\"parseBfChar\",\"parseBfRange\",\"parseCidChar\",\"parseCidRange\",\"parseCodespaceRange\",\"parseWMode\",\"parseCMapName\",\"parseCMap\",\"previous\",\"embededUseCMap\",\"objLoop\",\"extendCMap\",\"createBuiltInCMap\",\"newCMap\",\"useCodespaceRanges\",\"cMapData\",\"parsedCMap\",\"ProblematicCharRanges\",\"PRIVATE_USE_OFFSET_END\",\"PRIVATE_USE_OFFSET_START\",\"SEAC_ANALYSIS_ENABLED\",\"_cff_parser\",\"_font_renderer\",\"_type1_parser\",\"SKIP_PRIVATE_USE_RANGE_F000_TO_F01F\",\"PDF_GLYPH_SPACE_UNITS\",\"Script\",\"Italic\",\"AllCap\",\"SmallCap\",\"ForceBold\",\"MacStandardGlyphOrdering\",\"adjustWidths\",\"recoverGlyphName\",\"Glyph\",\"operatorListId\",\"isInFont\",\"matchesForCache\",\"amend\",\"OpenTypeFileBuilder\",\"writeInt16\",\"writeInt32\",\"writeData\",\"sfnt\",\"getSearchParams\",\"entriesCount\",\"entrySize\",\"maxPower2\",\"searchRange\",\"rangeShift\",\"toArray\",\"tablesNames\",\"tableName\",\"numTables\",\"tableOffsets\",\"searchParams\",\"checksum\",\"addTable\",\"sizes\",\"missingFile\",\"glyphCache\",\"toFontChar\",\"fallbackToSystemFont\",\"isTrueTypeFile\",\"isOpenTypeFile\",\"isType1File\",\"mimetype\",\"CFFFont\",\"Type1Font\",\"convert\",\"checkAndRepair\",\"isOpenType\",\"seacMap\",\"loading\",\"ID\",\"int16\",\"signedInt16\",\"string16\",\"safeString16\",\"buildToFontChar\",\"isProblematicUnicodeLocation\",\"adjustMapping\",\"charCodeToGlyphId\",\"missingGlyphs\",\"isSymbolic\",\"isIdentityUnicode\",\"newMap\",\"usedFontCharCodes\",\"nextAvailableFontCharCode\",\"originalCharCode\",\"glyphId\",\"fontCharCode\",\"hasUnicodeValue\",\"createCmapTable\",\"numGlyphs\",\"codeIndices\",\"getRanges\",\"bmpLength\",\"trailingRangesCount\",\"segCount\",\"startCount\",\"endCount\",\"idDeltas\",\"idRangeOffsets\",\"glyphsIds\",\"contiguous\",\"format314\",\"format31012\",\"header31012\",\"createOS2Table\",\"charstrings\",\"override\",\"unitsPerEm\",\"yMax\",\"yMin\",\"ulUnicodeRange1\",\"ulUnicodeRange2\",\"ulUnicodeRange3\",\"ulUnicodeRange4\",\"firstCharIndex\",\"lastCharIndex\",\"typoAscent\",\"typoDescent\",\"winAscent\",\"winDescent\",\"createPostTable\",\"angle\",\"createNameTable\",\"stringsUnicode\",\"strBufUnicode\",\"platforms\",\"encodings\",\"languages\",\"namesRecordCount\",\"nameTable\",\"strOffset\",\"strs\",\"FontRendererFactory\",\"stdFontMap\",\"nonStdFontMap\",\"isStandardFont\",\"remeasure\",\"GlyphMapForStandardFonts\",\"SupplementalGlyphMapForArialBlack\",\"SupplementalGlyphMapForCalibri\",\"unicodeCharCode\",\"VALID_TABLES\",\"readTables\",\"readTableEntry\",\"previousPosition\",\"readOpenTypeHeader\",\"ttf\",\"entrySelector\",\"sanitizeGlyph\",\"sourceStart\",\"sourceEnd\",\"hintsValid\",\"glyphProfile\",\"sizeOfInstructions\",\"glyf\",\"contoursCount\",\"flagsCount\",\"instructionsStart\",\"instructionsLength\",\"instructionsEnd\",\"coordinatesLength\",\"xyLength\",\"repeat\",\"glyphDataLength\",\"readNameTable\",\"numRecords\",\"stringsStart\",\"records\",\"platform\",\"language\",\"record\",\"TTOpsStackDeltas\",\"sanitizeTTProgram\",\"ttContext\",\"funcId\",\"lastEndf\",\"lastDeff\",\"callstack\",\"functionsCalled\",\"tooComplexToFollowFunctions\",\"inFDEF\",\"ifLevel\",\"inELSE\",\"functionsStackDeltas\",\"stackTop\",\"functionsDefined\",\"functionsUsed\",\"foldTTTable\",\"isTrueTypeCollectionFile\",\"ttcData\",\"ttc\",\"_readTrueTypeCollecti\",\"ttcTag\",\"majorVersion\",\"minorVersion\",\"numFonts\",\"offsetTable\",\"dsigTag\",\"dsigLength\",\"dsigOffset\",\"readTrueTypeCollectionHeader\",\"potentialHeader\",\"potentialTables\",\"nameEntry\",\"readTrueTypeCollectionData\",\"cffFile\",\"isTrueType\",\"maxFunctionDefs\",\"maxSizeOfInstructions\",\"dupFirstEntry\",\"fpgm\",\"prep\",\"cvt\",\"checkInvalidFunctions\",\"cvtData\",\"sanitizeTTPrograms\",\"numOfMetrics\",\"numMissing\",\"sanitizeMetrics\",\"locaLength\",\"indexToLocFormat\",\"numGlyphsPlusOne\",\"sanitizeHead\",\"isGlyphLocationsLong\",\"glyphsInfo\",\"loca\",\"itemSize\",\"itemDecode\",\"itemEncode\",\"locaData\",\"locaDataSize\",\"oldGlyfData\",\"oldGlyfDataLength\",\"newGlyfData\",\"writeOffset\",\"locaCount\",\"simpleGlyph\",\"firstEntryLength\",\"sanitizeGlyphLocations\",\"metricsOverride\",\"post\",\"maxpNumGlyphs\",\"glyphNames\",\"glyphNameIndexes\",\"customNames\",\"stringLength\",\"readPostScriptTable\",\"hasGlyph\",\"isCidToGidMapEmpty\",\"cmapTable\",\"platformId\",\"encodingId\",\"mappings\",\"hasShortCmap\",\"potentialTable\",\"canBreak\",\"useTable\",\"segIndex\",\"offsetsCount\",\"rangeOffset\",\"offsetIndex\",\"readCmapTable\",\"cmapPlatformId\",\"cmapEncodingId\",\"cmapMappings\",\"cmapMappingsLength\",\"standardGlyphName\",\"unicodeOrCharCode\",\"newMapping\",\"os2\",\"selection\",\"validateOS2Table\",\"compiler\",\"namePrototype\",\"builder\",\"tableTag\",\"builtInEncoding\",\"adjustToUnicode\",\"getGlyphMapping\",\"getCharCodes\",\"charCodes\",\"createCharCode\",\"getCharset\",\"baseGlyphName\",\"accentGlyphName\",\"baseGlyphId\",\"accentGlyphId\",\"accentOffset\",\"baseFontCharCode\",\"accentFontCharCode\",\"tan\",\"cffWidths\",\"hmtx\",\"_shadowWidth\",\"possibleSpaceReplacements\",\"charToGlyph\",\"widthCode\",\"charsCache\",\"charsCacheKey\",\"type1FontGlyphMapping\",\"findBlock\",\"streamBytes\",\"signature\",\"startIndex\",\"streamBytesLength\",\"signatureLength\",\"headerBlockLength\",\"pfbHeader\",\"pfbHeaderPresent\",\"headerBlock\",\"suggestedLength\",\"headerBytes\",\"headerBytesLength\",\"block\",\"actualLength\",\"EEXEC_SIGNATURE\",\"streamStartPos\",\"getHeaderBlock\",\"Type1Parser\",\"extractFontHeader\",\"eexecBytes\",\"eexecBlock\",\"extractFontProgram\",\"type2Charstrings\",\"getType2Charstrings\",\"getType2Subrs\",\"wrap\",\"getSeacs\",\"type1Charstrings\",\"type1Subrs\",\"type2Subrs\",\"charsetArray\",\"charStringsIndex\",\"field\",\"privateData\",\"subrIndex\",\"charsets\",\"getLong\",\"getUshort\",\"parseCmap\",\"idDelta\",\"idOffset\",\"groups\",\"parseCff\",\"gsubrs\",\"lookupCmap\",\"CompiledFont\",\"compiledGlyphs\",\"compiledCharCodeToGlyphId\",\"TrueTypeCompiled\",\"Type2Compiled\",\"cffInfo\",\"glyphNameMap\",\"gsubrsBias\",\"subrsBias\",\"compileGlyph\",\"cmds\",\"compileGlyphImpl\",\"compileGlyf\",\"quadraticCurveTo\",\"xa\",\"ya\",\"numberOfContours\",\"scale01\",\"scale10\",\"subglyph\",\"endPtsOfContours\",\"numberOfPoints\",\"points\",\"startPoint\",\"endPoint\",\"contour\",\"compileCharString\",\"stems\",\"bezierCurveTo\",\"xb\",\"yb\",\"subrCode\",\"stackClean\",\"achar\",\"bchar\",\"parseGlyfTable\",\"Type1CharString\",\"COMMAND_MAP\",\"lsb\",\"flexing\",\"encoded\",\"wx\",\"sbx\",\"dy\",\"executeCommand\",\"sby\",\"flexArgs\",\"howManyArgs\",\"command\",\"keepStack\",\"stackLength\",\"EEXEC_ENCRYPT_KEY\",\"isHexDigit\",\"discardNumber\",\"decrypted\",\"isSpecial\",\"encrypted\",\"isBinary\",\"digit1\",\"digit2\",\"decryptAscii\",\"readNumberArray\",\"getToken\",\"readInt\",\"readBoolean\",\"readCharStrings\",\"lenIV\",\"program\",\"blueArray\",\"charString\",\"encodingArg\",\"ShadingType\",\"FUNCTION_BASED\",\"AXIAL\",\"RADIAL\",\"FREE_FORM_MESH\",\"LATTICE_FORM_MESH\",\"COONS_PATCH_MESH\",\"TENSOR_PATCH_MESH\",\"getPattern\",\"Shadings\",\"RadialAxial\",\"Mesh\",\"Dummy\",\"SMALL_NUMBER\",\"coordsArr\",\"shadingType\",\"t0\",\"domainArr\",\"extendStart\",\"extendEnd\",\"extendArr\",\"r1\",\"r2\",\"distance\",\"createFromArray\",\"colorStops\",\"ratio\",\"cssColor\",\"background\",\"r0\",\"MeshStreamReader\",\"tmpCompsBuf\",\"csNumComps\",\"tmpCsCompsBuf\",\"colorFn\",\"hasData\",\"align\",\"readFlag\",\"bitsPerFlag\",\"readCoordinate\",\"bitsPerCoordinate\",\"xi\",\"yi\",\"readComponents\",\"ci\",\"MIN_SPLIT_PATCH_CHUNKS_AMOUNT\",\"MAX_SPLIT_PATCH_CHUNKS_AMOUNT\",\"TRIANGLE_DENSITY\",\"getB\",\"lut\",\"t_\",\"buildB\",\"buildFigureFromPatch\",\"mesh\",\"figure\",\"figures\",\"coords\",\"pi\",\"figureMinX\",\"figureMinY\",\"figureMaxX\",\"figureMaxY\",\"splitXBy\",\"splitYBy\",\"verticesPerRow\",\"figureCoords\",\"figureColors\",\"cl\",\"cr\",\"c2\",\"c3\",\"bRow\",\"bCol\",\"newColor\",\"updateBounds\",\"patchMesh\",\"ps\",\"verticesLeft\",\"coord\",\"decodeType4Shading\",\"decodeType5Shading\",\"tmp4\",\"decodeType6Shading\",\"decodeType7Shading\",\"coordsPacked\",\"xy\",\"colorsPacked\",\"packData\",\"xstep\",\"ystep\",\"paintType\",\"tilingType\",\"baseTypes\",\"arabicTypes\",\"isOdd\",\"isEven\",\"findUnequal\",\"setValues\",\"reverseValues\",\"createBidiText\",\"isLTR\",\"startLevel\",\"strLength\",\"numBidi\",\"charType\",\"sor\",\"eor\",\"lastType\",\"before\",\"after\",\"highestLevel\",\"lowestOddLevel\",\"nextToken\",\"accept\",\"expect\",\"PostScriptTokenTypes\",\"LBRACE\",\"parseBlock\",\"RBRACE\",\"NUMBER\",\"OPERATOR\",\"parseCondition\",\"conditionLocation\",\"IF\",\"jumpLocation\",\"endOfTrue\",\"IFELSE\",\"PostScriptToken\",\"opCache\",\"getOperator\",\"opValue\",\"seed\",\"blockCounts\",\"tailLength\",\"dataUint32\",\"k2\",\"C1\",\"C2\",\"handleImageData\",\"decodeAndClamp\",\"addend\",\"coefficient\",\"resizeImageMask\",\"_ref$isInline\",\"_ref$smask\",\"_ref$mask\",\"_ref$isMask\",\"isMask\",\"matte\",\"needsDecode\",\"decodeCoefficients\",\"decodeAddends\",\"smaskPromise\",\"maskPromise\",\"_ref2$isInline\",\"_ref2$nativeDecoder\",\"imagePromise\",\"imageData\",\"smaskData\",\"maskData\",\"computedLength\",\"decodeBuffer\",\"getComponents\",\"buf\",\"bufferPos\",\"rowComps\",\"loop1End\",\"loop2End\",\"remainingBits\",\"fillOpacity\",\"rgbaBuf\",\"alphaBuf\",\"sw\",\"sh\",\"fillGrayBuffer\",\"opacity\",\"imageOffset\",\"maskOffset\",\"undoPreblend\",\"matteRgb\",\"matteR\",\"matteG\",\"matteB\",\"forceRGBA\",\"getImageBytes\",\"newArray\",\"imageLength\",\"maybeUndoPreblend\"],\"mappings\":\"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AAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,KAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,O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A,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,QAAA,KAAA,KAAA,OAAA,KAAA,KAAA,KAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,GAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,GAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAqBA3+B,EAAAy+B,gBAAAA,EACAz+B,E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AA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,KACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,MACAA,EA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EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,IAQAC,EAAA,CAAA,EAAA,GAAA,GAAA,CAAA,IAZA,GAYA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,OACAC,EAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IACAC,EAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,IAdA,GAcA,CAAA,IAdA,GAcA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KACAC,EAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,IAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KACAC,EAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,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ACAC,KAAA,EACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GAC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CACDD,MAAA,IACAC,IAAA,KACC,CACDD,MAAA,IACAC,IAAA,MACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,OACAC,IAAA,QACC,CACDD,MAAA,OACAC,IAAA,QACC,CACDD,MAAA,QACAC,IAAA,SACC,CACDD,MAAA,MACAC,IAAA,OACC,CACDD,MAAA,OACAC,IAAA,QACC,CACDD,MAAA,KACAC,IAAA,MACC,CACDD,MAAA,KACAC,IAAA,MA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,EAAArqB,MACAqqB,EAAAwR,KAAAzyE,GACA,MACA,IAAA,MACAA,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAAszE,IAAA9yE,IACA,MACA,IAAA,MACAA,EAAA,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,GACA,MACA,IAAA,MACA,MACA,IAAA,MACArB,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,EAAArB,GACA,MACA,IAAA,MACAsiE,EAAAwR,KAAA,GACA,MACA,IAAA,KACA9zE,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,IAAArB,GACA,MACA,IAAA,OACAsiE,EAAAyR,KAAA,EAAA,GACA,MACA,IAAA,MACA/zE,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAA+wB,IAAAvwB,EAAArB,IACA,MACA,IAAA,QACAsiE,EAAAz/D,MAAA,GACA,MACA,IAAA,QACAxB,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAA+sB,MAAAvsB,IACA,MACA,IAAA,KACArB,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,GAAArB,GACA,MACA,IAAA,KACAA,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,EAAArB,GACA,MACA,IAAA,OACAA,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,EAAArB,EAAA,GACA,MACA,IAAA,QACAqB,EAAAihE,EAAArqB,MACAqqB,EAAAlqC,MAAA/2B,GACA,MACA,IAAA,KACArB,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,GAAArB,GACA,MACA,IAAA,KACAqB,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAAnC,IAAA2C,IACA,MACA,IAAA,MACAA,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAAnC,IAAA2C,GAAAR,KAAAuzE,MACA,MACA,IAAA,KACAp0E,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,EAAArB,GACA,MACA,IAAA,MACAA,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,EAAArB,GACA,MACA,IAAA,MACAA,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,EAAArB,GACA,MACA,IAAA,KACAA,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAxB,IAAArB,GACA,MACA,IAAA,MACAqB,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,MAAAxB,GACA,MACA,IAAA,MACAA,EAAAihE,EAAArqB,OACA,EAAAn4B,EAAA3kB,QAAAkG,GACAihE,EAAAz/D,MAAAxB,GAEAihE,EAAAz/D,MAAAxB,GAEA,MACA,IAAA,KACArB,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,OACA,EAAAn4B,EAAA3kB,QAAAkG,KAAA,EAAAye,EAAA3kB,QAAA6E,GACAsiE,EAAAz/D,KAAAxB,GAAArB,GAEAsiE,EAAAz/D,KAAAxB,EAAArB,GAEA,MACA,IAAA,MACAsiE,EAAArqB,MACA,MACA,IAAA,OACAj4C,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,EAAAyR,KAAA1yE,EAAArB,GACA,MACA,IAAA,QACAqB,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAA20B,MAAAn0B,IACA,MACA,IAAA,MACAA,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAAwzE,IAAAhzE,IACA,MACA,IAAA,OACAA,EAAAihE,EAAArqB,MACAqqB,EAAAz/D,KAAAhC,KAAAW,KAAAH,IACA,MACA,IAAA,MACArB,EAAAsiE,EAAArqB,MACA52C,EAAAihE,EAAArqB,MACAqqB,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ACHD,GAAA,EACAC,EAAA,IACG,CAAA,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,IACG,CAAA,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,EAAA,EACAC,GAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,GACG,CACHD,GAAA,EACAC,EAAA,KAEA2gG,EAAA,CAAA,CACAC,OAAA,CAAA,CACA7gG,EAAA,EACAC,GAAA,GACK,CACLD,EAAA,EACAC,GAAA,GACK,CACLD,GAAA,EACAC,EAAA,IAEA6gG,UAAA,CAAA,CACA9gG,EAAA,EACAC,GAAA,GACK,CACLD,EAAA,EACAC,GAAA,GACK,CACLD,GAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,GACK,CACLD,GAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,KAEG,CACH4gG,OAAA,CAAA,CACA7gG,GAAA,EACAC,GAAA,GACK,CACLD,EAAA,EACAC,GAAA,GACK,CACLD,EAAA,EACAC,GAAA,GACK,CACLD,GAAA,EACAC,EAAA,IAEA6gG,UAAA,CAAA,CACA9gG,EAAA,EACAC,GAAA,GACK,CACLD,GAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,GACK,CACLD,EAAA,EACAC,EAAA,MAGA8gG,EAAA,CAAA,MAAA,KAAA,IAAA,KA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AAA,IAAA,EAAA,GAAA,IAAA,SAAA,CAAA,GAAA,EAAA,GAAA,KAAA,CAAA,EAAA,KACA,MACA,KAAA,EACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,GAAA,KACA,MACA,KAAA,EACAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,IAAA,SAAA,CAAA,GAAA,EAAA,GAAA,KACA,MACA,KAAA,EACAA,EAAA,CAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,GAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KACA,MACA,KAAA,EACAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,KAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KACA,MACA,KAAA,EACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MACA,KAAA,EACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,KAAA,CAAA,KAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MACA,KAAA,GACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,GAAA,IAAA,CAAA,KAAA,EAAA,GAAA,KAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MACA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,MACA,MACA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KA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IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,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\",\"sourcesContent\":[\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2017 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n\\n(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine(\\\"pdfjs-dist/build/pdf.worker\\\", [], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"pdfjs-dist/build/pdf.worker\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"pdfjs-dist/build/pdf.worker\\\"] = root.pdfjsDistBuildPdfWorker = factory();\\n})(typeof self !== 'undefined' ? self : this, function() {\\nreturn /******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __w_pdfjs_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__w_pdfjs_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__w_pdfjs_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__w_pdfjs_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__w_pdfjs_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, {\\n/******/ \\t\\t\\t\\tconfigurable: false,\\n/******/ \\t\\t\\t\\tenumerable: true,\\n/******/ \\t\\t\\t\\tget: getter\\n/******/ \\t\\t\\t});\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__w_pdfjs_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__w_pdfjs_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__w_pdfjs_require__.p = \\\"\\\";\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\\n/******/ })\\n/************************************************************************/\\n/******/ ([\\n/* 0 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\n__w_pdfjs_require__(75);\\n\\nvar _streams_polyfill = __w_pdfjs_require__(125);\\n\\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\\nvar NativeImageDecoding = {\\n  NONE: 'none',\\n  DECODE: 'decode',\\n  DISPLAY: 'display'\\n};\\nvar TextRenderingMode = {\\n  FILL: 0,\\n  STROKE: 1,\\n  FILL_STROKE: 2,\\n  INVISIBLE: 3,\\n  FILL_ADD_TO_PATH: 4,\\n  STROKE_ADD_TO_PATH: 5,\\n  FILL_STROKE_ADD_TO_PATH: 6,\\n  ADD_TO_PATH: 7,\\n  FILL_STROKE_MASK: 3,\\n  ADD_TO_PATH_FLAG: 4\\n};\\nvar ImageKind = {\\n  GRAYSCALE_1BPP: 1,\\n  RGB_24BPP: 2,\\n  RGBA_32BPP: 3\\n};\\nvar AnnotationType = {\\n  TEXT: 1,\\n  LINK: 2,\\n  FREETEXT: 3,\\n  LINE: 4,\\n  SQUARE: 5,\\n  CIRCLE: 6,\\n  POLYGON: 7,\\n  POLYLINE: 8,\\n  HIGHLIGHT: 9,\\n  UNDERLINE: 10,\\n  SQUIGGLY: 11,\\n  STRIKEOUT: 12,\\n  STAMP: 13,\\n  CARET: 14,\\n  INK: 15,\\n  POPUP: 16,\\n  FILEATTACHMENT: 17,\\n  SOUND: 18,\\n  MOVIE: 19,\\n  WIDGET: 20,\\n  SCREEN: 21,\\n  PRINTERMARK: 22,\\n  TRAPNET: 23,\\n  WATERMARK: 24,\\n  THREED: 25,\\n  REDACT: 26\\n};\\nvar AnnotationFlag = {\\n  INVISIBLE: 0x01,\\n  HIDDEN: 0x02,\\n  PRINT: 0x04,\\n  NOZOOM: 0x08,\\n  NOROTATE: 0x10,\\n  NOVIEW: 0x20,\\n  READONLY: 0x40,\\n  LOCKED: 0x80,\\n  TOGGLENOVIEW: 0x100,\\n  LOCKEDCONTENTS: 0x200\\n};\\nvar AnnotationFieldFlag = {\\n  READONLY: 0x0000001,\\n  REQUIRED: 0x0000002,\\n  NOEXPORT: 0x0000004,\\n  MULTILINE: 0x0001000,\\n  PASSWORD: 0x0002000,\\n  NOTOGGLETOOFF: 0x0004000,\\n  RADIO: 0x0008000,\\n  PUSHBUTTON: 0x0010000,\\n  COMBO: 0x0020000,\\n  EDIT: 0x0040000,\\n  SORT: 0x0080000,\\n  FILESELECT: 0x0100000,\\n  MULTISELECT: 0x0200000,\\n  DONOTSPELLCHECK: 0x0400000,\\n  DONOTSCROLL: 0x0800000,\\n  COMB: 0x1000000,\\n  RICHTEXT: 0x2000000,\\n  RADIOSINUNISON: 0x2000000,\\n  COMMITONSELCHANGE: 0x4000000\\n};\\nvar AnnotationBorderStyleType = {\\n  SOLID: 1,\\n  DASHED: 2,\\n  BEVELED: 3,\\n  INSET: 4,\\n  UNDERLINE: 5\\n};\\nvar StreamType = {\\n  UNKNOWN: 0,\\n  FLATE: 1,\\n  LZW: 2,\\n  DCT: 3,\\n  JPX: 4,\\n  JBIG: 5,\\n  A85: 6,\\n  AHX: 7,\\n  CCF: 8,\\n  RL: 9\\n};\\nvar FontType = {\\n  UNKNOWN: 0,\\n  TYPE1: 1,\\n  TYPE1C: 2,\\n  CIDFONTTYPE0: 3,\\n  CIDFONTTYPE0C: 4,\\n  TRUETYPE: 5,\\n  CIDFONTTYPE2: 6,\\n  TYPE3: 7,\\n  OPENTYPE: 8,\\n  TYPE0: 9,\\n  MMTYPE1: 10\\n};\\nvar VERBOSITY_LEVELS = {\\n  errors: 0,\\n  warnings: 1,\\n  infos: 5\\n};\\nvar CMapCompressionType = {\\n  NONE: 0,\\n  BINARY: 1,\\n  STREAM: 2\\n};\\nvar OPS = {\\n  dependency: 1,\\n  setLineWidth: 2,\\n  setLineCap: 3,\\n  setLineJoin: 4,\\n  setMiterLimit: 5,\\n  setDash: 6,\\n  setRenderingIntent: 7,\\n  setFlatness: 8,\\n  setGState: 9,\\n  save: 10,\\n  restore: 11,\\n  transform: 12,\\n  moveTo: 13,\\n  lineTo: 14,\\n  curveTo: 15,\\n  curveTo2: 16,\\n  curveTo3: 17,\\n  closePath: 18,\\n  rectangle: 19,\\n  stroke: 20,\\n  closeStroke: 21,\\n  fill: 22,\\n  eoFill: 23,\\n  fillStroke: 24,\\n  eoFillStroke: 25,\\n  closeFillStroke: 26,\\n  closeEOFillStroke: 27,\\n  endPath: 28,\\n  clip: 29,\\n  eoClip: 30,\\n  beginText: 31,\\n  endText: 32,\\n  setCharSpacing: 33,\\n  setWordSpacing: 34,\\n  setHScale: 35,\\n  setLeading: 36,\\n  setFont: 37,\\n  setTextRenderingMode: 38,\\n  setTextRise: 39,\\n  moveText: 40,\\n  setLeadingMoveText: 41,\\n  setTextMatrix: 42,\\n  nextLine: 43,\\n  showText: 44,\\n  showSpacedText: 45,\\n  nextLineShowText: 46,\\n  nextLineSetSpacingShowText: 47,\\n  setCharWidth: 48,\\n  setCharWidthAndBounds: 49,\\n  setStrokeColorSpace: 50,\\n  setFillColorSpace: 51,\\n  setStrokeColor: 52,\\n  setStrokeColorN: 53,\\n  setFillColor: 54,\\n  setFillColorN: 55,\\n  setStrokeGray: 56,\\n  setFillGray: 57,\\n  setStrokeRGBColor: 58,\\n  setFillRGBColor: 59,\\n  setStrokeCMYKColor: 60,\\n  setFillCMYKColor: 61,\\n  shadingFill: 62,\\n  beginInlineImage: 63,\\n  beginImageData: 64,\\n  endInlineImage: 65,\\n  paintXObject: 66,\\n  markPoint: 67,\\n  markPointProps: 68,\\n  beginMarkedContent: 69,\\n  beginMarkedContentProps: 70,\\n  endMarkedContent: 71,\\n  beginCompat: 72,\\n  endCompat: 73,\\n  paintFormXObjectBegin: 74,\\n  paintFormXObjectEnd: 75,\\n  beginGroup: 76,\\n  endGroup: 77,\\n  beginAnnotations: 78,\\n  endAnnotations: 79,\\n  beginAnnotation: 80,\\n  endAnnotation: 81,\\n  paintJpegXObject: 82,\\n  paintImageMaskXObject: 83,\\n  paintImageMaskXObjectGroup: 84,\\n  paintImageXObject: 85,\\n  paintInlineImageXObject: 86,\\n  paintInlineImageXObjectGroup: 87,\\n  paintImageXObjectRepeat: 88,\\n  paintImageMaskXObjectRepeat: 89,\\n  paintSolidColorImageMask: 90,\\n  constructPath: 91\\n};\\nvar verbosity = VERBOSITY_LEVELS.warnings;\\nfunction setVerbosityLevel(level) {\\n  verbosity = level;\\n}\\nfunction getVerbosityLevel() {\\n  return verbosity;\\n}\\nfunction info(msg) {\\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\\n    console.log('Info: ' + msg);\\n  }\\n}\\nfunction warn(msg) {\\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\\n    console.log('Warning: ' + msg);\\n  }\\n}\\nfunction deprecated(details) {\\n  console.log('Deprecated API usage: ' + details);\\n}\\nfunction unreachable(msg) {\\n  throw new Error(msg);\\n}\\nfunction assert(cond, msg) {\\n  if (!cond) {\\n    unreachable(msg);\\n  }\\n}\\nvar UNSUPPORTED_FEATURES = {\\n  unknown: 'unknown',\\n  forms: 'forms',\\n  javaScript: 'javaScript',\\n  smask: 'smask',\\n  shadingPattern: 'shadingPattern',\\n  font: 'font'\\n};\\nfunction isSameOrigin(baseUrl, otherUrl) {\\n  try {\\n    var base = new URL(baseUrl);\\n    if (!base.origin || base.origin === 'null') {\\n      return false;\\n    }\\n  } catch (e) {\\n    return false;\\n  }\\n  var other = new URL(otherUrl, base);\\n  return base.origin === other.origin;\\n}\\nfunction isValidProtocol(url) {\\n  if (!url) {\\n    return false;\\n  }\\n  switch (url.protocol) {\\n    case 'http:':\\n    case 'https:':\\n    case 'ftp:':\\n    case 'mailto:':\\n    case 'tel:':\\n      return true;\\n    default:\\n      return false;\\n  }\\n}\\nfunction createValidAbsoluteUrl(url, baseUrl) {\\n  if (!url) {\\n    return null;\\n  }\\n  try {\\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\\n    if (isValidProtocol(absoluteUrl)) {\\n      return absoluteUrl;\\n    }\\n  } catch (ex) {}\\n  return null;\\n}\\nfunction shadow(obj, prop, value) {\\n  Object.defineProperty(obj, prop, {\\n    value: value,\\n    enumerable: true,\\n    configurable: true,\\n    writable: false\\n  });\\n  return value;\\n}\\nfunction getLookupTableFactory(initializer) {\\n  var lookup;\\n  return function () {\\n    if (initializer) {\\n      lookup = Object.create(null);\\n      initializer(lookup);\\n      initializer = null;\\n    }\\n    return lookup;\\n  };\\n}\\nvar PasswordResponses = {\\n  NEED_PASSWORD: 1,\\n  INCORRECT_PASSWORD: 2\\n};\\nvar PasswordException = function PasswordExceptionClosure() {\\n  function PasswordException(msg, code) {\\n    this.name = 'PasswordException';\\n    this.message = msg;\\n    this.code = code;\\n  }\\n  PasswordException.prototype = new Error();\\n  PasswordException.constructor = PasswordException;\\n  return PasswordException;\\n}();\\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\\n  function UnknownErrorException(msg, details) {\\n    this.name = 'UnknownErrorException';\\n    this.message = msg;\\n    this.details = details;\\n  }\\n  UnknownErrorException.prototype = new Error();\\n  UnknownErrorException.constructor = UnknownErrorException;\\n  return UnknownErrorException;\\n}();\\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\\n  function InvalidPDFException(msg) {\\n    this.name = 'InvalidPDFException';\\n    this.message = msg;\\n  }\\n  InvalidPDFException.prototype = new Error();\\n  InvalidPDFException.constructor = InvalidPDFException;\\n  return InvalidPDFException;\\n}();\\nvar MissingPDFException = function MissingPDFExceptionClosure() {\\n  function MissingPDFException(msg) {\\n    this.name = 'MissingPDFException';\\n    this.message = msg;\\n  }\\n  MissingPDFException.prototype = new Error();\\n  MissingPDFException.constructor = MissingPDFException;\\n  return MissingPDFException;\\n}();\\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\\n  function UnexpectedResponseException(msg, status) {\\n    this.name = 'UnexpectedResponseException';\\n    this.message = msg;\\n    this.status = status;\\n  }\\n  UnexpectedResponseException.prototype = new Error();\\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\\n  return UnexpectedResponseException;\\n}();\\nvar NotImplementedException = function NotImplementedExceptionClosure() {\\n  function NotImplementedException(msg) {\\n    this.message = msg;\\n  }\\n  NotImplementedException.prototype = new Error();\\n  NotImplementedException.prototype.name = 'NotImplementedException';\\n  NotImplementedException.constructor = NotImplementedException;\\n  return NotImplementedException;\\n}();\\nvar MissingDataException = function MissingDataExceptionClosure() {\\n  function MissingDataException(begin, end) {\\n    this.begin = begin;\\n    this.end = end;\\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\\n  }\\n  MissingDataException.prototype = new Error();\\n  MissingDataException.prototype.name = 'MissingDataException';\\n  MissingDataException.constructor = MissingDataException;\\n  return MissingDataException;\\n}();\\nvar XRefParseException = function XRefParseExceptionClosure() {\\n  function XRefParseException(msg) {\\n    this.message = msg;\\n  }\\n  XRefParseException.prototype = new Error();\\n  XRefParseException.prototype.name = 'XRefParseException';\\n  XRefParseException.constructor = XRefParseException;\\n  return XRefParseException;\\n}();\\nvar FormatError = function FormatErrorClosure() {\\n  function FormatError(msg) {\\n    this.message = msg;\\n  }\\n  FormatError.prototype = new Error();\\n  FormatError.prototype.name = 'FormatError';\\n  FormatError.constructor = FormatError;\\n  return FormatError;\\n}();\\nvar AbortException = function AbortExceptionClosure() {\\n  function AbortException(msg) {\\n    this.name = 'AbortException';\\n    this.message = msg;\\n  }\\n  AbortException.prototype = new Error();\\n  AbortException.constructor = AbortException;\\n  return AbortException;\\n}();\\nvar NullCharactersRegExp = /\\\\x00/g;\\nfunction removeNullCharacters(str) {\\n  if (typeof str !== 'string') {\\n    warn('The argument for removeNullCharacters must be a string.');\\n    return str;\\n  }\\n  return str.replace(NullCharactersRegExp, '');\\n}\\nfunction bytesToString(bytes) {\\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\\n  var length = bytes.length;\\n  var MAX_ARGUMENT_COUNT = 8192;\\n  if (length < MAX_ARGUMENT_COUNT) {\\n    return String.fromCharCode.apply(null, bytes);\\n  }\\n  var strBuf = [];\\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\\n    var chunk = bytes.subarray(i, chunkEnd);\\n    strBuf.push(String.fromCharCode.apply(null, chunk));\\n  }\\n  return strBuf.join('');\\n}\\nfunction stringToBytes(str) {\\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\\n  var length = str.length;\\n  var bytes = new Uint8Array(length);\\n  for (var i = 0; i < length; ++i) {\\n    bytes[i] = str.charCodeAt(i) & 0xFF;\\n  }\\n  return bytes;\\n}\\nfunction arrayByteLength(arr) {\\n  if (arr.length !== undefined) {\\n    return arr.length;\\n  }\\n  assert(arr.byteLength !== undefined);\\n  return arr.byteLength;\\n}\\nfunction arraysToBytes(arr) {\\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\\n    return arr[0];\\n  }\\n  var resultLength = 0;\\n  var i,\\n      ii = arr.length;\\n  var item, itemLength;\\n  for (i = 0; i < ii; i++) {\\n    item = arr[i];\\n    itemLength = arrayByteLength(item);\\n    resultLength += itemLength;\\n  }\\n  var pos = 0;\\n  var data = new Uint8Array(resultLength);\\n  for (i = 0; i < ii; i++) {\\n    item = arr[i];\\n    if (!(item instanceof Uint8Array)) {\\n      if (typeof item === 'string') {\\n        item = stringToBytes(item);\\n      } else {\\n        item = new Uint8Array(item);\\n      }\\n    }\\n    itemLength = item.byteLength;\\n    data.set(item, pos);\\n    pos += itemLength;\\n  }\\n  return data;\\n}\\nfunction string32(value) {\\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\\n}\\nfunction log2(x) {\\n  if (x <= 0) {\\n    return 0;\\n  }\\n  return Math.ceil(Math.log2(x));\\n}\\nfunction readInt8(data, start) {\\n  return data[start] << 24 >> 24;\\n}\\nfunction readUint16(data, offset) {\\n  return data[offset] << 8 | data[offset + 1];\\n}\\nfunction readUint32(data, offset) {\\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\\n}\\nfunction isLittleEndian() {\\n  var buffer8 = new Uint8Array(4);\\n  buffer8[0] = 1;\\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\\n  return view32[0] === 1;\\n}\\nfunction isEvalSupported() {\\n  try {\\n    new Function('');\\n    return true;\\n  } catch (e) {\\n    return false;\\n  }\\n}\\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\\nvar Util = function UtilClosure() {\\n  function Util() {}\\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\\n    rgbBuf[1] = r;\\n    rgbBuf[3] = g;\\n    rgbBuf[5] = b;\\n    return rgbBuf.join('');\\n  };\\n  Util.transform = function Util_transform(m1, m2) {\\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\\n  };\\n  Util.applyTransform = function Util_applyTransform(p, m) {\\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\\n    return [xt, yt];\\n  };\\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\\n    var d = m[0] * m[3] - m[1] * m[2];\\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\\n    return [xt, yt];\\n  };\\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\\n    var p1 = Util.applyTransform(r, m);\\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\\n    var p3 = Util.applyTransform([r[0], r[3]], m);\\n    var p4 = Util.applyTransform([r[2], r[1]], m);\\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\\n  };\\n  Util.inverseTransform = function Util_inverseTransform(m) {\\n    var d = m[0] * m[3] - m[1] * m[2];\\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\\n  };\\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\\n  };\\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\\n    var transpose = [m[0], m[2], m[1], m[3]];\\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\\n    var first = (a + d) / 2;\\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\\n    var sx = first + second || 1;\\n    var sy = first - second || 1;\\n    return [Math.sqrt(sx), Math.sqrt(sy)];\\n  };\\n  Util.normalizeRect = function Util_normalizeRect(rect) {\\n    var r = rect.slice(0);\\n    if (rect[0] > rect[2]) {\\n      r[0] = rect[2];\\n      r[2] = rect[0];\\n    }\\n    if (rect[1] > rect[3]) {\\n      r[1] = rect[3];\\n      r[3] = rect[1];\\n    }\\n    return r;\\n  };\\n  Util.intersect = function Util_intersect(rect1, rect2) {\\n    function compare(a, b) {\\n      return a - b;\\n    }\\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\\n        result = [];\\n    rect1 = Util.normalizeRect(rect1);\\n    rect2 = Util.normalizeRect(rect2);\\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\\n      result[0] = orderedX[1];\\n      result[2] = orderedX[2];\\n    } else {\\n      return false;\\n    }\\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\\n      result[1] = orderedY[1];\\n      result[3] = orderedY[2];\\n    } else {\\n      return false;\\n    }\\n    return result;\\n  };\\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\\n    var pos,\\n        romanBuf = [];\\n    while (number >= 1000) {\\n      number -= 1000;\\n      romanBuf.push('M');\\n    }\\n    pos = number / 100 | 0;\\n    number %= 100;\\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\\n    pos = number / 10 | 0;\\n    number %= 10;\\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\\n    var romanStr = romanBuf.join('');\\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\\n  };\\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\\n    Array.prototype.push.apply(arr1, arr2);\\n  };\\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\\n    Array.prototype.unshift.apply(arr1, arr2);\\n  };\\n  Util.extendObj = function extendObj(obj1, obj2) {\\n    for (var key in obj2) {\\n      obj1[key] = obj2[key];\\n    }\\n  };\\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\\n    while (dict && !dict.has(name)) {\\n      dict = dict.get('Parent');\\n    }\\n    if (!dict) {\\n      return null;\\n    }\\n    return getArray ? dict.getArray(name) : dict.get(name);\\n  };\\n  Util.inherit = function Util_inherit(sub, base, prototype) {\\n    sub.prototype = Object.create(base.prototype);\\n    sub.prototype.constructor = sub;\\n    for (var prop in prototype) {\\n      sub.prototype[prop] = prototype[prop];\\n    }\\n  };\\n  Util.loadScript = function Util_loadScript(src, callback) {\\n    var script = document.createElement('script');\\n    var loaded = false;\\n    script.setAttribute('src', src);\\n    if (callback) {\\n      script.onload = function () {\\n        if (!loaded) {\\n          callback();\\n        }\\n        loaded = true;\\n      };\\n    }\\n    document.getElementsByTagName('head')[0].appendChild(script);\\n  };\\n  return Util;\\n}();\\nvar PageViewport = function PageViewportClosure() {\\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\\n    this.viewBox = viewBox;\\n    this.scale = scale;\\n    this.rotation = rotation;\\n    this.offsetX = offsetX;\\n    this.offsetY = offsetY;\\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\\n    var rotateA, rotateB, rotateC, rotateD;\\n    rotation = rotation % 360;\\n    rotation = rotation < 0 ? rotation + 360 : rotation;\\n    switch (rotation) {\\n      case 180:\\n        rotateA = -1;\\n        rotateB = 0;\\n        rotateC = 0;\\n        rotateD = 1;\\n        break;\\n      case 90:\\n        rotateA = 0;\\n        rotateB = 1;\\n        rotateC = 1;\\n        rotateD = 0;\\n        break;\\n      case 270:\\n        rotateA = 0;\\n        rotateB = -1;\\n        rotateC = -1;\\n        rotateD = 0;\\n        break;\\n      default:\\n        rotateA = 1;\\n        rotateB = 0;\\n        rotateC = 0;\\n        rotateD = -1;\\n        break;\\n    }\\n    if (dontFlip) {\\n      rotateC = -rotateC;\\n      rotateD = -rotateD;\\n    }\\n    var offsetCanvasX, offsetCanvasY;\\n    var width, height;\\n    if (rotateA === 0) {\\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\\n    } else {\\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\\n    }\\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\\n    this.width = width;\\n    this.height = height;\\n    this.fontScale = scale;\\n  }\\n  PageViewport.prototype = {\\n    clone: function PageViewPort_clone(args) {\\n      args = args || {};\\n      var scale = 'scale' in args ? args.scale : this.scale;\\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\\n    },\\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\\n      return Util.applyTransform([x, y], this.transform);\\n    },\\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\\n      return [tl[0], tl[1], br[0], br[1]];\\n    },\\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\\n      return Util.applyInverseTransform([x, y], this.transform);\\n    }\\n  };\\n  return PageViewport;\\n}();\\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\\nfunction stringToPDFString(str) {\\n  var i,\\n      n = str.length,\\n      strBuf = [];\\n  if (str[0] === '\\\\xFE' && str[1] === '\\\\xFF') {\\n    for (i = 2; i < n; i += 2) {\\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\\n    }\\n  } else {\\n    for (i = 0; i < n; ++i) {\\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\\n    }\\n  }\\n  return strBuf.join('');\\n}\\nfunction stringToUTF8String(str) {\\n  return decodeURIComponent(escape(str));\\n}\\nfunction utf8StringToString(str) {\\n  return unescape(encodeURIComponent(str));\\n}\\nfunction isEmptyObj(obj) {\\n  for (var key in obj) {\\n    return false;\\n  }\\n  return true;\\n}\\nfunction isBool(v) {\\n  return typeof v === 'boolean';\\n}\\nfunction isNum(v) {\\n  return typeof v === 'number';\\n}\\nfunction isString(v) {\\n  return typeof v === 'string';\\n}\\nfunction isArrayBuffer(v) {\\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\\n}\\nfunction isSpace(ch) {\\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\\n}\\nfunction createPromiseCapability() {\\n  var capability = {};\\n  capability.promise = new Promise(function (resolve, reject) {\\n    capability.resolve = resolve;\\n    capability.reject = reject;\\n  });\\n  return capability;\\n}\\nvar createBlob = function createBlob(data, contentType) {\\n  if (typeof Blob !== 'undefined') {\\n    return new Blob([data], { type: contentType });\\n  }\\n  throw new Error('The \\\"Blob\\\" constructor is not supported.');\\n};\\nvar createObjectURL = function createObjectURLClosure() {\\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\\n  return function createObjectURL(data, contentType) {\\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n    if (!forceDataSchema && URL.createObjectURL) {\\n      var blob = createBlob(data, contentType);\\n      return URL.createObjectURL(blob);\\n    }\\n    var buffer = 'data:' + contentType + ';base64,';\\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\\n      var b1 = data[i] & 0xFF;\\n      var b2 = data[i + 1] & 0xFF;\\n      var b3 = data[i + 2] & 0xFF;\\n      var d1 = b1 >> 2,\\n          d2 = (b1 & 3) << 4 | b2 >> 4;\\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\\n    }\\n    return buffer;\\n  };\\n}();\\nfunction resolveCall(fn, args) {\\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\\n\\n  if (!fn) {\\n    return Promise.resolve(undefined);\\n  }\\n  return new Promise(function (resolve, reject) {\\n    resolve(fn.apply(thisArg, args));\\n  });\\n}\\nfunction wrapReason(reason) {\\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\\n    return reason;\\n  }\\n  switch (reason.name) {\\n    case 'AbortException':\\n      return new AbortException(reason.message);\\n    case 'MissingPDFException':\\n      return new MissingPDFException(reason.message);\\n    case 'UnexpectedResponseException':\\n      return new UnexpectedResponseException(reason.message, reason.status);\\n    default:\\n      return new UnknownErrorException(reason.message, reason.details);\\n  }\\n}\\nfunction makeReasonSerializable(reason) {\\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\\n    return reason;\\n  }\\n  return new UnknownErrorException(reason.message, reason.toString());\\n}\\nfunction resolveOrReject(capability, success, reason) {\\n  if (success) {\\n    capability.resolve();\\n  } else {\\n    capability.reject(reason);\\n  }\\n}\\nfunction finalize(promise) {\\n  return Promise.resolve(promise).catch(function () {});\\n}\\nfunction MessageHandler(sourceName, targetName, comObj) {\\n  var _this = this;\\n\\n  this.sourceName = sourceName;\\n  this.targetName = targetName;\\n  this.comObj = comObj;\\n  this.callbackId = 1;\\n  this.streamId = 1;\\n  this.postMessageTransfers = true;\\n  this.streamSinks = Object.create(null);\\n  this.streamControllers = Object.create(null);\\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\\n  var ah = this.actionHandler = Object.create(null);\\n  this._onComObjOnMessage = function (event) {\\n    var data = event.data;\\n    if (data.targetName !== _this.sourceName) {\\n      return;\\n    }\\n    if (data.stream) {\\n      _this._processStreamMessage(data);\\n    } else if (data.isReply) {\\n      var callbackId = data.callbackId;\\n      if (data.callbackId in callbacksCapabilities) {\\n        var callback = callbacksCapabilities[callbackId];\\n        delete callbacksCapabilities[callbackId];\\n        if ('error' in data) {\\n          callback.reject(wrapReason(data.error));\\n        } else {\\n          callback.resolve(data.data);\\n        }\\n      } else {\\n        throw new Error('Cannot resolve callback ' + callbackId);\\n      }\\n    } else if (data.action in ah) {\\n      var action = ah[data.action];\\n      if (data.callbackId) {\\n        var _sourceName = _this.sourceName;\\n        var _targetName = data.sourceName;\\n        Promise.resolve().then(function () {\\n          return action[0].call(action[1], data.data);\\n        }).then(function (result) {\\n          comObj.postMessage({\\n            sourceName: _sourceName,\\n            targetName: _targetName,\\n            isReply: true,\\n            callbackId: data.callbackId,\\n            data: result\\n          });\\n        }, function (reason) {\\n          comObj.postMessage({\\n            sourceName: _sourceName,\\n            targetName: _targetName,\\n            isReply: true,\\n            callbackId: data.callbackId,\\n            error: makeReasonSerializable(reason)\\n          });\\n        });\\n      } else if (data.streamId) {\\n        _this._createStreamSink(data);\\n      } else {\\n        action[0].call(action[1], data.data);\\n      }\\n    } else {\\n      throw new Error('Unknown action from worker: ' + data.action);\\n    }\\n  };\\n  comObj.addEventListener('message', this._onComObjOnMessage);\\n}\\nMessageHandler.prototype = {\\n  on: function on(actionName, handler, scope) {\\n    var ah = this.actionHandler;\\n    if (ah[actionName]) {\\n      throw new Error('There is already an actionName called \\\"' + actionName + '\\\"');\\n    }\\n    ah[actionName] = [handler, scope];\\n  },\\n  send: function send(actionName, data, transfers) {\\n    var message = {\\n      sourceName: this.sourceName,\\n      targetName: this.targetName,\\n      action: actionName,\\n      data: data\\n    };\\n    this.postMessage(message, transfers);\\n  },\\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\\n    var callbackId = this.callbackId++;\\n    var message = {\\n      sourceName: this.sourceName,\\n      targetName: this.targetName,\\n      action: actionName,\\n      data: data,\\n      callbackId: callbackId\\n    };\\n    var capability = createPromiseCapability();\\n    this.callbacksCapabilities[callbackId] = capability;\\n    try {\\n      this.postMessage(message, transfers);\\n    } catch (e) {\\n      capability.reject(e);\\n    }\\n    return capability.promise;\\n  },\\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\\n    var _this2 = this;\\n\\n    var streamId = this.streamId++;\\n    var sourceName = this.sourceName;\\n    var targetName = this.targetName;\\n    return new _streams_polyfill.ReadableStream({\\n      start: function start(controller) {\\n        var startCapability = createPromiseCapability();\\n        _this2.streamControllers[streamId] = {\\n          controller: controller,\\n          startCall: startCapability,\\n          isClosed: false\\n        };\\n        _this2.postMessage({\\n          sourceName: sourceName,\\n          targetName: targetName,\\n          action: actionName,\\n          streamId: streamId,\\n          data: data,\\n          desiredSize: controller.desiredSize\\n        });\\n        return startCapability.promise;\\n      },\\n      pull: function pull(controller) {\\n        var pullCapability = createPromiseCapability();\\n        _this2.streamControllers[streamId].pullCall = pullCapability;\\n        _this2.postMessage({\\n          sourceName: sourceName,\\n          targetName: targetName,\\n          stream: 'pull',\\n          streamId: streamId,\\n          desiredSize: controller.desiredSize\\n        });\\n        return pullCapability.promise;\\n      },\\n      cancel: function cancel(reason) {\\n        var cancelCapability = createPromiseCapability();\\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\\n        _this2.streamControllers[streamId].isClosed = true;\\n        _this2.postMessage({\\n          sourceName: sourceName,\\n          targetName: targetName,\\n          stream: 'cancel',\\n          reason: reason,\\n          streamId: streamId\\n        });\\n        return cancelCapability.promise;\\n      }\\n    }, queueingStrategy);\\n  },\\n  _createStreamSink: function _createStreamSink(data) {\\n    var _this3 = this;\\n\\n    var self = this;\\n    var action = this.actionHandler[data.action];\\n    var streamId = data.streamId;\\n    var desiredSize = data.desiredSize;\\n    var sourceName = this.sourceName;\\n    var targetName = data.sourceName;\\n    var capability = createPromiseCapability();\\n    var sendStreamRequest = function sendStreamRequest(_ref) {\\n      var stream = _ref.stream,\\n          chunk = _ref.chunk,\\n          transfers = _ref.transfers,\\n          success = _ref.success,\\n          reason = _ref.reason;\\n\\n      _this3.postMessage({\\n        sourceName: sourceName,\\n        targetName: targetName,\\n        stream: stream,\\n        streamId: streamId,\\n        chunk: chunk,\\n        success: success,\\n        reason: reason\\n      }, transfers);\\n    };\\n    var streamSink = {\\n      enqueue: function enqueue(chunk) {\\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\\n        var transfers = arguments[2];\\n\\n        if (this.isCancelled) {\\n          return;\\n        }\\n        var lastDesiredSize = this.desiredSize;\\n        this.desiredSize -= size;\\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\\n          this.sinkCapability = createPromiseCapability();\\n          this.ready = this.sinkCapability.promise;\\n        }\\n        sendStreamRequest({\\n          stream: 'enqueue',\\n          chunk: chunk,\\n          transfers: transfers\\n        });\\n      },\\n      close: function close() {\\n        if (this.isCancelled) {\\n          return;\\n        }\\n        this.isCancelled = true;\\n        sendStreamRequest({ stream: 'close' });\\n        delete self.streamSinks[streamId];\\n      },\\n      error: function error(reason) {\\n        if (this.isCancelled) {\\n          return;\\n        }\\n        this.isCancelled = true;\\n        sendStreamRequest({\\n          stream: 'error',\\n          reason: reason\\n        });\\n      },\\n\\n      sinkCapability: capability,\\n      onPull: null,\\n      onCancel: null,\\n      isCancelled: false,\\n      desiredSize: desiredSize,\\n      ready: null\\n    };\\n    streamSink.sinkCapability.resolve();\\n    streamSink.ready = streamSink.sinkCapability.promise;\\n    this.streamSinks[streamId] = streamSink;\\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\\n      sendStreamRequest({\\n        stream: 'start_complete',\\n        success: true\\n      });\\n    }, function (reason) {\\n      sendStreamRequest({\\n        stream: 'start_complete',\\n        success: false,\\n        reason: reason\\n      });\\n    });\\n  },\\n  _processStreamMessage: function _processStreamMessage(data) {\\n    var _this4 = this;\\n\\n    var sourceName = this.sourceName;\\n    var targetName = data.sourceName;\\n    var streamId = data.streamId;\\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\\n      var stream = _ref2.stream,\\n          success = _ref2.success,\\n          reason = _ref2.reason;\\n\\n      _this4.comObj.postMessage({\\n        sourceName: sourceName,\\n        targetName: targetName,\\n        stream: stream,\\n        success: success,\\n        streamId: streamId,\\n        reason: reason\\n      });\\n    };\\n    var deleteStreamController = function deleteStreamController() {\\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\\n        return capability && finalize(capability.promise);\\n      })).then(function () {\\n        delete _this4.streamControllers[data.streamId];\\n      });\\n    };\\n    switch (data.stream) {\\n      case 'start_complete':\\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\\n        break;\\n      case 'pull_complete':\\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\\n        break;\\n      case 'pull':\\n        if (!this.streamSinks[data.streamId]) {\\n          sendStreamResponse({\\n            stream: 'pull_complete',\\n            success: true\\n          });\\n          break;\\n        }\\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\\n          this.streamSinks[data.streamId].sinkCapability.resolve();\\n        }\\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\\n          sendStreamResponse({\\n            stream: 'pull_complete',\\n            success: true\\n          });\\n        }, function (reason) {\\n          sendStreamResponse({\\n            stream: 'pull_complete',\\n            success: false,\\n            reason: reason\\n          });\\n        });\\n        break;\\n      case 'enqueue':\\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\\n        if (!this.streamControllers[data.streamId].isClosed) {\\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\\n        }\\n        break;\\n      case 'close':\\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\\n        if (this.streamControllers[data.streamId].isClosed) {\\n          break;\\n        }\\n        this.streamControllers[data.streamId].isClosed = true;\\n        this.streamControllers[data.streamId].controller.close();\\n        deleteStreamController();\\n        break;\\n      case 'error':\\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\\n        deleteStreamController();\\n        break;\\n      case 'cancel_complete':\\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\\n        deleteStreamController();\\n        break;\\n      case 'cancel':\\n        if (!this.streamSinks[data.streamId]) {\\n          break;\\n        }\\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\\n          sendStreamResponse({\\n            stream: 'cancel_complete',\\n            success: true\\n          });\\n        }, function (reason) {\\n          sendStreamResponse({\\n            stream: 'cancel_complete',\\n            success: false,\\n            reason: reason\\n          });\\n        });\\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\\n        this.streamSinks[data.streamId].isCancelled = true;\\n        delete this.streamSinks[data.streamId];\\n        break;\\n      default:\\n        throw new Error('Unexpected stream case');\\n    }\\n  },\\n  postMessage: function postMessage(message, transfers) {\\n    if (transfers && this.postMessageTransfers) {\\n      this.comObj.postMessage(message, transfers);\\n    } else {\\n      this.comObj.postMessage(message);\\n    }\\n  },\\n  destroy: function destroy() {\\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\\n  }\\n};\\nfunction loadJpegStream(id, imageUrl, objs) {\\n  var img = new Image();\\n  img.onload = function loadJpegStream_onloadClosure() {\\n    objs.resolve(id, img);\\n  };\\n  img.onerror = function loadJpegStream_onerrorClosure() {\\n    objs.resolve(id, null);\\n    warn('Error during JPEG image loading');\\n  };\\n  img.src = imageUrl;\\n}\\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\\nexports.OPS = OPS;\\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\\nexports.AnnotationFlag = AnnotationFlag;\\nexports.AnnotationType = AnnotationType;\\nexports.FontType = FontType;\\nexports.ImageKind = ImageKind;\\nexports.CMapCompressionType = CMapCompressionType;\\nexports.AbortException = AbortException;\\nexports.InvalidPDFException = InvalidPDFException;\\nexports.MessageHandler = MessageHandler;\\nexports.MissingDataException = MissingDataException;\\nexports.MissingPDFException = MissingPDFException;\\nexports.NativeImageDecoding = NativeImageDecoding;\\nexports.NotImplementedException = NotImplementedException;\\nexports.PageViewport = PageViewport;\\nexports.PasswordException = PasswordException;\\nexports.PasswordResponses = PasswordResponses;\\nexports.StreamType = StreamType;\\nexports.TextRenderingMode = TextRenderingMode;\\nexports.UnexpectedResponseException = UnexpectedResponseException;\\nexports.UnknownErrorException = UnknownErrorException;\\nexports.Util = Util;\\nexports.XRefParseException = XRefParseException;\\nexports.FormatError = FormatError;\\nexports.arrayByteLength = arrayByteLength;\\nexports.arraysToBytes = arraysToBytes;\\nexports.assert = assert;\\nexports.bytesToString = bytesToString;\\nexports.createBlob = createBlob;\\nexports.createPromiseCapability = createPromiseCapability;\\nexports.createObjectURL = createObjectURL;\\nexports.deprecated = deprecated;\\nexports.getLookupTableFactory = getLookupTableFactory;\\nexports.getVerbosityLevel = getVerbosityLevel;\\nexports.info = info;\\nexports.isArrayBuffer = isArrayBuffer;\\nexports.isBool = isBool;\\nexports.isEmptyObj = isEmptyObj;\\nexports.isNum = isNum;\\nexports.isString = isString;\\nexports.isSpace = isSpace;\\nexports.isSameOrigin = isSameOrigin;\\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\\nexports.isLittleEndian = isLittleEndian;\\nexports.isEvalSupported = isEvalSupported;\\nexports.loadJpegStream = loadJpegStream;\\nexports.log2 = log2;\\nexports.readInt8 = readInt8;\\nexports.readUint16 = readUint16;\\nexports.readUint32 = readUint32;\\nexports.removeNullCharacters = removeNullCharacters;\\nexports.ReadableStream = _streams_polyfill.ReadableStream;\\nexports.setVerbosityLevel = setVerbosityLevel;\\nexports.shadow = shadow;\\nexports.string32 = string32;\\nexports.stringToBytes = stringToBytes;\\nexports.stringToPDFString = stringToPDFString;\\nexports.stringToUTF8String = stringToUTF8String;\\nexports.utf8StringToString = utf8StringToString;\\nexports.warn = warn;\\nexports.unreachable = unreachable;\\n\\n/***/ }),\\n/* 1 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar EOF = {};\\nvar Name = function NameClosure() {\\n  function Name(name) {\\n    this.name = name;\\n  }\\n  Name.prototype = {};\\n  var nameCache = Object.create(null);\\n  Name.get = function Name_get(name) {\\n    var nameValue = nameCache[name];\\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\\n  };\\n  return Name;\\n}();\\nvar Cmd = function CmdClosure() {\\n  function Cmd(cmd) {\\n    this.cmd = cmd;\\n  }\\n  Cmd.prototype = {};\\n  var cmdCache = Object.create(null);\\n  Cmd.get = function Cmd_get(cmd) {\\n    var cmdValue = cmdCache[cmd];\\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\\n  };\\n  return Cmd;\\n}();\\nvar Dict = function DictClosure() {\\n  var nonSerializable = function nonSerializableClosure() {\\n    return nonSerializable;\\n  };\\n  function Dict(xref) {\\n    this._map = Object.create(null);\\n    this.xref = xref;\\n    this.objId = null;\\n    this.suppressEncryption = false;\\n    this.__nonSerializable__ = nonSerializable;\\n  }\\n  Dict.prototype = {\\n    assignXref: function Dict_assignXref(newXref) {\\n      this.xref = newXref;\\n    },\\n    get: function Dict_get(key1, key2, key3) {\\n      var value;\\n      var xref = this.xref,\\n          suppressEncryption = this.suppressEncryption;\\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n      }\\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n      }\\n      value = this._map[key3] || null;\\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n    },\\n    getAsync: function Dict_getAsync(key1, key2, key3) {\\n      var value;\\n      var xref = this.xref,\\n          suppressEncryption = this.suppressEncryption;\\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\n        if (xref) {\\n          return xref.fetchIfRefAsync(value, suppressEncryption);\\n        }\\n        return Promise.resolve(value);\\n      }\\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\n        if (xref) {\\n          return xref.fetchIfRefAsync(value, suppressEncryption);\\n        }\\n        return Promise.resolve(value);\\n      }\\n      value = this._map[key3] || null;\\n      if (xref) {\\n        return xref.fetchIfRefAsync(value, suppressEncryption);\\n      }\\n      return Promise.resolve(value);\\n    },\\n    getArray: function Dict_getArray(key1, key2, key3) {\\n      var value = this.get(key1, key2, key3);\\n      var xref = this.xref,\\n          suppressEncryption = this.suppressEncryption;\\n      if (!Array.isArray(value) || !xref) {\\n        return value;\\n      }\\n      value = value.slice();\\n      for (var i = 0, ii = value.length; i < ii; i++) {\\n        if (!isRef(value[i])) {\\n          continue;\\n        }\\n        value[i] = xref.fetch(value[i], suppressEncryption);\\n      }\\n      return value;\\n    },\\n    getRaw: function Dict_getRaw(key) {\\n      return this._map[key];\\n    },\\n    getKeys: function Dict_getKeys() {\\n      return Object.keys(this._map);\\n    },\\n    set: function Dict_set(key, value) {\\n      this._map[key] = value;\\n    },\\n    has: function Dict_has(key) {\\n      return key in this._map;\\n    },\\n    forEach: function Dict_forEach(callback) {\\n      for (var key in this._map) {\\n        callback(key, this.get(key));\\n      }\\n    }\\n  };\\n  Dict.empty = new Dict(null);\\n  Dict.merge = function (xref, dictArray) {\\n    var mergedDict = new Dict(xref);\\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\\n      var dict = dictArray[i];\\n      if (!isDict(dict)) {\\n        continue;\\n      }\\n      for (var keyName in dict._map) {\\n        if (mergedDict._map[keyName] !== undefined) {\\n          continue;\\n        }\\n        mergedDict._map[keyName] = dict._map[keyName];\\n      }\\n    }\\n    return mergedDict;\\n  };\\n  return Dict;\\n}();\\nvar Ref = function RefClosure() {\\n  function Ref(num, gen) {\\n    this.num = num;\\n    this.gen = gen;\\n  }\\n  Ref.prototype = {\\n    toString: function Ref_toString() {\\n      var str = this.num + 'R';\\n      if (this.gen !== 0) {\\n        str += this.gen;\\n      }\\n      return str;\\n    }\\n  };\\n  return Ref;\\n}();\\nvar RefSet = function RefSetClosure() {\\n  function RefSet() {\\n    this.dict = Object.create(null);\\n  }\\n  RefSet.prototype = {\\n    has: function RefSet_has(ref) {\\n      return ref.toString() in this.dict;\\n    },\\n    put: function RefSet_put(ref) {\\n      this.dict[ref.toString()] = true;\\n    },\\n    remove: function RefSet_remove(ref) {\\n      delete this.dict[ref.toString()];\\n    }\\n  };\\n  return RefSet;\\n}();\\nvar RefSetCache = function RefSetCacheClosure() {\\n  function RefSetCache() {\\n    this.dict = Object.create(null);\\n  }\\n  RefSetCache.prototype = {\\n    get: function RefSetCache_get(ref) {\\n      return this.dict[ref.toString()];\\n    },\\n    has: function RefSetCache_has(ref) {\\n      return ref.toString() in this.dict;\\n    },\\n    put: function RefSetCache_put(ref, obj) {\\n      this.dict[ref.toString()] = obj;\\n    },\\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\\n      this.dict[ref.toString()] = this.get(aliasRef);\\n    },\\n    forEach: function RefSetCache_forEach(fn, thisArg) {\\n      for (var i in this.dict) {\\n        fn.call(thisArg, this.dict[i]);\\n      }\\n    },\\n    clear: function RefSetCache_clear() {\\n      this.dict = Object.create(null);\\n    }\\n  };\\n  return RefSetCache;\\n}();\\nfunction isEOF(v) {\\n  return v === EOF;\\n}\\nfunction isName(v, name) {\\n  return v instanceof Name && (name === undefined || v.name === name);\\n}\\nfunction isCmd(v, cmd) {\\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\\n}\\nfunction isDict(v, type) {\\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\\n}\\nfunction isRef(v) {\\n  return v instanceof Ref;\\n}\\nfunction isRefsEqual(v1, v2) {\\n  return v1.num === v2.num && v1.gen === v2.gen;\\n}\\nfunction isStream(v) {\\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\\n}\\nexports.EOF = EOF;\\nexports.Cmd = Cmd;\\nexports.Dict = Dict;\\nexports.Name = Name;\\nexports.Ref = Ref;\\nexports.RefSet = RefSet;\\nexports.RefSetCache = RefSetCache;\\nexports.isEOF = isEOF;\\nexports.isCmd = isCmd;\\nexports.isDict = isDict;\\nexports.isName = isName;\\nexports.isRef = isRef;\\nexports.isRefsEqual = isRefsEqual;\\nexports.isStream = isStream;\\n\\n/***/ }),\\n/* 2 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar Stream = function StreamClosure() {\\n  function Stream(arrayBuffer, start, length, dict) {\\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\\n    this.start = start || 0;\\n    this.pos = this.start;\\n    this.end = start + length || this.bytes.length;\\n    this.dict = dict;\\n  }\\n  Stream.prototype = {\\n    get length() {\\n      return this.end - this.start;\\n    },\\n    get isEmpty() {\\n      return this.length === 0;\\n    },\\n    getByte: function Stream_getByte() {\\n      if (this.pos >= this.end) {\\n        return -1;\\n      }\\n      return this.bytes[this.pos++];\\n    },\\n    getUint16: function Stream_getUint16() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      if (b0 === -1 || b1 === -1) {\\n        return -1;\\n      }\\n      return (b0 << 8) + b1;\\n    },\\n    getInt32: function Stream_getInt32() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      var b2 = this.getByte();\\n      var b3 = this.getByte();\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n    },\\n    getBytes: function Stream_getBytes(length) {\\n      var bytes = this.bytes;\\n      var pos = this.pos;\\n      var strEnd = this.end;\\n      if (!length) {\\n        return bytes.subarray(pos, strEnd);\\n      }\\n      var end = pos + length;\\n      if (end > strEnd) {\\n        end = strEnd;\\n      }\\n      this.pos = end;\\n      return bytes.subarray(pos, end);\\n    },\\n    peekByte: function Stream_peekByte() {\\n      var peekedByte = this.getByte();\\n      this.pos--;\\n      return peekedByte;\\n    },\\n    peekBytes: function Stream_peekBytes(length) {\\n      var bytes = this.getBytes(length);\\n      this.pos -= bytes.length;\\n      return bytes;\\n    },\\n    skip: function Stream_skip(n) {\\n      if (!n) {\\n        n = 1;\\n      }\\n      this.pos += n;\\n    },\\n    reset: function Stream_reset() {\\n      this.pos = this.start;\\n    },\\n    moveStart: function Stream_moveStart() {\\n      this.start = this.pos;\\n    },\\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\\n      return new Stream(this.bytes.buffer, start, length, dict);\\n    }\\n  };\\n  return Stream;\\n}();\\nvar StringStream = function StringStreamClosure() {\\n  function StringStream(str) {\\n    var bytes = (0, _util.stringToBytes)(str);\\n    Stream.call(this, bytes);\\n  }\\n  StringStream.prototype = Stream.prototype;\\n  return StringStream;\\n}();\\nvar DecodeStream = function DecodeStreamClosure() {\\n  var emptyBuffer = new Uint8Array(0);\\n  function DecodeStream(maybeMinBufferLength) {\\n    this.pos = 0;\\n    this.bufferLength = 0;\\n    this.eof = false;\\n    this.buffer = emptyBuffer;\\n    this.minBufferLength = 512;\\n    if (maybeMinBufferLength) {\\n      while (this.minBufferLength < maybeMinBufferLength) {\\n        this.minBufferLength *= 2;\\n      }\\n    }\\n  }\\n  DecodeStream.prototype = {\\n    get isEmpty() {\\n      while (!this.eof && this.bufferLength === 0) {\\n        this.readBlock();\\n      }\\n      return this.bufferLength === 0;\\n    },\\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\\n      var buffer = this.buffer;\\n      if (requested <= buffer.byteLength) {\\n        return buffer;\\n      }\\n      var size = this.minBufferLength;\\n      while (size < requested) {\\n        size *= 2;\\n      }\\n      var buffer2 = new Uint8Array(size);\\n      buffer2.set(buffer);\\n      return this.buffer = buffer2;\\n    },\\n    getByte: function DecodeStream_getByte() {\\n      var pos = this.pos;\\n      while (this.bufferLength <= pos) {\\n        if (this.eof) {\\n          return -1;\\n        }\\n        this.readBlock();\\n      }\\n      return this.buffer[this.pos++];\\n    },\\n    getUint16: function DecodeStream_getUint16() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      if (b0 === -1 || b1 === -1) {\\n        return -1;\\n      }\\n      return (b0 << 8) + b1;\\n    },\\n    getInt32: function DecodeStream_getInt32() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      var b2 = this.getByte();\\n      var b3 = this.getByte();\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n    },\\n    getBytes: function DecodeStream_getBytes(length) {\\n      var end,\\n          pos = this.pos;\\n      if (length) {\\n        this.ensureBuffer(pos + length);\\n        end = pos + length;\\n        while (!this.eof && this.bufferLength < end) {\\n          this.readBlock();\\n        }\\n        var bufEnd = this.bufferLength;\\n        if (end > bufEnd) {\\n          end = bufEnd;\\n        }\\n      } else {\\n        while (!this.eof) {\\n          this.readBlock();\\n        }\\n        end = this.bufferLength;\\n      }\\n      this.pos = end;\\n      return this.buffer.subarray(pos, end);\\n    },\\n    peekByte: function DecodeStream_peekByte() {\\n      var peekedByte = this.getByte();\\n      this.pos--;\\n      return peekedByte;\\n    },\\n    peekBytes: function DecodeStream_peekBytes(length) {\\n      var bytes = this.getBytes(length);\\n      this.pos -= bytes.length;\\n      return bytes;\\n    },\\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\\n      var end = start + length;\\n      while (this.bufferLength <= end && !this.eof) {\\n        this.readBlock();\\n      }\\n      return new Stream(this.buffer, start, length, dict);\\n    },\\n    skip: function DecodeStream_skip(n) {\\n      if (!n) {\\n        n = 1;\\n      }\\n      this.pos += n;\\n    },\\n    reset: function DecodeStream_reset() {\\n      this.pos = 0;\\n    },\\n    getBaseStreams: function DecodeStream_getBaseStreams() {\\n      if (this.str && this.str.getBaseStreams) {\\n        return this.str.getBaseStreams();\\n      }\\n      return [];\\n    }\\n  };\\n  return DecodeStream;\\n}();\\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\\n  function StreamsSequenceStream(streams) {\\n    this.streams = streams;\\n    DecodeStream.call(this, null);\\n  }\\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\\n    var streams = this.streams;\\n    if (streams.length === 0) {\\n      this.eof = true;\\n      return;\\n    }\\n    var stream = streams.shift();\\n    var chunk = stream.getBytes();\\n    var bufferLength = this.bufferLength;\\n    var newLength = bufferLength + chunk.length;\\n    var buffer = this.ensureBuffer(newLength);\\n    buffer.set(chunk, bufferLength);\\n    this.bufferLength = newLength;\\n  };\\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\\n    var baseStreams = [];\\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\\n      var stream = this.streams[i];\\n      if (stream.getBaseStreams) {\\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\\n      }\\n    }\\n    return baseStreams;\\n  };\\n  return StreamsSequenceStream;\\n}();\\nvar FlateStream = function FlateStreamClosure() {\\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\\n  function FlateStream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    var cmf = str.getByte();\\n    var flg = str.getByte();\\n    if (cmf === -1 || flg === -1) {\\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    if ((cmf & 0x0f) !== 0x08) {\\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    if (((cmf << 8) + flg) % 31 !== 0) {\\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    if (flg & 0x20) {\\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\\n    }\\n    this.codeSize = 0;\\n    this.codeBuf = 0;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\\n    var str = this.str;\\n    var codeSize = this.codeSize;\\n    var codeBuf = this.codeBuf;\\n    var b;\\n    while (codeSize < bits) {\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad encoding in flate stream');\\n      }\\n      codeBuf |= b << codeSize;\\n      codeSize += 8;\\n    }\\n    b = codeBuf & (1 << bits) - 1;\\n    this.codeBuf = codeBuf >> bits;\\n    this.codeSize = codeSize -= bits;\\n    return b;\\n  };\\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\\n    var str = this.str;\\n    var codes = table[0];\\n    var maxLen = table[1];\\n    var codeSize = this.codeSize;\\n    var codeBuf = this.codeBuf;\\n    var b;\\n    while (codeSize < maxLen) {\\n      if ((b = str.getByte()) === -1) {\\n        break;\\n      }\\n      codeBuf |= b << codeSize;\\n      codeSize += 8;\\n    }\\n    var code = codes[codeBuf & (1 << maxLen) - 1];\\n    var codeLen = code >> 16;\\n    var codeVal = code & 0xffff;\\n    if (codeLen < 1 || codeSize < codeLen) {\\n      throw new _util.FormatError('Bad encoding in flate stream');\\n    }\\n    this.codeBuf = codeBuf >> codeLen;\\n    this.codeSize = codeSize - codeLen;\\n    return codeVal;\\n  };\\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\\n    var n = lengths.length;\\n    var maxLen = 0;\\n    var i;\\n    for (i = 0; i < n; ++i) {\\n      if (lengths[i] > maxLen) {\\n        maxLen = lengths[i];\\n      }\\n    }\\n    var size = 1 << maxLen;\\n    var codes = new Int32Array(size);\\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\\n      for (var val = 0; val < n; ++val) {\\n        if (lengths[val] === len) {\\n          var code2 = 0;\\n          var t = code;\\n          for (i = 0; i < len; ++i) {\\n            code2 = code2 << 1 | t & 1;\\n            t >>= 1;\\n          }\\n          for (i = code2; i < size; i += skip) {\\n            codes[i] = len << 16 | val;\\n          }\\n          ++code;\\n        }\\n      }\\n    }\\n    return [codes, maxLen];\\n  };\\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\\n    var buffer, len;\\n    var str = this.str;\\n    var hdr = this.getBits(3);\\n    if (hdr & 1) {\\n      this.eof = true;\\n    }\\n    hdr >>= 1;\\n    if (hdr === 0) {\\n      var b;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      var blockLen = b;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      blockLen |= b << 8;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      var check = b;\\n      if ((b = str.getByte()) === -1) {\\n        throw new _util.FormatError('Bad block header in flate stream');\\n      }\\n      check |= b << 8;\\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\\n      }\\n      this.codeBuf = 0;\\n      this.codeSize = 0;\\n      var bufferLength = this.bufferLength;\\n      buffer = this.ensureBuffer(bufferLength + blockLen);\\n      var end = bufferLength + blockLen;\\n      this.bufferLength = end;\\n      if (blockLen === 0) {\\n        if (str.peekByte() === -1) {\\n          this.eof = true;\\n        }\\n      } else {\\n        for (var n = bufferLength; n < end; ++n) {\\n          if ((b = str.getByte()) === -1) {\\n            this.eof = true;\\n            break;\\n          }\\n          buffer[n] = b;\\n        }\\n      }\\n      return;\\n    }\\n    var litCodeTable;\\n    var distCodeTable;\\n    if (hdr === 1) {\\n      litCodeTable = fixedLitCodeTab;\\n      distCodeTable = fixedDistCodeTab;\\n    } else if (hdr === 2) {\\n      var numLitCodes = this.getBits(5) + 257;\\n      var numDistCodes = this.getBits(5) + 1;\\n      var numCodeLenCodes = this.getBits(4) + 4;\\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\\n      var i;\\n      for (i = 0; i < numCodeLenCodes; ++i) {\\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\\n      }\\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\\n      len = 0;\\n      i = 0;\\n      var codes = numLitCodes + numDistCodes;\\n      var codeLengths = new Uint8Array(codes);\\n      var bitsLength, bitsOffset, what;\\n      while (i < codes) {\\n        var code = this.getCode(codeLenCodeTab);\\n        if (code === 16) {\\n          bitsLength = 2;\\n          bitsOffset = 3;\\n          what = len;\\n        } else if (code === 17) {\\n          bitsLength = 3;\\n          bitsOffset = 3;\\n          what = len = 0;\\n        } else if (code === 18) {\\n          bitsLength = 7;\\n          bitsOffset = 11;\\n          what = len = 0;\\n        } else {\\n          codeLengths[i++] = len = code;\\n          continue;\\n        }\\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\\n        while (repeatLength-- > 0) {\\n          codeLengths[i++] = what;\\n        }\\n      }\\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\\n    } else {\\n      throw new _util.FormatError('Unknown block type in flate stream');\\n    }\\n    buffer = this.buffer;\\n    var limit = buffer ? buffer.length : 0;\\n    var pos = this.bufferLength;\\n    while (true) {\\n      var code1 = this.getCode(litCodeTable);\\n      if (code1 < 256) {\\n        if (pos + 1 >= limit) {\\n          buffer = this.ensureBuffer(pos + 1);\\n          limit = buffer.length;\\n        }\\n        buffer[pos++] = code1;\\n        continue;\\n      }\\n      if (code1 === 256) {\\n        this.bufferLength = pos;\\n        return;\\n      }\\n      code1 -= 257;\\n      code1 = lengthDecode[code1];\\n      var code2 = code1 >> 16;\\n      if (code2 > 0) {\\n        code2 = this.getBits(code2);\\n      }\\n      len = (code1 & 0xffff) + code2;\\n      code1 = this.getCode(distCodeTable);\\n      code1 = distDecode[code1];\\n      code2 = code1 >> 16;\\n      if (code2 > 0) {\\n        code2 = this.getBits(code2);\\n      }\\n      var dist = (code1 & 0xffff) + code2;\\n      if (pos + len >= limit) {\\n        buffer = this.ensureBuffer(pos + len);\\n        limit = buffer.length;\\n      }\\n      for (var k = 0; k < len; ++k, ++pos) {\\n        buffer[pos] = buffer[pos - dist];\\n      }\\n    }\\n  };\\n  return FlateStream;\\n}();\\nvar PredictorStream = function PredictorStreamClosure() {\\n  function PredictorStream(str, maybeLength, params) {\\n    if (!(0, _primitives.isDict)(params)) {\\n      return str;\\n    }\\n    var predictor = this.predictor = params.get('Predictor') || 1;\\n    if (predictor <= 1) {\\n      return str;\\n    }\\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\\n    }\\n    if (predictor === 2) {\\n      this.readBlock = this.readBlockTiff;\\n    } else {\\n      this.readBlock = this.readBlockPng;\\n    }\\n    this.str = str;\\n    this.dict = str.dict;\\n    var colors = this.colors = params.get('Colors') || 1;\\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\\n    var columns = this.columns = params.get('Columns') || 1;\\n    this.pixBytes = colors * bits + 7 >> 3;\\n    this.rowBytes = columns * colors * bits + 7 >> 3;\\n    DecodeStream.call(this, maybeLength);\\n    return this;\\n  }\\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\\n    var rowBytes = this.rowBytes;\\n    var bufferLength = this.bufferLength;\\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\\n    var bits = this.bits;\\n    var colors = this.colors;\\n    var rawBytes = this.str.getBytes(rowBytes);\\n    this.eof = !rawBytes.length;\\n    if (this.eof) {\\n      return;\\n    }\\n    var inbuf = 0,\\n        outbuf = 0;\\n    var inbits = 0,\\n        outbits = 0;\\n    var pos = bufferLength;\\n    var i;\\n    if (bits === 1 && colors === 1) {\\n      for (i = 0; i < rowBytes; ++i) {\\n        var c = rawBytes[i] ^ inbuf;\\n        c ^= c >> 1;\\n        c ^= c >> 2;\\n        c ^= c >> 4;\\n        inbuf = (c & 1) << 7;\\n        buffer[pos++] = c;\\n      }\\n    } else if (bits === 8) {\\n      for (i = 0; i < colors; ++i) {\\n        buffer[pos++] = rawBytes[i];\\n      }\\n      for (; i < rowBytes; ++i) {\\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\\n        pos++;\\n      }\\n    } else if (bits === 16) {\\n      var bytesPerPixel = colors * 2;\\n      for (i = 0; i < bytesPerPixel; ++i) {\\n        buffer[pos++] = rawBytes[i];\\n      }\\n      for (; i < rowBytes; i += 2) {\\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\\n        buffer[pos++] = sum >> 8 & 0xFF;\\n        buffer[pos++] = sum & 0xFF;\\n      }\\n    } else {\\n      var compArray = new Uint8Array(colors + 1);\\n      var bitMask = (1 << bits) - 1;\\n      var j = 0,\\n          k = bufferLength;\\n      var columns = this.columns;\\n      for (i = 0; i < columns; ++i) {\\n        for (var kk = 0; kk < colors; ++kk) {\\n          if (inbits < bits) {\\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\\n            inbits += 8;\\n          }\\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\\n          inbits -= bits;\\n          outbuf = outbuf << bits | compArray[kk];\\n          outbits += bits;\\n          if (outbits >= 8) {\\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\\n            outbits -= 8;\\n          }\\n        }\\n      }\\n      if (outbits > 0) {\\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\\n      }\\n    }\\n    this.bufferLength += rowBytes;\\n  };\\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\\n    var rowBytes = this.rowBytes;\\n    var pixBytes = this.pixBytes;\\n    var predictor = this.str.getByte();\\n    var rawBytes = this.str.getBytes(rowBytes);\\n    this.eof = !rawBytes.length;\\n    if (this.eof) {\\n      return;\\n    }\\n    var bufferLength = this.bufferLength;\\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\\n    if (prevRow.length === 0) {\\n      prevRow = new Uint8Array(rowBytes);\\n    }\\n    var i,\\n        j = bufferLength,\\n        up,\\n        c;\\n    switch (predictor) {\\n      case 0:\\n        for (i = 0; i < rowBytes; ++i) {\\n          buffer[j++] = rawBytes[i];\\n        }\\n        break;\\n      case 1:\\n        for (i = 0; i < pixBytes; ++i) {\\n          buffer[j++] = rawBytes[i];\\n        }\\n        for (; i < rowBytes; ++i) {\\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\\n          j++;\\n        }\\n        break;\\n      case 2:\\n        for (i = 0; i < rowBytes; ++i) {\\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\\n        }\\n        break;\\n      case 3:\\n        for (i = 0; i < pixBytes; ++i) {\\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\\n        }\\n        for (; i < rowBytes; ++i) {\\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\\n          j++;\\n        }\\n        break;\\n      case 4:\\n        for (i = 0; i < pixBytes; ++i) {\\n          up = prevRow[i];\\n          c = rawBytes[i];\\n          buffer[j++] = up + c;\\n        }\\n        for (; i < rowBytes; ++i) {\\n          up = prevRow[i];\\n          var upLeft = prevRow[i - pixBytes];\\n          var left = buffer[j - pixBytes];\\n          var p = left + up - upLeft;\\n          var pa = p - left;\\n          if (pa < 0) {\\n            pa = -pa;\\n          }\\n          var pb = p - up;\\n          if (pb < 0) {\\n            pb = -pb;\\n          }\\n          var pc = p - upLeft;\\n          if (pc < 0) {\\n            pc = -pc;\\n          }\\n          c = rawBytes[i];\\n          if (pa <= pb && pa <= pc) {\\n            buffer[j++] = left + c;\\n          } else if (pb <= pc) {\\n            buffer[j++] = up + c;\\n          } else {\\n            buffer[j++] = upLeft + c;\\n          }\\n        }\\n        break;\\n      default:\\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\\n    }\\n    this.bufferLength += rowBytes;\\n  };\\n  return PredictorStream;\\n}();\\nvar DecryptStream = function DecryptStreamClosure() {\\n  function DecryptStream(str, maybeLength, decrypt) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.decrypt = decrypt;\\n    this.nextChunk = null;\\n    this.initialized = false;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  var chunkSize = 512;\\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\\n    var chunk;\\n    if (this.initialized) {\\n      chunk = this.nextChunk;\\n    } else {\\n      chunk = this.str.getBytes(chunkSize);\\n      this.initialized = true;\\n    }\\n    if (!chunk || chunk.length === 0) {\\n      this.eof = true;\\n      return;\\n    }\\n    this.nextChunk = this.str.getBytes(chunkSize);\\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\\n    var decrypt = this.decrypt;\\n    chunk = decrypt(chunk, !hasMoreData);\\n    var bufferLength = this.bufferLength;\\n    var i,\\n        n = chunk.length;\\n    var buffer = this.ensureBuffer(bufferLength + n);\\n    for (i = 0; i < n; i++) {\\n      buffer[bufferLength++] = chunk[i];\\n    }\\n    this.bufferLength = bufferLength;\\n  };\\n  return DecryptStream;\\n}();\\nvar Ascii85Stream = function Ascii85StreamClosure() {\\n  function Ascii85Stream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.input = new Uint8Array(5);\\n    if (maybeLength) {\\n      maybeLength = 0.8 * maybeLength;\\n    }\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\\n    var TILDA_CHAR = 0x7E;\\n    var Z_LOWER_CHAR = 0x7A;\\n    var EOF = -1;\\n    var str = this.str;\\n    var c = str.getByte();\\n    while ((0, _util.isSpace)(c)) {\\n      c = str.getByte();\\n    }\\n    if (c === EOF || c === TILDA_CHAR) {\\n      this.eof = true;\\n      return;\\n    }\\n    var bufferLength = this.bufferLength,\\n        buffer;\\n    var i;\\n    if (c === Z_LOWER_CHAR) {\\n      buffer = this.ensureBuffer(bufferLength + 4);\\n      for (i = 0; i < 4; ++i) {\\n        buffer[bufferLength + i] = 0;\\n      }\\n      this.bufferLength += 4;\\n    } else {\\n      var input = this.input;\\n      input[0] = c;\\n      for (i = 1; i < 5; ++i) {\\n        c = str.getByte();\\n        while ((0, _util.isSpace)(c)) {\\n          c = str.getByte();\\n        }\\n        input[i] = c;\\n        if (c === EOF || c === TILDA_CHAR) {\\n          break;\\n        }\\n      }\\n      buffer = this.ensureBuffer(bufferLength + i - 1);\\n      this.bufferLength += i - 1;\\n      if (i < 5) {\\n        for (; i < 5; ++i) {\\n          input[i] = 0x21 + 84;\\n        }\\n        this.eof = true;\\n      }\\n      var t = 0;\\n      for (i = 0; i < 5; ++i) {\\n        t = t * 85 + (input[i] - 0x21);\\n      }\\n      for (i = 3; i >= 0; --i) {\\n        buffer[bufferLength + i] = t & 0xFF;\\n        t >>= 8;\\n      }\\n    }\\n  };\\n  return Ascii85Stream;\\n}();\\nvar AsciiHexStream = function AsciiHexStreamClosure() {\\n  function AsciiHexStream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.firstDigit = -1;\\n    if (maybeLength) {\\n      maybeLength = 0.5 * maybeLength;\\n    }\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\\n    var UPSTREAM_BLOCK_SIZE = 8000;\\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\\n    if (!bytes.length) {\\n      this.eof = true;\\n      return;\\n    }\\n    var maxDecodeLength = bytes.length + 1 >> 1;\\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\\n    var bufferLength = this.bufferLength;\\n    var firstDigit = this.firstDigit;\\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\\n      var ch = bytes[i],\\n          digit;\\n      if (ch >= 0x30 && ch <= 0x39) {\\n        digit = ch & 0x0F;\\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\n        digit = (ch & 0x0F) + 9;\\n      } else if (ch === 0x3E) {\\n        this.eof = true;\\n        break;\\n      } else {\\n        continue;\\n      }\\n      if (firstDigit < 0) {\\n        firstDigit = digit;\\n      } else {\\n        buffer[bufferLength++] = firstDigit << 4 | digit;\\n        firstDigit = -1;\\n      }\\n    }\\n    if (firstDigit >= 0 && this.eof) {\\n      buffer[bufferLength++] = firstDigit << 4;\\n      firstDigit = -1;\\n    }\\n    this.firstDigit = firstDigit;\\n    this.bufferLength = bufferLength;\\n  };\\n  return AsciiHexStream;\\n}();\\nvar RunLengthStream = function RunLengthStreamClosure() {\\n  function RunLengthStream(str, maybeLength) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\\n    var repeatHeader = this.str.getBytes(2);\\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\\n      this.eof = true;\\n      return;\\n    }\\n    var buffer;\\n    var bufferLength = this.bufferLength;\\n    var n = repeatHeader[0];\\n    if (n < 128) {\\n      buffer = this.ensureBuffer(bufferLength + n + 1);\\n      buffer[bufferLength++] = repeatHeader[1];\\n      if (n > 0) {\\n        var source = this.str.getBytes(n);\\n        buffer.set(source, bufferLength);\\n        bufferLength += n;\\n      }\\n    } else {\\n      n = 257 - n;\\n      var b = repeatHeader[1];\\n      buffer = this.ensureBuffer(bufferLength + n + 1);\\n      for (var i = 0; i < n; i++) {\\n        buffer[bufferLength++] = b;\\n      }\\n    }\\n    this.bufferLength = bufferLength;\\n  };\\n  return RunLengthStream;\\n}();\\nvar LZWStream = function LZWStreamClosure() {\\n  function LZWStream(str, maybeLength, earlyChange) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    this.cachedData = 0;\\n    this.bitsCached = 0;\\n    var maxLzwDictionarySize = 4096;\\n    var lzwState = {\\n      earlyChange: earlyChange,\\n      codeLength: 9,\\n      nextCode: 258,\\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\\n      currentSequenceLength: 0\\n    };\\n    for (var i = 0; i < 256; ++i) {\\n      lzwState.dictionaryValues[i] = i;\\n      lzwState.dictionaryLengths[i] = 1;\\n    }\\n    this.lzwState = lzwState;\\n    DecodeStream.call(this, maybeLength);\\n  }\\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\\n    var bitsCached = this.bitsCached;\\n    var cachedData = this.cachedData;\\n    while (bitsCached < n) {\\n      var c = this.str.getByte();\\n      if (c === -1) {\\n        this.eof = true;\\n        return null;\\n      }\\n      cachedData = cachedData << 8 | c;\\n      bitsCached += 8;\\n    }\\n    this.bitsCached = bitsCached -= n;\\n    this.cachedData = cachedData;\\n    this.lastCode = null;\\n    return cachedData >>> bitsCached & (1 << n) - 1;\\n  };\\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\\n    var blockSize = 512;\\n    var estimatedDecodedSize = blockSize * 2,\\n        decodedSizeDelta = blockSize;\\n    var i, j, q;\\n    var lzwState = this.lzwState;\\n    if (!lzwState) {\\n      return;\\n    }\\n    var earlyChange = lzwState.earlyChange;\\n    var nextCode = lzwState.nextCode;\\n    var dictionaryValues = lzwState.dictionaryValues;\\n    var dictionaryLengths = lzwState.dictionaryLengths;\\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\\n    var codeLength = lzwState.codeLength;\\n    var prevCode = lzwState.prevCode;\\n    var currentSequence = lzwState.currentSequence;\\n    var currentSequenceLength = lzwState.currentSequenceLength;\\n    var decodedLength = 0;\\n    var currentBufferLength = this.bufferLength;\\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\n    for (i = 0; i < blockSize; i++) {\\n      var code = this.readBits(codeLength);\\n      var hasPrev = currentSequenceLength > 0;\\n      if (code < 256) {\\n        currentSequence[0] = code;\\n        currentSequenceLength = 1;\\n      } else if (code >= 258) {\\n        if (code < nextCode) {\\n          currentSequenceLength = dictionaryLengths[code];\\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\\n            currentSequence[j] = dictionaryValues[q];\\n            q = dictionaryPrevCodes[q];\\n          }\\n        } else {\\n          currentSequence[currentSequenceLength++] = currentSequence[0];\\n        }\\n      } else if (code === 256) {\\n        codeLength = 9;\\n        nextCode = 258;\\n        currentSequenceLength = 0;\\n        continue;\\n      } else {\\n        this.eof = true;\\n        delete this.lzwState;\\n        break;\\n      }\\n      if (hasPrev) {\\n        dictionaryPrevCodes[nextCode] = prevCode;\\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\\n        dictionaryValues[nextCode] = currentSequence[0];\\n        nextCode++;\\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\\n      }\\n      prevCode = code;\\n      decodedLength += currentSequenceLength;\\n      if (estimatedDecodedSize < decodedLength) {\\n        do {\\n          estimatedDecodedSize += decodedSizeDelta;\\n        } while (estimatedDecodedSize < decodedLength);\\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\n      }\\n      for (j = 0; j < currentSequenceLength; j++) {\\n        buffer[currentBufferLength++] = currentSequence[j];\\n      }\\n    }\\n    lzwState.nextCode = nextCode;\\n    lzwState.codeLength = codeLength;\\n    lzwState.prevCode = prevCode;\\n    lzwState.currentSequenceLength = currentSequenceLength;\\n    this.bufferLength = currentBufferLength;\\n  };\\n  return LZWStream;\\n}();\\nvar NullStream = function NullStreamClosure() {\\n  function NullStream() {\\n    Stream.call(this, new Uint8Array(0));\\n  }\\n  NullStream.prototype = Stream.prototype;\\n  return NullStream;\\n}();\\nexports.Ascii85Stream = Ascii85Stream;\\nexports.AsciiHexStream = AsciiHexStream;\\nexports.DecryptStream = DecryptStream;\\nexports.DecodeStream = DecodeStream;\\nexports.FlateStream = FlateStream;\\nexports.NullStream = NullStream;\\nexports.PredictorStream = PredictorStream;\\nexports.RunLengthStream = RunLengthStream;\\nexports.Stream = Stream;\\nexports.StreamsSequenceStream = StreamsSequenceStream;\\nexports.StringStream = StringStream;\\nexports.LZWStream = LZWStream;\\n\\n/***/ }),\\n/* 3 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nmodule.exports = function (it) {\\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\\n};\\n\\n/***/ }),\\n/* 4 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar store = __w_pdfjs_require__(49)('wks');\\nvar uid = __w_pdfjs_require__(22);\\nvar _Symbol = __w_pdfjs_require__(5).Symbol;\\nvar USE_SYMBOL = typeof _Symbol == 'function';\\nvar $exports = module.exports = function (name) {\\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\\n};\\n$exports.store = store;\\n\\n/***/ }),\\n/* 5 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\\nif (typeof __g == 'number') __g = global;\\n\\n/***/ }),\\n/* 6 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar global = __w_pdfjs_require__(5);\\nvar core = __w_pdfjs_require__(7);\\nvar hide = __w_pdfjs_require__(12);\\nvar redefine = __w_pdfjs_require__(10);\\nvar ctx = __w_pdfjs_require__(11);\\nvar PROTOTYPE = 'prototype';\\nvar $export = function $export(type, name, source) {\\n  var IS_FORCED = type & $export.F;\\n  var IS_GLOBAL = type & $export.G;\\n  var IS_STATIC = type & $export.S;\\n  var IS_PROTO = type & $export.P;\\n  var IS_BIND = type & $export.B;\\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\\n  var key, own, out, exp;\\n  if (IS_GLOBAL) source = name;\\n  for (key in source) {\\n    own = !IS_FORCED && target && target[key] !== undefined;\\n    out = (own ? target : source)[key];\\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\\n    if (target) redefine(target, key, out, type & $export.U);\\n    if (exports[key] != out) hide(exports, key, exp);\\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\\n  }\\n};\\nglobal.core = core;\\n$export.F = 1;\\n$export.G = 2;\\n$export.S = 4;\\n$export.P = 8;\\n$export.B = 16;\\n$export.W = 32;\\n$export.U = 64;\\n$export.R = 128;\\nmodule.exports = $export;\\n\\n/***/ }),\\n/* 7 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar core = module.exports = { version: '2.5.3' };\\nif (typeof __e == 'number') __e = core;\\n\\n/***/ }),\\n/* 8 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nmodule.exports = function (it) {\\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\\n  return it;\\n};\\n\\n/***/ }),\\n/* 9 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar hasOwnProperty = {}.hasOwnProperty;\\nmodule.exports = function (it, key) {\\n  return hasOwnProperty.call(it, key);\\n};\\n\\n/***/ }),\\n/* 10 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar global = __w_pdfjs_require__(5);\\nvar hide = __w_pdfjs_require__(12);\\nvar has = __w_pdfjs_require__(9);\\nvar SRC = __w_pdfjs_require__(22)('src');\\nvar TO_STRING = 'toString';\\nvar $toString = Function[TO_STRING];\\nvar TPL = ('' + $toString).split(TO_STRING);\\n__w_pdfjs_require__(7).inspectSource = function (it) {\\n  return $toString.call(it);\\n};\\n(module.exports = function (O, key, val, safe) {\\n  var isFunction = typeof val == 'function';\\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\\n  if (O[key] === val) return;\\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\\n  if (O === global) {\\n    O[key] = val;\\n  } else if (!safe) {\\n    delete O[key];\\n    hide(O, key, val);\\n  } else if (O[key]) {\\n    O[key] = val;\\n  } else {\\n    hide(O, key, val);\\n  }\\n})(Function.prototype, TO_STRING, function toString() {\\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\\n});\\n\\n/***/ }),\\n/* 11 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar aFunction = __w_pdfjs_require__(16);\\nmodule.exports = function (fn, that, length) {\\n  aFunction(fn);\\n  if (that === undefined) return fn;\\n  switch (length) {\\n    case 1:\\n      return function (a) {\\n        return fn.call(that, a);\\n      };\\n    case 2:\\n      return function (a, b) {\\n        return fn.call(that, a, b);\\n      };\\n    case 3:\\n      return function (a, b, c) {\\n        return fn.call(that, a, b, c);\\n      };\\n  }\\n  return function () {\\n    return fn.apply(that, arguments);\\n  };\\n};\\n\\n/***/ }),\\n/* 12 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar dP = __w_pdfjs_require__(15);\\nvar createDesc = __w_pdfjs_require__(28);\\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\\n  return dP.f(object, key, createDesc(1, value));\\n} : function (object, key, value) {\\n  object[key] = value;\\n  return object;\\n};\\n\\n/***/ }),\\n/* 13 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = !__w_pdfjs_require__(14)(function () {\\n  return Object.defineProperty({}, 'a', {\\n    get: function get() {\\n      return 7;\\n    }\\n  }).a != 7;\\n});\\n\\n/***/ }),\\n/* 14 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (exec) {\\n  try {\\n    return !!exec();\\n  } catch (e) {\\n    return true;\\n  }\\n};\\n\\n/***/ }),\\n/* 15 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar anObject = __w_pdfjs_require__(8);\\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\\nvar toPrimitive = __w_pdfjs_require__(46);\\nvar dP = Object.defineProperty;\\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\\n  anObject(O);\\n  P = toPrimitive(P, true);\\n  anObject(Attributes);\\n  if (IE8_DOM_DEFINE) try {\\n    return dP(O, P, Attributes);\\n  } catch (e) {}\\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\\n  if ('value' in Attributes) O[P] = Attributes.value;\\n  return O;\\n};\\n\\n/***/ }),\\n/* 16 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (it) {\\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\\n  return it;\\n};\\n\\n/***/ }),\\n/* 17 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar IObject = __w_pdfjs_require__(29);\\nvar defined = __w_pdfjs_require__(30);\\nmodule.exports = function (it) {\\n  return IObject(defined(it));\\n};\\n\\n/***/ }),\\n/* 18 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar toString = {}.toString;\\nmodule.exports = function (it) {\\n  return toString.call(it).slice(8, -1);\\n};\\n\\n/***/ }),\\n/* 19 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = {};\\n\\n/***/ }),\\n/* 20 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ColorSpace = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar ColorSpace = function ColorSpaceClosure() {\\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\\n    var COMPONENTS = 3;\\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\\n    var xRatio = w1 / w2;\\n    var yRatio = h1 / h2;\\n    var i,\\n        j,\\n        py,\\n        newIndex = 0,\\n        oldIndex;\\n    var xScaled = new Uint16Array(w2);\\n    var w1Scanline = w1 * COMPONENTS;\\n    for (i = 0; i < w2; i++) {\\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\\n    }\\n    for (i = 0; i < h2; i++) {\\n      py = Math.floor(i * yRatio) * w1Scanline;\\n      for (j = 0; j < w2; j++) {\\n        oldIndex = py + xScaled[j];\\n        dest[newIndex++] = src[oldIndex++];\\n        dest[newIndex++] = src[oldIndex++];\\n        dest[newIndex++] = src[oldIndex++];\\n        newIndex += alpha01;\\n      }\\n    }\\n  }\\n  function ColorSpace() {\\n    (0, _util.unreachable)('should not call ColorSpace constructor');\\n  }\\n  ColorSpace.prototype = {\\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\\n      var rgb = new Uint8Array(3);\\n      this.getRgbItem(src, srcOffset, rgb, 0);\\n      return rgb;\\n    },\\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\\n    },\\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\\n    },\\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\\n    },\\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\\n      return false;\\n    },\\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\\n      var count = originalWidth * originalHeight;\\n      var rgbBuf = null;\\n      var numComponentColors = 1 << bpc;\\n      var needsResizing = originalHeight !== height || originalWidth !== width;\\n      var i, ii;\\n      if (this.isPassthrough(bpc)) {\\n        rgbBuf = comps;\\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\\n        var key;\\n        for (i = 0; i < numComponentColors; i++) {\\n          allColors[i] = i;\\n        }\\n        var colorMap = new Uint8Array(numComponentColors * 3);\\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\\n        var destPos, rgbPos;\\n        if (!needsResizing) {\\n          destPos = 0;\\n          for (i = 0; i < count; ++i) {\\n            key = comps[i] * 3;\\n            dest[destPos++] = colorMap[key];\\n            dest[destPos++] = colorMap[key + 1];\\n            dest[destPos++] = colorMap[key + 2];\\n            destPos += alpha01;\\n          }\\n        } else {\\n          rgbBuf = new Uint8Array(count * 3);\\n          rgbPos = 0;\\n          for (i = 0; i < count; ++i) {\\n            key = comps[i] * 3;\\n            rgbBuf[rgbPos++] = colorMap[key];\\n            rgbBuf[rgbPos++] = colorMap[key + 1];\\n            rgbBuf[rgbPos++] = colorMap[key + 2];\\n          }\\n        }\\n      } else {\\n        if (!needsResizing) {\\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\\n        } else {\\n          rgbBuf = new Uint8Array(count * 3);\\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\\n        }\\n      }\\n      if (rgbBuf) {\\n        if (needsResizing) {\\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\\n        } else {\\n          rgbPos = 0;\\n          destPos = 0;\\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\\n            dest[destPos++] = rgbBuf[rgbPos++];\\n            dest[destPos++] = rgbBuf[rgbPos++];\\n            dest[destPos++] = rgbBuf[rgbPos++];\\n            destPos += alpha01;\\n          }\\n        }\\n      }\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\\n  };\\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\\n    var name = Array.isArray(IR) ? IR[0] : IR;\\n    var whitePoint, blackPoint, gamma;\\n    switch (name) {\\n      case 'DeviceGrayCS':\\n        return this.singletons.gray;\\n      case 'DeviceRgbCS':\\n        return this.singletons.rgb;\\n      case 'DeviceCmykCS':\\n        return this.singletons.cmyk;\\n      case 'CalGrayCS':\\n        whitePoint = IR[1];\\n        blackPoint = IR[2];\\n        gamma = IR[3];\\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\\n      case 'CalRGBCS':\\n        whitePoint = IR[1];\\n        blackPoint = IR[2];\\n        gamma = IR[3];\\n        var matrix = IR[4];\\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\\n      case 'PatternCS':\\n        var basePatternCS = IR[1];\\n        if (basePatternCS) {\\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\\n        }\\n        return new PatternCS(basePatternCS);\\n      case 'IndexedCS':\\n        var baseIndexedCS = IR[1];\\n        var hiVal = IR[2];\\n        var lookup = IR[3];\\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\\n      case 'AlternateCS':\\n        var numComps = IR[1];\\n        var alt = IR[2];\\n        var tintFnIR = IR[3];\\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\\n      case 'LabCS':\\n        whitePoint = IR[1];\\n        blackPoint = IR[2];\\n        var range = IR[3];\\n        return new LabCS(whitePoint, blackPoint, range);\\n      default:\\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\\n    }\\n  };\\n  ColorSpace.parseToIR = function (cs, xref) {\\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\\n    var pdfFunctionFactory = arguments[3];\\n\\n    cs = xref.fetchIfRef(cs);\\n    if ((0, _primitives.isName)(cs)) {\\n      switch (cs.name) {\\n        case 'DeviceGray':\\n        case 'G':\\n          return 'DeviceGrayCS';\\n        case 'DeviceRGB':\\n        case 'RGB':\\n          return 'DeviceRgbCS';\\n        case 'DeviceCMYK':\\n        case 'CMYK':\\n          return 'DeviceCmykCS';\\n        case 'Pattern':\\n          return ['PatternCS', null];\\n        default:\\n          if ((0, _primitives.isDict)(res)) {\\n            var colorSpaces = res.get('ColorSpace');\\n            if ((0, _primitives.isDict)(colorSpaces)) {\\n              var resCS = colorSpaces.get(cs.name);\\n              if (resCS) {\\n                if ((0, _primitives.isName)(resCS)) {\\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\\n                }\\n                cs = resCS;\\n                break;\\n              }\\n            }\\n          }\\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\\n      }\\n    }\\n    if (Array.isArray(cs)) {\\n      var mode = xref.fetchIfRef(cs[0]).name;\\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\\n      switch (mode) {\\n        case 'DeviceGray':\\n        case 'G':\\n          return 'DeviceGrayCS';\\n        case 'DeviceRGB':\\n        case 'RGB':\\n          return 'DeviceRgbCS';\\n        case 'DeviceCMYK':\\n        case 'CMYK':\\n          return 'DeviceCmykCS';\\n        case 'CalGray':\\n          params = xref.fetchIfRef(cs[1]);\\n          whitePoint = params.getArray('WhitePoint');\\n          blackPoint = params.getArray('BlackPoint');\\n          gamma = params.get('Gamma');\\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\\n        case 'CalRGB':\\n          params = xref.fetchIfRef(cs[1]);\\n          whitePoint = params.getArray('WhitePoint');\\n          blackPoint = params.getArray('BlackPoint');\\n          gamma = params.getArray('Gamma');\\n          var matrix = params.getArray('Matrix');\\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\\n        case 'ICCBased':\\n          var stream = xref.fetchIfRef(cs[1]);\\n          var dict = stream.dict;\\n          numComps = dict.get('N');\\n          alt = dict.get('Alternate');\\n          if (alt) {\\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\\n            if (altCS.numComps === numComps) {\\n              return altIR;\\n            }\\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\\n          }\\n          if (numComps === 1) {\\n            return 'DeviceGrayCS';\\n          } else if (numComps === 3) {\\n            return 'DeviceRgbCS';\\n          } else if (numComps === 4) {\\n            return 'DeviceCmykCS';\\n          }\\n          break;\\n        case 'Pattern':\\n          var basePatternCS = cs[1] || null;\\n          if (basePatternCS) {\\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\\n          }\\n          return ['PatternCS', basePatternCS];\\n        case 'Indexed':\\n        case 'I':\\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\\n          var lookup = xref.fetchIfRef(cs[3]);\\n          if ((0, _primitives.isStream)(lookup)) {\\n            lookup = lookup.getBytes();\\n          }\\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\\n        case 'Separation':\\n        case 'DeviceN':\\n          var name = xref.fetchIfRef(cs[1]);\\n          numComps = Array.isArray(name) ? name.length : 1;\\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\\n          return ['AlternateCS', numComps, alt, tintFnIR];\\n        case 'Lab':\\n          params = xref.fetchIfRef(cs[1]);\\n          whitePoint = params.getArray('WhitePoint');\\n          blackPoint = params.getArray('BlackPoint');\\n          var range = params.getArray('Range');\\n          return ['LabCS', whitePoint, blackPoint, range];\\n        default:\\n          throw new _util.FormatError('unimplemented color space object \\\"' + mode + '\\\"');\\n      }\\n    }\\n    throw new _util.FormatError('unrecognized color space object: \\\"' + cs + '\\\"');\\n  };\\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\\n    if (!Array.isArray(decode)) {\\n      return true;\\n    }\\n    if (n * 2 !== decode.length) {\\n      (0, _util.warn)('The decode map is not the correct length');\\n      return true;\\n    }\\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  };\\n  ColorSpace.singletons = {\\n    get gray() {\\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\\n    },\\n    get rgb() {\\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\\n    },\\n    get cmyk() {\\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\\n    }\\n  };\\n  return ColorSpace;\\n}();\\nvar AlternateCS = function AlternateCSClosure() {\\n  function AlternateCS(numComps, base, tintFn) {\\n    this.name = 'Alternate';\\n    this.numComps = numComps;\\n    this.defaultColor = new Float32Array(numComps);\\n    for (var i = 0; i < numComps; ++i) {\\n      this.defaultColor[i] = 1;\\n    }\\n    this.base = base;\\n    this.tintFn = tintFn;\\n    this.tmpBuf = new Float32Array(base.numComps);\\n  }\\n  AlternateCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var tmpBuf = this.tmpBuf;\\n      this.tintFn(src, srcOffset, tmpBuf, 0);\\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\\n    },\\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var tintFn = this.tintFn;\\n      var base = this.base;\\n      var scale = 1 / ((1 << bits) - 1);\\n      var baseNumComps = base.numComps;\\n      var usesZeroToOneRange = base.usesZeroToOneRange;\\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\\n      var pos = isPassthrough ? destOffset : 0;\\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\\n      var numComps = this.numComps;\\n      var scaled = new Float32Array(numComps);\\n      var tinted = new Float32Array(baseNumComps);\\n      var i, j;\\n      for (i = 0; i < count; i++) {\\n        for (j = 0; j < numComps; j++) {\\n          scaled[j] = src[srcOffset++] * scale;\\n        }\\n        tintFn(scaled, 0, tinted, 0);\\n        if (usesZeroToOneRange) {\\n          for (j = 0; j < baseNumComps; j++) {\\n            baseBuf[pos++] = tinted[j] * 255;\\n          }\\n        } else {\\n          base.getRgbItem(tinted, 0, baseBuf, pos);\\n          pos += baseNumComps;\\n        }\\n      }\\n      if (!isPassthrough) {\\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\\n      }\\n    },\\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return AlternateCS;\\n}();\\nvar PatternCS = function PatternCSClosure() {\\n  function PatternCS(baseCS) {\\n    this.name = 'Pattern';\\n    this.base = baseCS;\\n  }\\n  PatternCS.prototype = {};\\n  return PatternCS;\\n}();\\nvar IndexedCS = function IndexedCSClosure() {\\n  function IndexedCS(base, highVal, lookup) {\\n    this.name = 'Indexed';\\n    this.numComps = 1;\\n    this.defaultColor = new Uint8Array(this.numComps);\\n    this.base = base;\\n    this.highVal = highVal;\\n    var baseNumComps = base.numComps;\\n    var length = baseNumComps * highVal;\\n    if ((0, _primitives.isStream)(lookup)) {\\n      this.lookup = new Uint8Array(length);\\n      var bytes = lookup.getBytes(length);\\n      this.lookup.set(bytes);\\n    } else if ((0, _util.isString)(lookup)) {\\n      this.lookup = new Uint8Array(length);\\n      for (var i = 0; i < length; ++i) {\\n        this.lookup[i] = lookup.charCodeAt(i);\\n      }\\n    } else if (lookup instanceof Uint8Array) {\\n      this.lookup = lookup;\\n    } else {\\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\\n    }\\n  }\\n  IndexedCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var numComps = this.base.numComps;\\n      var start = src[srcOffset] * numComps;\\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\\n    },\\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var base = this.base;\\n      var numComps = base.numComps;\\n      var outputDelta = base.getOutputLength(numComps, alpha01);\\n      var lookup = this.lookup;\\n      for (var i = 0; i < count; ++i) {\\n        var lookupPos = src[srcOffset++] * numComps;\\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\\n        destOffset += outputDelta;\\n      }\\n    },\\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\\n      return true;\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return IndexedCS;\\n}();\\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\\n  function DeviceGrayCS() {\\n    this.name = 'DeviceGray';\\n    this.numComps = 1;\\n    this.defaultColor = new Float32Array(this.numComps);\\n  }\\n  DeviceGrayCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var c = src[srcOffset] * 255 | 0;\\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\\n    },\\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 255 / ((1 << bits) - 1);\\n      var j = srcOffset,\\n          q = destOffset;\\n      for (var i = 0; i < count; ++i) {\\n        var c = scale * src[j++] | 0;\\n        dest[q++] = c;\\n        dest[q++] = c;\\n        dest[q++] = c;\\n        q += alpha01;\\n      }\\n    },\\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return DeviceGrayCS;\\n}();\\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\\n  function DeviceRgbCS() {\\n    this.name = 'DeviceRGB';\\n    this.numComps = 3;\\n    this.defaultColor = new Float32Array(this.numComps);\\n  }\\n  DeviceRgbCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      var r = src[srcOffset] * 255 | 0;\\n      var g = src[srcOffset + 1] * 255 | 0;\\n      var b = src[srcOffset + 2] * 255 | 0;\\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\\n    },\\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      if (bits === 8 && alpha01 === 0) {\\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\\n        return;\\n      }\\n      var scale = 255 / ((1 << bits) - 1);\\n      var j = srcOffset,\\n          q = destOffset;\\n      for (var i = 0; i < count; ++i) {\\n        dest[q++] = scale * src[j++] | 0;\\n        dest[q++] = scale * src[j++] | 0;\\n        dest[q++] = scale * src[j++] | 0;\\n        q += alpha01;\\n      }\\n    },\\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01) / 3 | 0;\\n    },\\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\\n      return bits === 8;\\n    },\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return DeviceRgbCS;\\n}();\\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\\n    var c = src[srcOffset + 0] * srcScale;\\n    var m = src[srcOffset + 1] * srcScale;\\n    var y = src[srcOffset + 2] * srcScale;\\n    var k = src[srcOffset + 3] * srcScale;\\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\\n  }\\n  function DeviceCmykCS() {\\n    this.name = 'DeviceCMYK';\\n    this.numComps = 4;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    this.defaultColor[3] = 1;\\n  }\\n  DeviceCmykCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\\n    },\\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 1 / ((1 << bits) - 1);\\n      for (var i = 0; i < count; i++) {\\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\\n        srcOffset += 4;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength / 4 * (3 + alpha01) | 0;\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return DeviceCmykCS;\\n}();\\nvar CalGrayCS = function CalGrayCSClosure() {\\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\\n    this.name = 'CalGray';\\n    this.numComps = 1;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    if (!whitePoint) {\\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\\n    }\\n    blackPoint = blackPoint || [0, 0, 0];\\n    gamma = gamma || 1;\\n    this.XW = whitePoint[0];\\n    this.YW = whitePoint[1];\\n    this.ZW = whitePoint[2];\\n    this.XB = blackPoint[0];\\n    this.YB = blackPoint[1];\\n    this.ZB = blackPoint[2];\\n    this.G = gamma;\\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\\n    }\\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\\n      this.XB = this.YB = this.ZB = 0;\\n    }\\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\\n    }\\n    if (this.G < 1) {\\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\\n      this.G = 1;\\n    }\\n  }\\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\n    var A = src[srcOffset] * scale;\\n    var AG = Math.pow(A, cs.G);\\n    var L = cs.YW * AG;\\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\\n    dest[destOffset] = val;\\n    dest[destOffset + 1] = val;\\n    dest[destOffset + 2] = val;\\n  }\\n  CalGrayCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\n    },\\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 1 / ((1 << bits) - 1);\\n      for (var i = 0; i < count; ++i) {\\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\n        srcOffset += 1;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01);\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return CalGrayCS;\\n}();\\nvar CalRGBCS = function CalRGBCSClosure() {\\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\\n  var tempNormalizeMatrix = new Float32Array(3);\\n  var tempConvertMatrix1 = new Float32Array(3);\\n  var tempConvertMatrix2 = new Float32Array(3);\\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\\n    this.name = 'CalRGB';\\n    this.numComps = 3;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    if (!whitePoint) {\\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\\n    }\\n    blackPoint = blackPoint || new Float32Array(3);\\n    gamma = gamma || new Float32Array([1, 1, 1]);\\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\\n    var XW = whitePoint[0];\\n    var YW = whitePoint[1];\\n    var ZW = whitePoint[2];\\n    this.whitePoint = whitePoint;\\n    var XB = blackPoint[0];\\n    var YB = blackPoint[1];\\n    var ZB = blackPoint[2];\\n    this.blackPoint = blackPoint;\\n    this.GR = gamma[0];\\n    this.GG = gamma[1];\\n    this.GB = gamma[2];\\n    this.MXA = matrix[0];\\n    this.MYA = matrix[1];\\n    this.MZA = matrix[2];\\n    this.MXB = matrix[3];\\n    this.MYB = matrix[4];\\n    this.MZB = matrix[5];\\n    this.MXC = matrix[6];\\n    this.MYC = matrix[7];\\n    this.MZC = matrix[8];\\n    if (XW < 0 || ZW < 0 || YW !== 1) {\\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\\n    }\\n    if (XB < 0 || YB < 0 || ZB < 0) {\\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\\n      this.blackPoint = new Float32Array(3);\\n    }\\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\\n      this.GR = this.GG = this.GB = 1;\\n    }\\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\\n      this.MXA = this.MYB = this.MZC = 1;\\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\\n    }\\n  }\\n  function matrixProduct(a, b, result) {\\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\\n  }\\n  function convertToFlat(sourceWhitePoint, LMS, result) {\\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\\n  }\\n  function convertToD65(sourceWhitePoint, LMS, result) {\\n    var D65X = 0.95047;\\n    var D65Y = 1;\\n    var D65Z = 1.08883;\\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\\n  }\\n  function sRGBTransferFunction(color) {\\n    if (color <= 0.0031308) {\\n      return adjustToRange(0, 1, 12.92 * color);\\n    }\\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\\n  }\\n  function adjustToRange(min, max, value) {\\n    return Math.max(min, Math.min(max, value));\\n  }\\n  function decodeL(L) {\\n    if (L < 0) {\\n      return -decodeL(-L);\\n    }\\n    if (L > 8.0) {\\n      return Math.pow((L + 16) / 116, 3);\\n    }\\n    return L * DECODE_L_CONSTANT;\\n  }\\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\\n      result[0] = XYZ_Flat[0];\\n      result[1] = XYZ_Flat[1];\\n      result[2] = XYZ_Flat[2];\\n      return;\\n    }\\n    var zeroDecodeL = decodeL(0);\\n    var X_DST = zeroDecodeL;\\n    var X_SRC = decodeL(sourceBlackPoint[0]);\\n    var Y_DST = zeroDecodeL;\\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\\n    var Z_DST = zeroDecodeL;\\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\\n    var X_Offset = 1 - X_Scale;\\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\\n    var Y_Offset = 1 - Y_Scale;\\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\\n    var Z_Offset = 1 - Z_Scale;\\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\\n  }\\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\\n      result[0] = XYZ_In[0];\\n      result[1] = XYZ_In[1];\\n      result[2] = XYZ_In[2];\\n      return;\\n    }\\n    var LMS = result;\\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\n    var LMS_Flat = tempNormalizeMatrix;\\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\\n  }\\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\\n    var LMS = result;\\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\n    var LMS_D65 = tempNormalizeMatrix;\\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\\n  }\\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\\n    var AGR = Math.pow(A, cs.GR);\\n    var BGG = Math.pow(B, cs.GG);\\n    var CGB = Math.pow(C, cs.GB);\\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\\n    var XYZ = tempConvertMatrix1;\\n    XYZ[0] = X;\\n    XYZ[1] = Y;\\n    XYZ[2] = Z;\\n    var XYZ_Flat = tempConvertMatrix2;\\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\\n    var XYZ_Black = tempConvertMatrix1;\\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\\n    var XYZ_D65 = tempConvertMatrix2;\\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\\n    var SRGB = tempConvertMatrix1;\\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\\n    var sR = sRGBTransferFunction(SRGB[0]);\\n    var sG = sRGBTransferFunction(SRGB[1]);\\n    var sB = sRGBTransferFunction(SRGB[2]);\\n    dest[destOffset] = Math.round(sR * 255);\\n    dest[destOffset + 1] = Math.round(sG * 255);\\n    dest[destOffset + 2] = Math.round(sB * 255);\\n  }\\n  CalRGBCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\n    },\\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var scale = 1 / ((1 << bits) - 1);\\n      for (var i = 0; i < count; ++i) {\\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\n        srcOffset += 3;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01) / 3 | 0;\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n    },\\n    usesZeroToOneRange: true\\n  };\\n  return CalRGBCS;\\n}();\\nvar LabCS = function LabCSClosure() {\\n  function LabCS(whitePoint, blackPoint, range) {\\n    this.name = 'Lab';\\n    this.numComps = 3;\\n    this.defaultColor = new Float32Array(this.numComps);\\n    if (!whitePoint) {\\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\\n    }\\n    blackPoint = blackPoint || [0, 0, 0];\\n    range = range || [-100, 100, -100, 100];\\n    this.XW = whitePoint[0];\\n    this.YW = whitePoint[1];\\n    this.ZW = whitePoint[2];\\n    this.amin = range[0];\\n    this.amax = range[1];\\n    this.bmin = range[2];\\n    this.bmax = range[3];\\n    this.XB = blackPoint[0];\\n    this.YB = blackPoint[1];\\n    this.ZB = blackPoint[2];\\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\\n    }\\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\\n      this.XB = this.YB = this.ZB = 0;\\n    }\\n    if (this.amin > this.amax || this.bmin > this.bmax) {\\n      (0, _util.info)('Invalid Range, falling back to defaults');\\n      this.amin = -100;\\n      this.amax = 100;\\n      this.bmin = -100;\\n      this.bmax = 100;\\n    }\\n  }\\n  function fn_g(x) {\\n    var result;\\n    if (x >= 6 / 29) {\\n      result = x * x * x;\\n    } else {\\n      result = 108 / 841 * (x - 4 / 29);\\n    }\\n    return result;\\n  }\\n  function decode(value, high1, low2, high2) {\\n    return low2 + value * (high2 - low2) / high1;\\n  }\\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\\n    var Ls = src[srcOffset];\\n    var as = src[srcOffset + 1];\\n    var bs = src[srcOffset + 2];\\n    if (maxVal !== false) {\\n      Ls = decode(Ls, maxVal, 0, 100);\\n      as = decode(as, maxVal, cs.amin, cs.amax);\\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\\n    }\\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\\n    var M = (Ls + 16) / 116;\\n    var L = M + as / 500;\\n    var N = M - bs / 200;\\n    var X = cs.XW * fn_g(L);\\n    var Y = cs.YW * fn_g(M);\\n    var Z = cs.ZW * fn_g(N);\\n    var r, g, b;\\n    if (cs.ZW < 1) {\\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\\n    } else {\\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\\n    }\\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\\n  }\\n  LabCS.prototype = {\\n    getRgb: ColorSpace.prototype.getRgb,\\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\\n    },\\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n      var maxVal = (1 << bits) - 1;\\n      for (var i = 0; i < count; i++) {\\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\\n        srcOffset += 3;\\n        destOffset += 3 + alpha01;\\n      }\\n    },\\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\\n      return inputLength * (3 + alpha01) / 3 | 0;\\n    },\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\n    fillRgb: ColorSpace.prototype.fillRgb,\\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\\n      return true;\\n    },\\n    usesZeroToOneRange: false\\n  };\\n  return LabCS;\\n}();\\nexports.ColorSpace = ColorSpace;\\n\\n/***/ }),\\n/* 21 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\\nfunction getEncoding(encodingName) {\\n  switch (encodingName) {\\n    case 'WinAnsiEncoding':\\n      return WinAnsiEncoding;\\n    case 'StandardEncoding':\\n      return StandardEncoding;\\n    case 'MacRomanEncoding':\\n      return MacRomanEncoding;\\n    case 'SymbolSetEncoding':\\n      return SymbolSetEncoding;\\n    case 'ZapfDingbatsEncoding':\\n      return ZapfDingbatsEncoding;\\n    case 'ExpertEncoding':\\n      return ExpertEncoding;\\n    case 'MacExpertEncoding':\\n      return MacExpertEncoding;\\n    default:\\n      return null;\\n  }\\n}\\nexports.WinAnsiEncoding = WinAnsiEncoding;\\nexports.StandardEncoding = StandardEncoding;\\nexports.MacRomanEncoding = MacRomanEncoding;\\nexports.SymbolSetEncoding = SymbolSetEncoding;\\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\\nexports.ExpertEncoding = ExpertEncoding;\\nexports.getEncoding = getEncoding;\\n\\n/***/ }),\\n/* 22 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar id = 0;\\nvar px = Math.random();\\nmodule.exports = function (key) {\\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\\n};\\n\\n/***/ }),\\n/* 23 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $keys = __w_pdfjs_require__(93);\\nvar enumBugKeys = __w_pdfjs_require__(53);\\nmodule.exports = Object.keys || function keys(O) {\\n  return $keys(O, enumBugKeys);\\n};\\n\\n/***/ }),\\n/* 24 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar def = __w_pdfjs_require__(15).f;\\nvar has = __w_pdfjs_require__(9);\\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\\nmodule.exports = function (it, tag, stat) {\\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\\n    configurable: true,\\n    value: tag\\n  });\\n};\\n\\n/***/ }),\\n/* 25 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar ctx = __w_pdfjs_require__(11);\\nvar call = __w_pdfjs_require__(98);\\nvar isArrayIter = __w_pdfjs_require__(99);\\nvar anObject = __w_pdfjs_require__(8);\\nvar toLength = __w_pdfjs_require__(31);\\nvar getIterFn = __w_pdfjs_require__(100);\\nvar BREAK = {};\\nvar RETURN = {};\\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\\n  var iterFn = ITERATOR ? function () {\\n    return iterable;\\n  } : getIterFn(iterable);\\n  var f = ctx(fn, that, entries ? 2 : 1);\\n  var index = 0;\\n  var length, step, iterator, result;\\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\\n    if (result === BREAK || result === RETURN) return result;\\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\\n    result = call(iterator, f, step.value, entries);\\n    if (result === BREAK || result === RETURN) return result;\\n  }\\n};\\n_exports.BREAK = BREAK;\\n_exports.RETURN = RETURN;\\n\\n/***/ }),\\n/* 26 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _ccitt_stream = __w_pdfjs_require__(129);\\n\\nvar _jbig2_stream = __w_pdfjs_require__(130);\\n\\nvar _jpeg_stream = __w_pdfjs_require__(41);\\n\\nvar _jpx_stream = __w_pdfjs_require__(133);\\n\\nvar MAX_LENGTH_TO_CACHE = 1000;\\nvar Parser = function ParserClosure() {\\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\\n    this.lexer = lexer;\\n    this.allowStreams = allowStreams;\\n    this.xref = xref;\\n    this.recoveryMode = recoveryMode || false;\\n    this.imageCache = Object.create(null);\\n    this.refill();\\n  }\\n  Parser.prototype = {\\n    refill: function Parser_refill() {\\n      this.buf1 = this.lexer.getObj();\\n      this.buf2 = this.lexer.getObj();\\n    },\\n    shift: function Parser_shift() {\\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\\n        this.buf1 = this.buf2;\\n        this.buf2 = null;\\n      } else {\\n        this.buf1 = this.buf2;\\n        this.buf2 = this.lexer.getObj();\\n      }\\n    },\\n    tryShift: function Parser_tryShift() {\\n      try {\\n        this.shift();\\n        return true;\\n      } catch (e) {\\n        if (e instanceof _util.MissingDataException) {\\n          throw e;\\n        }\\n        return false;\\n      }\\n    },\\n    getObj: function Parser_getObj(cipherTransform) {\\n      var buf1 = this.buf1;\\n      this.shift();\\n      if (buf1 instanceof _primitives.Cmd) {\\n        switch (buf1.cmd) {\\n          case 'BI':\\n            return this.makeInlineImage(cipherTransform);\\n          case '[':\\n            var array = [];\\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\\n              array.push(this.getObj(cipherTransform));\\n            }\\n            if ((0, _primitives.isEOF)(this.buf1)) {\\n              if (!this.recoveryMode) {\\n                throw new _util.FormatError('End of file inside array');\\n              }\\n              return array;\\n            }\\n            this.shift();\\n            return array;\\n          case '<<':\\n            var dict = new _primitives.Dict(this.xref);\\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\\n              if (!(0, _primitives.isName)(this.buf1)) {\\n                (0, _util.info)('Malformed dictionary: key must be a name object');\\n                this.shift();\\n                continue;\\n              }\\n              var key = this.buf1.name;\\n              this.shift();\\n              if ((0, _primitives.isEOF)(this.buf1)) {\\n                break;\\n              }\\n              dict.set(key, this.getObj(cipherTransform));\\n            }\\n            if ((0, _primitives.isEOF)(this.buf1)) {\\n              if (!this.recoveryMode) {\\n                throw new _util.FormatError('End of file inside dictionary');\\n              }\\n              return dict;\\n            }\\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\\n            }\\n            this.shift();\\n            return dict;\\n          default:\\n            return buf1;\\n        }\\n      }\\n      if (Number.isInteger(buf1)) {\\n        var num = buf1;\\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\\n          var ref = new _primitives.Ref(num, this.buf1);\\n          this.shift();\\n          this.shift();\\n          return ref;\\n        }\\n        return num;\\n      }\\n      if ((0, _util.isString)(buf1)) {\\n        var str = buf1;\\n        if (cipherTransform) {\\n          str = cipherTransform.decryptString(str);\\n        }\\n        return str;\\n      }\\n      return buf1;\\n    },\\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\\n      var E = 0x45,\\n          I = 0x49,\\n          SPACE = 0x20,\\n          LF = 0xA,\\n          CR = 0xD;\\n      var n = 10,\\n          NUL = 0x0;\\n      var startPos = stream.pos,\\n          state = 0,\\n          ch = void 0,\\n          maybeEIPos = void 0;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (state === 0) {\\n          state = ch === E ? 1 : 0;\\n        } else if (state === 1) {\\n          state = ch === I ? 2 : 0;\\n        } else {\\n          (0, _util.assert)(state === 2);\\n          if (ch === SPACE || ch === LF || ch === CR) {\\n            maybeEIPos = stream.pos;\\n            var followingBytes = stream.peekBytes(n);\\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\\n              ch = followingBytes[i];\\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\\n                continue;\\n              }\\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\\n                state = 0;\\n                break;\\n              }\\n            }\\n            if (state === 2) {\\n              break;\\n            }\\n          } else {\\n            state = 0;\\n          }\\n        }\\n      }\\n      if (ch === -1) {\\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\\n        if (maybeEIPos) {\\n          (0, _util.warn)('... trying to recover by using the last \\\"EI\\\" occurrence.');\\n          stream.skip(-(stream.pos - maybeEIPos));\\n        }\\n      }\\n      return stream.pos - 4 - startPos;\\n    },\\n\\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\\n      var startPos = stream.pos,\\n          foundEOI = false,\\n          b,\\n          markerLength,\\n          length;\\n      while ((b = stream.getByte()) !== -1) {\\n        if (b !== 0xFF) {\\n          continue;\\n        }\\n        switch (stream.getByte()) {\\n          case 0x00:\\n            break;\\n          case 0xFF:\\n            stream.skip(-1);\\n            break;\\n          case 0xD9:\\n            foundEOI = true;\\n            break;\\n          case 0xC0:\\n          case 0xC1:\\n          case 0xC2:\\n          case 0xC3:\\n          case 0xC5:\\n          case 0xC6:\\n          case 0xC7:\\n          case 0xC9:\\n          case 0xCA:\\n          case 0xCB:\\n          case 0xCD:\\n          case 0xCE:\\n          case 0xCF:\\n          case 0xC4:\\n          case 0xCC:\\n          case 0xDA:\\n          case 0xDB:\\n          case 0xDC:\\n          case 0xDD:\\n          case 0xDE:\\n          case 0xDF:\\n          case 0xE0:\\n          case 0xE1:\\n          case 0xE2:\\n          case 0xE3:\\n          case 0xE4:\\n          case 0xE5:\\n          case 0xE6:\\n          case 0xE7:\\n          case 0xE8:\\n          case 0xE9:\\n          case 0xEA:\\n          case 0xEB:\\n          case 0xEC:\\n          case 0xED:\\n          case 0xEE:\\n          case 0xEF:\\n          case 0xFE:\\n            markerLength = stream.getUint16();\\n            if (markerLength > 2) {\\n              stream.skip(markerLength - 2);\\n            } else {\\n              stream.skip(-2);\\n            }\\n            break;\\n        }\\n        if (foundEOI) {\\n          break;\\n        }\\n      }\\n      length = stream.pos - startPos;\\n      if (b === -1) {\\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\\n        stream.skip(-length);\\n        return this.findDefaultInlineStreamEnd(stream);\\n      }\\n      this.inlineStreamSkipEI(stream);\\n      return length;\\n    },\\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\\n      var TILDE = 0x7E,\\n          GT = 0x3E;\\n      var startPos = stream.pos,\\n          ch,\\n          length;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (ch === TILDE && stream.peekByte() === GT) {\\n          stream.skip();\\n          break;\\n        }\\n      }\\n      length = stream.pos - startPos;\\n      if (ch === -1) {\\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\n        stream.skip(-length);\\n        return this.findDefaultInlineStreamEnd(stream);\\n      }\\n      this.inlineStreamSkipEI(stream);\\n      return length;\\n    },\\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\\n      var GT = 0x3E;\\n      var startPos = stream.pos,\\n          ch,\\n          length;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (ch === GT) {\\n          break;\\n        }\\n      }\\n      length = stream.pos - startPos;\\n      if (ch === -1) {\\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\n        stream.skip(-length);\\n        return this.findDefaultInlineStreamEnd(stream);\\n      }\\n      this.inlineStreamSkipEI(stream);\\n      return length;\\n    },\\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\\n      var E = 0x45,\\n          I = 0x49;\\n      var state = 0,\\n          ch;\\n      while ((ch = stream.getByte()) !== -1) {\\n        if (state === 0) {\\n          state = ch === E ? 1 : 0;\\n        } else if (state === 1) {\\n          state = ch === I ? 2 : 0;\\n        } else if (state === 2) {\\n          break;\\n        }\\n      }\\n    },\\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\\n      var lexer = this.lexer;\\n      var stream = lexer.stream;\\n      var dict = new _primitives.Dict(this.xref);\\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\\n        if (!(0, _primitives.isName)(this.buf1)) {\\n          throw new _util.FormatError('Dictionary key must be a name object');\\n        }\\n        var key = this.buf1.name;\\n        this.shift();\\n        if ((0, _primitives.isEOF)(this.buf1)) {\\n          break;\\n        }\\n        dict.set(key, this.getObj(cipherTransform));\\n      }\\n      var filter = dict.get('Filter', 'F'),\\n          filterName;\\n      if ((0, _primitives.isName)(filter)) {\\n        filterName = filter.name;\\n      } else if (Array.isArray(filter)) {\\n        var filterZero = this.xref.fetchIfRef(filter[0]);\\n        if ((0, _primitives.isName)(filterZero)) {\\n          filterName = filterZero.name;\\n        }\\n      }\\n      var startPos = stream.pos,\\n          length,\\n          i,\\n          ii;\\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\\n        length = this.findDCTDecodeInlineStreamEnd(stream);\\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\\n      } else {\\n        length = this.findDefaultInlineStreamEnd(stream);\\n      }\\n      var imageStream = stream.makeSubStream(startPos, length, dict);\\n      var adler32;\\n      if (length < MAX_LENGTH_TO_CACHE) {\\n        var imageBytes = imageStream.getBytes();\\n        imageStream.reset();\\n        var a = 1;\\n        var b = 0;\\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\\n          a += imageBytes[i] & 0xff;\\n          b += a;\\n        }\\n        adler32 = b % 65521 << 16 | a % 65521;\\n        var cacheEntry = this.imageCache[adler32];\\n        if (cacheEntry !== undefined) {\\n          this.buf2 = _primitives.Cmd.get('EI');\\n          this.shift();\\n          cacheEntry.reset();\\n          return cacheEntry;\\n        }\\n      }\\n      if (cipherTransform) {\\n        imageStream = cipherTransform.createStream(imageStream, length);\\n      }\\n      imageStream = this.filter(imageStream, dict, length);\\n      imageStream.dict = dict;\\n      if (adler32 !== undefined) {\\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\\n        this.imageCache[adler32] = imageStream;\\n      }\\n      this.buf2 = _primitives.Cmd.get('EI');\\n      this.shift();\\n      return imageStream;\\n    },\\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\\n      var lexer = this.lexer;\\n      var stream = lexer.stream;\\n      lexer.skipToNextLine();\\n      var pos = stream.pos - 1;\\n      var length = dict.get('Length');\\n      if (!Number.isInteger(length)) {\\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\\n        length = 0;\\n      }\\n      stream.pos = pos + length;\\n      lexer.nextChar();\\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\\n        this.shift();\\n      } else {\\n        stream.pos = pos;\\n        var SCAN_BLOCK_SIZE = 2048;\\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\\n        var skipped = 0,\\n            found = false,\\n            i,\\n            j;\\n        while (stream.pos < stream.end) {\\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\\n          if (scanLength <= 0) {\\n            break;\\n          }\\n          found = false;\\n          i = 0;\\n          while (i < scanLength) {\\n            j = 0;\\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\\n              j++;\\n            }\\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\\n              found = true;\\n              break;\\n            }\\n            i++;\\n          }\\n          if (found) {\\n            skipped += i;\\n            stream.pos += i;\\n            break;\\n          }\\n          skipped += scanLength;\\n          stream.pos += scanLength;\\n        }\\n        if (!found) {\\n          throw new _util.FormatError('Missing endstream');\\n        }\\n        length = skipped;\\n        lexer.nextChar();\\n        this.shift();\\n        this.shift();\\n      }\\n      this.shift();\\n      stream = stream.makeSubStream(pos, length, dict);\\n      if (cipherTransform) {\\n        stream = cipherTransform.createStream(stream, length);\\n      }\\n      stream = this.filter(stream, dict, length);\\n      stream.dict = dict;\\n      return stream;\\n    },\\n    filter: function Parser_filter(stream, dict, length) {\\n      var filter = dict.get('Filter', 'F');\\n      var params = dict.get('DecodeParms', 'DP');\\n      if ((0, _primitives.isName)(filter)) {\\n        if (Array.isArray(params)) {\\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\\n        }\\n        return this.makeFilter(stream, filter.name, length, params);\\n      }\\n      var maybeLength = length;\\n      if (Array.isArray(filter)) {\\n        var filterArray = filter;\\n        var paramsArray = params;\\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\\n          filter = this.xref.fetchIfRef(filterArray[i]);\\n          if (!(0, _primitives.isName)(filter)) {\\n            throw new _util.FormatError('Bad filter name: ' + filter);\\n          }\\n          params = null;\\n          if (Array.isArray(paramsArray) && i in paramsArray) {\\n            params = this.xref.fetchIfRef(paramsArray[i]);\\n          }\\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\\n          maybeLength = null;\\n        }\\n      }\\n      return stream;\\n    },\\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\\n      if (maybeLength === 0) {\\n        (0, _util.warn)('Empty \\\"' + name + '\\\" stream.');\\n        return new _stream.NullStream();\\n      }\\n      try {\\n        var xrefStreamStats = this.xref.stats.streamTypes;\\n        if (name === 'FlateDecode' || name === 'Fl') {\\n          xrefStreamStats[_util.StreamType.FLATE] = true;\\n          if (params) {\\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\\n          }\\n          return new _stream.FlateStream(stream, maybeLength);\\n        }\\n        if (name === 'LZWDecode' || name === 'LZW') {\\n          xrefStreamStats[_util.StreamType.LZW] = true;\\n          var earlyChange = 1;\\n          if (params) {\\n            if (params.has('EarlyChange')) {\\n              earlyChange = params.get('EarlyChange');\\n            }\\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\\n          }\\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\\n        }\\n        if (name === 'DCTDecode' || name === 'DCT') {\\n          xrefStreamStats[_util.StreamType.DCT] = true;\\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\\n        }\\n        if (name === 'JPXDecode' || name === 'JPX') {\\n          xrefStreamStats[_util.StreamType.JPX] = true;\\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\\n        }\\n        if (name === 'ASCII85Decode' || name === 'A85') {\\n          xrefStreamStats[_util.StreamType.A85] = true;\\n          return new _stream.Ascii85Stream(stream, maybeLength);\\n        }\\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\\n          xrefStreamStats[_util.StreamType.AHX] = true;\\n          return new _stream.AsciiHexStream(stream, maybeLength);\\n        }\\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\\n          xrefStreamStats[_util.StreamType.CCF] = true;\\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\\n        }\\n        if (name === 'RunLengthDecode' || name === 'RL') {\\n          xrefStreamStats[_util.StreamType.RL] = true;\\n          return new _stream.RunLengthStream(stream, maybeLength);\\n        }\\n        if (name === 'JBIG2Decode') {\\n          xrefStreamStats[_util.StreamType.JBIG] = true;\\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\\n        }\\n        (0, _util.warn)('filter \\\"' + name + '\\\" not supported yet');\\n        return stream;\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Invalid stream: \\\\\\\"' + ex + '\\\\\\\"');\\n        return new _stream.NullStream();\\n      }\\n    }\\n  };\\n  return Parser;\\n}();\\nvar Lexer = function LexerClosure() {\\n  function Lexer(stream, knownCommands) {\\n    this.stream = stream;\\n    this.nextChar();\\n    this.strBuf = [];\\n    this.knownCommands = knownCommands;\\n  }\\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n  function toHexDigit(ch) {\\n    if (ch >= 0x30 && ch <= 0x39) {\\n      return ch & 0x0F;\\n    }\\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\n      return (ch & 0x0F) + 9;\\n    }\\n    return -1;\\n  }\\n  Lexer.prototype = {\\n    nextChar: function Lexer_nextChar() {\\n      return this.currentChar = this.stream.getByte();\\n    },\\n    peekChar: function Lexer_peekChar() {\\n      return this.stream.peekByte();\\n    },\\n    getNumber: function Lexer_getNumber() {\\n      var ch = this.currentChar;\\n      var eNotation = false;\\n      var divideBy = 0;\\n      var sign = 1;\\n      if (ch === 0x2D) {\\n        sign = -1;\\n        ch = this.nextChar();\\n        if (ch === 0x2D) {\\n          ch = this.nextChar();\\n        }\\n      } else if (ch === 0x2B) {\\n        ch = this.nextChar();\\n      }\\n      if (ch === 0x2E) {\\n        divideBy = 10;\\n        ch = this.nextChar();\\n      }\\n      if (ch === 0x0A || ch === 0x0D) {\\n        do {\\n          ch = this.nextChar();\\n        } while (ch === 0x0A || ch === 0x0D);\\n      }\\n      if (ch < 0x30 || ch > 0x39) {\\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\\n      }\\n      var baseValue = ch - 0x30;\\n      var powerValue = 0;\\n      var powerValueSign = 1;\\n      while ((ch = this.nextChar()) >= 0) {\\n        if (0x30 <= ch && ch <= 0x39) {\\n          var currentDigit = ch - 0x30;\\n          if (eNotation) {\\n            powerValue = powerValue * 10 + currentDigit;\\n          } else {\\n            if (divideBy !== 0) {\\n              divideBy *= 10;\\n            }\\n            baseValue = baseValue * 10 + currentDigit;\\n          }\\n        } else if (ch === 0x2E) {\\n          if (divideBy === 0) {\\n            divideBy = 1;\\n          } else {\\n            break;\\n          }\\n        } else if (ch === 0x2D) {\\n          (0, _util.warn)('Badly formatted number');\\n        } else if (ch === 0x45 || ch === 0x65) {\\n          ch = this.peekChar();\\n          if (ch === 0x2B || ch === 0x2D) {\\n            powerValueSign = ch === 0x2D ? -1 : 1;\\n            this.nextChar();\\n          } else if (ch < 0x30 || ch > 0x39) {\\n            break;\\n          }\\n          eNotation = true;\\n        } else {\\n          break;\\n        }\\n      }\\n      if (divideBy !== 0) {\\n        baseValue /= divideBy;\\n      }\\n      if (eNotation) {\\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\\n      }\\n      return sign * baseValue;\\n    },\\n    getString: function Lexer_getString() {\\n      var numParen = 1;\\n      var done = false;\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      var ch = this.nextChar();\\n      while (true) {\\n        var charBuffered = false;\\n        switch (ch | 0) {\\n          case -1:\\n            (0, _util.warn)('Unterminated string');\\n            done = true;\\n            break;\\n          case 0x28:\\n            ++numParen;\\n            strBuf.push('(');\\n            break;\\n          case 0x29:\\n            if (--numParen === 0) {\\n              this.nextChar();\\n              done = true;\\n            } else {\\n              strBuf.push(')');\\n            }\\n            break;\\n          case 0x5C:\\n            ch = this.nextChar();\\n            switch (ch) {\\n              case -1:\\n                (0, _util.warn)('Unterminated string');\\n                done = true;\\n                break;\\n              case 0x6E:\\n                strBuf.push('\\\\n');\\n                break;\\n              case 0x72:\\n                strBuf.push('\\\\r');\\n                break;\\n              case 0x74:\\n                strBuf.push('\\\\t');\\n                break;\\n              case 0x62:\\n                strBuf.push('\\\\b');\\n                break;\\n              case 0x66:\\n                strBuf.push('\\\\f');\\n                break;\\n              case 0x5C:\\n              case 0x28:\\n              case 0x29:\\n                strBuf.push(String.fromCharCode(ch));\\n                break;\\n              case 0x30:\\n              case 0x31:\\n              case 0x32:\\n              case 0x33:\\n              case 0x34:\\n              case 0x35:\\n              case 0x36:\\n              case 0x37:\\n                var x = ch & 0x0F;\\n                ch = this.nextChar();\\n                charBuffered = true;\\n                if (ch >= 0x30 && ch <= 0x37) {\\n                  x = (x << 3) + (ch & 0x0F);\\n                  ch = this.nextChar();\\n                  if (ch >= 0x30 && ch <= 0x37) {\\n                    charBuffered = false;\\n                    x = (x << 3) + (ch & 0x0F);\\n                  }\\n                }\\n                strBuf.push(String.fromCharCode(x));\\n                break;\\n              case 0x0D:\\n                if (this.peekChar() === 0x0A) {\\n                  this.nextChar();\\n                }\\n                break;\\n              case 0x0A:\\n                break;\\n              default:\\n                strBuf.push(String.fromCharCode(ch));\\n                break;\\n            }\\n            break;\\n          default:\\n            strBuf.push(String.fromCharCode(ch));\\n            break;\\n        }\\n        if (done) {\\n          break;\\n        }\\n        if (!charBuffered) {\\n          ch = this.nextChar();\\n        }\\n      }\\n      return strBuf.join('');\\n    },\\n    getName: function Lexer_getName() {\\n      var ch, previousCh;\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\n        if (ch === 0x23) {\\n          ch = this.nextChar();\\n          if (specialChars[ch]) {\\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\\n            strBuf.push('#');\\n            break;\\n          }\\n          var x = toHexDigit(ch);\\n          if (x !== -1) {\\n            previousCh = ch;\\n            ch = this.nextChar();\\n            var x2 = toHexDigit(ch);\\n            if (x2 === -1) {\\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\\n              strBuf.push('#', String.fromCharCode(previousCh));\\n              if (specialChars[ch]) {\\n                break;\\n              }\\n              strBuf.push(String.fromCharCode(ch));\\n              continue;\\n            }\\n            strBuf.push(String.fromCharCode(x << 4 | x2));\\n          } else {\\n            strBuf.push('#', String.fromCharCode(ch));\\n          }\\n        } else {\\n          strBuf.push(String.fromCharCode(ch));\\n        }\\n      }\\n      if (strBuf.length > 127) {\\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\\n      }\\n      return _primitives.Name.get(strBuf.join(''));\\n    },\\n    getHexString: function Lexer_getHexString() {\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      var ch = this.currentChar;\\n      var isFirstHex = true;\\n      var firstDigit;\\n      var secondDigit;\\n      while (true) {\\n        if (ch < 0) {\\n          (0, _util.warn)('Unterminated hex string');\\n          break;\\n        } else if (ch === 0x3E) {\\n          this.nextChar();\\n          break;\\n        } else if (specialChars[ch] === 1) {\\n          ch = this.nextChar();\\n          continue;\\n        } else {\\n          if (isFirstHex) {\\n            firstDigit = toHexDigit(ch);\\n            if (firstDigit === -1) {\\n              (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\n              ch = this.nextChar();\\n              continue;\\n            }\\n          } else {\\n            secondDigit = toHexDigit(ch);\\n            if (secondDigit === -1) {\\n              (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\n              ch = this.nextChar();\\n              continue;\\n            }\\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\\n          }\\n          isFirstHex = !isFirstHex;\\n          ch = this.nextChar();\\n        }\\n      }\\n      return strBuf.join('');\\n    },\\n    getObj: function Lexer_getObj() {\\n      var comment = false;\\n      var ch = this.currentChar;\\n      while (true) {\\n        if (ch < 0) {\\n          return _primitives.EOF;\\n        }\\n        if (comment) {\\n          if (ch === 0x0A || ch === 0x0D) {\\n            comment = false;\\n          }\\n        } else if (ch === 0x25) {\\n          comment = true;\\n        } else if (specialChars[ch] !== 1) {\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n      switch (ch | 0) {\\n        case 0x30:\\n        case 0x31:\\n        case 0x32:\\n        case 0x33:\\n        case 0x34:\\n        case 0x35:\\n        case 0x36:\\n        case 0x37:\\n        case 0x38:\\n        case 0x39:\\n        case 0x2B:\\n        case 0x2D:\\n        case 0x2E:\\n          return this.getNumber();\\n        case 0x28:\\n          return this.getString();\\n        case 0x2F:\\n          return this.getName();\\n        case 0x5B:\\n          this.nextChar();\\n          return _primitives.Cmd.get('[');\\n        case 0x5D:\\n          this.nextChar();\\n          return _primitives.Cmd.get(']');\\n        case 0x3C:\\n          ch = this.nextChar();\\n          if (ch === 0x3C) {\\n            this.nextChar();\\n            return _primitives.Cmd.get('<<');\\n          }\\n          return this.getHexString();\\n        case 0x3E:\\n          ch = this.nextChar();\\n          if (ch === 0x3E) {\\n            this.nextChar();\\n            return _primitives.Cmd.get('>>');\\n          }\\n          return _primitives.Cmd.get('>');\\n        case 0x7B:\\n          this.nextChar();\\n          return _primitives.Cmd.get('{');\\n        case 0x7D:\\n          this.nextChar();\\n          return _primitives.Cmd.get('}');\\n        case 0x29:\\n          this.nextChar();\\n          throw new _util.FormatError('Illegal character: ' + ch);\\n      }\\n      var str = String.fromCharCode(ch);\\n      var knownCommands = this.knownCommands;\\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\n        var possibleCommand = str + String.fromCharCode(ch);\\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\\n          break;\\n        }\\n        if (str.length === 128) {\\n          throw new _util.FormatError('Command token too long: ' + str.length);\\n        }\\n        str = possibleCommand;\\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\n      }\\n      if (str === 'true') {\\n        return true;\\n      }\\n      if (str === 'false') {\\n        return false;\\n      }\\n      if (str === 'null') {\\n        return null;\\n      }\\n      return _primitives.Cmd.get(str);\\n    },\\n    skipToNextLine: function Lexer_skipToNextLine() {\\n      var ch = this.currentChar;\\n      while (ch >= 0) {\\n        if (ch === 0x0D) {\\n          ch = this.nextChar();\\n          if (ch === 0x0A) {\\n            this.nextChar();\\n          }\\n          break;\\n        } else if (ch === 0x0A) {\\n          this.nextChar();\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n    }\\n  };\\n  return Lexer;\\n}();\\nvar Linearization = {\\n  create: function LinearizationCreate(stream) {\\n    function getInt(name, allowZeroValue) {\\n      var obj = linDict.get(name);\\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\\n        return obj;\\n      }\\n      throw new Error('The \\\"' + name + '\\\" parameter in the linearization ' + 'dictionary is invalid.');\\n    }\\n    function getHints() {\\n      var hints = linDict.get('H'),\\n          hintsLength,\\n          item;\\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\\n        for (var index = 0; index < hintsLength; index++) {\\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\\n          }\\n        }\\n        return hints;\\n      }\\n      throw new Error('Hint array in the linearization dictionary is invalid.');\\n    }\\n    var parser = new Parser(new Lexer(stream), false, null);\\n    var obj1 = parser.getObj();\\n    var obj2 = parser.getObj();\\n    var obj3 = parser.getObj();\\n    var linDict = parser.getObj();\\n    var obj, length;\\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\\n      return null;\\n    } else if ((length = getInt('L')) !== stream.length) {\\n      throw new Error('The \\\"L\\\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\\n    }\\n    return {\\n      length: length,\\n      hints: getHints(),\\n      objectNumberFirst: getInt('O'),\\n      endFirst: getInt('E'),\\n      numPages: getInt('N'),\\n      mainXRefEntriesOffset: getInt('T'),\\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\\n    };\\n  }\\n};\\nexports.Lexer = Lexer;\\nexports.Linearization = Linearization;\\nexports.Parser = Parser;\\n\\n/***/ }),\\n/* 27 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nvar document = __w_pdfjs_require__(5).document;\\nvar is = isObject(document) && isObject(document.createElement);\\nmodule.exports = function (it) {\\n  return is ? document.createElement(it) : {};\\n};\\n\\n/***/ }),\\n/* 28 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (bitmap, value) {\\n  return {\\n    enumerable: !(bitmap & 1),\\n    configurable: !(bitmap & 2),\\n    writable: !(bitmap & 4),\\n    value: value\\n  };\\n};\\n\\n/***/ }),\\n/* 29 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar cof = __w_pdfjs_require__(18);\\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\\n  return cof(it) == 'String' ? it.split('') : Object(it);\\n};\\n\\n/***/ }),\\n/* 30 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (it) {\\n  if (it == undefined) throw TypeError(\\\"Can't call method on  \\\" + it);\\n  return it;\\n};\\n\\n/***/ }),\\n/* 31 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar toInteger = __w_pdfjs_require__(32);\\nvar min = Math.min;\\nmodule.exports = function (it) {\\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\\n};\\n\\n/***/ }),\\n/* 32 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar ceil = Math.ceil;\\nvar floor = Math.floor;\\nmodule.exports = function (it) {\\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\\n};\\n\\n/***/ }),\\n/* 33 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar cof = __w_pdfjs_require__(18);\\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\\nvar ARG = cof(function () {\\n  return arguments;\\n}()) == 'Arguments';\\nvar tryGet = function tryGet(it, key) {\\n  try {\\n    return it[key];\\n  } catch (e) {}\\n};\\nmodule.exports = function (it) {\\n  var O, T, B;\\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\\n};\\n\\n/***/ }),\\n/* 34 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar shared = __w_pdfjs_require__(49)('keys');\\nvar uid = __w_pdfjs_require__(22);\\nmodule.exports = function (key) {\\n  return shared[key] || (shared[key] = uid(key));\\n};\\n\\n/***/ }),\\n/* 35 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar defined = __w_pdfjs_require__(30);\\nmodule.exports = function (it) {\\n  return Object(defined(it));\\n};\\n\\n/***/ }),\\n/* 36 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (it, Constructor, name, forbiddenField) {\\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\\n    throw TypeError(name + ': incorrect invocation!');\\n  }\\n  return it;\\n};\\n\\n/***/ }),\\n/* 37 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar aFunction = __w_pdfjs_require__(16);\\nfunction PromiseCapability(C) {\\n  var resolve, reject;\\n  this.promise = new C(function ($$resolve, $$reject) {\\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\\n    resolve = $$resolve;\\n    reject = $$reject;\\n  });\\n  this.resolve = aFunction(resolve);\\n  this.reject = aFunction(reject);\\n}\\nmodule.exports.f = function (C) {\\n  return new PromiseCapability(C);\\n};\\n\\n/***/ }),\\n/* 38 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar redefine = __w_pdfjs_require__(10);\\nmodule.exports = function (target, src, safe) {\\n  for (var key in src) {\\n    redefine(target, key, src[key], safe);\\n  }return target;\\n};\\n\\n/***/ }),\\n/* 39 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar META = __w_pdfjs_require__(22)('meta');\\nvar isObject = __w_pdfjs_require__(3);\\nvar has = __w_pdfjs_require__(9);\\nvar setDesc = __w_pdfjs_require__(15).f;\\nvar id = 0;\\nvar isExtensible = Object.isExtensible || function () {\\n  return true;\\n};\\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\\n  return isExtensible(Object.preventExtensions({}));\\n});\\nvar setMeta = function setMeta(it) {\\n  setDesc(it, META, {\\n    value: {\\n      i: 'O' + ++id,\\n      w: {}\\n    }\\n  });\\n};\\nvar fastKey = function fastKey(it, create) {\\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\\n  if (!has(it, META)) {\\n    if (!isExtensible(it)) return 'F';\\n    if (!create) return 'E';\\n    setMeta(it);\\n  }\\n  return it[META].i;\\n};\\nvar getWeak = function getWeak(it, create) {\\n  if (!has(it, META)) {\\n    if (!isExtensible(it)) return true;\\n    if (!create) return false;\\n    setMeta(it);\\n  }\\n  return it[META].w;\\n};\\nvar onFreeze = function onFreeze(it) {\\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\\n  return it;\\n};\\nvar meta = module.exports = {\\n  KEY: META,\\n  NEED: false,\\n  fastKey: fastKey,\\n  getWeak: getWeak,\\n  onFreeze: onFreeze\\n};\\n\\n/***/ }),\\n/* 40 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nexports.f = {}.propertyIsEnumerable;\\n\\n/***/ }),\\n/* 41 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpegStream = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _jpg = __w_pdfjs_require__(132);\\n\\nvar JpegStream = function JpegStreamClosure() {\\n  function JpegStream(stream, maybeLength, dict, params) {\\n    var ch = void 0;\\n    while ((ch = stream.getByte()) !== -1) {\\n      if (ch === 0xFF) {\\n        stream.skip(-1);\\n        break;\\n      }\\n    }\\n    this.stream = stream;\\n    this.maybeLength = maybeLength;\\n    this.dict = dict;\\n    this.params = params;\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\\n    get: function JpegStream_bytes() {\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n    },\\n    configurable: true\\n  });\\n  JpegStream.prototype.ensureBuffer = function (requested) {};\\n  JpegStream.prototype.readBlock = function () {\\n    if (this.eof) {\\n      return;\\n    }\\n    var jpegImage = new _jpg.JpegImage();\\n    var decodeArr = this.dict.getArray('Decode', 'D');\\n    if (this.forceRGB && Array.isArray(decodeArr)) {\\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\\n      var decodeArrLength = decodeArr.length;\\n      var transform = new Int32Array(decodeArrLength);\\n      var transformNeeded = false;\\n      var maxValue = (1 << bitsPerComponent) - 1;\\n      for (var i = 0; i < decodeArrLength; i += 2) {\\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\\n          transformNeeded = true;\\n        }\\n      }\\n      if (transformNeeded) {\\n        jpegImage.decodeTransform = transform;\\n      }\\n    }\\n    if ((0, _primitives.isDict)(this.params)) {\\n      var colorTransform = this.params.get('ColorTransform');\\n      if (Number.isInteger(colorTransform)) {\\n        jpegImage.colorTransform = colorTransform;\\n      }\\n    }\\n    jpegImage.parse(this.bytes);\\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\\n    this.buffer = data;\\n    this.bufferLength = data.length;\\n    this.eof = true;\\n  };\\n  JpegStream.prototype.getIR = function () {\\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n\\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\\n  };\\n  return JpegStream;\\n}();\\nexports.JpegStream = JpegStream;\\n\\n/***/ }),\\n/* 42 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.OperatorList = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar QueueOptimizer = function QueueOptimizerClosure() {\\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\\n    var state = parentState;\\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\\n      var item = pattern[i];\\n      state = state[item] || (state[item] = []);\\n    }\\n    state[pattern[pattern.length - 1]] = {\\n      checkFn: checkFn,\\n      iterateFn: iterateFn,\\n      processFn: processFn\\n    };\\n  }\\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\\n    var iFirstPIMXO = iFirstSave + 2;\\n    for (var i = 0; i < count; i++) {\\n      var arg = argsArray[iFirstPIMXO + 4 * i];\\n      var imageMask = arg.length === 1 && arg[0];\\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\\n        continue;\\n      }\\n      break;\\n    }\\n    return count - i;\\n  }\\n  var InitialState = [];\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\\n    var fnArray = context.fnArray;\\n    var iFirstSave = context.iCurr - 3;\\n    var pos = (i - iFirstSave) % 4;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.save;\\n      case 1:\\n        return fnArray[i] === _util.OPS.transform;\\n      case 2:\\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\\n      case 3:\\n        return fnArray[i] === _util.OPS.restore;\\n    }\\n  }, function foundInlineImageGroup(context, i) {\\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\\n    var MAX_WIDTH = 1000;\\n    var IMAGE_PADDING = 1;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstSave = curr - 3;\\n    var iFirstTransform = curr - 2;\\n    var iFirstPIIXO = curr - 1;\\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\\n      return i - (i - iFirstSave) % 4;\\n    }\\n    var maxX = 0;\\n    var map = [],\\n        maxLineHeight = 0;\\n    var currentX = IMAGE_PADDING,\\n        currentY = IMAGE_PADDING;\\n    var q;\\n    for (q = 0; q < count; q++) {\\n      var transform = argsArray[iFirstTransform + (q << 2)];\\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\\n      if (currentX + img.width > MAX_WIDTH) {\\n        maxX = Math.max(maxX, currentX);\\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\\n        currentX = 0;\\n        maxLineHeight = 0;\\n      }\\n      map.push({\\n        transform: transform,\\n        x: currentX,\\n        y: currentY,\\n        w: img.width,\\n        h: img.height\\n      });\\n      currentX += img.width + 2 * IMAGE_PADDING;\\n      maxLineHeight = Math.max(maxLineHeight, img.height);\\n    }\\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\\n    var imgRowSize = imgWidth << 2;\\n    for (q = 0; q < count; q++) {\\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\\n      var rowSize = map[q].w << 2;\\n      var dataOffset = 0;\\n      var offset = map[q].x + map[q].y * imgWidth << 2;\\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\\n        dataOffset += rowSize;\\n        offset += imgRowSize;\\n      }\\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\\n      while (offset >= 0) {\\n        data[offset - 4] = data[offset];\\n        data[offset - 3] = data[offset + 1];\\n        data[offset - 2] = data[offset + 2];\\n        data[offset - 1] = data[offset + 3];\\n        data[offset + rowSize] = data[offset + rowSize - 4];\\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\\n        offset -= imgRowSize;\\n      }\\n    }\\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\\n    argsArray.splice(iFirstSave, count * 4, [{\\n      width: imgWidth,\\n      height: imgHeight,\\n      kind: _util.ImageKind.RGBA_32BPP,\\n      data: imgData\\n    }, map]);\\n    return iFirstSave + 1;\\n  });\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\\n    var fnArray = context.fnArray;\\n    var iFirstSave = context.iCurr - 3;\\n    var pos = (i - iFirstSave) % 4;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.save;\\n      case 1:\\n        return fnArray[i] === _util.OPS.transform;\\n      case 2:\\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\\n      case 3:\\n        return fnArray[i] === _util.OPS.restore;\\n    }\\n  }, function foundImageMaskGroup(context, i) {\\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstSave = curr - 3;\\n    var iFirstTransform = curr - 2;\\n    var iFirstPIMXO = curr - 1;\\n    var count = Math.floor((i - iFirstSave) / 4);\\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\\n      return i - (i - iFirstSave) % 4;\\n    }\\n    var q;\\n    var isSameImage = false;\\n    var iTransform, transformArgs;\\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\\n      isSameImage = true;\\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\\n      iTransform = iFirstTransform + 4;\\n      var iPIMXO = iFirstPIMXO + 4;\\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\\n        transformArgs = argsArray[iTransform];\\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\\n            isSameImage = false;\\n          } else {\\n            count = q;\\n          }\\n          break;\\n        }\\n      }\\n    }\\n    if (isSameImage) {\\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\\n      var positions = new Float32Array(count * 2);\\n      iTransform = iFirstTransform;\\n      for (q = 0; q < count; q++, iTransform += 4) {\\n        transformArgs = argsArray[iTransform];\\n        positions[q << 1] = transformArgs[4];\\n        positions[(q << 1) + 1] = transformArgs[5];\\n      }\\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\\n    } else {\\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\\n      var images = [];\\n      for (q = 0; q < count; q++) {\\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\\n        images.push({\\n          data: maskParams.data,\\n          width: maskParams.width,\\n          height: maskParams.height,\\n          transform: transformArgs\\n        });\\n      }\\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\\n      argsArray.splice(iFirstSave, count * 4, [images]);\\n    }\\n    return iFirstSave + 1;\\n  });\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\\n    var argsArray = context.argsArray;\\n    var iFirstTransform = context.iCurr - 2;\\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\\n  }, function (context, i) {\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var iFirstSave = context.iCurr - 3;\\n    var pos = (i - iFirstSave) % 4;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.save;\\n      case 1:\\n        if (fnArray[i] !== _util.OPS.transform) {\\n          return false;\\n        }\\n        var iFirstTransform = context.iCurr - 2;\\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\\n          return false;\\n        }\\n        return true;\\n      case 2:\\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\\n          return false;\\n        }\\n        var iFirstPIXO = context.iCurr - 1;\\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\\n        if (argsArray[i][0] !== firstPIXOArg0) {\\n          return false;\\n        }\\n        return true;\\n      case 3:\\n        return fnArray[i] === _util.OPS.restore;\\n    }\\n  }, function (context, i) {\\n    var MIN_IMAGES_IN_BLOCK = 3;\\n    var MAX_IMAGES_IN_BLOCK = 1000;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstSave = curr - 3;\\n    var iFirstTransform = curr - 2;\\n    var iFirstPIXO = curr - 1;\\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\\n    if (count < MIN_IMAGES_IN_BLOCK) {\\n      return i - (i - iFirstSave) % 4;\\n    }\\n    var positions = new Float32Array(count * 2);\\n    var iTransform = iFirstTransform;\\n    for (var q = 0; q < count; q++, iTransform += 4) {\\n      var transformArgs = argsArray[iTransform];\\n      positions[q << 1] = transformArgs[4];\\n      positions[(q << 1) + 1] = transformArgs[5];\\n    }\\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\\n    argsArray.splice(iFirstSave, count * 4, args);\\n    return iFirstSave + 1;\\n  });\\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var iFirstSave = context.iCurr - 4;\\n    var pos = (i - iFirstSave) % 5;\\n    switch (pos) {\\n      case 0:\\n        return fnArray[i] === _util.OPS.beginText;\\n      case 1:\\n        return fnArray[i] === _util.OPS.setFont;\\n      case 2:\\n        return fnArray[i] === _util.OPS.setTextMatrix;\\n      case 3:\\n        if (fnArray[i] !== _util.OPS.showText) {\\n          return false;\\n        }\\n        var iFirstSetFont = context.iCurr - 3;\\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\\n          return false;\\n        }\\n        return true;\\n      case 4:\\n        return fnArray[i] === _util.OPS.endText;\\n    }\\n  }, function (context, i) {\\n    var MIN_CHARS_IN_BLOCK = 3;\\n    var MAX_CHARS_IN_BLOCK = 1000;\\n    var fnArray = context.fnArray,\\n        argsArray = context.argsArray;\\n    var curr = context.iCurr;\\n    var iFirstBeginText = curr - 4;\\n    var iFirstSetFont = curr - 3;\\n    var iFirstSetTextMatrix = curr - 2;\\n    var iFirstShowText = curr - 1;\\n    var iFirstEndText = curr;\\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\\n    if (count < MIN_CHARS_IN_BLOCK) {\\n      return i - (i - iFirstBeginText) % 5;\\n    }\\n    var iFirst = iFirstBeginText;\\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\\n      count++;\\n      iFirst -= 5;\\n    }\\n    var iEndText = iFirst + 4;\\n    for (var q = 1; q < count; q++) {\\n      fnArray.splice(iEndText, 3);\\n      argsArray.splice(iEndText, 3);\\n      iEndText += 2;\\n    }\\n    return iEndText + 1;\\n  });\\n  function QueueOptimizer(queue) {\\n    this.queue = queue;\\n    this.state = null;\\n    this.context = {\\n      iCurr: 0,\\n      fnArray: queue.fnArray,\\n      argsArray: queue.argsArray\\n    };\\n    this.match = null;\\n    this.lastProcessed = 0;\\n  }\\n  QueueOptimizer.prototype = {\\n    _optimize: function _optimize() {\\n      var fnArray = this.queue.fnArray;\\n      var i = this.lastProcessed,\\n          ii = fnArray.length;\\n      var state = this.state;\\n      var match = this.match;\\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\\n        this.lastProcessed = ii;\\n        return;\\n      }\\n      var context = this.context;\\n      while (i < ii) {\\n        if (match) {\\n          var iterate = (0, match.iterateFn)(context, i);\\n          if (iterate) {\\n            i++;\\n            continue;\\n          }\\n          i = (0, match.processFn)(context, i + 1);\\n          ii = fnArray.length;\\n          match = null;\\n          state = null;\\n          if (i >= ii) {\\n            break;\\n          }\\n        }\\n        state = (state || InitialState)[fnArray[i]];\\n        if (!state || Array.isArray(state)) {\\n          i++;\\n          continue;\\n        }\\n        context.iCurr = i;\\n        i++;\\n        if (state.checkFn && !(0, state.checkFn)(context)) {\\n          state = null;\\n          continue;\\n        }\\n        match = state;\\n        state = null;\\n      }\\n      this.state = state;\\n      this.match = match;\\n      this.lastProcessed = i;\\n    },\\n    push: function push(fn, args) {\\n      this.queue.fnArray.push(fn);\\n      this.queue.argsArray.push(args);\\n      this._optimize();\\n    },\\n    flush: function flush() {\\n      while (this.match) {\\n        var length = this.queue.fnArray.length;\\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\\n        this.match = null;\\n        this.state = null;\\n        this._optimize();\\n      }\\n    },\\n    reset: function reset() {\\n      this.state = null;\\n      this.match = null;\\n      this.lastProcessed = 0;\\n    }\\n  };\\n  return QueueOptimizer;\\n}();\\nvar NullOptimizer = function NullOptimizerClosure() {\\n  function NullOptimizer(queue) {\\n    this.queue = queue;\\n  }\\n  NullOptimizer.prototype = {\\n    push: function push(fn, args) {\\n      this.queue.fnArray.push(fn);\\n      this.queue.argsArray.push(args);\\n    },\\n    flush: function flush() {}\\n  };\\n  return NullOptimizer;\\n}();\\nvar OperatorList = function OperatorListClosure() {\\n  var CHUNK_SIZE = 1000;\\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\\n  function getTransfers(queue) {\\n    var transfers = [];\\n    var fnArray = queue.fnArray,\\n        argsArray = queue.argsArray;\\n    for (var i = 0, ii = queue.length; i < ii; i++) {\\n      switch (fnArray[i]) {\\n        case _util.OPS.paintInlineImageXObject:\\n        case _util.OPS.paintInlineImageXObjectGroup:\\n        case _util.OPS.paintImageMaskXObject:\\n          var arg = argsArray[i][0];\\n          if (!arg.cached) {\\n            transfers.push(arg.data.buffer);\\n          }\\n          break;\\n      }\\n    }\\n    return transfers;\\n  }\\n  function OperatorList(intent, messageHandler, pageIndex) {\\n    this.messageHandler = messageHandler;\\n    this.fnArray = [];\\n    this.argsArray = [];\\n    if (messageHandler && this.intent !== 'oplist') {\\n      this.optimizer = new QueueOptimizer(this);\\n    } else {\\n      this.optimizer = new NullOptimizer(this);\\n    }\\n    this.dependencies = Object.create(null);\\n    this._totalLength = 0;\\n    this.pageIndex = pageIndex;\\n    this.intent = intent;\\n    this.weight = 0;\\n  }\\n  OperatorList.prototype = {\\n    get length() {\\n      return this.argsArray.length;\\n    },\\n    get totalLength() {\\n      return this._totalLength + this.length;\\n    },\\n    addOp: function addOp(fn, args) {\\n      this.optimizer.push(fn, args);\\n      this.weight++;\\n      if (this.messageHandler) {\\n        if (this.weight >= CHUNK_SIZE) {\\n          this.flush();\\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\\n          this.flush();\\n        }\\n      }\\n    },\\n    addDependency: function addDependency(dependency) {\\n      if (dependency in this.dependencies) {\\n        return;\\n      }\\n      this.dependencies[dependency] = true;\\n      this.addOp(_util.OPS.dependency, [dependency]);\\n    },\\n    addDependencies: function addDependencies(dependencies) {\\n      for (var key in dependencies) {\\n        this.addDependency(key);\\n      }\\n    },\\n    addOpList: function addOpList(opList) {\\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\\n      for (var i = 0, ii = opList.length; i < ii; i++) {\\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\\n      }\\n    },\\n    getIR: function getIR() {\\n      return {\\n        fnArray: this.fnArray,\\n        argsArray: this.argsArray,\\n        length: this.length\\n      };\\n    },\\n    flush: function flush(lastChunk) {\\n      this.optimizer.flush();\\n      var transfers = getTransfers(this);\\n      var length = this.length;\\n      this._totalLength += length;\\n      this.messageHandler.send('RenderPageChunk', {\\n        operatorList: {\\n          fnArray: this.fnArray,\\n          argsArray: this.argsArray,\\n          lastChunk: lastChunk,\\n          length: length\\n        },\\n        pageIndex: this.pageIndex,\\n        intent: this.intent\\n      }, transfers);\\n      this.dependencies = Object.create(null);\\n      this.fnArray.length = 0;\\n      this.argsArray.length = 0;\\n      this.weight = 0;\\n      this.optimizer.reset();\\n    }\\n  };\\n  return OperatorList;\\n}();\\nexports.OperatorList = OperatorList;\\n\\n/***/ }),\\n/* 43 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\\n  t['A'] = 0x0041;\\n  t['AE'] = 0x00C6;\\n  t['AEacute'] = 0x01FC;\\n  t['AEmacron'] = 0x01E2;\\n  t['AEsmall'] = 0xF7E6;\\n  t['Aacute'] = 0x00C1;\\n  t['Aacutesmall'] = 0xF7E1;\\n  t['Abreve'] = 0x0102;\\n  t['Abreveacute'] = 0x1EAE;\\n  t['Abrevecyrillic'] = 0x04D0;\\n  t['Abrevedotbelow'] = 0x1EB6;\\n  t['Abrevegrave'] = 0x1EB0;\\n  t['Abrevehookabove'] = 0x1EB2;\\n  t['Abrevetilde'] = 0x1EB4;\\n  t['Acaron'] = 0x01CD;\\n  t['Acircle'] = 0x24B6;\\n  t['Acircumflex'] = 0x00C2;\\n  t['Acircumflexacute'] = 0x1EA4;\\n  t['Acircumflexdotbelow'] = 0x1EAC;\\n  t['Acircumflexgrave'] = 0x1EA6;\\n  t['Acircumflexhookabove'] = 0x1EA8;\\n  t['Acircumflexsmall'] = 0xF7E2;\\n  t['Acircumflextilde'] = 0x1EAA;\\n  t['Acute'] = 0xF6C9;\\n  t['Acutesmall'] = 0xF7B4;\\n  t['Acyrillic'] = 0x0410;\\n  t['Adblgrave'] = 0x0200;\\n  t['Adieresis'] = 0x00C4;\\n  t['Adieresiscyrillic'] = 0x04D2;\\n  t['Adieresismacron'] = 0x01DE;\\n  t['Adieresissmall'] = 0xF7E4;\\n  t['Adotbelow'] = 0x1EA0;\\n  t['Adotmacron'] = 0x01E0;\\n  t['Agrave'] = 0x00C0;\\n  t['Agravesmall'] = 0xF7E0;\\n  t['Ahookabove'] = 0x1EA2;\\n  t['Aiecyrillic'] = 0x04D4;\\n  t['Ainvertedbreve'] = 0x0202;\\n  t['Alpha'] = 0x0391;\\n  t['Alphatonos'] = 0x0386;\\n  t['Amacron'] = 0x0100;\\n  t['Amonospace'] = 0xFF21;\\n  t['Aogonek'] = 0x0104;\\n  t['Aring'] = 0x00C5;\\n  t['Aringacute'] = 0x01FA;\\n  t['Aringbelow'] = 0x1E00;\\n  t['Aringsmall'] = 0xF7E5;\\n  t['Asmall'] = 0xF761;\\n  t['Atilde'] = 0x00C3;\\n  t['Atildesmall'] = 0xF7E3;\\n  t['Aybarmenian'] = 0x0531;\\n  t['B'] = 0x0042;\\n  t['Bcircle'] = 0x24B7;\\n  t['Bdotaccent'] = 0x1E02;\\n  t['Bdotbelow'] = 0x1E04;\\n  t['Becyrillic'] = 0x0411;\\n  t['Benarmenian'] = 0x0532;\\n  t['Beta'] = 0x0392;\\n  t['Bhook'] = 0x0181;\\n  t['Blinebelow'] = 0x1E06;\\n  t['Bmonospace'] = 0xFF22;\\n  t['Brevesmall'] = 0xF6F4;\\n  t['Bsmall'] = 0xF762;\\n  t['Btopbar'] = 0x0182;\\n  t['C'] = 0x0043;\\n  t['Caarmenian'] = 0x053E;\\n  t['Cacute'] = 0x0106;\\n  t['Caron'] = 0xF6CA;\\n  t['Caronsmall'] = 0xF6F5;\\n  t['Ccaron'] = 0x010C;\\n  t['Ccedilla'] = 0x00C7;\\n  t['Ccedillaacute'] = 0x1E08;\\n  t['Ccedillasmall'] = 0xF7E7;\\n  t['Ccircle'] = 0x24B8;\\n  t['Ccircumflex'] = 0x0108;\\n  t['Cdot'] = 0x010A;\\n  t['Cdotaccent'] = 0x010A;\\n  t['Cedillasmall'] = 0xF7B8;\\n  t['Chaarmenian'] = 0x0549;\\n  t['Cheabkhasiancyrillic'] = 0x04BC;\\n  t['Checyrillic'] = 0x0427;\\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\\n  t['Chedescendercyrillic'] = 0x04B6;\\n  t['Chedieresiscyrillic'] = 0x04F4;\\n  t['Cheharmenian'] = 0x0543;\\n  t['Chekhakassiancyrillic'] = 0x04CB;\\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\\n  t['Chi'] = 0x03A7;\\n  t['Chook'] = 0x0187;\\n  t['Circumflexsmall'] = 0xF6F6;\\n  t['Cmonospace'] = 0xFF23;\\n  t['Coarmenian'] = 0x0551;\\n  t['Csmall'] = 0xF763;\\n  t['D'] = 0x0044;\\n  t['DZ'] = 0x01F1;\\n  t['DZcaron'] = 0x01C4;\\n  t['Daarmenian'] = 0x0534;\\n  t['Dafrican'] = 0x0189;\\n  t['Dcaron'] = 0x010E;\\n  t['Dcedilla'] = 0x1E10;\\n  t['Dcircle'] = 0x24B9;\\n  t['Dcircumflexbelow'] = 0x1E12;\\n  t['Dcroat'] = 0x0110;\\n  t['Ddotaccent'] = 0x1E0A;\\n  t['Ddotbelow'] = 0x1E0C;\\n  t['Decyrillic'] = 0x0414;\\n  t['Deicoptic'] = 0x03EE;\\n  t['Delta'] = 0x2206;\\n  t['Deltagreek'] = 0x0394;\\n  t['Dhook'] = 0x018A;\\n  t['Dieresis'] = 0xF6CB;\\n  t['DieresisAcute'] = 0xF6CC;\\n  t['DieresisGrave'] = 0xF6CD;\\n  t['Dieresissmall'] = 0xF7A8;\\n  t['Digammagreek'] = 0x03DC;\\n  t['Djecyrillic'] = 0x0402;\\n  t['Dlinebelow'] = 0x1E0E;\\n  t['Dmonospace'] = 0xFF24;\\n  t['Dotaccentsmall'] = 0xF6F7;\\n  t['Dslash'] = 0x0110;\\n  t['Dsmall'] = 0xF764;\\n  t['Dtopbar'] = 0x018B;\\n  t['Dz'] = 0x01F2;\\n  t['Dzcaron'] = 0x01C5;\\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\\n  t['Dzecyrillic'] = 0x0405;\\n  t['Dzhecyrillic'] = 0x040F;\\n  t['E'] = 0x0045;\\n  t['Eacute'] = 0x00C9;\\n  t['Eacutesmall'] = 0xF7E9;\\n  t['Ebreve'] = 0x0114;\\n  t['Ecaron'] = 0x011A;\\n  t['Ecedillabreve'] = 0x1E1C;\\n  t['Echarmenian'] = 0x0535;\\n  t['Ecircle'] = 0x24BA;\\n  t['Ecircumflex'] = 0x00CA;\\n  t['Ecircumflexacute'] = 0x1EBE;\\n  t['Ecircumflexbelow'] = 0x1E18;\\n  t['Ecircumflexdotbelow'] = 0x1EC6;\\n  t['Ecircumflexgrave'] = 0x1EC0;\\n  t['Ecircumflexhookabove'] = 0x1EC2;\\n  t['Ecircumflexsmall'] = 0xF7EA;\\n  t['Ecircumflextilde'] = 0x1EC4;\\n  t['Ecyrillic'] = 0x0404;\\n  t['Edblgrave'] = 0x0204;\\n  t['Edieresis'] = 0x00CB;\\n  t['Edieresissmall'] = 0xF7EB;\\n  t['Edot'] = 0x0116;\\n  t['Edotaccent'] = 0x0116;\\n  t['Edotbelow'] = 0x1EB8;\\n  t['Efcyrillic'] = 0x0424;\\n  t['Egrave'] = 0x00C8;\\n  t['Egravesmall'] = 0xF7E8;\\n  t['Eharmenian'] = 0x0537;\\n  t['Ehookabove'] = 0x1EBA;\\n  t['Eightroman'] = 0x2167;\\n  t['Einvertedbreve'] = 0x0206;\\n  t['Eiotifiedcyrillic'] = 0x0464;\\n  t['Elcyrillic'] = 0x041B;\\n  t['Elevenroman'] = 0x216A;\\n  t['Emacron'] = 0x0112;\\n  t['Emacronacute'] = 0x1E16;\\n  t['Emacrongrave'] = 0x1E14;\\n  t['Emcyrillic'] = 0x041C;\\n  t['Emonospace'] = 0xFF25;\\n  t['Encyrillic'] = 0x041D;\\n  t['Endescendercyrillic'] = 0x04A2;\\n  t['Eng'] = 0x014A;\\n  t['Enghecyrillic'] = 0x04A4;\\n  t['Enhookcyrillic'] = 0x04C7;\\n  t['Eogonek'] = 0x0118;\\n  t['Eopen'] = 0x0190;\\n  t['Epsilon'] = 0x0395;\\n  t['Epsilontonos'] = 0x0388;\\n  t['Ercyrillic'] = 0x0420;\\n  t['Ereversed'] = 0x018E;\\n  t['Ereversedcyrillic'] = 0x042D;\\n  t['Escyrillic'] = 0x0421;\\n  t['Esdescendercyrillic'] = 0x04AA;\\n  t['Esh'] = 0x01A9;\\n  t['Esmall'] = 0xF765;\\n  t['Eta'] = 0x0397;\\n  t['Etarmenian'] = 0x0538;\\n  t['Etatonos'] = 0x0389;\\n  t['Eth'] = 0x00D0;\\n  t['Ethsmall'] = 0xF7F0;\\n  t['Etilde'] = 0x1EBC;\\n  t['Etildebelow'] = 0x1E1A;\\n  t['Euro'] = 0x20AC;\\n  t['Ezh'] = 0x01B7;\\n  t['Ezhcaron'] = 0x01EE;\\n  t['Ezhreversed'] = 0x01B8;\\n  t['F'] = 0x0046;\\n  t['Fcircle'] = 0x24BB;\\n  t['Fdotaccent'] = 0x1E1E;\\n  t['Feharmenian'] = 0x0556;\\n  t['Feicoptic'] = 0x03E4;\\n  t['Fhook'] = 0x0191;\\n  t['Fitacyrillic'] = 0x0472;\\n  t['Fiveroman'] = 0x2164;\\n  t['Fmonospace'] = 0xFF26;\\n  t['Fourroman'] = 0x2163;\\n  t['Fsmall'] = 0xF766;\\n  t['G'] = 0x0047;\\n  t['GBsquare'] = 0x3387;\\n  t['Gacute'] = 0x01F4;\\n  t['Gamma'] = 0x0393;\\n  t['Gammaafrican'] = 0x0194;\\n  t['Gangiacoptic'] = 0x03EA;\\n  t['Gbreve'] = 0x011E;\\n  t['Gcaron'] = 0x01E6;\\n  t['Gcedilla'] = 0x0122;\\n  t['Gcircle'] = 0x24BC;\\n  t['Gcircumflex'] = 0x011C;\\n  t['Gcommaaccent'] = 0x0122;\\n  t['Gdot'] = 0x0120;\\n  t['Gdotaccent'] = 0x0120;\\n  t['Gecyrillic'] = 0x0413;\\n  t['Ghadarmenian'] = 0x0542;\\n  t['Ghemiddlehookcyrillic'] = 0x0494;\\n  t['Ghestrokecyrillic'] = 0x0492;\\n  t['Gheupturncyrillic'] = 0x0490;\\n  t['Ghook'] = 0x0193;\\n  t['Gimarmenian'] = 0x0533;\\n  t['Gjecyrillic'] = 0x0403;\\n  t['Gmacron'] = 0x1E20;\\n  t['Gmonospace'] = 0xFF27;\\n  t['Grave'] = 0xF6CE;\\n  t['Gravesmall'] = 0xF760;\\n  t['Gsmall'] = 0xF767;\\n  t['Gsmallhook'] = 0x029B;\\n  t['Gstroke'] = 0x01E4;\\n  t['H'] = 0x0048;\\n  t['H18533'] = 0x25CF;\\n  t['H18543'] = 0x25AA;\\n  t['H18551'] = 0x25AB;\\n  t['H22073'] = 0x25A1;\\n  t['HPsquare'] = 0x33CB;\\n  t['Haabkhasiancyrillic'] = 0x04A8;\\n  t['Hadescendercyrillic'] = 0x04B2;\\n  t['Hardsigncyrillic'] = 0x042A;\\n  t['Hbar'] = 0x0126;\\n  t['Hbrevebelow'] = 0x1E2A;\\n  t['Hcedilla'] = 0x1E28;\\n  t['Hcircle'] = 0x24BD;\\n  t['Hcircumflex'] = 0x0124;\\n  t['Hdieresis'] = 0x1E26;\\n  t['Hdotaccent'] = 0x1E22;\\n  t['Hdotbelow'] = 0x1E24;\\n  t['Hmonospace'] = 0xFF28;\\n  t['Hoarmenian'] = 0x0540;\\n  t['Horicoptic'] = 0x03E8;\\n  t['Hsmall'] = 0xF768;\\n  t['Hungarumlaut'] = 0xF6CF;\\n  t['Hungarumlautsmall'] = 0xF6F8;\\n  t['Hzsquare'] = 0x3390;\\n  t['I'] = 0x0049;\\n  t['IAcyrillic'] = 0x042F;\\n  t['IJ'] = 0x0132;\\n  t['IUcyrillic'] = 0x042E;\\n  t['Iacute'] = 0x00CD;\\n  t['Iacutesmall'] = 0xF7ED;\\n  t['Ibreve'] = 0x012C;\\n  t['Icaron'] = 0x01CF;\\n  t['Icircle'] = 0x24BE;\\n  t['Icircumflex'] = 0x00CE;\\n  t['Icircumflexsmall'] = 0xF7EE;\\n  t['Icyrillic'] = 0x0406;\\n  t['Idblgrave'] = 0x0208;\\n  t['Idieresis'] = 0x00CF;\\n  t['Idieresisacute'] = 0x1E2E;\\n  t['Idieresiscyrillic'] = 0x04E4;\\n  t['Idieresissmall'] = 0xF7EF;\\n  t['Idot'] = 0x0130;\\n  t['Idotaccent'] = 0x0130;\\n  t['Idotbelow'] = 0x1ECA;\\n  t['Iebrevecyrillic'] = 0x04D6;\\n  t['Iecyrillic'] = 0x0415;\\n  t['Ifraktur'] = 0x2111;\\n  t['Igrave'] = 0x00CC;\\n  t['Igravesmall'] = 0xF7EC;\\n  t['Ihookabove'] = 0x1EC8;\\n  t['Iicyrillic'] = 0x0418;\\n  t['Iinvertedbreve'] = 0x020A;\\n  t['Iishortcyrillic'] = 0x0419;\\n  t['Imacron'] = 0x012A;\\n  t['Imacroncyrillic'] = 0x04E2;\\n  t['Imonospace'] = 0xFF29;\\n  t['Iniarmenian'] = 0x053B;\\n  t['Iocyrillic'] = 0x0401;\\n  t['Iogonek'] = 0x012E;\\n  t['Iota'] = 0x0399;\\n  t['Iotaafrican'] = 0x0196;\\n  t['Iotadieresis'] = 0x03AA;\\n  t['Iotatonos'] = 0x038A;\\n  t['Ismall'] = 0xF769;\\n  t['Istroke'] = 0x0197;\\n  t['Itilde'] = 0x0128;\\n  t['Itildebelow'] = 0x1E2C;\\n  t['Izhitsacyrillic'] = 0x0474;\\n  t['Izhitsadblgravecyrillic'] = 0x0476;\\n  t['J'] = 0x004A;\\n  t['Jaarmenian'] = 0x0541;\\n  t['Jcircle'] = 0x24BF;\\n  t['Jcircumflex'] = 0x0134;\\n  t['Jecyrillic'] = 0x0408;\\n  t['Jheharmenian'] = 0x054B;\\n  t['Jmonospace'] = 0xFF2A;\\n  t['Jsmall'] = 0xF76A;\\n  t['K'] = 0x004B;\\n  t['KBsquare'] = 0x3385;\\n  t['KKsquare'] = 0x33CD;\\n  t['Kabashkircyrillic'] = 0x04A0;\\n  t['Kacute'] = 0x1E30;\\n  t['Kacyrillic'] = 0x041A;\\n  t['Kadescendercyrillic'] = 0x049A;\\n  t['Kahookcyrillic'] = 0x04C3;\\n  t['Kappa'] = 0x039A;\\n  t['Kastrokecyrillic'] = 0x049E;\\n  t['Kaverticalstrokecyrillic'] = 0x049C;\\n  t['Kcaron'] = 0x01E8;\\n  t['Kcedilla'] = 0x0136;\\n  t['Kcircle'] = 0x24C0;\\n  t['Kcommaaccent'] = 0x0136;\\n  t['Kdotbelow'] = 0x1E32;\\n  t['Keharmenian'] = 0x0554;\\n  t['Kenarmenian'] = 0x053F;\\n  t['Khacyrillic'] = 0x0425;\\n  t['Kheicoptic'] = 0x03E6;\\n  t['Khook'] = 0x0198;\\n  t['Kjecyrillic'] = 0x040C;\\n  t['Klinebelow'] = 0x1E34;\\n  t['Kmonospace'] = 0xFF2B;\\n  t['Koppacyrillic'] = 0x0480;\\n  t['Koppagreek'] = 0x03DE;\\n  t['Ksicyrillic'] = 0x046E;\\n  t['Ksmall'] = 0xF76B;\\n  t['L'] = 0x004C;\\n  t['LJ'] = 0x01C7;\\n  t['LL'] = 0xF6BF;\\n  t['Lacute'] = 0x0139;\\n  t['Lambda'] = 0x039B;\\n  t['Lcaron'] = 0x013D;\\n  t['Lcedilla'] = 0x013B;\\n  t['Lcircle'] = 0x24C1;\\n  t['Lcircumflexbelow'] = 0x1E3C;\\n  t['Lcommaaccent'] = 0x013B;\\n  t['Ldot'] = 0x013F;\\n  t['Ldotaccent'] = 0x013F;\\n  t['Ldotbelow'] = 0x1E36;\\n  t['Ldotbelowmacron'] = 0x1E38;\\n  t['Liwnarmenian'] = 0x053C;\\n  t['Lj'] = 0x01C8;\\n  t['Ljecyrillic'] = 0x0409;\\n  t['Llinebelow'] = 0x1E3A;\\n  t['Lmonospace'] = 0xFF2C;\\n  t['Lslash'] = 0x0141;\\n  t['Lslashsmall'] = 0xF6F9;\\n  t['Lsmall'] = 0xF76C;\\n  t['M'] = 0x004D;\\n  t['MBsquare'] = 0x3386;\\n  t['Macron'] = 0xF6D0;\\n  t['Macronsmall'] = 0xF7AF;\\n  t['Macute'] = 0x1E3E;\\n  t['Mcircle'] = 0x24C2;\\n  t['Mdotaccent'] = 0x1E40;\\n  t['Mdotbelow'] = 0x1E42;\\n  t['Menarmenian'] = 0x0544;\\n  t['Mmonospace'] = 0xFF2D;\\n  t['Msmall'] = 0xF76D;\\n  t['Mturned'] = 0x019C;\\n  t['Mu'] = 0x039C;\\n  t['N'] = 0x004E;\\n  t['NJ'] = 0x01CA;\\n  t['Nacute'] = 0x0143;\\n  t['Ncaron'] = 0x0147;\\n  t['Ncedilla'] = 0x0145;\\n  t['Ncircle'] = 0x24C3;\\n  t['Ncircumflexbelow'] = 0x1E4A;\\n  t['Ncommaaccent'] = 0x0145;\\n  t['Ndotaccent'] = 0x1E44;\\n  t['Ndotbelow'] = 0x1E46;\\n  t['Nhookleft'] = 0x019D;\\n  t['Nineroman'] = 0x2168;\\n  t['Nj'] = 0x01CB;\\n  t['Njecyrillic'] = 0x040A;\\n  t['Nlinebelow'] = 0x1E48;\\n  t['Nmonospace'] = 0xFF2E;\\n  t['Nowarmenian'] = 0x0546;\\n  t['Nsmall'] = 0xF76E;\\n  t['Ntilde'] = 0x00D1;\\n  t['Ntildesmall'] = 0xF7F1;\\n  t['Nu'] = 0x039D;\\n  t['O'] = 0x004F;\\n  t['OE'] = 0x0152;\\n  t['OEsmall'] = 0xF6FA;\\n  t['Oacute'] = 0x00D3;\\n  t['Oacutesmall'] = 0xF7F3;\\n  t['Obarredcyrillic'] = 0x04E8;\\n  t['Obarreddieresiscyrillic'] = 0x04EA;\\n  t['Obreve'] = 0x014E;\\n  t['Ocaron'] = 0x01D1;\\n  t['Ocenteredtilde'] = 0x019F;\\n  t['Ocircle'] = 0x24C4;\\n  t['Ocircumflex'] = 0x00D4;\\n  t['Ocircumflexacute'] = 0x1ED0;\\n  t['Ocircumflexdotbelow'] = 0x1ED8;\\n  t['Ocircumflexgrave'] = 0x1ED2;\\n  t['Ocircumflexhookabove'] = 0x1ED4;\\n  t['Ocircumflexsmall'] = 0xF7F4;\\n  t['Ocircumflextilde'] = 0x1ED6;\\n  t['Ocyrillic'] = 0x041E;\\n  t['Odblacute'] = 0x0150;\\n  t['Odblgrave'] = 0x020C;\\n  t['Odieresis'] = 0x00D6;\\n  t['Odieresiscyrillic'] = 0x04E6;\\n  t['Odieresissmall'] = 0xF7F6;\\n  t['Odotbelow'] = 0x1ECC;\\n  t['Ogoneksmall'] = 0xF6FB;\\n  t['Ograve'] = 0x00D2;\\n  t['Ogravesmall'] = 0xF7F2;\\n  t['Oharmenian'] = 0x0555;\\n  t['Ohm'] = 0x2126;\\n  t['Ohookabove'] = 0x1ECE;\\n  t['Ohorn'] = 0x01A0;\\n  t['Ohornacute'] = 0x1EDA;\\n  t['Ohorndotbelow'] = 0x1EE2;\\n  t['Ohorngrave'] = 0x1EDC;\\n  t['Ohornhookabove'] = 0x1EDE;\\n  t['Ohorntilde'] = 0x1EE0;\\n  t['Ohungarumlaut'] = 0x0150;\\n  t['Oi'] = 0x01A2;\\n  t['Oinvertedbreve'] = 0x020E;\\n  t['Omacron'] = 0x014C;\\n  t['Omacronacute'] = 0x1E52;\\n  t['Omacrongrave'] = 0x1E50;\\n  t['Omega'] = 0x2126;\\n  t['Omegacyrillic'] = 0x0460;\\n  t['Omegagreek'] = 0x03A9;\\n  t['Omegaroundcyrillic'] = 0x047A;\\n  t['Omegatitlocyrillic'] = 0x047C;\\n  t['Omegatonos'] = 0x038F;\\n  t['Omicron'] = 0x039F;\\n  t['Omicrontonos'] = 0x038C;\\n  t['Omonospace'] = 0xFF2F;\\n  t['Oneroman'] = 0x2160;\\n  t['Oogonek'] = 0x01EA;\\n  t['Oogonekmacron'] = 0x01EC;\\n  t['Oopen'] = 0x0186;\\n  t['Oslash'] = 0x00D8;\\n  t['Oslashacute'] = 0x01FE;\\n  t['Oslashsmall'] = 0xF7F8;\\n  t['Osmall'] = 0xF76F;\\n  t['Ostrokeacute'] = 0x01FE;\\n  t['Otcyrillic'] = 0x047E;\\n  t['Otilde'] = 0x00D5;\\n  t['Otildeacute'] = 0x1E4C;\\n  t['Otildedieresis'] = 0x1E4E;\\n  t['Otildesmall'] = 0xF7F5;\\n  t['P'] = 0x0050;\\n  t['Pacute'] = 0x1E54;\\n  t['Pcircle'] = 0x24C5;\\n  t['Pdotaccent'] = 0x1E56;\\n  t['Pecyrillic'] = 0x041F;\\n  t['Peharmenian'] = 0x054A;\\n  t['Pemiddlehookcyrillic'] = 0x04A6;\\n  t['Phi'] = 0x03A6;\\n  t['Phook'] = 0x01A4;\\n  t['Pi'] = 0x03A0;\\n  t['Piwrarmenian'] = 0x0553;\\n  t['Pmonospace'] = 0xFF30;\\n  t['Psi'] = 0x03A8;\\n  t['Psicyrillic'] = 0x0470;\\n  t['Psmall'] = 0xF770;\\n  t['Q'] = 0x0051;\\n  t['Qcircle'] = 0x24C6;\\n  t['Qmonospace'] = 0xFF31;\\n  t['Qsmall'] = 0xF771;\\n  t['R'] = 0x0052;\\n  t['Raarmenian'] = 0x054C;\\n  t['Racute'] = 0x0154;\\n  t['Rcaron'] = 0x0158;\\n  t['Rcedilla'] = 0x0156;\\n  t['Rcircle'] = 0x24C7;\\n  t['Rcommaaccent'] = 0x0156;\\n  t['Rdblgrave'] = 0x0210;\\n  t['Rdotaccent'] = 0x1E58;\\n  t['Rdotbelow'] = 0x1E5A;\\n  t['Rdotbelowmacron'] = 0x1E5C;\\n  t['Reharmenian'] = 0x0550;\\n  t['Rfraktur'] = 0x211C;\\n  t['Rho'] = 0x03A1;\\n  t['Ringsmall'] = 0xF6FC;\\n  t['Rinvertedbreve'] = 0x0212;\\n  t['Rlinebelow'] = 0x1E5E;\\n  t['Rmonospace'] = 0xFF32;\\n  t['Rsmall'] = 0xF772;\\n  t['Rsmallinverted'] = 0x0281;\\n  t['Rsmallinvertedsuperior'] = 0x02B6;\\n  t['S'] = 0x0053;\\n  t['SF010000'] = 0x250C;\\n  t['SF020000'] = 0x2514;\\n  t['SF030000'] = 0x2510;\\n  t['SF040000'] = 0x2518;\\n  t['SF050000'] = 0x253C;\\n  t['SF060000'] = 0x252C;\\n  t['SF070000'] = 0x2534;\\n  t['SF080000'] = 0x251C;\\n  t['SF090000'] = 0x2524;\\n  t['SF100000'] = 0x2500;\\n  t['SF110000'] = 0x2502;\\n  t['SF190000'] = 0x2561;\\n  t['SF200000'] = 0x2562;\\n  t['SF210000'] = 0x2556;\\n  t['SF220000'] = 0x2555;\\n  t['SF230000'] = 0x2563;\\n  t['SF240000'] = 0x2551;\\n  t['SF250000'] = 0x2557;\\n  t['SF260000'] = 0x255D;\\n  t['SF270000'] = 0x255C;\\n  t['SF280000'] = 0x255B;\\n  t['SF360000'] = 0x255E;\\n  t['SF370000'] = 0x255F;\\n  t['SF380000'] = 0x255A;\\n  t['SF390000'] = 0x2554;\\n  t['SF400000'] = 0x2569;\\n  t['SF410000'] = 0x2566;\\n  t['SF420000'] = 0x2560;\\n  t['SF430000'] = 0x2550;\\n  t['SF440000'] = 0x256C;\\n  t['SF450000'] = 0x2567;\\n  t['SF460000'] = 0x2568;\\n  t['SF470000'] = 0x2564;\\n  t['SF480000'] = 0x2565;\\n  t['SF490000'] = 0x2559;\\n  t['SF500000'] = 0x2558;\\n  t['SF510000'] = 0x2552;\\n  t['SF520000'] = 0x2553;\\n  t['SF530000'] = 0x256B;\\n  t['SF540000'] = 0x256A;\\n  t['Sacute'] = 0x015A;\\n  t['Sacutedotaccent'] = 0x1E64;\\n  t['Sampigreek'] = 0x03E0;\\n  t['Scaron'] = 0x0160;\\n  t['Scarondotaccent'] = 0x1E66;\\n  t['Scaronsmall'] = 0xF6FD;\\n  t['Scedilla'] = 0x015E;\\n  t['Schwa'] = 0x018F;\\n  t['Schwacyrillic'] = 0x04D8;\\n  t['Schwadieresiscyrillic'] = 0x04DA;\\n  t['Scircle'] = 0x24C8;\\n  t['Scircumflex'] = 0x015C;\\n  t['Scommaaccent'] = 0x0218;\\n  t['Sdotaccent'] = 0x1E60;\\n  t['Sdotbelow'] = 0x1E62;\\n  t['Sdotbelowdotaccent'] = 0x1E68;\\n  t['Seharmenian'] = 0x054D;\\n  t['Sevenroman'] = 0x2166;\\n  t['Shaarmenian'] = 0x0547;\\n  t['Shacyrillic'] = 0x0428;\\n  t['Shchacyrillic'] = 0x0429;\\n  t['Sheicoptic'] = 0x03E2;\\n  t['Shhacyrillic'] = 0x04BA;\\n  t['Shimacoptic'] = 0x03EC;\\n  t['Sigma'] = 0x03A3;\\n  t['Sixroman'] = 0x2165;\\n  t['Smonospace'] = 0xFF33;\\n  t['Softsigncyrillic'] = 0x042C;\\n  t['Ssmall'] = 0xF773;\\n  t['Stigmagreek'] = 0x03DA;\\n  t['T'] = 0x0054;\\n  t['Tau'] = 0x03A4;\\n  t['Tbar'] = 0x0166;\\n  t['Tcaron'] = 0x0164;\\n  t['Tcedilla'] = 0x0162;\\n  t['Tcircle'] = 0x24C9;\\n  t['Tcircumflexbelow'] = 0x1E70;\\n  t['Tcommaaccent'] = 0x0162;\\n  t['Tdotaccent'] = 0x1E6A;\\n  t['Tdotbelow'] = 0x1E6C;\\n  t['Tecyrillic'] = 0x0422;\\n  t['Tedescendercyrillic'] = 0x04AC;\\n  t['Tenroman'] = 0x2169;\\n  t['Tetsecyrillic'] = 0x04B4;\\n  t['Theta'] = 0x0398;\\n  t['Thook'] = 0x01AC;\\n  t['Thorn'] = 0x00DE;\\n  t['Thornsmall'] = 0xF7FE;\\n  t['Threeroman'] = 0x2162;\\n  t['Tildesmall'] = 0xF6FE;\\n  t['Tiwnarmenian'] = 0x054F;\\n  t['Tlinebelow'] = 0x1E6E;\\n  t['Tmonospace'] = 0xFF34;\\n  t['Toarmenian'] = 0x0539;\\n  t['Tonefive'] = 0x01BC;\\n  t['Tonesix'] = 0x0184;\\n  t['Tonetwo'] = 0x01A7;\\n  t['Tretroflexhook'] = 0x01AE;\\n  t['Tsecyrillic'] = 0x0426;\\n  t['Tshecyrillic'] = 0x040B;\\n  t['Tsmall'] = 0xF774;\\n  t['Twelveroman'] = 0x216B;\\n  t['Tworoman'] = 0x2161;\\n  t['U'] = 0x0055;\\n  t['Uacute'] = 0x00DA;\\n  t['Uacutesmall'] = 0xF7FA;\\n  t['Ubreve'] = 0x016C;\\n  t['Ucaron'] = 0x01D3;\\n  t['Ucircle'] = 0x24CA;\\n  t['Ucircumflex'] = 0x00DB;\\n  t['Ucircumflexbelow'] = 0x1E76;\\n  t['Ucircumflexsmall'] = 0xF7FB;\\n  t['Ucyrillic'] = 0x0423;\\n  t['Udblacute'] = 0x0170;\\n  t['Udblgrave'] = 0x0214;\\n  t['Udieresis'] = 0x00DC;\\n  t['Udieresisacute'] = 0x01D7;\\n  t['Udieresisbelow'] = 0x1E72;\\n  t['Udieresiscaron'] = 0x01D9;\\n  t['Udieresiscyrillic'] = 0x04F0;\\n  t['Udieresisgrave'] = 0x01DB;\\n  t['Udieresismacron'] = 0x01D5;\\n  t['Udieresissmall'] = 0xF7FC;\\n  t['Udotbelow'] = 0x1EE4;\\n  t['Ugrave'] = 0x00D9;\\n  t['Ugravesmall'] = 0xF7F9;\\n  t['Uhookabove'] = 0x1EE6;\\n  t['Uhorn'] = 0x01AF;\\n  t['Uhornacute'] = 0x1EE8;\\n  t['Uhorndotbelow'] = 0x1EF0;\\n  t['Uhorngrave'] = 0x1EEA;\\n  t['Uhornhookabove'] = 0x1EEC;\\n  t['Uhorntilde'] = 0x1EEE;\\n  t['Uhungarumlaut'] = 0x0170;\\n  t['Uhungarumlautcyrillic'] = 0x04F2;\\n  t['Uinvertedbreve'] = 0x0216;\\n  t['Ukcyrillic'] = 0x0478;\\n  t['Umacron'] = 0x016A;\\n  t['Umacroncyrillic'] = 0x04EE;\\n  t['Umacrondieresis'] = 0x1E7A;\\n  t['Umonospace'] = 0xFF35;\\n  t['Uogonek'] = 0x0172;\\n  t['Upsilon'] = 0x03A5;\\n  t['Upsilon1'] = 0x03D2;\\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\\n  t['Upsilonafrican'] = 0x01B1;\\n  t['Upsilondieresis'] = 0x03AB;\\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\\n  t['Upsilonhooksymbol'] = 0x03D2;\\n  t['Upsilontonos'] = 0x038E;\\n  t['Uring'] = 0x016E;\\n  t['Ushortcyrillic'] = 0x040E;\\n  t['Usmall'] = 0xF775;\\n  t['Ustraightcyrillic'] = 0x04AE;\\n  t['Ustraightstrokecyrillic'] = 0x04B0;\\n  t['Utilde'] = 0x0168;\\n  t['Utildeacute'] = 0x1E78;\\n  t['Utildebelow'] = 0x1E74;\\n  t['V'] = 0x0056;\\n  t['Vcircle'] = 0x24CB;\\n  t['Vdotbelow'] = 0x1E7E;\\n  t['Vecyrillic'] = 0x0412;\\n  t['Vewarmenian'] = 0x054E;\\n  t['Vhook'] = 0x01B2;\\n  t['Vmonospace'] = 0xFF36;\\n  t['Voarmenian'] = 0x0548;\\n  t['Vsmall'] = 0xF776;\\n  t['Vtilde'] = 0x1E7C;\\n  t['W'] = 0x0057;\\n  t['Wacute'] = 0x1E82;\\n  t['Wcircle'] = 0x24CC;\\n  t['Wcircumflex'] = 0x0174;\\n  t['Wdieresis'] = 0x1E84;\\n  t['Wdotaccent'] = 0x1E86;\\n  t['Wdotbelow'] = 0x1E88;\\n  t['Wgrave'] = 0x1E80;\\n  t['Wmonospace'] = 0xFF37;\\n  t['Wsmall'] = 0xF777;\\n  t['X'] = 0x0058;\\n  t['Xcircle'] = 0x24CD;\\n  t['Xdieresis'] = 0x1E8C;\\n  t['Xdotaccent'] = 0x1E8A;\\n  t['Xeharmenian'] = 0x053D;\\n  t['Xi'] = 0x039E;\\n  t['Xmonospace'] = 0xFF38;\\n  t['Xsmall'] = 0xF778;\\n  t['Y'] = 0x0059;\\n  t['Yacute'] = 0x00DD;\\n  t['Yacutesmall'] = 0xF7FD;\\n  t['Yatcyrillic'] = 0x0462;\\n  t['Ycircle'] = 0x24CE;\\n  t['Ycircumflex'] = 0x0176;\\n  t['Ydieresis'] = 0x0178;\\n  t['Ydieresissmall'] = 0xF7FF;\\n  t['Ydotaccent'] = 0x1E8E;\\n  t['Ydotbelow'] = 0x1EF4;\\n  t['Yericyrillic'] = 0x042B;\\n  t['Yerudieresiscyrillic'] = 0x04F8;\\n  t['Ygrave'] = 0x1EF2;\\n  t['Yhook'] = 0x01B3;\\n  t['Yhookabove'] = 0x1EF6;\\n  t['Yiarmenian'] = 0x0545;\\n  t['Yicyrillic'] = 0x0407;\\n  t['Yiwnarmenian'] = 0x0552;\\n  t['Ymonospace'] = 0xFF39;\\n  t['Ysmall'] = 0xF779;\\n  t['Ytilde'] = 0x1EF8;\\n  t['Yusbigcyrillic'] = 0x046A;\\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\\n  t['Yuslittlecyrillic'] = 0x0466;\\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\\n  t['Z'] = 0x005A;\\n  t['Zaarmenian'] = 0x0536;\\n  t['Zacute'] = 0x0179;\\n  t['Zcaron'] = 0x017D;\\n  t['Zcaronsmall'] = 0xF6FF;\\n  t['Zcircle'] = 0x24CF;\\n  t['Zcircumflex'] = 0x1E90;\\n  t['Zdot'] = 0x017B;\\n  t['Zdotaccent'] = 0x017B;\\n  t['Zdotbelow'] = 0x1E92;\\n  t['Zecyrillic'] = 0x0417;\\n  t['Zedescendercyrillic'] = 0x0498;\\n  t['Zedieresiscyrillic'] = 0x04DE;\\n  t['Zeta'] = 0x0396;\\n  t['Zhearmenian'] = 0x053A;\\n  t['Zhebrevecyrillic'] = 0x04C1;\\n  t['Zhecyrillic'] = 0x0416;\\n  t['Zhedescendercyrillic'] = 0x0496;\\n  t['Zhedieresiscyrillic'] = 0x04DC;\\n  t['Zlinebelow'] = 0x1E94;\\n  t['Zmonospace'] = 0xFF3A;\\n  t['Zsmall'] = 0xF77A;\\n  t['Zstroke'] = 0x01B5;\\n  t['a'] = 0x0061;\\n  t['aabengali'] = 0x0986;\\n  t['aacute'] = 0x00E1;\\n  t['aadeva'] = 0x0906;\\n  t['aagujarati'] = 0x0A86;\\n  t['aagurmukhi'] = 0x0A06;\\n  t['aamatragurmukhi'] = 0x0A3E;\\n  t['aarusquare'] = 0x3303;\\n  t['aavowelsignbengali'] = 0x09BE;\\n  t['aavowelsigndeva'] = 0x093E;\\n  t['aavowelsigngujarati'] = 0x0ABE;\\n  t['abbreviationmarkarmenian'] = 0x055F;\\n  t['abbreviationsigndeva'] = 0x0970;\\n  t['abengali'] = 0x0985;\\n  t['abopomofo'] = 0x311A;\\n  t['abreve'] = 0x0103;\\n  t['abreveacute'] = 0x1EAF;\\n  t['abrevecyrillic'] = 0x04D1;\\n  t['abrevedotbelow'] = 0x1EB7;\\n  t['abrevegrave'] = 0x1EB1;\\n  t['abrevehookabove'] = 0x1EB3;\\n  t['abrevetilde'] = 0x1EB5;\\n  t['acaron'] = 0x01CE;\\n  t['acircle'] = 0x24D0;\\n  t['acircumflex'] = 0x00E2;\\n  t['acircumflexacute'] = 0x1EA5;\\n  t['acircumflexdotbelow'] = 0x1EAD;\\n  t['acircumflexgrave'] = 0x1EA7;\\n  t['acircumflexhookabove'] = 0x1EA9;\\n  t['acircumflextilde'] = 0x1EAB;\\n  t['acute'] = 0x00B4;\\n  t['acutebelowcmb'] = 0x0317;\\n  t['acutecmb'] = 0x0301;\\n  t['acutecomb'] = 0x0301;\\n  t['acutedeva'] = 0x0954;\\n  t['acutelowmod'] = 0x02CF;\\n  t['acutetonecmb'] = 0x0341;\\n  t['acyrillic'] = 0x0430;\\n  t['adblgrave'] = 0x0201;\\n  t['addakgurmukhi'] = 0x0A71;\\n  t['adeva'] = 0x0905;\\n  t['adieresis'] = 0x00E4;\\n  t['adieresiscyrillic'] = 0x04D3;\\n  t['adieresismacron'] = 0x01DF;\\n  t['adotbelow'] = 0x1EA1;\\n  t['adotmacron'] = 0x01E1;\\n  t['ae'] = 0x00E6;\\n  t['aeacute'] = 0x01FD;\\n  t['aekorean'] = 0x3150;\\n  t['aemacron'] = 0x01E3;\\n  t['afii00208'] = 0x2015;\\n  t['afii08941'] = 0x20A4;\\n  t['afii10017'] = 0x0410;\\n  t['afii10018'] = 0x0411;\\n  t['afii10019'] = 0x0412;\\n  t['afii10020'] = 0x0413;\\n  t['afii10021'] = 0x0414;\\n  t['afii10022'] = 0x0415;\\n  t['afii10023'] = 0x0401;\\n  t['afii10024'] = 0x0416;\\n  t['afii10025'] = 0x0417;\\n  t['afii10026'] = 0x0418;\\n  t['afii10027'] = 0x0419;\\n  t['afii10028'] = 0x041A;\\n  t['afii10029'] = 0x041B;\\n  t['afii10030'] = 0x041C;\\n  t['afii10031'] = 0x041D;\\n  t['afii10032'] = 0x041E;\\n  t['afii10033'] = 0x041F;\\n  t['afii10034'] = 0x0420;\\n  t['afii10035'] = 0x0421;\\n  t['afii10036'] = 0x0422;\\n  t['afii10037'] = 0x0423;\\n  t['afii10038'] = 0x0424;\\n  t['afii10039'] = 0x0425;\\n  t['afii10040'] = 0x0426;\\n  t['afii10041'] = 0x0427;\\n  t['afii10042'] = 0x0428;\\n  t['afii10043'] = 0x0429;\\n  t['afii10044'] = 0x042A;\\n  t['afii10045'] = 0x042B;\\n  t['afii10046'] = 0x042C;\\n  t['afii10047'] = 0x042D;\\n  t['afii10048'] = 0x042E;\\n  t['afii10049'] = 0x042F;\\n  t['afii10050'] = 0x0490;\\n  t['afii10051'] = 0x0402;\\n  t['afii10052'] = 0x0403;\\n  t['afii10053'] = 0x0404;\\n  t['afii10054'] = 0x0405;\\n  t['afii10055'] = 0x0406;\\n  t['afii10056'] = 0x0407;\\n  t['afii10057'] = 0x0408;\\n  t['afii10058'] = 0x0409;\\n  t['afii10059'] = 0x040A;\\n  t['afii10060'] = 0x040B;\\n  t['afii10061'] = 0x040C;\\n  t['afii10062'] = 0x040E;\\n  t['afii10063'] = 0xF6C4;\\n  t['afii10064'] = 0xF6C5;\\n  t['afii10065'] = 0x0430;\\n  t['afii10066'] = 0x0431;\\n  t['afii10067'] = 0x0432;\\n  t['afii10068'] = 0x0433;\\n  t['afii10069'] = 0x0434;\\n  t['afii10070'] = 0x0435;\\n  t['afii10071'] = 0x0451;\\n  t['afii10072'] = 0x0436;\\n  t['afii10073'] = 0x0437;\\n  t['afii10074'] = 0x0438;\\n  t['afii10075'] = 0x0439;\\n  t['afii10076'] = 0x043A;\\n  t['afii10077'] = 0x043B;\\n  t['afii10078'] = 0x043C;\\n  t['afii10079'] = 0x043D;\\n  t['afii10080'] = 0x043E;\\n  t['afii10081'] = 0x043F;\\n  t['afii10082'] = 0x0440;\\n  t['afii10083'] = 0x0441;\\n  t['afii10084'] = 0x0442;\\n  t['afii10085'] = 0x0443;\\n  t['afii10086'] = 0x0444;\\n  t['afii10087'] = 0x0445;\\n  t['afii10088'] = 0x0446;\\n  t['afii10089'] = 0x0447;\\n  t['afii10090'] = 0x0448;\\n  t['afii10091'] = 0x0449;\\n  t['afii10092'] = 0x044A;\\n  t['afii10093'] = 0x044B;\\n  t['afii10094'] = 0x044C;\\n  t['afii10095'] = 0x044D;\\n  t['afii10096'] = 0x044E;\\n  t['afii10097'] = 0x044F;\\n  t['afii10098'] = 0x0491;\\n  t['afii10099'] = 0x0452;\\n  t['afii10100'] = 0x0453;\\n  t['afii10101'] = 0x0454;\\n  t['afii10102'] = 0x0455;\\n  t['afii10103'] = 0x0456;\\n  t['afii10104'] = 0x0457;\\n  t['afii10105'] = 0x0458;\\n  t['afii10106'] = 0x0459;\\n  t['afii10107'] = 0x045A;\\n  t['afii10108'] = 0x045B;\\n  t['afii10109'] = 0x045C;\\n  t['afii10110'] = 0x045E;\\n  t['afii10145'] = 0x040F;\\n  t['afii10146'] = 0x0462;\\n  t['afii10147'] = 0x0472;\\n  t['afii10148'] = 0x0474;\\n  t['afii10192'] = 0xF6C6;\\n  t['afii10193'] = 0x045F;\\n  t['afii10194'] = 0x0463;\\n  t['afii10195'] = 0x0473;\\n  t['afii10196'] = 0x0475;\\n  t['afii10831'] = 0xF6C7;\\n  t['afii10832'] = 0xF6C8;\\n  t['afii10846'] = 0x04D9;\\n  t['afii299'] = 0x200E;\\n  t['afii300'] = 0x200F;\\n  t['afii301'] = 0x200D;\\n  t['afii57381'] = 0x066A;\\n  t['afii57388'] = 0x060C;\\n  t['afii57392'] = 0x0660;\\n  t['afii57393'] = 0x0661;\\n  t['afii57394'] = 0x0662;\\n  t['afii57395'] = 0x0663;\\n  t['afii57396'] = 0x0664;\\n  t['afii57397'] = 0x0665;\\n  t['afii57398'] = 0x0666;\\n  t['afii57399'] = 0x0667;\\n  t['afii57400'] = 0x0668;\\n  t['afii57401'] = 0x0669;\\n  t['afii57403'] = 0x061B;\\n  t['afii57407'] = 0x061F;\\n  t['afii57409'] = 0x0621;\\n  t['afii57410'] = 0x0622;\\n  t['afii57411'] = 0x0623;\\n  t['afii57412'] = 0x0624;\\n  t['afii57413'] = 0x0625;\\n  t['afii57414'] = 0x0626;\\n  t['afii57415'] = 0x0627;\\n  t['afii57416'] = 0x0628;\\n  t['afii57417'] = 0x0629;\\n  t['afii57418'] = 0x062A;\\n  t['afii57419'] = 0x062B;\\n  t['afii57420'] = 0x062C;\\n  t['afii57421'] = 0x062D;\\n  t['afii57422'] = 0x062E;\\n  t['afii57423'] = 0x062F;\\n  t['afii57424'] = 0x0630;\\n  t['afii57425'] = 0x0631;\\n  t['afii57426'] = 0x0632;\\n  t['afii57427'] = 0x0633;\\n  t['afii57428'] = 0x0634;\\n  t['afii57429'] = 0x0635;\\n  t['afii57430'] = 0x0636;\\n  t['afii57431'] = 0x0637;\\n  t['afii57432'] = 0x0638;\\n  t['afii57433'] = 0x0639;\\n  t['afii57434'] = 0x063A;\\n  t['afii57440'] = 0x0640;\\n  t['afii57441'] = 0x0641;\\n  t['afii57442'] = 0x0642;\\n  t['afii57443'] = 0x0643;\\n  t['afii57444'] = 0x0644;\\n  t['afii57445'] = 0x0645;\\n  t['afii57446'] = 0x0646;\\n  t['afii57448'] = 0x0648;\\n  t['afii57449'] = 0x0649;\\n  t['afii57450'] = 0x064A;\\n  t['afii57451'] = 0x064B;\\n  t['afii57452'] = 0x064C;\\n  t['afii57453'] = 0x064D;\\n  t['afii57454'] = 0x064E;\\n  t['afii57455'] = 0x064F;\\n  t['afii57456'] = 0x0650;\\n  t['afii57457'] = 0x0651;\\n  t['afii57458'] = 0x0652;\\n  t['afii57470'] = 0x0647;\\n  t['afii57505'] = 0x06A4;\\n  t['afii57506'] = 0x067E;\\n  t['afii57507'] = 0x0686;\\n  t['afii57508'] = 0x0698;\\n  t['afii57509'] = 0x06AF;\\n  t['afii57511'] = 0x0679;\\n  t['afii57512'] = 0x0688;\\n  t['afii57513'] = 0x0691;\\n  t['afii57514'] = 0x06BA;\\n  t['afii57519'] = 0x06D2;\\n  t['afii57534'] = 0x06D5;\\n  t['afii57636'] = 0x20AA;\\n  t['afii57645'] = 0x05BE;\\n  t['afii57658'] = 0x05C3;\\n  t['afii57664'] = 0x05D0;\\n  t['afii57665'] = 0x05D1;\\n  t['afii57666'] = 0x05D2;\\n  t['afii57667'] = 0x05D3;\\n  t['afii57668'] = 0x05D4;\\n  t['afii57669'] = 0x05D5;\\n  t['afii57670'] = 0x05D6;\\n  t['afii57671'] = 0x05D7;\\n  t['afii57672'] = 0x05D8;\\n  t['afii57673'] = 0x05D9;\\n  t['afii57674'] = 0x05DA;\\n  t['afii57675'] = 0x05DB;\\n  t['afii57676'] = 0x05DC;\\n  t['afii57677'] = 0x05DD;\\n  t['afii57678'] = 0x05DE;\\n  t['afii57679'] = 0x05DF;\\n  t['afii57680'] = 0x05E0;\\n  t['afii57681'] = 0x05E1;\\n  t['afii57682'] = 0x05E2;\\n  t['afii57683'] = 0x05E3;\\n  t['afii57684'] = 0x05E4;\\n  t['afii57685'] = 0x05E5;\\n  t['afii57686'] = 0x05E6;\\n  t['afii57687'] = 0x05E7;\\n  t['afii57688'] = 0x05E8;\\n  t['afii57689'] = 0x05E9;\\n  t['afii57690'] = 0x05EA;\\n  t['afii57694'] = 0xFB2A;\\n  t['afii57695'] = 0xFB2B;\\n  t['afii57700'] = 0xFB4B;\\n  t['afii57705'] = 0xFB1F;\\n  t['afii57716'] = 0x05F0;\\n  t['afii57717'] = 0x05F1;\\n  t['afii57718'] = 0x05F2;\\n  t['afii57723'] = 0xFB35;\\n  t['afii57793'] = 0x05B4;\\n  t['afii57794'] = 0x05B5;\\n  t['afii57795'] = 0x05B6;\\n  t['afii57796'] = 0x05BB;\\n  t['afii57797'] = 0x05B8;\\n  t['afii57798'] = 0x05B7;\\n  t['afii57799'] = 0x05B0;\\n  t['afii57800'] = 0x05B2;\\n  t['afii57801'] = 0x05B1;\\n  t['afii57802'] = 0x05B3;\\n  t['afii57803'] = 0x05C2;\\n  t['afii57804'] = 0x05C1;\\n  t['afii57806'] = 0x05B9;\\n  t['afii57807'] = 0x05BC;\\n  t['afii57839'] = 0x05BD;\\n  t['afii57841'] = 0x05BF;\\n  t['afii57842'] = 0x05C0;\\n  t['afii57929'] = 0x02BC;\\n  t['afii61248'] = 0x2105;\\n  t['afii61289'] = 0x2113;\\n  t['afii61352'] = 0x2116;\\n  t['afii61573'] = 0x202C;\\n  t['afii61574'] = 0x202D;\\n  t['afii61575'] = 0x202E;\\n  t['afii61664'] = 0x200C;\\n  t['afii63167'] = 0x066D;\\n  t['afii64937'] = 0x02BD;\\n  t['agrave'] = 0x00E0;\\n  t['agujarati'] = 0x0A85;\\n  t['agurmukhi'] = 0x0A05;\\n  t['ahiragana'] = 0x3042;\\n  t['ahookabove'] = 0x1EA3;\\n  t['aibengali'] = 0x0990;\\n  t['aibopomofo'] = 0x311E;\\n  t['aideva'] = 0x0910;\\n  t['aiecyrillic'] = 0x04D5;\\n  t['aigujarati'] = 0x0A90;\\n  t['aigurmukhi'] = 0x0A10;\\n  t['aimatragurmukhi'] = 0x0A48;\\n  t['ainarabic'] = 0x0639;\\n  t['ainfinalarabic'] = 0xFECA;\\n  t['aininitialarabic'] = 0xFECB;\\n  t['ainmedialarabic'] = 0xFECC;\\n  t['ainvertedbreve'] = 0x0203;\\n  t['aivowelsignbengali'] = 0x09C8;\\n  t['aivowelsigndeva'] = 0x0948;\\n  t['aivowelsigngujarati'] = 0x0AC8;\\n  t['akatakana'] = 0x30A2;\\n  t['akatakanahalfwidth'] = 0xFF71;\\n  t['akorean'] = 0x314F;\\n  t['alef'] = 0x05D0;\\n  t['alefarabic'] = 0x0627;\\n  t['alefdageshhebrew'] = 0xFB30;\\n  t['aleffinalarabic'] = 0xFE8E;\\n  t['alefhamzaabovearabic'] = 0x0623;\\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\\n  t['alefhamzabelowarabic'] = 0x0625;\\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\\n  t['alefhebrew'] = 0x05D0;\\n  t['aleflamedhebrew'] = 0xFB4F;\\n  t['alefmaddaabovearabic'] = 0x0622;\\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\\n  t['alefmaksuraarabic'] = 0x0649;\\n  t['alefmaksurafinalarabic'] = 0xFEF0;\\n  t['alefmaksurainitialarabic'] = 0xFEF3;\\n  t['alefmaksuramedialarabic'] = 0xFEF4;\\n  t['alefpatahhebrew'] = 0xFB2E;\\n  t['alefqamatshebrew'] = 0xFB2F;\\n  t['aleph'] = 0x2135;\\n  t['allequal'] = 0x224C;\\n  t['alpha'] = 0x03B1;\\n  t['alphatonos'] = 0x03AC;\\n  t['amacron'] = 0x0101;\\n  t['amonospace'] = 0xFF41;\\n  t['ampersand'] = 0x0026;\\n  t['ampersandmonospace'] = 0xFF06;\\n  t['ampersandsmall'] = 0xF726;\\n  t['amsquare'] = 0x33C2;\\n  t['anbopomofo'] = 0x3122;\\n  t['angbopomofo'] = 0x3124;\\n  t['angbracketleft'] = 0x3008;\\n  t['angbracketright'] = 0x3009;\\n  t['angkhankhuthai'] = 0x0E5A;\\n  t['angle'] = 0x2220;\\n  t['anglebracketleft'] = 0x3008;\\n  t['anglebracketleftvertical'] = 0xFE3F;\\n  t['anglebracketright'] = 0x3009;\\n  t['anglebracketrightvertical'] = 0xFE40;\\n  t['angleleft'] = 0x2329;\\n  t['angleright'] = 0x232A;\\n  t['angstrom'] = 0x212B;\\n  t['anoteleia'] = 0x0387;\\n  t['anudattadeva'] = 0x0952;\\n  t['anusvarabengali'] = 0x0982;\\n  t['anusvaradeva'] = 0x0902;\\n  t['anusvaragujarati'] = 0x0A82;\\n  t['aogonek'] = 0x0105;\\n  t['apaatosquare'] = 0x3300;\\n  t['aparen'] = 0x249C;\\n  t['apostrophearmenian'] = 0x055A;\\n  t['apostrophemod'] = 0x02BC;\\n  t['apple'] = 0xF8FF;\\n  t['approaches'] = 0x2250;\\n  t['approxequal'] = 0x2248;\\n  t['approxequalorimage'] = 0x2252;\\n  t['approximatelyequal'] = 0x2245;\\n  t['araeaekorean'] = 0x318E;\\n  t['araeakorean'] = 0x318D;\\n  t['arc'] = 0x2312;\\n  t['arighthalfring'] = 0x1E9A;\\n  t['aring'] = 0x00E5;\\n  t['aringacute'] = 0x01FB;\\n  t['aringbelow'] = 0x1E01;\\n  t['arrowboth'] = 0x2194;\\n  t['arrowdashdown'] = 0x21E3;\\n  t['arrowdashleft'] = 0x21E0;\\n  t['arrowdashright'] = 0x21E2;\\n  t['arrowdashup'] = 0x21E1;\\n  t['arrowdblboth'] = 0x21D4;\\n  t['arrowdbldown'] = 0x21D3;\\n  t['arrowdblleft'] = 0x21D0;\\n  t['arrowdblright'] = 0x21D2;\\n  t['arrowdblup'] = 0x21D1;\\n  t['arrowdown'] = 0x2193;\\n  t['arrowdownleft'] = 0x2199;\\n  t['arrowdownright'] = 0x2198;\\n  t['arrowdownwhite'] = 0x21E9;\\n  t['arrowheaddownmod'] = 0x02C5;\\n  t['arrowheadleftmod'] = 0x02C2;\\n  t['arrowheadrightmod'] = 0x02C3;\\n  t['arrowheadupmod'] = 0x02C4;\\n  t['arrowhorizex'] = 0xF8E7;\\n  t['arrowleft'] = 0x2190;\\n  t['arrowleftdbl'] = 0x21D0;\\n  t['arrowleftdblstroke'] = 0x21CD;\\n  t['arrowleftoverright'] = 0x21C6;\\n  t['arrowleftwhite'] = 0x21E6;\\n  t['arrowright'] = 0x2192;\\n  t['arrowrightdblstroke'] = 0x21CF;\\n  t['arrowrightheavy'] = 0x279E;\\n  t['arrowrightoverleft'] = 0x21C4;\\n  t['arrowrightwhite'] = 0x21E8;\\n  t['arrowtableft'] = 0x21E4;\\n  t['arrowtabright'] = 0x21E5;\\n  t['arrowup'] = 0x2191;\\n  t['arrowupdn'] = 0x2195;\\n  t['arrowupdnbse'] = 0x21A8;\\n  t['arrowupdownbase'] = 0x21A8;\\n  t['arrowupleft'] = 0x2196;\\n  t['arrowupleftofdown'] = 0x21C5;\\n  t['arrowupright'] = 0x2197;\\n  t['arrowupwhite'] = 0x21E7;\\n  t['arrowvertex'] = 0xF8E6;\\n  t['asciicircum'] = 0x005E;\\n  t['asciicircummonospace'] = 0xFF3E;\\n  t['asciitilde'] = 0x007E;\\n  t['asciitildemonospace'] = 0xFF5E;\\n  t['ascript'] = 0x0251;\\n  t['ascriptturned'] = 0x0252;\\n  t['asmallhiragana'] = 0x3041;\\n  t['asmallkatakana'] = 0x30A1;\\n  t['asmallkatakanahalfwidth'] = 0xFF67;\\n  t['asterisk'] = 0x002A;\\n  t['asteriskaltonearabic'] = 0x066D;\\n  t['asteriskarabic'] = 0x066D;\\n  t['asteriskmath'] = 0x2217;\\n  t['asteriskmonospace'] = 0xFF0A;\\n  t['asterisksmall'] = 0xFE61;\\n  t['asterism'] = 0x2042;\\n  t['asuperior'] = 0xF6E9;\\n  t['asymptoticallyequal'] = 0x2243;\\n  t['at'] = 0x0040;\\n  t['atilde'] = 0x00E3;\\n  t['atmonospace'] = 0xFF20;\\n  t['atsmall'] = 0xFE6B;\\n  t['aturned'] = 0x0250;\\n  t['aubengali'] = 0x0994;\\n  t['aubopomofo'] = 0x3120;\\n  t['audeva'] = 0x0914;\\n  t['augujarati'] = 0x0A94;\\n  t['augurmukhi'] = 0x0A14;\\n  t['aulengthmarkbengali'] = 0x09D7;\\n  t['aumatragurmukhi'] = 0x0A4C;\\n  t['auvowelsignbengali'] = 0x09CC;\\n  t['auvowelsigndeva'] = 0x094C;\\n  t['auvowelsigngujarati'] = 0x0ACC;\\n  t['avagrahadeva'] = 0x093D;\\n  t['aybarmenian'] = 0x0561;\\n  t['ayin'] = 0x05E2;\\n  t['ayinaltonehebrew'] = 0xFB20;\\n  t['ayinhebrew'] = 0x05E2;\\n  t['b'] = 0x0062;\\n  t['babengali'] = 0x09AC;\\n  t['backslash'] = 0x005C;\\n  t['backslashmonospace'] = 0xFF3C;\\n  t['badeva'] = 0x092C;\\n  t['bagujarati'] = 0x0AAC;\\n  t['bagurmukhi'] = 0x0A2C;\\n  t['bahiragana'] = 0x3070;\\n  t['bahtthai'] = 0x0E3F;\\n  t['bakatakana'] = 0x30D0;\\n  t['bar'] = 0x007C;\\n  t['barmonospace'] = 0xFF5C;\\n  t['bbopomofo'] = 0x3105;\\n  t['bcircle'] = 0x24D1;\\n  t['bdotaccent'] = 0x1E03;\\n  t['bdotbelow'] = 0x1E05;\\n  t['beamedsixteenthnotes'] = 0x266C;\\n  t['because'] = 0x2235;\\n  t['becyrillic'] = 0x0431;\\n  t['beharabic'] = 0x0628;\\n  t['behfinalarabic'] = 0xFE90;\\n  t['behinitialarabic'] = 0xFE91;\\n  t['behiragana'] = 0x3079;\\n  t['behmedialarabic'] = 0xFE92;\\n  t['behmeeminitialarabic'] = 0xFC9F;\\n  t['behmeemisolatedarabic'] = 0xFC08;\\n  t['behnoonfinalarabic'] = 0xFC6D;\\n  t['bekatakana'] = 0x30D9;\\n  t['benarmenian'] = 0x0562;\\n  t['bet'] = 0x05D1;\\n  t['beta'] = 0x03B2;\\n  t['betasymbolgreek'] = 0x03D0;\\n  t['betdagesh'] = 0xFB31;\\n  t['betdageshhebrew'] = 0xFB31;\\n  t['bethebrew'] = 0x05D1;\\n  t['betrafehebrew'] = 0xFB4C;\\n  t['bhabengali'] = 0x09AD;\\n  t['bhadeva'] = 0x092D;\\n  t['bhagujarati'] = 0x0AAD;\\n  t['bhagurmukhi'] = 0x0A2D;\\n  t['bhook'] = 0x0253;\\n  t['bihiragana'] = 0x3073;\\n  t['bikatakana'] = 0x30D3;\\n  t['bilabialclick'] = 0x0298;\\n  t['bindigurmukhi'] = 0x0A02;\\n  t['birusquare'] = 0x3331;\\n  t['blackcircle'] = 0x25CF;\\n  t['blackdiamond'] = 0x25C6;\\n  t['blackdownpointingtriangle'] = 0x25BC;\\n  t['blackleftpointingpointer'] = 0x25C4;\\n  t['blackleftpointingtriangle'] = 0x25C0;\\n  t['blacklenticularbracketleft'] = 0x3010;\\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\\n  t['blacklenticularbracketright'] = 0x3011;\\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\\n  t['blacklowerlefttriangle'] = 0x25E3;\\n  t['blacklowerrighttriangle'] = 0x25E2;\\n  t['blackrectangle'] = 0x25AC;\\n  t['blackrightpointingpointer'] = 0x25BA;\\n  t['blackrightpointingtriangle'] = 0x25B6;\\n  t['blacksmallsquare'] = 0x25AA;\\n  t['blacksmilingface'] = 0x263B;\\n  t['blacksquare'] = 0x25A0;\\n  t['blackstar'] = 0x2605;\\n  t['blackupperlefttriangle'] = 0x25E4;\\n  t['blackupperrighttriangle'] = 0x25E5;\\n  t['blackuppointingsmalltriangle'] = 0x25B4;\\n  t['blackuppointingtriangle'] = 0x25B2;\\n  t['blank'] = 0x2423;\\n  t['blinebelow'] = 0x1E07;\\n  t['block'] = 0x2588;\\n  t['bmonospace'] = 0xFF42;\\n  t['bobaimaithai'] = 0x0E1A;\\n  t['bohiragana'] = 0x307C;\\n  t['bokatakana'] = 0x30DC;\\n  t['bparen'] = 0x249D;\\n  t['bqsquare'] = 0x33C3;\\n  t['braceex'] = 0xF8F4;\\n  t['braceleft'] = 0x007B;\\n  t['braceleftbt'] = 0xF8F3;\\n  t['braceleftmid'] = 0xF8F2;\\n  t['braceleftmonospace'] = 0xFF5B;\\n  t['braceleftsmall'] = 0xFE5B;\\n  t['bracelefttp'] = 0xF8F1;\\n  t['braceleftvertical'] = 0xFE37;\\n  t['braceright'] = 0x007D;\\n  t['bracerightbt'] = 0xF8FE;\\n  t['bracerightmid'] = 0xF8FD;\\n  t['bracerightmonospace'] = 0xFF5D;\\n  t['bracerightsmall'] = 0xFE5C;\\n  t['bracerighttp'] = 0xF8FC;\\n  t['bracerightvertical'] = 0xFE38;\\n  t['bracketleft'] = 0x005B;\\n  t['bracketleftbt'] = 0xF8F0;\\n  t['bracketleftex'] = 0xF8EF;\\n  t['bracketleftmonospace'] = 0xFF3B;\\n  t['bracketlefttp'] = 0xF8EE;\\n  t['bracketright'] = 0x005D;\\n  t['bracketrightbt'] = 0xF8FB;\\n  t['bracketrightex'] = 0xF8FA;\\n  t['bracketrightmonospace'] = 0xFF3D;\\n  t['bracketrighttp'] = 0xF8F9;\\n  t['breve'] = 0x02D8;\\n  t['brevebelowcmb'] = 0x032E;\\n  t['brevecmb'] = 0x0306;\\n  t['breveinvertedbelowcmb'] = 0x032F;\\n  t['breveinvertedcmb'] = 0x0311;\\n  t['breveinverteddoublecmb'] = 0x0361;\\n  t['bridgebelowcmb'] = 0x032A;\\n  t['bridgeinvertedbelowcmb'] = 0x033A;\\n  t['brokenbar'] = 0x00A6;\\n  t['bstroke'] = 0x0180;\\n  t['bsuperior'] = 0xF6EA;\\n  t['btopbar'] = 0x0183;\\n  t['buhiragana'] = 0x3076;\\n  t['bukatakana'] = 0x30D6;\\n  t['bullet'] = 0x2022;\\n  t['bulletinverse'] = 0x25D8;\\n  t['bulletoperator'] = 0x2219;\\n  t['bullseye'] = 0x25CE;\\n  t['c'] = 0x0063;\\n  t['caarmenian'] = 0x056E;\\n  t['cabengali'] = 0x099A;\\n  t['cacute'] = 0x0107;\\n  t['cadeva'] = 0x091A;\\n  t['cagujarati'] = 0x0A9A;\\n  t['cagurmukhi'] = 0x0A1A;\\n  t['calsquare'] = 0x3388;\\n  t['candrabindubengali'] = 0x0981;\\n  t['candrabinducmb'] = 0x0310;\\n  t['candrabindudeva'] = 0x0901;\\n  t['candrabindugujarati'] = 0x0A81;\\n  t['capslock'] = 0x21EA;\\n  t['careof'] = 0x2105;\\n  t['caron'] = 0x02C7;\\n  t['caronbelowcmb'] = 0x032C;\\n  t['caroncmb'] = 0x030C;\\n  t['carriagereturn'] = 0x21B5;\\n  t['cbopomofo'] = 0x3118;\\n  t['ccaron'] = 0x010D;\\n  t['ccedilla'] = 0x00E7;\\n  t['ccedillaacute'] = 0x1E09;\\n  t['ccircle'] = 0x24D2;\\n  t['ccircumflex'] = 0x0109;\\n  t['ccurl'] = 0x0255;\\n  t['cdot'] = 0x010B;\\n  t['cdotaccent'] = 0x010B;\\n  t['cdsquare'] = 0x33C5;\\n  t['cedilla'] = 0x00B8;\\n  t['cedillacmb'] = 0x0327;\\n  t['cent'] = 0x00A2;\\n  t['centigrade'] = 0x2103;\\n  t['centinferior'] = 0xF6DF;\\n  t['centmonospace'] = 0xFFE0;\\n  t['centoldstyle'] = 0xF7A2;\\n  t['centsuperior'] = 0xF6E0;\\n  t['chaarmenian'] = 0x0579;\\n  t['chabengali'] = 0x099B;\\n  t['chadeva'] = 0x091B;\\n  t['chagujarati'] = 0x0A9B;\\n  t['chagurmukhi'] = 0x0A1B;\\n  t['chbopomofo'] = 0x3114;\\n  t['cheabkhasiancyrillic'] = 0x04BD;\\n  t['checkmark'] = 0x2713;\\n  t['checyrillic'] = 0x0447;\\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\\n  t['chedescendercyrillic'] = 0x04B7;\\n  t['chedieresiscyrillic'] = 0x04F5;\\n  t['cheharmenian'] = 0x0573;\\n  t['chekhakassiancyrillic'] = 0x04CC;\\n  t['cheverticalstrokecyrillic'] = 0x04B9;\\n  t['chi'] = 0x03C7;\\n  t['chieuchacirclekorean'] = 0x3277;\\n  t['chieuchaparenkorean'] = 0x3217;\\n  t['chieuchcirclekorean'] = 0x3269;\\n  t['chieuchkorean'] = 0x314A;\\n  t['chieuchparenkorean'] = 0x3209;\\n  t['chochangthai'] = 0x0E0A;\\n  t['chochanthai'] = 0x0E08;\\n  t['chochingthai'] = 0x0E09;\\n  t['chochoethai'] = 0x0E0C;\\n  t['chook'] = 0x0188;\\n  t['cieucacirclekorean'] = 0x3276;\\n  t['cieucaparenkorean'] = 0x3216;\\n  t['cieuccirclekorean'] = 0x3268;\\n  t['cieuckorean'] = 0x3148;\\n  t['cieucparenkorean'] = 0x3208;\\n  t['cieucuparenkorean'] = 0x321C;\\n  t['circle'] = 0x25CB;\\n  t['circlecopyrt'] = 0x00A9;\\n  t['circlemultiply'] = 0x2297;\\n  t['circleot'] = 0x2299;\\n  t['circleplus'] = 0x2295;\\n  t['circlepostalmark'] = 0x3036;\\n  t['circlewithlefthalfblack'] = 0x25D0;\\n  t['circlewithrighthalfblack'] = 0x25D1;\\n  t['circumflex'] = 0x02C6;\\n  t['circumflexbelowcmb'] = 0x032D;\\n  t['circumflexcmb'] = 0x0302;\\n  t['clear'] = 0x2327;\\n  t['clickalveolar'] = 0x01C2;\\n  t['clickdental'] = 0x01C0;\\n  t['clicklateral'] = 0x01C1;\\n  t['clickretroflex'] = 0x01C3;\\n  t['club'] = 0x2663;\\n  t['clubsuitblack'] = 0x2663;\\n  t['clubsuitwhite'] = 0x2667;\\n  t['cmcubedsquare'] = 0x33A4;\\n  t['cmonospace'] = 0xFF43;\\n  t['cmsquaredsquare'] = 0x33A0;\\n  t['coarmenian'] = 0x0581;\\n  t['colon'] = 0x003A;\\n  t['colonmonetary'] = 0x20A1;\\n  t['colonmonospace'] = 0xFF1A;\\n  t['colonsign'] = 0x20A1;\\n  t['colonsmall'] = 0xFE55;\\n  t['colontriangularhalfmod'] = 0x02D1;\\n  t['colontriangularmod'] = 0x02D0;\\n  t['comma'] = 0x002C;\\n  t['commaabovecmb'] = 0x0313;\\n  t['commaaboverightcmb'] = 0x0315;\\n  t['commaaccent'] = 0xF6C3;\\n  t['commaarabic'] = 0x060C;\\n  t['commaarmenian'] = 0x055D;\\n  t['commainferior'] = 0xF6E1;\\n  t['commamonospace'] = 0xFF0C;\\n  t['commareversedabovecmb'] = 0x0314;\\n  t['commareversedmod'] = 0x02BD;\\n  t['commasmall'] = 0xFE50;\\n  t['commasuperior'] = 0xF6E2;\\n  t['commaturnedabovecmb'] = 0x0312;\\n  t['commaturnedmod'] = 0x02BB;\\n  t['compass'] = 0x263C;\\n  t['congruent'] = 0x2245;\\n  t['contourintegral'] = 0x222E;\\n  t['control'] = 0x2303;\\n  t['controlACK'] = 0x0006;\\n  t['controlBEL'] = 0x0007;\\n  t['controlBS'] = 0x0008;\\n  t['controlCAN'] = 0x0018;\\n  t['controlCR'] = 0x000D;\\n  t['controlDC1'] = 0x0011;\\n  t['controlDC2'] = 0x0012;\\n  t['controlDC3'] = 0x0013;\\n  t['controlDC4'] = 0x0014;\\n  t['controlDEL'] = 0x007F;\\n  t['controlDLE'] = 0x0010;\\n  t['controlEM'] = 0x0019;\\n  t['controlENQ'] = 0x0005;\\n  t['controlEOT'] = 0x0004;\\n  t['controlESC'] = 0x001B;\\n  t['controlETB'] = 0x0017;\\n  t['controlETX'] = 0x0003;\\n  t['controlFF'] = 0x000C;\\n  t['controlFS'] = 0x001C;\\n  t['controlGS'] = 0x001D;\\n  t['controlHT'] = 0x0009;\\n  t['controlLF'] = 0x000A;\\n  t['controlNAK'] = 0x0015;\\n  t['controlNULL'] = 0x0000;\\n  t['controlRS'] = 0x001E;\\n  t['controlSI'] = 0x000F;\\n  t['controlSO'] = 0x000E;\\n  t['controlSOT'] = 0x0002;\\n  t['controlSTX'] = 0x0001;\\n  t['controlSUB'] = 0x001A;\\n  t['controlSYN'] = 0x0016;\\n  t['controlUS'] = 0x001F;\\n  t['controlVT'] = 0x000B;\\n  t['copyright'] = 0x00A9;\\n  t['copyrightsans'] = 0xF8E9;\\n  t['copyrightserif'] = 0xF6D9;\\n  t['cornerbracketleft'] = 0x300C;\\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\\n  t['cornerbracketleftvertical'] = 0xFE41;\\n  t['cornerbracketright'] = 0x300D;\\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\\n  t['cornerbracketrightvertical'] = 0xFE42;\\n  t['corporationsquare'] = 0x337F;\\n  t['cosquare'] = 0x33C7;\\n  t['coverkgsquare'] = 0x33C6;\\n  t['cparen'] = 0x249E;\\n  t['cruzeiro'] = 0x20A2;\\n  t['cstretched'] = 0x0297;\\n  t['curlyand'] = 0x22CF;\\n  t['curlyor'] = 0x22CE;\\n  t['currency'] = 0x00A4;\\n  t['cyrBreve'] = 0xF6D1;\\n  t['cyrFlex'] = 0xF6D2;\\n  t['cyrbreve'] = 0xF6D4;\\n  t['cyrflex'] = 0xF6D5;\\n  t['d'] = 0x0064;\\n  t['daarmenian'] = 0x0564;\\n  t['dabengali'] = 0x09A6;\\n  t['dadarabic'] = 0x0636;\\n  t['dadeva'] = 0x0926;\\n  t['dadfinalarabic'] = 0xFEBE;\\n  t['dadinitialarabic'] = 0xFEBF;\\n  t['dadmedialarabic'] = 0xFEC0;\\n  t['dagesh'] = 0x05BC;\\n  t['dageshhebrew'] = 0x05BC;\\n  t['dagger'] = 0x2020;\\n  t['daggerdbl'] = 0x2021;\\n  t['dagujarati'] = 0x0AA6;\\n  t['dagurmukhi'] = 0x0A26;\\n  t['dahiragana'] = 0x3060;\\n  t['dakatakana'] = 0x30C0;\\n  t['dalarabic'] = 0x062F;\\n  t['dalet'] = 0x05D3;\\n  t['daletdagesh'] = 0xFB33;\\n  t['daletdageshhebrew'] = 0xFB33;\\n  t['dalethebrew'] = 0x05D3;\\n  t['dalfinalarabic'] = 0xFEAA;\\n  t['dammaarabic'] = 0x064F;\\n  t['dammalowarabic'] = 0x064F;\\n  t['dammatanaltonearabic'] = 0x064C;\\n  t['dammatanarabic'] = 0x064C;\\n  t['danda'] = 0x0964;\\n  t['dargahebrew'] = 0x05A7;\\n  t['dargalefthebrew'] = 0x05A7;\\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\\n  t['dblGrave'] = 0xF6D3;\\n  t['dblanglebracketleft'] = 0x300A;\\n  t['dblanglebracketleftvertical'] = 0xFE3D;\\n  t['dblanglebracketright'] = 0x300B;\\n  t['dblanglebracketrightvertical'] = 0xFE3E;\\n  t['dblarchinvertedbelowcmb'] = 0x032B;\\n  t['dblarrowleft'] = 0x21D4;\\n  t['dblarrowright'] = 0x21D2;\\n  t['dbldanda'] = 0x0965;\\n  t['dblgrave'] = 0xF6D6;\\n  t['dblgravecmb'] = 0x030F;\\n  t['dblintegral'] = 0x222C;\\n  t['dbllowline'] = 0x2017;\\n  t['dbllowlinecmb'] = 0x0333;\\n  t['dbloverlinecmb'] = 0x033F;\\n  t['dblprimemod'] = 0x02BA;\\n  t['dblverticalbar'] = 0x2016;\\n  t['dblverticallineabovecmb'] = 0x030E;\\n  t['dbopomofo'] = 0x3109;\\n  t['dbsquare'] = 0x33C8;\\n  t['dcaron'] = 0x010F;\\n  t['dcedilla'] = 0x1E11;\\n  t['dcircle'] = 0x24D3;\\n  t['dcircumflexbelow'] = 0x1E13;\\n  t['dcroat'] = 0x0111;\\n  t['ddabengali'] = 0x09A1;\\n  t['ddadeva'] = 0x0921;\\n  t['ddagujarati'] = 0x0AA1;\\n  t['ddagurmukhi'] = 0x0A21;\\n  t['ddalarabic'] = 0x0688;\\n  t['ddalfinalarabic'] = 0xFB89;\\n  t['dddhadeva'] = 0x095C;\\n  t['ddhabengali'] = 0x09A2;\\n  t['ddhadeva'] = 0x0922;\\n  t['ddhagujarati'] = 0x0AA2;\\n  t['ddhagurmukhi'] = 0x0A22;\\n  t['ddotaccent'] = 0x1E0B;\\n  t['ddotbelow'] = 0x1E0D;\\n  t['decimalseparatorarabic'] = 0x066B;\\n  t['decimalseparatorpersian'] = 0x066B;\\n  t['decyrillic'] = 0x0434;\\n  t['degree'] = 0x00B0;\\n  t['dehihebrew'] = 0x05AD;\\n  t['dehiragana'] = 0x3067;\\n  t['deicoptic'] = 0x03EF;\\n  t['dekatakana'] = 0x30C7;\\n  t['deleteleft'] = 0x232B;\\n  t['deleteright'] = 0x2326;\\n  t['delta'] = 0x03B4;\\n  t['deltaturned'] = 0x018D;\\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\\n  t['dezh'] = 0x02A4;\\n  t['dhabengali'] = 0x09A7;\\n  t['dhadeva'] = 0x0927;\\n  t['dhagujarati'] = 0x0AA7;\\n  t['dhagurmukhi'] = 0x0A27;\\n  t['dhook'] = 0x0257;\\n  t['dialytikatonos'] = 0x0385;\\n  t['dialytikatonoscmb'] = 0x0344;\\n  t['diamond'] = 0x2666;\\n  t['diamondsuitwhite'] = 0x2662;\\n  t['dieresis'] = 0x00A8;\\n  t['dieresisacute'] = 0xF6D7;\\n  t['dieresisbelowcmb'] = 0x0324;\\n  t['dieresiscmb'] = 0x0308;\\n  t['dieresisgrave'] = 0xF6D8;\\n  t['dieresistonos'] = 0x0385;\\n  t['dihiragana'] = 0x3062;\\n  t['dikatakana'] = 0x30C2;\\n  t['dittomark'] = 0x3003;\\n  t['divide'] = 0x00F7;\\n  t['divides'] = 0x2223;\\n  t['divisionslash'] = 0x2215;\\n  t['djecyrillic'] = 0x0452;\\n  t['dkshade'] = 0x2593;\\n  t['dlinebelow'] = 0x1E0F;\\n  t['dlsquare'] = 0x3397;\\n  t['dmacron'] = 0x0111;\\n  t['dmonospace'] = 0xFF44;\\n  t['dnblock'] = 0x2584;\\n  t['dochadathai'] = 0x0E0E;\\n  t['dodekthai'] = 0x0E14;\\n  t['dohiragana'] = 0x3069;\\n  t['dokatakana'] = 0x30C9;\\n  t['dollar'] = 0x0024;\\n  t['dollarinferior'] = 0xF6E3;\\n  t['dollarmonospace'] = 0xFF04;\\n  t['dollaroldstyle'] = 0xF724;\\n  t['dollarsmall'] = 0xFE69;\\n  t['dollarsuperior'] = 0xF6E4;\\n  t['dong'] = 0x20AB;\\n  t['dorusquare'] = 0x3326;\\n  t['dotaccent'] = 0x02D9;\\n  t['dotaccentcmb'] = 0x0307;\\n  t['dotbelowcmb'] = 0x0323;\\n  t['dotbelowcomb'] = 0x0323;\\n  t['dotkatakana'] = 0x30FB;\\n  t['dotlessi'] = 0x0131;\\n  t['dotlessj'] = 0xF6BE;\\n  t['dotlessjstrokehook'] = 0x0284;\\n  t['dotmath'] = 0x22C5;\\n  t['dottedcircle'] = 0x25CC;\\n  t['doubleyodpatah'] = 0xFB1F;\\n  t['doubleyodpatahhebrew'] = 0xFB1F;\\n  t['downtackbelowcmb'] = 0x031E;\\n  t['downtackmod'] = 0x02D5;\\n  t['dparen'] = 0x249F;\\n  t['dsuperior'] = 0xF6EB;\\n  t['dtail'] = 0x0256;\\n  t['dtopbar'] = 0x018C;\\n  t['duhiragana'] = 0x3065;\\n  t['dukatakana'] = 0x30C5;\\n  t['dz'] = 0x01F3;\\n  t['dzaltone'] = 0x02A3;\\n  t['dzcaron'] = 0x01C6;\\n  t['dzcurl'] = 0x02A5;\\n  t['dzeabkhasiancyrillic'] = 0x04E1;\\n  t['dzecyrillic'] = 0x0455;\\n  t['dzhecyrillic'] = 0x045F;\\n  t['e'] = 0x0065;\\n  t['eacute'] = 0x00E9;\\n  t['earth'] = 0x2641;\\n  t['ebengali'] = 0x098F;\\n  t['ebopomofo'] = 0x311C;\\n  t['ebreve'] = 0x0115;\\n  t['ecandradeva'] = 0x090D;\\n  t['ecandragujarati'] = 0x0A8D;\\n  t['ecandravowelsigndeva'] = 0x0945;\\n  t['ecandravowelsigngujarati'] = 0x0AC5;\\n  t['ecaron'] = 0x011B;\\n  t['ecedillabreve'] = 0x1E1D;\\n  t['echarmenian'] = 0x0565;\\n  t['echyiwnarmenian'] = 0x0587;\\n  t['ecircle'] = 0x24D4;\\n  t['ecircumflex'] = 0x00EA;\\n  t['ecircumflexacute'] = 0x1EBF;\\n  t['ecircumflexbelow'] = 0x1E19;\\n  t['ecircumflexdotbelow'] = 0x1EC7;\\n  t['ecircumflexgrave'] = 0x1EC1;\\n  t['ecircumflexhookabove'] = 0x1EC3;\\n  t['ecircumflextilde'] = 0x1EC5;\\n  t['ecyrillic'] = 0x0454;\\n  t['edblgrave'] = 0x0205;\\n  t['edeva'] = 0x090F;\\n  t['edieresis'] = 0x00EB;\\n  t['edot'] = 0x0117;\\n  t['edotaccent'] = 0x0117;\\n  t['edotbelow'] = 0x1EB9;\\n  t['eegurmukhi'] = 0x0A0F;\\n  t['eematragurmukhi'] = 0x0A47;\\n  t['efcyrillic'] = 0x0444;\\n  t['egrave'] = 0x00E8;\\n  t['egujarati'] = 0x0A8F;\\n  t['eharmenian'] = 0x0567;\\n  t['ehbopomofo'] = 0x311D;\\n  t['ehiragana'] = 0x3048;\\n  t['ehookabove'] = 0x1EBB;\\n  t['eibopomofo'] = 0x311F;\\n  t['eight'] = 0x0038;\\n  t['eightarabic'] = 0x0668;\\n  t['eightbengali'] = 0x09EE;\\n  t['eightcircle'] = 0x2467;\\n  t['eightcircleinversesansserif'] = 0x2791;\\n  t['eightdeva'] = 0x096E;\\n  t['eighteencircle'] = 0x2471;\\n  t['eighteenparen'] = 0x2485;\\n  t['eighteenperiod'] = 0x2499;\\n  t['eightgujarati'] = 0x0AEE;\\n  t['eightgurmukhi'] = 0x0A6E;\\n  t['eighthackarabic'] = 0x0668;\\n  t['eighthangzhou'] = 0x3028;\\n  t['eighthnotebeamed'] = 0x266B;\\n  t['eightideographicparen'] = 0x3227;\\n  t['eightinferior'] = 0x2088;\\n  t['eightmonospace'] = 0xFF18;\\n  t['eightoldstyle'] = 0xF738;\\n  t['eightparen'] = 0x247B;\\n  t['eightperiod'] = 0x248F;\\n  t['eightpersian'] = 0x06F8;\\n  t['eightroman'] = 0x2177;\\n  t['eightsuperior'] = 0x2078;\\n  t['eightthai'] = 0x0E58;\\n  t['einvertedbreve'] = 0x0207;\\n  t['eiotifiedcyrillic'] = 0x0465;\\n  t['ekatakana'] = 0x30A8;\\n  t['ekatakanahalfwidth'] = 0xFF74;\\n  t['ekonkargurmukhi'] = 0x0A74;\\n  t['ekorean'] = 0x3154;\\n  t['elcyrillic'] = 0x043B;\\n  t['element'] = 0x2208;\\n  t['elevencircle'] = 0x246A;\\n  t['elevenparen'] = 0x247E;\\n  t['elevenperiod'] = 0x2492;\\n  t['elevenroman'] = 0x217A;\\n  t['ellipsis'] = 0x2026;\\n  t['ellipsisvertical'] = 0x22EE;\\n  t['emacron'] = 0x0113;\\n  t['emacronacute'] = 0x1E17;\\n  t['emacrongrave'] = 0x1E15;\\n  t['emcyrillic'] = 0x043C;\\n  t['emdash'] = 0x2014;\\n  t['emdashvertical'] = 0xFE31;\\n  t['emonospace'] = 0xFF45;\\n  t['emphasismarkarmenian'] = 0x055B;\\n  t['emptyset'] = 0x2205;\\n  t['enbopomofo'] = 0x3123;\\n  t['encyrillic'] = 0x043D;\\n  t['endash'] = 0x2013;\\n  t['endashvertical'] = 0xFE32;\\n  t['endescendercyrillic'] = 0x04A3;\\n  t['eng'] = 0x014B;\\n  t['engbopomofo'] = 0x3125;\\n  t['enghecyrillic'] = 0x04A5;\\n  t['enhookcyrillic'] = 0x04C8;\\n  t['enspace'] = 0x2002;\\n  t['eogonek'] = 0x0119;\\n  t['eokorean'] = 0x3153;\\n  t['eopen'] = 0x025B;\\n  t['eopenclosed'] = 0x029A;\\n  t['eopenreversed'] = 0x025C;\\n  t['eopenreversedclosed'] = 0x025E;\\n  t['eopenreversedhook'] = 0x025D;\\n  t['eparen'] = 0x24A0;\\n  t['epsilon'] = 0x03B5;\\n  t['epsilontonos'] = 0x03AD;\\n  t['equal'] = 0x003D;\\n  t['equalmonospace'] = 0xFF1D;\\n  t['equalsmall'] = 0xFE66;\\n  t['equalsuperior'] = 0x207C;\\n  t['equivalence'] = 0x2261;\\n  t['erbopomofo'] = 0x3126;\\n  t['ercyrillic'] = 0x0440;\\n  t['ereversed'] = 0x0258;\\n  t['ereversedcyrillic'] = 0x044D;\\n  t['escyrillic'] = 0x0441;\\n  t['esdescendercyrillic'] = 0x04AB;\\n  t['esh'] = 0x0283;\\n  t['eshcurl'] = 0x0286;\\n  t['eshortdeva'] = 0x090E;\\n  t['eshortvowelsigndeva'] = 0x0946;\\n  t['eshreversedloop'] = 0x01AA;\\n  t['eshsquatreversed'] = 0x0285;\\n  t['esmallhiragana'] = 0x3047;\\n  t['esmallkatakana'] = 0x30A7;\\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\\n  t['estimated'] = 0x212E;\\n  t['esuperior'] = 0xF6EC;\\n  t['eta'] = 0x03B7;\\n  t['etarmenian'] = 0x0568;\\n  t['etatonos'] = 0x03AE;\\n  t['eth'] = 0x00F0;\\n  t['etilde'] = 0x1EBD;\\n  t['etildebelow'] = 0x1E1B;\\n  t['etnahtafoukhhebrew'] = 0x0591;\\n  t['etnahtafoukhlefthebrew'] = 0x0591;\\n  t['etnahtahebrew'] = 0x0591;\\n  t['etnahtalefthebrew'] = 0x0591;\\n  t['eturned'] = 0x01DD;\\n  t['eukorean'] = 0x3161;\\n  t['euro'] = 0x20AC;\\n  t['evowelsignbengali'] = 0x09C7;\\n  t['evowelsigndeva'] = 0x0947;\\n  t['evowelsigngujarati'] = 0x0AC7;\\n  t['exclam'] = 0x0021;\\n  t['exclamarmenian'] = 0x055C;\\n  t['exclamdbl'] = 0x203C;\\n  t['exclamdown'] = 0x00A1;\\n  t['exclamdownsmall'] = 0xF7A1;\\n  t['exclammonospace'] = 0xFF01;\\n  t['exclamsmall'] = 0xF721;\\n  t['existential'] = 0x2203;\\n  t['ezh'] = 0x0292;\\n  t['ezhcaron'] = 0x01EF;\\n  t['ezhcurl'] = 0x0293;\\n  t['ezhreversed'] = 0x01B9;\\n  t['ezhtail'] = 0x01BA;\\n  t['f'] = 0x0066;\\n  t['fadeva'] = 0x095E;\\n  t['fagurmukhi'] = 0x0A5E;\\n  t['fahrenheit'] = 0x2109;\\n  t['fathaarabic'] = 0x064E;\\n  t['fathalowarabic'] = 0x064E;\\n  t['fathatanarabic'] = 0x064B;\\n  t['fbopomofo'] = 0x3108;\\n  t['fcircle'] = 0x24D5;\\n  t['fdotaccent'] = 0x1E1F;\\n  t['feharabic'] = 0x0641;\\n  t['feharmenian'] = 0x0586;\\n  t['fehfinalarabic'] = 0xFED2;\\n  t['fehinitialarabic'] = 0xFED3;\\n  t['fehmedialarabic'] = 0xFED4;\\n  t['feicoptic'] = 0x03E5;\\n  t['female'] = 0x2640;\\n  t['ff'] = 0xFB00;\\n  t['ffi'] = 0xFB03;\\n  t['ffl'] = 0xFB04;\\n  t['fi'] = 0xFB01;\\n  t['fifteencircle'] = 0x246E;\\n  t['fifteenparen'] = 0x2482;\\n  t['fifteenperiod'] = 0x2496;\\n  t['figuredash'] = 0x2012;\\n  t['filledbox'] = 0x25A0;\\n  t['filledrect'] = 0x25AC;\\n  t['finalkaf'] = 0x05DA;\\n  t['finalkafdagesh'] = 0xFB3A;\\n  t['finalkafdageshhebrew'] = 0xFB3A;\\n  t['finalkafhebrew'] = 0x05DA;\\n  t['finalmem'] = 0x05DD;\\n  t['finalmemhebrew'] = 0x05DD;\\n  t['finalnun'] = 0x05DF;\\n  t['finalnunhebrew'] = 0x05DF;\\n  t['finalpe'] = 0x05E3;\\n  t['finalpehebrew'] = 0x05E3;\\n  t['finaltsadi'] = 0x05E5;\\n  t['finaltsadihebrew'] = 0x05E5;\\n  t['firsttonechinese'] = 0x02C9;\\n  t['fisheye'] = 0x25C9;\\n  t['fitacyrillic'] = 0x0473;\\n  t['five'] = 0x0035;\\n  t['fivearabic'] = 0x0665;\\n  t['fivebengali'] = 0x09EB;\\n  t['fivecircle'] = 0x2464;\\n  t['fivecircleinversesansserif'] = 0x278E;\\n  t['fivedeva'] = 0x096B;\\n  t['fiveeighths'] = 0x215D;\\n  t['fivegujarati'] = 0x0AEB;\\n  t['fivegurmukhi'] = 0x0A6B;\\n  t['fivehackarabic'] = 0x0665;\\n  t['fivehangzhou'] = 0x3025;\\n  t['fiveideographicparen'] = 0x3224;\\n  t['fiveinferior'] = 0x2085;\\n  t['fivemonospace'] = 0xFF15;\\n  t['fiveoldstyle'] = 0xF735;\\n  t['fiveparen'] = 0x2478;\\n  t['fiveperiod'] = 0x248C;\\n  t['fivepersian'] = 0x06F5;\\n  t['fiveroman'] = 0x2174;\\n  t['fivesuperior'] = 0x2075;\\n  t['fivethai'] = 0x0E55;\\n  t['fl'] = 0xFB02;\\n  t['florin'] = 0x0192;\\n  t['fmonospace'] = 0xFF46;\\n  t['fmsquare'] = 0x3399;\\n  t['fofanthai'] = 0x0E1F;\\n  t['fofathai'] = 0x0E1D;\\n  t['fongmanthai'] = 0x0E4F;\\n  t['forall'] = 0x2200;\\n  t['four'] = 0x0034;\\n  t['fourarabic'] = 0x0664;\\n  t['fourbengali'] = 0x09EA;\\n  t['fourcircle'] = 0x2463;\\n  t['fourcircleinversesansserif'] = 0x278D;\\n  t['fourdeva'] = 0x096A;\\n  t['fourgujarati'] = 0x0AEA;\\n  t['fourgurmukhi'] = 0x0A6A;\\n  t['fourhackarabic'] = 0x0664;\\n  t['fourhangzhou'] = 0x3024;\\n  t['fourideographicparen'] = 0x3223;\\n  t['fourinferior'] = 0x2084;\\n  t['fourmonospace'] = 0xFF14;\\n  t['fournumeratorbengali'] = 0x09F7;\\n  t['fouroldstyle'] = 0xF734;\\n  t['fourparen'] = 0x2477;\\n  t['fourperiod'] = 0x248B;\\n  t['fourpersian'] = 0x06F4;\\n  t['fourroman'] = 0x2173;\\n  t['foursuperior'] = 0x2074;\\n  t['fourteencircle'] = 0x246D;\\n  t['fourteenparen'] = 0x2481;\\n  t['fourteenperiod'] = 0x2495;\\n  t['fourthai'] = 0x0E54;\\n  t['fourthtonechinese'] = 0x02CB;\\n  t['fparen'] = 0x24A1;\\n  t['fraction'] = 0x2044;\\n  t['franc'] = 0x20A3;\\n  t['g'] = 0x0067;\\n  t['gabengali'] = 0x0997;\\n  t['gacute'] = 0x01F5;\\n  t['gadeva'] = 0x0917;\\n  t['gafarabic'] = 0x06AF;\\n  t['gaffinalarabic'] = 0xFB93;\\n  t['gafinitialarabic'] = 0xFB94;\\n  t['gafmedialarabic'] = 0xFB95;\\n  t['gagujarati'] = 0x0A97;\\n  t['gagurmukhi'] = 0x0A17;\\n  t['gahiragana'] = 0x304C;\\n  t['gakatakana'] = 0x30AC;\\n  t['gamma'] = 0x03B3;\\n  t['gammalatinsmall'] = 0x0263;\\n  t['gammasuperior'] = 0x02E0;\\n  t['gangiacoptic'] = 0x03EB;\\n  t['gbopomofo'] = 0x310D;\\n  t['gbreve'] = 0x011F;\\n  t['gcaron'] = 0x01E7;\\n  t['gcedilla'] = 0x0123;\\n  t['gcircle'] = 0x24D6;\\n  t['gcircumflex'] = 0x011D;\\n  t['gcommaaccent'] = 0x0123;\\n  t['gdot'] = 0x0121;\\n  t['gdotaccent'] = 0x0121;\\n  t['gecyrillic'] = 0x0433;\\n  t['gehiragana'] = 0x3052;\\n  t['gekatakana'] = 0x30B2;\\n  t['geometricallyequal'] = 0x2251;\\n  t['gereshaccenthebrew'] = 0x059C;\\n  t['gereshhebrew'] = 0x05F3;\\n  t['gereshmuqdamhebrew'] = 0x059D;\\n  t['germandbls'] = 0x00DF;\\n  t['gershayimaccenthebrew'] = 0x059E;\\n  t['gershayimhebrew'] = 0x05F4;\\n  t['getamark'] = 0x3013;\\n  t['ghabengali'] = 0x0998;\\n  t['ghadarmenian'] = 0x0572;\\n  t['ghadeva'] = 0x0918;\\n  t['ghagujarati'] = 0x0A98;\\n  t['ghagurmukhi'] = 0x0A18;\\n  t['ghainarabic'] = 0x063A;\\n  t['ghainfinalarabic'] = 0xFECE;\\n  t['ghaininitialarabic'] = 0xFECF;\\n  t['ghainmedialarabic'] = 0xFED0;\\n  t['ghemiddlehookcyrillic'] = 0x0495;\\n  t['ghestrokecyrillic'] = 0x0493;\\n  t['gheupturncyrillic'] = 0x0491;\\n  t['ghhadeva'] = 0x095A;\\n  t['ghhagurmukhi'] = 0x0A5A;\\n  t['ghook'] = 0x0260;\\n  t['ghzsquare'] = 0x3393;\\n  t['gihiragana'] = 0x304E;\\n  t['gikatakana'] = 0x30AE;\\n  t['gimarmenian'] = 0x0563;\\n  t['gimel'] = 0x05D2;\\n  t['gimeldagesh'] = 0xFB32;\\n  t['gimeldageshhebrew'] = 0xFB32;\\n  t['gimelhebrew'] = 0x05D2;\\n  t['gjecyrillic'] = 0x0453;\\n  t['glottalinvertedstroke'] = 0x01BE;\\n  t['glottalstop'] = 0x0294;\\n  t['glottalstopinverted'] = 0x0296;\\n  t['glottalstopmod'] = 0x02C0;\\n  t['glottalstopreversed'] = 0x0295;\\n  t['glottalstopreversedmod'] = 0x02C1;\\n  t['glottalstopreversedsuperior'] = 0x02E4;\\n  t['glottalstopstroke'] = 0x02A1;\\n  t['glottalstopstrokereversed'] = 0x02A2;\\n  t['gmacron'] = 0x1E21;\\n  t['gmonospace'] = 0xFF47;\\n  t['gohiragana'] = 0x3054;\\n  t['gokatakana'] = 0x30B4;\\n  t['gparen'] = 0x24A2;\\n  t['gpasquare'] = 0x33AC;\\n  t['gradient'] = 0x2207;\\n  t['grave'] = 0x0060;\\n  t['gravebelowcmb'] = 0x0316;\\n  t['gravecmb'] = 0x0300;\\n  t['gravecomb'] = 0x0300;\\n  t['gravedeva'] = 0x0953;\\n  t['gravelowmod'] = 0x02CE;\\n  t['gravemonospace'] = 0xFF40;\\n  t['gravetonecmb'] = 0x0340;\\n  t['greater'] = 0x003E;\\n  t['greaterequal'] = 0x2265;\\n  t['greaterequalorless'] = 0x22DB;\\n  t['greatermonospace'] = 0xFF1E;\\n  t['greaterorequivalent'] = 0x2273;\\n  t['greaterorless'] = 0x2277;\\n  t['greateroverequal'] = 0x2267;\\n  t['greatersmall'] = 0xFE65;\\n  t['gscript'] = 0x0261;\\n  t['gstroke'] = 0x01E5;\\n  t['guhiragana'] = 0x3050;\\n  t['guillemotleft'] = 0x00AB;\\n  t['guillemotright'] = 0x00BB;\\n  t['guilsinglleft'] = 0x2039;\\n  t['guilsinglright'] = 0x203A;\\n  t['gukatakana'] = 0x30B0;\\n  t['guramusquare'] = 0x3318;\\n  t['gysquare'] = 0x33C9;\\n  t['h'] = 0x0068;\\n  t['haabkhasiancyrillic'] = 0x04A9;\\n  t['haaltonearabic'] = 0x06C1;\\n  t['habengali'] = 0x09B9;\\n  t['hadescendercyrillic'] = 0x04B3;\\n  t['hadeva'] = 0x0939;\\n  t['hagujarati'] = 0x0AB9;\\n  t['hagurmukhi'] = 0x0A39;\\n  t['haharabic'] = 0x062D;\\n  t['hahfinalarabic'] = 0xFEA2;\\n  t['hahinitialarabic'] = 0xFEA3;\\n  t['hahiragana'] = 0x306F;\\n  t['hahmedialarabic'] = 0xFEA4;\\n  t['haitusquare'] = 0x332A;\\n  t['hakatakana'] = 0x30CF;\\n  t['hakatakanahalfwidth'] = 0xFF8A;\\n  t['halantgurmukhi'] = 0x0A4D;\\n  t['hamzaarabic'] = 0x0621;\\n  t['hamzalowarabic'] = 0x0621;\\n  t['hangulfiller'] = 0x3164;\\n  t['hardsigncyrillic'] = 0x044A;\\n  t['harpoonleftbarbup'] = 0x21BC;\\n  t['harpoonrightbarbup'] = 0x21C0;\\n  t['hasquare'] = 0x33CA;\\n  t['hatafpatah'] = 0x05B2;\\n  t['hatafpatah16'] = 0x05B2;\\n  t['hatafpatah23'] = 0x05B2;\\n  t['hatafpatah2f'] = 0x05B2;\\n  t['hatafpatahhebrew'] = 0x05B2;\\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\\n  t['hatafpatahquarterhebrew'] = 0x05B2;\\n  t['hatafpatahwidehebrew'] = 0x05B2;\\n  t['hatafqamats'] = 0x05B3;\\n  t['hatafqamats1b'] = 0x05B3;\\n  t['hatafqamats28'] = 0x05B3;\\n  t['hatafqamats34'] = 0x05B3;\\n  t['hatafqamatshebrew'] = 0x05B3;\\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\\n  t['hatafqamatswidehebrew'] = 0x05B3;\\n  t['hatafsegol'] = 0x05B1;\\n  t['hatafsegol17'] = 0x05B1;\\n  t['hatafsegol24'] = 0x05B1;\\n  t['hatafsegol30'] = 0x05B1;\\n  t['hatafsegolhebrew'] = 0x05B1;\\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\\n  t['hatafsegolquarterhebrew'] = 0x05B1;\\n  t['hatafsegolwidehebrew'] = 0x05B1;\\n  t['hbar'] = 0x0127;\\n  t['hbopomofo'] = 0x310F;\\n  t['hbrevebelow'] = 0x1E2B;\\n  t['hcedilla'] = 0x1E29;\\n  t['hcircle'] = 0x24D7;\\n  t['hcircumflex'] = 0x0125;\\n  t['hdieresis'] = 0x1E27;\\n  t['hdotaccent'] = 0x1E23;\\n  t['hdotbelow'] = 0x1E25;\\n  t['he'] = 0x05D4;\\n  t['heart'] = 0x2665;\\n  t['heartsuitblack'] = 0x2665;\\n  t['heartsuitwhite'] = 0x2661;\\n  t['hedagesh'] = 0xFB34;\\n  t['hedageshhebrew'] = 0xFB34;\\n  t['hehaltonearabic'] = 0x06C1;\\n  t['heharabic'] = 0x0647;\\n  t['hehebrew'] = 0x05D4;\\n  t['hehfinalaltonearabic'] = 0xFBA7;\\n  t['hehfinalalttwoarabic'] = 0xFEEA;\\n  t['hehfinalarabic'] = 0xFEEA;\\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\\n  t['hehinitialaltonearabic'] = 0xFBA8;\\n  t['hehinitialarabic'] = 0xFEEB;\\n  t['hehiragana'] = 0x3078;\\n  t['hehmedialaltonearabic'] = 0xFBA9;\\n  t['hehmedialarabic'] = 0xFEEC;\\n  t['heiseierasquare'] = 0x337B;\\n  t['hekatakana'] = 0x30D8;\\n  t['hekatakanahalfwidth'] = 0xFF8D;\\n  t['hekutaarusquare'] = 0x3336;\\n  t['henghook'] = 0x0267;\\n  t['herutusquare'] = 0x3339;\\n  t['het'] = 0x05D7;\\n  t['hethebrew'] = 0x05D7;\\n  t['hhook'] = 0x0266;\\n  t['hhooksuperior'] = 0x02B1;\\n  t['hieuhacirclekorean'] = 0x327B;\\n  t['hieuhaparenkorean'] = 0x321B;\\n  t['hieuhcirclekorean'] = 0x326D;\\n  t['hieuhkorean'] = 0x314E;\\n  t['hieuhparenkorean'] = 0x320D;\\n  t['hihiragana'] = 0x3072;\\n  t['hikatakana'] = 0x30D2;\\n  t['hikatakanahalfwidth'] = 0xFF8B;\\n  t['hiriq'] = 0x05B4;\\n  t['hiriq14'] = 0x05B4;\\n  t['hiriq21'] = 0x05B4;\\n  t['hiriq2d'] = 0x05B4;\\n  t['hiriqhebrew'] = 0x05B4;\\n  t['hiriqnarrowhebrew'] = 0x05B4;\\n  t['hiriqquarterhebrew'] = 0x05B4;\\n  t['hiriqwidehebrew'] = 0x05B4;\\n  t['hlinebelow'] = 0x1E96;\\n  t['hmonospace'] = 0xFF48;\\n  t['hoarmenian'] = 0x0570;\\n  t['hohipthai'] = 0x0E2B;\\n  t['hohiragana'] = 0x307B;\\n  t['hokatakana'] = 0x30DB;\\n  t['hokatakanahalfwidth'] = 0xFF8E;\\n  t['holam'] = 0x05B9;\\n  t['holam19'] = 0x05B9;\\n  t['holam26'] = 0x05B9;\\n  t['holam32'] = 0x05B9;\\n  t['holamhebrew'] = 0x05B9;\\n  t['holamnarrowhebrew'] = 0x05B9;\\n  t['holamquarterhebrew'] = 0x05B9;\\n  t['holamwidehebrew'] = 0x05B9;\\n  t['honokhukthai'] = 0x0E2E;\\n  t['hookabovecomb'] = 0x0309;\\n  t['hookcmb'] = 0x0309;\\n  t['hookpalatalizedbelowcmb'] = 0x0321;\\n  t['hookretroflexbelowcmb'] = 0x0322;\\n  t['hoonsquare'] = 0x3342;\\n  t['horicoptic'] = 0x03E9;\\n  t['horizontalbar'] = 0x2015;\\n  t['horncmb'] = 0x031B;\\n  t['hotsprings'] = 0x2668;\\n  t['house'] = 0x2302;\\n  t['hparen'] = 0x24A3;\\n  t['hsuperior'] = 0x02B0;\\n  t['hturned'] = 0x0265;\\n  t['huhiragana'] = 0x3075;\\n  t['huiitosquare'] = 0x3333;\\n  t['hukatakana'] = 0x30D5;\\n  t['hukatakanahalfwidth'] = 0xFF8C;\\n  t['hungarumlaut'] = 0x02DD;\\n  t['hungarumlautcmb'] = 0x030B;\\n  t['hv'] = 0x0195;\\n  t['hyphen'] = 0x002D;\\n  t['hypheninferior'] = 0xF6E5;\\n  t['hyphenmonospace'] = 0xFF0D;\\n  t['hyphensmall'] = 0xFE63;\\n  t['hyphensuperior'] = 0xF6E6;\\n  t['hyphentwo'] = 0x2010;\\n  t['i'] = 0x0069;\\n  t['iacute'] = 0x00ED;\\n  t['iacyrillic'] = 0x044F;\\n  t['ibengali'] = 0x0987;\\n  t['ibopomofo'] = 0x3127;\\n  t['ibreve'] = 0x012D;\\n  t['icaron'] = 0x01D0;\\n  t['icircle'] = 0x24D8;\\n  t['icircumflex'] = 0x00EE;\\n  t['icyrillic'] = 0x0456;\\n  t['idblgrave'] = 0x0209;\\n  t['ideographearthcircle'] = 0x328F;\\n  t['ideographfirecircle'] = 0x328B;\\n  t['ideographicallianceparen'] = 0x323F;\\n  t['ideographiccallparen'] = 0x323A;\\n  t['ideographiccentrecircle'] = 0x32A5;\\n  t['ideographicclose'] = 0x3006;\\n  t['ideographiccomma'] = 0x3001;\\n  t['ideographiccommaleft'] = 0xFF64;\\n  t['ideographiccongratulationparen'] = 0x3237;\\n  t['ideographiccorrectcircle'] = 0x32A3;\\n  t['ideographicearthparen'] = 0x322F;\\n  t['ideographicenterpriseparen'] = 0x323D;\\n  t['ideographicexcellentcircle'] = 0x329D;\\n  t['ideographicfestivalparen'] = 0x3240;\\n  t['ideographicfinancialcircle'] = 0x3296;\\n  t['ideographicfinancialparen'] = 0x3236;\\n  t['ideographicfireparen'] = 0x322B;\\n  t['ideographichaveparen'] = 0x3232;\\n  t['ideographichighcircle'] = 0x32A4;\\n  t['ideographiciterationmark'] = 0x3005;\\n  t['ideographiclaborcircle'] = 0x3298;\\n  t['ideographiclaborparen'] = 0x3238;\\n  t['ideographicleftcircle'] = 0x32A7;\\n  t['ideographiclowcircle'] = 0x32A6;\\n  t['ideographicmedicinecircle'] = 0x32A9;\\n  t['ideographicmetalparen'] = 0x322E;\\n  t['ideographicmoonparen'] = 0x322A;\\n  t['ideographicnameparen'] = 0x3234;\\n  t['ideographicperiod'] = 0x3002;\\n  t['ideographicprintcircle'] = 0x329E;\\n  t['ideographicreachparen'] = 0x3243;\\n  t['ideographicrepresentparen'] = 0x3239;\\n  t['ideographicresourceparen'] = 0x323E;\\n  t['ideographicrightcircle'] = 0x32A8;\\n  t['ideographicsecretcircle'] = 0x3299;\\n  t['ideographicselfparen'] = 0x3242;\\n  t['ideographicsocietyparen'] = 0x3233;\\n  t['ideographicspace'] = 0x3000;\\n  t['ideographicspecialparen'] = 0x3235;\\n  t['ideographicstockparen'] = 0x3231;\\n  t['ideographicstudyparen'] = 0x323B;\\n  t['ideographicsunparen'] = 0x3230;\\n  t['ideographicsuperviseparen'] = 0x323C;\\n  t['ideographicwaterparen'] = 0x322C;\\n  t['ideographicwoodparen'] = 0x322D;\\n  t['ideographiczero'] = 0x3007;\\n  t['ideographmetalcircle'] = 0x328E;\\n  t['ideographmooncircle'] = 0x328A;\\n  t['ideographnamecircle'] = 0x3294;\\n  t['ideographsuncircle'] = 0x3290;\\n  t['ideographwatercircle'] = 0x328C;\\n  t['ideographwoodcircle'] = 0x328D;\\n  t['ideva'] = 0x0907;\\n  t['idieresis'] = 0x00EF;\\n  t['idieresisacute'] = 0x1E2F;\\n  t['idieresiscyrillic'] = 0x04E5;\\n  t['idotbelow'] = 0x1ECB;\\n  t['iebrevecyrillic'] = 0x04D7;\\n  t['iecyrillic'] = 0x0435;\\n  t['ieungacirclekorean'] = 0x3275;\\n  t['ieungaparenkorean'] = 0x3215;\\n  t['ieungcirclekorean'] = 0x3267;\\n  t['ieungkorean'] = 0x3147;\\n  t['ieungparenkorean'] = 0x3207;\\n  t['igrave'] = 0x00EC;\\n  t['igujarati'] = 0x0A87;\\n  t['igurmukhi'] = 0x0A07;\\n  t['ihiragana'] = 0x3044;\\n  t['ihookabove'] = 0x1EC9;\\n  t['iibengali'] = 0x0988;\\n  t['iicyrillic'] = 0x0438;\\n  t['iideva'] = 0x0908;\\n  t['iigujarati'] = 0x0A88;\\n  t['iigurmukhi'] = 0x0A08;\\n  t['iimatragurmukhi'] = 0x0A40;\\n  t['iinvertedbreve'] = 0x020B;\\n  t['iishortcyrillic'] = 0x0439;\\n  t['iivowelsignbengali'] = 0x09C0;\\n  t['iivowelsigndeva'] = 0x0940;\\n  t['iivowelsigngujarati'] = 0x0AC0;\\n  t['ij'] = 0x0133;\\n  t['ikatakana'] = 0x30A4;\\n  t['ikatakanahalfwidth'] = 0xFF72;\\n  t['ikorean'] = 0x3163;\\n  t['ilde'] = 0x02DC;\\n  t['iluyhebrew'] = 0x05AC;\\n  t['imacron'] = 0x012B;\\n  t['imacroncyrillic'] = 0x04E3;\\n  t['imageorapproximatelyequal'] = 0x2253;\\n  t['imatragurmukhi'] = 0x0A3F;\\n  t['imonospace'] = 0xFF49;\\n  t['increment'] = 0x2206;\\n  t['infinity'] = 0x221E;\\n  t['iniarmenian'] = 0x056B;\\n  t['integral'] = 0x222B;\\n  t['integralbottom'] = 0x2321;\\n  t['integralbt'] = 0x2321;\\n  t['integralex'] = 0xF8F5;\\n  t['integraltop'] = 0x2320;\\n  t['integraltp'] = 0x2320;\\n  t['intersection'] = 0x2229;\\n  t['intisquare'] = 0x3305;\\n  t['invbullet'] = 0x25D8;\\n  t['invcircle'] = 0x25D9;\\n  t['invsmileface'] = 0x263B;\\n  t['iocyrillic'] = 0x0451;\\n  t['iogonek'] = 0x012F;\\n  t['iota'] = 0x03B9;\\n  t['iotadieresis'] = 0x03CA;\\n  t['iotadieresistonos'] = 0x0390;\\n  t['iotalatin'] = 0x0269;\\n  t['iotatonos'] = 0x03AF;\\n  t['iparen'] = 0x24A4;\\n  t['irigurmukhi'] = 0x0A72;\\n  t['ismallhiragana'] = 0x3043;\\n  t['ismallkatakana'] = 0x30A3;\\n  t['ismallkatakanahalfwidth'] = 0xFF68;\\n  t['issharbengali'] = 0x09FA;\\n  t['istroke'] = 0x0268;\\n  t['isuperior'] = 0xF6ED;\\n  t['iterationhiragana'] = 0x309D;\\n  t['iterationkatakana'] = 0x30FD;\\n  t['itilde'] = 0x0129;\\n  t['itildebelow'] = 0x1E2D;\\n  t['iubopomofo'] = 0x3129;\\n  t['iucyrillic'] = 0x044E;\\n  t['ivowelsignbengali'] = 0x09BF;\\n  t['ivowelsigndeva'] = 0x093F;\\n  t['ivowelsigngujarati'] = 0x0ABF;\\n  t['izhitsacyrillic'] = 0x0475;\\n  t['izhitsadblgravecyrillic'] = 0x0477;\\n  t['j'] = 0x006A;\\n  t['jaarmenian'] = 0x0571;\\n  t['jabengali'] = 0x099C;\\n  t['jadeva'] = 0x091C;\\n  t['jagujarati'] = 0x0A9C;\\n  t['jagurmukhi'] = 0x0A1C;\\n  t['jbopomofo'] = 0x3110;\\n  t['jcaron'] = 0x01F0;\\n  t['jcircle'] = 0x24D9;\\n  t['jcircumflex'] = 0x0135;\\n  t['jcrossedtail'] = 0x029D;\\n  t['jdotlessstroke'] = 0x025F;\\n  t['jecyrillic'] = 0x0458;\\n  t['jeemarabic'] = 0x062C;\\n  t['jeemfinalarabic'] = 0xFE9E;\\n  t['jeeminitialarabic'] = 0xFE9F;\\n  t['jeemmedialarabic'] = 0xFEA0;\\n  t['jeharabic'] = 0x0698;\\n  t['jehfinalarabic'] = 0xFB8B;\\n  t['jhabengali'] = 0x099D;\\n  t['jhadeva'] = 0x091D;\\n  t['jhagujarati'] = 0x0A9D;\\n  t['jhagurmukhi'] = 0x0A1D;\\n  t['jheharmenian'] = 0x057B;\\n  t['jis'] = 0x3004;\\n  t['jmonospace'] = 0xFF4A;\\n  t['jparen'] = 0x24A5;\\n  t['jsuperior'] = 0x02B2;\\n  t['k'] = 0x006B;\\n  t['kabashkircyrillic'] = 0x04A1;\\n  t['kabengali'] = 0x0995;\\n  t['kacute'] = 0x1E31;\\n  t['kacyrillic'] = 0x043A;\\n  t['kadescendercyrillic'] = 0x049B;\\n  t['kadeva'] = 0x0915;\\n  t['kaf'] = 0x05DB;\\n  t['kafarabic'] = 0x0643;\\n  t['kafdagesh'] = 0xFB3B;\\n  t['kafdageshhebrew'] = 0xFB3B;\\n  t['kaffinalarabic'] = 0xFEDA;\\n  t['kafhebrew'] = 0x05DB;\\n  t['kafinitialarabic'] = 0xFEDB;\\n  t['kafmedialarabic'] = 0xFEDC;\\n  t['kafrafehebrew'] = 0xFB4D;\\n  t['kagujarati'] = 0x0A95;\\n  t['kagurmukhi'] = 0x0A15;\\n  t['kahiragana'] = 0x304B;\\n  t['kahookcyrillic'] = 0x04C4;\\n  t['kakatakana'] = 0x30AB;\\n  t['kakatakanahalfwidth'] = 0xFF76;\\n  t['kappa'] = 0x03BA;\\n  t['kappasymbolgreek'] = 0x03F0;\\n  t['kapyeounmieumkorean'] = 0x3171;\\n  t['kapyeounphieuphkorean'] = 0x3184;\\n  t['kapyeounpieupkorean'] = 0x3178;\\n  t['kapyeounssangpieupkorean'] = 0x3179;\\n  t['karoriisquare'] = 0x330D;\\n  t['kashidaautoarabic'] = 0x0640;\\n  t['kashidaautonosidebearingarabic'] = 0x0640;\\n  t['kasmallkatakana'] = 0x30F5;\\n  t['kasquare'] = 0x3384;\\n  t['kasraarabic'] = 0x0650;\\n  t['kasratanarabic'] = 0x064D;\\n  t['kastrokecyrillic'] = 0x049F;\\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\\n  t['kaverticalstrokecyrillic'] = 0x049D;\\n  t['kbopomofo'] = 0x310E;\\n  t['kcalsquare'] = 0x3389;\\n  t['kcaron'] = 0x01E9;\\n  t['kcedilla'] = 0x0137;\\n  t['kcircle'] = 0x24DA;\\n  t['kcommaaccent'] = 0x0137;\\n  t['kdotbelow'] = 0x1E33;\\n  t['keharmenian'] = 0x0584;\\n  t['kehiragana'] = 0x3051;\\n  t['kekatakana'] = 0x30B1;\\n  t['kekatakanahalfwidth'] = 0xFF79;\\n  t['kenarmenian'] = 0x056F;\\n  t['kesmallkatakana'] = 0x30F6;\\n  t['kgreenlandic'] = 0x0138;\\n  t['khabengali'] = 0x0996;\\n  t['khacyrillic'] = 0x0445;\\n  t['khadeva'] = 0x0916;\\n  t['khagujarati'] = 0x0A96;\\n  t['khagurmukhi'] = 0x0A16;\\n  t['khaharabic'] = 0x062E;\\n  t['khahfinalarabic'] = 0xFEA6;\\n  t['khahinitialarabic'] = 0xFEA7;\\n  t['khahmedialarabic'] = 0xFEA8;\\n  t['kheicoptic'] = 0x03E7;\\n  t['khhadeva'] = 0x0959;\\n  t['khhagurmukhi'] = 0x0A59;\\n  t['khieukhacirclekorean'] = 0x3278;\\n  t['khieukhaparenkorean'] = 0x3218;\\n  t['khieukhcirclekorean'] = 0x326A;\\n  t['khieukhkorean'] = 0x314B;\\n  t['khieukhparenkorean'] = 0x320A;\\n  t['khokhaithai'] = 0x0E02;\\n  t['khokhonthai'] = 0x0E05;\\n  t['khokhuatthai'] = 0x0E03;\\n  t['khokhwaithai'] = 0x0E04;\\n  t['khomutthai'] = 0x0E5B;\\n  t['khook'] = 0x0199;\\n  t['khorakhangthai'] = 0x0E06;\\n  t['khzsquare'] = 0x3391;\\n  t['kihiragana'] = 0x304D;\\n  t['kikatakana'] = 0x30AD;\\n  t['kikatakanahalfwidth'] = 0xFF77;\\n  t['kiroguramusquare'] = 0x3315;\\n  t['kiromeetorusquare'] = 0x3316;\\n  t['kirosquare'] = 0x3314;\\n  t['kiyeokacirclekorean'] = 0x326E;\\n  t['kiyeokaparenkorean'] = 0x320E;\\n  t['kiyeokcirclekorean'] = 0x3260;\\n  t['kiyeokkorean'] = 0x3131;\\n  t['kiyeokparenkorean'] = 0x3200;\\n  t['kiyeoksioskorean'] = 0x3133;\\n  t['kjecyrillic'] = 0x045C;\\n  t['klinebelow'] = 0x1E35;\\n  t['klsquare'] = 0x3398;\\n  t['kmcubedsquare'] = 0x33A6;\\n  t['kmonospace'] = 0xFF4B;\\n  t['kmsquaredsquare'] = 0x33A2;\\n  t['kohiragana'] = 0x3053;\\n  t['kohmsquare'] = 0x33C0;\\n  t['kokaithai'] = 0x0E01;\\n  t['kokatakana'] = 0x30B3;\\n  t['kokatakanahalfwidth'] = 0xFF7A;\\n  t['kooposquare'] = 0x331E;\\n  t['koppacyrillic'] = 0x0481;\\n  t['koreanstandardsymbol'] = 0x327F;\\n  t['koroniscmb'] = 0x0343;\\n  t['kparen'] = 0x24A6;\\n  t['kpasquare'] = 0x33AA;\\n  t['ksicyrillic'] = 0x046F;\\n  t['ktsquare'] = 0x33CF;\\n  t['kturned'] = 0x029E;\\n  t['kuhiragana'] = 0x304F;\\n  t['kukatakana'] = 0x30AF;\\n  t['kukatakanahalfwidth'] = 0xFF78;\\n  t['kvsquare'] = 0x33B8;\\n  t['kwsquare'] = 0x33BE;\\n  t['l'] = 0x006C;\\n  t['labengali'] = 0x09B2;\\n  t['lacute'] = 0x013A;\\n  t['ladeva'] = 0x0932;\\n  t['lagujarati'] = 0x0AB2;\\n  t['lagurmukhi'] = 0x0A32;\\n  t['lakkhangyaothai'] = 0x0E45;\\n  t['lamaleffinalarabic'] = 0xFEFC;\\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\\n  t['lamalefisolatedarabic'] = 0xFEFB;\\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\\n  t['lamarabic'] = 0x0644;\\n  t['lambda'] = 0x03BB;\\n  t['lambdastroke'] = 0x019B;\\n  t['lamed'] = 0x05DC;\\n  t['lameddagesh'] = 0xFB3C;\\n  t['lameddageshhebrew'] = 0xFB3C;\\n  t['lamedhebrew'] = 0x05DC;\\n  t['lamfinalarabic'] = 0xFEDE;\\n  t['lamhahinitialarabic'] = 0xFCCA;\\n  t['laminitialarabic'] = 0xFEDF;\\n  t['lamjeeminitialarabic'] = 0xFCC9;\\n  t['lamkhahinitialarabic'] = 0xFCCB;\\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\\n  t['lammedialarabic'] = 0xFEE0;\\n  t['lammeemhahinitialarabic'] = 0xFD88;\\n  t['lammeeminitialarabic'] = 0xFCCC;\\n  t['largecircle'] = 0x25EF;\\n  t['lbar'] = 0x019A;\\n  t['lbelt'] = 0x026C;\\n  t['lbopomofo'] = 0x310C;\\n  t['lcaron'] = 0x013E;\\n  t['lcedilla'] = 0x013C;\\n  t['lcircle'] = 0x24DB;\\n  t['lcircumflexbelow'] = 0x1E3D;\\n  t['lcommaaccent'] = 0x013C;\\n  t['ldot'] = 0x0140;\\n  t['ldotaccent'] = 0x0140;\\n  t['ldotbelow'] = 0x1E37;\\n  t['ldotbelowmacron'] = 0x1E39;\\n  t['leftangleabovecmb'] = 0x031A;\\n  t['lefttackbelowcmb'] = 0x0318;\\n  t['less'] = 0x003C;\\n  t['lessequal'] = 0x2264;\\n  t['lessequalorgreater'] = 0x22DA;\\n  t['lessmonospace'] = 0xFF1C;\\n  t['lessorequivalent'] = 0x2272;\\n  t['lessorgreater'] = 0x2276;\\n  t['lessoverequal'] = 0x2266;\\n  t['lesssmall'] = 0xFE64;\\n  t['lezh'] = 0x026E;\\n  t['lfblock'] = 0x258C;\\n  t['lhookretroflex'] = 0x026D;\\n  t['lira'] = 0x20A4;\\n  t['liwnarmenian'] = 0x056C;\\n  t['lj'] = 0x01C9;\\n  t['ljecyrillic'] = 0x0459;\\n  t['ll'] = 0xF6C0;\\n  t['lladeva'] = 0x0933;\\n  t['llagujarati'] = 0x0AB3;\\n  t['llinebelow'] = 0x1E3B;\\n  t['llladeva'] = 0x0934;\\n  t['llvocalicbengali'] = 0x09E1;\\n  t['llvocalicdeva'] = 0x0961;\\n  t['llvocalicvowelsignbengali'] = 0x09E3;\\n  t['llvocalicvowelsigndeva'] = 0x0963;\\n  t['lmiddletilde'] = 0x026B;\\n  t['lmonospace'] = 0xFF4C;\\n  t['lmsquare'] = 0x33D0;\\n  t['lochulathai'] = 0x0E2C;\\n  t['logicaland'] = 0x2227;\\n  t['logicalnot'] = 0x00AC;\\n  t['logicalnotreversed'] = 0x2310;\\n  t['logicalor'] = 0x2228;\\n  t['lolingthai'] = 0x0E25;\\n  t['longs'] = 0x017F;\\n  t['lowlinecenterline'] = 0xFE4E;\\n  t['lowlinecmb'] = 0x0332;\\n  t['lowlinedashed'] = 0xFE4D;\\n  t['lozenge'] = 0x25CA;\\n  t['lparen'] = 0x24A7;\\n  t['lslash'] = 0x0142;\\n  t['lsquare'] = 0x2113;\\n  t['lsuperior'] = 0xF6EE;\\n  t['ltshade'] = 0x2591;\\n  t['luthai'] = 0x0E26;\\n  t['lvocalicbengali'] = 0x098C;\\n  t['lvocalicdeva'] = 0x090C;\\n  t['lvocalicvowelsignbengali'] = 0x09E2;\\n  t['lvocalicvowelsigndeva'] = 0x0962;\\n  t['lxsquare'] = 0x33D3;\\n  t['m'] = 0x006D;\\n  t['mabengali'] = 0x09AE;\\n  t['macron'] = 0x00AF;\\n  t['macronbelowcmb'] = 0x0331;\\n  t['macroncmb'] = 0x0304;\\n  t['macronlowmod'] = 0x02CD;\\n  t['macronmonospace'] = 0xFFE3;\\n  t['macute'] = 0x1E3F;\\n  t['madeva'] = 0x092E;\\n  t['magujarati'] = 0x0AAE;\\n  t['magurmukhi'] = 0x0A2E;\\n  t['mahapakhhebrew'] = 0x05A4;\\n  t['mahapakhlefthebrew'] = 0x05A4;\\n  t['mahiragana'] = 0x307E;\\n  t['maichattawalowleftthai'] = 0xF895;\\n  t['maichattawalowrightthai'] = 0xF894;\\n  t['maichattawathai'] = 0x0E4B;\\n  t['maichattawaupperleftthai'] = 0xF893;\\n  t['maieklowleftthai'] = 0xF88C;\\n  t['maieklowrightthai'] = 0xF88B;\\n  t['maiekthai'] = 0x0E48;\\n  t['maiekupperleftthai'] = 0xF88A;\\n  t['maihanakatleftthai'] = 0xF884;\\n  t['maihanakatthai'] = 0x0E31;\\n  t['maitaikhuleftthai'] = 0xF889;\\n  t['maitaikhuthai'] = 0x0E47;\\n  t['maitholowleftthai'] = 0xF88F;\\n  t['maitholowrightthai'] = 0xF88E;\\n  t['maithothai'] = 0x0E49;\\n  t['maithoupperleftthai'] = 0xF88D;\\n  t['maitrilowleftthai'] = 0xF892;\\n  t['maitrilowrightthai'] = 0xF891;\\n  t['maitrithai'] = 0x0E4A;\\n  t['maitriupperleftthai'] = 0xF890;\\n  t['maiyamokthai'] = 0x0E46;\\n  t['makatakana'] = 0x30DE;\\n  t['makatakanahalfwidth'] = 0xFF8F;\\n  t['male'] = 0x2642;\\n  t['mansyonsquare'] = 0x3347;\\n  t['maqafhebrew'] = 0x05BE;\\n  t['mars'] = 0x2642;\\n  t['masoracirclehebrew'] = 0x05AF;\\n  t['masquare'] = 0x3383;\\n  t['mbopomofo'] = 0x3107;\\n  t['mbsquare'] = 0x33D4;\\n  t['mcircle'] = 0x24DC;\\n  t['mcubedsquare'] = 0x33A5;\\n  t['mdotaccent'] = 0x1E41;\\n  t['mdotbelow'] = 0x1E43;\\n  t['meemarabic'] = 0x0645;\\n  t['meemfinalarabic'] = 0xFEE2;\\n  t['meeminitialarabic'] = 0xFEE3;\\n  t['meemmedialarabic'] = 0xFEE4;\\n  t['meemmeeminitialarabic'] = 0xFCD1;\\n  t['meemmeemisolatedarabic'] = 0xFC48;\\n  t['meetorusquare'] = 0x334D;\\n  t['mehiragana'] = 0x3081;\\n  t['meizierasquare'] = 0x337E;\\n  t['mekatakana'] = 0x30E1;\\n  t['mekatakanahalfwidth'] = 0xFF92;\\n  t['mem'] = 0x05DE;\\n  t['memdagesh'] = 0xFB3E;\\n  t['memdageshhebrew'] = 0xFB3E;\\n  t['memhebrew'] = 0x05DE;\\n  t['menarmenian'] = 0x0574;\\n  t['merkhahebrew'] = 0x05A5;\\n  t['merkhakefulahebrew'] = 0x05A6;\\n  t['merkhakefulalefthebrew'] = 0x05A6;\\n  t['merkhalefthebrew'] = 0x05A5;\\n  t['mhook'] = 0x0271;\\n  t['mhzsquare'] = 0x3392;\\n  t['middledotkatakanahalfwidth'] = 0xFF65;\\n  t['middot'] = 0x00B7;\\n  t['mieumacirclekorean'] = 0x3272;\\n  t['mieumaparenkorean'] = 0x3212;\\n  t['mieumcirclekorean'] = 0x3264;\\n  t['mieumkorean'] = 0x3141;\\n  t['mieumpansioskorean'] = 0x3170;\\n  t['mieumparenkorean'] = 0x3204;\\n  t['mieumpieupkorean'] = 0x316E;\\n  t['mieumsioskorean'] = 0x316F;\\n  t['mihiragana'] = 0x307F;\\n  t['mikatakana'] = 0x30DF;\\n  t['mikatakanahalfwidth'] = 0xFF90;\\n  t['minus'] = 0x2212;\\n  t['minusbelowcmb'] = 0x0320;\\n  t['minuscircle'] = 0x2296;\\n  t['minusmod'] = 0x02D7;\\n  t['minusplus'] = 0x2213;\\n  t['minute'] = 0x2032;\\n  t['miribaarusquare'] = 0x334A;\\n  t['mirisquare'] = 0x3349;\\n  t['mlonglegturned'] = 0x0270;\\n  t['mlsquare'] = 0x3396;\\n  t['mmcubedsquare'] = 0x33A3;\\n  t['mmonospace'] = 0xFF4D;\\n  t['mmsquaredsquare'] = 0x339F;\\n  t['mohiragana'] = 0x3082;\\n  t['mohmsquare'] = 0x33C1;\\n  t['mokatakana'] = 0x30E2;\\n  t['mokatakanahalfwidth'] = 0xFF93;\\n  t['molsquare'] = 0x33D6;\\n  t['momathai'] = 0x0E21;\\n  t['moverssquare'] = 0x33A7;\\n  t['moverssquaredsquare'] = 0x33A8;\\n  t['mparen'] = 0x24A8;\\n  t['mpasquare'] = 0x33AB;\\n  t['mssquare'] = 0x33B3;\\n  t['msuperior'] = 0xF6EF;\\n  t['mturned'] = 0x026F;\\n  t['mu'] = 0x00B5;\\n  t['mu1'] = 0x00B5;\\n  t['muasquare'] = 0x3382;\\n  t['muchgreater'] = 0x226B;\\n  t['muchless'] = 0x226A;\\n  t['mufsquare'] = 0x338C;\\n  t['mugreek'] = 0x03BC;\\n  t['mugsquare'] = 0x338D;\\n  t['muhiragana'] = 0x3080;\\n  t['mukatakana'] = 0x30E0;\\n  t['mukatakanahalfwidth'] = 0xFF91;\\n  t['mulsquare'] = 0x3395;\\n  t['multiply'] = 0x00D7;\\n  t['mumsquare'] = 0x339B;\\n  t['munahhebrew'] = 0x05A3;\\n  t['munahlefthebrew'] = 0x05A3;\\n  t['musicalnote'] = 0x266A;\\n  t['musicalnotedbl'] = 0x266B;\\n  t['musicflatsign'] = 0x266D;\\n  t['musicsharpsign'] = 0x266F;\\n  t['mussquare'] = 0x33B2;\\n  t['muvsquare'] = 0x33B6;\\n  t['muwsquare'] = 0x33BC;\\n  t['mvmegasquare'] = 0x33B9;\\n  t['mvsquare'] = 0x33B7;\\n  t['mwmegasquare'] = 0x33BF;\\n  t['mwsquare'] = 0x33BD;\\n  t['n'] = 0x006E;\\n  t['nabengali'] = 0x09A8;\\n  t['nabla'] = 0x2207;\\n  t['nacute'] = 0x0144;\\n  t['nadeva'] = 0x0928;\\n  t['nagujarati'] = 0x0AA8;\\n  t['nagurmukhi'] = 0x0A28;\\n  t['nahiragana'] = 0x306A;\\n  t['nakatakana'] = 0x30CA;\\n  t['nakatakanahalfwidth'] = 0xFF85;\\n  t['napostrophe'] = 0x0149;\\n  t['nasquare'] = 0x3381;\\n  t['nbopomofo'] = 0x310B;\\n  t['nbspace'] = 0x00A0;\\n  t['ncaron'] = 0x0148;\\n  t['ncedilla'] = 0x0146;\\n  t['ncircle'] = 0x24DD;\\n  t['ncircumflexbelow'] = 0x1E4B;\\n  t['ncommaaccent'] = 0x0146;\\n  t['ndotaccent'] = 0x1E45;\\n  t['ndotbelow'] = 0x1E47;\\n  t['nehiragana'] = 0x306D;\\n  t['nekatakana'] = 0x30CD;\\n  t['nekatakanahalfwidth'] = 0xFF88;\\n  t['newsheqelsign'] = 0x20AA;\\n  t['nfsquare'] = 0x338B;\\n  t['ngabengali'] = 0x0999;\\n  t['ngadeva'] = 0x0919;\\n  t['ngagujarati'] = 0x0A99;\\n  t['ngagurmukhi'] = 0x0A19;\\n  t['ngonguthai'] = 0x0E07;\\n  t['nhiragana'] = 0x3093;\\n  t['nhookleft'] = 0x0272;\\n  t['nhookretroflex'] = 0x0273;\\n  t['nieunacirclekorean'] = 0x326F;\\n  t['nieunaparenkorean'] = 0x320F;\\n  t['nieuncieuckorean'] = 0x3135;\\n  t['nieuncirclekorean'] = 0x3261;\\n  t['nieunhieuhkorean'] = 0x3136;\\n  t['nieunkorean'] = 0x3134;\\n  t['nieunpansioskorean'] = 0x3168;\\n  t['nieunparenkorean'] = 0x3201;\\n  t['nieunsioskorean'] = 0x3167;\\n  t['nieuntikeutkorean'] = 0x3166;\\n  t['nihiragana'] = 0x306B;\\n  t['nikatakana'] = 0x30CB;\\n  t['nikatakanahalfwidth'] = 0xFF86;\\n  t['nikhahitleftthai'] = 0xF899;\\n  t['nikhahitthai'] = 0x0E4D;\\n  t['nine'] = 0x0039;\\n  t['ninearabic'] = 0x0669;\\n  t['ninebengali'] = 0x09EF;\\n  t['ninecircle'] = 0x2468;\\n  t['ninecircleinversesansserif'] = 0x2792;\\n  t['ninedeva'] = 0x096F;\\n  t['ninegujarati'] = 0x0AEF;\\n  t['ninegurmukhi'] = 0x0A6F;\\n  t['ninehackarabic'] = 0x0669;\\n  t['ninehangzhou'] = 0x3029;\\n  t['nineideographicparen'] = 0x3228;\\n  t['nineinferior'] = 0x2089;\\n  t['ninemonospace'] = 0xFF19;\\n  t['nineoldstyle'] = 0xF739;\\n  t['nineparen'] = 0x247C;\\n  t['nineperiod'] = 0x2490;\\n  t['ninepersian'] = 0x06F9;\\n  t['nineroman'] = 0x2178;\\n  t['ninesuperior'] = 0x2079;\\n  t['nineteencircle'] = 0x2472;\\n  t['nineteenparen'] = 0x2486;\\n  t['nineteenperiod'] = 0x249A;\\n  t['ninethai'] = 0x0E59;\\n  t['nj'] = 0x01CC;\\n  t['njecyrillic'] = 0x045A;\\n  t['nkatakana'] = 0x30F3;\\n  t['nkatakanahalfwidth'] = 0xFF9D;\\n  t['nlegrightlong'] = 0x019E;\\n  t['nlinebelow'] = 0x1E49;\\n  t['nmonospace'] = 0xFF4E;\\n  t['nmsquare'] = 0x339A;\\n  t['nnabengali'] = 0x09A3;\\n  t['nnadeva'] = 0x0923;\\n  t['nnagujarati'] = 0x0AA3;\\n  t['nnagurmukhi'] = 0x0A23;\\n  t['nnnadeva'] = 0x0929;\\n  t['nohiragana'] = 0x306E;\\n  t['nokatakana'] = 0x30CE;\\n  t['nokatakanahalfwidth'] = 0xFF89;\\n  t['nonbreakingspace'] = 0x00A0;\\n  t['nonenthai'] = 0x0E13;\\n  t['nonuthai'] = 0x0E19;\\n  t['noonarabic'] = 0x0646;\\n  t['noonfinalarabic'] = 0xFEE6;\\n  t['noonghunnaarabic'] = 0x06BA;\\n  t['noonghunnafinalarabic'] = 0xFB9F;\\n  t['nooninitialarabic'] = 0xFEE7;\\n  t['noonjeeminitialarabic'] = 0xFCD2;\\n  t['noonjeemisolatedarabic'] = 0xFC4B;\\n  t['noonmedialarabic'] = 0xFEE8;\\n  t['noonmeeminitialarabic'] = 0xFCD5;\\n  t['noonmeemisolatedarabic'] = 0xFC4E;\\n  t['noonnoonfinalarabic'] = 0xFC8D;\\n  t['notcontains'] = 0x220C;\\n  t['notelement'] = 0x2209;\\n  t['notelementof'] = 0x2209;\\n  t['notequal'] = 0x2260;\\n  t['notgreater'] = 0x226F;\\n  t['notgreaternorequal'] = 0x2271;\\n  t['notgreaternorless'] = 0x2279;\\n  t['notidentical'] = 0x2262;\\n  t['notless'] = 0x226E;\\n  t['notlessnorequal'] = 0x2270;\\n  t['notparallel'] = 0x2226;\\n  t['notprecedes'] = 0x2280;\\n  t['notsubset'] = 0x2284;\\n  t['notsucceeds'] = 0x2281;\\n  t['notsuperset'] = 0x2285;\\n  t['nowarmenian'] = 0x0576;\\n  t['nparen'] = 0x24A9;\\n  t['nssquare'] = 0x33B1;\\n  t['nsuperior'] = 0x207F;\\n  t['ntilde'] = 0x00F1;\\n  t['nu'] = 0x03BD;\\n  t['nuhiragana'] = 0x306C;\\n  t['nukatakana'] = 0x30CC;\\n  t['nukatakanahalfwidth'] = 0xFF87;\\n  t['nuktabengali'] = 0x09BC;\\n  t['nuktadeva'] = 0x093C;\\n  t['nuktagujarati'] = 0x0ABC;\\n  t['nuktagurmukhi'] = 0x0A3C;\\n  t['numbersign'] = 0x0023;\\n  t['numbersignmonospace'] = 0xFF03;\\n  t['numbersignsmall'] = 0xFE5F;\\n  t['numeralsigngreek'] = 0x0374;\\n  t['numeralsignlowergreek'] = 0x0375;\\n  t['numero'] = 0x2116;\\n  t['nun'] = 0x05E0;\\n  t['nundagesh'] = 0xFB40;\\n  t['nundageshhebrew'] = 0xFB40;\\n  t['nunhebrew'] = 0x05E0;\\n  t['nvsquare'] = 0x33B5;\\n  t['nwsquare'] = 0x33BB;\\n  t['nyabengali'] = 0x099E;\\n  t['nyadeva'] = 0x091E;\\n  t['nyagujarati'] = 0x0A9E;\\n  t['nyagurmukhi'] = 0x0A1E;\\n  t['o'] = 0x006F;\\n  t['oacute'] = 0x00F3;\\n  t['oangthai'] = 0x0E2D;\\n  t['obarred'] = 0x0275;\\n  t['obarredcyrillic'] = 0x04E9;\\n  t['obarreddieresiscyrillic'] = 0x04EB;\\n  t['obengali'] = 0x0993;\\n  t['obopomofo'] = 0x311B;\\n  t['obreve'] = 0x014F;\\n  t['ocandradeva'] = 0x0911;\\n  t['ocandragujarati'] = 0x0A91;\\n  t['ocandravowelsigndeva'] = 0x0949;\\n  t['ocandravowelsigngujarati'] = 0x0AC9;\\n  t['ocaron'] = 0x01D2;\\n  t['ocircle'] = 0x24DE;\\n  t['ocircumflex'] = 0x00F4;\\n  t['ocircumflexacute'] = 0x1ED1;\\n  t['ocircumflexdotbelow'] = 0x1ED9;\\n  t['ocircumflexgrave'] = 0x1ED3;\\n  t['ocircumflexhookabove'] = 0x1ED5;\\n  t['ocircumflextilde'] = 0x1ED7;\\n  t['ocyrillic'] = 0x043E;\\n  t['odblacute'] = 0x0151;\\n  t['odblgrave'] = 0x020D;\\n  t['odeva'] = 0x0913;\\n  t['odieresis'] = 0x00F6;\\n  t['odieresiscyrillic'] = 0x04E7;\\n  t['odotbelow'] = 0x1ECD;\\n  t['oe'] = 0x0153;\\n  t['oekorean'] = 0x315A;\\n  t['ogonek'] = 0x02DB;\\n  t['ogonekcmb'] = 0x0328;\\n  t['ograve'] = 0x00F2;\\n  t['ogujarati'] = 0x0A93;\\n  t['oharmenian'] = 0x0585;\\n  t['ohiragana'] = 0x304A;\\n  t['ohookabove'] = 0x1ECF;\\n  t['ohorn'] = 0x01A1;\\n  t['ohornacute'] = 0x1EDB;\\n  t['ohorndotbelow'] = 0x1EE3;\\n  t['ohorngrave'] = 0x1EDD;\\n  t['ohornhookabove'] = 0x1EDF;\\n  t['ohorntilde'] = 0x1EE1;\\n  t['ohungarumlaut'] = 0x0151;\\n  t['oi'] = 0x01A3;\\n  t['oinvertedbreve'] = 0x020F;\\n  t['okatakana'] = 0x30AA;\\n  t['okatakanahalfwidth'] = 0xFF75;\\n  t['okorean'] = 0x3157;\\n  t['olehebrew'] = 0x05AB;\\n  t['omacron'] = 0x014D;\\n  t['omacronacute'] = 0x1E53;\\n  t['omacrongrave'] = 0x1E51;\\n  t['omdeva'] = 0x0950;\\n  t['omega'] = 0x03C9;\\n  t['omega1'] = 0x03D6;\\n  t['omegacyrillic'] = 0x0461;\\n  t['omegalatinclosed'] = 0x0277;\\n  t['omegaroundcyrillic'] = 0x047B;\\n  t['omegatitlocyrillic'] = 0x047D;\\n  t['omegatonos'] = 0x03CE;\\n  t['omgujarati'] = 0x0AD0;\\n  t['omicron'] = 0x03BF;\\n  t['omicrontonos'] = 0x03CC;\\n  t['omonospace'] = 0xFF4F;\\n  t['one'] = 0x0031;\\n  t['onearabic'] = 0x0661;\\n  t['onebengali'] = 0x09E7;\\n  t['onecircle'] = 0x2460;\\n  t['onecircleinversesansserif'] = 0x278A;\\n  t['onedeva'] = 0x0967;\\n  t['onedotenleader'] = 0x2024;\\n  t['oneeighth'] = 0x215B;\\n  t['onefitted'] = 0xF6DC;\\n  t['onegujarati'] = 0x0AE7;\\n  t['onegurmukhi'] = 0x0A67;\\n  t['onehackarabic'] = 0x0661;\\n  t['onehalf'] = 0x00BD;\\n  t['onehangzhou'] = 0x3021;\\n  t['oneideographicparen'] = 0x3220;\\n  t['oneinferior'] = 0x2081;\\n  t['onemonospace'] = 0xFF11;\\n  t['onenumeratorbengali'] = 0x09F4;\\n  t['oneoldstyle'] = 0xF731;\\n  t['oneparen'] = 0x2474;\\n  t['oneperiod'] = 0x2488;\\n  t['onepersian'] = 0x06F1;\\n  t['onequarter'] = 0x00BC;\\n  t['oneroman'] = 0x2170;\\n  t['onesuperior'] = 0x00B9;\\n  t['onethai'] = 0x0E51;\\n  t['onethird'] = 0x2153;\\n  t['oogonek'] = 0x01EB;\\n  t['oogonekmacron'] = 0x01ED;\\n  t['oogurmukhi'] = 0x0A13;\\n  t['oomatragurmukhi'] = 0x0A4B;\\n  t['oopen'] = 0x0254;\\n  t['oparen'] = 0x24AA;\\n  t['openbullet'] = 0x25E6;\\n  t['option'] = 0x2325;\\n  t['ordfeminine'] = 0x00AA;\\n  t['ordmasculine'] = 0x00BA;\\n  t['orthogonal'] = 0x221F;\\n  t['oshortdeva'] = 0x0912;\\n  t['oshortvowelsigndeva'] = 0x094A;\\n  t['oslash'] = 0x00F8;\\n  t['oslashacute'] = 0x01FF;\\n  t['osmallhiragana'] = 0x3049;\\n  t['osmallkatakana'] = 0x30A9;\\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\\n  t['ostrokeacute'] = 0x01FF;\\n  t['osuperior'] = 0xF6F0;\\n  t['otcyrillic'] = 0x047F;\\n  t['otilde'] = 0x00F5;\\n  t['otildeacute'] = 0x1E4D;\\n  t['otildedieresis'] = 0x1E4F;\\n  t['oubopomofo'] = 0x3121;\\n  t['overline'] = 0x203E;\\n  t['overlinecenterline'] = 0xFE4A;\\n  t['overlinecmb'] = 0x0305;\\n  t['overlinedashed'] = 0xFE49;\\n  t['overlinedblwavy'] = 0xFE4C;\\n  t['overlinewavy'] = 0xFE4B;\\n  t['overscore'] = 0x00AF;\\n  t['ovowelsignbengali'] = 0x09CB;\\n  t['ovowelsigndeva'] = 0x094B;\\n  t['ovowelsigngujarati'] = 0x0ACB;\\n  t['p'] = 0x0070;\\n  t['paampssquare'] = 0x3380;\\n  t['paasentosquare'] = 0x332B;\\n  t['pabengali'] = 0x09AA;\\n  t['pacute'] = 0x1E55;\\n  t['padeva'] = 0x092A;\\n  t['pagedown'] = 0x21DF;\\n  t['pageup'] = 0x21DE;\\n  t['pagujarati'] = 0x0AAA;\\n  t['pagurmukhi'] = 0x0A2A;\\n  t['pahiragana'] = 0x3071;\\n  t['paiyannoithai'] = 0x0E2F;\\n  t['pakatakana'] = 0x30D1;\\n  t['palatalizationcyrilliccmb'] = 0x0484;\\n  t['palochkacyrillic'] = 0x04C0;\\n  t['pansioskorean'] = 0x317F;\\n  t['paragraph'] = 0x00B6;\\n  t['parallel'] = 0x2225;\\n  t['parenleft'] = 0x0028;\\n  t['parenleftaltonearabic'] = 0xFD3E;\\n  t['parenleftbt'] = 0xF8ED;\\n  t['parenleftex'] = 0xF8EC;\\n  t['parenleftinferior'] = 0x208D;\\n  t['parenleftmonospace'] = 0xFF08;\\n  t['parenleftsmall'] = 0xFE59;\\n  t['parenleftsuperior'] = 0x207D;\\n  t['parenlefttp'] = 0xF8EB;\\n  t['parenleftvertical'] = 0xFE35;\\n  t['parenright'] = 0x0029;\\n  t['parenrightaltonearabic'] = 0xFD3F;\\n  t['parenrightbt'] = 0xF8F8;\\n  t['parenrightex'] = 0xF8F7;\\n  t['parenrightinferior'] = 0x208E;\\n  t['parenrightmonospace'] = 0xFF09;\\n  t['parenrightsmall'] = 0xFE5A;\\n  t['parenrightsuperior'] = 0x207E;\\n  t['parenrighttp'] = 0xF8F6;\\n  t['parenrightvertical'] = 0xFE36;\\n  t['partialdiff'] = 0x2202;\\n  t['paseqhebrew'] = 0x05C0;\\n  t['pashtahebrew'] = 0x0599;\\n  t['pasquare'] = 0x33A9;\\n  t['patah'] = 0x05B7;\\n  t['patah11'] = 0x05B7;\\n  t['patah1d'] = 0x05B7;\\n  t['patah2a'] = 0x05B7;\\n  t['patahhebrew'] = 0x05B7;\\n  t['patahnarrowhebrew'] = 0x05B7;\\n  t['patahquarterhebrew'] = 0x05B7;\\n  t['patahwidehebrew'] = 0x05B7;\\n  t['pazerhebrew'] = 0x05A1;\\n  t['pbopomofo'] = 0x3106;\\n  t['pcircle'] = 0x24DF;\\n  t['pdotaccent'] = 0x1E57;\\n  t['pe'] = 0x05E4;\\n  t['pecyrillic'] = 0x043F;\\n  t['pedagesh'] = 0xFB44;\\n  t['pedageshhebrew'] = 0xFB44;\\n  t['peezisquare'] = 0x333B;\\n  t['pefinaldageshhebrew'] = 0xFB43;\\n  t['peharabic'] = 0x067E;\\n  t['peharmenian'] = 0x057A;\\n  t['pehebrew'] = 0x05E4;\\n  t['pehfinalarabic'] = 0xFB57;\\n  t['pehinitialarabic'] = 0xFB58;\\n  t['pehiragana'] = 0x307A;\\n  t['pehmedialarabic'] = 0xFB59;\\n  t['pekatakana'] = 0x30DA;\\n  t['pemiddlehookcyrillic'] = 0x04A7;\\n  t['perafehebrew'] = 0xFB4E;\\n  t['percent'] = 0x0025;\\n  t['percentarabic'] = 0x066A;\\n  t['percentmonospace'] = 0xFF05;\\n  t['percentsmall'] = 0xFE6A;\\n  t['period'] = 0x002E;\\n  t['periodarmenian'] = 0x0589;\\n  t['periodcentered'] = 0x00B7;\\n  t['periodhalfwidth'] = 0xFF61;\\n  t['periodinferior'] = 0xF6E7;\\n  t['periodmonospace'] = 0xFF0E;\\n  t['periodsmall'] = 0xFE52;\\n  t['periodsuperior'] = 0xF6E8;\\n  t['perispomenigreekcmb'] = 0x0342;\\n  t['perpendicular'] = 0x22A5;\\n  t['perthousand'] = 0x2030;\\n  t['peseta'] = 0x20A7;\\n  t['pfsquare'] = 0x338A;\\n  t['phabengali'] = 0x09AB;\\n  t['phadeva'] = 0x092B;\\n  t['phagujarati'] = 0x0AAB;\\n  t['phagurmukhi'] = 0x0A2B;\\n  t['phi'] = 0x03C6;\\n  t['phi1'] = 0x03D5;\\n  t['phieuphacirclekorean'] = 0x327A;\\n  t['phieuphaparenkorean'] = 0x321A;\\n  t['phieuphcirclekorean'] = 0x326C;\\n  t['phieuphkorean'] = 0x314D;\\n  t['phieuphparenkorean'] = 0x320C;\\n  t['philatin'] = 0x0278;\\n  t['phinthuthai'] = 0x0E3A;\\n  t['phisymbolgreek'] = 0x03D5;\\n  t['phook'] = 0x01A5;\\n  t['phophanthai'] = 0x0E1E;\\n  t['phophungthai'] = 0x0E1C;\\n  t['phosamphaothai'] = 0x0E20;\\n  t['pi'] = 0x03C0;\\n  t['pieupacirclekorean'] = 0x3273;\\n  t['pieupaparenkorean'] = 0x3213;\\n  t['pieupcieuckorean'] = 0x3176;\\n  t['pieupcirclekorean'] = 0x3265;\\n  t['pieupkiyeokkorean'] = 0x3172;\\n  t['pieupkorean'] = 0x3142;\\n  t['pieupparenkorean'] = 0x3205;\\n  t['pieupsioskiyeokkorean'] = 0x3174;\\n  t['pieupsioskorean'] = 0x3144;\\n  t['pieupsiostikeutkorean'] = 0x3175;\\n  t['pieupthieuthkorean'] = 0x3177;\\n  t['pieuptikeutkorean'] = 0x3173;\\n  t['pihiragana'] = 0x3074;\\n  t['pikatakana'] = 0x30D4;\\n  t['pisymbolgreek'] = 0x03D6;\\n  t['piwrarmenian'] = 0x0583;\\n  t['plus'] = 0x002B;\\n  t['plusbelowcmb'] = 0x031F;\\n  t['pluscircle'] = 0x2295;\\n  t['plusminus'] = 0x00B1;\\n  t['plusmod'] = 0x02D6;\\n  t['plusmonospace'] = 0xFF0B;\\n  t['plussmall'] = 0xFE62;\\n  t['plussuperior'] = 0x207A;\\n  t['pmonospace'] = 0xFF50;\\n  t['pmsquare'] = 0x33D8;\\n  t['pohiragana'] = 0x307D;\\n  t['pointingindexdownwhite'] = 0x261F;\\n  t['pointingindexleftwhite'] = 0x261C;\\n  t['pointingindexrightwhite'] = 0x261E;\\n  t['pointingindexupwhite'] = 0x261D;\\n  t['pokatakana'] = 0x30DD;\\n  t['poplathai'] = 0x0E1B;\\n  t['postalmark'] = 0x3012;\\n  t['postalmarkface'] = 0x3020;\\n  t['pparen'] = 0x24AB;\\n  t['precedes'] = 0x227A;\\n  t['prescription'] = 0x211E;\\n  t['primemod'] = 0x02B9;\\n  t['primereversed'] = 0x2035;\\n  t['product'] = 0x220F;\\n  t['projective'] = 0x2305;\\n  t['prolongedkana'] = 0x30FC;\\n  t['propellor'] = 0x2318;\\n  t['propersubset'] = 0x2282;\\n  t['propersuperset'] = 0x2283;\\n  t['proportion'] = 0x2237;\\n  t['proportional'] = 0x221D;\\n  t['psi'] = 0x03C8;\\n  t['psicyrillic'] = 0x0471;\\n  t['psilipneumatacyrilliccmb'] = 0x0486;\\n  t['pssquare'] = 0x33B0;\\n  t['puhiragana'] = 0x3077;\\n  t['pukatakana'] = 0x30D7;\\n  t['pvsquare'] = 0x33B4;\\n  t['pwsquare'] = 0x33BA;\\n  t['q'] = 0x0071;\\n  t['qadeva'] = 0x0958;\\n  t['qadmahebrew'] = 0x05A8;\\n  t['qafarabic'] = 0x0642;\\n  t['qaffinalarabic'] = 0xFED6;\\n  t['qafinitialarabic'] = 0xFED7;\\n  t['qafmedialarabic'] = 0xFED8;\\n  t['qamats'] = 0x05B8;\\n  t['qamats10'] = 0x05B8;\\n  t['qamats1a'] = 0x05B8;\\n  t['qamats1c'] = 0x05B8;\\n  t['qamats27'] = 0x05B8;\\n  t['qamats29'] = 0x05B8;\\n  t['qamats33'] = 0x05B8;\\n  t['qamatsde'] = 0x05B8;\\n  t['qamatshebrew'] = 0x05B8;\\n  t['qamatsnarrowhebrew'] = 0x05B8;\\n  t['qamatsqatanhebrew'] = 0x05B8;\\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\\n  t['qamatsqatanwidehebrew'] = 0x05B8;\\n  t['qamatsquarterhebrew'] = 0x05B8;\\n  t['qamatswidehebrew'] = 0x05B8;\\n  t['qarneyparahebrew'] = 0x059F;\\n  t['qbopomofo'] = 0x3111;\\n  t['qcircle'] = 0x24E0;\\n  t['qhook'] = 0x02A0;\\n  t['qmonospace'] = 0xFF51;\\n  t['qof'] = 0x05E7;\\n  t['qofdagesh'] = 0xFB47;\\n  t['qofdageshhebrew'] = 0xFB47;\\n  t['qofhebrew'] = 0x05E7;\\n  t['qparen'] = 0x24AC;\\n  t['quarternote'] = 0x2669;\\n  t['qubuts'] = 0x05BB;\\n  t['qubuts18'] = 0x05BB;\\n  t['qubuts25'] = 0x05BB;\\n  t['qubuts31'] = 0x05BB;\\n  t['qubutshebrew'] = 0x05BB;\\n  t['qubutsnarrowhebrew'] = 0x05BB;\\n  t['qubutsquarterhebrew'] = 0x05BB;\\n  t['qubutswidehebrew'] = 0x05BB;\\n  t['question'] = 0x003F;\\n  t['questionarabic'] = 0x061F;\\n  t['questionarmenian'] = 0x055E;\\n  t['questiondown'] = 0x00BF;\\n  t['questiondownsmall'] = 0xF7BF;\\n  t['questiongreek'] = 0x037E;\\n  t['questionmonospace'] = 0xFF1F;\\n  t['questionsmall'] = 0xF73F;\\n  t['quotedbl'] = 0x0022;\\n  t['quotedblbase'] = 0x201E;\\n  t['quotedblleft'] = 0x201C;\\n  t['quotedblmonospace'] = 0xFF02;\\n  t['quotedblprime'] = 0x301E;\\n  t['quotedblprimereversed'] = 0x301D;\\n  t['quotedblright'] = 0x201D;\\n  t['quoteleft'] = 0x2018;\\n  t['quoteleftreversed'] = 0x201B;\\n  t['quotereversed'] = 0x201B;\\n  t['quoteright'] = 0x2019;\\n  t['quoterightn'] = 0x0149;\\n  t['quotesinglbase'] = 0x201A;\\n  t['quotesingle'] = 0x0027;\\n  t['quotesinglemonospace'] = 0xFF07;\\n  t['r'] = 0x0072;\\n  t['raarmenian'] = 0x057C;\\n  t['rabengali'] = 0x09B0;\\n  t['racute'] = 0x0155;\\n  t['radeva'] = 0x0930;\\n  t['radical'] = 0x221A;\\n  t['radicalex'] = 0xF8E5;\\n  t['radoverssquare'] = 0x33AE;\\n  t['radoverssquaredsquare'] = 0x33AF;\\n  t['radsquare'] = 0x33AD;\\n  t['rafe'] = 0x05BF;\\n  t['rafehebrew'] = 0x05BF;\\n  t['ragujarati'] = 0x0AB0;\\n  t['ragurmukhi'] = 0x0A30;\\n  t['rahiragana'] = 0x3089;\\n  t['rakatakana'] = 0x30E9;\\n  t['rakatakanahalfwidth'] = 0xFF97;\\n  t['ralowerdiagonalbengali'] = 0x09F1;\\n  t['ramiddlediagonalbengali'] = 0x09F0;\\n  t['ramshorn'] = 0x0264;\\n  t['ratio'] = 0x2236;\\n  t['rbopomofo'] = 0x3116;\\n  t['rcaron'] = 0x0159;\\n  t['rcedilla'] = 0x0157;\\n  t['rcircle'] = 0x24E1;\\n  t['rcommaaccent'] = 0x0157;\\n  t['rdblgrave'] = 0x0211;\\n  t['rdotaccent'] = 0x1E59;\\n  t['rdotbelow'] = 0x1E5B;\\n  t['rdotbelowmacron'] = 0x1E5D;\\n  t['referencemark'] = 0x203B;\\n  t['reflexsubset'] = 0x2286;\\n  t['reflexsuperset'] = 0x2287;\\n  t['registered'] = 0x00AE;\\n  t['registersans'] = 0xF8E8;\\n  t['registerserif'] = 0xF6DA;\\n  t['reharabic'] = 0x0631;\\n  t['reharmenian'] = 0x0580;\\n  t['rehfinalarabic'] = 0xFEAE;\\n  t['rehiragana'] = 0x308C;\\n  t['rekatakana'] = 0x30EC;\\n  t['rekatakanahalfwidth'] = 0xFF9A;\\n  t['resh'] = 0x05E8;\\n  t['reshdageshhebrew'] = 0xFB48;\\n  t['reshhebrew'] = 0x05E8;\\n  t['reversedtilde'] = 0x223D;\\n  t['reviahebrew'] = 0x0597;\\n  t['reviamugrashhebrew'] = 0x0597;\\n  t['revlogicalnot'] = 0x2310;\\n  t['rfishhook'] = 0x027E;\\n  t['rfishhookreversed'] = 0x027F;\\n  t['rhabengali'] = 0x09DD;\\n  t['rhadeva'] = 0x095D;\\n  t['rho'] = 0x03C1;\\n  t['rhook'] = 0x027D;\\n  t['rhookturned'] = 0x027B;\\n  t['rhookturnedsuperior'] = 0x02B5;\\n  t['rhosymbolgreek'] = 0x03F1;\\n  t['rhotichookmod'] = 0x02DE;\\n  t['rieulacirclekorean'] = 0x3271;\\n  t['rieulaparenkorean'] = 0x3211;\\n  t['rieulcirclekorean'] = 0x3263;\\n  t['rieulhieuhkorean'] = 0x3140;\\n  t['rieulkiyeokkorean'] = 0x313A;\\n  t['rieulkiyeoksioskorean'] = 0x3169;\\n  t['rieulkorean'] = 0x3139;\\n  t['rieulmieumkorean'] = 0x313B;\\n  t['rieulpansioskorean'] = 0x316C;\\n  t['rieulparenkorean'] = 0x3203;\\n  t['rieulphieuphkorean'] = 0x313F;\\n  t['rieulpieupkorean'] = 0x313C;\\n  t['rieulpieupsioskorean'] = 0x316B;\\n  t['rieulsioskorean'] = 0x313D;\\n  t['rieulthieuthkorean'] = 0x313E;\\n  t['rieultikeutkorean'] = 0x316A;\\n  t['rieulyeorinhieuhkorean'] = 0x316D;\\n  t['rightangle'] = 0x221F;\\n  t['righttackbelowcmb'] = 0x0319;\\n  t['righttriangle'] = 0x22BF;\\n  t['rihiragana'] = 0x308A;\\n  t['rikatakana'] = 0x30EA;\\n  t['rikatakanahalfwidth'] = 0xFF98;\\n  t['ring'] = 0x02DA;\\n  t['ringbelowcmb'] = 0x0325;\\n  t['ringcmb'] = 0x030A;\\n  t['ringhalfleft'] = 0x02BF;\\n  t['ringhalfleftarmenian'] = 0x0559;\\n  t['ringhalfleftbelowcmb'] = 0x031C;\\n  t['ringhalfleftcentered'] = 0x02D3;\\n  t['ringhalfright'] = 0x02BE;\\n  t['ringhalfrightbelowcmb'] = 0x0339;\\n  t['ringhalfrightcentered'] = 0x02D2;\\n  t['rinvertedbreve'] = 0x0213;\\n  t['rittorusquare'] = 0x3351;\\n  t['rlinebelow'] = 0x1E5F;\\n  t['rlongleg'] = 0x027C;\\n  t['rlonglegturned'] = 0x027A;\\n  t['rmonospace'] = 0xFF52;\\n  t['rohiragana'] = 0x308D;\\n  t['rokatakana'] = 0x30ED;\\n  t['rokatakanahalfwidth'] = 0xFF9B;\\n  t['roruathai'] = 0x0E23;\\n  t['rparen'] = 0x24AD;\\n  t['rrabengali'] = 0x09DC;\\n  t['rradeva'] = 0x0931;\\n  t['rragurmukhi'] = 0x0A5C;\\n  t['rreharabic'] = 0x0691;\\n  t['rrehfinalarabic'] = 0xFB8D;\\n  t['rrvocalicbengali'] = 0x09E0;\\n  t['rrvocalicdeva'] = 0x0960;\\n  t['rrvocalicgujarati'] = 0x0AE0;\\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\\n  t['rrvocalicvowelsigndeva'] = 0x0944;\\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\\n  t['rsuperior'] = 0xF6F1;\\n  t['rtblock'] = 0x2590;\\n  t['rturned'] = 0x0279;\\n  t['rturnedsuperior'] = 0x02B4;\\n  t['ruhiragana'] = 0x308B;\\n  t['rukatakana'] = 0x30EB;\\n  t['rukatakanahalfwidth'] = 0xFF99;\\n  t['rupeemarkbengali'] = 0x09F2;\\n  t['rupeesignbengali'] = 0x09F3;\\n  t['rupiah'] = 0xF6DD;\\n  t['ruthai'] = 0x0E24;\\n  t['rvocalicbengali'] = 0x098B;\\n  t['rvocalicdeva'] = 0x090B;\\n  t['rvocalicgujarati'] = 0x0A8B;\\n  t['rvocalicvowelsignbengali'] = 0x09C3;\\n  t['rvocalicvowelsigndeva'] = 0x0943;\\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\\n  t['s'] = 0x0073;\\n  t['sabengali'] = 0x09B8;\\n  t['sacute'] = 0x015B;\\n  t['sacutedotaccent'] = 0x1E65;\\n  t['sadarabic'] = 0x0635;\\n  t['sadeva'] = 0x0938;\\n  t['sadfinalarabic'] = 0xFEBA;\\n  t['sadinitialarabic'] = 0xFEBB;\\n  t['sadmedialarabic'] = 0xFEBC;\\n  t['sagujarati'] = 0x0AB8;\\n  t['sagurmukhi'] = 0x0A38;\\n  t['sahiragana'] = 0x3055;\\n  t['sakatakana'] = 0x30B5;\\n  t['sakatakanahalfwidth'] = 0xFF7B;\\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\\n  t['samekh'] = 0x05E1;\\n  t['samekhdagesh'] = 0xFB41;\\n  t['samekhdageshhebrew'] = 0xFB41;\\n  t['samekhhebrew'] = 0x05E1;\\n  t['saraaathai'] = 0x0E32;\\n  t['saraaethai'] = 0x0E41;\\n  t['saraaimaimalaithai'] = 0x0E44;\\n  t['saraaimaimuanthai'] = 0x0E43;\\n  t['saraamthai'] = 0x0E33;\\n  t['saraathai'] = 0x0E30;\\n  t['saraethai'] = 0x0E40;\\n  t['saraiileftthai'] = 0xF886;\\n  t['saraiithai'] = 0x0E35;\\n  t['saraileftthai'] = 0xF885;\\n  t['saraithai'] = 0x0E34;\\n  t['saraothai'] = 0x0E42;\\n  t['saraueeleftthai'] = 0xF888;\\n  t['saraueethai'] = 0x0E37;\\n  t['saraueleftthai'] = 0xF887;\\n  t['sarauethai'] = 0x0E36;\\n  t['sarauthai'] = 0x0E38;\\n  t['sarauuthai'] = 0x0E39;\\n  t['sbopomofo'] = 0x3119;\\n  t['scaron'] = 0x0161;\\n  t['scarondotaccent'] = 0x1E67;\\n  t['scedilla'] = 0x015F;\\n  t['schwa'] = 0x0259;\\n  t['schwacyrillic'] = 0x04D9;\\n  t['schwadieresiscyrillic'] = 0x04DB;\\n  t['schwahook'] = 0x025A;\\n  t['scircle'] = 0x24E2;\\n  t['scircumflex'] = 0x015D;\\n  t['scommaaccent'] = 0x0219;\\n  t['sdotaccent'] = 0x1E61;\\n  t['sdotbelow'] = 0x1E63;\\n  t['sdotbelowdotaccent'] = 0x1E69;\\n  t['seagullbelowcmb'] = 0x033C;\\n  t['second'] = 0x2033;\\n  t['secondtonechinese'] = 0x02CA;\\n  t['section'] = 0x00A7;\\n  t['seenarabic'] = 0x0633;\\n  t['seenfinalarabic'] = 0xFEB2;\\n  t['seeninitialarabic'] = 0xFEB3;\\n  t['seenmedialarabic'] = 0xFEB4;\\n  t['segol'] = 0x05B6;\\n  t['segol13'] = 0x05B6;\\n  t['segol1f'] = 0x05B6;\\n  t['segol2c'] = 0x05B6;\\n  t['segolhebrew'] = 0x05B6;\\n  t['segolnarrowhebrew'] = 0x05B6;\\n  t['segolquarterhebrew'] = 0x05B6;\\n  t['segoltahebrew'] = 0x0592;\\n  t['segolwidehebrew'] = 0x05B6;\\n  t['seharmenian'] = 0x057D;\\n  t['sehiragana'] = 0x305B;\\n  t['sekatakana'] = 0x30BB;\\n  t['sekatakanahalfwidth'] = 0xFF7E;\\n  t['semicolon'] = 0x003B;\\n  t['semicolonarabic'] = 0x061B;\\n  t['semicolonmonospace'] = 0xFF1B;\\n  t['semicolonsmall'] = 0xFE54;\\n  t['semivoicedmarkkana'] = 0x309C;\\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\\n  t['sentisquare'] = 0x3322;\\n  t['sentosquare'] = 0x3323;\\n  t['seven'] = 0x0037;\\n  t['sevenarabic'] = 0x0667;\\n  t['sevenbengali'] = 0x09ED;\\n  t['sevencircle'] = 0x2466;\\n  t['sevencircleinversesansserif'] = 0x2790;\\n  t['sevendeva'] = 0x096D;\\n  t['seveneighths'] = 0x215E;\\n  t['sevengujarati'] = 0x0AED;\\n  t['sevengurmukhi'] = 0x0A6D;\\n  t['sevenhackarabic'] = 0x0667;\\n  t['sevenhangzhou'] = 0x3027;\\n  t['sevenideographicparen'] = 0x3226;\\n  t['seveninferior'] = 0x2087;\\n  t['sevenmonospace'] = 0xFF17;\\n  t['sevenoldstyle'] = 0xF737;\\n  t['sevenparen'] = 0x247A;\\n  t['sevenperiod'] = 0x248E;\\n  t['sevenpersian'] = 0x06F7;\\n  t['sevenroman'] = 0x2176;\\n  t['sevensuperior'] = 0x2077;\\n  t['seventeencircle'] = 0x2470;\\n  t['seventeenparen'] = 0x2484;\\n  t['seventeenperiod'] = 0x2498;\\n  t['seventhai'] = 0x0E57;\\n  t['sfthyphen'] = 0x00AD;\\n  t['shaarmenian'] = 0x0577;\\n  t['shabengali'] = 0x09B6;\\n  t['shacyrillic'] = 0x0448;\\n  t['shaddaarabic'] = 0x0651;\\n  t['shaddadammaarabic'] = 0xFC61;\\n  t['shaddadammatanarabic'] = 0xFC5E;\\n  t['shaddafathaarabic'] = 0xFC60;\\n  t['shaddakasraarabic'] = 0xFC62;\\n  t['shaddakasratanarabic'] = 0xFC5F;\\n  t['shade'] = 0x2592;\\n  t['shadedark'] = 0x2593;\\n  t['shadelight'] = 0x2591;\\n  t['shademedium'] = 0x2592;\\n  t['shadeva'] = 0x0936;\\n  t['shagujarati'] = 0x0AB6;\\n  t['shagurmukhi'] = 0x0A36;\\n  t['shalshelethebrew'] = 0x0593;\\n  t['shbopomofo'] = 0x3115;\\n  t['shchacyrillic'] = 0x0449;\\n  t['sheenarabic'] = 0x0634;\\n  t['sheenfinalarabic'] = 0xFEB6;\\n  t['sheeninitialarabic'] = 0xFEB7;\\n  t['sheenmedialarabic'] = 0xFEB8;\\n  t['sheicoptic'] = 0x03E3;\\n  t['sheqel'] = 0x20AA;\\n  t['sheqelhebrew'] = 0x20AA;\\n  t['sheva'] = 0x05B0;\\n  t['sheva115'] = 0x05B0;\\n  t['sheva15'] = 0x05B0;\\n  t['sheva22'] = 0x05B0;\\n  t['sheva2e'] = 0x05B0;\\n  t['shevahebrew'] = 0x05B0;\\n  t['shevanarrowhebrew'] = 0x05B0;\\n  t['shevaquarterhebrew'] = 0x05B0;\\n  t['shevawidehebrew'] = 0x05B0;\\n  t['shhacyrillic'] = 0x04BB;\\n  t['shimacoptic'] = 0x03ED;\\n  t['shin'] = 0x05E9;\\n  t['shindagesh'] = 0xFB49;\\n  t['shindageshhebrew'] = 0xFB49;\\n  t['shindageshshindot'] = 0xFB2C;\\n  t['shindageshshindothebrew'] = 0xFB2C;\\n  t['shindageshsindot'] = 0xFB2D;\\n  t['shindageshsindothebrew'] = 0xFB2D;\\n  t['shindothebrew'] = 0x05C1;\\n  t['shinhebrew'] = 0x05E9;\\n  t['shinshindot'] = 0xFB2A;\\n  t['shinshindothebrew'] = 0xFB2A;\\n  t['shinsindot'] = 0xFB2B;\\n  t['shinsindothebrew'] = 0xFB2B;\\n  t['shook'] = 0x0282;\\n  t['sigma'] = 0x03C3;\\n  t['sigma1'] = 0x03C2;\\n  t['sigmafinal'] = 0x03C2;\\n  t['sigmalunatesymbolgreek'] = 0x03F2;\\n  t['sihiragana'] = 0x3057;\\n  t['sikatakana'] = 0x30B7;\\n  t['sikatakanahalfwidth'] = 0xFF7C;\\n  t['siluqhebrew'] = 0x05BD;\\n  t['siluqlefthebrew'] = 0x05BD;\\n  t['similar'] = 0x223C;\\n  t['sindothebrew'] = 0x05C2;\\n  t['siosacirclekorean'] = 0x3274;\\n  t['siosaparenkorean'] = 0x3214;\\n  t['sioscieuckorean'] = 0x317E;\\n  t['sioscirclekorean'] = 0x3266;\\n  t['sioskiyeokkorean'] = 0x317A;\\n  t['sioskorean'] = 0x3145;\\n  t['siosnieunkorean'] = 0x317B;\\n  t['siosparenkorean'] = 0x3206;\\n  t['siospieupkorean'] = 0x317D;\\n  t['siostikeutkorean'] = 0x317C;\\n  t['six'] = 0x0036;\\n  t['sixarabic'] = 0x0666;\\n  t['sixbengali'] = 0x09EC;\\n  t['sixcircle'] = 0x2465;\\n  t['sixcircleinversesansserif'] = 0x278F;\\n  t['sixdeva'] = 0x096C;\\n  t['sixgujarati'] = 0x0AEC;\\n  t['sixgurmukhi'] = 0x0A6C;\\n  t['sixhackarabic'] = 0x0666;\\n  t['sixhangzhou'] = 0x3026;\\n  t['sixideographicparen'] = 0x3225;\\n  t['sixinferior'] = 0x2086;\\n  t['sixmonospace'] = 0xFF16;\\n  t['sixoldstyle'] = 0xF736;\\n  t['sixparen'] = 0x2479;\\n  t['sixperiod'] = 0x248D;\\n  t['sixpersian'] = 0x06F6;\\n  t['sixroman'] = 0x2175;\\n  t['sixsuperior'] = 0x2076;\\n  t['sixteencircle'] = 0x246F;\\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\\n  t['sixteenparen'] = 0x2483;\\n  t['sixteenperiod'] = 0x2497;\\n  t['sixthai'] = 0x0E56;\\n  t['slash'] = 0x002F;\\n  t['slashmonospace'] = 0xFF0F;\\n  t['slong'] = 0x017F;\\n  t['slongdotaccent'] = 0x1E9B;\\n  t['smileface'] = 0x263A;\\n  t['smonospace'] = 0xFF53;\\n  t['sofpasuqhebrew'] = 0x05C3;\\n  t['softhyphen'] = 0x00AD;\\n  t['softsigncyrillic'] = 0x044C;\\n  t['sohiragana'] = 0x305D;\\n  t['sokatakana'] = 0x30BD;\\n  t['sokatakanahalfwidth'] = 0xFF7F;\\n  t['soliduslongoverlaycmb'] = 0x0338;\\n  t['solidusshortoverlaycmb'] = 0x0337;\\n  t['sorusithai'] = 0x0E29;\\n  t['sosalathai'] = 0x0E28;\\n  t['sosothai'] = 0x0E0B;\\n  t['sosuathai'] = 0x0E2A;\\n  t['space'] = 0x0020;\\n  t['spacehackarabic'] = 0x0020;\\n  t['spade'] = 0x2660;\\n  t['spadesuitblack'] = 0x2660;\\n  t['spadesuitwhite'] = 0x2664;\\n  t['sparen'] = 0x24AE;\\n  t['squarebelowcmb'] = 0x033B;\\n  t['squarecc'] = 0x33C4;\\n  t['squarecm'] = 0x339D;\\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\\n  t['squarehorizontalfill'] = 0x25A4;\\n  t['squarekg'] = 0x338F;\\n  t['squarekm'] = 0x339E;\\n  t['squarekmcapital'] = 0x33CE;\\n  t['squareln'] = 0x33D1;\\n  t['squarelog'] = 0x33D2;\\n  t['squaremg'] = 0x338E;\\n  t['squaremil'] = 0x33D5;\\n  t['squaremm'] = 0x339C;\\n  t['squaremsquared'] = 0x33A1;\\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\\n  t['squareverticalfill'] = 0x25A5;\\n  t['squarewhitewithsmallblack'] = 0x25A3;\\n  t['srsquare'] = 0x33DB;\\n  t['ssabengali'] = 0x09B7;\\n  t['ssadeva'] = 0x0937;\\n  t['ssagujarati'] = 0x0AB7;\\n  t['ssangcieuckorean'] = 0x3149;\\n  t['ssanghieuhkorean'] = 0x3185;\\n  t['ssangieungkorean'] = 0x3180;\\n  t['ssangkiyeokkorean'] = 0x3132;\\n  t['ssangnieunkorean'] = 0x3165;\\n  t['ssangpieupkorean'] = 0x3143;\\n  t['ssangsioskorean'] = 0x3146;\\n  t['ssangtikeutkorean'] = 0x3138;\\n  t['ssuperior'] = 0xF6F2;\\n  t['sterling'] = 0x00A3;\\n  t['sterlingmonospace'] = 0xFFE1;\\n  t['strokelongoverlaycmb'] = 0x0336;\\n  t['strokeshortoverlaycmb'] = 0x0335;\\n  t['subset'] = 0x2282;\\n  t['subsetnotequal'] = 0x228A;\\n  t['subsetorequal'] = 0x2286;\\n  t['succeeds'] = 0x227B;\\n  t['suchthat'] = 0x220B;\\n  t['suhiragana'] = 0x3059;\\n  t['sukatakana'] = 0x30B9;\\n  t['sukatakanahalfwidth'] = 0xFF7D;\\n  t['sukunarabic'] = 0x0652;\\n  t['summation'] = 0x2211;\\n  t['sun'] = 0x263C;\\n  t['superset'] = 0x2283;\\n  t['supersetnotequal'] = 0x228B;\\n  t['supersetorequal'] = 0x2287;\\n  t['svsquare'] = 0x33DC;\\n  t['syouwaerasquare'] = 0x337C;\\n  t['t'] = 0x0074;\\n  t['tabengali'] = 0x09A4;\\n  t['tackdown'] = 0x22A4;\\n  t['tackleft'] = 0x22A3;\\n  t['tadeva'] = 0x0924;\\n  t['tagujarati'] = 0x0AA4;\\n  t['tagurmukhi'] = 0x0A24;\\n  t['taharabic'] = 0x0637;\\n  t['tahfinalarabic'] = 0xFEC2;\\n  t['tahinitialarabic'] = 0xFEC3;\\n  t['tahiragana'] = 0x305F;\\n  t['tahmedialarabic'] = 0xFEC4;\\n  t['taisyouerasquare'] = 0x337D;\\n  t['takatakana'] = 0x30BF;\\n  t['takatakanahalfwidth'] = 0xFF80;\\n  t['tatweelarabic'] = 0x0640;\\n  t['tau'] = 0x03C4;\\n  t['tav'] = 0x05EA;\\n  t['tavdages'] = 0xFB4A;\\n  t['tavdagesh'] = 0xFB4A;\\n  t['tavdageshhebrew'] = 0xFB4A;\\n  t['tavhebrew'] = 0x05EA;\\n  t['tbar'] = 0x0167;\\n  t['tbopomofo'] = 0x310A;\\n  t['tcaron'] = 0x0165;\\n  t['tccurl'] = 0x02A8;\\n  t['tcedilla'] = 0x0163;\\n  t['tcheharabic'] = 0x0686;\\n  t['tchehfinalarabic'] = 0xFB7B;\\n  t['tchehinitialarabic'] = 0xFB7C;\\n  t['tchehmedialarabic'] = 0xFB7D;\\n  t['tcircle'] = 0x24E3;\\n  t['tcircumflexbelow'] = 0x1E71;\\n  t['tcommaaccent'] = 0x0163;\\n  t['tdieresis'] = 0x1E97;\\n  t['tdotaccent'] = 0x1E6B;\\n  t['tdotbelow'] = 0x1E6D;\\n  t['tecyrillic'] = 0x0442;\\n  t['tedescendercyrillic'] = 0x04AD;\\n  t['teharabic'] = 0x062A;\\n  t['tehfinalarabic'] = 0xFE96;\\n  t['tehhahinitialarabic'] = 0xFCA2;\\n  t['tehhahisolatedarabic'] = 0xFC0C;\\n  t['tehinitialarabic'] = 0xFE97;\\n  t['tehiragana'] = 0x3066;\\n  t['tehjeeminitialarabic'] = 0xFCA1;\\n  t['tehjeemisolatedarabic'] = 0xFC0B;\\n  t['tehmarbutaarabic'] = 0x0629;\\n  t['tehmarbutafinalarabic'] = 0xFE94;\\n  t['tehmedialarabic'] = 0xFE98;\\n  t['tehmeeminitialarabic'] = 0xFCA4;\\n  t['tehmeemisolatedarabic'] = 0xFC0E;\\n  t['tehnoonfinalarabic'] = 0xFC73;\\n  t['tekatakana'] = 0x30C6;\\n  t['tekatakanahalfwidth'] = 0xFF83;\\n  t['telephone'] = 0x2121;\\n  t['telephoneblack'] = 0x260E;\\n  t['telishagedolahebrew'] = 0x05A0;\\n  t['telishaqetanahebrew'] = 0x05A9;\\n  t['tencircle'] = 0x2469;\\n  t['tenideographicparen'] = 0x3229;\\n  t['tenparen'] = 0x247D;\\n  t['tenperiod'] = 0x2491;\\n  t['tenroman'] = 0x2179;\\n  t['tesh'] = 0x02A7;\\n  t['tet'] = 0x05D8;\\n  t['tetdagesh'] = 0xFB38;\\n  t['tetdageshhebrew'] = 0xFB38;\\n  t['tethebrew'] = 0x05D8;\\n  t['tetsecyrillic'] = 0x04B5;\\n  t['tevirhebrew'] = 0x059B;\\n  t['tevirlefthebrew'] = 0x059B;\\n  t['thabengali'] = 0x09A5;\\n  t['thadeva'] = 0x0925;\\n  t['thagujarati'] = 0x0AA5;\\n  t['thagurmukhi'] = 0x0A25;\\n  t['thalarabic'] = 0x0630;\\n  t['thalfinalarabic'] = 0xFEAC;\\n  t['thanthakhatlowleftthai'] = 0xF898;\\n  t['thanthakhatlowrightthai'] = 0xF897;\\n  t['thanthakhatthai'] = 0x0E4C;\\n  t['thanthakhatupperleftthai'] = 0xF896;\\n  t['theharabic'] = 0x062B;\\n  t['thehfinalarabic'] = 0xFE9A;\\n  t['thehinitialarabic'] = 0xFE9B;\\n  t['thehmedialarabic'] = 0xFE9C;\\n  t['thereexists'] = 0x2203;\\n  t['therefore'] = 0x2234;\\n  t['theta'] = 0x03B8;\\n  t['theta1'] = 0x03D1;\\n  t['thetasymbolgreek'] = 0x03D1;\\n  t['thieuthacirclekorean'] = 0x3279;\\n  t['thieuthaparenkorean'] = 0x3219;\\n  t['thieuthcirclekorean'] = 0x326B;\\n  t['thieuthkorean'] = 0x314C;\\n  t['thieuthparenkorean'] = 0x320B;\\n  t['thirteencircle'] = 0x246C;\\n  t['thirteenparen'] = 0x2480;\\n  t['thirteenperiod'] = 0x2494;\\n  t['thonangmonthothai'] = 0x0E11;\\n  t['thook'] = 0x01AD;\\n  t['thophuthaothai'] = 0x0E12;\\n  t['thorn'] = 0x00FE;\\n  t['thothahanthai'] = 0x0E17;\\n  t['thothanthai'] = 0x0E10;\\n  t['thothongthai'] = 0x0E18;\\n  t['thothungthai'] = 0x0E16;\\n  t['thousandcyrillic'] = 0x0482;\\n  t['thousandsseparatorarabic'] = 0x066C;\\n  t['thousandsseparatorpersian'] = 0x066C;\\n  t['three'] = 0x0033;\\n  t['threearabic'] = 0x0663;\\n  t['threebengali'] = 0x09E9;\\n  t['threecircle'] = 0x2462;\\n  t['threecircleinversesansserif'] = 0x278C;\\n  t['threedeva'] = 0x0969;\\n  t['threeeighths'] = 0x215C;\\n  t['threegujarati'] = 0x0AE9;\\n  t['threegurmukhi'] = 0x0A69;\\n  t['threehackarabic'] = 0x0663;\\n  t['threehangzhou'] = 0x3023;\\n  t['threeideographicparen'] = 0x3222;\\n  t['threeinferior'] = 0x2083;\\n  t['threemonospace'] = 0xFF13;\\n  t['threenumeratorbengali'] = 0x09F6;\\n  t['threeoldstyle'] = 0xF733;\\n  t['threeparen'] = 0x2476;\\n  t['threeperiod'] = 0x248A;\\n  t['threepersian'] = 0x06F3;\\n  t['threequarters'] = 0x00BE;\\n  t['threequartersemdash'] = 0xF6DE;\\n  t['threeroman'] = 0x2172;\\n  t['threesuperior'] = 0x00B3;\\n  t['threethai'] = 0x0E53;\\n  t['thzsquare'] = 0x3394;\\n  t['tihiragana'] = 0x3061;\\n  t['tikatakana'] = 0x30C1;\\n  t['tikatakanahalfwidth'] = 0xFF81;\\n  t['tikeutacirclekorean'] = 0x3270;\\n  t['tikeutaparenkorean'] = 0x3210;\\n  t['tikeutcirclekorean'] = 0x3262;\\n  t['tikeutkorean'] = 0x3137;\\n  t['tikeutparenkorean'] = 0x3202;\\n  t['tilde'] = 0x02DC;\\n  t['tildebelowcmb'] = 0x0330;\\n  t['tildecmb'] = 0x0303;\\n  t['tildecomb'] = 0x0303;\\n  t['tildedoublecmb'] = 0x0360;\\n  t['tildeoperator'] = 0x223C;\\n  t['tildeoverlaycmb'] = 0x0334;\\n  t['tildeverticalcmb'] = 0x033E;\\n  t['timescircle'] = 0x2297;\\n  t['tipehahebrew'] = 0x0596;\\n  t['tipehalefthebrew'] = 0x0596;\\n  t['tippigurmukhi'] = 0x0A70;\\n  t['titlocyrilliccmb'] = 0x0483;\\n  t['tiwnarmenian'] = 0x057F;\\n  t['tlinebelow'] = 0x1E6F;\\n  t['tmonospace'] = 0xFF54;\\n  t['toarmenian'] = 0x0569;\\n  t['tohiragana'] = 0x3068;\\n  t['tokatakana'] = 0x30C8;\\n  t['tokatakanahalfwidth'] = 0xFF84;\\n  t['tonebarextrahighmod'] = 0x02E5;\\n  t['tonebarextralowmod'] = 0x02E9;\\n  t['tonebarhighmod'] = 0x02E6;\\n  t['tonebarlowmod'] = 0x02E8;\\n  t['tonebarmidmod'] = 0x02E7;\\n  t['tonefive'] = 0x01BD;\\n  t['tonesix'] = 0x0185;\\n  t['tonetwo'] = 0x01A8;\\n  t['tonos'] = 0x0384;\\n  t['tonsquare'] = 0x3327;\\n  t['topatakthai'] = 0x0E0F;\\n  t['tortoiseshellbracketleft'] = 0x3014;\\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\\n  t['tortoiseshellbracketright'] = 0x3015;\\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\\n  t['totaothai'] = 0x0E15;\\n  t['tpalatalhook'] = 0x01AB;\\n  t['tparen'] = 0x24AF;\\n  t['trademark'] = 0x2122;\\n  t['trademarksans'] = 0xF8EA;\\n  t['trademarkserif'] = 0xF6DB;\\n  t['tretroflexhook'] = 0x0288;\\n  t['triagdn'] = 0x25BC;\\n  t['triaglf'] = 0x25C4;\\n  t['triagrt'] = 0x25BA;\\n  t['triagup'] = 0x25B2;\\n  t['ts'] = 0x02A6;\\n  t['tsadi'] = 0x05E6;\\n  t['tsadidagesh'] = 0xFB46;\\n  t['tsadidageshhebrew'] = 0xFB46;\\n  t['tsadihebrew'] = 0x05E6;\\n  t['tsecyrillic'] = 0x0446;\\n  t['tsere'] = 0x05B5;\\n  t['tsere12'] = 0x05B5;\\n  t['tsere1e'] = 0x05B5;\\n  t['tsere2b'] = 0x05B5;\\n  t['tserehebrew'] = 0x05B5;\\n  t['tserenarrowhebrew'] = 0x05B5;\\n  t['tserequarterhebrew'] = 0x05B5;\\n  t['tserewidehebrew'] = 0x05B5;\\n  t['tshecyrillic'] = 0x045B;\\n  t['tsuperior'] = 0xF6F3;\\n  t['ttabengali'] = 0x099F;\\n  t['ttadeva'] = 0x091F;\\n  t['ttagujarati'] = 0x0A9F;\\n  t['ttagurmukhi'] = 0x0A1F;\\n  t['tteharabic'] = 0x0679;\\n  t['ttehfinalarabic'] = 0xFB67;\\n  t['ttehinitialarabic'] = 0xFB68;\\n  t['ttehmedialarabic'] = 0xFB69;\\n  t['tthabengali'] = 0x09A0;\\n  t['tthadeva'] = 0x0920;\\n  t['tthagujarati'] = 0x0AA0;\\n  t['tthagurmukhi'] = 0x0A20;\\n  t['tturned'] = 0x0287;\\n  t['tuhiragana'] = 0x3064;\\n  t['tukatakana'] = 0x30C4;\\n  t['tukatakanahalfwidth'] = 0xFF82;\\n  t['tusmallhiragana'] = 0x3063;\\n  t['tusmallkatakana'] = 0x30C3;\\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\\n  t['twelvecircle'] = 0x246B;\\n  t['twelveparen'] = 0x247F;\\n  t['twelveperiod'] = 0x2493;\\n  t['twelveroman'] = 0x217B;\\n  t['twentycircle'] = 0x2473;\\n  t['twentyhangzhou'] = 0x5344;\\n  t['twentyparen'] = 0x2487;\\n  t['twentyperiod'] = 0x249B;\\n  t['two'] = 0x0032;\\n  t['twoarabic'] = 0x0662;\\n  t['twobengali'] = 0x09E8;\\n  t['twocircle'] = 0x2461;\\n  t['twocircleinversesansserif'] = 0x278B;\\n  t['twodeva'] = 0x0968;\\n  t['twodotenleader'] = 0x2025;\\n  t['twodotleader'] = 0x2025;\\n  t['twodotleadervertical'] = 0xFE30;\\n  t['twogujarati'] = 0x0AE8;\\n  t['twogurmukhi'] = 0x0A68;\\n  t['twohackarabic'] = 0x0662;\\n  t['twohangzhou'] = 0x3022;\\n  t['twoideographicparen'] = 0x3221;\\n  t['twoinferior'] = 0x2082;\\n  t['twomonospace'] = 0xFF12;\\n  t['twonumeratorbengali'] = 0x09F5;\\n  t['twooldstyle'] = 0xF732;\\n  t['twoparen'] = 0x2475;\\n  t['twoperiod'] = 0x2489;\\n  t['twopersian'] = 0x06F2;\\n  t['tworoman'] = 0x2171;\\n  t['twostroke'] = 0x01BB;\\n  t['twosuperior'] = 0x00B2;\\n  t['twothai'] = 0x0E52;\\n  t['twothirds'] = 0x2154;\\n  t['u'] = 0x0075;\\n  t['uacute'] = 0x00FA;\\n  t['ubar'] = 0x0289;\\n  t['ubengali'] = 0x0989;\\n  t['ubopomofo'] = 0x3128;\\n  t['ubreve'] = 0x016D;\\n  t['ucaron'] = 0x01D4;\\n  t['ucircle'] = 0x24E4;\\n  t['ucircumflex'] = 0x00FB;\\n  t['ucircumflexbelow'] = 0x1E77;\\n  t['ucyrillic'] = 0x0443;\\n  t['udattadeva'] = 0x0951;\\n  t['udblacute'] = 0x0171;\\n  t['udblgrave'] = 0x0215;\\n  t['udeva'] = 0x0909;\\n  t['udieresis'] = 0x00FC;\\n  t['udieresisacute'] = 0x01D8;\\n  t['udieresisbelow'] = 0x1E73;\\n  t['udieresiscaron'] = 0x01DA;\\n  t['udieresiscyrillic'] = 0x04F1;\\n  t['udieresisgrave'] = 0x01DC;\\n  t['udieresismacron'] = 0x01D6;\\n  t['udotbelow'] = 0x1EE5;\\n  t['ugrave'] = 0x00F9;\\n  t['ugujarati'] = 0x0A89;\\n  t['ugurmukhi'] = 0x0A09;\\n  t['uhiragana'] = 0x3046;\\n  t['uhookabove'] = 0x1EE7;\\n  t['uhorn'] = 0x01B0;\\n  t['uhornacute'] = 0x1EE9;\\n  t['uhorndotbelow'] = 0x1EF1;\\n  t['uhorngrave'] = 0x1EEB;\\n  t['uhornhookabove'] = 0x1EED;\\n  t['uhorntilde'] = 0x1EEF;\\n  t['uhungarumlaut'] = 0x0171;\\n  t['uhungarumlautcyrillic'] = 0x04F3;\\n  t['uinvertedbreve'] = 0x0217;\\n  t['ukatakana'] = 0x30A6;\\n  t['ukatakanahalfwidth'] = 0xFF73;\\n  t['ukcyrillic'] = 0x0479;\\n  t['ukorean'] = 0x315C;\\n  t['umacron'] = 0x016B;\\n  t['umacroncyrillic'] = 0x04EF;\\n  t['umacrondieresis'] = 0x1E7B;\\n  t['umatragurmukhi'] = 0x0A41;\\n  t['umonospace'] = 0xFF55;\\n  t['underscore'] = 0x005F;\\n  t['underscoredbl'] = 0x2017;\\n  t['underscoremonospace'] = 0xFF3F;\\n  t['underscorevertical'] = 0xFE33;\\n  t['underscorewavy'] = 0xFE4F;\\n  t['union'] = 0x222A;\\n  t['universal'] = 0x2200;\\n  t['uogonek'] = 0x0173;\\n  t['uparen'] = 0x24B0;\\n  t['upblock'] = 0x2580;\\n  t['upperdothebrew'] = 0x05C4;\\n  t['upsilon'] = 0x03C5;\\n  t['upsilondieresis'] = 0x03CB;\\n  t['upsilondieresistonos'] = 0x03B0;\\n  t['upsilonlatin'] = 0x028A;\\n  t['upsilontonos'] = 0x03CD;\\n  t['uptackbelowcmb'] = 0x031D;\\n  t['uptackmod'] = 0x02D4;\\n  t['uragurmukhi'] = 0x0A73;\\n  t['uring'] = 0x016F;\\n  t['ushortcyrillic'] = 0x045E;\\n  t['usmallhiragana'] = 0x3045;\\n  t['usmallkatakana'] = 0x30A5;\\n  t['usmallkatakanahalfwidth'] = 0xFF69;\\n  t['ustraightcyrillic'] = 0x04AF;\\n  t['ustraightstrokecyrillic'] = 0x04B1;\\n  t['utilde'] = 0x0169;\\n  t['utildeacute'] = 0x1E79;\\n  t['utildebelow'] = 0x1E75;\\n  t['uubengali'] = 0x098A;\\n  t['uudeva'] = 0x090A;\\n  t['uugujarati'] = 0x0A8A;\\n  t['uugurmukhi'] = 0x0A0A;\\n  t['uumatragurmukhi'] = 0x0A42;\\n  t['uuvowelsignbengali'] = 0x09C2;\\n  t['uuvowelsigndeva'] = 0x0942;\\n  t['uuvowelsigngujarati'] = 0x0AC2;\\n  t['uvowelsignbengali'] = 0x09C1;\\n  t['uvowelsigndeva'] = 0x0941;\\n  t['uvowelsigngujarati'] = 0x0AC1;\\n  t['v'] = 0x0076;\\n  t['vadeva'] = 0x0935;\\n  t['vagujarati'] = 0x0AB5;\\n  t['vagurmukhi'] = 0x0A35;\\n  t['vakatakana'] = 0x30F7;\\n  t['vav'] = 0x05D5;\\n  t['vavdagesh'] = 0xFB35;\\n  t['vavdagesh65'] = 0xFB35;\\n  t['vavdageshhebrew'] = 0xFB35;\\n  t['vavhebrew'] = 0x05D5;\\n  t['vavholam'] = 0xFB4B;\\n  t['vavholamhebrew'] = 0xFB4B;\\n  t['vavvavhebrew'] = 0x05F0;\\n  t['vavyodhebrew'] = 0x05F1;\\n  t['vcircle'] = 0x24E5;\\n  t['vdotbelow'] = 0x1E7F;\\n  t['vecyrillic'] = 0x0432;\\n  t['veharabic'] = 0x06A4;\\n  t['vehfinalarabic'] = 0xFB6B;\\n  t['vehinitialarabic'] = 0xFB6C;\\n  t['vehmedialarabic'] = 0xFB6D;\\n  t['vekatakana'] = 0x30F9;\\n  t['venus'] = 0x2640;\\n  t['verticalbar'] = 0x007C;\\n  t['verticallineabovecmb'] = 0x030D;\\n  t['verticallinebelowcmb'] = 0x0329;\\n  t['verticallinelowmod'] = 0x02CC;\\n  t['verticallinemod'] = 0x02C8;\\n  t['vewarmenian'] = 0x057E;\\n  t['vhook'] = 0x028B;\\n  t['vikatakana'] = 0x30F8;\\n  t['viramabengali'] = 0x09CD;\\n  t['viramadeva'] = 0x094D;\\n  t['viramagujarati'] = 0x0ACD;\\n  t['visargabengali'] = 0x0983;\\n  t['visargadeva'] = 0x0903;\\n  t['visargagujarati'] = 0x0A83;\\n  t['vmonospace'] = 0xFF56;\\n  t['voarmenian'] = 0x0578;\\n  t['voicediterationhiragana'] = 0x309E;\\n  t['voicediterationkatakana'] = 0x30FE;\\n  t['voicedmarkkana'] = 0x309B;\\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\\n  t['vokatakana'] = 0x30FA;\\n  t['vparen'] = 0x24B1;\\n  t['vtilde'] = 0x1E7D;\\n  t['vturned'] = 0x028C;\\n  t['vuhiragana'] = 0x3094;\\n  t['vukatakana'] = 0x30F4;\\n  t['w'] = 0x0077;\\n  t['wacute'] = 0x1E83;\\n  t['waekorean'] = 0x3159;\\n  t['wahiragana'] = 0x308F;\\n  t['wakatakana'] = 0x30EF;\\n  t['wakatakanahalfwidth'] = 0xFF9C;\\n  t['wakorean'] = 0x3158;\\n  t['wasmallhiragana'] = 0x308E;\\n  t['wasmallkatakana'] = 0x30EE;\\n  t['wattosquare'] = 0x3357;\\n  t['wavedash'] = 0x301C;\\n  t['wavyunderscorevertical'] = 0xFE34;\\n  t['wawarabic'] = 0x0648;\\n  t['wawfinalarabic'] = 0xFEEE;\\n  t['wawhamzaabovearabic'] = 0x0624;\\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\\n  t['wbsquare'] = 0x33DD;\\n  t['wcircle'] = 0x24E6;\\n  t['wcircumflex'] = 0x0175;\\n  t['wdieresis'] = 0x1E85;\\n  t['wdotaccent'] = 0x1E87;\\n  t['wdotbelow'] = 0x1E89;\\n  t['wehiragana'] = 0x3091;\\n  t['weierstrass'] = 0x2118;\\n  t['wekatakana'] = 0x30F1;\\n  t['wekorean'] = 0x315E;\\n  t['weokorean'] = 0x315D;\\n  t['wgrave'] = 0x1E81;\\n  t['whitebullet'] = 0x25E6;\\n  t['whitecircle'] = 0x25CB;\\n  t['whitecircleinverse'] = 0x25D9;\\n  t['whitecornerbracketleft'] = 0x300E;\\n  t['whitecornerbracketleftvertical'] = 0xFE43;\\n  t['whitecornerbracketright'] = 0x300F;\\n  t['whitecornerbracketrightvertical'] = 0xFE44;\\n  t['whitediamond'] = 0x25C7;\\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\\n  t['whitedownpointingtriangle'] = 0x25BD;\\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\\n  t['whiteleftpointingtriangle'] = 0x25C1;\\n  t['whitelenticularbracketleft'] = 0x3016;\\n  t['whitelenticularbracketright'] = 0x3017;\\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\\n  t['whiterightpointingtriangle'] = 0x25B7;\\n  t['whitesmallsquare'] = 0x25AB;\\n  t['whitesmilingface'] = 0x263A;\\n  t['whitesquare'] = 0x25A1;\\n  t['whitestar'] = 0x2606;\\n  t['whitetelephone'] = 0x260F;\\n  t['whitetortoiseshellbracketleft'] = 0x3018;\\n  t['whitetortoiseshellbracketright'] = 0x3019;\\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\\n  t['whiteuppointingtriangle'] = 0x25B3;\\n  t['wihiragana'] = 0x3090;\\n  t['wikatakana'] = 0x30F0;\\n  t['wikorean'] = 0x315F;\\n  t['wmonospace'] = 0xFF57;\\n  t['wohiragana'] = 0x3092;\\n  t['wokatakana'] = 0x30F2;\\n  t['wokatakanahalfwidth'] = 0xFF66;\\n  t['won'] = 0x20A9;\\n  t['wonmonospace'] = 0xFFE6;\\n  t['wowaenthai'] = 0x0E27;\\n  t['wparen'] = 0x24B2;\\n  t['wring'] = 0x1E98;\\n  t['wsuperior'] = 0x02B7;\\n  t['wturned'] = 0x028D;\\n  t['wynn'] = 0x01BF;\\n  t['x'] = 0x0078;\\n  t['xabovecmb'] = 0x033D;\\n  t['xbopomofo'] = 0x3112;\\n  t['xcircle'] = 0x24E7;\\n  t['xdieresis'] = 0x1E8D;\\n  t['xdotaccent'] = 0x1E8B;\\n  t['xeharmenian'] = 0x056D;\\n  t['xi'] = 0x03BE;\\n  t['xmonospace'] = 0xFF58;\\n  t['xparen'] = 0x24B3;\\n  t['xsuperior'] = 0x02E3;\\n  t['y'] = 0x0079;\\n  t['yaadosquare'] = 0x334E;\\n  t['yabengali'] = 0x09AF;\\n  t['yacute'] = 0x00FD;\\n  t['yadeva'] = 0x092F;\\n  t['yaekorean'] = 0x3152;\\n  t['yagujarati'] = 0x0AAF;\\n  t['yagurmukhi'] = 0x0A2F;\\n  t['yahiragana'] = 0x3084;\\n  t['yakatakana'] = 0x30E4;\\n  t['yakatakanahalfwidth'] = 0xFF94;\\n  t['yakorean'] = 0x3151;\\n  t['yamakkanthai'] = 0x0E4E;\\n  t['yasmallhiragana'] = 0x3083;\\n  t['yasmallkatakana'] = 0x30E3;\\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\\n  t['yatcyrillic'] = 0x0463;\\n  t['ycircle'] = 0x24E8;\\n  t['ycircumflex'] = 0x0177;\\n  t['ydieresis'] = 0x00FF;\\n  t['ydotaccent'] = 0x1E8F;\\n  t['ydotbelow'] = 0x1EF5;\\n  t['yeharabic'] = 0x064A;\\n  t['yehbarreearabic'] = 0x06D2;\\n  t['yehbarreefinalarabic'] = 0xFBAF;\\n  t['yehfinalarabic'] = 0xFEF2;\\n  t['yehhamzaabovearabic'] = 0x0626;\\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\\n  t['yehinitialarabic'] = 0xFEF3;\\n  t['yehmedialarabic'] = 0xFEF4;\\n  t['yehmeeminitialarabic'] = 0xFCDD;\\n  t['yehmeemisolatedarabic'] = 0xFC58;\\n  t['yehnoonfinalarabic'] = 0xFC94;\\n  t['yehthreedotsbelowarabic'] = 0x06D1;\\n  t['yekorean'] = 0x3156;\\n  t['yen'] = 0x00A5;\\n  t['yenmonospace'] = 0xFFE5;\\n  t['yeokorean'] = 0x3155;\\n  t['yeorinhieuhkorean'] = 0x3186;\\n  t['yerahbenyomohebrew'] = 0x05AA;\\n  t['yerahbenyomolefthebrew'] = 0x05AA;\\n  t['yericyrillic'] = 0x044B;\\n  t['yerudieresiscyrillic'] = 0x04F9;\\n  t['yesieungkorean'] = 0x3181;\\n  t['yesieungpansioskorean'] = 0x3183;\\n  t['yesieungsioskorean'] = 0x3182;\\n  t['yetivhebrew'] = 0x059A;\\n  t['ygrave'] = 0x1EF3;\\n  t['yhook'] = 0x01B4;\\n  t['yhookabove'] = 0x1EF7;\\n  t['yiarmenian'] = 0x0575;\\n  t['yicyrillic'] = 0x0457;\\n  t['yikorean'] = 0x3162;\\n  t['yinyang'] = 0x262F;\\n  t['yiwnarmenian'] = 0x0582;\\n  t['ymonospace'] = 0xFF59;\\n  t['yod'] = 0x05D9;\\n  t['yoddagesh'] = 0xFB39;\\n  t['yoddageshhebrew'] = 0xFB39;\\n  t['yodhebrew'] = 0x05D9;\\n  t['yodyodhebrew'] = 0x05F2;\\n  t['yodyodpatahhebrew'] = 0xFB1F;\\n  t['yohiragana'] = 0x3088;\\n  t['yoikorean'] = 0x3189;\\n  t['yokatakana'] = 0x30E8;\\n  t['yokatakanahalfwidth'] = 0xFF96;\\n  t['yokorean'] = 0x315B;\\n  t['yosmallhiragana'] = 0x3087;\\n  t['yosmallkatakana'] = 0x30E7;\\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\\n  t['yotgreek'] = 0x03F3;\\n  t['yoyaekorean'] = 0x3188;\\n  t['yoyakorean'] = 0x3187;\\n  t['yoyakthai'] = 0x0E22;\\n  t['yoyingthai'] = 0x0E0D;\\n  t['yparen'] = 0x24B4;\\n  t['ypogegrammeni'] = 0x037A;\\n  t['ypogegrammenigreekcmb'] = 0x0345;\\n  t['yr'] = 0x01A6;\\n  t['yring'] = 0x1E99;\\n  t['ysuperior'] = 0x02B8;\\n  t['ytilde'] = 0x1EF9;\\n  t['yturned'] = 0x028E;\\n  t['yuhiragana'] = 0x3086;\\n  t['yuikorean'] = 0x318C;\\n  t['yukatakana'] = 0x30E6;\\n  t['yukatakanahalfwidth'] = 0xFF95;\\n  t['yukorean'] = 0x3160;\\n  t['yusbigcyrillic'] = 0x046B;\\n  t['yusbigiotifiedcyrillic'] = 0x046D;\\n  t['yuslittlecyrillic'] = 0x0467;\\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\\n  t['yusmallhiragana'] = 0x3085;\\n  t['yusmallkatakana'] = 0x30E5;\\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\\n  t['yuyekorean'] = 0x318B;\\n  t['yuyeokorean'] = 0x318A;\\n  t['yyabengali'] = 0x09DF;\\n  t['yyadeva'] = 0x095F;\\n  t['z'] = 0x007A;\\n  t['zaarmenian'] = 0x0566;\\n  t['zacute'] = 0x017A;\\n  t['zadeva'] = 0x095B;\\n  t['zagurmukhi'] = 0x0A5B;\\n  t['zaharabic'] = 0x0638;\\n  t['zahfinalarabic'] = 0xFEC6;\\n  t['zahinitialarabic'] = 0xFEC7;\\n  t['zahiragana'] = 0x3056;\\n  t['zahmedialarabic'] = 0xFEC8;\\n  t['zainarabic'] = 0x0632;\\n  t['zainfinalarabic'] = 0xFEB0;\\n  t['zakatakana'] = 0x30B6;\\n  t['zaqefgadolhebrew'] = 0x0595;\\n  t['zaqefqatanhebrew'] = 0x0594;\\n  t['zarqahebrew'] = 0x0598;\\n  t['zayin'] = 0x05D6;\\n  t['zayindagesh'] = 0xFB36;\\n  t['zayindageshhebrew'] = 0xFB36;\\n  t['zayinhebrew'] = 0x05D6;\\n  t['zbopomofo'] = 0x3117;\\n  t['zcaron'] = 0x017E;\\n  t['zcircle'] = 0x24E9;\\n  t['zcircumflex'] = 0x1E91;\\n  t['zcurl'] = 0x0291;\\n  t['zdot'] = 0x017C;\\n  t['zdotaccent'] = 0x017C;\\n  t['zdotbelow'] = 0x1E93;\\n  t['zecyrillic'] = 0x0437;\\n  t['zedescendercyrillic'] = 0x0499;\\n  t['zedieresiscyrillic'] = 0x04DF;\\n  t['zehiragana'] = 0x305C;\\n  t['zekatakana'] = 0x30BC;\\n  t['zero'] = 0x0030;\\n  t['zeroarabic'] = 0x0660;\\n  t['zerobengali'] = 0x09E6;\\n  t['zerodeva'] = 0x0966;\\n  t['zerogujarati'] = 0x0AE6;\\n  t['zerogurmukhi'] = 0x0A66;\\n  t['zerohackarabic'] = 0x0660;\\n  t['zeroinferior'] = 0x2080;\\n  t['zeromonospace'] = 0xFF10;\\n  t['zerooldstyle'] = 0xF730;\\n  t['zeropersian'] = 0x06F0;\\n  t['zerosuperior'] = 0x2070;\\n  t['zerothai'] = 0x0E50;\\n  t['zerowidthjoiner'] = 0xFEFF;\\n  t['zerowidthnonjoiner'] = 0x200C;\\n  t['zerowidthspace'] = 0x200B;\\n  t['zeta'] = 0x03B6;\\n  t['zhbopomofo'] = 0x3113;\\n  t['zhearmenian'] = 0x056A;\\n  t['zhebrevecyrillic'] = 0x04C2;\\n  t['zhecyrillic'] = 0x0436;\\n  t['zhedescendercyrillic'] = 0x0497;\\n  t['zhedieresiscyrillic'] = 0x04DD;\\n  t['zihiragana'] = 0x3058;\\n  t['zikatakana'] = 0x30B8;\\n  t['zinorhebrew'] = 0x05AE;\\n  t['zlinebelow'] = 0x1E95;\\n  t['zmonospace'] = 0xFF5A;\\n  t['zohiragana'] = 0x305E;\\n  t['zokatakana'] = 0x30BE;\\n  t['zparen'] = 0x24B5;\\n  t['zretroflexhook'] = 0x0290;\\n  t['zstroke'] = 0x01B6;\\n  t['zuhiragana'] = 0x305A;\\n  t['zukatakana'] = 0x30BA;\\n  t['.notdef'] = 0x0000;\\n  t['angbracketleftbig'] = 0x2329;\\n  t['angbracketleftBig'] = 0x2329;\\n  t['angbracketleftbigg'] = 0x2329;\\n  t['angbracketleftBigg'] = 0x2329;\\n  t['angbracketrightBig'] = 0x232A;\\n  t['angbracketrightbig'] = 0x232A;\\n  t['angbracketrightBigg'] = 0x232A;\\n  t['angbracketrightbigg'] = 0x232A;\\n  t['arrowhookleft'] = 0x21AA;\\n  t['arrowhookright'] = 0x21A9;\\n  t['arrowlefttophalf'] = 0x21BC;\\n  t['arrowleftbothalf'] = 0x21BD;\\n  t['arrownortheast'] = 0x2197;\\n  t['arrownorthwest'] = 0x2196;\\n  t['arrowrighttophalf'] = 0x21C0;\\n  t['arrowrightbothalf'] = 0x21C1;\\n  t['arrowsoutheast'] = 0x2198;\\n  t['arrowsouthwest'] = 0x2199;\\n  t['backslashbig'] = 0x2216;\\n  t['backslashBig'] = 0x2216;\\n  t['backslashBigg'] = 0x2216;\\n  t['backslashbigg'] = 0x2216;\\n  t['bardbl'] = 0x2016;\\n  t['bracehtipdownleft'] = 0xFE37;\\n  t['bracehtipdownright'] = 0xFE37;\\n  t['bracehtipupleft'] = 0xFE38;\\n  t['bracehtipupright'] = 0xFE38;\\n  t['braceleftBig'] = 0x007B;\\n  t['braceleftbig'] = 0x007B;\\n  t['braceleftbigg'] = 0x007B;\\n  t['braceleftBigg'] = 0x007B;\\n  t['bracerightBig'] = 0x007D;\\n  t['bracerightbig'] = 0x007D;\\n  t['bracerightbigg'] = 0x007D;\\n  t['bracerightBigg'] = 0x007D;\\n  t['bracketleftbig'] = 0x005B;\\n  t['bracketleftBig'] = 0x005B;\\n  t['bracketleftbigg'] = 0x005B;\\n  t['bracketleftBigg'] = 0x005B;\\n  t['bracketrightBig'] = 0x005D;\\n  t['bracketrightbig'] = 0x005D;\\n  t['bracketrightbigg'] = 0x005D;\\n  t['bracketrightBigg'] = 0x005D;\\n  t['ceilingleftbig'] = 0x2308;\\n  t['ceilingleftBig'] = 0x2308;\\n  t['ceilingleftBigg'] = 0x2308;\\n  t['ceilingleftbigg'] = 0x2308;\\n  t['ceilingrightbig'] = 0x2309;\\n  t['ceilingrightBig'] = 0x2309;\\n  t['ceilingrightbigg'] = 0x2309;\\n  t['ceilingrightBigg'] = 0x2309;\\n  t['circledotdisplay'] = 0x2299;\\n  t['circledottext'] = 0x2299;\\n  t['circlemultiplydisplay'] = 0x2297;\\n  t['circlemultiplytext'] = 0x2297;\\n  t['circleplusdisplay'] = 0x2295;\\n  t['circleplustext'] = 0x2295;\\n  t['contintegraldisplay'] = 0x222E;\\n  t['contintegraltext'] = 0x222E;\\n  t['coproductdisplay'] = 0x2210;\\n  t['coproducttext'] = 0x2210;\\n  t['floorleftBig'] = 0x230A;\\n  t['floorleftbig'] = 0x230A;\\n  t['floorleftbigg'] = 0x230A;\\n  t['floorleftBigg'] = 0x230A;\\n  t['floorrightbig'] = 0x230B;\\n  t['floorrightBig'] = 0x230B;\\n  t['floorrightBigg'] = 0x230B;\\n  t['floorrightbigg'] = 0x230B;\\n  t['hatwide'] = 0x0302;\\n  t['hatwider'] = 0x0302;\\n  t['hatwidest'] = 0x0302;\\n  t['intercal'] = 0x1D40;\\n  t['integraldisplay'] = 0x222B;\\n  t['integraltext'] = 0x222B;\\n  t['intersectiondisplay'] = 0x22C2;\\n  t['intersectiontext'] = 0x22C2;\\n  t['logicalanddisplay'] = 0x2227;\\n  t['logicalandtext'] = 0x2227;\\n  t['logicalordisplay'] = 0x2228;\\n  t['logicalortext'] = 0x2228;\\n  t['parenleftBig'] = 0x0028;\\n  t['parenleftbig'] = 0x0028;\\n  t['parenleftBigg'] = 0x0028;\\n  t['parenleftbigg'] = 0x0028;\\n  t['parenrightBig'] = 0x0029;\\n  t['parenrightbig'] = 0x0029;\\n  t['parenrightBigg'] = 0x0029;\\n  t['parenrightbigg'] = 0x0029;\\n  t['prime'] = 0x2032;\\n  t['productdisplay'] = 0x220F;\\n  t['producttext'] = 0x220F;\\n  t['radicalbig'] = 0x221A;\\n  t['radicalBig'] = 0x221A;\\n  t['radicalBigg'] = 0x221A;\\n  t['radicalbigg'] = 0x221A;\\n  t['radicalbt'] = 0x221A;\\n  t['radicaltp'] = 0x221A;\\n  t['radicalvertex'] = 0x221A;\\n  t['slashbig'] = 0x002F;\\n  t['slashBig'] = 0x002F;\\n  t['slashBigg'] = 0x002F;\\n  t['slashbigg'] = 0x002F;\\n  t['summationdisplay'] = 0x2211;\\n  t['summationtext'] = 0x2211;\\n  t['tildewide'] = 0x02DC;\\n  t['tildewider'] = 0x02DC;\\n  t['tildewidest'] = 0x02DC;\\n  t['uniondisplay'] = 0x22C3;\\n  t['unionmultidisplay'] = 0x228E;\\n  t['unionmultitext'] = 0x228E;\\n  t['unionsqdisplay'] = 0x2294;\\n  t['unionsqtext'] = 0x2294;\\n  t['uniontext'] = 0x22C3;\\n  t['vextenddouble'] = 0x2225;\\n  t['vextendsingle'] = 0x2223;\\n});\\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\\n  t['space'] = 0x0020;\\n  t['a1'] = 0x2701;\\n  t['a2'] = 0x2702;\\n  t['a202'] = 0x2703;\\n  t['a3'] = 0x2704;\\n  t['a4'] = 0x260E;\\n  t['a5'] = 0x2706;\\n  t['a119'] = 0x2707;\\n  t['a118'] = 0x2708;\\n  t['a117'] = 0x2709;\\n  t['a11'] = 0x261B;\\n  t['a12'] = 0x261E;\\n  t['a13'] = 0x270C;\\n  t['a14'] = 0x270D;\\n  t['a15'] = 0x270E;\\n  t['a16'] = 0x270F;\\n  t['a105'] = 0x2710;\\n  t['a17'] = 0x2711;\\n  t['a18'] = 0x2712;\\n  t['a19'] = 0x2713;\\n  t['a20'] = 0x2714;\\n  t['a21'] = 0x2715;\\n  t['a22'] = 0x2716;\\n  t['a23'] = 0x2717;\\n  t['a24'] = 0x2718;\\n  t['a25'] = 0x2719;\\n  t['a26'] = 0x271A;\\n  t['a27'] = 0x271B;\\n  t['a28'] = 0x271C;\\n  t['a6'] = 0x271D;\\n  t['a7'] = 0x271E;\\n  t['a8'] = 0x271F;\\n  t['a9'] = 0x2720;\\n  t['a10'] = 0x2721;\\n  t['a29'] = 0x2722;\\n  t['a30'] = 0x2723;\\n  t['a31'] = 0x2724;\\n  t['a32'] = 0x2725;\\n  t['a33'] = 0x2726;\\n  t['a34'] = 0x2727;\\n  t['a35'] = 0x2605;\\n  t['a36'] = 0x2729;\\n  t['a37'] = 0x272A;\\n  t['a38'] = 0x272B;\\n  t['a39'] = 0x272C;\\n  t['a40'] = 0x272D;\\n  t['a41'] = 0x272E;\\n  t['a42'] = 0x272F;\\n  t['a43'] = 0x2730;\\n  t['a44'] = 0x2731;\\n  t['a45'] = 0x2732;\\n  t['a46'] = 0x2733;\\n  t['a47'] = 0x2734;\\n  t['a48'] = 0x2735;\\n  t['a49'] = 0x2736;\\n  t['a50'] = 0x2737;\\n  t['a51'] = 0x2738;\\n  t['a52'] = 0x2739;\\n  t['a53'] = 0x273A;\\n  t['a54'] = 0x273B;\\n  t['a55'] = 0x273C;\\n  t['a56'] = 0x273D;\\n  t['a57'] = 0x273E;\\n  t['a58'] = 0x273F;\\n  t['a59'] = 0x2740;\\n  t['a60'] = 0x2741;\\n  t['a61'] = 0x2742;\\n  t['a62'] = 0x2743;\\n  t['a63'] = 0x2744;\\n  t['a64'] = 0x2745;\\n  t['a65'] = 0x2746;\\n  t['a66'] = 0x2747;\\n  t['a67'] = 0x2748;\\n  t['a68'] = 0x2749;\\n  t['a69'] = 0x274A;\\n  t['a70'] = 0x274B;\\n  t['a71'] = 0x25CF;\\n  t['a72'] = 0x274D;\\n  t['a73'] = 0x25A0;\\n  t['a74'] = 0x274F;\\n  t['a203'] = 0x2750;\\n  t['a75'] = 0x2751;\\n  t['a204'] = 0x2752;\\n  t['a76'] = 0x25B2;\\n  t['a77'] = 0x25BC;\\n  t['a78'] = 0x25C6;\\n  t['a79'] = 0x2756;\\n  t['a81'] = 0x25D7;\\n  t['a82'] = 0x2758;\\n  t['a83'] = 0x2759;\\n  t['a84'] = 0x275A;\\n  t['a97'] = 0x275B;\\n  t['a98'] = 0x275C;\\n  t['a99'] = 0x275D;\\n  t['a100'] = 0x275E;\\n  t['a101'] = 0x2761;\\n  t['a102'] = 0x2762;\\n  t['a103'] = 0x2763;\\n  t['a104'] = 0x2764;\\n  t['a106'] = 0x2765;\\n  t['a107'] = 0x2766;\\n  t['a108'] = 0x2767;\\n  t['a112'] = 0x2663;\\n  t['a111'] = 0x2666;\\n  t['a110'] = 0x2665;\\n  t['a109'] = 0x2660;\\n  t['a120'] = 0x2460;\\n  t['a121'] = 0x2461;\\n  t['a122'] = 0x2462;\\n  t['a123'] = 0x2463;\\n  t['a124'] = 0x2464;\\n  t['a125'] = 0x2465;\\n  t['a126'] = 0x2466;\\n  t['a127'] = 0x2467;\\n  t['a128'] = 0x2468;\\n  t['a129'] = 0x2469;\\n  t['a130'] = 0x2776;\\n  t['a131'] = 0x2777;\\n  t['a132'] = 0x2778;\\n  t['a133'] = 0x2779;\\n  t['a134'] = 0x277A;\\n  t['a135'] = 0x277B;\\n  t['a136'] = 0x277C;\\n  t['a137'] = 0x277D;\\n  t['a138'] = 0x277E;\\n  t['a139'] = 0x277F;\\n  t['a140'] = 0x2780;\\n  t['a141'] = 0x2781;\\n  t['a142'] = 0x2782;\\n  t['a143'] = 0x2783;\\n  t['a144'] = 0x2784;\\n  t['a145'] = 0x2785;\\n  t['a146'] = 0x2786;\\n  t['a147'] = 0x2787;\\n  t['a148'] = 0x2788;\\n  t['a149'] = 0x2789;\\n  t['a150'] = 0x278A;\\n  t['a151'] = 0x278B;\\n  t['a152'] = 0x278C;\\n  t['a153'] = 0x278D;\\n  t['a154'] = 0x278E;\\n  t['a155'] = 0x278F;\\n  t['a156'] = 0x2790;\\n  t['a157'] = 0x2791;\\n  t['a158'] = 0x2792;\\n  t['a159'] = 0x2793;\\n  t['a160'] = 0x2794;\\n  t['a161'] = 0x2192;\\n  t['a163'] = 0x2194;\\n  t['a164'] = 0x2195;\\n  t['a196'] = 0x2798;\\n  t['a165'] = 0x2799;\\n  t['a192'] = 0x279A;\\n  t['a166'] = 0x279B;\\n  t['a167'] = 0x279C;\\n  t['a168'] = 0x279D;\\n  t['a169'] = 0x279E;\\n  t['a170'] = 0x279F;\\n  t['a171'] = 0x27A0;\\n  t['a172'] = 0x27A1;\\n  t['a173'] = 0x27A2;\\n  t['a162'] = 0x27A3;\\n  t['a174'] = 0x27A4;\\n  t['a175'] = 0x27A5;\\n  t['a176'] = 0x27A6;\\n  t['a177'] = 0x27A7;\\n  t['a178'] = 0x27A8;\\n  t['a179'] = 0x27A9;\\n  t['a193'] = 0x27AA;\\n  t['a180'] = 0x27AB;\\n  t['a199'] = 0x27AC;\\n  t['a181'] = 0x27AD;\\n  t['a200'] = 0x27AE;\\n  t['a182'] = 0x27AF;\\n  t['a201'] = 0x27B1;\\n  t['a183'] = 0x27B2;\\n  t['a184'] = 0x27B3;\\n  t['a197'] = 0x27B4;\\n  t['a185'] = 0x27B5;\\n  t['a194'] = 0x27B6;\\n  t['a198'] = 0x27B7;\\n  t['a186'] = 0x27B8;\\n  t['a195'] = 0x27B9;\\n  t['a187'] = 0x27BA;\\n  t['a188'] = 0x27BB;\\n  t['a189'] = 0x27BC;\\n  t['a190'] = 0x27BD;\\n  t['a191'] = 0x27BE;\\n  t['a89'] = 0x2768;\\n  t['a90'] = 0x2769;\\n  t['a93'] = 0x276A;\\n  t['a94'] = 0x276B;\\n  t['a91'] = 0x276C;\\n  t['a92'] = 0x276D;\\n  t['a205'] = 0x276E;\\n  t['a85'] = 0x276F;\\n  t['a206'] = 0x2770;\\n  t['a86'] = 0x2771;\\n  t['a87'] = 0x2772;\\n  t['a88'] = 0x2773;\\n  t['a95'] = 0x2774;\\n  t['a96'] = 0x2775;\\n  t['.notdef'] = 0x0000;\\n});\\nexports.getGlyphsUnicode = getGlyphsUnicode;\\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\\n\\n/***/ }),\\n/* 44 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nmodule.exports = function isNodeJS() {\\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\\n};\\n\\n/***/ }),\\n/* 45 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\\n  return Object.defineProperty(__w_pdfjs_require__(27)('div'), 'a', {\\n    get: function get() {\\n      return 7;\\n    }\\n  }).a != 7;\\n});\\n\\n/***/ }),\\n/* 46 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nmodule.exports = function (it, S) {\\n  if (!isObject(it)) return it;\\n  var fn, val;\\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\n  throw TypeError(\\\"Can't convert object to primitive value\\\");\\n};\\n\\n/***/ }),\\n/* 47 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar toIObject = __w_pdfjs_require__(17);\\nvar toLength = __w_pdfjs_require__(31);\\nvar toAbsoluteIndex = __w_pdfjs_require__(79);\\nmodule.exports = function (IS_INCLUDES) {\\n  return function ($this, el, fromIndex) {\\n    var O = toIObject($this);\\n    var length = toLength(O.length);\\n    var index = toAbsoluteIndex(fromIndex, length);\\n    var value;\\n    if (IS_INCLUDES && el != el) while (length > index) {\\n      value = O[index++];\\n      if (value != value) return true;\\n    } else for (; length > index; index++) {\\n      if (IS_INCLUDES || index in O) {\\n        if (O[index] === el) return IS_INCLUDES || index || 0;\\n      }\\n    }return !IS_INCLUDES && -1;\\n  };\\n};\\n\\n/***/ }),\\n/* 48 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\\nvar ArrayProto = Array.prototype;\\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\\nmodule.exports = function (key) {\\n  ArrayProto[UNSCOPABLES][key] = true;\\n};\\n\\n/***/ }),\\n/* 49 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar global = __w_pdfjs_require__(5);\\nvar SHARED = '__core-js_shared__';\\nvar store = global[SHARED] || (global[SHARED] = {});\\nmodule.exports = function (key) {\\n  return store[key] || (store[key] = {});\\n};\\n\\n/***/ }),\\n/* 50 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar classof = __w_pdfjs_require__(33);\\nvar test = {};\\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\\nif (test + '' != '[object z]') {\\n  __w_pdfjs_require__(10)(Object.prototype, 'toString', function toString() {\\n    return '[object ' + classof(this) + ']';\\n  }, true);\\n}\\n\\n/***/ }),\\n/* 51 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar LIBRARY = __w_pdfjs_require__(52);\\nvar $export = __w_pdfjs_require__(6);\\nvar redefine = __w_pdfjs_require__(10);\\nvar hide = __w_pdfjs_require__(12);\\nvar has = __w_pdfjs_require__(9);\\nvar Iterators = __w_pdfjs_require__(19);\\nvar $iterCreate = __w_pdfjs_require__(90);\\nvar setToStringTag = __w_pdfjs_require__(24);\\nvar getPrototypeOf = __w_pdfjs_require__(94);\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\nvar BUGGY = !([].keys && 'next' in [].keys());\\nvar FF_ITERATOR = '@@iterator';\\nvar KEYS = 'keys';\\nvar VALUES = 'values';\\nvar returnThis = function returnThis() {\\n  return this;\\n};\\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\\n  $iterCreate(Constructor, NAME, next);\\n  var getMethod = function getMethod(kind) {\\n    if (!BUGGY && kind in proto) return proto[kind];\\n    switch (kind) {\\n      case KEYS:\\n        return function keys() {\\n          return new Constructor(this, kind);\\n        };\\n      case VALUES:\\n        return function values() {\\n          return new Constructor(this, kind);\\n        };\\n    }\\n    return function entries() {\\n      return new Constructor(this, kind);\\n    };\\n  };\\n  var TAG = NAME + ' Iterator';\\n  var DEF_VALUES = DEFAULT == VALUES;\\n  var VALUES_BUG = false;\\n  var proto = Base.prototype;\\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\\n  var $default = !BUGGY && $native || getMethod(DEFAULT);\\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\\n  var methods, key, IteratorPrototype;\\n  if ($anyNative) {\\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\\n      setToStringTag(IteratorPrototype, TAG, true);\\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\\n    }\\n  }\\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\\n    VALUES_BUG = true;\\n    $default = function values() {\\n      return $native.call(this);\\n    };\\n  }\\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\\n    hide(proto, ITERATOR, $default);\\n  }\\n  Iterators[NAME] = $default;\\n  Iterators[TAG] = returnThis;\\n  if (DEFAULT) {\\n    methods = {\\n      values: DEF_VALUES ? $default : getMethod(VALUES),\\n      keys: IS_SET ? $default : getMethod(KEYS),\\n      entries: $entries\\n    };\\n    if (FORCED) for (key in methods) {\\n      if (!(key in proto)) redefine(proto, key, methods[key]);\\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\\n  }\\n  return methods;\\n};\\n\\n/***/ }),\\n/* 52 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = false;\\n\\n/***/ }),\\n/* 53 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\\n\\n/***/ }),\\n/* 54 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar document = __w_pdfjs_require__(5).document;\\nmodule.exports = document && document.documentElement;\\n\\n/***/ }),\\n/* 55 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $iterators = __w_pdfjs_require__(95);\\nvar getKeys = __w_pdfjs_require__(23);\\nvar redefine = __w_pdfjs_require__(10);\\nvar global = __w_pdfjs_require__(5);\\nvar hide = __w_pdfjs_require__(12);\\nvar Iterators = __w_pdfjs_require__(19);\\nvar wks = __w_pdfjs_require__(4);\\nvar ITERATOR = wks('iterator');\\nvar TO_STRING_TAG = wks('toStringTag');\\nvar ArrayValues = Iterators.Array;\\nvar DOMIterables = {\\n  CSSRuleList: true,\\n  CSSStyleDeclaration: false,\\n  CSSValueList: false,\\n  ClientRectList: false,\\n  DOMRectList: false,\\n  DOMStringList: false,\\n  DOMTokenList: true,\\n  DataTransferItemList: false,\\n  FileList: false,\\n  HTMLAllCollection: false,\\n  HTMLCollection: false,\\n  HTMLFormElement: false,\\n  HTMLSelectElement: false,\\n  MediaList: true,\\n  MimeTypeArray: false,\\n  NamedNodeMap: false,\\n  NodeList: true,\\n  PaintRequestList: false,\\n  Plugin: false,\\n  PluginArray: false,\\n  SVGLengthList: false,\\n  SVGNumberList: false,\\n  SVGPathSegList: false,\\n  SVGPointList: false,\\n  SVGStringList: false,\\n  SVGTransformList: false,\\n  SourceBufferList: false,\\n  StyleSheetList: true,\\n  TextTrackCueList: false,\\n  TextTrackList: false,\\n  TouchList: false\\n};\\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\\n  var NAME = collections[i];\\n  var explicit = DOMIterables[NAME];\\n  var Collection = global[NAME];\\n  var proto = Collection && Collection.prototype;\\n  var key;\\n  if (proto) {\\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\\n    Iterators[NAME] = ArrayValues;\\n    if (explicit) for (key in $iterators) {\\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\\n    }\\n  }\\n}\\n\\n/***/ }),\\n/* 56 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar anObject = __w_pdfjs_require__(8);\\nvar aFunction = __w_pdfjs_require__(16);\\nvar SPECIES = __w_pdfjs_require__(4)('species');\\nmodule.exports = function (O, D) {\\n  var C = anObject(O).constructor;\\n  var S;\\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\\n};\\n\\n/***/ }),\\n/* 57 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar ctx = __w_pdfjs_require__(11);\\nvar invoke = __w_pdfjs_require__(101);\\nvar html = __w_pdfjs_require__(54);\\nvar cel = __w_pdfjs_require__(27);\\nvar global = __w_pdfjs_require__(5);\\nvar process = global.process;\\nvar setTask = global.setImmediate;\\nvar clearTask = global.clearImmediate;\\nvar MessageChannel = global.MessageChannel;\\nvar Dispatch = global.Dispatch;\\nvar counter = 0;\\nvar queue = {};\\nvar ONREADYSTATECHANGE = 'onreadystatechange';\\nvar defer, channel, port;\\nvar run = function run() {\\n  var id = +this;\\n  if (queue.hasOwnProperty(id)) {\\n    var fn = queue[id];\\n    delete queue[id];\\n    fn();\\n  }\\n};\\nvar listener = function listener(event) {\\n  run.call(event.data);\\n};\\nif (!setTask || !clearTask) {\\n  setTask = function setImmediate(fn) {\\n    var args = [];\\n    var i = 1;\\n    while (arguments.length > i) {\\n      args.push(arguments[i++]);\\n    }queue[++counter] = function () {\\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\\n    };\\n    defer(counter);\\n    return counter;\\n  };\\n  clearTask = function clearImmediate(id) {\\n    delete queue[id];\\n  };\\n  if (__w_pdfjs_require__(18)(process) == 'process') {\\n    defer = function defer(id) {\\n      process.nextTick(ctx(run, id, 1));\\n    };\\n  } else if (Dispatch && Dispatch.now) {\\n    defer = function defer(id) {\\n      Dispatch.now(ctx(run, id, 1));\\n    };\\n  } else if (MessageChannel) {\\n    channel = new MessageChannel();\\n    port = channel.port2;\\n    channel.port1.onmessage = listener;\\n    defer = ctx(port.postMessage, port, 1);\\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\\n    defer = function defer(id) {\\n      global.postMessage(id + '', '*');\\n    };\\n    global.addEventListener('message', listener, false);\\n  } else if (ONREADYSTATECHANGE in cel('script')) {\\n    defer = function defer(id) {\\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\\n        html.removeChild(this);\\n        run.call(id);\\n      };\\n    };\\n  } else {\\n    defer = function defer(id) {\\n      setTimeout(ctx(run, id, 1), 0);\\n    };\\n  }\\n}\\nmodule.exports = {\\n  set: setTask,\\n  clear: clearTask\\n};\\n\\n/***/ }),\\n/* 58 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (exec) {\\n  try {\\n    return {\\n      e: false,\\n      v: exec()\\n    };\\n  } catch (e) {\\n    return {\\n      e: true,\\n      v: e\\n    };\\n  }\\n};\\n\\n/***/ }),\\n/* 59 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar anObject = __w_pdfjs_require__(8);\\nvar isObject = __w_pdfjs_require__(3);\\nvar newPromiseCapability = __w_pdfjs_require__(37);\\nmodule.exports = function (C, x) {\\n  anObject(C);\\n  if (isObject(x) && x.constructor === C) return x;\\n  var promiseCapability = newPromiseCapability.f(C);\\n  var resolve = promiseCapability.resolve;\\n  resolve(x);\\n  return promiseCapability.promise;\\n};\\n\\n/***/ }),\\n/* 60 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\nvar SAFE_CLOSING = false;\\ntry {\\n  var riter = [7][ITERATOR]();\\n  riter['return'] = function () {\\n    SAFE_CLOSING = true;\\n  };\\n  Array.from(riter, function () {\\n    throw 2;\\n  });\\n} catch (e) {}\\nmodule.exports = function (exec, skipClosing) {\\n  if (!skipClosing && !SAFE_CLOSING) return false;\\n  var safe = false;\\n  try {\\n    var arr = [7];\\n    var iter = arr[ITERATOR]();\\n    iter.next = function () {\\n      return { done: safe = true };\\n    };\\n    arr[ITERATOR] = function () {\\n      return iter;\\n    };\\n    exec(arr);\\n  } catch (e) {}\\n  return safe;\\n};\\n\\n/***/ }),\\n/* 61 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar ctx = __w_pdfjs_require__(11);\\nvar IObject = __w_pdfjs_require__(29);\\nvar toObject = __w_pdfjs_require__(35);\\nvar toLength = __w_pdfjs_require__(31);\\nvar asc = __w_pdfjs_require__(108);\\nmodule.exports = function (TYPE, $create) {\\n  var IS_MAP = TYPE == 1;\\n  var IS_FILTER = TYPE == 2;\\n  var IS_SOME = TYPE == 3;\\n  var IS_EVERY = TYPE == 4;\\n  var IS_FIND_INDEX = TYPE == 6;\\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\\n  var create = $create || asc;\\n  return function ($this, callbackfn, that) {\\n    var O = toObject($this);\\n    var self = IObject(O);\\n    var f = ctx(callbackfn, that, 3);\\n    var length = toLength(self.length);\\n    var index = 0;\\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\\n    var val, res;\\n    for (; length > index; index++) {\\n      if (NO_HOLES || index in self) {\\n        val = self[index];\\n        res = f(val, index, O);\\n        if (TYPE) {\\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\\n            case 3:\\n              return true;\\n            case 5:\\n              return val;\\n            case 6:\\n              return index;\\n            case 2:\\n              result.push(val);\\n          } else if (IS_EVERY) return false;\\n        }\\n      }\\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\\n  };\\n};\\n\\n/***/ }),\\n/* 62 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nmodule.exports = function (it, TYPE) {\\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\\n  return it;\\n};\\n\\n/***/ }),\\n/* 63 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar ChunkedStream = function ChunkedStreamClosure() {\\n  function ChunkedStream(length, chunkSize, manager) {\\n    this.bytes = new Uint8Array(length);\\n    this.start = 0;\\n    this.pos = 0;\\n    this.end = length;\\n    this.chunkSize = chunkSize;\\n    this.loadedChunks = [];\\n    this.numChunksLoaded = 0;\\n    this.numChunks = Math.ceil(length / chunkSize);\\n    this.manager = manager;\\n    this.progressiveDataLength = 0;\\n    this.lastSuccessfulEnsureByteChunk = -1;\\n  }\\n  ChunkedStream.prototype = {\\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\\n      var chunks = [];\\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\\n        if (!this.loadedChunks[chunk]) {\\n          chunks.push(chunk);\\n        }\\n      }\\n      return chunks;\\n    },\\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\\n      return [this];\\n    },\\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\\n      return this.numChunksLoaded === this.numChunks;\\n    },\\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\\n      var end = begin + chunk.byteLength;\\n      if (begin % this.chunkSize !== 0) {\\n        throw new Error('Bad begin offset: ' + begin);\\n      }\\n      var length = this.bytes.length;\\n      if (end % this.chunkSize !== 0 && end !== length) {\\n        throw new Error('Bad end offset: ' + end);\\n      }\\n      this.bytes.set(new Uint8Array(chunk), begin);\\n      var chunkSize = this.chunkSize;\\n      var beginChunk = Math.floor(begin / chunkSize);\\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\n      var curChunk;\\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\n        if (!this.loadedChunks[curChunk]) {\\n          this.loadedChunks[curChunk] = true;\\n          ++this.numChunksLoaded;\\n        }\\n      }\\n    },\\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\\n      var position = this.progressiveDataLength;\\n      var beginChunk = Math.floor(position / this.chunkSize);\\n      this.bytes.set(new Uint8Array(data), position);\\n      position += data.byteLength;\\n      this.progressiveDataLength = position;\\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\\n      var curChunk;\\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\n        if (!this.loadedChunks[curChunk]) {\\n          this.loadedChunks[curChunk] = true;\\n          ++this.numChunksLoaded;\\n        }\\n      }\\n    },\\n    ensureByte: function ChunkedStream_ensureByte(pos) {\\n      var chunk = Math.floor(pos / this.chunkSize);\\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\\n        return;\\n      }\\n      if (!this.loadedChunks[chunk]) {\\n        throw new _util.MissingDataException(pos, pos + 1);\\n      }\\n      this.lastSuccessfulEnsureByteChunk = chunk;\\n    },\\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\\n      if (begin >= end) {\\n        return;\\n      }\\n      if (end <= this.progressiveDataLength) {\\n        return;\\n      }\\n      var chunkSize = this.chunkSize;\\n      var beginChunk = Math.floor(begin / chunkSize);\\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n        if (!this.loadedChunks[chunk]) {\\n          throw new _util.MissingDataException(begin, end);\\n        }\\n      }\\n    },\\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\\n      var chunk,\\n          numChunks = this.numChunks;\\n      for (var i = 0; i < numChunks; ++i) {\\n        chunk = (beginChunk + i) % numChunks;\\n        if (!this.loadedChunks[chunk]) {\\n          return chunk;\\n        }\\n      }\\n      return null;\\n    },\\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\\n      return !!this.loadedChunks[chunk];\\n    },\\n    get length() {\\n      return this.end - this.start;\\n    },\\n    get isEmpty() {\\n      return this.length === 0;\\n    },\\n    getByte: function ChunkedStream_getByte() {\\n      var pos = this.pos;\\n      if (pos >= this.end) {\\n        return -1;\\n      }\\n      this.ensureByte(pos);\\n      return this.bytes[this.pos++];\\n    },\\n    getUint16: function ChunkedStream_getUint16() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      if (b0 === -1 || b1 === -1) {\\n        return -1;\\n      }\\n      return (b0 << 8) + b1;\\n    },\\n    getInt32: function ChunkedStream_getInt32() {\\n      var b0 = this.getByte();\\n      var b1 = this.getByte();\\n      var b2 = this.getByte();\\n      var b3 = this.getByte();\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n    },\\n    getBytes: function ChunkedStream_getBytes(length) {\\n      var bytes = this.bytes;\\n      var pos = this.pos;\\n      var strEnd = this.end;\\n      if (!length) {\\n        this.ensureRange(pos, strEnd);\\n        return bytes.subarray(pos, strEnd);\\n      }\\n      var end = pos + length;\\n      if (end > strEnd) {\\n        end = strEnd;\\n      }\\n      this.ensureRange(pos, end);\\n      this.pos = end;\\n      return bytes.subarray(pos, end);\\n    },\\n    peekByte: function ChunkedStream_peekByte() {\\n      var peekedByte = this.getByte();\\n      this.pos--;\\n      return peekedByte;\\n    },\\n    peekBytes: function ChunkedStream_peekBytes(length) {\\n      var bytes = this.getBytes(length);\\n      this.pos -= bytes.length;\\n      return bytes;\\n    },\\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\\n      this.ensureRange(begin, end);\\n      return this.bytes.subarray(begin, end);\\n    },\\n    skip: function ChunkedStream_skip(n) {\\n      if (!n) {\\n        n = 1;\\n      }\\n      this.pos += n;\\n    },\\n    reset: function ChunkedStream_reset() {\\n      this.pos = this.start;\\n    },\\n    moveStart: function ChunkedStream_moveStart() {\\n      this.start = this.pos;\\n    },\\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\\n      this.ensureRange(start, start + length);\\n      function ChunkedStreamSubstream() {}\\n      ChunkedStreamSubstream.prototype = Object.create(this);\\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\\n        var chunkSize = this.chunkSize;\\n        var beginChunk = Math.floor(this.start / chunkSize);\\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\\n        var missingChunks = [];\\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n          if (!this.loadedChunks[chunk]) {\\n            missingChunks.push(chunk);\\n          }\\n        }\\n        return missingChunks;\\n      };\\n      var subStream = new ChunkedStreamSubstream();\\n      subStream.pos = subStream.start = start;\\n      subStream.end = start + length || this.end;\\n      subStream.dict = dict;\\n      return subStream;\\n    }\\n  };\\n  return ChunkedStream;\\n}();\\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\\n  function ChunkedStreamManager(pdfNetworkStream, args) {\\n    var chunkSize = args.rangeChunkSize;\\n    var length = args.length;\\n    this.stream = new ChunkedStream(length, chunkSize, this);\\n    this.length = length;\\n    this.chunkSize = chunkSize;\\n    this.pdfNetworkStream = pdfNetworkStream;\\n    this.url = args.url;\\n    this.disableAutoFetch = args.disableAutoFetch;\\n    this.msgHandler = args.msgHandler;\\n    this.currRequestId = 0;\\n    this.chunksNeededByRequest = Object.create(null);\\n    this.requestsByChunk = Object.create(null);\\n    this.promisesByRequest = Object.create(null);\\n    this.progressiveDataLength = 0;\\n    this.aborted = false;\\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\\n  }\\n  ChunkedStreamManager.prototype = {\\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\\n      return this._loadedStreamCapability.promise;\\n    },\\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\\n      var _this = this;\\n\\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\\n      if (!rangeReader.isStreamingSupported) {\\n        rangeReader.onProgress = this.onProgress.bind(this);\\n      }\\n      var chunks = [],\\n          loaded = 0;\\n      var manager = this;\\n      var promise = new Promise(function (resolve, reject) {\\n        var readChunk = function readChunk(chunk) {\\n          try {\\n            if (!chunk.done) {\\n              var data = chunk.value;\\n              chunks.push(data);\\n              loaded += (0, _util.arrayByteLength)(data);\\n              if (rangeReader.isStreamingSupported) {\\n                manager.onProgress({ loaded: loaded });\\n              }\\n              rangeReader.read().then(readChunk, reject);\\n              return;\\n            }\\n            var chunkData = (0, _util.arraysToBytes)(chunks);\\n            chunks = null;\\n            resolve(chunkData);\\n          } catch (e) {\\n            reject(e);\\n          }\\n        };\\n        rangeReader.read().then(readChunk, reject);\\n      });\\n      promise.then(function (data) {\\n        if (_this.aborted) {\\n          return;\\n        }\\n        _this.onReceiveData({\\n          chunk: data,\\n          begin: begin\\n        });\\n      });\\n    },\\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\\n      var missingChunks = this.stream.getMissingChunks();\\n      this._requestChunks(missingChunks);\\n      return this._loadedStreamCapability.promise;\\n    },\\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\\n      var requestId = this.currRequestId++;\\n      var i, ii;\\n      var chunksNeeded = Object.create(null);\\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\\n      for (i = 0, ii = chunks.length; i < ii; i++) {\\n        if (!this.stream.hasChunk(chunks[i])) {\\n          chunksNeeded[chunks[i]] = true;\\n        }\\n      }\\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\\n        return Promise.resolve();\\n      }\\n      var capability = (0, _util.createPromiseCapability)();\\n      this.promisesByRequest[requestId] = capability;\\n      var chunksToRequest = [];\\n      for (var chunk in chunksNeeded) {\\n        chunk = chunk | 0;\\n        if (!(chunk in this.requestsByChunk)) {\\n          this.requestsByChunk[chunk] = [];\\n          chunksToRequest.push(chunk);\\n        }\\n        this.requestsByChunk[chunk].push(requestId);\\n      }\\n      if (!chunksToRequest.length) {\\n        return capability.promise;\\n      }\\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\\n        var groupedChunk = groupedChunksToRequest[i];\\n        var begin = groupedChunk.beginChunk * this.chunkSize;\\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\\n        this.sendRequest(begin, end);\\n      }\\n      return capability.promise;\\n    },\\n    getStream: function ChunkedStreamManager_getStream() {\\n      return this.stream;\\n    },\\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\\n      end = Math.min(end, this.length);\\n      var beginChunk = this.getBeginChunk(begin);\\n      var endChunk = this.getEndChunk(end);\\n      var chunks = [];\\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n        chunks.push(chunk);\\n      }\\n      return this._requestChunks(chunks);\\n    },\\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\\n      ranges = ranges || [];\\n      var chunksToRequest = [];\\n      for (var i = 0; i < ranges.length; i++) {\\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\\n        var endChunk = this.getEndChunk(ranges[i].end);\\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n          if (chunksToRequest.indexOf(chunk) < 0) {\\n            chunksToRequest.push(chunk);\\n          }\\n        }\\n      }\\n      chunksToRequest.sort(function (a, b) {\\n        return a - b;\\n      });\\n      return this._requestChunks(chunksToRequest);\\n    },\\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\\n      var groupedChunks = [];\\n      var beginChunk = -1;\\n      var prevChunk = -1;\\n      for (var i = 0; i < chunks.length; ++i) {\\n        var chunk = chunks[i];\\n        if (beginChunk < 0) {\\n          beginChunk = chunk;\\n        }\\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\\n          groupedChunks.push({\\n            beginChunk: beginChunk,\\n            endChunk: prevChunk + 1\\n          });\\n          beginChunk = chunk;\\n        }\\n        if (i + 1 === chunks.length) {\\n          groupedChunks.push({\\n            beginChunk: beginChunk,\\n            endChunk: chunk + 1\\n          });\\n        }\\n        prevChunk = chunk;\\n      }\\n      return groupedChunks;\\n    },\\n    onProgress: function ChunkedStreamManager_onProgress(args) {\\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\\n      this.msgHandler.send('DocProgress', {\\n        loaded: bytesLoaded,\\n        total: this.length\\n      });\\n    },\\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\\n      var chunk = args.chunk;\\n      var isProgressive = args.begin === undefined;\\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\\n      var end = begin + chunk.byteLength;\\n      var beginChunk = Math.floor(begin / this.chunkSize);\\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\\n      if (isProgressive) {\\n        this.stream.onReceiveProgressiveData(chunk);\\n        this.progressiveDataLength = end;\\n      } else {\\n        this.stream.onReceiveData(begin, chunk);\\n      }\\n      if (this.stream.allChunksLoaded()) {\\n        this._loadedStreamCapability.resolve(this.stream);\\n      }\\n      var loadedRequests = [];\\n      var i, requestId;\\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\\n        var requestIds = this.requestsByChunk[chunk] || [];\\n        delete this.requestsByChunk[chunk];\\n        for (i = 0; i < requestIds.length; ++i) {\\n          requestId = requestIds[i];\\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\\n          if (chunk in chunksNeeded) {\\n            delete chunksNeeded[chunk];\\n          }\\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\\n            continue;\\n          }\\n          loadedRequests.push(requestId);\\n        }\\n      }\\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\\n        var nextEmptyChunk;\\n        if (this.stream.numChunksLoaded === 1) {\\n          var lastChunk = this.stream.numChunks - 1;\\n          if (!this.stream.hasChunk(lastChunk)) {\\n            nextEmptyChunk = lastChunk;\\n          }\\n        } else {\\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\\n        }\\n        if (Number.isInteger(nextEmptyChunk)) {\\n          this._requestChunks([nextEmptyChunk]);\\n        }\\n      }\\n      for (i = 0; i < loadedRequests.length; ++i) {\\n        requestId = loadedRequests[i];\\n        var capability = this.promisesByRequest[requestId];\\n        delete this.promisesByRequest[requestId];\\n        capability.resolve();\\n      }\\n      this.msgHandler.send('DocProgress', {\\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\\n        total: this.length\\n      });\\n    },\\n    onError: function ChunkedStreamManager_onError(err) {\\n      this._loadedStreamCapability.reject(err);\\n    },\\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\\n      var chunk = Math.floor(begin / this.chunkSize);\\n      return chunk;\\n    },\\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\\n      return chunk;\\n    },\\n    abort: function ChunkedStreamManager_abort() {\\n      this.aborted = true;\\n      if (this.pdfNetworkStream) {\\n        this.pdfNetworkStream.cancelAllRequests('abort');\\n      }\\n      for (var requestId in this.promisesByRequest) {\\n        var capability = this.promisesByRequest[requestId];\\n        capability.reject(new Error('Request was aborted'));\\n      }\\n    }\\n  };\\n  return ChunkedStreamManager;\\n}();\\nexports.ChunkedStream = ChunkedStream;\\nexports.ChunkedStreamManager = ChunkedStreamManager;\\n\\n/***/ }),\\n/* 64 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _parser = __w_pdfjs_require__(26);\\n\\nvar _chunked_stream = __w_pdfjs_require__(63);\\n\\nvar _crypto = __w_pdfjs_require__(68);\\n\\nvar _colorspace = __w_pdfjs_require__(20);\\n\\nvar Catalog = function CatalogClosure() {\\n  function Catalog(pdfManager, xref, pageFactory) {\\n    this.pdfManager = pdfManager;\\n    this.xref = xref;\\n    this.catDict = xref.getCatalogObj();\\n    if (!(0, _primitives.isDict)(this.catDict)) {\\n      throw new _util.FormatError('catalog object is not a dictionary');\\n    }\\n    this.fontCache = new _primitives.RefSetCache();\\n    this.builtInCMapCache = Object.create(null);\\n    this.pageKidsCountCache = new _primitives.RefSetCache();\\n    this.pageFactory = pageFactory;\\n    this.pagePromises = [];\\n  }\\n  Catalog.prototype = {\\n    get metadata() {\\n      var streamRef = this.catDict.getRaw('Metadata');\\n      if (!(0, _primitives.isRef)(streamRef)) {\\n        return (0, _util.shadow)(this, 'metadata', null);\\n      }\\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\\n      var metadata;\\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\\n        var type = stream.dict.get('Type');\\n        var subtype = stream.dict.get('Subtype');\\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\\n          try {\\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\\n          } catch (e) {\\n            if (e instanceof _util.MissingDataException) {\\n              throw e;\\n            }\\n            (0, _util.info)('Skipping invalid metadata.');\\n          }\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'metadata', metadata);\\n    },\\n    get toplevelPagesDict() {\\n      var pagesObj = this.catDict.get('Pages');\\n      if (!(0, _primitives.isDict)(pagesObj)) {\\n        throw new _util.FormatError('invalid top-level pages dictionary');\\n      }\\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\\n    },\\n    get documentOutline() {\\n      var obj = null;\\n      try {\\n        obj = this.readDocumentOutline();\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Unable to read document outline');\\n      }\\n      return (0, _util.shadow)(this, 'documentOutline', obj);\\n    },\\n    readDocumentOutline: function Catalog_readDocumentOutline() {\\n      var obj = this.catDict.get('Outlines');\\n      if (!(0, _primitives.isDict)(obj)) {\\n        return null;\\n      }\\n      obj = obj.getRaw('First');\\n      if (!(0, _primitives.isRef)(obj)) {\\n        return null;\\n      }\\n      var root = { items: [] };\\n      var queue = [{\\n        obj: obj,\\n        parent: root\\n      }];\\n      var processed = new _primitives.RefSet();\\n      processed.put(obj);\\n      var xref = this.xref,\\n          blackColor = new Uint8Array(3);\\n      while (queue.length > 0) {\\n        var i = queue.shift();\\n        var outlineDict = xref.fetchIfRef(i.obj);\\n        if (outlineDict === null) {\\n          continue;\\n        }\\n        if (!outlineDict.has('Title')) {\\n          throw new _util.FormatError('Invalid outline item');\\n        }\\n        var data = {\\n          url: null,\\n          dest: null\\n        };\\n        Catalog.parseDestDictionary({\\n          destDict: outlineDict,\\n          resultObj: data,\\n          docBaseUrl: this.pdfManager.docBaseUrl\\n        });\\n        var title = outlineDict.get('Title');\\n        var flags = outlineDict.get('F') || 0;\\n        var color = outlineDict.getArray('C'),\\n            rgbColor = blackColor;\\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\\n        }\\n        var outlineItem = {\\n          dest: data.dest,\\n          url: data.url,\\n          unsafeUrl: data.unsafeUrl,\\n          newWindow: data.newWindow,\\n          title: (0, _util.stringToPDFString)(title),\\n          color: rgbColor,\\n          count: outlineDict.get('Count'),\\n          bold: !!(flags & 2),\\n          italic: !!(flags & 1),\\n          items: []\\n        };\\n        i.parent.items.push(outlineItem);\\n        obj = outlineDict.getRaw('First');\\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\n          queue.push({\\n            obj: obj,\\n            parent: outlineItem\\n          });\\n          processed.put(obj);\\n        }\\n        obj = outlineDict.getRaw('Next');\\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\n          queue.push({\\n            obj: obj,\\n            parent: i.parent\\n          });\\n          processed.put(obj);\\n        }\\n      }\\n      return root.items.length > 0 ? root.items : null;\\n    },\\n    get numPages() {\\n      var obj = this.toplevelPagesDict.get('Count');\\n      if (!Number.isInteger(obj)) {\\n        throw new _util.FormatError('page count in top level pages object is not an integer');\\n      }\\n      return (0, _util.shadow)(this, 'numPages', obj);\\n    },\\n    get destinations() {\\n      function fetchDestination(dest) {\\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\\n      }\\n      var xref = this.xref;\\n      var dests = {},\\n          nameTreeRef,\\n          nameDictionaryRef;\\n      var obj = this.catDict.get('Names');\\n      if (obj && obj.has('Dests')) {\\n        nameTreeRef = obj.getRaw('Dests');\\n      } else if (this.catDict.has('Dests')) {\\n        nameDictionaryRef = this.catDict.get('Dests');\\n      }\\n      if (nameDictionaryRef) {\\n        obj = nameDictionaryRef;\\n        obj.forEach(function catalogForEach(key, value) {\\n          if (!value) {\\n            return;\\n          }\\n          dests[key] = fetchDestination(value);\\n        });\\n      }\\n      if (nameTreeRef) {\\n        var nameTree = new NameTree(nameTreeRef, xref);\\n        var names = nameTree.getAll();\\n        for (var name in names) {\\n          dests[name] = fetchDestination(names[name]);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'destinations', dests);\\n    },\\n    getDestination: function Catalog_getDestination(destinationId) {\\n      function fetchDestination(dest) {\\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\\n      }\\n      var xref = this.xref;\\n      var dest = null,\\n          nameTreeRef,\\n          nameDictionaryRef;\\n      var obj = this.catDict.get('Names');\\n      if (obj && obj.has('Dests')) {\\n        nameTreeRef = obj.getRaw('Dests');\\n      } else if (this.catDict.has('Dests')) {\\n        nameDictionaryRef = this.catDict.get('Dests');\\n      }\\n      if (nameDictionaryRef) {\\n        var value = nameDictionaryRef.get(destinationId);\\n        if (value) {\\n          dest = fetchDestination(value);\\n        }\\n      }\\n      if (nameTreeRef) {\\n        var nameTree = new NameTree(nameTreeRef, xref);\\n        dest = fetchDestination(nameTree.get(destinationId));\\n      }\\n      return dest;\\n    },\\n    get pageLabels() {\\n      var obj = null;\\n      try {\\n        obj = this.readPageLabels();\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Unable to read page labels.');\\n      }\\n      return (0, _util.shadow)(this, 'pageLabels', obj);\\n    },\\n    readPageLabels: function Catalog_readPageLabels() {\\n      var obj = this.catDict.getRaw('PageLabels');\\n      if (!obj) {\\n        return null;\\n      }\\n      var pageLabels = new Array(this.numPages);\\n      var style = null;\\n      var prefix = '';\\n      var numberTree = new NumberTree(obj, this.xref);\\n      var nums = numberTree.getAll();\\n      var currentLabel = '',\\n          currentIndex = 1;\\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\\n        if (i in nums) {\\n          var labelDict = nums[i];\\n          if (!(0, _primitives.isDict)(labelDict)) {\\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\\n          }\\n          var type = labelDict.get('Type');\\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\\n          }\\n          var s = labelDict.get('S');\\n          if (s && !(0, _primitives.isName)(s)) {\\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\\n          }\\n          style = s ? s.name : null;\\n          var p = labelDict.get('P');\\n          if (p && !(0, _util.isString)(p)) {\\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\\n          }\\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\\n          var st = labelDict.get('St');\\n          if (st && !(Number.isInteger(st) && st >= 1)) {\\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\\n          }\\n          currentIndex = st || 1;\\n        }\\n        switch (style) {\\n          case 'D':\\n            currentLabel = currentIndex;\\n            break;\\n          case 'R':\\n          case 'r':\\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\\n            break;\\n          case 'A':\\n          case 'a':\\n            var LIMIT = 26;\\n            var A_UPPER_CASE = 0x41,\\n                A_LOWER_CASE = 0x61;\\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\\n            var letterIndex = currentIndex - 1;\\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\\n            var charBuf = [];\\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\\n              charBuf.push(character);\\n            }\\n            currentLabel = charBuf.join('');\\n            break;\\n          default:\\n            if (style) {\\n              throw new _util.FormatError('Invalid style \\\"' + style + '\\\" in PageLabel dictionary.');\\n            }\\n        }\\n        pageLabels[i] = prefix + currentLabel;\\n        currentLabel = '';\\n        currentIndex++;\\n      }\\n      return pageLabels;\\n    },\\n    get pageMode() {\\n      var obj = this.catDict.get('PageMode');\\n      var pageMode = 'UseNone';\\n      if ((0, _primitives.isName)(obj)) {\\n        switch (obj.name) {\\n          case 'UseNone':\\n          case 'UseOutlines':\\n          case 'UseThumbs':\\n          case 'FullScreen':\\n          case 'UseOC':\\n          case 'UseAttachments':\\n            pageMode = obj.name;\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\\n    },\\n    get attachments() {\\n      var xref = this.xref;\\n      var attachments = null,\\n          nameTreeRef;\\n      var obj = this.catDict.get('Names');\\n      if (obj) {\\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\\n      }\\n      if (nameTreeRef) {\\n        var nameTree = new NameTree(nameTreeRef, xref);\\n        var names = nameTree.getAll();\\n        for (var name in names) {\\n          var fs = new FileSpec(names[name], xref);\\n          if (!attachments) {\\n            attachments = Object.create(null);\\n          }\\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'attachments', attachments);\\n    },\\n    get javaScript() {\\n      var xref = this.xref;\\n      var obj = this.catDict.get('Names');\\n      var javaScript = null;\\n      function appendIfJavaScriptDict(jsDict) {\\n        var type = jsDict.get('S');\\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\\n          return;\\n        }\\n        var js = jsDict.get('JS');\\n        if ((0, _primitives.isStream)(js)) {\\n          js = (0, _util.bytesToString)(js.getBytes());\\n        } else if (!(0, _util.isString)(js)) {\\n          return;\\n        }\\n        if (!javaScript) {\\n          javaScript = [];\\n        }\\n        javaScript.push((0, _util.stringToPDFString)(js));\\n      }\\n      if (obj && obj.has('JavaScript')) {\\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\\n        var names = nameTree.getAll();\\n        for (var name in names) {\\n          var jsDict = names[name];\\n          if ((0, _primitives.isDict)(jsDict)) {\\n            appendIfJavaScriptDict(jsDict);\\n          }\\n        }\\n      }\\n      var openactionDict = this.catDict.get('OpenAction');\\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\\n        var actionType = openactionDict.get('S');\\n        if ((0, _primitives.isName)(actionType, 'Named')) {\\n          var action = openactionDict.get('N');\\n          if ((0, _primitives.isName)(action, 'Print')) {\\n            if (!javaScript) {\\n              javaScript = [];\\n            }\\n            javaScript.push('print({});');\\n          }\\n        } else {\\n          appendIfJavaScriptDict(openactionDict);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\\n    },\\n    cleanup: function Catalog_cleanup() {\\n      var _this = this;\\n\\n      this.pageKidsCountCache.clear();\\n      var promises = [];\\n      this.fontCache.forEach(function (promise) {\\n        promises.push(promise);\\n      });\\n      return Promise.all(promises).then(function (translatedFonts) {\\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\\n          var font = translatedFonts[i].dict;\\n          delete font.translated;\\n        }\\n        _this.fontCache.clear();\\n        _this.builtInCMapCache = Object.create(null);\\n      });\\n    },\\n    getPage: function Catalog_getPage(pageIndex) {\\n      var _this2 = this;\\n\\n      if (!(pageIndex in this.pagePromises)) {\\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\\n          var _ref2 = _slicedToArray(_ref, 2),\\n              dict = _ref2[0],\\n              ref = _ref2[1];\\n\\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\\n        });\\n      }\\n      return this.pagePromises[pageIndex];\\n    },\\n    getPageDict: function Catalog_getPageDict(pageIndex) {\\n      var capability = (0, _util.createPromiseCapability)();\\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\\n      var count,\\n          currentPageIndex = 0;\\n      var xref = this.xref,\\n          pageKidsCountCache = this.pageKidsCountCache;\\n      function next() {\\n        while (nodesToVisit.length) {\\n          var currentNode = nodesToVisit.pop();\\n          if ((0, _primitives.isRef)(currentNode)) {\\n            count = pageKidsCountCache.get(currentNode);\\n            if (count > 0 && currentPageIndex + count < pageIndex) {\\n              currentPageIndex += count;\\n              continue;\\n            }\\n            xref.fetchAsync(currentNode).then(function (obj) {\\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\\n                if (pageIndex === currentPageIndex) {\\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\\n                    pageKidsCountCache.put(currentNode, 1);\\n                  }\\n                  capability.resolve([obj, currentNode]);\\n                } else {\\n                  currentPageIndex++;\\n                  next();\\n                }\\n                return;\\n              }\\n              nodesToVisit.push(obj);\\n              next();\\n            }, capability.reject);\\n            return;\\n          }\\n          if (!(0, _primitives.isDict)(currentNode)) {\\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\\n            return;\\n          }\\n          count = currentNode.get('Count');\\n          var objId = currentNode.objId;\\n          if (objId && !pageKidsCountCache.has(objId)) {\\n            pageKidsCountCache.put(objId, count);\\n          }\\n          if (currentPageIndex + count <= pageIndex) {\\n            currentPageIndex += count;\\n            continue;\\n          }\\n          var kids = currentNode.get('Kids');\\n          if (!Array.isArray(kids)) {\\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\\n            return;\\n          }\\n          for (var last = kids.length - 1; last >= 0; last--) {\\n            nodesToVisit.push(kids[last]);\\n          }\\n        }\\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\\n      }\\n      next();\\n      return capability.promise;\\n    },\\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\\n      var xref = this.xref;\\n      function pagesBeforeRef(kidRef) {\\n        var total = 0;\\n        var parentRef;\\n        return xref.fetchAsync(kidRef).then(function (node) {\\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\\n          }\\n          if (!node) {\\n            return null;\\n          }\\n          if (!(0, _primitives.isDict)(node)) {\\n            throw new _util.FormatError('node must be a Dict.');\\n          }\\n          parentRef = node.getRaw('Parent');\\n          return node.getAsync('Parent');\\n        }).then(function (parent) {\\n          if (!parent) {\\n            return null;\\n          }\\n          if (!(0, _primitives.isDict)(parent)) {\\n            throw new _util.FormatError('parent must be a Dict.');\\n          }\\n          return parent.getAsync('Kids');\\n        }).then(function (kids) {\\n          if (!kids) {\\n            return null;\\n          }\\n          var kidPromises = [];\\n          var found = false;\\n          for (var i = 0; i < kids.length; i++) {\\n            var kid = kids[i];\\n            if (!(0, _primitives.isRef)(kid)) {\\n              throw new _util.FormatError('kid must be a Ref.');\\n            }\\n            if (kid.num === kidRef.num) {\\n              found = true;\\n              break;\\n            }\\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\\n              if (kid.has('Count')) {\\n                var count = kid.get('Count');\\n                total += count;\\n              } else {\\n                total++;\\n              }\\n            }));\\n          }\\n          if (!found) {\\n            throw new _util.FormatError('kid ref not found in parents kids');\\n          }\\n          return Promise.all(kidPromises).then(function () {\\n            return [total, parentRef];\\n          });\\n        });\\n      }\\n      var total = 0;\\n      function next(ref) {\\n        return pagesBeforeRef(ref).then(function (args) {\\n          if (!args) {\\n            return total;\\n          }\\n          var count = args[0];\\n          var parentRef = args[1];\\n          total += count;\\n          return next(parentRef);\\n        });\\n      }\\n      return next(pageRef);\\n    }\\n  };\\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\\n    function addDefaultProtocolToUrl(url) {\\n      if (url.indexOf('www.') === 0) {\\n        return 'http://' + url;\\n      }\\n      return url;\\n    }\\n    function tryConvertUrlEncoding(url) {\\n      try {\\n        return (0, _util.stringToUTF8String)(url);\\n      } catch (e) {\\n        return url;\\n      }\\n    }\\n    var destDict = params.destDict;\\n    if (!(0, _primitives.isDict)(destDict)) {\\n      (0, _util.warn)('parseDestDictionary: \\\"destDict\\\" must be a dictionary.');\\n      return;\\n    }\\n    var resultObj = params.resultObj;\\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\\n      (0, _util.warn)('parseDestDictionary: \\\"resultObj\\\" must be an object.');\\n      return;\\n    }\\n    var docBaseUrl = params.docBaseUrl || null;\\n    var action = destDict.get('A'),\\n        url,\\n        dest;\\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\\n      action = destDict.get('Dest');\\n    }\\n    if ((0, _primitives.isDict)(action)) {\\n      var actionType = action.get('S');\\n      if (!(0, _primitives.isName)(actionType)) {\\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\\n        return;\\n      }\\n      var actionName = actionType.name;\\n      switch (actionName) {\\n        case 'URI':\\n          url = action.get('URI');\\n          if ((0, _primitives.isName)(url)) {\\n            url = '/' + url.name;\\n          } else if ((0, _util.isString)(url)) {\\n            url = addDefaultProtocolToUrl(url);\\n          }\\n          break;\\n        case 'GoTo':\\n          dest = action.get('D');\\n          break;\\n        case 'Launch':\\n        case 'GoToR':\\n          var urlDict = action.get('F');\\n          if ((0, _primitives.isDict)(urlDict)) {\\n            url = urlDict.get('F') || null;\\n          } else if ((0, _util.isString)(urlDict)) {\\n            url = urlDict;\\n          }\\n          var remoteDest = action.get('D');\\n          if (remoteDest) {\\n            if ((0, _primitives.isName)(remoteDest)) {\\n              remoteDest = remoteDest.name;\\n            }\\n            if ((0, _util.isString)(url)) {\\n              var baseUrl = url.split('#')[0];\\n              if ((0, _util.isString)(remoteDest)) {\\n                url = baseUrl + '#' + remoteDest;\\n              } else if (Array.isArray(remoteDest)) {\\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\\n              }\\n            }\\n          }\\n          var newWindow = action.get('NewWindow');\\n          if ((0, _util.isBool)(newWindow)) {\\n            resultObj.newWindow = newWindow;\\n          }\\n          break;\\n        case 'Named':\\n          var namedAction = action.get('N');\\n          if ((0, _primitives.isName)(namedAction)) {\\n            resultObj.action = namedAction.name;\\n          }\\n          break;\\n        case 'JavaScript':\\n          var jsAction = action.get('JS'),\\n              js;\\n          if ((0, _primitives.isStream)(jsAction)) {\\n            js = (0, _util.bytesToString)(jsAction.getBytes());\\n          } else if ((0, _util.isString)(jsAction)) {\\n            js = jsAction;\\n          }\\n          if (js) {\\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\\n            var regex = new RegExp('^\\\\\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\\\\\.') + ')\\\\\\\\((?:\\\\'|\\\\\\\")([^\\\\'\\\\\\\"]*)(?:\\\\'|\\\\\\\")(?:,\\\\\\\\s*(\\\\\\\\w+)\\\\\\\\)|\\\\\\\\))', 'i');\\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\\n            if (jsUrl && jsUrl[2]) {\\n              url = jsUrl[2];\\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\\n                resultObj.newWindow = true;\\n              }\\n              break;\\n            }\\n          }\\n        default:\\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \\\"' + actionName + '\\\".');\\n          break;\\n      }\\n    } else if (destDict.has('Dest')) {\\n      dest = destDict.get('Dest');\\n    }\\n    if ((0, _util.isString)(url)) {\\n      url = tryConvertUrlEncoding(url);\\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\\n      if (absoluteUrl) {\\n        resultObj.url = absoluteUrl.href;\\n      }\\n      resultObj.unsafeUrl = url;\\n    }\\n    if (dest) {\\n      if ((0, _primitives.isName)(dest)) {\\n        dest = dest.name;\\n      }\\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\\n        resultObj.dest = dest;\\n      }\\n    }\\n  };\\n  return Catalog;\\n}();\\nvar XRef = function XRefClosure() {\\n  function XRef(stream, pdfManager) {\\n    this.stream = stream;\\n    this.pdfManager = pdfManager;\\n    this.entries = [];\\n    this.xrefstms = Object.create(null);\\n    this.cache = [];\\n    this.stats = {\\n      streamTypes: [],\\n      fontTypes: []\\n    };\\n  }\\n  XRef.prototype = {\\n    setStartXRef: function XRef_setStartXRef(startXRef) {\\n      this.startXRefQueue = [startXRef];\\n    },\\n    parse: function XRef_parse(recoveryMode) {\\n      var trailerDict;\\n      if (!recoveryMode) {\\n        trailerDict = this.readXRef();\\n      } else {\\n        (0, _util.warn)('Indexing all PDF objects');\\n        trailerDict = this.indexObjects();\\n      }\\n      trailerDict.assignXref(this);\\n      this.trailer = trailerDict;\\n      var encrypt = trailerDict.get('Encrypt');\\n      if ((0, _primitives.isDict)(encrypt)) {\\n        var ids = trailerDict.get('ID');\\n        var fileId = ids && ids.length ? ids[0] : '';\\n        encrypt.suppressEncryption = true;\\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\\n      }\\n      if (!(this.root = trailerDict.get('Root'))) {\\n        throw new _util.FormatError('Invalid root reference');\\n      }\\n    },\\n    processXRefTable: function XRef_processXRefTable(parser) {\\n      if (!('tableState' in this)) {\\n        this.tableState = {\\n          entryNum: 0,\\n          streamPos: parser.lexer.stream.pos,\\n          parserBuf1: parser.buf1,\\n          parserBuf2: parser.buf2\\n        };\\n      }\\n      var obj = this.readXRefTable(parser);\\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\\n      }\\n      var dict = parser.getObj();\\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\\n        dict = dict.dict;\\n      }\\n      if (!(0, _primitives.isDict)(dict)) {\\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\\n      }\\n      delete this.tableState;\\n      return dict;\\n    },\\n    readXRefTable: function XRef_readXRefTable(parser) {\\n      var stream = parser.lexer.stream;\\n      var tableState = this.tableState;\\n      stream.pos = tableState.streamPos;\\n      parser.buf1 = tableState.parserBuf1;\\n      parser.buf2 = tableState.parserBuf2;\\n      var obj;\\n      while (true) {\\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\\n            break;\\n          }\\n          tableState.firstEntryNum = obj;\\n          tableState.entryCount = parser.getObj();\\n        }\\n        var first = tableState.firstEntryNum;\\n        var count = tableState.entryCount;\\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\\n        }\\n        for (var i = tableState.entryNum; i < count; i++) {\\n          tableState.streamPos = stream.pos;\\n          tableState.entryNum = i;\\n          tableState.parserBuf1 = parser.buf1;\\n          tableState.parserBuf2 = parser.buf2;\\n          var entry = {};\\n          entry.offset = parser.getObj();\\n          entry.gen = parser.getObj();\\n          var type = parser.getObj();\\n          if ((0, _primitives.isCmd)(type, 'f')) {\\n            entry.free = true;\\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\\n            entry.uncompressed = true;\\n          }\\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\\n          }\\n          if (i === 0 && entry.free && first === 1) {\\n            first = 0;\\n          }\\n          if (!this.entries[i + first]) {\\n            this.entries[i + first] = entry;\\n          }\\n        }\\n        tableState.entryNum = 0;\\n        tableState.streamPos = stream.pos;\\n        tableState.parserBuf1 = parser.buf1;\\n        tableState.parserBuf2 = parser.buf2;\\n        delete tableState.firstEntryNum;\\n        delete tableState.entryCount;\\n      }\\n      if (this.entries[0] && !this.entries[0].free) {\\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\\n      }\\n      return obj;\\n    },\\n    processXRefStream: function XRef_processXRefStream(stream) {\\n      if (!('streamState' in this)) {\\n        var streamParameters = stream.dict;\\n        var byteWidths = streamParameters.get('W');\\n        var range = streamParameters.get('Index');\\n        if (!range) {\\n          range = [0, streamParameters.get('Size')];\\n        }\\n        this.streamState = {\\n          entryRanges: range,\\n          byteWidths: byteWidths,\\n          entryNum: 0,\\n          streamPos: stream.pos\\n        };\\n      }\\n      this.readXRefStream(stream);\\n      delete this.streamState;\\n      return stream.dict;\\n    },\\n    readXRefStream: function XRef_readXRefStream(stream) {\\n      var i, j;\\n      var streamState = this.streamState;\\n      stream.pos = streamState.streamPos;\\n      var byteWidths = streamState.byteWidths;\\n      var typeFieldWidth = byteWidths[0];\\n      var offsetFieldWidth = byteWidths[1];\\n      var generationFieldWidth = byteWidths[2];\\n      var entryRanges = streamState.entryRanges;\\n      while (entryRanges.length > 0) {\\n        var first = entryRanges[0];\\n        var n = entryRanges[1];\\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\\n        }\\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\\n        }\\n        for (i = streamState.entryNum; i < n; ++i) {\\n          streamState.entryNum = i;\\n          streamState.streamPos = stream.pos;\\n          var type = 0,\\n              offset = 0,\\n              generation = 0;\\n          for (j = 0; j < typeFieldWidth; ++j) {\\n            type = type << 8 | stream.getByte();\\n          }\\n          if (typeFieldWidth === 0) {\\n            type = 1;\\n          }\\n          for (j = 0; j < offsetFieldWidth; ++j) {\\n            offset = offset << 8 | stream.getByte();\\n          }\\n          for (j = 0; j < generationFieldWidth; ++j) {\\n            generation = generation << 8 | stream.getByte();\\n          }\\n          var entry = {};\\n          entry.offset = offset;\\n          entry.gen = generation;\\n          switch (type) {\\n            case 0:\\n              entry.free = true;\\n              break;\\n            case 1:\\n              entry.uncompressed = true;\\n              break;\\n            case 2:\\n              break;\\n            default:\\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\\n          }\\n          if (!this.entries[first + i]) {\\n            this.entries[first + i] = entry;\\n          }\\n        }\\n        streamState.entryNum = 0;\\n        streamState.streamPos = stream.pos;\\n        entryRanges.splice(0, 2);\\n      }\\n    },\\n    indexObjects: function XRef_indexObjects() {\\n      var TAB = 0x9,\\n          LF = 0xA,\\n          CR = 0xD,\\n          SPACE = 0x20;\\n      var PERCENT = 0x25,\\n          LT = 0x3C;\\n      function readToken(data, offset) {\\n        var token = '',\\n            ch = data[offset];\\n        while (ch !== LF && ch !== CR && ch !== LT) {\\n          if (++offset >= data.length) {\\n            break;\\n          }\\n          token += String.fromCharCode(ch);\\n          ch = data[offset];\\n        }\\n        return token;\\n      }\\n      function skipUntil(data, offset, what) {\\n        var length = what.length,\\n            dataLength = data.length;\\n        var skipped = 0;\\n        while (offset < dataLength) {\\n          var i = 0;\\n          while (i < length && data[offset + i] === what[i]) {\\n            ++i;\\n          }\\n          if (i >= length) {\\n            break;\\n          }\\n          offset++;\\n          skipped++;\\n        }\\n        return skipped;\\n      }\\n      var objRegExp = /^(\\\\d+)\\\\s+(\\\\d+)\\\\s+obj\\\\b/;\\n      var endobjRegExp = /\\\\bendobj[\\\\b\\\\s]$/;\\n      var nestedObjRegExp = /\\\\s+(\\\\d+\\\\s+\\\\d+\\\\s+obj[\\\\b\\\\s])$/;\\n      var CHECK_CONTENT_LENGTH = 25;\\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\\n      var objBytes = new Uint8Array([111, 98, 106]);\\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\\n      this.entries.length = 0;\\n      var stream = this.stream;\\n      stream.pos = 0;\\n      var buffer = stream.getBytes();\\n      var position = stream.start,\\n          length = buffer.length;\\n      var trailers = [],\\n          xrefStms = [];\\n      while (position < length) {\\n        var ch = buffer[position];\\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\\n          ++position;\\n          continue;\\n        }\\n        if (ch === PERCENT) {\\n          do {\\n            ++position;\\n            if (position >= length) {\\n              break;\\n            }\\n            ch = buffer[position];\\n          } while (ch !== LF && ch !== CR);\\n          continue;\\n        }\\n        var token = readToken(buffer, position);\\n        var m;\\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\\\s/.test(token[4]))) {\\n          position += skipUntil(buffer, position, trailerBytes);\\n          trailers.push(position);\\n          position += skipUntil(buffer, position, startxrefBytes);\\n        } else if (m = objRegExp.exec(token)) {\\n          if (typeof this.entries[m[1]] === 'undefined') {\\n            this.entries[m[1]] = {\\n              offset: position - stream.start,\\n              gen: m[2] | 0,\\n              uncompressed: true\\n            };\\n          }\\n          var contentLength = void 0,\\n              startPos = position + token.length;\\n          while (startPos < buffer.length) {\\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\\n            contentLength = endPos - position;\\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\\n            if (endobjRegExp.test(tokenStr)) {\\n              break;\\n            } else {\\n              var objToken = nestedObjRegExp.exec(tokenStr);\\n              if (objToken && objToken[1]) {\\n                (0, _util.warn)('indexObjects: Found new \\\"obj\\\" inside of another \\\"obj\\\", ' + 'caused by missing \\\"endobj\\\" -- trying to recover.');\\n                contentLength -= objToken[1].length;\\n                break;\\n              }\\n            }\\n            startPos += contentLength;\\n          }\\n          var content = buffer.subarray(position, position + contentLength);\\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\\n            xrefStms.push(position - stream.start);\\n            this.xrefstms[position - stream.start] = 1;\\n          }\\n          position += contentLength;\\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\\\s/.test(token[7]))) {\\n          trailers.push(position);\\n          position += skipUntil(buffer, position, startxrefBytes);\\n        } else {\\n          position += token.length + 1;\\n        }\\n      }\\n      var i, ii;\\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\\n        this.startXRefQueue.push(xrefStms[i]);\\n        this.readXRef(true);\\n      }\\n      var dict;\\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\\n        stream.pos = trailers[i];\\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\\n        var obj = parser.getObj();\\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\n          continue;\\n        }\\n        dict = parser.getObj();\\n        if (!(0, _primitives.isDict)(dict)) {\\n          continue;\\n        }\\n        if (dict.has('ID')) {\\n          return dict;\\n        }\\n      }\\n      if (dict) {\\n        return dict;\\n      }\\n      throw new _util.InvalidPDFException('Invalid PDF structure');\\n    },\\n    readXRef: function XRef_readXRef(recoveryMode) {\\n      var stream = this.stream;\\n      var startXRefParsedCache = Object.create(null);\\n      try {\\n        while (this.startXRefQueue.length) {\\n          var startXRef = this.startXRefQueue[0];\\n          if (startXRefParsedCache[startXRef]) {\\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\\n            this.startXRefQueue.shift();\\n            continue;\\n          }\\n          startXRefParsedCache[startXRef] = true;\\n          stream.pos = startXRef + stream.start;\\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\n          var obj = parser.getObj();\\n          var dict;\\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\\n            dict = this.processXRefTable(parser);\\n            if (!this.topDict) {\\n              this.topDict = dict;\\n            }\\n            obj = dict.get('XRefStm');\\n            if (Number.isInteger(obj)) {\\n              var pos = obj;\\n              if (!(pos in this.xrefstms)) {\\n                this.xrefstms[pos] = 1;\\n                this.startXRefQueue.push(pos);\\n              }\\n            }\\n          } else if (Number.isInteger(obj)) {\\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\\n              throw new _util.FormatError('Invalid XRef stream');\\n            }\\n            dict = this.processXRefStream(obj);\\n            if (!this.topDict) {\\n              this.topDict = dict;\\n            }\\n            if (!dict) {\\n              throw new _util.FormatError('Failed to read XRef stream');\\n            }\\n          } else {\\n            throw new _util.FormatError('Invalid XRef stream header');\\n          }\\n          obj = dict.get('Prev');\\n          if (Number.isInteger(obj)) {\\n            this.startXRefQueue.push(obj);\\n          } else if ((0, _primitives.isRef)(obj)) {\\n            this.startXRefQueue.push(obj.num);\\n          }\\n          this.startXRefQueue.shift();\\n        }\\n        return this.topDict;\\n      } catch (e) {\\n        if (e instanceof _util.MissingDataException) {\\n          throw e;\\n        }\\n        (0, _util.info)('(while reading XRef): ' + e);\\n      }\\n      if (recoveryMode) {\\n        return;\\n      }\\n      throw new _util.XRefParseException();\\n    },\\n    getEntry: function XRef_getEntry(i) {\\n      var xrefEntry = this.entries[i];\\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\\n        return xrefEntry;\\n      }\\n      return null;\\n    },\\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\\n      if (!(0, _primitives.isRef)(obj)) {\\n        return obj;\\n      }\\n      return this.fetch(obj, suppressEncryption);\\n    },\\n    fetch: function XRef_fetch(ref, suppressEncryption) {\\n      if (!(0, _primitives.isRef)(ref)) {\\n        throw new Error('ref object is not a reference');\\n      }\\n      var num = ref.num;\\n      if (num in this.cache) {\\n        var cacheEntry = this.cache[num];\\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\\n          cacheEntry.objId = ref.toString();\\n        }\\n        return cacheEntry;\\n      }\\n      var xrefEntry = this.getEntry(num);\\n      if (xrefEntry === null) {\\n        return this.cache[num] = null;\\n      }\\n      if (xrefEntry.uncompressed) {\\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\\n      } else {\\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\\n      }\\n      if ((0, _primitives.isDict)(xrefEntry)) {\\n        xrefEntry.objId = ref.toString();\\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\\n        xrefEntry.dict.objId = ref.toString();\\n      }\\n      return xrefEntry;\\n    },\\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\\n      var gen = ref.gen;\\n      var num = ref.num;\\n      if (xrefEntry.gen !== gen) {\\n        throw new _util.FormatError('inconsistent generation in XRef');\\n      }\\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\n      var obj1 = parser.getObj();\\n      var obj2 = parser.getObj();\\n      var obj3 = parser.getObj();\\n      if (!Number.isInteger(obj1)) {\\n        obj1 = parseInt(obj1, 10);\\n      }\\n      if (!Number.isInteger(obj2)) {\\n        obj2 = parseInt(obj2, 10);\\n      }\\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\\n        throw new _util.FormatError('bad XRef entry');\\n      }\\n      if (obj3.cmd !== 'obj') {\\n        if (obj3.cmd.indexOf('obj') === 0) {\\n          num = parseInt(obj3.cmd.substring(3), 10);\\n          if (!Number.isNaN(num)) {\\n            return num;\\n          }\\n        }\\n        throw new _util.FormatError('bad XRef entry');\\n      }\\n      if (this.encrypt && !suppressEncryption) {\\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\\n      } else {\\n        xrefEntry = parser.getObj();\\n      }\\n      if (!(0, _primitives.isStream)(xrefEntry)) {\\n        this.cache[num] = xrefEntry;\\n      }\\n      return xrefEntry;\\n    },\\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\\n      var tableOffset = xrefEntry.offset;\\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\\n      if (!(0, _primitives.isStream)(stream)) {\\n        throw new _util.FormatError('bad ObjStm stream');\\n      }\\n      var first = stream.dict.get('First');\\n      var n = stream.dict.get('N');\\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\\n      }\\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\\n      parser.allowStreams = true;\\n      var i,\\n          entries = [],\\n          num,\\n          nums = [];\\n      for (i = 0; i < n; ++i) {\\n        num = parser.getObj();\\n        if (!Number.isInteger(num)) {\\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\\n        }\\n        nums.push(num);\\n        var offset = parser.getObj();\\n        if (!Number.isInteger(offset)) {\\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\\n        }\\n      }\\n      for (i = 0; i < n; ++i) {\\n        entries.push(parser.getObj());\\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\\n          parser.shift();\\n        }\\n        num = nums[i];\\n        var entry = this.entries[num];\\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\\n          this.cache[num] = entries[i];\\n        }\\n      }\\n      xrefEntry = entries[xrefEntry.gen];\\n      if (xrefEntry === undefined) {\\n        throw new _util.FormatError('bad XRef entry for compressed object');\\n      }\\n      return xrefEntry;\\n    },\\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\\n      if (!(0, _primitives.isRef)(obj)) {\\n        return Promise.resolve(obj);\\n      }\\n      return this.fetchAsync(obj, suppressEncryption);\\n    },\\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\\n      var streamManager = this.stream.manager;\\n      var xref = this;\\n      return new Promise(function tryFetch(resolve, reject) {\\n        try {\\n          resolve(xref.fetch(ref, suppressEncryption));\\n        } catch (e) {\\n          if (e instanceof _util.MissingDataException) {\\n            streamManager.requestRange(e.begin, e.end).then(function () {\\n              tryFetch(resolve, reject);\\n            }, reject);\\n            return;\\n          }\\n          reject(e);\\n        }\\n      });\\n    },\\n    getCatalogObj: function XRef_getCatalogObj() {\\n      return this.root;\\n    }\\n  };\\n  return XRef;\\n}();\\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\\n  function NameOrNumberTree(root, xref) {\\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\\n  }\\n  NameOrNumberTree.prototype = {\\n    getAll: function NameOrNumberTree_getAll() {\\n      var dict = Object.create(null);\\n      if (!this.root) {\\n        return dict;\\n      }\\n      var xref = this.xref;\\n      var processed = new _primitives.RefSet();\\n      processed.put(this.root);\\n      var queue = [this.root];\\n      while (queue.length > 0) {\\n        var i, n;\\n        var obj = xref.fetchIfRef(queue.shift());\\n        if (!(0, _primitives.isDict)(obj)) {\\n          continue;\\n        }\\n        if (obj.has('Kids')) {\\n          var kids = obj.get('Kids');\\n          for (i = 0, n = kids.length; i < n; i++) {\\n            var kid = kids[i];\\n            if (processed.has(kid)) {\\n              throw new _util.FormatError('Duplicate entry in \\\"' + this._type + '\\\" tree.');\\n            }\\n            queue.push(kid);\\n            processed.put(kid);\\n          }\\n          continue;\\n        }\\n        var entries = obj.get(this._type);\\n        if (Array.isArray(entries)) {\\n          for (i = 0, n = entries.length; i < n; i += 2) {\\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\\n          }\\n        }\\n      }\\n      return dict;\\n    },\\n    get: function NameOrNumberTree_get(key) {\\n      if (!this.root) {\\n        return null;\\n      }\\n      var xref = this.xref;\\n      var kidsOrEntries = xref.fetchIfRef(this.root);\\n      var loopCount = 0;\\n      var MAX_LEVELS = 10;\\n      var l, r, m;\\n      while (kidsOrEntries.has('Kids')) {\\n        if (++loopCount > MAX_LEVELS) {\\n          (0, _util.warn)('Search depth limit reached for \\\"' + this._type + '\\\" tree.');\\n          return null;\\n        }\\n        var kids = kidsOrEntries.get('Kids');\\n        if (!Array.isArray(kids)) {\\n          return null;\\n        }\\n        l = 0;\\n        r = kids.length - 1;\\n        while (l <= r) {\\n          m = l + r >> 1;\\n          var kid = xref.fetchIfRef(kids[m]);\\n          var limits = kid.get('Limits');\\n          if (key < xref.fetchIfRef(limits[0])) {\\n            r = m - 1;\\n          } else if (key > xref.fetchIfRef(limits[1])) {\\n            l = m + 1;\\n          } else {\\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\\n            break;\\n          }\\n        }\\n        if (l > r) {\\n          return null;\\n        }\\n      }\\n      var entries = kidsOrEntries.get(this._type);\\n      if (Array.isArray(entries)) {\\n        l = 0;\\n        r = entries.length - 2;\\n        while (l <= r) {\\n          m = l + r & ~1;\\n          var currentKey = xref.fetchIfRef(entries[m]);\\n          if (key < currentKey) {\\n            r = m - 2;\\n          } else if (key > currentKey) {\\n            l = m + 2;\\n          } else {\\n            return xref.fetchIfRef(entries[m + 1]);\\n          }\\n        }\\n      }\\n      return null;\\n    }\\n  };\\n  return NameOrNumberTree;\\n}();\\nvar NameTree = function NameTreeClosure() {\\n  function NameTree(root, xref) {\\n    this.root = root;\\n    this.xref = xref;\\n    this._type = 'Names';\\n  }\\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\\n  return NameTree;\\n}();\\nvar NumberTree = function NumberTreeClosure() {\\n  function NumberTree(root, xref) {\\n    this.root = root;\\n    this.xref = xref;\\n    this._type = 'Nums';\\n  }\\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\\n  return NumberTree;\\n}();\\nvar FileSpec = function FileSpecClosure() {\\n  function FileSpec(root, xref) {\\n    if (!root || !(0, _primitives.isDict)(root)) {\\n      return;\\n    }\\n    this.xref = xref;\\n    this.root = root;\\n    if (root.has('FS')) {\\n      this.fs = root.get('FS');\\n    }\\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\\n    if (root.has('RF')) {\\n      (0, _util.warn)('Related file specifications are not supported');\\n    }\\n    this.contentAvailable = true;\\n    if (!root.has('EF')) {\\n      this.contentAvailable = false;\\n      (0, _util.warn)('Non-embedded file specifications are not supported');\\n    }\\n  }\\n  function pickPlatformItem(dict) {\\n    if (dict.has('UF')) {\\n      return dict.get('UF');\\n    } else if (dict.has('F')) {\\n      return dict.get('F');\\n    } else if (dict.has('Unix')) {\\n      return dict.get('Unix');\\n    } else if (dict.has('Mac')) {\\n      return dict.get('Mac');\\n    } else if (dict.has('DOS')) {\\n      return dict.get('DOS');\\n    }\\n    return null;\\n  }\\n  FileSpec.prototype = {\\n    get filename() {\\n      if (!this._filename && this.root) {\\n        var filename = pickPlatformItem(this.root) || 'unnamed';\\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\\\\\\\\\/g, '\\\\\\\\').replace(/\\\\\\\\\\\\//g, '/').replace(/\\\\\\\\/g, '/');\\n      }\\n      return this._filename;\\n    },\\n    get content() {\\n      if (!this.contentAvailable) {\\n        return null;\\n      }\\n      if (!this.contentRef && this.root) {\\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\\n      }\\n      var content = null;\\n      if (this.contentRef) {\\n        var xref = this.xref;\\n        var fileObj = xref.fetchIfRef(this.contentRef);\\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\\n          content = fileObj.getBytes();\\n        } else {\\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\\n        }\\n      } else {\\n        (0, _util.warn)('Embedded file specification does not have a content');\\n      }\\n      return content;\\n    },\\n    get serializable() {\\n      return {\\n        filename: this.filename,\\n        content: this.content\\n      };\\n    }\\n  };\\n  return FileSpec;\\n}();\\nvar ObjectLoader = function () {\\n  function mayHaveChildren(value) {\\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\\n  }\\n  function addChildren(node, nodesToVisit) {\\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\\n      var dictKeys = dict.getKeys();\\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\\n        var rawValue = dict.getRaw(dictKeys[i]);\\n        if (mayHaveChildren(rawValue)) {\\n          nodesToVisit.push(rawValue);\\n        }\\n      }\\n    } else if (Array.isArray(node)) {\\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\\n        var value = node[_i];\\n        if (mayHaveChildren(value)) {\\n          nodesToVisit.push(value);\\n        }\\n      }\\n    }\\n  }\\n  function ObjectLoader(dict, keys, xref) {\\n    this.dict = dict;\\n    this.keys = keys;\\n    this.xref = xref;\\n    this.refSet = null;\\n    this.capability = null;\\n  }\\n  ObjectLoader.prototype = {\\n    load: function load() {\\n      this.capability = (0, _util.createPromiseCapability)();\\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\\n        this.capability.resolve();\\n        return this.capability.promise;\\n      }\\n      var keys = this.keys,\\n          dict = this.dict;\\n\\n      this.refSet = new _primitives.RefSet();\\n      var nodesToVisit = [];\\n      for (var i = 0, ii = keys.length; i < ii; i++) {\\n        var rawValue = dict.getRaw(keys[i]);\\n        if (rawValue !== undefined) {\\n          nodesToVisit.push(rawValue);\\n        }\\n      }\\n      this._walk(nodesToVisit);\\n      return this.capability.promise;\\n    },\\n    _walk: function _walk(nodesToVisit) {\\n      var _this3 = this;\\n\\n      var nodesToRevisit = [];\\n      var pendingRequests = [];\\n      while (nodesToVisit.length) {\\n        var currentNode = nodesToVisit.pop();\\n        if ((0, _primitives.isRef)(currentNode)) {\\n          if (this.refSet.has(currentNode)) {\\n            continue;\\n          }\\n          try {\\n            this.refSet.put(currentNode);\\n            currentNode = this.xref.fetch(currentNode);\\n          } catch (ex) {\\n            if (!(ex instanceof _util.MissingDataException)) {\\n              throw ex;\\n            }\\n            nodesToRevisit.push(currentNode);\\n            pendingRequests.push({\\n              begin: ex.begin,\\n              end: ex.end\\n            });\\n          }\\n        }\\n        if (currentNode && currentNode.getBaseStreams) {\\n          var baseStreams = currentNode.getBaseStreams();\\n          var foundMissingData = false;\\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\\n            var stream = baseStreams[i];\\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\\n              foundMissingData = true;\\n              pendingRequests.push({\\n                begin: stream.start,\\n                end: stream.end\\n              });\\n            }\\n          }\\n          if (foundMissingData) {\\n            nodesToRevisit.push(currentNode);\\n          }\\n        }\\n        addChildren(currentNode, nodesToVisit);\\n      }\\n      if (pendingRequests.length) {\\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\\n            var node = nodesToRevisit[_i2];\\n            if ((0, _primitives.isRef)(node)) {\\n              _this3.refSet.remove(node);\\n            }\\n          }\\n          _this3._walk(nodesToRevisit);\\n        }, this.capability.reject);\\n        return;\\n      }\\n      this.refSet = null;\\n      this.capability.resolve();\\n    }\\n  };\\n  return ObjectLoader;\\n}();\\nexports.Catalog = Catalog;\\nexports.ObjectLoader = ObjectLoader;\\nexports.XRef = XRef;\\nexports.FileSpec = FileSpec;\\n\\n/***/ }),\\n/* 65 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CCITTFaxDecoder = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\\n  var ccittEOL = -2;\\n  var ccittEOF = -1;\\n  var twoDimPass = 0;\\n  var twoDimHoriz = 1;\\n  var twoDimVert0 = 2;\\n  var twoDimVertR1 = 3;\\n  var twoDimVertL1 = 4;\\n  var twoDimVertR2 = 5;\\n  var twoDimVertL2 = 6;\\n  var twoDimVertR3 = 7;\\n  var twoDimVertL3 = 8;\\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\\n  function CCITTFaxDecoder(source) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n    if (!source || typeof source.next !== 'function') {\\n      throw new Error('CCITTFaxDecoder - invalid \\\"source\\\" parameter.');\\n    }\\n    this.source = source;\\n    this.eof = false;\\n    this.encoding = options['K'] || 0;\\n    this.eoline = options['EndOfLine'] || false;\\n    this.byteAlign = options['EncodedByteAlign'] || false;\\n    this.columns = options['Columns'] || 1728;\\n    this.rows = options['Rows'] || 0;\\n    var eoblock = options['EndOfBlock'];\\n    if (eoblock === null || eoblock === undefined) {\\n      eoblock = true;\\n    }\\n    this.eoblock = eoblock;\\n    this.black = options['BlackIs1'] || false;\\n    this.codingLine = new Uint32Array(this.columns + 1);\\n    this.refLine = new Uint32Array(this.columns + 2);\\n    this.codingLine[0] = this.columns;\\n    this.codingPos = 0;\\n    this.row = 0;\\n    this.nextLine2D = this.encoding < 0;\\n    this.inputBits = 0;\\n    this.inputBuf = 0;\\n    this.outputBits = 0;\\n    this.rowsDone = false;\\n    var code1 = void 0;\\n    while ((code1 = this._lookBits(12)) === 0) {\\n      this._eatBits(1);\\n    }\\n    if (code1 === 1) {\\n      this._eatBits(12);\\n    }\\n    if (this.encoding > 0) {\\n      this.nextLine2D = !this._lookBits(1);\\n      this._eatBits(1);\\n    }\\n  }\\n  CCITTFaxDecoder.prototype = {\\n    readNextChar: function readNextChar() {\\n      if (this.eof) {\\n        return -1;\\n      }\\n      var refLine = this.refLine;\\n      var codingLine = this.codingLine;\\n      var columns = this.columns;\\n      var refPos = void 0,\\n          blackPixels = void 0,\\n          bits = void 0,\\n          i = void 0;\\n      if (this.outputBits === 0) {\\n        if (this.rowsDone) {\\n          this.eof = true;\\n        }\\n        if (this.eof) {\\n          return -1;\\n        }\\n        this.err = false;\\n        var code1 = void 0,\\n            code2 = void 0,\\n            code3 = void 0;\\n        if (this.nextLine2D) {\\n          for (i = 0; codingLine[i] < columns; ++i) {\\n            refLine[i] = codingLine[i];\\n          }\\n          refLine[i++] = columns;\\n          refLine[i] = columns;\\n          codingLine[0] = 0;\\n          this.codingPos = 0;\\n          refPos = 0;\\n          blackPixels = 0;\\n          while (codingLine[this.codingPos] < columns) {\\n            code1 = this._getTwoDimCode();\\n            switch (code1) {\\n              case twoDimPass:\\n                this._addPixels(refLine[refPos + 1], blackPixels);\\n                if (refLine[refPos + 1] < columns) {\\n                  refPos += 2;\\n                }\\n                break;\\n              case twoDimHoriz:\\n                code1 = code2 = 0;\\n                if (blackPixels) {\\n                  do {\\n                    code1 += code3 = this._getBlackCode();\\n                  } while (code3 >= 64);\\n                  do {\\n                    code2 += code3 = this._getWhiteCode();\\n                  } while (code3 >= 64);\\n                } else {\\n                  do {\\n                    code1 += code3 = this._getWhiteCode();\\n                  } while (code3 >= 64);\\n                  do {\\n                    code2 += code3 = this._getBlackCode();\\n                  } while (code3 >= 64);\\n                }\\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\n                if (codingLine[this.codingPos] < columns) {\\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\\n                }\\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                  refPos += 2;\\n                }\\n                break;\\n              case twoDimVertR3:\\n                this._addPixels(refLine[refPos] + 3, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertR2:\\n                this._addPixels(refLine[refPos] + 2, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertR1:\\n                this._addPixels(refLine[refPos] + 1, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVert0:\\n                this._addPixels(refLine[refPos], blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  ++refPos;\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertL3:\\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  if (refPos > 0) {\\n                    --refPos;\\n                  } else {\\n                    ++refPos;\\n                  }\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertL2:\\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  if (refPos > 0) {\\n                    --refPos;\\n                  } else {\\n                    ++refPos;\\n                  }\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case twoDimVertL1:\\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\\n                blackPixels ^= 1;\\n                if (codingLine[this.codingPos] < columns) {\\n                  if (refPos > 0) {\\n                    --refPos;\\n                  } else {\\n                    ++refPos;\\n                  }\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                    refPos += 2;\\n                  }\\n                }\\n                break;\\n              case ccittEOF:\\n                this._addPixels(columns, 0);\\n                this.eof = true;\\n                break;\\n              default:\\n                (0, _util.info)('bad 2d code');\\n                this._addPixels(columns, 0);\\n                this.err = true;\\n            }\\n          }\\n        } else {\\n          codingLine[0] = 0;\\n          this.codingPos = 0;\\n          blackPixels = 0;\\n          while (codingLine[this.codingPos] < columns) {\\n            code1 = 0;\\n            if (blackPixels) {\\n              do {\\n                code1 += code3 = this._getBlackCode();\\n              } while (code3 >= 64);\\n            } else {\\n              do {\\n                code1 += code3 = this._getWhiteCode();\\n              } while (code3 >= 64);\\n            }\\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\n            blackPixels ^= 1;\\n          }\\n        }\\n        var gotEOL = false;\\n        if (this.byteAlign) {\\n          this.inputBits &= ~7;\\n        }\\n        if (!this.eoblock && this.row === this.rows - 1) {\\n          this.rowsDone = true;\\n        } else {\\n          code1 = this._lookBits(12);\\n          if (this.eoline) {\\n            while (code1 !== ccittEOF && code1 !== 1) {\\n              this._eatBits(1);\\n              code1 = this._lookBits(12);\\n            }\\n          } else {\\n            while (code1 === 0) {\\n              this._eatBits(1);\\n              code1 = this._lookBits(12);\\n            }\\n          }\\n          if (code1 === 1) {\\n            this._eatBits(12);\\n            gotEOL = true;\\n          } else if (code1 === ccittEOF) {\\n            this.eof = true;\\n          }\\n        }\\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\\n          this.nextLine2D = !this._lookBits(1);\\n          this._eatBits(1);\\n        }\\n        if (this.eoblock && gotEOL && this.byteAlign) {\\n          code1 = this._lookBits(12);\\n          if (code1 === 1) {\\n            this._eatBits(12);\\n            if (this.encoding > 0) {\\n              this._lookBits(1);\\n              this._eatBits(1);\\n            }\\n            if (this.encoding >= 0) {\\n              for (i = 0; i < 4; ++i) {\\n                code1 = this._lookBits(12);\\n                if (code1 !== 1) {\\n                  (0, _util.info)('bad rtc code: ' + code1);\\n                }\\n                this._eatBits(12);\\n                if (this.encoding > 0) {\\n                  this._lookBits(1);\\n                  this._eatBits(1);\\n                }\\n              }\\n            }\\n            this.eof = true;\\n          }\\n        } else if (this.err && this.eoline) {\\n          while (true) {\\n            code1 = this._lookBits(13);\\n            if (code1 === ccittEOF) {\\n              this.eof = true;\\n              return -1;\\n            }\\n            if (code1 >> 1 === 1) {\\n              break;\\n            }\\n            this._eatBits(1);\\n          }\\n          this._eatBits(12);\\n          if (this.encoding > 0) {\\n            this._eatBits(1);\\n            this.nextLine2D = !(code1 & 1);\\n          }\\n        }\\n        if (codingLine[0] > 0) {\\n          this.outputBits = codingLine[this.codingPos = 0];\\n        } else {\\n          this.outputBits = codingLine[this.codingPos = 1];\\n        }\\n        this.row++;\\n      }\\n      var c = void 0;\\n      if (this.outputBits >= 8) {\\n        c = this.codingPos & 1 ? 0 : 0xFF;\\n        this.outputBits -= 8;\\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\\n          this.codingPos++;\\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\n        }\\n      } else {\\n        bits = 8;\\n        c = 0;\\n        do {\\n          if (this.outputBits > bits) {\\n            c <<= bits;\\n            if (!(this.codingPos & 1)) {\\n              c |= 0xFF >> 8 - bits;\\n            }\\n            this.outputBits -= bits;\\n            bits = 0;\\n          } else {\\n            c <<= this.outputBits;\\n            if (!(this.codingPos & 1)) {\\n              c |= 0xFF >> 8 - this.outputBits;\\n            }\\n            bits -= this.outputBits;\\n            this.outputBits = 0;\\n            if (codingLine[this.codingPos] < columns) {\\n              this.codingPos++;\\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\n            } else if (bits > 0) {\\n              c <<= bits;\\n              bits = 0;\\n            }\\n          }\\n        } while (bits);\\n      }\\n      if (this.black) {\\n        c ^= 0xFF;\\n      }\\n      return c;\\n    },\\n    _addPixels: function _addPixels(a1, blackPixels) {\\n      var codingLine = this.codingLine;\\n      var codingPos = this.codingPos;\\n      if (a1 > codingLine[codingPos]) {\\n        if (a1 > this.columns) {\\n          (0, _util.info)('row is wrong length');\\n          this.err = true;\\n          a1 = this.columns;\\n        }\\n        if (codingPos & 1 ^ blackPixels) {\\n          ++codingPos;\\n        }\\n        codingLine[codingPos] = a1;\\n      }\\n      this.codingPos = codingPos;\\n    },\\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\\n      var codingLine = this.codingLine;\\n      var codingPos = this.codingPos;\\n      if (a1 > codingLine[codingPos]) {\\n        if (a1 > this.columns) {\\n          (0, _util.info)('row is wrong length');\\n          this.err = true;\\n          a1 = this.columns;\\n        }\\n        if (codingPos & 1 ^ blackPixels) {\\n          ++codingPos;\\n        }\\n        codingLine[codingPos] = a1;\\n      } else if (a1 < codingLine[codingPos]) {\\n        if (a1 < 0) {\\n          (0, _util.info)('invalid code');\\n          this.err = true;\\n          a1 = 0;\\n        }\\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\\n          --codingPos;\\n        }\\n        codingLine[codingPos] = a1;\\n      }\\n      this.codingPos = codingPos;\\n    },\\n    _findTableCode: function _findTableCode(start, end, table, limit) {\\n      var limitValue = limit || 0;\\n      for (var i = start; i <= end; ++i) {\\n        var code = this._lookBits(i);\\n        if (code === ccittEOF) {\\n          return [true, 1, false];\\n        }\\n        if (i < end) {\\n          code <<= end - i;\\n        }\\n        if (!limitValue || code >= limitValue) {\\n          var p = table[code - limitValue];\\n          if (p[0] === i) {\\n            this._eatBits(i);\\n            return [true, p[1], true];\\n          }\\n        }\\n      }\\n      return [false, 0, false];\\n    },\\n    _getTwoDimCode: function _getTwoDimCode() {\\n      var code = 0;\\n      var p = void 0;\\n      if (this.eoblock) {\\n        code = this._lookBits(7);\\n        p = twoDimTable[code];\\n        if (p && p[0] > 0) {\\n          this._eatBits(p[0]);\\n          return p[1];\\n        }\\n      } else {\\n        var result = this._findTableCode(1, 7, twoDimTable);\\n        if (result[0] && result[2]) {\\n          return result[1];\\n        }\\n      }\\n      (0, _util.info)('Bad two dim code');\\n      return ccittEOF;\\n    },\\n    _getWhiteCode: function _getWhiteCode() {\\n      var code = 0;\\n      var p = void 0;\\n      if (this.eoblock) {\\n        code = this._lookBits(12);\\n        if (code === ccittEOF) {\\n          return 1;\\n        }\\n        if (code >> 5 === 0) {\\n          p = whiteTable1[code];\\n        } else {\\n          p = whiteTable2[code >> 3];\\n        }\\n        if (p[0] > 0) {\\n          this._eatBits(p[0]);\\n          return p[1];\\n        }\\n      } else {\\n        var result = this._findTableCode(1, 9, whiteTable2);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n        result = this._findTableCode(11, 12, whiteTable1);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n      }\\n      (0, _util.info)('bad white code');\\n      this._eatBits(1);\\n      return 1;\\n    },\\n    _getBlackCode: function _getBlackCode() {\\n      var code = void 0,\\n          p = void 0;\\n      if (this.eoblock) {\\n        code = this._lookBits(13);\\n        if (code === ccittEOF) {\\n          return 1;\\n        }\\n        if (code >> 7 === 0) {\\n          p = blackTable1[code];\\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\\n          p = blackTable2[(code >> 1) - 64];\\n        } else {\\n          p = blackTable3[code >> 7];\\n        }\\n        if (p[0] > 0) {\\n          this._eatBits(p[0]);\\n          return p[1];\\n        }\\n      } else {\\n        var result = this._findTableCode(2, 6, blackTable3);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n        result = this._findTableCode(7, 12, blackTable2, 64);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n        result = this._findTableCode(10, 13, blackTable1);\\n        if (result[0]) {\\n          return result[1];\\n        }\\n      }\\n      (0, _util.info)('bad black code');\\n      this._eatBits(1);\\n      return 1;\\n    },\\n    _lookBits: function _lookBits(n) {\\n      var c = void 0;\\n      while (this.inputBits < n) {\\n        if ((c = this.source.next()) === -1) {\\n          if (this.inputBits === 0) {\\n            return ccittEOF;\\n          }\\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\\n        }\\n        this.inputBuf = this.inputBuf << 8 | c;\\n        this.inputBits += 8;\\n      }\\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\\n    },\\n    _eatBits: function _eatBits(n) {\\n      if ((this.inputBits -= n) < 0) {\\n        this.inputBits = 0;\\n      }\\n    }\\n  };\\n  return CCITTFaxDecoder;\\n}();\\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\\n\\n/***/ }),\\n/* 66 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\\n  var QeTable = [{\\n    qe: 0x5601,\\n    nmps: 1,\\n    nlps: 1,\\n    switchFlag: 1\\n  }, {\\n    qe: 0x3401,\\n    nmps: 2,\\n    nlps: 6,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1801,\\n    nmps: 3,\\n    nlps: 9,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0AC1,\\n    nmps: 4,\\n    nlps: 12,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0521,\\n    nmps: 5,\\n    nlps: 29,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0221,\\n    nmps: 38,\\n    nlps: 33,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5601,\\n    nmps: 7,\\n    nlps: 6,\\n    switchFlag: 1\\n  }, {\\n    qe: 0x5401,\\n    nmps: 8,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x4801,\\n    nmps: 9,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3801,\\n    nmps: 10,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3001,\\n    nmps: 11,\\n    nlps: 17,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2401,\\n    nmps: 12,\\n    nlps: 18,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1C01,\\n    nmps: 13,\\n    nlps: 20,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1601,\\n    nmps: 29,\\n    nlps: 21,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5601,\\n    nmps: 15,\\n    nlps: 14,\\n    switchFlag: 1\\n  }, {\\n    qe: 0x5401,\\n    nmps: 16,\\n    nlps: 14,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5101,\\n    nmps: 17,\\n    nlps: 15,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x4801,\\n    nmps: 18,\\n    nlps: 16,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3801,\\n    nmps: 19,\\n    nlps: 17,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3401,\\n    nmps: 20,\\n    nlps: 18,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x3001,\\n    nmps: 21,\\n    nlps: 19,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2801,\\n    nmps: 22,\\n    nlps: 19,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2401,\\n    nmps: 23,\\n    nlps: 20,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x2201,\\n    nmps: 24,\\n    nlps: 21,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1C01,\\n    nmps: 25,\\n    nlps: 22,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1801,\\n    nmps: 26,\\n    nlps: 23,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1601,\\n    nmps: 27,\\n    nlps: 24,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1401,\\n    nmps: 28,\\n    nlps: 25,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1201,\\n    nmps: 29,\\n    nlps: 26,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x1101,\\n    nmps: 30,\\n    nlps: 27,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0AC1,\\n    nmps: 31,\\n    nlps: 28,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x09C1,\\n    nmps: 32,\\n    nlps: 29,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x08A1,\\n    nmps: 33,\\n    nlps: 30,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0521,\\n    nmps: 34,\\n    nlps: 31,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0441,\\n    nmps: 35,\\n    nlps: 32,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x02A1,\\n    nmps: 36,\\n    nlps: 33,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0221,\\n    nmps: 37,\\n    nlps: 34,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0141,\\n    nmps: 38,\\n    nlps: 35,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0111,\\n    nmps: 39,\\n    nlps: 36,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0085,\\n    nmps: 40,\\n    nlps: 37,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0049,\\n    nmps: 41,\\n    nlps: 38,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0025,\\n    nmps: 42,\\n    nlps: 39,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0015,\\n    nmps: 43,\\n    nlps: 40,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0009,\\n    nmps: 44,\\n    nlps: 41,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0005,\\n    nmps: 45,\\n    nlps: 42,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x0001,\\n    nmps: 45,\\n    nlps: 43,\\n    switchFlag: 0\\n  }, {\\n    qe: 0x5601,\\n    nmps: 46,\\n    nlps: 46,\\n    switchFlag: 0\\n  }];\\n  function ArithmeticDecoder(data, start, end) {\\n    this.data = data;\\n    this.bp = start;\\n    this.dataEnd = end;\\n    this.chigh = data[start];\\n    this.clow = 0;\\n    this.byteIn();\\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\\n    this.clow = this.clow << 7 & 0xFFFF;\\n    this.ct -= 7;\\n    this.a = 0x8000;\\n  }\\n  ArithmeticDecoder.prototype = {\\n    byteIn: function ArithmeticDecoder_byteIn() {\\n      var data = this.data;\\n      var bp = this.bp;\\n      if (data[bp] === 0xFF) {\\n        var b1 = data[bp + 1];\\n        if (b1 > 0x8F) {\\n          this.clow += 0xFF00;\\n          this.ct = 8;\\n        } else {\\n          bp++;\\n          this.clow += data[bp] << 9;\\n          this.ct = 7;\\n          this.bp = bp;\\n        }\\n      } else {\\n        bp++;\\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\\n        this.ct = 8;\\n        this.bp = bp;\\n      }\\n      if (this.clow > 0xFFFF) {\\n        this.chigh += this.clow >> 16;\\n        this.clow &= 0xFFFF;\\n      }\\n    },\\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\\n      var cx_index = contexts[pos] >> 1,\\n          cx_mps = contexts[pos] & 1;\\n      var qeTableIcx = QeTable[cx_index];\\n      var qeIcx = qeTableIcx.qe;\\n      var d;\\n      var a = this.a - qeIcx;\\n      if (this.chigh < qeIcx) {\\n        if (a < qeIcx) {\\n          a = qeIcx;\\n          d = cx_mps;\\n          cx_index = qeTableIcx.nmps;\\n        } else {\\n          a = qeIcx;\\n          d = 1 ^ cx_mps;\\n          if (qeTableIcx.switchFlag === 1) {\\n            cx_mps = d;\\n          }\\n          cx_index = qeTableIcx.nlps;\\n        }\\n      } else {\\n        this.chigh -= qeIcx;\\n        if ((a & 0x8000) !== 0) {\\n          this.a = a;\\n          return cx_mps;\\n        }\\n        if (a < qeIcx) {\\n          d = 1 ^ cx_mps;\\n          if (qeTableIcx.switchFlag === 1) {\\n            cx_mps = d;\\n          }\\n          cx_index = qeTableIcx.nlps;\\n        } else {\\n          d = cx_mps;\\n          cx_index = qeTableIcx.nmps;\\n        }\\n      }\\n      do {\\n        if (this.ct === 0) {\\n          this.byteIn();\\n        }\\n        a <<= 1;\\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\\n        this.clow = this.clow << 1 & 0xFFFF;\\n        this.ct--;\\n      } while ((a & 0x8000) === 0);\\n      this.a = a;\\n      contexts[pos] = cx_index << 1 | cx_mps;\\n      return d;\\n    }\\n  };\\n  return ArithmeticDecoder;\\n}();\\nexports.ArithmeticDecoder = ArithmeticDecoder;\\n\\n/***/ }),\\n/* 67 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpxImage = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\\n\\nvar JpxError = function JpxErrorClosure() {\\n  function JpxError(msg) {\\n    this.message = 'JPX error: ' + msg;\\n  }\\n  JpxError.prototype = new Error();\\n  JpxError.prototype.name = 'JpxError';\\n  JpxError.constructor = JpxError;\\n  return JpxError;\\n}();\\nvar JpxImage = function JpxImageClosure() {\\n  var SubbandsGainLog2 = {\\n    'LL': 0,\\n    'LH': 1,\\n    'HL': 1,\\n    'HH': 2\\n  };\\n  function JpxImage() {\\n    this.failOnCorruptedImage = false;\\n  }\\n  JpxImage.prototype = {\\n    parse: function JpxImage_parse(data) {\\n      var head = (0, _util.readUint16)(data, 0);\\n      if (head === 0xFF4F) {\\n        this.parseCodestream(data, 0, data.length);\\n        return;\\n      }\\n      var position = 0,\\n          length = data.length;\\n      while (position < length) {\\n        var headerSize = 8;\\n        var lbox = (0, _util.readUint32)(data, position);\\n        var tbox = (0, _util.readUint32)(data, position + 4);\\n        position += headerSize;\\n        if (lbox === 1) {\\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\\n          position += 8;\\n          headerSize += 8;\\n        }\\n        if (lbox === 0) {\\n          lbox = length - position + headerSize;\\n        }\\n        if (lbox < headerSize) {\\n          throw new JpxError('Invalid box field size');\\n        }\\n        var dataLength = lbox - headerSize;\\n        var jumpDataLength = true;\\n        switch (tbox) {\\n          case 0x6A703268:\\n            jumpDataLength = false;\\n            break;\\n          case 0x636F6C72:\\n            var method = data[position];\\n            if (method === 1) {\\n              var colorspace = (0, _util.readUint32)(data, position + 3);\\n              switch (colorspace) {\\n                case 16:\\n                case 17:\\n                case 18:\\n                  break;\\n                default:\\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\\n                  break;\\n              }\\n            } else if (method === 2) {\\n              (0, _util.info)('ICC profile not supported');\\n            }\\n            break;\\n          case 0x6A703263:\\n            this.parseCodestream(data, position, position + dataLength);\\n            break;\\n          case 0x6A502020:\\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\\n              (0, _util.warn)('Invalid JP2 signature');\\n            }\\n            break;\\n          case 0x6A501A1A:\\n          case 0x66747970:\\n          case 0x72726571:\\n          case 0x72657320:\\n          case 0x69686472:\\n            break;\\n          default:\\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\\n            break;\\n        }\\n        if (jumpDataLength) {\\n          position += dataLength;\\n        }\\n      }\\n    },\\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\\n      var newByte = stream.getByte();\\n      while (newByte >= 0) {\\n        var oldByte = newByte;\\n        newByte = stream.getByte();\\n        var code = oldByte << 8 | newByte;\\n        if (code === 0xFF51) {\\n          stream.skip(4);\\n          var Xsiz = stream.getInt32() >>> 0;\\n          var Ysiz = stream.getInt32() >>> 0;\\n          var XOsiz = stream.getInt32() >>> 0;\\n          var YOsiz = stream.getInt32() >>> 0;\\n          stream.skip(16);\\n          var Csiz = stream.getUint16();\\n          this.width = Xsiz - XOsiz;\\n          this.height = Ysiz - YOsiz;\\n          this.componentsCount = Csiz;\\n          this.bitsPerComponent = 8;\\n          return;\\n        }\\n      }\\n      throw new JpxError('No size marker found in JPX stream');\\n    },\\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\\n      var context = {};\\n      var doNotRecover = false;\\n      try {\\n        var position = start;\\n        while (position + 1 < end) {\\n          var code = (0, _util.readUint16)(data, position);\\n          position += 2;\\n          var length = 0,\\n              j,\\n              sqcd,\\n              spqcds,\\n              spqcdSize,\\n              scalarExpounded,\\n              tile;\\n          switch (code) {\\n            case 0xFF4F:\\n              context.mainHeader = true;\\n              break;\\n            case 0xFFD9:\\n              break;\\n            case 0xFF51:\\n              length = (0, _util.readUint16)(data, position);\\n              var siz = {};\\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\\n              siz.Csiz = componentsCount;\\n              var components = [];\\n              j = position + 38;\\n              for (var i = 0; i < componentsCount; i++) {\\n                var component = {\\n                  precision: (data[j] & 0x7F) + 1,\\n                  isSigned: !!(data[j] & 0x80),\\n                  XRsiz: data[j + 1],\\n                  YRsiz: data[j + 2]\\n                };\\n                j += 3;\\n                calculateComponentDimensions(component, siz);\\n                components.push(component);\\n              }\\n              context.SIZ = siz;\\n              context.components = components;\\n              calculateTileGrids(context, components);\\n              context.QCC = [];\\n              context.COC = [];\\n              break;\\n            case 0xFF5C:\\n              length = (0, _util.readUint16)(data, position);\\n              var qcd = {};\\n              j = position + 2;\\n              sqcd = data[j++];\\n              switch (sqcd & 0x1F) {\\n                case 0:\\n                  spqcdSize = 8;\\n                  scalarExpounded = true;\\n                  break;\\n                case 1:\\n                  spqcdSize = 16;\\n                  scalarExpounded = false;\\n                  break;\\n                case 2:\\n                  spqcdSize = 16;\\n                  scalarExpounded = true;\\n                  break;\\n                default:\\n                  throw new Error('Invalid SQcd value ' + sqcd);\\n              }\\n              qcd.noQuantization = spqcdSize === 8;\\n              qcd.scalarExpounded = scalarExpounded;\\n              qcd.guardBits = sqcd >> 5;\\n              spqcds = [];\\n              while (j < length + position) {\\n                var spqcd = {};\\n                if (spqcdSize === 8) {\\n                  spqcd.epsilon = data[j++] >> 3;\\n                  spqcd.mu = 0;\\n                } else {\\n                  spqcd.epsilon = data[j] >> 3;\\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\n                  j += 2;\\n                }\\n                spqcds.push(spqcd);\\n              }\\n              qcd.SPqcds = spqcds;\\n              if (context.mainHeader) {\\n                context.QCD = qcd;\\n              } else {\\n                context.currentTile.QCD = qcd;\\n                context.currentTile.QCC = [];\\n              }\\n              break;\\n            case 0xFF5D:\\n              length = (0, _util.readUint16)(data, position);\\n              var qcc = {};\\n              j = position + 2;\\n              var cqcc;\\n              if (context.SIZ.Csiz < 257) {\\n                cqcc = data[j++];\\n              } else {\\n                cqcc = (0, _util.readUint16)(data, j);\\n                j += 2;\\n              }\\n              sqcd = data[j++];\\n              switch (sqcd & 0x1F) {\\n                case 0:\\n                  spqcdSize = 8;\\n                  scalarExpounded = true;\\n                  break;\\n                case 1:\\n                  spqcdSize = 16;\\n                  scalarExpounded = false;\\n                  break;\\n                case 2:\\n                  spqcdSize = 16;\\n                  scalarExpounded = true;\\n                  break;\\n                default:\\n                  throw new Error('Invalid SQcd value ' + sqcd);\\n              }\\n              qcc.noQuantization = spqcdSize === 8;\\n              qcc.scalarExpounded = scalarExpounded;\\n              qcc.guardBits = sqcd >> 5;\\n              spqcds = [];\\n              while (j < length + position) {\\n                spqcd = {};\\n                if (spqcdSize === 8) {\\n                  spqcd.epsilon = data[j++] >> 3;\\n                  spqcd.mu = 0;\\n                } else {\\n                  spqcd.epsilon = data[j] >> 3;\\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\n                  j += 2;\\n                }\\n                spqcds.push(spqcd);\\n              }\\n              qcc.SPqcds = spqcds;\\n              if (context.mainHeader) {\\n                context.QCC[cqcc] = qcc;\\n              } else {\\n                context.currentTile.QCC[cqcc] = qcc;\\n              }\\n              break;\\n            case 0xFF52:\\n              length = (0, _util.readUint16)(data, position);\\n              var cod = {};\\n              j = position + 2;\\n              var scod = data[j++];\\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\\n              cod.sopMarkerUsed = !!(scod & 2);\\n              cod.ephMarkerUsed = !!(scod & 4);\\n              cod.progressionOrder = data[j++];\\n              cod.layersCount = (0, _util.readUint16)(data, j);\\n              j += 2;\\n              cod.multipleComponentTransform = data[j++];\\n              cod.decompositionLevelsCount = data[j++];\\n              cod.xcb = (data[j++] & 0xF) + 2;\\n              cod.ycb = (data[j++] & 0xF) + 2;\\n              var blockStyle = data[j++];\\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\\n              cod.resetContextProbabilities = !!(blockStyle & 2);\\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\\n              cod.verticalyStripe = !!(blockStyle & 8);\\n              cod.predictableTermination = !!(blockStyle & 16);\\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\\n              cod.reversibleTransformation = data[j++];\\n              if (cod.entropyCoderWithCustomPrecincts) {\\n                var precinctsSizes = [];\\n                while (j < length + position) {\\n                  var precinctsSize = data[j++];\\n                  precinctsSizes.push({\\n                    PPx: precinctsSize & 0xF,\\n                    PPy: precinctsSize >> 4\\n                  });\\n                }\\n                cod.precinctsSizes = precinctsSizes;\\n              }\\n              var unsupported = [];\\n              if (cod.selectiveArithmeticCodingBypass) {\\n                unsupported.push('selectiveArithmeticCodingBypass');\\n              }\\n              if (cod.resetContextProbabilities) {\\n                unsupported.push('resetContextProbabilities');\\n              }\\n              if (cod.terminationOnEachCodingPass) {\\n                unsupported.push('terminationOnEachCodingPass');\\n              }\\n              if (cod.verticalyStripe) {\\n                unsupported.push('verticalyStripe');\\n              }\\n              if (cod.predictableTermination) {\\n                unsupported.push('predictableTermination');\\n              }\\n              if (unsupported.length > 0) {\\n                doNotRecover = true;\\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\\n              }\\n              if (context.mainHeader) {\\n                context.COD = cod;\\n              } else {\\n                context.currentTile.COD = cod;\\n                context.currentTile.COC = [];\\n              }\\n              break;\\n            case 0xFF90:\\n              length = (0, _util.readUint16)(data, position);\\n              tile = {};\\n              tile.index = (0, _util.readUint16)(data, position + 2);\\n              tile.length = (0, _util.readUint32)(data, position + 4);\\n              tile.dataEnd = tile.length + position - 2;\\n              tile.partIndex = data[position + 8];\\n              tile.partsCount = data[position + 9];\\n              context.mainHeader = false;\\n              if (tile.partIndex === 0) {\\n                tile.COD = context.COD;\\n                tile.COC = context.COC.slice(0);\\n                tile.QCD = context.QCD;\\n                tile.QCC = context.QCC.slice(0);\\n              }\\n              context.currentTile = tile;\\n              break;\\n            case 0xFF93:\\n              tile = context.currentTile;\\n              if (tile.partIndex === 0) {\\n                initializeTile(context, tile.index);\\n                buildPackets(context);\\n              }\\n              length = tile.dataEnd - position;\\n              parseTilePackets(context, data, position, length);\\n              break;\\n            case 0xFF55:\\n            case 0xFF57:\\n            case 0xFF58:\\n            case 0xFF64:\\n              length = (0, _util.readUint16)(data, position);\\n              break;\\n            case 0xFF53:\\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\\n            default:\\n              throw new Error('Unknown codestream code: ' + code.toString(16));\\n          }\\n          position += length;\\n        }\\n      } catch (e) {\\n        if (doNotRecover || this.failOnCorruptedImage) {\\n          throw new JpxError(e.message);\\n        } else {\\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\\n        }\\n      }\\n      this.tiles = transformComponents(context);\\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\\n      this.componentsCount = context.SIZ.Csiz;\\n    }\\n  };\\n  function calculateComponentDimensions(component, siz) {\\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\\n    component.width = component.x1 - component.x0;\\n    component.height = component.y1 - component.y0;\\n  }\\n  function calculateTileGrids(context, components) {\\n    var siz = context.SIZ;\\n    var tile,\\n        tiles = [];\\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\\n    for (var q = 0; q < numYtiles; q++) {\\n      for (var p = 0; p < numXtiles; p++) {\\n        tile = {};\\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\\n        tile.width = tile.tx1 - tile.tx0;\\n        tile.height = tile.ty1 - tile.ty0;\\n        tile.components = [];\\n        tiles.push(tile);\\n      }\\n    }\\n    context.tiles = tiles;\\n    var componentsCount = siz.Csiz;\\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\\n      var component = components[i];\\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\\n        var tileComponent = {};\\n        tile = tiles[j];\\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\\n        tile.components[i] = tileComponent;\\n      }\\n    }\\n  }\\n  function getBlocksDimensions(context, component, r) {\\n    var codOrCoc = component.codingStyleParameters;\\n    var result = {};\\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\\n      result.PPx = 15;\\n      result.PPy = 15;\\n    } else {\\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\\n    }\\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\\n    return result;\\n  }\\n  function buildPrecincts(context, resolution, dimensions) {\\n    var precinctWidth = 1 << dimensions.PPx;\\n    var precinctHeight = 1 << dimensions.PPy;\\n    var isZeroRes = resolution.resLevel === 0;\\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\\n    var numprecincts = numprecinctswide * numprecinctshigh;\\n    resolution.precinctParameters = {\\n      precinctWidth: precinctWidth,\\n      precinctHeight: precinctHeight,\\n      numprecinctswide: numprecinctswide,\\n      numprecinctshigh: numprecinctshigh,\\n      numprecincts: numprecincts,\\n      precinctWidthInSubband: precinctWidthInSubband,\\n      precinctHeightInSubband: precinctHeightInSubband\\n    };\\n  }\\n  function buildCodeblocks(context, subband, dimensions) {\\n    var xcb_ = dimensions.xcb_;\\n    var ycb_ = dimensions.ycb_;\\n    var codeblockWidth = 1 << xcb_;\\n    var codeblockHeight = 1 << ycb_;\\n    var cbx0 = subband.tbx0 >> xcb_;\\n    var cby0 = subband.tby0 >> ycb_;\\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\\n    var precinctParameters = subband.resolution.precinctParameters;\\n    var codeblocks = [];\\n    var precincts = [];\\n    var i, j, codeblock, precinctNumber;\\n    for (j = cby0; j < cby1; j++) {\\n      for (i = cbx0; i < cbx1; i++) {\\n        codeblock = {\\n          cbx: i,\\n          cby: j,\\n          tbx0: codeblockWidth * i,\\n          tby0: codeblockHeight * j,\\n          tbx1: codeblockWidth * (i + 1),\\n          tby1: codeblockHeight * (j + 1)\\n        };\\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\\n        codeblock.precinctNumber = precinctNumber;\\n        codeblock.subbandType = subband.type;\\n        codeblock.Lblock = 3;\\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\\n          continue;\\n        }\\n        codeblocks.push(codeblock);\\n        var precinct = precincts[precinctNumber];\\n        if (precinct !== undefined) {\\n          if (i < precinct.cbxMin) {\\n            precinct.cbxMin = i;\\n          } else if (i > precinct.cbxMax) {\\n            precinct.cbxMax = i;\\n          }\\n          if (j < precinct.cbyMin) {\\n            precinct.cbxMin = j;\\n          } else if (j > precinct.cbyMax) {\\n            precinct.cbyMax = j;\\n          }\\n        } else {\\n          precincts[precinctNumber] = precinct = {\\n            cbxMin: i,\\n            cbyMin: j,\\n            cbxMax: i,\\n            cbyMax: j\\n          };\\n        }\\n        codeblock.precinct = precinct;\\n      }\\n    }\\n    subband.codeblockParameters = {\\n      codeblockWidth: xcb_,\\n      codeblockHeight: ycb_,\\n      numcodeblockwide: cbx1 - cbx0 + 1,\\n      numcodeblockhigh: cby1 - cby0 + 1\\n    };\\n    subband.codeblocks = codeblocks;\\n    subband.precincts = precincts;\\n  }\\n  function createPacket(resolution, precinctNumber, layerNumber) {\\n    var precinctCodeblocks = [];\\n    var subbands = resolution.subbands;\\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\\n      var subband = subbands[i];\\n      var codeblocks = subband.codeblocks;\\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\\n        var codeblock = codeblocks[j];\\n        if (codeblock.precinctNumber !== precinctNumber) {\\n          continue;\\n        }\\n        precinctCodeblocks.push(codeblock);\\n      }\\n    }\\n    return {\\n      layerNumber: layerNumber,\\n      codeblocks: precinctCodeblocks\\n    };\\n  }\\n  function LayerResolutionComponentPositionIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var maxDecompositionLevelsCount = 0;\\n    for (var q = 0; q < componentsCount; q++) {\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\\n    }\\n    var l = 0,\\n        r = 0,\\n        i = 0,\\n        k = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; l < layersCount; l++) {\\n        for (; r <= maxDecompositionLevelsCount; r++) {\\n          for (; i < componentsCount; i++) {\\n            var component = tile.components[i];\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n              continue;\\n            }\\n            var resolution = component.resolutions[r];\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\n            for (; k < numprecincts;) {\\n              var packet = createPacket(resolution, k, l);\\n              k++;\\n              return packet;\\n            }\\n            k = 0;\\n          }\\n          i = 0;\\n        }\\n        r = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function ResolutionLayerComponentPositionIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var maxDecompositionLevelsCount = 0;\\n    for (var q = 0; q < componentsCount; q++) {\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\\n    }\\n    var r = 0,\\n        l = 0,\\n        i = 0,\\n        k = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; r <= maxDecompositionLevelsCount; r++) {\\n        for (; l < layersCount; l++) {\\n          for (; i < componentsCount; i++) {\\n            var component = tile.components[i];\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n              continue;\\n            }\\n            var resolution = component.resolutions[r];\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\n            for (; k < numprecincts;) {\\n              var packet = createPacket(resolution, k, l);\\n              k++;\\n              return packet;\\n            }\\n            k = 0;\\n          }\\n          i = 0;\\n        }\\n        l = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function ResolutionPositionComponentLayerIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var l, r, c, p;\\n    var maxDecompositionLevelsCount = 0;\\n    for (c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\\n    }\\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\\n      var maxNumPrecincts = 0;\\n      for (c = 0; c < componentsCount; ++c) {\\n        var resolutions = tile.components[c].resolutions;\\n        if (r < resolutions.length) {\\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\\n        }\\n      }\\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\\n    }\\n    l = 0;\\n    r = 0;\\n    c = 0;\\n    p = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; r <= maxDecompositionLevelsCount; r++) {\\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\\n          for (; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n              continue;\\n            }\\n            var resolution = component.resolutions[r];\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\n            if (p >= numprecincts) {\\n              continue;\\n            }\\n            for (; l < layersCount;) {\\n              var packet = createPacket(resolution, p, l);\\n              l++;\\n              return packet;\\n            }\\n            l = 0;\\n          }\\n          c = 0;\\n        }\\n        p = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function PositionComponentResolutionLayerIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\\n    var precinctsIterationSizes = precinctsSizes;\\n    var l = 0,\\n        r = 0,\\n        c = 0,\\n        px = 0,\\n        py = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\\n          for (; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n            for (; r <= decompositionLevelsCount; r++) {\\n              var resolution = component.resolutions[r];\\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\n              if (k === null) {\\n                continue;\\n              }\\n              for (; l < layersCount;) {\\n                var packet = createPacket(resolution, k, l);\\n                l++;\\n                return packet;\\n              }\\n              l = 0;\\n            }\\n            r = 0;\\n          }\\n          c = 0;\\n        }\\n        px = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function ComponentPositionResolutionLayerIterator(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n    var componentsCount = siz.Csiz;\\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\\n    var l = 0,\\n        r = 0,\\n        c = 0,\\n        px = 0,\\n        py = 0;\\n    this.nextPacket = function JpxImage_nextPacket() {\\n      for (; c < componentsCount; ++c) {\\n        var component = tile.components[c];\\n        var precinctsIterationSizes = precinctsSizes.components[c];\\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\\n            for (; r <= decompositionLevelsCount; r++) {\\n              var resolution = component.resolutions[r];\\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\n              if (k === null) {\\n                continue;\\n              }\\n              for (; l < layersCount;) {\\n                var packet = createPacket(resolution, k, l);\\n                l++;\\n                return packet;\\n              }\\n              l = 0;\\n            }\\n            r = 0;\\n          }\\n          px = 0;\\n        }\\n        py = 0;\\n      }\\n      throw new JpxError('Out of packets');\\n    };\\n  }\\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\\n    var posX = pxIndex * precinctIterationSizes.minWidth;\\n    var posY = pyIndex * precinctIterationSizes.minHeight;\\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\\n      return null;\\n    }\\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\\n  }\\n  function getPrecinctSizesInImageScale(tile) {\\n    var componentsCount = tile.components.length;\\n    var minWidth = Number.MAX_VALUE;\\n    var minHeight = Number.MAX_VALUE;\\n    var maxNumWide = 0;\\n    var maxNumHigh = 0;\\n    var sizePerComponent = new Array(componentsCount);\\n    for (var c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\\n      var minWidthCurrentComponent = Number.MAX_VALUE;\\n      var minHeightCurrentComponent = Number.MAX_VALUE;\\n      var maxNumWideCurrentComponent = 0;\\n      var maxNumHighCurrentComponent = 0;\\n      var scale = 1;\\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\\n        var resolution = component.resolutions[r];\\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\\n        sizePerResolution[r] = {\\n          width: widthCurrentResolution,\\n          height: heightCurrentResolution\\n        };\\n        scale <<= 1;\\n      }\\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\\n      sizePerComponent[c] = {\\n        resolutions: sizePerResolution,\\n        minWidth: minWidthCurrentComponent,\\n        minHeight: minHeightCurrentComponent,\\n        maxNumWide: maxNumWideCurrentComponent,\\n        maxNumHigh: maxNumHighCurrentComponent\\n      };\\n    }\\n    return {\\n      components: sizePerComponent,\\n      minWidth: minWidth,\\n      minHeight: minHeight,\\n      maxNumWide: maxNumWide,\\n      maxNumHigh: maxNumHigh\\n    };\\n  }\\n  function buildPackets(context) {\\n    var siz = context.SIZ;\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var componentsCount = siz.Csiz;\\n    for (var c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n      var resolutions = [];\\n      var subbands = [];\\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\\n        var blocksDimensions = getBlocksDimensions(context, component, r);\\n        var resolution = {};\\n        var scale = 1 << decompositionLevelsCount - r;\\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\\n        resolution.resLevel = r;\\n        buildPrecincts(context, resolution, blocksDimensions);\\n        resolutions.push(resolution);\\n        var subband;\\n        if (r === 0) {\\n          subband = {};\\n          subband.type = 'LL';\\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolution.subbands = [subband];\\n        } else {\\n          var bscale = 1 << decompositionLevelsCount - r + 1;\\n          var resolutionSubbands = [];\\n          subband = {};\\n          subband.type = 'HL';\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolutionSubbands.push(subband);\\n          subband = {};\\n          subband.type = 'LH';\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolutionSubbands.push(subband);\\n          subband = {};\\n          subband.type = 'HH';\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\n          subband.resolution = resolution;\\n          buildCodeblocks(context, subband, blocksDimensions);\\n          subbands.push(subband);\\n          resolutionSubbands.push(subband);\\n          resolution.subbands = resolutionSubbands;\\n        }\\n      }\\n      component.resolutions = resolutions;\\n      component.subbands = subbands;\\n    }\\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\\n    switch (progressionOrder) {\\n      case 0:\\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\\n        break;\\n      case 1:\\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\\n        break;\\n      case 2:\\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\\n        break;\\n      case 3:\\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\\n        break;\\n      case 4:\\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\\n        break;\\n      default:\\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\\n    }\\n  }\\n  function parseTilePackets(context, data, offset, dataLength) {\\n    var position = 0;\\n    var buffer,\\n        bufferSize = 0,\\n        skipNextBit = false;\\n    function readBits(count) {\\n      while (bufferSize < count) {\\n        var b = data[offset + position];\\n        position++;\\n        if (skipNextBit) {\\n          buffer = buffer << 7 | b;\\n          bufferSize += 7;\\n          skipNextBit = false;\\n        } else {\\n          buffer = buffer << 8 | b;\\n          bufferSize += 8;\\n        }\\n        if (b === 0xFF) {\\n          skipNextBit = true;\\n        }\\n      }\\n      bufferSize -= count;\\n      return buffer >>> bufferSize & (1 << count) - 1;\\n    }\\n    function skipMarkerIfEqual(value) {\\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\\n        skipBytes(1);\\n        return true;\\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\\n        skipBytes(2);\\n        return true;\\n      }\\n      return false;\\n    }\\n    function skipBytes(count) {\\n      position += count;\\n    }\\n    function alignToByte() {\\n      bufferSize = 0;\\n      if (skipNextBit) {\\n        position++;\\n        skipNextBit = false;\\n      }\\n    }\\n    function readCodingpasses() {\\n      if (readBits(1) === 0) {\\n        return 1;\\n      }\\n      if (readBits(1) === 0) {\\n        return 2;\\n      }\\n      var value = readBits(2);\\n      if (value < 3) {\\n        return value + 3;\\n      }\\n      value = readBits(5);\\n      if (value < 31) {\\n        return value + 6;\\n      }\\n      value = readBits(7);\\n      return value + 37;\\n    }\\n    var tileIndex = context.currentTile.index;\\n    var tile = context.tiles[tileIndex];\\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\\n    var packetsIterator = tile.packetsIterator;\\n    while (position < dataLength) {\\n      alignToByte();\\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\\n        skipBytes(4);\\n      }\\n      var packet = packetsIterator.nextPacket();\\n      if (!readBits(1)) {\\n        continue;\\n      }\\n      var layerNumber = packet.layerNumber;\\n      var queue = [],\\n          codeblock;\\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\\n        codeblock = packet.codeblocks[i];\\n        var precinct = codeblock.precinct;\\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\\n        var codeblockIncluded = false;\\n        var firstTimeInclusion = false;\\n        var valueReady;\\n        if (codeblock['included'] !== undefined) {\\n          codeblockIncluded = !!readBits(1);\\n        } else {\\n          precinct = codeblock.precinct;\\n          var inclusionTree, zeroBitPlanesTree;\\n          if (precinct['inclusionTree'] !== undefined) {\\n            inclusionTree = precinct.inclusionTree;\\n          } else {\\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\\n            inclusionTree = new InclusionTree(width, height, layerNumber);\\n            zeroBitPlanesTree = new TagTree(width, height);\\n            precinct.inclusionTree = inclusionTree;\\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\\n          }\\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\\n            while (true) {\\n              if (readBits(1)) {\\n                valueReady = !inclusionTree.nextLevel();\\n                if (valueReady) {\\n                  codeblock.included = true;\\n                  codeblockIncluded = firstTimeInclusion = true;\\n                  break;\\n                }\\n              } else {\\n                inclusionTree.incrementValue(layerNumber);\\n                break;\\n              }\\n            }\\n          }\\n        }\\n        if (!codeblockIncluded) {\\n          continue;\\n        }\\n        if (firstTimeInclusion) {\\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\\n          while (true) {\\n            if (readBits(1)) {\\n              valueReady = !zeroBitPlanesTree.nextLevel();\\n              if (valueReady) {\\n                break;\\n              }\\n            } else {\\n              zeroBitPlanesTree.incrementValue();\\n            }\\n          }\\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\\n        }\\n        var codingpasses = readCodingpasses();\\n        while (readBits(1)) {\\n          codeblock.Lblock++;\\n        }\\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\\n        var codedDataLength = readBits(bits);\\n        queue.push({\\n          codeblock: codeblock,\\n          codingpasses: codingpasses,\\n          dataLength: codedDataLength\\n        });\\n      }\\n      alignToByte();\\n      if (ephMarkerUsed) {\\n        skipMarkerIfEqual(0x92);\\n      }\\n      while (queue.length > 0) {\\n        var packetItem = queue.shift();\\n        codeblock = packetItem.codeblock;\\n        if (codeblock['data'] === undefined) {\\n          codeblock.data = [];\\n        }\\n        codeblock.data.push({\\n          data: data,\\n          start: offset + position,\\n          end: offset + position + packetItem.dataLength,\\n          codingpasses: packetItem.codingpasses\\n        });\\n        position += packetItem.dataLength;\\n      }\\n    }\\n    return position;\\n  }\\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\\n    var x0 = subband.tbx0;\\n    var y0 = subband.tby0;\\n    var width = subband.tbx1 - subband.tbx0;\\n    var codeblocks = subband.codeblocks;\\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\\n      var codeblock = codeblocks[i];\\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\\n      if (blockWidth === 0 || blockHeight === 0) {\\n        continue;\\n      }\\n      if (codeblock['data'] === undefined) {\\n        continue;\\n      }\\n      var bitModel, currentCodingpassType;\\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\\n      currentCodingpassType = 2;\\n      var data = codeblock.data,\\n          totalLength = 0,\\n          codingpasses = 0;\\n      var j, jj, dataItem;\\n      for (j = 0, jj = data.length; j < jj; j++) {\\n        dataItem = data[j];\\n        totalLength += dataItem.end - dataItem.start;\\n        codingpasses += dataItem.codingpasses;\\n      }\\n      var encodedData = new Uint8Array(totalLength);\\n      var position = 0;\\n      for (j = 0, jj = data.length; j < jj; j++) {\\n        dataItem = data[j];\\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\\n        encodedData.set(chunk, position);\\n        position += chunk.length;\\n      }\\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\\n      bitModel.setDecoder(decoder);\\n      for (j = 0; j < codingpasses; j++) {\\n        switch (currentCodingpassType) {\\n          case 0:\\n            bitModel.runSignificancePropagationPass();\\n            break;\\n          case 1:\\n            bitModel.runMagnitudeRefinementPass();\\n            break;\\n          case 2:\\n            bitModel.runCleanupPass();\\n            if (segmentationSymbolUsed) {\\n              bitModel.checkSegmentationSymbol();\\n            }\\n            break;\\n        }\\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\\n      }\\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\\n      var sign = bitModel.coefficentsSign;\\n      var magnitude = bitModel.coefficentsMagnitude;\\n      var bitsDecoded = bitModel.bitsDecoded;\\n      var magnitudeCorrection = reversible ? 0 : 0.5;\\n      var k, n, nb;\\n      position = 0;\\n      var interleave = subband.type !== 'LL';\\n      for (j = 0; j < blockHeight; j++) {\\n        var row = offset / width | 0;\\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\\n        for (k = 0; k < blockWidth; k++) {\\n          n = magnitude[position];\\n          if (n !== 0) {\\n            n = (n + magnitudeCorrection) * delta;\\n            if (sign[position] !== 0) {\\n              n = -n;\\n            }\\n            nb = bitsDecoded[position];\\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\\n            if (reversible && nb >= mb) {\\n              coefficients[pos] = n;\\n            } else {\\n              coefficients[pos] = n * (1 << mb - nb);\\n            }\\n          }\\n          offset++;\\n          position++;\\n        }\\n        offset += width - blockWidth;\\n      }\\n    }\\n  }\\n  function transformTile(context, tile, c) {\\n    var component = tile.components[c];\\n    var codingStyleParameters = component.codingStyleParameters;\\n    var quantizationParameters = component.quantizationParameters;\\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\\n    var spqcds = quantizationParameters.SPqcds;\\n    var scalarExpounded = quantizationParameters.scalarExpounded;\\n    var guardBits = quantizationParameters.guardBits;\\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\\n    var precision = context.components[c].precision;\\n    var reversible = codingStyleParameters.reversibleTransformation;\\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\\n    var subbandCoefficients = [];\\n    var b = 0;\\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\\n      var resolution = component.resolutions[i];\\n      var width = resolution.trx1 - resolution.trx0;\\n      var height = resolution.try1 - resolution.try0;\\n      var coefficients = new Float32Array(width * height);\\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\\n        var mu, epsilon;\\n        if (!scalarExpounded) {\\n          mu = spqcds[0].mu;\\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\\n        } else {\\n          mu = spqcds[b].mu;\\n          epsilon = spqcds[b].epsilon;\\n          b++;\\n        }\\n        var subband = resolution.subbands[j];\\n        var gainLog2 = SubbandsGainLog2[subband.type];\\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\\n        var mb = guardBits + epsilon - 1;\\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\\n      }\\n      subbandCoefficients.push({\\n        width: width,\\n        height: height,\\n        items: coefficients\\n      });\\n    }\\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\\n    return {\\n      left: component.tcx0,\\n      top: component.tcy0,\\n      width: result.width,\\n      height: result.height,\\n      items: result.items\\n    };\\n  }\\n  function transformComponents(context) {\\n    var siz = context.SIZ;\\n    var components = context.components;\\n    var componentsCount = siz.Csiz;\\n    var resultImages = [];\\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\\n      var tile = context.tiles[i];\\n      var transformedTiles = [];\\n      var c;\\n      for (c = 0; c < componentsCount; c++) {\\n        transformedTiles[c] = transformTile(context, tile, c);\\n      }\\n      var tile0 = transformedTiles[0];\\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\\n      var result = {\\n        left: tile0.left,\\n        top: tile0.top,\\n        width: tile0.width,\\n        height: tile0.height,\\n        items: out\\n      };\\n      var shift, offset;\\n      var pos = 0,\\n          j,\\n          jj,\\n          y0,\\n          y1,\\n          y2;\\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\\n        var fourComponents = componentsCount === 4;\\n        var y0items = transformedTiles[0].items;\\n        var y1items = transformedTiles[1].items;\\n        var y2items = transformedTiles[2].items;\\n        var y3items = fourComponents ? transformedTiles[3].items : null;\\n        shift = components[0].precision - 8;\\n        offset = (128 << shift) + 0.5;\\n        var component0 = tile.components[0];\\n        var alpha01 = componentsCount - 3;\\n        jj = y0items.length;\\n        if (!component0.codingStyleParameters.reversibleTransformation) {\\n          for (j = 0; j < jj; j++, pos += alpha01) {\\n            y0 = y0items[j] + offset;\\n            y1 = y1items[j];\\n            y2 = y2items[j];\\n            out[pos++] = y0 + 1.402 * y2 >> shift;\\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\\n            out[pos++] = y0 + 1.772 * y1 >> shift;\\n          }\\n        } else {\\n          for (j = 0; j < jj; j++, pos += alpha01) {\\n            y0 = y0items[j] + offset;\\n            y1 = y1items[j];\\n            y2 = y2items[j];\\n            var g = y0 - (y2 + y1 >> 2);\\n            out[pos++] = g + y2 >> shift;\\n            out[pos++] = g >> shift;\\n            out[pos++] = g + y1 >> shift;\\n          }\\n        }\\n        if (fourComponents) {\\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\\n            out[pos] = y3items[j] + offset >> shift;\\n          }\\n        }\\n      } else {\\n        for (c = 0; c < componentsCount; c++) {\\n          var items = transformedTiles[c].items;\\n          shift = components[c].precision - 8;\\n          offset = (128 << shift) + 0.5;\\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\\n            out[pos] = items[j] + offset >> shift;\\n            pos += componentsCount;\\n          }\\n        }\\n      }\\n      resultImages.push(result);\\n    }\\n    return resultImages;\\n  }\\n  function initializeTile(context, tileIndex) {\\n    var siz = context.SIZ;\\n    var componentsCount = siz.Csiz;\\n    var tile = context.tiles[tileIndex];\\n    for (var c = 0; c < componentsCount; c++) {\\n      var component = tile.components[c];\\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\\n      component.quantizationParameters = qcdOrQcc;\\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\\n      component.codingStyleParameters = codOrCoc;\\n    }\\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\\n  }\\n  var TagTree = function TagTreeClosure() {\\n    function TagTree(width, height) {\\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\n      this.levels = [];\\n      for (var i = 0; i < levelsLength; i++) {\\n        var level = {\\n          width: width,\\n          height: height,\\n          items: []\\n        };\\n        this.levels.push(level);\\n        width = Math.ceil(width / 2);\\n        height = Math.ceil(height / 2);\\n      }\\n    }\\n    TagTree.prototype = {\\n      reset: function TagTree_reset(i, j) {\\n        var currentLevel = 0,\\n            value = 0,\\n            level;\\n        while (currentLevel < this.levels.length) {\\n          level = this.levels[currentLevel];\\n          var index = i + j * level.width;\\n          if (level.items[index] !== undefined) {\\n            value = level.items[index];\\n            break;\\n          }\\n          level.index = index;\\n          i >>= 1;\\n          j >>= 1;\\n          currentLevel++;\\n        }\\n        currentLevel--;\\n        level = this.levels[currentLevel];\\n        level.items[level.index] = value;\\n        this.currentLevel = currentLevel;\\n        delete this.value;\\n      },\\n      incrementValue: function TagTree_incrementValue() {\\n        var level = this.levels[this.currentLevel];\\n        level.items[level.index]++;\\n      },\\n      nextLevel: function TagTree_nextLevel() {\\n        var currentLevel = this.currentLevel;\\n        var level = this.levels[currentLevel];\\n        var value = level.items[level.index];\\n        currentLevel--;\\n        if (currentLevel < 0) {\\n          this.value = value;\\n          return false;\\n        }\\n        this.currentLevel = currentLevel;\\n        level = this.levels[currentLevel];\\n        level.items[level.index] = value;\\n        return true;\\n      }\\n    };\\n    return TagTree;\\n  }();\\n  var InclusionTree = function InclusionTreeClosure() {\\n    function InclusionTree(width, height, defaultValue) {\\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\n      this.levels = [];\\n      for (var i = 0; i < levelsLength; i++) {\\n        var items = new Uint8Array(width * height);\\n        for (var j = 0, jj = items.length; j < jj; j++) {\\n          items[j] = defaultValue;\\n        }\\n        var level = {\\n          width: width,\\n          height: height,\\n          items: items\\n        };\\n        this.levels.push(level);\\n        width = Math.ceil(width / 2);\\n        height = Math.ceil(height / 2);\\n      }\\n    }\\n    InclusionTree.prototype = {\\n      reset: function InclusionTree_reset(i, j, stopValue) {\\n        var currentLevel = 0;\\n        while (currentLevel < this.levels.length) {\\n          var level = this.levels[currentLevel];\\n          var index = i + j * level.width;\\n          level.index = index;\\n          var value = level.items[index];\\n          if (value === 0xFF) {\\n            break;\\n          }\\n          if (value > stopValue) {\\n            this.currentLevel = currentLevel;\\n            this.propagateValues();\\n            return false;\\n          }\\n          i >>= 1;\\n          j >>= 1;\\n          currentLevel++;\\n        }\\n        this.currentLevel = currentLevel - 1;\\n        return true;\\n      },\\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\\n        var level = this.levels[this.currentLevel];\\n        level.items[level.index] = stopValue + 1;\\n        this.propagateValues();\\n      },\\n      propagateValues: function InclusionTree_propagateValues() {\\n        var levelIndex = this.currentLevel;\\n        var level = this.levels[levelIndex];\\n        var currentValue = level.items[level.index];\\n        while (--levelIndex >= 0) {\\n          level = this.levels[levelIndex];\\n          level.items[level.index] = currentValue;\\n        }\\n      },\\n      nextLevel: function InclusionTree_nextLevel() {\\n        var currentLevel = this.currentLevel;\\n        var level = this.levels[currentLevel];\\n        var value = level.items[level.index];\\n        level.items[level.index] = 0xFF;\\n        currentLevel--;\\n        if (currentLevel < 0) {\\n          return false;\\n        }\\n        this.currentLevel = currentLevel;\\n        level = this.levels[currentLevel];\\n        level.items[level.index] = value;\\n        return true;\\n      }\\n    };\\n    return InclusionTree;\\n  }();\\n  var BitModel = function BitModelClosure() {\\n    var UNIFORM_CONTEXT = 17;\\n    var RUNLENGTH_CONTEXT = 18;\\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\\n      this.width = width;\\n      this.height = height;\\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\\n      var coefficientCount = width * height;\\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\\n      this.coefficentsSign = new Uint8Array(coefficientCount);\\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\\n      this.processingFlags = new Uint8Array(coefficientCount);\\n      var bitsDecoded = new Uint8Array(coefficientCount);\\n      if (zeroBitPlanes !== 0) {\\n        for (var i = 0; i < coefficientCount; i++) {\\n          bitsDecoded[i] = zeroBitPlanes;\\n        }\\n      }\\n      this.bitsDecoded = bitsDecoded;\\n      this.reset();\\n    }\\n    BitModel.prototype = {\\n      setDecoder: function BitModel_setDecoder(decoder) {\\n        this.decoder = decoder;\\n      },\\n      reset: function BitModel_reset() {\\n        this.contexts = new Int8Array(19);\\n        this.contexts[0] = 4 << 1 | 0;\\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\\n      },\\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var width = this.width,\\n            height = this.height;\\n        var left = column > 0;\\n        var right = column + 1 < width;\\n        var i;\\n        if (row > 0) {\\n          i = index - width;\\n          if (left) {\\n            neighborsSignificance[i - 1] += 0x10;\\n          }\\n          if (right) {\\n            neighborsSignificance[i + 1] += 0x10;\\n          }\\n          neighborsSignificance[i] += 0x04;\\n        }\\n        if (row + 1 < height) {\\n          i = index + width;\\n          if (left) {\\n            neighborsSignificance[i - 1] += 0x10;\\n          }\\n          if (right) {\\n            neighborsSignificance[i + 1] += 0x10;\\n          }\\n          neighborsSignificance[i] += 0x04;\\n        }\\n        if (left) {\\n          neighborsSignificance[index - 1] += 0x01;\\n        }\\n        if (right) {\\n          neighborsSignificance[index + 1] += 0x01;\\n        }\\n        neighborsSignificance[index] |= 0x80;\\n      },\\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\\n        var decoder = this.decoder;\\n        var width = this.width,\\n            height = this.height;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var coefficentsSign = this.coefficentsSign;\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var processingFlags = this.processingFlags;\\n        var contexts = this.contexts;\\n        var labels = this.contextLabelTable;\\n        var bitsDecoded = this.bitsDecoded;\\n        var processedInverseMask = ~1;\\n        var processedMask = 1;\\n        var firstMagnitudeBitMask = 2;\\n        for (var i0 = 0; i0 < height; i0 += 4) {\\n          for (var j = 0; j < width; j++) {\\n            var index = i0 * width + j;\\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\\n              var i = i0 + i1;\\n              if (i >= height) {\\n                break;\\n              }\\n              processingFlags[index] &= processedInverseMask;\\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\\n                continue;\\n              }\\n              var contextLabel = labels[neighborsSignificance[index]];\\n              var decision = decoder.readBit(contexts, contextLabel);\\n              if (decision) {\\n                var sign = this.decodeSignBit(i, j, index);\\n                coefficentsSign[index] = sign;\\n                coefficentsMagnitude[index] = 1;\\n                this.setNeighborsSignificance(i, j, index);\\n                processingFlags[index] |= firstMagnitudeBitMask;\\n              }\\n              bitsDecoded[index]++;\\n              processingFlags[index] |= processedMask;\\n            }\\n          }\\n        }\\n      },\\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\\n        var width = this.width,\\n            height = this.height;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var coefficentsSign = this.coefficentsSign;\\n        var contribution, sign0, sign1, significance1;\\n        var contextLabel, decoded;\\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\\n          sign1 = coefficentsSign[index + 1];\\n          if (significance1) {\\n            sign0 = coefficentsSign[index - 1];\\n            contribution = 1 - sign1 - sign0;\\n          } else {\\n            contribution = 1 - sign1 - sign1;\\n          }\\n        } else if (significance1) {\\n          sign0 = coefficentsSign[index - 1];\\n          contribution = 1 - sign0 - sign0;\\n        } else {\\n          contribution = 0;\\n        }\\n        var horizontalContribution = 3 * contribution;\\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\\n          sign1 = coefficentsSign[index + width];\\n          if (significance1) {\\n            sign0 = coefficentsSign[index - width];\\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\\n          } else {\\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\\n          }\\n        } else if (significance1) {\\n          sign0 = coefficentsSign[index - width];\\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\\n        } else {\\n          contribution = horizontalContribution;\\n        }\\n        if (contribution >= 0) {\\n          contextLabel = 9 + contribution;\\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\\n        } else {\\n          contextLabel = 9 - contribution;\\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\\n        }\\n        return decoded;\\n      },\\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\\n        var decoder = this.decoder;\\n        var width = this.width,\\n            height = this.height;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var contexts = this.contexts;\\n        var bitsDecoded = this.bitsDecoded;\\n        var processingFlags = this.processingFlags;\\n        var processedMask = 1;\\n        var firstMagnitudeBitMask = 2;\\n        var length = width * height;\\n        var width4 = width * 4;\\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\\n          indexNext = Math.min(length, index0 + width4);\\n          for (var j = 0; j < width; j++) {\\n            for (var index = index0 + j; index < indexNext; index += width) {\\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\n                continue;\\n              }\\n              var contextLabel = 16;\\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\\n                processingFlags[index] ^= firstMagnitudeBitMask;\\n                var significance = neighborsSignificance[index] & 127;\\n                contextLabel = significance === 0 ? 15 : 14;\\n              }\\n              var bit = decoder.readBit(contexts, contextLabel);\\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\\n              bitsDecoded[index]++;\\n              processingFlags[index] |= processedMask;\\n            }\\n          }\\n        }\\n      },\\n      runCleanupPass: function BitModel_runCleanupPass() {\\n        var decoder = this.decoder;\\n        var width = this.width,\\n            height = this.height;\\n        var neighborsSignificance = this.neighborsSignificance;\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\n        var coefficentsSign = this.coefficentsSign;\\n        var contexts = this.contexts;\\n        var labels = this.contextLabelTable;\\n        var bitsDecoded = this.bitsDecoded;\\n        var processingFlags = this.processingFlags;\\n        var processedMask = 1;\\n        var firstMagnitudeBitMask = 2;\\n        var oneRowDown = width;\\n        var twoRowsDown = width * 2;\\n        var threeRowsDown = width * 3;\\n        var iNext;\\n        for (var i0 = 0; i0 < height; i0 = iNext) {\\n          iNext = Math.min(i0 + 4, height);\\n          var indexBase = i0 * width;\\n          var checkAllEmpty = i0 + 3 < height;\\n          for (var j = 0; j < width; j++) {\\n            var index0 = indexBase + j;\\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\\n            var i1 = 0,\\n                index = index0;\\n            var i = i0,\\n                sign;\\n            if (allEmpty) {\\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\\n              if (!hasSignificantCoefficent) {\\n                bitsDecoded[index0]++;\\n                bitsDecoded[index0 + oneRowDown]++;\\n                bitsDecoded[index0 + twoRowsDown]++;\\n                bitsDecoded[index0 + threeRowsDown]++;\\n                continue;\\n              }\\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\n              if (i1 !== 0) {\\n                i = i0 + i1;\\n                index += i1 * width;\\n              }\\n              sign = this.decodeSignBit(i, j, index);\\n              coefficentsSign[index] = sign;\\n              coefficentsMagnitude[index] = 1;\\n              this.setNeighborsSignificance(i, j, index);\\n              processingFlags[index] |= firstMagnitudeBitMask;\\n              index = index0;\\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\\n                bitsDecoded[index]++;\\n              }\\n              i1++;\\n            }\\n            for (i = i0 + i1; i < iNext; i++, index += width) {\\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\n                continue;\\n              }\\n              var contextLabel = labels[neighborsSignificance[index]];\\n              var decision = decoder.readBit(contexts, contextLabel);\\n              if (decision === 1) {\\n                sign = this.decodeSignBit(i, j, index);\\n                coefficentsSign[index] = sign;\\n                coefficentsMagnitude[index] = 1;\\n                this.setNeighborsSignificance(i, j, index);\\n                processingFlags[index] |= firstMagnitudeBitMask;\\n              }\\n              bitsDecoded[index]++;\\n            }\\n          }\\n        }\\n      },\\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\\n        var decoder = this.decoder;\\n        var contexts = this.contexts;\\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\n        if (symbol !== 0xA) {\\n          throw new JpxError('Invalid segmentation symbol');\\n        }\\n      }\\n    };\\n    return BitModel;\\n  }();\\n  var Transform = function TransformClosure() {\\n    function Transform() {}\\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\\n      var ll = subbands[0];\\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\\n        ll = this.iterate(ll, subbands[i], u0, v0);\\n      }\\n      return ll;\\n    };\\n    Transform.prototype.extend = function extend(buffer, offset, size) {\\n      var i1 = offset - 1,\\n          j1 = offset + 1;\\n      var i2 = offset + size - 2,\\n          j2 = offset + size;\\n      buffer[i1--] = buffer[j1++];\\n      buffer[j2++] = buffer[i2--];\\n      buffer[i1--] = buffer[j1++];\\n      buffer[j2++] = buffer[i2--];\\n      buffer[i1--] = buffer[j1++];\\n      buffer[j2++] = buffer[i2--];\\n      buffer[i1] = buffer[j1];\\n      buffer[j2] = buffer[i2];\\n    };\\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\\n      var llWidth = ll.width,\\n          llHeight = ll.height,\\n          llItems = ll.items;\\n      var width = hl_lh_hh.width;\\n      var height = hl_lh_hh.height;\\n      var items = hl_lh_hh.items;\\n      var i, j, k, l, u, v;\\n      for (k = 0, i = 0; i < llHeight; i++) {\\n        l = i * 2 * width;\\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\\n          items[l] = llItems[k];\\n        }\\n      }\\n      llItems = ll.items = null;\\n      var bufferPadding = 4;\\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\\n      if (width === 1) {\\n        if ((u0 & 1) !== 0) {\\n          for (v = 0, k = 0; v < height; v++, k += width) {\\n            items[k] *= 0.5;\\n          }\\n        }\\n      } else {\\n        for (v = 0, k = 0; v < height; v++, k += width) {\\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\\n          this.extend(rowBuffer, bufferPadding, width);\\n          this.filter(rowBuffer, bufferPadding, width);\\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\\n        }\\n      }\\n      var numBuffers = 16;\\n      var colBuffers = [];\\n      for (i = 0; i < numBuffers; i++) {\\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\\n      }\\n      var b,\\n          currentBuffer = 0;\\n      ll = bufferPadding + height;\\n      if (height === 1) {\\n        if ((v0 & 1) !== 0) {\\n          for (u = 0; u < width; u++) {\\n            items[u] *= 0.5;\\n          }\\n        }\\n      } else {\\n        for (u = 0; u < width; u++) {\\n          if (currentBuffer === 0) {\\n            numBuffers = Math.min(width - u, numBuffers);\\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\\n              for (b = 0; b < numBuffers; b++) {\\n                colBuffers[b][l] = items[k + b];\\n              }\\n            }\\n            currentBuffer = numBuffers;\\n          }\\n          currentBuffer--;\\n          var buffer = colBuffers[currentBuffer];\\n          this.extend(buffer, bufferPadding, height);\\n          this.filter(buffer, bufferPadding, height);\\n          if (currentBuffer === 0) {\\n            k = u - numBuffers + 1;\\n            for (l = bufferPadding; l < ll; k += width, l++) {\\n              for (b = 0; b < numBuffers; b++) {\\n                items[k + b] = colBuffers[b][l];\\n              }\\n            }\\n          }\\n        }\\n      }\\n      return {\\n        width: width,\\n        height: height,\\n        items: items\\n      };\\n    };\\n    return Transform;\\n  }();\\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\\n    function IrreversibleTransform() {\\n      Transform.call(this);\\n    }\\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\\n      var len = length >> 1;\\n      offset = offset | 0;\\n      var j, n, current, next;\\n      var alpha = -1.586134342059924;\\n      var beta = -0.052980118572961;\\n      var gamma = 0.882911075530934;\\n      var delta = 0.443506852043971;\\n      var K = 1.230174104914001;\\n      var K_ = 1 / K;\\n      j = offset - 3;\\n      for (n = len + 4; n--; j += 2) {\\n        x[j] *= K_;\\n      }\\n      j = offset - 2;\\n      current = delta * x[j - 1];\\n      for (n = len + 3; n--; j += 2) {\\n        next = delta * x[j + 1];\\n        x[j] = K * x[j] - current - next;\\n        if (n--) {\\n          j += 2;\\n          current = delta * x[j + 1];\\n          x[j] = K * x[j] - current - next;\\n        } else {\\n          break;\\n        }\\n      }\\n      j = offset - 1;\\n      current = gamma * x[j - 1];\\n      for (n = len + 2; n--; j += 2) {\\n        next = gamma * x[j + 1];\\n        x[j] -= current + next;\\n        if (n--) {\\n          j += 2;\\n          current = gamma * x[j + 1];\\n          x[j] -= current + next;\\n        } else {\\n          break;\\n        }\\n      }\\n      j = offset;\\n      current = beta * x[j - 1];\\n      for (n = len + 1; n--; j += 2) {\\n        next = beta * x[j + 1];\\n        x[j] -= current + next;\\n        if (n--) {\\n          j += 2;\\n          current = beta * x[j + 1];\\n          x[j] -= current + next;\\n        } else {\\n          break;\\n        }\\n      }\\n      if (len !== 0) {\\n        j = offset + 1;\\n        current = alpha * x[j - 1];\\n        for (n = len; n--; j += 2) {\\n          next = alpha * x[j + 1];\\n          x[j] -= current + next;\\n          if (n--) {\\n            j += 2;\\n            current = alpha * x[j + 1];\\n            x[j] -= current + next;\\n          } else {\\n            break;\\n          }\\n        }\\n      }\\n    };\\n    return IrreversibleTransform;\\n  }();\\n  var ReversibleTransform = function ReversibleTransformClosure() {\\n    function ReversibleTransform() {\\n      Transform.call(this);\\n    }\\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\\n      var len = length >> 1;\\n      offset = offset | 0;\\n      var j, n;\\n      for (j = offset, n = len + 1; n--; j += 2) {\\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\\n      }\\n      for (j = offset + 1, n = len; n--; j += 2) {\\n        x[j] += x[j - 1] + x[j + 1] >> 1;\\n      }\\n    };\\n    return ReversibleTransform;\\n  }();\\n  return JpxImage;\\n}();\\nexports.JpxImage = JpxImage;\\n\\n/***/ }),\\n/* 68 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar ARCFourCipher = function ARCFourCipherClosure() {\\n  function ARCFourCipher(key) {\\n    this.a = 0;\\n    this.b = 0;\\n    var s = new Uint8Array(256);\\n    var i,\\n        j = 0,\\n        tmp,\\n        keyLength = key.length;\\n    for (i = 0; i < 256; ++i) {\\n      s[i] = i;\\n    }\\n    for (i = 0; i < 256; ++i) {\\n      tmp = s[i];\\n      j = j + tmp + key[i % keyLength] & 0xFF;\\n      s[i] = s[j];\\n      s[j] = tmp;\\n    }\\n    this.s = s;\\n  }\\n  ARCFourCipher.prototype = {\\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\\n      var i,\\n          n = data.length,\\n          tmp,\\n          tmp2;\\n      var a = this.a,\\n          b = this.b,\\n          s = this.s;\\n      var output = new Uint8Array(n);\\n      for (i = 0; i < n; ++i) {\\n        a = a + 1 & 0xFF;\\n        tmp = s[a];\\n        b = b + tmp & 0xFF;\\n        tmp2 = s[b];\\n        s[a] = tmp2;\\n        s[b] = tmp;\\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\\n      }\\n      this.a = a;\\n      this.b = b;\\n      return output;\\n    }\\n  };\\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\\n  return ARCFourCipher;\\n}();\\nvar calculateMD5 = function calculateMD5Closure() {\\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\\n  function hash(data, offset, length) {\\n    var h0 = 1732584193,\\n        h1 = -271733879,\\n        h2 = -1732584194,\\n        h3 = 271733878;\\n    var paddedLength = length + 72 & ~63;\\n    var padded = new Uint8Array(paddedLength);\\n    var i, j, n;\\n    for (i = 0; i < length; ++i) {\\n      padded[i] = data[offset++];\\n    }\\n    padded[i++] = 0x80;\\n    n = paddedLength - 8;\\n    while (i < n) {\\n      padded[i++] = 0;\\n    }\\n    padded[i++] = length << 3 & 0xFF;\\n    padded[i++] = length >> 5 & 0xFF;\\n    padded[i++] = length >> 13 & 0xFF;\\n    padded[i++] = length >> 21 & 0xFF;\\n    padded[i++] = length >>> 29 & 0xFF;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    var w = new Int32Array(16);\\n    for (i = 0; i < paddedLength;) {\\n      for (j = 0; j < 16; ++j, i += 4) {\\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\\n      }\\n      var a = h0,\\n          b = h1,\\n          c = h2,\\n          d = h3,\\n          f,\\n          g;\\n      for (j = 0; j < 64; ++j) {\\n        if (j < 16) {\\n          f = b & c | ~b & d;\\n          g = j;\\n        } else if (j < 32) {\\n          f = d & b | ~d & c;\\n          g = 5 * j + 1 & 15;\\n        } else if (j < 48) {\\n          f = b ^ c ^ d;\\n          g = 3 * j + 5 & 15;\\n        } else {\\n          f = c ^ (b | ~d);\\n          g = 7 * j & 15;\\n        }\\n        var tmp = d,\\n            rotateArg = a + f + k[j] + w[g] | 0,\\n            rotate = r[j];\\n        d = c;\\n        c = b;\\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\\n        a = tmp;\\n      }\\n      h0 = h0 + a | 0;\\n      h1 = h1 + b | 0;\\n      h2 = h2 + c | 0;\\n      h3 = h3 + d | 0;\\n    }\\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\\n  }\\n  return hash;\\n}();\\nvar Word64 = function Word64Closure() {\\n  function Word64(highInteger, lowInteger) {\\n    this.high = highInteger | 0;\\n    this.low = lowInteger | 0;\\n  }\\n  Word64.prototype = {\\n    and: function Word64_and(word) {\\n      this.high &= word.high;\\n      this.low &= word.low;\\n    },\\n    xor: function Word64_xor(word) {\\n      this.high ^= word.high;\\n      this.low ^= word.low;\\n    },\\n    or: function Word64_or(word) {\\n      this.high |= word.high;\\n      this.low |= word.low;\\n    },\\n    shiftRight: function Word64_shiftRight(places) {\\n      if (places >= 32) {\\n        this.low = this.high >>> places - 32 | 0;\\n        this.high = 0;\\n      } else {\\n        this.low = this.low >>> places | this.high << 32 - places;\\n        this.high = this.high >>> places | 0;\\n      }\\n    },\\n    shiftLeft: function Word64_shiftLeft(places) {\\n      if (places >= 32) {\\n        this.high = this.low << places - 32;\\n        this.low = 0;\\n      } else {\\n        this.high = this.high << places | this.low >>> 32 - places;\\n        this.low = this.low << places;\\n      }\\n    },\\n    rotateRight: function Word64_rotateRight(places) {\\n      var low, high;\\n      if (places & 32) {\\n        high = this.low;\\n        low = this.high;\\n      } else {\\n        low = this.low;\\n        high = this.high;\\n      }\\n      places &= 31;\\n      this.low = low >>> places | high << 32 - places;\\n      this.high = high >>> places | low << 32 - places;\\n    },\\n    not: function Word64_not() {\\n      this.high = ~this.high;\\n      this.low = ~this.low;\\n    },\\n    add: function Word64_add(word) {\\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\\n      if (lowAdd > 0xFFFFFFFF) {\\n        highAdd += 1;\\n      }\\n      this.low = lowAdd | 0;\\n      this.high = highAdd | 0;\\n    },\\n    copyTo: function Word64_copyTo(bytes, offset) {\\n      bytes[offset] = this.high >>> 24 & 0xFF;\\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\\n      bytes[offset + 3] = this.high & 0xFF;\\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\\n      bytes[offset + 7] = this.low & 0xFF;\\n    },\\n    assign: function Word64_assign(word) {\\n      this.high = word.high;\\n      this.low = word.low;\\n    }\\n  };\\n  return Word64;\\n}();\\nvar calculateSHA256 = function calculateSHA256Closure() {\\n  function rotr(x, n) {\\n    return x >>> n | x << 32 - n;\\n  }\\n  function ch(x, y, z) {\\n    return x & y ^ ~x & z;\\n  }\\n  function maj(x, y, z) {\\n    return x & y ^ x & z ^ y & z;\\n  }\\n  function sigma(x) {\\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\\n  }\\n  function sigmaPrime(x) {\\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\\n  }\\n  function littleSigma(x) {\\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\\n  }\\n  function littleSigmaPrime(x) {\\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\\n  }\\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\\n  function hash(data, offset, length) {\\n    var h0 = 0x6a09e667,\\n        h1 = 0xbb67ae85,\\n        h2 = 0x3c6ef372,\\n        h3 = 0xa54ff53a,\\n        h4 = 0x510e527f,\\n        h5 = 0x9b05688c,\\n        h6 = 0x1f83d9ab,\\n        h7 = 0x5be0cd19;\\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\\n    var padded = new Uint8Array(paddedLength);\\n    var i, j, n;\\n    for (i = 0; i < length; ++i) {\\n      padded[i] = data[offset++];\\n    }\\n    padded[i++] = 0x80;\\n    n = paddedLength - 8;\\n    while (i < n) {\\n      padded[i++] = 0;\\n    }\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = length >>> 29 & 0xFF;\\n    padded[i++] = length >> 21 & 0xFF;\\n    padded[i++] = length >> 13 & 0xFF;\\n    padded[i++] = length >> 5 & 0xFF;\\n    padded[i++] = length << 3 & 0xFF;\\n    var w = new Uint32Array(64);\\n    for (i = 0; i < paddedLength;) {\\n      for (j = 0; j < 16; ++j) {\\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\n        i += 4;\\n      }\\n      for (j = 16; j < 64; ++j) {\\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\\n      }\\n      var a = h0,\\n          b = h1,\\n          c = h2,\\n          d = h3,\\n          e = h4,\\n          f = h5,\\n          g = h6,\\n          h = h7,\\n          t1,\\n          t2;\\n      for (j = 0; j < 64; ++j) {\\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\\n        t2 = sigma(a) + maj(a, b, c);\\n        h = g;\\n        g = f;\\n        f = e;\\n        e = d + t1 | 0;\\n        d = c;\\n        c = b;\\n        b = a;\\n        a = t1 + t2 | 0;\\n      }\\n      h0 = h0 + a | 0;\\n      h1 = h1 + b | 0;\\n      h2 = h2 + c | 0;\\n      h3 = h3 + d | 0;\\n      h4 = h4 + e | 0;\\n      h5 = h5 + f | 0;\\n      h6 = h6 + g | 0;\\n      h7 = h7 + h | 0;\\n    }\\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\\n  }\\n  return hash;\\n}();\\nvar calculateSHA512 = function calculateSHA512Closure() {\\n  function ch(result, x, y, z, tmp) {\\n    result.assign(x);\\n    result.and(y);\\n    tmp.assign(x);\\n    tmp.not();\\n    tmp.and(z);\\n    result.xor(tmp);\\n  }\\n  function maj(result, x, y, z, tmp) {\\n    result.assign(x);\\n    result.and(y);\\n    tmp.assign(x);\\n    tmp.and(z);\\n    result.xor(tmp);\\n    tmp.assign(y);\\n    tmp.and(z);\\n    result.xor(tmp);\\n  }\\n  function sigma(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(28);\\n    tmp.assign(x);\\n    tmp.rotateRight(34);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.rotateRight(39);\\n    result.xor(tmp);\\n  }\\n  function sigmaPrime(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(14);\\n    tmp.assign(x);\\n    tmp.rotateRight(18);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.rotateRight(41);\\n    result.xor(tmp);\\n  }\\n  function littleSigma(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(1);\\n    tmp.assign(x);\\n    tmp.rotateRight(8);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.shiftRight(7);\\n    result.xor(tmp);\\n  }\\n  function littleSigmaPrime(result, x, tmp) {\\n    result.assign(x);\\n    result.rotateRight(19);\\n    tmp.assign(x);\\n    tmp.rotateRight(61);\\n    result.xor(tmp);\\n    tmp.assign(x);\\n    tmp.shiftRight(6);\\n    result.xor(tmp);\\n  }\\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\\n  function hash(data, offset, length, mode384) {\\n    mode384 = !!mode384;\\n    var h0, h1, h2, h3, h4, h5, h6, h7;\\n    if (!mode384) {\\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\\n      h4 = new Word64(0x510e527f, 0xade682d1);\\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\\n    } else {\\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\\n      h1 = new Word64(0x629a292a, 0x367cd507);\\n      h2 = new Word64(0x9159015a, 0x3070dd17);\\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\\n      h4 = new Word64(0x67332667, 0xffc00b31);\\n      h5 = new Word64(0x8eb44a87, 0x68581511);\\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\\n    }\\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\\n    var padded = new Uint8Array(paddedLength);\\n    var i, j, n;\\n    for (i = 0; i < length; ++i) {\\n      padded[i] = data[offset++];\\n    }\\n    padded[i++] = 0x80;\\n    n = paddedLength - 16;\\n    while (i < n) {\\n      padded[i++] = 0;\\n    }\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = 0;\\n    padded[i++] = length >>> 29 & 0xFF;\\n    padded[i++] = length >> 21 & 0xFF;\\n    padded[i++] = length >> 13 & 0xFF;\\n    padded[i++] = length >> 5 & 0xFF;\\n    padded[i++] = length << 3 & 0xFF;\\n    var w = new Array(80);\\n    for (i = 0; i < 80; i++) {\\n      w[i] = new Word64(0, 0);\\n    }\\n    var a = new Word64(0, 0),\\n        b = new Word64(0, 0),\\n        c = new Word64(0, 0);\\n    var d = new Word64(0, 0),\\n        e = new Word64(0, 0),\\n        f = new Word64(0, 0);\\n    var g = new Word64(0, 0),\\n        h = new Word64(0, 0);\\n    var t1 = new Word64(0, 0),\\n        t2 = new Word64(0, 0);\\n    var tmp1 = new Word64(0, 0),\\n        tmp2 = new Word64(0, 0),\\n        tmp3;\\n    for (i = 0; i < paddedLength;) {\\n      for (j = 0; j < 16; ++j) {\\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\\n        i += 8;\\n      }\\n      for (j = 16; j < 80; ++j) {\\n        tmp3 = w[j];\\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\\n        tmp3.add(w[j - 7]);\\n        littleSigma(tmp1, w[j - 15], tmp2);\\n        tmp3.add(tmp1);\\n        tmp3.add(w[j - 16]);\\n      }\\n      a.assign(h0);\\n      b.assign(h1);\\n      c.assign(h2);\\n      d.assign(h3);\\n      e.assign(h4);\\n      f.assign(h5);\\n      g.assign(h6);\\n      h.assign(h7);\\n      for (j = 0; j < 80; ++j) {\\n        t1.assign(h);\\n        sigmaPrime(tmp1, e, tmp2);\\n        t1.add(tmp1);\\n        ch(tmp1, e, f, g, tmp2);\\n        t1.add(tmp1);\\n        t1.add(k[j]);\\n        t1.add(w[j]);\\n        sigma(t2, a, tmp2);\\n        maj(tmp1, a, b, c, tmp2);\\n        t2.add(tmp1);\\n        tmp3 = h;\\n        h = g;\\n        g = f;\\n        f = e;\\n        d.add(t1);\\n        e = d;\\n        d = c;\\n        c = b;\\n        b = a;\\n        tmp3.assign(t1);\\n        tmp3.add(t2);\\n        a = tmp3;\\n      }\\n      h0.add(a);\\n      h1.add(b);\\n      h2.add(c);\\n      h3.add(d);\\n      h4.add(e);\\n      h5.add(f);\\n      h6.add(g);\\n      h7.add(h);\\n    }\\n    var result;\\n    if (!mode384) {\\n      result = new Uint8Array(64);\\n      h0.copyTo(result, 0);\\n      h1.copyTo(result, 8);\\n      h2.copyTo(result, 16);\\n      h3.copyTo(result, 24);\\n      h4.copyTo(result, 32);\\n      h5.copyTo(result, 40);\\n      h6.copyTo(result, 48);\\n      h7.copyTo(result, 56);\\n    } else {\\n      result = new Uint8Array(48);\\n      h0.copyTo(result, 0);\\n      h1.copyTo(result, 8);\\n      h2.copyTo(result, 16);\\n      h3.copyTo(result, 24);\\n      h4.copyTo(result, 32);\\n      h5.copyTo(result, 40);\\n    }\\n    return result;\\n  }\\n  return hash;\\n}();\\nvar calculateSHA384 = function calculateSHA384Closure() {\\n  function hash(data, offset, length) {\\n    return calculateSHA512(data, offset, length, true);\\n  }\\n  return hash;\\n}();\\nvar NullCipher = function NullCipherClosure() {\\n  function NullCipher() {}\\n  NullCipher.prototype = {\\n    decryptBlock: function NullCipher_decryptBlock(data) {\\n      return data;\\n    }\\n  };\\n  return NullCipher;\\n}();\\nvar AES128Cipher = function AES128CipherClosure() {\\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\\n  var mixCol = new Uint8Array(256);\\n  for (var i = 0; i < 256; i++) {\\n    if (i < 128) {\\n      mixCol[i] = i << 1;\\n    } else {\\n      mixCol[i] = i << 1 ^ 0x1b;\\n    }\\n  }\\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\\n  function expandKey128(cipherKey) {\\n    var b = 176,\\n        result = new Uint8Array(b);\\n    result.set(cipherKey);\\n    for (var j = 16, i = 1; j < b; ++i) {\\n      var t1 = result[j - 3],\\n          t2 = result[j - 2],\\n          t3 = result[j - 1],\\n          t4 = result[j - 4];\\n      t1 = s[t1];\\n      t2 = s[t2];\\n      t3 = s[t3];\\n      t4 = s[t4];\\n      t1 = t1 ^ rcon[i];\\n      for (var n = 0; n < 4; ++n) {\\n        result[j] = t1 ^= result[j - 16];\\n        j++;\\n        result[j] = t2 ^= result[j - 16];\\n        j++;\\n        result[j] = t3 ^= result[j - 16];\\n        j++;\\n        result[j] = t4 ^= result[j - 16];\\n        j++;\\n      }\\n    }\\n    return result;\\n  }\\n  function decrypt128(input, key) {\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    var i, j, k;\\n    var t, u, v;\\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    for (i = 9; i >= 1; --i) {\\n      t = state[13];\\n      state[13] = state[9];\\n      state[9] = state[5];\\n      state[5] = state[1];\\n      state[1] = t;\\n      t = state[14];\\n      u = state[10];\\n      state[14] = state[6];\\n      state[10] = state[2];\\n      state[6] = t;\\n      state[2] = u;\\n      t = state[15];\\n      u = state[11];\\n      v = state[7];\\n      state[15] = state[3];\\n      state[11] = t;\\n      state[7] = u;\\n      state[3] = v;\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = inv_s[state[j]];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = mix[state[j]],\\n            s1 = mix[state[j + 1]],\\n            s2 = mix[state[j + 2]],\\n            s3 = mix[state[j + 3]];\\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\\n        state[j] = t >>> 24 & 0xFF;\\n        state[j + 1] = t >> 16 & 0xFF;\\n        state[j + 2] = t >> 8 & 0xFF;\\n        state[j + 3] = t & 0xFF;\\n      }\\n    }\\n    t = state[13];\\n    state[13] = state[9];\\n    state[9] = state[5];\\n    state[5] = state[1];\\n    state[1] = t;\\n    t = state[14];\\n    u = state[10];\\n    state[14] = state[6];\\n    state[10] = state[2];\\n    state[6] = t;\\n    state[2] = u;\\n    t = state[15];\\n    u = state[11];\\n    v = state[7];\\n    state[15] = state[3];\\n    state[11] = t;\\n    state[7] = u;\\n    state[3] = v;\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = inv_s[state[j]];\\n      state[j] ^= key[j];\\n    }\\n    return state;\\n  }\\n  function encrypt128(input, key) {\\n    var t, u, v, j, k;\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    for (j = 0; j < 16; ++j) {\\n      state[j] ^= key[j];\\n    }\\n    for (i = 1; i < 10; i++) {\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = s[state[j]];\\n      }\\n      v = state[1];\\n      state[1] = state[5];\\n      state[5] = state[9];\\n      state[9] = state[13];\\n      state[13] = v;\\n      v = state[2];\\n      u = state[6];\\n      state[2] = state[10];\\n      state[6] = state[14];\\n      state[10] = v;\\n      state[14] = u;\\n      v = state[3];\\n      u = state[7];\\n      t = state[11];\\n      state[3] = state[15];\\n      state[7] = v;\\n      state[11] = u;\\n      state[15] = t;\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = state[j + 0],\\n            s1 = state[j + 1];\\n        var s2 = state[j + 2],\\n            s3 = state[j + 3];\\n        t = s0 ^ s1 ^ s2 ^ s3;\\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n    }\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = s[state[j]];\\n    }\\n    v = state[1];\\n    state[1] = state[5];\\n    state[5] = state[9];\\n    state[9] = state[13];\\n    state[13] = v;\\n    v = state[2];\\n    u = state[6];\\n    state[2] = state[10];\\n    state[6] = state[14];\\n    state[10] = v;\\n    state[14] = u;\\n    v = state[3];\\n    u = state[7];\\n    t = state[11];\\n    state[3] = state[15];\\n    state[7] = v;\\n    state[11] = u;\\n    state[15] = t;\\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    return state;\\n  }\\n  function AES128Cipher(key) {\\n    this.key = expandKey128(key);\\n    this.buffer = new Uint8Array(16);\\n    this.bufferPosition = 0;\\n  }\\n  function decryptBlock2(data, finalize) {\\n    var i,\\n        j,\\n        ii,\\n        sourceLength = data.length,\\n        buffer = this.buffer,\\n        bufferLength = this.bufferPosition,\\n        result = [],\\n        iv = this.iv;\\n    for (i = 0; i < sourceLength; ++i) {\\n      buffer[bufferLength] = data[i];\\n      ++bufferLength;\\n      if (bufferLength < 16) {\\n        continue;\\n      }\\n      var plain = decrypt128(buffer, this.key);\\n      for (j = 0; j < 16; ++j) {\\n        plain[j] ^= iv[j];\\n      }\\n      iv = buffer;\\n      result.push(plain);\\n      buffer = new Uint8Array(16);\\n      bufferLength = 0;\\n    }\\n    this.buffer = buffer;\\n    this.bufferLength = bufferLength;\\n    this.iv = iv;\\n    if (result.length === 0) {\\n      return new Uint8Array([]);\\n    }\\n    var outputLength = 16 * result.length;\\n    if (finalize) {\\n      var lastBlock = result[result.length - 1];\\n      var psLen = lastBlock[15];\\n      if (psLen <= 16) {\\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\\n          if (lastBlock[i] !== psLen) {\\n            psLen = 0;\\n            break;\\n          }\\n        }\\n        outputLength -= psLen;\\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\\n      }\\n    }\\n    var output = new Uint8Array(outputLength);\\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n      output.set(result[i], j);\\n    }\\n    return output;\\n  }\\n  AES128Cipher.prototype = {\\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\\n      var i,\\n          sourceLength = data.length;\\n      var buffer = this.buffer,\\n          bufferLength = this.bufferPosition;\\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\\n        buffer[bufferLength] = data[i];\\n      }\\n      if (bufferLength < 16) {\\n        this.bufferLength = bufferLength;\\n        return new Uint8Array([]);\\n      }\\n      this.iv = buffer;\\n      this.buffer = new Uint8Array(16);\\n      this.bufferLength = 0;\\n      this.decryptBlock = decryptBlock2;\\n      return this.decryptBlock(data.subarray(16), finalize);\\n    },\\n    encrypt: function AES128Cipher_encrypt(data, iv) {\\n      var i,\\n          j,\\n          ii,\\n          sourceLength = data.length,\\n          buffer = this.buffer,\\n          bufferLength = this.bufferPosition,\\n          result = [];\\n      if (!iv) {\\n        iv = new Uint8Array(16);\\n      }\\n      for (i = 0; i < sourceLength; ++i) {\\n        buffer[bufferLength] = data[i];\\n        ++bufferLength;\\n        if (bufferLength < 16) {\\n          continue;\\n        }\\n        for (j = 0; j < 16; ++j) {\\n          buffer[j] ^= iv[j];\\n        }\\n        var cipher = encrypt128(buffer, this.key);\\n        iv = cipher;\\n        result.push(cipher);\\n        buffer = new Uint8Array(16);\\n        bufferLength = 0;\\n      }\\n      this.buffer = buffer;\\n      this.bufferLength = bufferLength;\\n      this.iv = iv;\\n      if (result.length === 0) {\\n        return new Uint8Array([]);\\n      }\\n      var outputLength = 16 * result.length;\\n      var output = new Uint8Array(outputLength);\\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n        output.set(result[i], j);\\n      }\\n      return output;\\n    }\\n  };\\n  return AES128Cipher;\\n}();\\nvar AES256Cipher = function AES256CipherClosure() {\\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\\n  var mixCol = new Uint8Array(256);\\n  for (var i = 0; i < 256; i++) {\\n    if (i < 128) {\\n      mixCol[i] = i << 1;\\n    } else {\\n      mixCol[i] = i << 1 ^ 0x1b;\\n    }\\n  }\\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\\n  function expandKey256(cipherKey) {\\n    var b = 240,\\n        result = new Uint8Array(b);\\n    var r = 1;\\n    result.set(cipherKey);\\n    for (var j = 32, i = 1; j < b; ++i) {\\n      var t1, t2, t3, t4;\\n      if (j % 32 === 16) {\\n        t1 = s[t1];\\n        t2 = s[t2];\\n        t3 = s[t3];\\n        t4 = s[t4];\\n      } else if (j % 32 === 0) {\\n        t1 = result[j - 3];\\n        t2 = result[j - 2];\\n        t3 = result[j - 1];\\n        t4 = result[j - 4];\\n        t1 = s[t1];\\n        t2 = s[t2];\\n        t3 = s[t3];\\n        t4 = s[t4];\\n        t1 = t1 ^ r;\\n        if ((r <<= 1) >= 256) {\\n          r = (r ^ 0x1b) & 0xFF;\\n        }\\n      }\\n      for (var n = 0; n < 4; ++n) {\\n        result[j] = t1 ^= result[j - 32];\\n        j++;\\n        result[j] = t2 ^= result[j - 32];\\n        j++;\\n        result[j] = t3 ^= result[j - 32];\\n        j++;\\n        result[j] = t4 ^= result[j - 32];\\n        j++;\\n      }\\n    }\\n    return result;\\n  }\\n  function decrypt256(input, key) {\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    var i, j, k;\\n    var t, u, v;\\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    for (i = 13; i >= 1; --i) {\\n      t = state[13];\\n      state[13] = state[9];\\n      state[9] = state[5];\\n      state[5] = state[1];\\n      state[1] = t;\\n      t = state[14];\\n      u = state[10];\\n      state[14] = state[6];\\n      state[10] = state[2];\\n      state[6] = t;\\n      state[2] = u;\\n      t = state[15];\\n      u = state[11];\\n      v = state[7];\\n      state[15] = state[3];\\n      state[11] = t;\\n      state[7] = u;\\n      state[3] = v;\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = inv_s[state[j]];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = mix[state[j]],\\n            s1 = mix[state[j + 1]],\\n            s2 = mix[state[j + 2]],\\n            s3 = mix[state[j + 3]];\\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\\n        state[j] = t >>> 24 & 0xFF;\\n        state[j + 1] = t >> 16 & 0xFF;\\n        state[j + 2] = t >> 8 & 0xFF;\\n        state[j + 3] = t & 0xFF;\\n      }\\n    }\\n    t = state[13];\\n    state[13] = state[9];\\n    state[9] = state[5];\\n    state[5] = state[1];\\n    state[1] = t;\\n    t = state[14];\\n    u = state[10];\\n    state[14] = state[6];\\n    state[10] = state[2];\\n    state[6] = t;\\n    state[2] = u;\\n    t = state[15];\\n    u = state[11];\\n    v = state[7];\\n    state[15] = state[3];\\n    state[11] = t;\\n    state[7] = u;\\n    state[3] = v;\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = inv_s[state[j]];\\n      state[j] ^= key[j];\\n    }\\n    return state;\\n  }\\n  function encrypt256(input, key) {\\n    var t, u, v, i, j, k;\\n    var state = new Uint8Array(16);\\n    state.set(input);\\n    for (j = 0; j < 16; ++j) {\\n      state[j] ^= key[j];\\n    }\\n    for (i = 1; i < 14; i++) {\\n      for (j = 0; j < 16; ++j) {\\n        state[j] = s[state[j]];\\n      }\\n      v = state[1];\\n      state[1] = state[5];\\n      state[5] = state[9];\\n      state[9] = state[13];\\n      state[13] = v;\\n      v = state[2];\\n      u = state[6];\\n      state[2] = state[10];\\n      state[6] = state[14];\\n      state[10] = v;\\n      state[14] = u;\\n      v = state[3];\\n      u = state[7];\\n      t = state[11];\\n      state[3] = state[15];\\n      state[7] = v;\\n      state[11] = u;\\n      state[15] = t;\\n      for (j = 0; j < 16; j += 4) {\\n        var s0 = state[j + 0],\\n            s1 = state[j + 1];\\n        var s2 = state[j + 2],\\n            s3 = state[j + 3];\\n        t = s0 ^ s1 ^ s2 ^ s3;\\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\\n      }\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\n        state[j] ^= key[k];\\n      }\\n    }\\n    for (j = 0; j < 16; ++j) {\\n      state[j] = s[state[j]];\\n    }\\n    v = state[1];\\n    state[1] = state[5];\\n    state[5] = state[9];\\n    state[9] = state[13];\\n    state[13] = v;\\n    v = state[2];\\n    u = state[6];\\n    state[2] = state[10];\\n    state[6] = state[14];\\n    state[10] = v;\\n    state[14] = u;\\n    v = state[3];\\n    u = state[7];\\n    t = state[11];\\n    state[3] = state[15];\\n    state[7] = v;\\n    state[11] = u;\\n    state[15] = t;\\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\\n      state[j] ^= key[k];\\n    }\\n    return state;\\n  }\\n  function AES256Cipher(key) {\\n    this.key = expandKey256(key);\\n    this.buffer = new Uint8Array(16);\\n    this.bufferPosition = 0;\\n  }\\n  function decryptBlock2(data, finalize) {\\n    var i,\\n        j,\\n        ii,\\n        sourceLength = data.length,\\n        buffer = this.buffer,\\n        bufferLength = this.bufferPosition,\\n        result = [],\\n        iv = this.iv;\\n    for (i = 0; i < sourceLength; ++i) {\\n      buffer[bufferLength] = data[i];\\n      ++bufferLength;\\n      if (bufferLength < 16) {\\n        continue;\\n      }\\n      var plain = decrypt256(buffer, this.key);\\n      for (j = 0; j < 16; ++j) {\\n        plain[j] ^= iv[j];\\n      }\\n      iv = buffer;\\n      result.push(plain);\\n      buffer = new Uint8Array(16);\\n      bufferLength = 0;\\n    }\\n    this.buffer = buffer;\\n    this.bufferLength = bufferLength;\\n    this.iv = iv;\\n    if (result.length === 0) {\\n      return new Uint8Array([]);\\n    }\\n    var outputLength = 16 * result.length;\\n    if (finalize) {\\n      var lastBlock = result[result.length - 1];\\n      var psLen = lastBlock[15];\\n      if (psLen <= 16) {\\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\\n          if (lastBlock[i] !== psLen) {\\n            psLen = 0;\\n            break;\\n          }\\n        }\\n        outputLength -= psLen;\\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\\n      }\\n    }\\n    var output = new Uint8Array(outputLength);\\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n      output.set(result[i], j);\\n    }\\n    return output;\\n  }\\n  AES256Cipher.prototype = {\\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\\n      var i,\\n          sourceLength = data.length;\\n      var buffer = this.buffer,\\n          bufferLength = this.bufferPosition;\\n      if (iv) {\\n        this.iv = iv;\\n      } else {\\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\\n          buffer[bufferLength] = data[i];\\n        }\\n        if (bufferLength < 16) {\\n          this.bufferLength = bufferLength;\\n          return new Uint8Array([]);\\n        }\\n        this.iv = buffer;\\n        data = data.subarray(16);\\n      }\\n      this.buffer = new Uint8Array(16);\\n      this.bufferLength = 0;\\n      this.decryptBlock = decryptBlock2;\\n      return this.decryptBlock(data, finalize);\\n    },\\n    encrypt: function AES256Cipher_encrypt(data, iv) {\\n      var i,\\n          j,\\n          ii,\\n          sourceLength = data.length,\\n          buffer = this.buffer,\\n          bufferLength = this.bufferPosition,\\n          result = [];\\n      if (!iv) {\\n        iv = new Uint8Array(16);\\n      }\\n      for (i = 0; i < sourceLength; ++i) {\\n        buffer[bufferLength] = data[i];\\n        ++bufferLength;\\n        if (bufferLength < 16) {\\n          continue;\\n        }\\n        for (j = 0; j < 16; ++j) {\\n          buffer[j] ^= iv[j];\\n        }\\n        var cipher = encrypt256(buffer, this.key);\\n        this.iv = cipher;\\n        result.push(cipher);\\n        buffer = new Uint8Array(16);\\n        bufferLength = 0;\\n      }\\n      this.buffer = buffer;\\n      this.bufferLength = bufferLength;\\n      this.iv = iv;\\n      if (result.length === 0) {\\n        return new Uint8Array([]);\\n      }\\n      var outputLength = 16 * result.length;\\n      var output = new Uint8Array(outputLength);\\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\n        output.set(result[i], j);\\n      }\\n      return output;\\n    }\\n  };\\n  return AES256Cipher;\\n}();\\nvar PDF17 = function PDF17Closure() {\\n  function compareByteArrays(array1, array2) {\\n    if (array1.length !== array2.length) {\\n      return false;\\n    }\\n    for (var i = 0; i < array1.length; i++) {\\n      if (array1[i] !== array2[i]) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n  function PDF17() {}\\n  PDF17.prototype = {\\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerValidationSalt, password.length);\\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\\n      var result = calculateSHA256(hashData, 0, hashData.length);\\n      return compareByteArrays(result, ownerPassword);\\n    },\\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userValidationSalt, password.length);\\n      var result = calculateSHA256(hashData, 0, hashData.length);\\n      return compareByteArrays(result, userPassword);\\n    },\\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerKeySalt, password.length);\\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\\n      var key = calculateSHA256(hashData, 0, hashData.length);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\n    },\\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userKeySalt, password.length);\\n      var key = calculateSHA256(hashData, 0, hashData.length);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\n    }\\n  };\\n  return PDF17;\\n}();\\nvar PDF20 = function PDF20Closure() {\\n  function concatArrays(array1, array2) {\\n    var t = new Uint8Array(array1.length + array2.length);\\n    t.set(array1, 0);\\n    t.set(array2, array1.length);\\n    return t;\\n  }\\n  function calculatePDF20Hash(password, input, userBytes) {\\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\\n    var e = [0];\\n    var i = 0;\\n    while (i < 64 || e[e.length - 1] > i - 32) {\\n      var arrayLength = password.length + k.length + userBytes.length;\\n      var k1 = new Uint8Array(arrayLength * 64);\\n      var array = concatArrays(password, k);\\n      array = concatArrays(array, userBytes);\\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\\n        k1.set(array, pos);\\n      }\\n      var cipher = new AES128Cipher(k.subarray(0, 16));\\n      e = cipher.encrypt(k1, k.subarray(16, 32));\\n      var remainder = 0;\\n      for (var z = 0; z < 16; z++) {\\n        remainder *= 256 % 3;\\n        remainder %= 3;\\n        remainder += (e[z] >>> 0) % 3;\\n        remainder %= 3;\\n      }\\n      if (remainder === 0) {\\n        k = calculateSHA256(e, 0, e.length);\\n      } else if (remainder === 1) {\\n        k = calculateSHA384(e, 0, e.length);\\n      } else if (remainder === 2) {\\n        k = calculateSHA512(e, 0, e.length);\\n      }\\n      i++;\\n    }\\n    return k.subarray(0, 32);\\n  }\\n  function PDF20() {}\\n  function compareByteArrays(array1, array2) {\\n    if (array1.length !== array2.length) {\\n      return false;\\n    }\\n    for (var i = 0; i < array1.length; i++) {\\n      if (array1[i] !== array2[i]) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n  PDF20.prototype = {\\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\\n      return calculatePDF20Hash(password, concatBytes, userBytes);\\n    },\\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerValidationSalt, password.length);\\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\\n      var result = calculatePDF20Hash(password, hashData, userBytes);\\n      return compareByteArrays(result, ownerPassword);\\n    },\\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userValidationSalt, password.length);\\n      var result = calculatePDF20Hash(password, hashData, []);\\n      return compareByteArrays(result, userPassword);\\n    },\\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\n      var hashData = new Uint8Array(password.length + 56);\\n      hashData.set(password, 0);\\n      hashData.set(ownerKeySalt, password.length);\\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\\n      var key = calculatePDF20Hash(password, hashData, userBytes);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\n    },\\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\\n      var hashData = new Uint8Array(password.length + 8);\\n      hashData.set(password, 0);\\n      hashData.set(userKeySalt, password.length);\\n      var key = calculatePDF20Hash(password, hashData, []);\\n      var cipher = new AES256Cipher(key);\\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\n    }\\n  };\\n  return PDF20;\\n}();\\nvar CipherTransform = function CipherTransformClosure() {\\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\\n    this.StringCipherConstructor = stringCipherConstructor;\\n    this.StreamCipherConstructor = streamCipherConstructor;\\n  }\\n  CipherTransform.prototype = {\\n    createStream: function CipherTransform_createStream(stream, length) {\\n      var cipher = new this.StreamCipherConstructor();\\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\\n        return cipher.decryptBlock(data, finalize);\\n      });\\n    },\\n    decryptString: function CipherTransform_decryptString(s) {\\n      var cipher = new this.StringCipherConstructor();\\n      var data = (0, _util.stringToBytes)(s);\\n      data = cipher.decryptBlock(data, true);\\n      return (0, _util.bytesToString)(data);\\n    }\\n  };\\n  return CipherTransform;\\n}();\\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\\n    if (password) {\\n      var passwordLength = Math.min(127, password.length);\\n      password = password.subarray(0, passwordLength);\\n    } else {\\n      password = [];\\n    }\\n    var pdfAlgorithm;\\n    if (revision === 6) {\\n      pdfAlgorithm = new PDF20();\\n    } else {\\n      pdfAlgorithm = new PDF17();\\n    }\\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\\n    }\\n    return null;\\n  }\\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\\n    var hashData = new Uint8Array(hashDataSize),\\n        i = 0,\\n        j,\\n        n;\\n    if (password) {\\n      n = Math.min(32, password.length);\\n      for (; i < n; ++i) {\\n        hashData[i] = password[i];\\n      }\\n    }\\n    j = 0;\\n    while (i < 32) {\\n      hashData[i++] = defaultPasswordBytes[j++];\\n    }\\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\\n      hashData[i++] = ownerPassword[j];\\n    }\\n    hashData[i++] = flags & 0xFF;\\n    hashData[i++] = flags >> 8 & 0xFF;\\n    hashData[i++] = flags >> 16 & 0xFF;\\n    hashData[i++] = flags >>> 24 & 0xFF;\\n    for (j = 0, n = fileId.length; j < n; ++j) {\\n      hashData[i++] = fileId[j];\\n    }\\n    if (revision >= 4 && !encryptMetadata) {\\n      hashData[i++] = 0xFF;\\n      hashData[i++] = 0xFF;\\n      hashData[i++] = 0xFF;\\n      hashData[i++] = 0xFF;\\n    }\\n    var hash = calculateMD5(hashData, 0, i);\\n    var keyLengthInBytes = keyLength >> 3;\\n    if (revision >= 3) {\\n      for (j = 0; j < 50; ++j) {\\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\\n      }\\n    }\\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\\n    var cipher, checkData;\\n    if (revision >= 3) {\\n      for (i = 0; i < 32; ++i) {\\n        hashData[i] = defaultPasswordBytes[i];\\n      }\\n      for (j = 0, n = fileId.length; j < n; ++j) {\\n        hashData[i++] = fileId[j];\\n      }\\n      cipher = new ARCFourCipher(encryptionKey);\\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\\n      n = encryptionKey.length;\\n      var derivedKey = new Uint8Array(n),\\n          k;\\n      for (j = 1; j <= 19; ++j) {\\n        for (k = 0; k < n; ++k) {\\n          derivedKey[k] = encryptionKey[k] ^ j;\\n        }\\n        cipher = new ARCFourCipher(derivedKey);\\n        checkData = cipher.encryptBlock(checkData);\\n      }\\n      for (j = 0, n = checkData.length; j < n; ++j) {\\n        if (userPassword[j] !== checkData[j]) {\\n          return null;\\n        }\\n      }\\n    } else {\\n      cipher = new ARCFourCipher(encryptionKey);\\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\\n      for (j = 0, n = checkData.length; j < n; ++j) {\\n        if (userPassword[j] !== checkData[j]) {\\n          return null;\\n        }\\n      }\\n    }\\n    return encryptionKey;\\n  }\\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\\n    var hashData = new Uint8Array(32),\\n        i = 0,\\n        j,\\n        n;\\n    n = Math.min(32, password.length);\\n    for (; i < n; ++i) {\\n      hashData[i] = password[i];\\n    }\\n    j = 0;\\n    while (i < 32) {\\n      hashData[i++] = defaultPasswordBytes[j++];\\n    }\\n    var hash = calculateMD5(hashData, 0, i);\\n    var keyLengthInBytes = keyLength >> 3;\\n    if (revision >= 3) {\\n      for (j = 0; j < 50; ++j) {\\n        hash = calculateMD5(hash, 0, hash.length);\\n      }\\n    }\\n    var cipher, userPassword;\\n    if (revision >= 3) {\\n      userPassword = ownerPassword;\\n      var derivedKey = new Uint8Array(keyLengthInBytes),\\n          k;\\n      for (j = 19; j >= 0; j--) {\\n        for (k = 0; k < keyLengthInBytes; ++k) {\\n          derivedKey[k] = hash[k] ^ j;\\n        }\\n        cipher = new ARCFourCipher(derivedKey);\\n        userPassword = cipher.encryptBlock(userPassword);\\n      }\\n    } else {\\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\\n      userPassword = cipher.encryptBlock(ownerPassword);\\n    }\\n    return userPassword;\\n  }\\n  var identityName = _primitives.Name.get('Identity');\\n  function CipherTransformFactory(dict, fileId, password) {\\n    var filter = dict.get('Filter');\\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\\n      throw new _util.FormatError('unknown encryption method');\\n    }\\n    this.dict = dict;\\n    var algorithm = dict.get('V');\\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\\n      throw new _util.FormatError('unsupported encryption algorithm');\\n    }\\n    this.algorithm = algorithm;\\n    var keyLength = dict.get('Length');\\n    if (!keyLength) {\\n      if (algorithm <= 3) {\\n        keyLength = 40;\\n      } else {\\n        var cfDict = dict.get('CF');\\n        var streamCryptoName = dict.get('StmF');\\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\\n          cfDict.suppressEncryption = true;\\n          var handlerDict = cfDict.get(streamCryptoName.name);\\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\\n          if (keyLength < 40) {\\n            keyLength <<= 3;\\n          }\\n        }\\n      }\\n    }\\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\\n      throw new _util.FormatError('invalid key length');\\n    }\\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\\n    var flags = dict.get('P');\\n    var revision = dict.get('R');\\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\\n    this.encryptMetadata = encryptMetadata;\\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\\n    var passwordBytes;\\n    if (password) {\\n      if (revision === 6) {\\n        try {\\n          password = (0, _util.utf8StringToString)(password);\\n        } catch (ex) {\\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\\n        }\\n      }\\n      passwordBytes = (0, _util.stringToBytes)(password);\\n    }\\n    var encryptionKey;\\n    if (algorithm !== 5) {\\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\n    } else {\\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\\n    }\\n    if (!encryptionKey && !password) {\\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\\n    } else if (!encryptionKey && password) {\\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\n    }\\n    if (!encryptionKey) {\\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\\n    }\\n    this.encryptionKey = encryptionKey;\\n    if (algorithm >= 4) {\\n      var cf = dict.get('CF');\\n      if ((0, _primitives.isDict)(cf)) {\\n        cf.suppressEncryption = true;\\n      }\\n      this.cf = cf;\\n      this.stmf = dict.get('StmF') || identityName;\\n      this.strf = dict.get('StrF') || identityName;\\n      this.eff = dict.get('EFF') || this.stmf;\\n    }\\n  }\\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\\n    var key = new Uint8Array(encryptionKey.length + 9),\\n        i,\\n        n;\\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\\n      key[i] = encryptionKey[i];\\n    }\\n    key[i++] = num & 0xFF;\\n    key[i++] = num >> 8 & 0xFF;\\n    key[i++] = num >> 16 & 0xFF;\\n    key[i++] = gen & 0xFF;\\n    key[i++] = gen >> 8 & 0xFF;\\n    if (isAes) {\\n      key[i++] = 0x73;\\n      key[i++] = 0x41;\\n      key[i++] = 0x6C;\\n      key[i++] = 0x54;\\n    }\\n    var hash = calculateMD5(key, 0, i);\\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\\n  }\\n  function buildCipherConstructor(cf, name, num, gen, key) {\\n    if (!(0, _primitives.isName)(name)) {\\n      throw new _util.FormatError('Invalid crypt filter name.');\\n    }\\n    var cryptFilter = cf.get(name.name);\\n    var cfm;\\n    if (cryptFilter !== null && cryptFilter !== undefined) {\\n      cfm = cryptFilter.get('CFM');\\n    }\\n    if (!cfm || cfm.name === 'None') {\\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\\n        return new NullCipher();\\n      };\\n    }\\n    if (cfm.name === 'V2') {\\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\\n      };\\n    }\\n    if (cfm.name === 'AESV2') {\\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\\n      };\\n    }\\n    if (cfm.name === 'AESV3') {\\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\\n        return new AES256Cipher(key);\\n      };\\n    }\\n    throw new _util.FormatError('Unknown crypto method');\\n  }\\n  CipherTransformFactory.prototype = {\\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\\n      if (this.algorithm === 4 || this.algorithm === 5) {\\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\\n      }\\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\\n      var cipherConstructor = function buildCipherCipherConstructor() {\\n        return new ARCFourCipher(key);\\n      };\\n      return new CipherTransform(cipherConstructor, cipherConstructor);\\n    }\\n  };\\n  return CipherTransformFactory;\\n}();\\nexports.AES128Cipher = AES128Cipher;\\nexports.AES256Cipher = AES256Cipher;\\nexports.ARCFourCipher = ARCFourCipher;\\nexports.CipherTransformFactory = CipherTransformFactory;\\nexports.PDF17 = PDF17;\\nexports.PDF20 = PDF20;\\nexports.calculateMD5 = calculateMD5;\\nexports.calculateSHA256 = calculateSHA256;\\nexports.calculateSHA384 = calculateSHA384;\\nexports.calculateSHA512 = calculateSHA512;\\n\\n/***/ }),\\n/* 69 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _charsets = __w_pdfjs_require__(138);\\n\\nvar _encodings = __w_pdfjs_require__(21);\\n\\nvar MAX_SUBR_NESTING = 10;\\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\\nvar CFFParser = function CFFParserClosure() {\\n  var CharstringValidationData = [null, {\\n    id: 'hstem',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, null, {\\n    id: 'vstem',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, {\\n    id: 'vmoveto',\\n    min: 1,\\n    stackClearing: true\\n  }, {\\n    id: 'rlineto',\\n    min: 2,\\n    resetStack: true\\n  }, {\\n    id: 'hlineto',\\n    min: 1,\\n    resetStack: true\\n  }, {\\n    id: 'vlineto',\\n    min: 1,\\n    resetStack: true\\n  }, {\\n    id: 'rrcurveto',\\n    min: 6,\\n    resetStack: true\\n  }, null, {\\n    id: 'callsubr',\\n    min: 1,\\n    undefStack: true\\n  }, {\\n    id: 'return',\\n    min: 0,\\n    undefStack: true\\n  }, null, null, {\\n    id: 'endchar',\\n    min: 0,\\n    stackClearing: true\\n  }, null, null, null, {\\n    id: 'hstemhm',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, {\\n    id: 'hintmask',\\n    min: 0,\\n    stackClearing: true\\n  }, {\\n    id: 'cntrmask',\\n    min: 0,\\n    stackClearing: true\\n  }, {\\n    id: 'rmoveto',\\n    min: 2,\\n    stackClearing: true\\n  }, {\\n    id: 'hmoveto',\\n    min: 1,\\n    stackClearing: true\\n  }, {\\n    id: 'vstemhm',\\n    min: 2,\\n    stackClearing: true,\\n    stem: true\\n  }, {\\n    id: 'rcurveline',\\n    min: 8,\\n    resetStack: true\\n  }, {\\n    id: 'rlinecurve',\\n    min: 8,\\n    resetStack: true\\n  }, {\\n    id: 'vvcurveto',\\n    min: 4,\\n    resetStack: true\\n  }, {\\n    id: 'hhcurveto',\\n    min: 4,\\n    resetStack: true\\n  }, null, {\\n    id: 'callgsubr',\\n    min: 1,\\n    undefStack: true\\n  }, {\\n    id: 'vhcurveto',\\n    min: 4,\\n    resetStack: true\\n  }, {\\n    id: 'hvcurveto',\\n    min: 4,\\n    resetStack: true\\n  }];\\n  var CharstringValidationData12 = [null, null, null, {\\n    id: 'and',\\n    min: 2,\\n    stackDelta: -1\\n  }, {\\n    id: 'or',\\n    min: 2,\\n    stackDelta: -1\\n  }, {\\n    id: 'not',\\n    min: 1,\\n    stackDelta: 0\\n  }, null, null, null, {\\n    id: 'abs',\\n    min: 1,\\n    stackDelta: 0\\n  }, {\\n    id: 'add',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\\n    }\\n  }, {\\n    id: 'sub',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\\n    }\\n  }, {\\n    id: 'div',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\\n    }\\n  }, null, {\\n    id: 'neg',\\n    min: 1,\\n    stackDelta: 0,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 1] = -stack[index - 1];\\n    }\\n  }, {\\n    id: 'eq',\\n    min: 2,\\n    stackDelta: -1\\n  }, null, null, {\\n    id: 'drop',\\n    min: 1,\\n    stackDelta: -1\\n  }, null, {\\n    id: 'put',\\n    min: 2,\\n    stackDelta: -2\\n  }, {\\n    id: 'get',\\n    min: 1,\\n    stackDelta: 0\\n  }, {\\n    id: 'ifelse',\\n    min: 4,\\n    stackDelta: -3\\n  }, {\\n    id: 'random',\\n    min: 0,\\n    stackDelta: 1\\n  }, {\\n    id: 'mul',\\n    min: 2,\\n    stackDelta: -1,\\n    stackFn: function stack_div(stack, index) {\\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\\n    }\\n  }, null, {\\n    id: 'sqrt',\\n    min: 1,\\n    stackDelta: 0\\n  }, {\\n    id: 'dup',\\n    min: 1,\\n    stackDelta: 1\\n  }, {\\n    id: 'exch',\\n    min: 2,\\n    stackDelta: 0\\n  }, {\\n    id: 'index',\\n    min: 2,\\n    stackDelta: 0\\n  }, {\\n    id: 'roll',\\n    min: 3,\\n    stackDelta: -2\\n  }, null, null, null, {\\n    id: 'hflex',\\n    min: 7,\\n    resetStack: true\\n  }, {\\n    id: 'flex',\\n    min: 13,\\n    resetStack: true\\n  }, {\\n    id: 'hflex1',\\n    min: 9,\\n    resetStack: true\\n  }, {\\n    id: 'flex1',\\n    min: 11,\\n    resetStack: true\\n  }];\\n  function CFFParser(file, properties, seacAnalysisEnabled) {\\n    this.bytes = file.getBytes();\\n    this.properties = properties;\\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\n  }\\n  CFFParser.prototype = {\\n    parse: function CFFParser_parse() {\\n      var properties = this.properties;\\n      var cff = new CFF();\\n      this.cff = cff;\\n      var header = this.parseHeader();\\n      var nameIndex = this.parseIndex(header.endPos);\\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\\n      cff.header = header.obj;\\n      cff.names = this.parseNameIndex(nameIndex.obj);\\n      cff.strings = this.parseStringIndex(stringIndex.obj);\\n      cff.topDict = topDict;\\n      cff.globalSubrIndex = globalSubrIndex.obj;\\n      this.parsePrivateDict(cff.topDict);\\n      cff.isCIDFont = topDict.hasName('ROS');\\n      var charStringOffset = topDict.getByName('CharStrings');\\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\\n      var fontMatrix = topDict.getByName('FontMatrix');\\n      if (fontMatrix) {\\n        properties.fontMatrix = fontMatrix;\\n      }\\n      var fontBBox = topDict.getByName('FontBBox');\\n      if (fontBBox) {\\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\n        properties.ascentScaled = true;\\n      }\\n      var charset, encoding;\\n      if (cff.isCIDFont) {\\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\\n          var dictRaw = fdArrayIndex.get(i);\\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\\n          this.parsePrivateDict(fontDict);\\n          cff.fdArray.push(fontDict);\\n        }\\n        encoding = null;\\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\\n      } else {\\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\\n      }\\n      cff.charset = charset;\\n      cff.encoding = encoding;\\n      var charStringsAndSeacs = this.parseCharStrings({\\n        charStrings: charStringIndex,\\n        localSubrIndex: topDict.privateDict.subrsIndex,\\n        globalSubrIndex: globalSubrIndex.obj,\\n        fdSelect: cff.fdSelect,\\n        fdArray: cff.fdArray,\\n        privateDict: topDict.privateDict\\n      });\\n      cff.charStrings = charStringsAndSeacs.charStrings;\\n      cff.seacs = charStringsAndSeacs.seacs;\\n      cff.widths = charStringsAndSeacs.widths;\\n      return cff;\\n    },\\n    parseHeader: function CFFParser_parseHeader() {\\n      var bytes = this.bytes;\\n      var bytesLength = bytes.length;\\n      var offset = 0;\\n      while (offset < bytesLength && bytes[offset] !== 1) {\\n        ++offset;\\n      }\\n      if (offset >= bytesLength) {\\n        throw new _util.FormatError('Invalid CFF header');\\n      }\\n      if (offset !== 0) {\\n        (0, _util.info)('cff data is shifted');\\n        bytes = bytes.subarray(offset);\\n        this.bytes = bytes;\\n      }\\n      var major = bytes[0];\\n      var minor = bytes[1];\\n      var hdrSize = bytes[2];\\n      var offSize = bytes[3];\\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\\n      return {\\n        obj: header,\\n        endPos: hdrSize\\n      };\\n    },\\n    parseDict: function CFFParser_parseDict(dict) {\\n      var pos = 0;\\n      function parseOperand() {\\n        var value = dict[pos++];\\n        if (value === 30) {\\n          return parseFloatOperand();\\n        } else if (value === 28) {\\n          value = dict[pos++];\\n          value = (value << 24 | dict[pos++] << 16) >> 16;\\n          return value;\\n        } else if (value === 29) {\\n          value = dict[pos++];\\n          value = value << 8 | dict[pos++];\\n          value = value << 8 | dict[pos++];\\n          value = value << 8 | dict[pos++];\\n          return value;\\n        } else if (value >= 32 && value <= 246) {\\n          return value - 139;\\n        } else if (value >= 247 && value <= 250) {\\n          return (value - 247) * 256 + dict[pos++] + 108;\\n        } else if (value >= 251 && value <= 254) {\\n          return -((value - 251) * 256) - dict[pos++] - 108;\\n        }\\n        (0, _util.warn)('CFFParser_parseDict: \\\"' + value + '\\\" is a reserved command.');\\n        return NaN;\\n      }\\n      function parseFloatOperand() {\\n        var str = '';\\n        var eof = 15;\\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\\n        var length = dict.length;\\n        while (pos < length) {\\n          var b = dict[pos++];\\n          var b1 = b >> 4;\\n          var b2 = b & 15;\\n          if (b1 === eof) {\\n            break;\\n          }\\n          str += lookup[b1];\\n          if (b2 === eof) {\\n            break;\\n          }\\n          str += lookup[b2];\\n        }\\n        return parseFloat(str);\\n      }\\n      var operands = [];\\n      var entries = [];\\n      pos = 0;\\n      var end = dict.length;\\n      while (pos < end) {\\n        var b = dict[pos];\\n        if (b <= 21) {\\n          if (b === 12) {\\n            b = b << 8 | dict[++pos];\\n          }\\n          entries.push([b, operands]);\\n          operands = [];\\n          ++pos;\\n        } else {\\n          operands.push(parseOperand());\\n        }\\n      }\\n      return entries;\\n    },\\n    parseIndex: function CFFParser_parseIndex(pos) {\\n      var cffIndex = new CFFIndex();\\n      var bytes = this.bytes;\\n      var count = bytes[pos++] << 8 | bytes[pos++];\\n      var offsets = [];\\n      var end = pos;\\n      var i, ii;\\n      if (count !== 0) {\\n        var offsetSize = bytes[pos++];\\n        var startPos = pos + (count + 1) * offsetSize - 1;\\n        for (i = 0, ii = count + 1; i < ii; ++i) {\\n          var offset = 0;\\n          for (var j = 0; j < offsetSize; ++j) {\\n            offset <<= 8;\\n            offset += bytes[pos++];\\n          }\\n          offsets.push(startPos + offset);\\n        }\\n        end = offsets[count];\\n      }\\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\\n        var offsetStart = offsets[i];\\n        var offsetEnd = offsets[i + 1];\\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\\n      }\\n      return {\\n        obj: cffIndex,\\n        endPos: end\\n      };\\n    },\\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\\n      var names = [];\\n      for (var i = 0, ii = index.count; i < ii; ++i) {\\n        var name = index.get(i);\\n        names.push((0, _util.bytesToString)(name));\\n      }\\n      return names;\\n    },\\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\\n      var strings = new CFFStrings();\\n      for (var i = 0, ii = index.count; i < ii; ++i) {\\n        var data = index.get(i);\\n        strings.add((0, _util.bytesToString)(data));\\n      }\\n      return strings;\\n    },\\n    createDict: function CFFParser_createDict(Type, dict, strings) {\\n      var cffDict = new Type(strings);\\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\\n        var pair = dict[i];\\n        var key = pair[0];\\n        var value = pair[1];\\n        cffDict.setByKey(key, value);\\n      }\\n      return cffDict;\\n    },\\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\\n        return false;\\n      }\\n      var stackSize = state.stackSize;\\n      var stack = state.stack;\\n      var length = data.length;\\n      for (var j = 0; j < length;) {\\n        var value = data[j++];\\n        var validationCommand = null;\\n        if (value === 12) {\\n          var q = data[j++];\\n          if (q === 0) {\\n            data[j - 2] = 139;\\n            data[j - 1] = 22;\\n            stackSize = 0;\\n          } else {\\n            validationCommand = CharstringValidationData12[q];\\n          }\\n        } else if (value === 28) {\\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\\n          j += 2;\\n          stackSize++;\\n        } else if (value === 14) {\\n          if (stackSize >= 4) {\\n            stackSize -= 4;\\n            if (this.seacAnalysisEnabled) {\\n              state.seac = stack.slice(stackSize, stackSize + 4);\\n              return false;\\n            }\\n          }\\n          validationCommand = CharstringValidationData[value];\\n        } else if (value >= 32 && value <= 246) {\\n          stack[stackSize] = value - 139;\\n          stackSize++;\\n        } else if (value >= 247 && value <= 254) {\\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\\n          j++;\\n          stackSize++;\\n        } else if (value === 255) {\\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\\n          j += 4;\\n          stackSize++;\\n        } else if (value === 19 || value === 20) {\\n          state.hints += stackSize >> 1;\\n          j += state.hints + 7 >> 3;\\n          stackSize %= 2;\\n          validationCommand = CharstringValidationData[value];\\n        } else if (value === 10 || value === 29) {\\n          var subrsIndex;\\n          if (value === 10) {\\n            subrsIndex = localSubrIndex;\\n          } else {\\n            subrsIndex = globalSubrIndex;\\n          }\\n          if (!subrsIndex) {\\n            validationCommand = CharstringValidationData[value];\\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\\n            return false;\\n          }\\n          var bias = 32768;\\n          if (subrsIndex.count < 1240) {\\n            bias = 107;\\n          } else if (subrsIndex.count < 33900) {\\n            bias = 1131;\\n          }\\n          var subrNumber = stack[--stackSize] + bias;\\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\\n            validationCommand = CharstringValidationData[value];\\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\\n            return false;\\n          }\\n          state.stackSize = stackSize;\\n          state.callDepth++;\\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\\n          if (!valid) {\\n            return false;\\n          }\\n          state.callDepth--;\\n          stackSize = state.stackSize;\\n          continue;\\n        } else if (value === 11) {\\n          state.stackSize = stackSize;\\n          return true;\\n        } else {\\n          validationCommand = CharstringValidationData[value];\\n        }\\n        if (validationCommand) {\\n          if (validationCommand.stem) {\\n            state.hints += stackSize >> 1;\\n          }\\n          if ('min' in validationCommand) {\\n            if (!state.undefStack && stackSize < validationCommand.min) {\\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\\n              return false;\\n            }\\n          }\\n          if (state.firstStackClearing && validationCommand.stackClearing) {\\n            state.firstStackClearing = false;\\n            stackSize -= validationCommand.min;\\n            if (stackSize >= 2 && validationCommand.stem) {\\n              stackSize %= 2;\\n            } else if (stackSize > 1) {\\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\\n            }\\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\\n              state.width = stack[stackSize - 1];\\n            }\\n          }\\n          if ('stackDelta' in validationCommand) {\\n            if ('stackFn' in validationCommand) {\\n              validationCommand.stackFn(stack, stackSize);\\n            }\\n            stackSize += validationCommand.stackDelta;\\n          } else if (validationCommand.stackClearing) {\\n            stackSize = 0;\\n          } else if (validationCommand.resetStack) {\\n            stackSize = 0;\\n            state.undefStack = false;\\n          } else if (validationCommand.undefStack) {\\n            stackSize = 0;\\n            state.undefStack = true;\\n            state.firstStackClearing = false;\\n          }\\n        }\\n      }\\n      state.stackSize = stackSize;\\n      return true;\\n    },\\n    parseCharStrings: function parseCharStrings(_ref) {\\n      var charStrings = _ref.charStrings,\\n          localSubrIndex = _ref.localSubrIndex,\\n          globalSubrIndex = _ref.globalSubrIndex,\\n          fdSelect = _ref.fdSelect,\\n          fdArray = _ref.fdArray,\\n          privateDict = _ref.privateDict;\\n\\n      var seacs = [];\\n      var widths = [];\\n      var count = charStrings.count;\\n      for (var i = 0; i < count; i++) {\\n        var charstring = charStrings.get(i);\\n        var state = {\\n          callDepth: 0,\\n          stackSize: 0,\\n          stack: [],\\n          undefStack: true,\\n          hints: 0,\\n          firstStackClearing: true,\\n          seac: null,\\n          width: null\\n        };\\n        var valid = true;\\n        var localSubrToUse = null;\\n        var privateDictToUse = privateDict;\\n        if (fdSelect && fdArray.length) {\\n          var fdIndex = fdSelect.getFDIndex(i);\\n          if (fdIndex === -1) {\\n            (0, _util.warn)('Glyph index is not in fd select.');\\n            valid = false;\\n          }\\n          if (fdIndex >= fdArray.length) {\\n            (0, _util.warn)('Invalid fd index for glyph index.');\\n            valid = false;\\n          }\\n          if (valid) {\\n            privateDictToUse = fdArray[fdIndex].privateDict;\\n            localSubrToUse = privateDictToUse.subrsIndex;\\n          }\\n        } else if (localSubrIndex) {\\n          localSubrToUse = localSubrIndex;\\n        }\\n        if (valid) {\\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\\n        }\\n        if (state.width !== null) {\\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\\n          widths[i] = nominalWidth + state.width;\\n        } else {\\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\\n          widths[i] = defaultWidth;\\n        }\\n        if (state.seac !== null) {\\n          seacs[i] = state.seac;\\n        }\\n        if (!valid) {\\n          charStrings.set(i, new Uint8Array([14]));\\n        }\\n      }\\n      return {\\n        charStrings: charStrings,\\n        seacs: seacs,\\n        widths: widths\\n      };\\n    },\\n\\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\\n      parentDict.setByKey(18, [0, 0]);\\n      parentDict.privateDict = privateDict;\\n    },\\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\\n      if (!parentDict.hasName('Private')) {\\n        this.emptyPrivateDictionary(parentDict);\\n        return;\\n      }\\n      var privateOffset = parentDict.getByName('Private');\\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\\n        parentDict.removeByName('Private');\\n        return;\\n      }\\n      var size = privateOffset[0];\\n      var offset = privateOffset[1];\\n      if (size === 0 || offset >= this.bytes.length) {\\n        this.emptyPrivateDictionary(parentDict);\\n        return;\\n      }\\n      var privateDictEnd = offset + size;\\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\\n      var dict = this.parseDict(dictData);\\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\\n      parentDict.privateDict = privateDict;\\n      if (!privateDict.getByName('Subrs')) {\\n        return;\\n      }\\n      var subrsOffset = privateDict.getByName('Subrs');\\n      var relativeOffset = offset + subrsOffset;\\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\\n        this.emptyPrivateDictionary(parentDict);\\n        return;\\n      }\\n      var subrsIndex = this.parseIndex(relativeOffset);\\n      privateDict.subrsIndex = subrsIndex.obj;\\n    },\\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\\n      if (pos === 0) {\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\\n      } else if (pos === 1) {\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\\n      } else if (pos === 2) {\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\\n      }\\n      var bytes = this.bytes;\\n      var start = pos;\\n      var format = bytes[pos++];\\n      var charset = ['.notdef'];\\n      var id, count, i;\\n      length -= 1;\\n      switch (format) {\\n        case 0:\\n          for (i = 0; i < length; i++) {\\n            id = bytes[pos++] << 8 | bytes[pos++];\\n            charset.push(cid ? id : strings.get(id));\\n          }\\n          break;\\n        case 1:\\n          while (charset.length <= length) {\\n            id = bytes[pos++] << 8 | bytes[pos++];\\n            count = bytes[pos++];\\n            for (i = 0; i <= count; i++) {\\n              charset.push(cid ? id++ : strings.get(id++));\\n            }\\n          }\\n          break;\\n        case 2:\\n          while (charset.length <= length) {\\n            id = bytes[pos++] << 8 | bytes[pos++];\\n            count = bytes[pos++] << 8 | bytes[pos++];\\n            for (i = 0; i <= count; i++) {\\n              charset.push(cid ? id++ : strings.get(id++));\\n            }\\n          }\\n          break;\\n        default:\\n          throw new _util.FormatError('Unknown charset format');\\n      }\\n      var end = pos;\\n      var raw = bytes.subarray(start, end);\\n      return new CFFCharset(false, format, charset, raw);\\n    },\\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\\n      var encoding = Object.create(null);\\n      var bytes = this.bytes;\\n      var predefined = false;\\n      var format, i, ii;\\n      var raw = null;\\n      function readSupplement() {\\n        var supplementsCount = bytes[pos++];\\n        for (i = 0; i < supplementsCount; i++) {\\n          var code = bytes[pos++];\\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\\n          encoding[code] = charset.indexOf(strings.get(sid));\\n        }\\n      }\\n      if (pos === 0 || pos === 1) {\\n        predefined = true;\\n        format = pos;\\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\\n        for (i = 0, ii = charset.length; i < ii; i++) {\\n          var index = baseEncoding.indexOf(charset[i]);\\n          if (index !== -1) {\\n            encoding[index] = i;\\n          }\\n        }\\n      } else {\\n        var dataStart = pos;\\n        format = bytes[pos++];\\n        switch (format & 0x7f) {\\n          case 0:\\n            var glyphsCount = bytes[pos++];\\n            for (i = 1; i <= glyphsCount; i++) {\\n              encoding[bytes[pos++]] = i;\\n            }\\n            break;\\n          case 1:\\n            var rangesCount = bytes[pos++];\\n            var gid = 1;\\n            for (i = 0; i < rangesCount; i++) {\\n              var start = bytes[pos++];\\n              var left = bytes[pos++];\\n              for (var j = start; j <= start + left; j++) {\\n                encoding[j] = gid++;\\n              }\\n            }\\n            break;\\n          default:\\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\\n        }\\n        var dataEnd = pos;\\n        if (format & 0x80) {\\n          bytes[dataStart] &= 0x7f;\\n          readSupplement();\\n        }\\n        raw = bytes.subarray(dataStart, dataEnd);\\n      }\\n      format = format & 0x7f;\\n      return new CFFEncoding(predefined, format, encoding, raw);\\n    },\\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\\n      var start = pos;\\n      var bytes = this.bytes;\\n      var format = bytes[pos++];\\n      var fdSelect = [],\\n          rawBytes;\\n      var i,\\n          invalidFirstGID = false;\\n      switch (format) {\\n        case 0:\\n          for (i = 0; i < length; ++i) {\\n            var id = bytes[pos++];\\n            fdSelect.push(id);\\n          }\\n          rawBytes = bytes.subarray(start, pos);\\n          break;\\n        case 3:\\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\\n          for (i = 0; i < rangesCount; ++i) {\\n            var first = bytes[pos++] << 8 | bytes[pos++];\\n            if (i === 0 && first !== 0) {\\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\\n              invalidFirstGID = true;\\n              first = 0;\\n            }\\n            var fdIndex = bytes[pos++];\\n            var next = bytes[pos] << 8 | bytes[pos + 1];\\n            for (var j = first; j < next; ++j) {\\n              fdSelect.push(fdIndex);\\n            }\\n          }\\n          pos += 2;\\n          rawBytes = bytes.subarray(start, pos);\\n          if (invalidFirstGID) {\\n            rawBytes[3] = rawBytes[4] = 0;\\n          }\\n          break;\\n        default:\\n          throw new _util.FormatError('parseFDSelect: Unknown format \\\"' + format + '\\\".');\\n      }\\n      if (fdSelect.length !== length) {\\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\\n      }\\n      return new CFFFDSelect(fdSelect, rawBytes);\\n    }\\n  };\\n  return CFFParser;\\n}();\\nvar CFF = function CFFClosure() {\\n  function CFF() {\\n    this.header = null;\\n    this.names = [];\\n    this.topDict = null;\\n    this.strings = new CFFStrings();\\n    this.globalSubrIndex = null;\\n    this.encoding = null;\\n    this.charset = null;\\n    this.charStrings = null;\\n    this.fdArray = [];\\n    this.fdSelect = null;\\n    this.isCIDFont = false;\\n  }\\n  return CFF;\\n}();\\nvar CFFHeader = function CFFHeaderClosure() {\\n  function CFFHeader(major, minor, hdrSize, offSize) {\\n    this.major = major;\\n    this.minor = minor;\\n    this.hdrSize = hdrSize;\\n    this.offSize = offSize;\\n  }\\n  return CFFHeader;\\n}();\\nvar CFFStrings = function CFFStringsClosure() {\\n  function CFFStrings() {\\n    this.strings = [];\\n  }\\n  CFFStrings.prototype = {\\n    get: function CFFStrings_get(index) {\\n      if (index >= 0 && index <= 390) {\\n        return CFFStandardStrings[index];\\n      }\\n      if (index - 391 <= this.strings.length) {\\n        return this.strings[index - 391];\\n      }\\n      return CFFStandardStrings[0];\\n    },\\n    add: function CFFStrings_add(value) {\\n      this.strings.push(value);\\n    },\\n    get count() {\\n      return this.strings.length;\\n    }\\n  };\\n  return CFFStrings;\\n}();\\nvar CFFIndex = function CFFIndexClosure() {\\n  function CFFIndex() {\\n    this.objects = [];\\n    this.length = 0;\\n  }\\n  CFFIndex.prototype = {\\n    add: function CFFIndex_add(data) {\\n      this.length += data.length;\\n      this.objects.push(data);\\n    },\\n    set: function CFFIndex_set(index, data) {\\n      this.length += data.length - this.objects[index].length;\\n      this.objects[index] = data;\\n    },\\n    get: function CFFIndex_get(index) {\\n      return this.objects[index];\\n    },\\n    get count() {\\n      return this.objects.length;\\n    }\\n  };\\n  return CFFIndex;\\n}();\\nvar CFFDict = function CFFDictClosure() {\\n  function CFFDict(tables, strings) {\\n    this.keyToNameMap = tables.keyToNameMap;\\n    this.nameToKeyMap = tables.nameToKeyMap;\\n    this.defaults = tables.defaults;\\n    this.types = tables.types;\\n    this.opcodes = tables.opcodes;\\n    this.order = tables.order;\\n    this.strings = strings;\\n    this.values = Object.create(null);\\n  }\\n  CFFDict.prototype = {\\n    setByKey: function CFFDict_setByKey(key, value) {\\n      if (!(key in this.keyToNameMap)) {\\n        return false;\\n      }\\n      var valueLength = value.length;\\n      if (valueLength === 0) {\\n        return true;\\n      }\\n      for (var i = 0; i < valueLength; i++) {\\n        if (isNaN(value[i])) {\\n          (0, _util.warn)('Invalid CFFDict value: \\\"' + value + '\\\" for key \\\"' + key + '\\\".');\\n          return true;\\n        }\\n      }\\n      var type = this.types[key];\\n      if (type === 'num' || type === 'sid' || type === 'offset') {\\n        value = value[0];\\n      }\\n      this.values[key] = value;\\n      return true;\\n    },\\n    setByName: function CFFDict_setByName(name, value) {\\n      if (!(name in this.nameToKeyMap)) {\\n        throw new _util.FormatError('Invalid dictionary name \\\"' + name + '\\\"');\\n      }\\n      this.values[this.nameToKeyMap[name]] = value;\\n    },\\n    hasName: function CFFDict_hasName(name) {\\n      return this.nameToKeyMap[name] in this.values;\\n    },\\n    getByName: function CFFDict_getByName(name) {\\n      if (!(name in this.nameToKeyMap)) {\\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\\\"');\\n      }\\n      var key = this.nameToKeyMap[name];\\n      if (!(key in this.values)) {\\n        return this.defaults[key];\\n      }\\n      return this.values[key];\\n    },\\n    removeByName: function CFFDict_removeByName(name) {\\n      delete this.values[this.nameToKeyMap[name]];\\n    }\\n  };\\n  CFFDict.createTables = function CFFDict_createTables(layout) {\\n    var tables = {\\n      keyToNameMap: {},\\n      nameToKeyMap: {},\\n      defaults: {},\\n      types: {},\\n      opcodes: {},\\n      order: []\\n    };\\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\\n      var entry = layout[i];\\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\\n      tables.keyToNameMap[key] = entry[1];\\n      tables.nameToKeyMap[entry[1]] = key;\\n      tables.types[key] = entry[2];\\n      tables.defaults[key] = entry[3];\\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\\n      tables.order.push(key);\\n    }\\n    return tables;\\n  };\\n  return CFFDict;\\n}();\\nvar CFFTopDict = function CFFTopDictClosure() {\\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\\n  var tables = null;\\n  function CFFTopDict(strings) {\\n    if (tables === null) {\\n      tables = CFFDict.createTables(layout);\\n    }\\n    CFFDict.call(this, tables, strings);\\n    this.privateDict = null;\\n  }\\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\\n  return CFFTopDict;\\n}();\\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\\n  var tables = null;\\n  function CFFPrivateDict(strings) {\\n    if (tables === null) {\\n      tables = CFFDict.createTables(layout);\\n    }\\n    CFFDict.call(this, tables, strings);\\n    this.subrsIndex = null;\\n  }\\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\\n  return CFFPrivateDict;\\n}();\\nvar CFFCharsetPredefinedTypes = {\\n  ISO_ADOBE: 0,\\n  EXPERT: 1,\\n  EXPERT_SUBSET: 2\\n};\\nvar CFFCharset = function CFFCharsetClosure() {\\n  function CFFCharset(predefined, format, charset, raw) {\\n    this.predefined = predefined;\\n    this.format = format;\\n    this.charset = charset;\\n    this.raw = raw;\\n  }\\n  return CFFCharset;\\n}();\\nvar CFFEncoding = function CFFEncodingClosure() {\\n  function CFFEncoding(predefined, format, encoding, raw) {\\n    this.predefined = predefined;\\n    this.format = format;\\n    this.encoding = encoding;\\n    this.raw = raw;\\n  }\\n  return CFFEncoding;\\n}();\\nvar CFFFDSelect = function CFFFDSelectClosure() {\\n  function CFFFDSelect(fdSelect, raw) {\\n    this.fdSelect = fdSelect;\\n    this.raw = raw;\\n  }\\n  CFFFDSelect.prototype = {\\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\\n        return -1;\\n      }\\n      return this.fdSelect[glyphIndex];\\n    }\\n  };\\n  return CFFFDSelect;\\n}();\\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\\n  function CFFOffsetTracker() {\\n    this.offsets = Object.create(null);\\n  }\\n  CFFOffsetTracker.prototype = {\\n    isTracking: function CFFOffsetTracker_isTracking(key) {\\n      return key in this.offsets;\\n    },\\n    track: function CFFOffsetTracker_track(key, location) {\\n      if (key in this.offsets) {\\n        throw new _util.FormatError('Already tracking location of ' + key);\\n      }\\n      this.offsets[key] = location;\\n    },\\n    offset: function CFFOffsetTracker_offset(value) {\\n      for (var key in this.offsets) {\\n        this.offsets[key] += value;\\n      }\\n    },\\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\\n      if (!(key in this.offsets)) {\\n        throw new _util.FormatError('Not tracking location of ' + key);\\n      }\\n      var data = output.data;\\n      var dataOffset = this.offsets[key];\\n      var size = 5;\\n      for (var i = 0, ii = values.length; i < ii; ++i) {\\n        var offset0 = i * size + dataOffset;\\n        var offset1 = offset0 + 1;\\n        var offset2 = offset0 + 2;\\n        var offset3 = offset0 + 3;\\n        var offset4 = offset0 + 4;\\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\\n          throw new _util.FormatError('writing to an offset that is not empty');\\n        }\\n        var value = values[i];\\n        data[offset0] = 0x1d;\\n        data[offset1] = value >> 24 & 0xFF;\\n        data[offset2] = value >> 16 & 0xFF;\\n        data[offset3] = value >> 8 & 0xFF;\\n        data[offset4] = value & 0xFF;\\n      }\\n    }\\n  };\\n  return CFFOffsetTracker;\\n}();\\nvar CFFCompiler = function CFFCompilerClosure() {\\n  function CFFCompiler(cff) {\\n    this.cff = cff;\\n  }\\n  CFFCompiler.prototype = {\\n    compile: function CFFCompiler_compile() {\\n      var cff = this.cff;\\n      var output = {\\n        data: [],\\n        length: 0,\\n        add: function CFFCompiler_add(data) {\\n          this.data = this.data.concat(data);\\n          this.length = this.data.length;\\n        }\\n      };\\n      var header = this.compileHeader(cff.header);\\n      output.add(header);\\n      var nameIndex = this.compileNameIndex(cff.names);\\n      output.add(nameIndex);\\n      if (cff.isCIDFont) {\\n        if (cff.topDict.hasName('FontMatrix')) {\\n          var base = cff.topDict.getByName('FontMatrix');\\n          cff.topDict.removeByName('FontMatrix');\\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\\n            var subDict = cff.fdArray[i];\\n            var matrix = base.slice(0);\\n            if (subDict.hasName('FontMatrix')) {\\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\\n            }\\n            subDict.setByName('FontMatrix', matrix);\\n          }\\n        }\\n      }\\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\\n      output.add(compiled.output);\\n      var topDictTracker = compiled.trackers[0];\\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\\n      output.add(stringIndex);\\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\\n      output.add(globalSubrIndex);\\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\\n        if (cff.encoding.predefined) {\\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\\n        } else {\\n          var encoding = this.compileEncoding(cff.encoding);\\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\\n          output.add(encoding);\\n        }\\n      }\\n      if (cff.charset && cff.topDict.hasName('charset')) {\\n        if (cff.charset.predefined) {\\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\\n        } else {\\n          var charset = this.compileCharset(cff.charset);\\n          topDictTracker.setEntryLocation('charset', [output.length], output);\\n          output.add(charset);\\n        }\\n      }\\n      var charStrings = this.compileCharStrings(cff.charStrings);\\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\\n      output.add(charStrings);\\n      if (cff.isCIDFont) {\\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\\n        output.add(fdSelect);\\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\\n        output.add(compiled.output);\\n        var fontDictTrackers = compiled.trackers;\\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\\n      }\\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\\n      output.add([0]);\\n      return output.data;\\n    },\\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\\n        return this.encodeInteger(value);\\n      }\\n      return this.encodeFloat(value);\\n    },\\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\\n      var value = num.toString();\\n      var m = /\\\\.(\\\\d*?)(?:9{5,20}|0{5,20})\\\\d{0,2}(?:e(.+)|$)/.exec(value);\\n      if (m) {\\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\\n        value = (Math.round(num * epsilon) / epsilon).toString();\\n      }\\n      var nibbles = '';\\n      var i, ii;\\n      for (i = 0, ii = value.length; i < ii; ++i) {\\n        var a = value[i];\\n        if (a === 'e') {\\n          nibbles += value[++i] === '-' ? 'c' : 'b';\\n        } else if (a === '.') {\\n          nibbles += 'a';\\n        } else if (a === '-') {\\n          nibbles += 'e';\\n        } else {\\n          nibbles += a;\\n        }\\n      }\\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\\n      var out = [30];\\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\\n        out.push(parseInt(nibbles.substr(i, 2), 16));\\n      }\\n      return out;\\n    },\\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\\n      var code;\\n      if (value >= -107 && value <= 107) {\\n        code = [value + 139];\\n      } else if (value >= 108 && value <= 1131) {\\n        value = value - 108;\\n        code = [(value >> 8) + 247, value & 0xFF];\\n      } else if (value >= -1131 && value <= -108) {\\n        value = -value - 108;\\n        code = [(value >> 8) + 251, value & 0xFF];\\n      } else if (value >= -32768 && value <= 32767) {\\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\\n      } else {\\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\\n      }\\n      return code;\\n    },\\n    compileHeader: function CFFCompiler_compileHeader(header) {\\n      return [header.major, header.minor, header.hdrSize, header.offSize];\\n    },\\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\\n      var nameIndex = new CFFIndex();\\n      for (var i = 0, ii = names.length; i < ii; ++i) {\\n        var name = names[i];\\n        var length = Math.min(name.length, 127);\\n        var sanitizedName = new Array(length);\\n        for (var j = 0; j < length; j++) {\\n          var char = name[j];\\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\\n            char = '_';\\n          }\\n          sanitizedName[j] = char;\\n        }\\n        sanitizedName = sanitizedName.join('');\\n        if (sanitizedName === '') {\\n          sanitizedName = 'Bad_Font_Name';\\n        }\\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\\n      }\\n      return this.compileIndex(nameIndex);\\n    },\\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\\n      var fontDictTrackers = [];\\n      var fdArrayIndex = new CFFIndex();\\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\\n        var fontDict = dicts[i];\\n        if (removeCidKeys) {\\n          fontDict.removeByName('CIDFontVersion');\\n          fontDict.removeByName('CIDFontRevision');\\n          fontDict.removeByName('CIDFontType');\\n          fontDict.removeByName('CIDCount');\\n          fontDict.removeByName('UIDBase');\\n        }\\n        var fontDictTracker = new CFFOffsetTracker();\\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\\n        fontDictTrackers.push(fontDictTracker);\\n        fdArrayIndex.add(fontDictData);\\n        fontDictTracker.offset(length);\\n      }\\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\\n      return {\\n        trackers: fontDictTrackers,\\n        output: fdArrayIndex\\n      };\\n    },\\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\\n        var fontDict = dicts[i];\\n        var privateDict = fontDict.privateDict;\\n        if (!privateDict || !fontDict.hasName('Private')) {\\n          throw new _util.FormatError('There must be a private dictionary.');\\n        }\\n        var privateDictTracker = new CFFOffsetTracker();\\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\\n        var outputLength = output.length;\\n        privateDictTracker.offset(outputLength);\\n        if (!privateDictData.length) {\\n          outputLength = 0;\\n        }\\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\\n        output.add(privateDictData);\\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\\n          var subrs = this.compileIndex(privateDict.subrsIndex);\\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\\n          output.add(subrs);\\n        }\\n      }\\n    },\\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\\n      var out = [];\\n      var order = dict.order;\\n      for (var i = 0; i < order.length; ++i) {\\n        var key = order[i];\\n        if (!(key in dict.values)) {\\n          continue;\\n        }\\n        var values = dict.values[key];\\n        var types = dict.types[key];\\n        if (!Array.isArray(types)) {\\n          types = [types];\\n        }\\n        if (!Array.isArray(values)) {\\n          values = [values];\\n        }\\n        if (values.length === 0) {\\n          continue;\\n        }\\n        for (var j = 0, jj = types.length; j < jj; ++j) {\\n          var type = types[j];\\n          var value = values[j];\\n          switch (type) {\\n            case 'num':\\n            case 'sid':\\n              out = out.concat(this.encodeNumber(value));\\n              break;\\n            case 'offset':\\n              var name = dict.keyToNameMap[key];\\n              if (!offsetTracker.isTracking(name)) {\\n                offsetTracker.track(name, out.length);\\n              }\\n              out = out.concat([0x1d, 0, 0, 0, 0]);\\n              break;\\n            case 'array':\\n            case 'delta':\\n              out = out.concat(this.encodeNumber(value));\\n              for (var k = 1, kk = values.length; k < kk; ++k) {\\n                out = out.concat(this.encodeNumber(values[k]));\\n              }\\n              break;\\n            default:\\n              throw new _util.FormatError('Unknown data type of ' + type);\\n          }\\n        }\\n        out = out.concat(dict.opcodes[key]);\\n      }\\n      return out;\\n    },\\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\\n      var stringIndex = new CFFIndex();\\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\\n      }\\n      return this.compileIndex(stringIndex);\\n    },\\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\\n      var globalSubrIndex = this.cff.globalSubrIndex;\\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\\n    },\\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\\n      return this.compileIndex(charStrings);\\n    },\\n    compileCharset: function CFFCompiler_compileCharset(charset) {\\n      return this.compileTypedArray(charset.raw);\\n    },\\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\\n      return this.compileTypedArray(encoding.raw);\\n    },\\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\\n      return this.compileTypedArray(fdSelect);\\n    },\\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\\n      var out = [];\\n      for (var i = 0, ii = data.length; i < ii; ++i) {\\n        out[i] = data[i];\\n      }\\n      return out;\\n    },\\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\\n      trackers = trackers || [];\\n      var objects = index.objects;\\n      var count = objects.length;\\n      if (count === 0) {\\n        return [0, 0, 0];\\n      }\\n      var data = [count >> 8 & 0xFF, count & 0xff];\\n      var lastOffset = 1,\\n          i;\\n      for (i = 0; i < count; ++i) {\\n        lastOffset += objects[i].length;\\n      }\\n      var offsetSize;\\n      if (lastOffset < 0x100) {\\n        offsetSize = 1;\\n      } else if (lastOffset < 0x10000) {\\n        offsetSize = 2;\\n      } else if (lastOffset < 0x1000000) {\\n        offsetSize = 3;\\n      } else {\\n        offsetSize = 4;\\n      }\\n      data.push(offsetSize);\\n      var relativeOffset = 1;\\n      for (i = 0; i < count + 1; i++) {\\n        if (offsetSize === 1) {\\n          data.push(relativeOffset & 0xFF);\\n        } else if (offsetSize === 2) {\\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n        } else if (offsetSize === 3) {\\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n        } else {\\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n        }\\n        if (objects[i]) {\\n          relativeOffset += objects[i].length;\\n        }\\n      }\\n      for (i = 0; i < count; i++) {\\n        if (trackers[i]) {\\n          trackers[i].offset(data.length);\\n        }\\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\\n          data.push(objects[i][j]);\\n        }\\n      }\\n      return data;\\n    }\\n  };\\n  return CFFCompiler;\\n}();\\nexports.CFFStandardStrings = CFFStandardStrings;\\nexports.CFFParser = CFFParser;\\nexports.CFF = CFF;\\nexports.CFFHeader = CFFHeader;\\nexports.CFFStrings = CFFStrings;\\nexports.CFFIndex = CFFIndex;\\nexports.CFFCharset = CFFCharset;\\nexports.CFFTopDict = CFFTopDict;\\nexports.CFFPrivateDict = CFFPrivateDict;\\nexports.CFFCompiler = CFFCompiler;\\n\\n/***/ }),\\n/* 70 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\n  t['ArialNarrow'] = 'Helvetica';\\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\\n  t['ArialBlack'] = 'Helvetica';\\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\\n  t['Arial-Black'] = 'Helvetica';\\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\\n  t['Arial'] = 'Helvetica';\\n  t['Arial-Bold'] = 'Helvetica-Bold';\\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Arial-Italic'] = 'Helvetica-Oblique';\\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\\n  t['ArialMT'] = 'Helvetica';\\n  t['Courier-Bold'] = 'Courier-Bold';\\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\\n  t['Courier-Italic'] = 'Courier-Oblique';\\n  t['CourierNew'] = 'Courier';\\n  t['CourierNew-Bold'] = 'Courier-Bold';\\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\\n  t['CourierNew-Italic'] = 'Courier-Oblique';\\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\\n  t['CourierNewPSMT'] = 'Courier';\\n  t['Helvetica'] = 'Helvetica';\\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\\n  t['SegoeUISymbol'] = 'Helvetica';\\n  t['Symbol-Bold'] = 'Symbol';\\n  t['Symbol-BoldItalic'] = 'Symbol';\\n  t['Symbol-Italic'] = 'Symbol';\\n  t['TimesNewRoman'] = 'Times-Roman';\\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\\n  t['TimesNewRomanPS'] = 'Times-Roman';\\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\\n});\\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Calibri'] = 'Helvetica';\\n  t['Calibri-Bold'] = 'Helvetica-Bold';\\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\\n  t['CenturyGothic'] = 'Helvetica';\\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\\n  t['ComicSansMS'] = 'Comic Sans MS';\\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\\n  t['LucidaConsole'] = 'Courier';\\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\\n  t['MS-Gothic'] = 'MS Gothic';\\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\\n  t['MS-Mincho'] = 'MS Mincho';\\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\\n  t['MS-PGothic'] = 'MS PGothic';\\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\\n  t['MS-PMincho'] = 'MS PMincho';\\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\\n  t['NuptialScript'] = 'Times-Italic';\\n  t['Wingdings'] = 'ZapfDingbats';\\n});\\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Adobe Jenson'] = true;\\n  t['Adobe Text'] = true;\\n  t['Albertus'] = true;\\n  t['Aldus'] = true;\\n  t['Alexandria'] = true;\\n  t['Algerian'] = true;\\n  t['American Typewriter'] = true;\\n  t['Antiqua'] = true;\\n  t['Apex'] = true;\\n  t['Arno'] = true;\\n  t['Aster'] = true;\\n  t['Aurora'] = true;\\n  t['Baskerville'] = true;\\n  t['Bell'] = true;\\n  t['Bembo'] = true;\\n  t['Bembo Schoolbook'] = true;\\n  t['Benguiat'] = true;\\n  t['Berkeley Old Style'] = true;\\n  t['Bernhard Modern'] = true;\\n  t['Berthold City'] = true;\\n  t['Bodoni'] = true;\\n  t['Bauer Bodoni'] = true;\\n  t['Book Antiqua'] = true;\\n  t['Bookman'] = true;\\n  t['Bordeaux Roman'] = true;\\n  t['Californian FB'] = true;\\n  t['Calisto'] = true;\\n  t['Calvert'] = true;\\n  t['Capitals'] = true;\\n  t['Cambria'] = true;\\n  t['Cartier'] = true;\\n  t['Caslon'] = true;\\n  t['Catull'] = true;\\n  t['Centaur'] = true;\\n  t['Century Old Style'] = true;\\n  t['Century Schoolbook'] = true;\\n  t['Chaparral'] = true;\\n  t['Charis SIL'] = true;\\n  t['Cheltenham'] = true;\\n  t['Cholla Slab'] = true;\\n  t['Clarendon'] = true;\\n  t['Clearface'] = true;\\n  t['Cochin'] = true;\\n  t['Colonna'] = true;\\n  t['Computer Modern'] = true;\\n  t['Concrete Roman'] = true;\\n  t['Constantia'] = true;\\n  t['Cooper Black'] = true;\\n  t['Corona'] = true;\\n  t['Ecotype'] = true;\\n  t['Egyptienne'] = true;\\n  t['Elephant'] = true;\\n  t['Excelsior'] = true;\\n  t['Fairfield'] = true;\\n  t['FF Scala'] = true;\\n  t['Folkard'] = true;\\n  t['Footlight'] = true;\\n  t['FreeSerif'] = true;\\n  t['Friz Quadrata'] = true;\\n  t['Garamond'] = true;\\n  t['Gentium'] = true;\\n  t['Georgia'] = true;\\n  t['Gloucester'] = true;\\n  t['Goudy Old Style'] = true;\\n  t['Goudy Schoolbook'] = true;\\n  t['Goudy Pro Font'] = true;\\n  t['Granjon'] = true;\\n  t['Guardian Egyptian'] = true;\\n  t['Heather'] = true;\\n  t['Hercules'] = true;\\n  t['High Tower Text'] = true;\\n  t['Hiroshige'] = true;\\n  t['Hoefler Text'] = true;\\n  t['Humana Serif'] = true;\\n  t['Imprint'] = true;\\n  t['Ionic No. 5'] = true;\\n  t['Janson'] = true;\\n  t['Joanna'] = true;\\n  t['Korinna'] = true;\\n  t['Lexicon'] = true;\\n  t['Liberation Serif'] = true;\\n  t['Linux Libertine'] = true;\\n  t['Literaturnaya'] = true;\\n  t['Lucida'] = true;\\n  t['Lucida Bright'] = true;\\n  t['Melior'] = true;\\n  t['Memphis'] = true;\\n  t['Miller'] = true;\\n  t['Minion'] = true;\\n  t['Modern'] = true;\\n  t['Mona Lisa'] = true;\\n  t['Mrs Eaves'] = true;\\n  t['MS Serif'] = true;\\n  t['Museo Slab'] = true;\\n  t['New York'] = true;\\n  t['Nimbus Roman'] = true;\\n  t['NPS Rawlinson Roadway'] = true;\\n  t['NuptialScript'] = true;\\n  t['Palatino'] = true;\\n  t['Perpetua'] = true;\\n  t['Plantin'] = true;\\n  t['Plantin Schoolbook'] = true;\\n  t['Playbill'] = true;\\n  t['Poor Richard'] = true;\\n  t['Rawlinson Roadway'] = true;\\n  t['Renault'] = true;\\n  t['Requiem'] = true;\\n  t['Rockwell'] = true;\\n  t['Roman'] = true;\\n  t['Rotis Serif'] = true;\\n  t['Sabon'] = true;\\n  t['Scala'] = true;\\n  t['Seagull'] = true;\\n  t['Sistina'] = true;\\n  t['Souvenir'] = true;\\n  t['STIX'] = true;\\n  t['Stone Informal'] = true;\\n  t['Stone Serif'] = true;\\n  t['Sylfaen'] = true;\\n  t['Times'] = true;\\n  t['Trajan'] = true;\\n  t['Trinité'] = true;\\n  t['Trump Mediaeval'] = true;\\n  t['Utopia'] = true;\\n  t['Vale Type'] = true;\\n  t['Bitstream Vera'] = true;\\n  t['Vera Serif'] = true;\\n  t['Versailles'] = true;\\n  t['Wanted'] = true;\\n  t['Weiss'] = true;\\n  t['Wide Latin'] = true;\\n  t['Windsor'] = true;\\n  t['XITS'] = true;\\n});\\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Dingbats'] = true;\\n  t['Symbol'] = true;\\n  t['ZapfDingbats'] = true;\\n});\\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\\n  t[2] = 10;\\n  t[3] = 32;\\n  t[4] = 33;\\n  t[5] = 34;\\n  t[6] = 35;\\n  t[7] = 36;\\n  t[8] = 37;\\n  t[9] = 38;\\n  t[10] = 39;\\n  t[11] = 40;\\n  t[12] = 41;\\n  t[13] = 42;\\n  t[14] = 43;\\n  t[15] = 44;\\n  t[16] = 45;\\n  t[17] = 46;\\n  t[18] = 47;\\n  t[19] = 48;\\n  t[20] = 49;\\n  t[21] = 50;\\n  t[22] = 51;\\n  t[23] = 52;\\n  t[24] = 53;\\n  t[25] = 54;\\n  t[26] = 55;\\n  t[27] = 56;\\n  t[28] = 57;\\n  t[29] = 58;\\n  t[30] = 894;\\n  t[31] = 60;\\n  t[32] = 61;\\n  t[33] = 62;\\n  t[34] = 63;\\n  t[35] = 64;\\n  t[36] = 65;\\n  t[37] = 66;\\n  t[38] = 67;\\n  t[39] = 68;\\n  t[40] = 69;\\n  t[41] = 70;\\n  t[42] = 71;\\n  t[43] = 72;\\n  t[44] = 73;\\n  t[45] = 74;\\n  t[46] = 75;\\n  t[47] = 76;\\n  t[48] = 77;\\n  t[49] = 78;\\n  t[50] = 79;\\n  t[51] = 80;\\n  t[52] = 81;\\n  t[53] = 82;\\n  t[54] = 83;\\n  t[55] = 84;\\n  t[56] = 85;\\n  t[57] = 86;\\n  t[58] = 87;\\n  t[59] = 88;\\n  t[60] = 89;\\n  t[61] = 90;\\n  t[62] = 91;\\n  t[63] = 92;\\n  t[64] = 93;\\n  t[65] = 94;\\n  t[66] = 95;\\n  t[67] = 96;\\n  t[68] = 97;\\n  t[69] = 98;\\n  t[70] = 99;\\n  t[71] = 100;\\n  t[72] = 101;\\n  t[73] = 102;\\n  t[74] = 103;\\n  t[75] = 104;\\n  t[76] = 105;\\n  t[77] = 106;\\n  t[78] = 107;\\n  t[79] = 108;\\n  t[80] = 109;\\n  t[81] = 110;\\n  t[82] = 111;\\n  t[83] = 112;\\n  t[84] = 113;\\n  t[85] = 114;\\n  t[86] = 115;\\n  t[87] = 116;\\n  t[88] = 117;\\n  t[89] = 118;\\n  t[90] = 119;\\n  t[91] = 120;\\n  t[92] = 121;\\n  t[93] = 122;\\n  t[94] = 123;\\n  t[95] = 124;\\n  t[96] = 125;\\n  t[97] = 126;\\n  t[98] = 196;\\n  t[99] = 197;\\n  t[100] = 199;\\n  t[101] = 201;\\n  t[102] = 209;\\n  t[103] = 214;\\n  t[104] = 220;\\n  t[105] = 225;\\n  t[106] = 224;\\n  t[107] = 226;\\n  t[108] = 228;\\n  t[109] = 227;\\n  t[110] = 229;\\n  t[111] = 231;\\n  t[112] = 233;\\n  t[113] = 232;\\n  t[114] = 234;\\n  t[115] = 235;\\n  t[116] = 237;\\n  t[117] = 236;\\n  t[118] = 238;\\n  t[119] = 239;\\n  t[120] = 241;\\n  t[121] = 243;\\n  t[122] = 242;\\n  t[123] = 244;\\n  t[124] = 246;\\n  t[125] = 245;\\n  t[126] = 250;\\n  t[127] = 249;\\n  t[128] = 251;\\n  t[129] = 252;\\n  t[130] = 8224;\\n  t[131] = 176;\\n  t[132] = 162;\\n  t[133] = 163;\\n  t[134] = 167;\\n  t[135] = 8226;\\n  t[136] = 182;\\n  t[137] = 223;\\n  t[138] = 174;\\n  t[139] = 169;\\n  t[140] = 8482;\\n  t[141] = 180;\\n  t[142] = 168;\\n  t[143] = 8800;\\n  t[144] = 198;\\n  t[145] = 216;\\n  t[146] = 8734;\\n  t[147] = 177;\\n  t[148] = 8804;\\n  t[149] = 8805;\\n  t[150] = 165;\\n  t[151] = 181;\\n  t[152] = 8706;\\n  t[153] = 8721;\\n  t[154] = 8719;\\n  t[156] = 8747;\\n  t[157] = 170;\\n  t[158] = 186;\\n  t[159] = 8486;\\n  t[160] = 230;\\n  t[161] = 248;\\n  t[162] = 191;\\n  t[163] = 161;\\n  t[164] = 172;\\n  t[165] = 8730;\\n  t[166] = 402;\\n  t[167] = 8776;\\n  t[168] = 8710;\\n  t[169] = 171;\\n  t[170] = 187;\\n  t[171] = 8230;\\n  t[210] = 218;\\n  t[223] = 711;\\n  t[224] = 321;\\n  t[225] = 322;\\n  t[227] = 353;\\n  t[229] = 382;\\n  t[234] = 253;\\n  t[252] = 263;\\n  t[253] = 268;\\n  t[254] = 269;\\n  t[258] = 258;\\n  t[260] = 260;\\n  t[261] = 261;\\n  t[265] = 280;\\n  t[266] = 281;\\n  t[268] = 283;\\n  t[269] = 313;\\n  t[275] = 323;\\n  t[276] = 324;\\n  t[278] = 328;\\n  t[284] = 345;\\n  t[285] = 346;\\n  t[286] = 347;\\n  t[292] = 367;\\n  t[295] = 377;\\n  t[296] = 378;\\n  t[298] = 380;\\n  t[305] = 963;\\n  t[306] = 964;\\n  t[307] = 966;\\n  t[308] = 8215;\\n  t[309] = 8252;\\n  t[310] = 8319;\\n  t[311] = 8359;\\n  t[312] = 8592;\\n  t[313] = 8593;\\n  t[337] = 9552;\\n  t[493] = 1039;\\n  t[494] = 1040;\\n  t[705] = 1524;\\n  t[706] = 8362;\\n  t[710] = 64288;\\n  t[711] = 64298;\\n  t[759] = 1617;\\n  t[761] = 1776;\\n  t[763] = 1778;\\n  t[775] = 1652;\\n  t[777] = 1764;\\n  t[778] = 1780;\\n  t[779] = 1781;\\n  t[780] = 1782;\\n  t[782] = 771;\\n  t[783] = 64726;\\n  t[786] = 8363;\\n  t[788] = 8532;\\n  t[790] = 768;\\n  t[791] = 769;\\n  t[792] = 768;\\n  t[795] = 803;\\n  t[797] = 64336;\\n  t[798] = 64337;\\n  t[799] = 64342;\\n  t[800] = 64343;\\n  t[801] = 64344;\\n  t[802] = 64345;\\n  t[803] = 64362;\\n  t[804] = 64363;\\n  t[805] = 64364;\\n  t[2424] = 7821;\\n  t[2425] = 7822;\\n  t[2426] = 7823;\\n  t[2427] = 7824;\\n  t[2428] = 7825;\\n  t[2429] = 7826;\\n  t[2430] = 7827;\\n  t[2433] = 7682;\\n  t[2678] = 8045;\\n  t[2679] = 8046;\\n  t[2830] = 1552;\\n  t[2838] = 686;\\n  t[2840] = 751;\\n  t[2842] = 753;\\n  t[2843] = 754;\\n  t[2844] = 755;\\n  t[2846] = 757;\\n  t[2856] = 767;\\n  t[2857] = 848;\\n  t[2858] = 849;\\n  t[2862] = 853;\\n  t[2863] = 854;\\n  t[2864] = 855;\\n  t[2865] = 861;\\n  t[2866] = 862;\\n  t[2906] = 7460;\\n  t[2908] = 7462;\\n  t[2909] = 7463;\\n  t[2910] = 7464;\\n  t[2912] = 7466;\\n  t[2913] = 7467;\\n  t[2914] = 7468;\\n  t[2916] = 7470;\\n  t[2917] = 7471;\\n  t[2918] = 7472;\\n  t[2920] = 7474;\\n  t[2921] = 7475;\\n  t[2922] = 7476;\\n  t[2924] = 7478;\\n  t[2925] = 7479;\\n  t[2926] = 7480;\\n  t[2928] = 7482;\\n  t[2929] = 7483;\\n  t[2930] = 7484;\\n  t[2932] = 7486;\\n  t[2933] = 7487;\\n  t[2934] = 7488;\\n  t[2936] = 7490;\\n  t[2937] = 7491;\\n  t[2938] = 7492;\\n  t[2940] = 7494;\\n  t[2941] = 7495;\\n  t[2942] = 7496;\\n  t[2944] = 7498;\\n  t[2946] = 7500;\\n  t[2948] = 7502;\\n  t[2950] = 7504;\\n  t[2951] = 7505;\\n  t[2952] = 7506;\\n  t[2954] = 7508;\\n  t[2955] = 7509;\\n  t[2956] = 7510;\\n  t[2958] = 7512;\\n  t[2959] = 7513;\\n  t[2960] = 7514;\\n  t[2962] = 7516;\\n  t[2963] = 7517;\\n  t[2964] = 7518;\\n  t[2966] = 7520;\\n  t[2967] = 7521;\\n  t[2968] = 7522;\\n  t[2970] = 7524;\\n  t[2971] = 7525;\\n  t[2972] = 7526;\\n  t[2974] = 7528;\\n  t[2975] = 7529;\\n  t[2976] = 7530;\\n  t[2978] = 1537;\\n  t[2979] = 1538;\\n  t[2980] = 1539;\\n  t[2982] = 1549;\\n  t[2983] = 1551;\\n  t[2984] = 1552;\\n  t[2986] = 1554;\\n  t[2987] = 1555;\\n  t[2988] = 1556;\\n  t[2990] = 1623;\\n  t[2991] = 1624;\\n  t[2995] = 1775;\\n  t[2999] = 1791;\\n  t[3002] = 64290;\\n  t[3003] = 64291;\\n  t[3004] = 64292;\\n  t[3006] = 64294;\\n  t[3007] = 64295;\\n  t[3008] = 64296;\\n  t[3011] = 1900;\\n  t[3014] = 8223;\\n  t[3015] = 8244;\\n  t[3017] = 7532;\\n  t[3018] = 7533;\\n  t[3019] = 7534;\\n  t[3075] = 7590;\\n  t[3076] = 7591;\\n  t[3079] = 7594;\\n  t[3080] = 7595;\\n  t[3083] = 7598;\\n  t[3084] = 7599;\\n  t[3087] = 7602;\\n  t[3088] = 7603;\\n  t[3091] = 7606;\\n  t[3092] = 7607;\\n  t[3095] = 7610;\\n  t[3096] = 7611;\\n  t[3099] = 7614;\\n  t[3100] = 7615;\\n  t[3103] = 7618;\\n  t[3104] = 7619;\\n  t[3107] = 8337;\\n  t[3108] = 8338;\\n  t[3116] = 1884;\\n  t[3119] = 1885;\\n  t[3120] = 1885;\\n  t[3123] = 1886;\\n  t[3124] = 1886;\\n  t[3127] = 1887;\\n  t[3128] = 1887;\\n  t[3131] = 1888;\\n  t[3132] = 1888;\\n  t[3135] = 1889;\\n  t[3136] = 1889;\\n  t[3139] = 1890;\\n  t[3140] = 1890;\\n  t[3143] = 1891;\\n  t[3144] = 1891;\\n  t[3147] = 1892;\\n  t[3148] = 1892;\\n  t[3153] = 580;\\n  t[3154] = 581;\\n  t[3157] = 584;\\n  t[3158] = 585;\\n  t[3161] = 588;\\n  t[3162] = 589;\\n  t[3165] = 891;\\n  t[3166] = 892;\\n  t[3169] = 1274;\\n  t[3170] = 1275;\\n  t[3173] = 1278;\\n  t[3174] = 1279;\\n  t[3181] = 7622;\\n  t[3182] = 7623;\\n  t[3282] = 11799;\\n  t[3316] = 578;\\n  t[3379] = 42785;\\n  t[3393] = 1159;\\n  t[3416] = 8377;\\n});\\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\\n  t[227] = 322;\\n  t[264] = 261;\\n  t[291] = 346;\\n});\\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\\n  t[1] = 32;\\n  t[4] = 65;\\n  t[17] = 66;\\n  t[18] = 67;\\n  t[24] = 68;\\n  t[28] = 69;\\n  t[38] = 70;\\n  t[39] = 71;\\n  t[44] = 72;\\n  t[47] = 73;\\n  t[58] = 74;\\n  t[60] = 75;\\n  t[62] = 76;\\n  t[68] = 77;\\n  t[69] = 78;\\n  t[75] = 79;\\n  t[87] = 80;\\n  t[89] = 81;\\n  t[90] = 82;\\n  t[94] = 83;\\n  t[100] = 84;\\n  t[104] = 85;\\n  t[115] = 86;\\n  t[116] = 87;\\n  t[121] = 88;\\n  t[122] = 89;\\n  t[127] = 90;\\n  t[258] = 97;\\n  t[268] = 261;\\n  t[271] = 98;\\n  t[272] = 99;\\n  t[273] = 263;\\n  t[282] = 100;\\n  t[286] = 101;\\n  t[295] = 281;\\n  t[296] = 102;\\n  t[336] = 103;\\n  t[346] = 104;\\n  t[349] = 105;\\n  t[361] = 106;\\n  t[364] = 107;\\n  t[367] = 108;\\n  t[371] = 322;\\n  t[373] = 109;\\n  t[374] = 110;\\n  t[381] = 111;\\n  t[383] = 243;\\n  t[393] = 112;\\n  t[395] = 113;\\n  t[396] = 114;\\n  t[400] = 115;\\n  t[401] = 347;\\n  t[410] = 116;\\n  t[437] = 117;\\n  t[448] = 118;\\n  t[449] = 119;\\n  t[454] = 120;\\n  t[455] = 121;\\n  t[460] = 122;\\n  t[463] = 380;\\n  t[853] = 44;\\n  t[855] = 58;\\n  t[856] = 46;\\n  t[876] = 47;\\n  t[878] = 45;\\n  t[882] = 45;\\n  t[894] = 40;\\n  t[895] = 41;\\n  t[896] = 91;\\n  t[897] = 93;\\n  t[923] = 64;\\n  t[1004] = 48;\\n  t[1005] = 49;\\n  t[1006] = 50;\\n  t[1007] = 51;\\n  t[1008] = 52;\\n  t[1009] = 53;\\n  t[1010] = 54;\\n  t[1011] = 55;\\n  t[1012] = 56;\\n  t[1013] = 57;\\n  t[1081] = 37;\\n  t[1085] = 43;\\n  t[1086] = 45;\\n});\\nexports.getStdFontMap = getStdFontMap;\\nexports.getNonStdFontMap = getNonStdFontMap;\\nexports.getSerifFonts = getSerifFonts;\\nexports.getSymbolsFonts = getSymbolsFonts;\\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\\n\\n/***/ }),\\n/* 71 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\\n  t[63721] = 0x00A9;\\n  t[63193] = 0x00A9;\\n  t[63720] = 0x00AE;\\n  t[63194] = 0x00AE;\\n  t[63722] = 0x2122;\\n  t[63195] = 0x2122;\\n  t[63729] = 0x23A7;\\n  t[63730] = 0x23A8;\\n  t[63731] = 0x23A9;\\n  t[63740] = 0x23AB;\\n  t[63741] = 0x23AC;\\n  t[63742] = 0x23AD;\\n  t[63726] = 0x23A1;\\n  t[63727] = 0x23A2;\\n  t[63728] = 0x23A3;\\n  t[63737] = 0x23A4;\\n  t[63738] = 0x23A5;\\n  t[63739] = 0x23A6;\\n  t[63723] = 0x239B;\\n  t[63724] = 0x239C;\\n  t[63725] = 0x239D;\\n  t[63734] = 0x239E;\\n  t[63735] = 0x239F;\\n  t[63736] = 0x23A0;\\n});\\nfunction mapSpecialUnicodeValues(code) {\\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\\n    return 0;\\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\\n    return getSpecialPUASymbols()[code] || code;\\n  } else if (code === 0x00AD) {\\n    return 0x002D;\\n  }\\n  return code;\\n}\\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\\n  var unicode = glyphsUnicodeMap[name];\\n  if (unicode !== undefined) {\\n    return unicode;\\n  }\\n  if (!name) {\\n    return -1;\\n  }\\n  if (name[0] === 'u') {\\n    var nameLen = name.length,\\n        hexStr;\\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\\n      hexStr = name.substr(3);\\n    } else if (nameLen >= 5 && nameLen <= 7) {\\n      hexStr = name.substr(1);\\n    } else {\\n      return -1;\\n    }\\n    if (hexStr === hexStr.toUpperCase()) {\\n      unicode = parseInt(hexStr, 16);\\n      if (unicode >= 0) {\\n        return unicode;\\n      }\\n    }\\n  }\\n  return -1;\\n}\\nvar UnicodeRanges = [{\\n  'begin': 0x0000,\\n  'end': 0x007F\\n}, {\\n  'begin': 0x0080,\\n  'end': 0x00FF\\n}, {\\n  'begin': 0x0100,\\n  'end': 0x017F\\n}, {\\n  'begin': 0x0180,\\n  'end': 0x024F\\n}, {\\n  'begin': 0x0250,\\n  'end': 0x02AF\\n}, {\\n  'begin': 0x02B0,\\n  'end': 0x02FF\\n}, {\\n  'begin': 0x0300,\\n  'end': 0x036F\\n}, {\\n  'begin': 0x0370,\\n  'end': 0x03FF\\n}, {\\n  'begin': 0x2C80,\\n  'end': 0x2CFF\\n}, {\\n  'begin': 0x0400,\\n  'end': 0x04FF\\n}, {\\n  'begin': 0x0530,\\n  'end': 0x058F\\n}, {\\n  'begin': 0x0590,\\n  'end': 0x05FF\\n}, {\\n  'begin': 0xA500,\\n  'end': 0xA63F\\n}, {\\n  'begin': 0x0600,\\n  'end': 0x06FF\\n}, {\\n  'begin': 0x07C0,\\n  'end': 0x07FF\\n}, {\\n  'begin': 0x0900,\\n  'end': 0x097F\\n}, {\\n  'begin': 0x0980,\\n  'end': 0x09FF\\n}, {\\n  'begin': 0x0A00,\\n  'end': 0x0A7F\\n}, {\\n  'begin': 0x0A80,\\n  'end': 0x0AFF\\n}, {\\n  'begin': 0x0B00,\\n  'end': 0x0B7F\\n}, {\\n  'begin': 0x0B80,\\n  'end': 0x0BFF\\n}, {\\n  'begin': 0x0C00,\\n  'end': 0x0C7F\\n}, {\\n  'begin': 0x0C80,\\n  'end': 0x0CFF\\n}, {\\n  'begin': 0x0D00,\\n  'end': 0x0D7F\\n}, {\\n  'begin': 0x0E00,\\n  'end': 0x0E7F\\n}, {\\n  'begin': 0x0E80,\\n  'end': 0x0EFF\\n}, {\\n  'begin': 0x10A0,\\n  'end': 0x10FF\\n}, {\\n  'begin': 0x1B00,\\n  'end': 0x1B7F\\n}, {\\n  'begin': 0x1100,\\n  'end': 0x11FF\\n}, {\\n  'begin': 0x1E00,\\n  'end': 0x1EFF\\n}, {\\n  'begin': 0x1F00,\\n  'end': 0x1FFF\\n}, {\\n  'begin': 0x2000,\\n  'end': 0x206F\\n}, {\\n  'begin': 0x2070,\\n  'end': 0x209F\\n}, {\\n  'begin': 0x20A0,\\n  'end': 0x20CF\\n}, {\\n  'begin': 0x20D0,\\n  'end': 0x20FF\\n}, {\\n  'begin': 0x2100,\\n  'end': 0x214F\\n}, {\\n  'begin': 0x2150,\\n  'end': 0x218F\\n}, {\\n  'begin': 0x2190,\\n  'end': 0x21FF\\n}, {\\n  'begin': 0x2200,\\n  'end': 0x22FF\\n}, {\\n  'begin': 0x2300,\\n  'end': 0x23FF\\n}, {\\n  'begin': 0x2400,\\n  'end': 0x243F\\n}, {\\n  'begin': 0x2440,\\n  'end': 0x245F\\n}, {\\n  'begin': 0x2460,\\n  'end': 0x24FF\\n}, {\\n  'begin': 0x2500,\\n  'end': 0x257F\\n}, {\\n  'begin': 0x2580,\\n  'end': 0x259F\\n}, {\\n  'begin': 0x25A0,\\n  'end': 0x25FF\\n}, {\\n  'begin': 0x2600,\\n  'end': 0x26FF\\n}, {\\n  'begin': 0x2700,\\n  'end': 0x27BF\\n}, {\\n  'begin': 0x3000,\\n  'end': 0x303F\\n}, {\\n  'begin': 0x3040,\\n  'end': 0x309F\\n}, {\\n  'begin': 0x30A0,\\n  'end': 0x30FF\\n}, {\\n  'begin': 0x3100,\\n  'end': 0x312F\\n}, {\\n  'begin': 0x3130,\\n  'end': 0x318F\\n}, {\\n  'begin': 0xA840,\\n  'end': 0xA87F\\n}, {\\n  'begin': 0x3200,\\n  'end': 0x32FF\\n}, {\\n  'begin': 0x3300,\\n  'end': 0x33FF\\n}, {\\n  'begin': 0xAC00,\\n  'end': 0xD7AF\\n}, {\\n  'begin': 0xD800,\\n  'end': 0xDFFF\\n}, {\\n  'begin': 0x10900,\\n  'end': 0x1091F\\n}, {\\n  'begin': 0x4E00,\\n  'end': 0x9FFF\\n}, {\\n  'begin': 0xE000,\\n  'end': 0xF8FF\\n}, {\\n  'begin': 0x31C0,\\n  'end': 0x31EF\\n}, {\\n  'begin': 0xFB00,\\n  'end': 0xFB4F\\n}, {\\n  'begin': 0xFB50,\\n  'end': 0xFDFF\\n}, {\\n  'begin': 0xFE20,\\n  'end': 0xFE2F\\n}, {\\n  'begin': 0xFE10,\\n  'end': 0xFE1F\\n}, {\\n  'begin': 0xFE50,\\n  'end': 0xFE6F\\n}, {\\n  'begin': 0xFE70,\\n  'end': 0xFEFF\\n}, {\\n  'begin': 0xFF00,\\n  'end': 0xFFEF\\n}, {\\n  'begin': 0xFFF0,\\n  'end': 0xFFFF\\n}, {\\n  'begin': 0x0F00,\\n  'end': 0x0FFF\\n}, {\\n  'begin': 0x0700,\\n  'end': 0x074F\\n}, {\\n  'begin': 0x0780,\\n  'end': 0x07BF\\n}, {\\n  'begin': 0x0D80,\\n  'end': 0x0DFF\\n}, {\\n  'begin': 0x1000,\\n  'end': 0x109F\\n}, {\\n  'begin': 0x1200,\\n  'end': 0x137F\\n}, {\\n  'begin': 0x13A0,\\n  'end': 0x13FF\\n}, {\\n  'begin': 0x1400,\\n  'end': 0x167F\\n}, {\\n  'begin': 0x1680,\\n  'end': 0x169F\\n}, {\\n  'begin': 0x16A0,\\n  'end': 0x16FF\\n}, {\\n  'begin': 0x1780,\\n  'end': 0x17FF\\n}, {\\n  'begin': 0x1800,\\n  'end': 0x18AF\\n}, {\\n  'begin': 0x2800,\\n  'end': 0x28FF\\n}, {\\n  'begin': 0xA000,\\n  'end': 0xA48F\\n}, {\\n  'begin': 0x1700,\\n  'end': 0x171F\\n}, {\\n  'begin': 0x10300,\\n  'end': 0x1032F\\n}, {\\n  'begin': 0x10330,\\n  'end': 0x1034F\\n}, {\\n  'begin': 0x10400,\\n  'end': 0x1044F\\n}, {\\n  'begin': 0x1D000,\\n  'end': 0x1D0FF\\n}, {\\n  'begin': 0x1D400,\\n  'end': 0x1D7FF\\n}, {\\n  'begin': 0xFF000,\\n  'end': 0xFFFFD\\n}, {\\n  'begin': 0xFE00,\\n  'end': 0xFE0F\\n}, {\\n  'begin': 0xE0000,\\n  'end': 0xE007F\\n}, {\\n  'begin': 0x1900,\\n  'end': 0x194F\\n}, {\\n  'begin': 0x1950,\\n  'end': 0x197F\\n}, {\\n  'begin': 0x1980,\\n  'end': 0x19DF\\n}, {\\n  'begin': 0x1A00,\\n  'end': 0x1A1F\\n}, {\\n  'begin': 0x2C00,\\n  'end': 0x2C5F\\n}, {\\n  'begin': 0x2D30,\\n  'end': 0x2D7F\\n}, {\\n  'begin': 0x4DC0,\\n  'end': 0x4DFF\\n}, {\\n  'begin': 0xA800,\\n  'end': 0xA82F\\n}, {\\n  'begin': 0x10000,\\n  'end': 0x1007F\\n}, {\\n  'begin': 0x10140,\\n  'end': 0x1018F\\n}, {\\n  'begin': 0x10380,\\n  'end': 0x1039F\\n}, {\\n  'begin': 0x103A0,\\n  'end': 0x103DF\\n}, {\\n  'begin': 0x10450,\\n  'end': 0x1047F\\n}, {\\n  'begin': 0x10480,\\n  'end': 0x104AF\\n}, {\\n  'begin': 0x10800,\\n  'end': 0x1083F\\n}, {\\n  'begin': 0x10A00,\\n  'end': 0x10A5F\\n}, {\\n  'begin': 0x1D300,\\n  'end': 0x1D35F\\n}, {\\n  'begin': 0x12000,\\n  'end': 0x123FF\\n}, {\\n  'begin': 0x1D360,\\n  'end': 0x1D37F\\n}, {\\n  'begin': 0x1B80,\\n  'end': 0x1BBF\\n}, {\\n  'begin': 0x1C00,\\n  'end': 0x1C4F\\n}, {\\n  'begin': 0x1C50,\\n  'end': 0x1C7F\\n}, {\\n  'begin': 0xA880,\\n  'end': 0xA8DF\\n}, {\\n  'begin': 0xA900,\\n  'end': 0xA92F\\n}, {\\n  'begin': 0xA930,\\n  'end': 0xA95F\\n}, {\\n  'begin': 0xAA00,\\n  'end': 0xAA5F\\n}, {\\n  'begin': 0x10190,\\n  'end': 0x101CF\\n}, {\\n  'begin': 0x101D0,\\n  'end': 0x101FF\\n}, {\\n  'begin': 0x102A0,\\n  'end': 0x102DF\\n}, {\\n  'begin': 0x1F030,\\n  'end': 0x1F09F\\n}];\\nfunction getUnicodeRangeFor(value) {\\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\\n    var range = UnicodeRanges[i];\\n    if (value >= range.begin && value < range.end) {\\n      return i;\\n    }\\n  }\\n  return -1;\\n}\\nfunction isRTLRangeFor(value) {\\n  var range = UnicodeRanges[13];\\n  if (value >= range.begin && value < range.end) {\\n    return true;\\n  }\\n  range = UnicodeRanges[11];\\n  if (value >= range.begin && value < range.end) {\\n    return true;\\n  }\\n  return false;\\n}\\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\\n  t['\\\\xA8'] = ' \\\\u0308';\\n  t['\\\\xAF'] = ' \\\\u0304';\\n  t['\\\\xB4'] = ' \\\\u0301';\\n  t['\\\\xB5'] = '\\\\u03BC';\\n  t['\\\\xB8'] = ' \\\\u0327';\\n  t['\\\\u0132'] = 'IJ';\\n  t['\\\\u0133'] = 'ij';\\n  t['\\\\u013F'] = 'L\\\\xB7';\\n  t['\\\\u0140'] = 'l\\\\xB7';\\n  t['\\\\u0149'] = '\\\\u02BCn';\\n  t['\\\\u017F'] = 's';\\n  t['\\\\u01C4'] = 'D\\\\u017D';\\n  t['\\\\u01C5'] = 'D\\\\u017E';\\n  t['\\\\u01C6'] = 'd\\\\u017E';\\n  t['\\\\u01C7'] = 'LJ';\\n  t['\\\\u01C8'] = 'Lj';\\n  t['\\\\u01C9'] = 'lj';\\n  t['\\\\u01CA'] = 'NJ';\\n  t['\\\\u01CB'] = 'Nj';\\n  t['\\\\u01CC'] = 'nj';\\n  t['\\\\u01F1'] = 'DZ';\\n  t['\\\\u01F2'] = 'Dz';\\n  t['\\\\u01F3'] = 'dz';\\n  t['\\\\u02D8'] = ' \\\\u0306';\\n  t['\\\\u02D9'] = ' \\\\u0307';\\n  t['\\\\u02DA'] = ' \\\\u030A';\\n  t['\\\\u02DB'] = ' \\\\u0328';\\n  t['\\\\u02DC'] = ' \\\\u0303';\\n  t['\\\\u02DD'] = ' \\\\u030B';\\n  t['\\\\u037A'] = ' \\\\u0345';\\n  t['\\\\u0384'] = ' \\\\u0301';\\n  t['\\\\u03D0'] = '\\\\u03B2';\\n  t['\\\\u03D1'] = '\\\\u03B8';\\n  t['\\\\u03D2'] = '\\\\u03A5';\\n  t['\\\\u03D5'] = '\\\\u03C6';\\n  t['\\\\u03D6'] = '\\\\u03C0';\\n  t['\\\\u03F0'] = '\\\\u03BA';\\n  t['\\\\u03F1'] = '\\\\u03C1';\\n  t['\\\\u03F2'] = '\\\\u03C2';\\n  t['\\\\u03F4'] = '\\\\u0398';\\n  t['\\\\u03F5'] = '\\\\u03B5';\\n  t['\\\\u03F9'] = '\\\\u03A3';\\n  t['\\\\u0587'] = '\\\\u0565\\\\u0582';\\n  t['\\\\u0675'] = '\\\\u0627\\\\u0674';\\n  t['\\\\u0676'] = '\\\\u0648\\\\u0674';\\n  t['\\\\u0677'] = '\\\\u06C7\\\\u0674';\\n  t['\\\\u0678'] = '\\\\u064A\\\\u0674';\\n  t['\\\\u0E33'] = '\\\\u0E4D\\\\u0E32';\\n  t['\\\\u0EB3'] = '\\\\u0ECD\\\\u0EB2';\\n  t['\\\\u0EDC'] = '\\\\u0EAB\\\\u0E99';\\n  t['\\\\u0EDD'] = '\\\\u0EAB\\\\u0EA1';\\n  t['\\\\u0F77'] = '\\\\u0FB2\\\\u0F81';\\n  t['\\\\u0F79'] = '\\\\u0FB3\\\\u0F81';\\n  t['\\\\u1E9A'] = 'a\\\\u02BE';\\n  t['\\\\u1FBD'] = ' \\\\u0313';\\n  t['\\\\u1FBF'] = ' \\\\u0313';\\n  t['\\\\u1FC0'] = ' \\\\u0342';\\n  t['\\\\u1FFE'] = ' \\\\u0314';\\n  t['\\\\u2002'] = ' ';\\n  t['\\\\u2003'] = ' ';\\n  t['\\\\u2004'] = ' ';\\n  t['\\\\u2005'] = ' ';\\n  t['\\\\u2006'] = ' ';\\n  t['\\\\u2008'] = ' ';\\n  t['\\\\u2009'] = ' ';\\n  t['\\\\u200A'] = ' ';\\n  t['\\\\u2017'] = ' \\\\u0333';\\n  t['\\\\u2024'] = '.';\\n  t['\\\\u2025'] = '..';\\n  t['\\\\u2026'] = '...';\\n  t['\\\\u2033'] = '\\\\u2032\\\\u2032';\\n  t['\\\\u2034'] = '\\\\u2032\\\\u2032\\\\u2032';\\n  t['\\\\u2036'] = '\\\\u2035\\\\u2035';\\n  t['\\\\u2037'] = '\\\\u2035\\\\u2035\\\\u2035';\\n  t['\\\\u203C'] = '!!';\\n  t['\\\\u203E'] = ' \\\\u0305';\\n  t['\\\\u2047'] = '??';\\n  t['\\\\u2048'] = '?!';\\n  t['\\\\u2049'] = '!?';\\n  t['\\\\u2057'] = '\\\\u2032\\\\u2032\\\\u2032\\\\u2032';\\n  t['\\\\u205F'] = ' ';\\n  t['\\\\u20A8'] = 'Rs';\\n  t['\\\\u2100'] = 'a/c';\\n  t['\\\\u2101'] = 'a/s';\\n  t['\\\\u2103'] = '\\\\xB0C';\\n  t['\\\\u2105'] = 'c/o';\\n  t['\\\\u2106'] = 'c/u';\\n  t['\\\\u2107'] = '\\\\u0190';\\n  t['\\\\u2109'] = '\\\\xB0F';\\n  t['\\\\u2116'] = 'No';\\n  t['\\\\u2121'] = 'TEL';\\n  t['\\\\u2135'] = '\\\\u05D0';\\n  t['\\\\u2136'] = '\\\\u05D1';\\n  t['\\\\u2137'] = '\\\\u05D2';\\n  t['\\\\u2138'] = '\\\\u05D3';\\n  t['\\\\u213B'] = 'FAX';\\n  t['\\\\u2160'] = 'I';\\n  t['\\\\u2161'] = 'II';\\n  t['\\\\u2162'] = 'III';\\n  t['\\\\u2163'] = 'IV';\\n  t['\\\\u2164'] = 'V';\\n  t['\\\\u2165'] = 'VI';\\n  t['\\\\u2166'] = 'VII';\\n  t['\\\\u2167'] = 'VIII';\\n  t['\\\\u2168'] = 'IX';\\n  t['\\\\u2169'] = 'X';\\n  t['\\\\u216A'] = 'XI';\\n  t['\\\\u216B'] = 'XII';\\n  t['\\\\u216C'] = 'L';\\n  t['\\\\u216D'] = 'C';\\n  t['\\\\u216E'] = 'D';\\n  t['\\\\u216F'] = 'M';\\n  t['\\\\u2170'] = 'i';\\n  t['\\\\u2171'] = 'ii';\\n  t['\\\\u2172'] = 'iii';\\n  t['\\\\u2173'] = 'iv';\\n  t['\\\\u2174'] = 'v';\\n  t['\\\\u2175'] = 'vi';\\n  t['\\\\u2176'] = 'vii';\\n  t['\\\\u2177'] = 'viii';\\n  t['\\\\u2178'] = 'ix';\\n  t['\\\\u2179'] = 'x';\\n  t['\\\\u217A'] = 'xi';\\n  t['\\\\u217B'] = 'xii';\\n  t['\\\\u217C'] = 'l';\\n  t['\\\\u217D'] = 'c';\\n  t['\\\\u217E'] = 'd';\\n  t['\\\\u217F'] = 'm';\\n  t['\\\\u222C'] = '\\\\u222B\\\\u222B';\\n  t['\\\\u222D'] = '\\\\u222B\\\\u222B\\\\u222B';\\n  t['\\\\u222F'] = '\\\\u222E\\\\u222E';\\n  t['\\\\u2230'] = '\\\\u222E\\\\u222E\\\\u222E';\\n  t['\\\\u2474'] = '(1)';\\n  t['\\\\u2475'] = '(2)';\\n  t['\\\\u2476'] = '(3)';\\n  t['\\\\u2477'] = '(4)';\\n  t['\\\\u2478'] = '(5)';\\n  t['\\\\u2479'] = '(6)';\\n  t['\\\\u247A'] = '(7)';\\n  t['\\\\u247B'] = '(8)';\\n  t['\\\\u247C'] = '(9)';\\n  t['\\\\u247D'] = '(10)';\\n  t['\\\\u247E'] = '(11)';\\n  t['\\\\u247F'] = '(12)';\\n  t['\\\\u2480'] = '(13)';\\n  t['\\\\u2481'] = '(14)';\\n  t['\\\\u2482'] = '(15)';\\n  t['\\\\u2483'] = '(16)';\\n  t['\\\\u2484'] = '(17)';\\n  t['\\\\u2485'] = '(18)';\\n  t['\\\\u2486'] = '(19)';\\n  t['\\\\u2487'] = '(20)';\\n  t['\\\\u2488'] = '1.';\\n  t['\\\\u2489'] = '2.';\\n  t['\\\\u248A'] = '3.';\\n  t['\\\\u248B'] = '4.';\\n  t['\\\\u248C'] = '5.';\\n  t['\\\\u248D'] = '6.';\\n  t['\\\\u248E'] = '7.';\\n  t['\\\\u248F'] = '8.';\\n  t['\\\\u2490'] = '9.';\\n  t['\\\\u2491'] = '10.';\\n  t['\\\\u2492'] = '11.';\\n  t['\\\\u2493'] = '12.';\\n  t['\\\\u2494'] = '13.';\\n  t['\\\\u2495'] = '14.';\\n  t['\\\\u2496'] = '15.';\\n  t['\\\\u2497'] = '16.';\\n  t['\\\\u2498'] = '17.';\\n  t['\\\\u2499'] = '18.';\\n  t['\\\\u249A'] = '19.';\\n  t['\\\\u249B'] = '20.';\\n  t['\\\\u249C'] = '(a)';\\n  t['\\\\u249D'] = '(b)';\\n  t['\\\\u249E'] = '(c)';\\n  t['\\\\u249F'] = '(d)';\\n  t['\\\\u24A0'] = '(e)';\\n  t['\\\\u24A1'] = '(f)';\\n  t['\\\\u24A2'] = '(g)';\\n  t['\\\\u24A3'] = '(h)';\\n  t['\\\\u24A4'] = '(i)';\\n  t['\\\\u24A5'] = '(j)';\\n  t['\\\\u24A6'] = '(k)';\\n  t['\\\\u24A7'] = '(l)';\\n  t['\\\\u24A8'] = '(m)';\\n  t['\\\\u24A9'] = '(n)';\\n  t['\\\\u24AA'] = '(o)';\\n  t['\\\\u24AB'] = '(p)';\\n  t['\\\\u24AC'] = '(q)';\\n  t['\\\\u24AD'] = '(r)';\\n  t['\\\\u24AE'] = '(s)';\\n  t['\\\\u24AF'] = '(t)';\\n  t['\\\\u24B0'] = '(u)';\\n  t['\\\\u24B1'] = '(v)';\\n  t['\\\\u24B2'] = '(w)';\\n  t['\\\\u24B3'] = '(x)';\\n  t['\\\\u24B4'] = '(y)';\\n  t['\\\\u24B5'] = '(z)';\\n  t['\\\\u2A0C'] = '\\\\u222B\\\\u222B\\\\u222B\\\\u222B';\\n  t['\\\\u2A74'] = '::=';\\n  t['\\\\u2A75'] = '==';\\n  t['\\\\u2A76'] = '===';\\n  t['\\\\u2E9F'] = '\\\\u6BCD';\\n  t['\\\\u2EF3'] = '\\\\u9F9F';\\n  t['\\\\u2F00'] = '\\\\u4E00';\\n  t['\\\\u2F01'] = '\\\\u4E28';\\n  t['\\\\u2F02'] = '\\\\u4E36';\\n  t['\\\\u2F03'] = '\\\\u4E3F';\\n  t['\\\\u2F04'] = '\\\\u4E59';\\n  t['\\\\u2F05'] = '\\\\u4E85';\\n  t['\\\\u2F06'] = '\\\\u4E8C';\\n  t['\\\\u2F07'] = '\\\\u4EA0';\\n  t['\\\\u2F08'] = '\\\\u4EBA';\\n  t['\\\\u2F09'] = '\\\\u513F';\\n  t['\\\\u2F0A'] = '\\\\u5165';\\n  t['\\\\u2F0B'] = '\\\\u516B';\\n  t['\\\\u2F0C'] = '\\\\u5182';\\n  t['\\\\u2F0D'] = '\\\\u5196';\\n  t['\\\\u2F0E'] = '\\\\u51AB';\\n  t['\\\\u2F0F'] = '\\\\u51E0';\\n  t['\\\\u2F10'] = '\\\\u51F5';\\n  t['\\\\u2F11'] = '\\\\u5200';\\n  t['\\\\u2F12'] = '\\\\u529B';\\n  t['\\\\u2F13'] = '\\\\u52F9';\\n  t['\\\\u2F14'] = '\\\\u5315';\\n  t['\\\\u2F15'] = '\\\\u531A';\\n  t['\\\\u2F16'] = '\\\\u5338';\\n  t['\\\\u2F17'] = '\\\\u5341';\\n  t['\\\\u2F18'] = '\\\\u535C';\\n  t['\\\\u2F19'] = '\\\\u5369';\\n  t['\\\\u2F1A'] = '\\\\u5382';\\n  t['\\\\u2F1B'] = '\\\\u53B6';\\n  t['\\\\u2F1C'] = '\\\\u53C8';\\n  t['\\\\u2F1D'] = '\\\\u53E3';\\n  t['\\\\u2F1E'] = '\\\\u56D7';\\n  t['\\\\u2F1F'] = '\\\\u571F';\\n  t['\\\\u2F20'] = '\\\\u58EB';\\n  t['\\\\u2F21'] = '\\\\u5902';\\n  t['\\\\u2F22'] = '\\\\u590A';\\n  t['\\\\u2F23'] = '\\\\u5915';\\n  t['\\\\u2F24'] = '\\\\u5927';\\n  t['\\\\u2F25'] = '\\\\u5973';\\n  t['\\\\u2F26'] = '\\\\u5B50';\\n  t['\\\\u2F27'] = '\\\\u5B80';\\n  t['\\\\u2F28'] = '\\\\u5BF8';\\n  t['\\\\u2F29'] = '\\\\u5C0F';\\n  t['\\\\u2F2A'] = '\\\\u5C22';\\n  t['\\\\u2F2B'] = '\\\\u5C38';\\n  t['\\\\u2F2C'] = '\\\\u5C6E';\\n  t['\\\\u2F2D'] = '\\\\u5C71';\\n  t['\\\\u2F2E'] = '\\\\u5DDB';\\n  t['\\\\u2F2F'] = '\\\\u5DE5';\\n  t['\\\\u2F30'] = '\\\\u5DF1';\\n  t['\\\\u2F31'] = '\\\\u5DFE';\\n  t['\\\\u2F32'] = '\\\\u5E72';\\n  t['\\\\u2F33'] = '\\\\u5E7A';\\n  t['\\\\u2F34'] = '\\\\u5E7F';\\n  t['\\\\u2F35'] = '\\\\u5EF4';\\n  t['\\\\u2F36'] = '\\\\u5EFE';\\n  t['\\\\u2F37'] = '\\\\u5F0B';\\n  t['\\\\u2F38'] = '\\\\u5F13';\\n  t['\\\\u2F39'] = '\\\\u5F50';\\n  t['\\\\u2F3A'] = '\\\\u5F61';\\n  t['\\\\u2F3B'] = '\\\\u5F73';\\n  t['\\\\u2F3C'] = '\\\\u5FC3';\\n  t['\\\\u2F3D'] = '\\\\u6208';\\n  t['\\\\u2F3E'] = '\\\\u6236';\\n  t['\\\\u2F3F'] = '\\\\u624B';\\n  t['\\\\u2F40'] = '\\\\u652F';\\n  t['\\\\u2F41'] = '\\\\u6534';\\n  t['\\\\u2F42'] = '\\\\u6587';\\n  t['\\\\u2F43'] = '\\\\u6597';\\n  t['\\\\u2F44'] = '\\\\u65A4';\\n  t['\\\\u2F45'] = '\\\\u65B9';\\n  t['\\\\u2F46'] = '\\\\u65E0';\\n  t['\\\\u2F47'] = '\\\\u65E5';\\n  t['\\\\u2F48'] = '\\\\u66F0';\\n  t['\\\\u2F49'] = '\\\\u6708';\\n  t['\\\\u2F4A'] = '\\\\u6728';\\n  t['\\\\u2F4B'] = '\\\\u6B20';\\n  t['\\\\u2F4C'] = '\\\\u6B62';\\n  t['\\\\u2F4D'] = '\\\\u6B79';\\n  t['\\\\u2F4E'] = '\\\\u6BB3';\\n  t['\\\\u2F4F'] = '\\\\u6BCB';\\n  t['\\\\u2F50'] = '\\\\u6BD4';\\n  t['\\\\u2F51'] = '\\\\u6BDB';\\n  t['\\\\u2F52'] = '\\\\u6C0F';\\n  t['\\\\u2F53'] = '\\\\u6C14';\\n  t['\\\\u2F54'] = '\\\\u6C34';\\n  t['\\\\u2F55'] = '\\\\u706B';\\n  t['\\\\u2F56'] = '\\\\u722A';\\n  t['\\\\u2F57'] = '\\\\u7236';\\n  t['\\\\u2F58'] = '\\\\u723B';\\n  t['\\\\u2F59'] = '\\\\u723F';\\n  t['\\\\u2F5A'] = '\\\\u7247';\\n  t['\\\\u2F5B'] = '\\\\u7259';\\n  t['\\\\u2F5C'] = '\\\\u725B';\\n  t['\\\\u2F5D'] = '\\\\u72AC';\\n  t['\\\\u2F5E'] = '\\\\u7384';\\n  t['\\\\u2F5F'] = '\\\\u7389';\\n  t['\\\\u2F60'] = '\\\\u74DC';\\n  t['\\\\u2F61'] = '\\\\u74E6';\\n  t['\\\\u2F62'] = '\\\\u7518';\\n  t['\\\\u2F63'] = '\\\\u751F';\\n  t['\\\\u2F64'] = '\\\\u7528';\\n  t['\\\\u2F65'] = '\\\\u7530';\\n  t['\\\\u2F66'] = '\\\\u758B';\\n  t['\\\\u2F67'] = '\\\\u7592';\\n  t['\\\\u2F68'] = '\\\\u7676';\\n  t['\\\\u2F69'] = '\\\\u767D';\\n  t['\\\\u2F6A'] = '\\\\u76AE';\\n  t['\\\\u2F6B'] = '\\\\u76BF';\\n  t['\\\\u2F6C'] = '\\\\u76EE';\\n  t['\\\\u2F6D'] = '\\\\u77DB';\\n  t['\\\\u2F6E'] = '\\\\u77E2';\\n  t['\\\\u2F6F'] = '\\\\u77F3';\\n  t['\\\\u2F70'] = '\\\\u793A';\\n  t['\\\\u2F71'] = '\\\\u79B8';\\n  t['\\\\u2F72'] = '\\\\u79BE';\\n  t['\\\\u2F73'] = '\\\\u7A74';\\n  t['\\\\u2F74'] = '\\\\u7ACB';\\n  t['\\\\u2F75'] = '\\\\u7AF9';\\n  t['\\\\u2F76'] = '\\\\u7C73';\\n  t['\\\\u2F77'] = '\\\\u7CF8';\\n  t['\\\\u2F78'] = '\\\\u7F36';\\n  t['\\\\u2F79'] = '\\\\u7F51';\\n  t['\\\\u2F7A'] = '\\\\u7F8A';\\n  t['\\\\u2F7B'] = '\\\\u7FBD';\\n  t['\\\\u2F7C'] = '\\\\u8001';\\n  t['\\\\u2F7D'] = '\\\\u800C';\\n  t['\\\\u2F7E'] = '\\\\u8012';\\n  t['\\\\u2F7F'] = '\\\\u8033';\\n  t['\\\\u2F80'] = '\\\\u807F';\\n  t['\\\\u2F81'] = '\\\\u8089';\\n  t['\\\\u2F82'] = '\\\\u81E3';\\n  t['\\\\u2F83'] = '\\\\u81EA';\\n  t['\\\\u2F84'] = '\\\\u81F3';\\n  t['\\\\u2F85'] = '\\\\u81FC';\\n  t['\\\\u2F86'] = '\\\\u820C';\\n  t['\\\\u2F87'] = '\\\\u821B';\\n  t['\\\\u2F88'] = '\\\\u821F';\\n  t['\\\\u2F89'] = '\\\\u826E';\\n  t['\\\\u2F8A'] = '\\\\u8272';\\n  t['\\\\u2F8B'] = '\\\\u8278';\\n  t['\\\\u2F8C'] = '\\\\u864D';\\n  t['\\\\u2F8D'] = '\\\\u866B';\\n  t['\\\\u2F8E'] = '\\\\u8840';\\n  t['\\\\u2F8F'] = '\\\\u884C';\\n  t['\\\\u2F90'] = '\\\\u8863';\\n  t['\\\\u2F91'] = '\\\\u897E';\\n  t['\\\\u2F92'] = '\\\\u898B';\\n  t['\\\\u2F93'] = '\\\\u89D2';\\n  t['\\\\u2F94'] = '\\\\u8A00';\\n  t['\\\\u2F95'] = '\\\\u8C37';\\n  t['\\\\u2F96'] = '\\\\u8C46';\\n  t['\\\\u2F97'] = '\\\\u8C55';\\n  t['\\\\u2F98'] = '\\\\u8C78';\\n  t['\\\\u2F99'] = '\\\\u8C9D';\\n  t['\\\\u2F9A'] = '\\\\u8D64';\\n  t['\\\\u2F9B'] = '\\\\u8D70';\\n  t['\\\\u2F9C'] = '\\\\u8DB3';\\n  t['\\\\u2F9D'] = '\\\\u8EAB';\\n  t['\\\\u2F9E'] = '\\\\u8ECA';\\n  t['\\\\u2F9F'] = '\\\\u8F9B';\\n  t['\\\\u2FA0'] = '\\\\u8FB0';\\n  t['\\\\u2FA1'] = '\\\\u8FB5';\\n  t['\\\\u2FA2'] = '\\\\u9091';\\n  t['\\\\u2FA3'] = '\\\\u9149';\\n  t['\\\\u2FA4'] = '\\\\u91C6';\\n  t['\\\\u2FA5'] = '\\\\u91CC';\\n  t['\\\\u2FA6'] = '\\\\u91D1';\\n  t['\\\\u2FA7'] = '\\\\u9577';\\n  t['\\\\u2FA8'] = '\\\\u9580';\\n  t['\\\\u2FA9'] = '\\\\u961C';\\n  t['\\\\u2FAA'] = '\\\\u96B6';\\n  t['\\\\u2FAB'] = '\\\\u96B9';\\n  t['\\\\u2FAC'] = '\\\\u96E8';\\n  t['\\\\u2FAD'] = '\\\\u9751';\\n  t['\\\\u2FAE'] = '\\\\u975E';\\n  t['\\\\u2FAF'] = '\\\\u9762';\\n  t['\\\\u2FB0'] = '\\\\u9769';\\n  t['\\\\u2FB1'] = '\\\\u97CB';\\n  t['\\\\u2FB2'] = '\\\\u97ED';\\n  t['\\\\u2FB3'] = '\\\\u97F3';\\n  t['\\\\u2FB4'] = '\\\\u9801';\\n  t['\\\\u2FB5'] = '\\\\u98A8';\\n  t['\\\\u2FB6'] = '\\\\u98DB';\\n  t['\\\\u2FB7'] = '\\\\u98DF';\\n  t['\\\\u2FB8'] = '\\\\u9996';\\n  t['\\\\u2FB9'] = '\\\\u9999';\\n  t['\\\\u2FBA'] = '\\\\u99AC';\\n  t['\\\\u2FBB'] = '\\\\u9AA8';\\n  t['\\\\u2FBC'] = '\\\\u9AD8';\\n  t['\\\\u2FBD'] = '\\\\u9ADF';\\n  t['\\\\u2FBE'] = '\\\\u9B25';\\n  t['\\\\u2FBF'] = '\\\\u9B2F';\\n  t['\\\\u2FC0'] = '\\\\u9B32';\\n  t['\\\\u2FC1'] = '\\\\u9B3C';\\n  t['\\\\u2FC2'] = '\\\\u9B5A';\\n  t['\\\\u2FC3'] = '\\\\u9CE5';\\n  t['\\\\u2FC4'] = '\\\\u9E75';\\n  t['\\\\u2FC5'] = '\\\\u9E7F';\\n  t['\\\\u2FC6'] = '\\\\u9EA5';\\n  t['\\\\u2FC7'] = '\\\\u9EBB';\\n  t['\\\\u2FC8'] = '\\\\u9EC3';\\n  t['\\\\u2FC9'] = '\\\\u9ECD';\\n  t['\\\\u2FCA'] = '\\\\u9ED1';\\n  t['\\\\u2FCB'] = '\\\\u9EF9';\\n  t['\\\\u2FCC'] = '\\\\u9EFD';\\n  t['\\\\u2FCD'] = '\\\\u9F0E';\\n  t['\\\\u2FCE'] = '\\\\u9F13';\\n  t['\\\\u2FCF'] = '\\\\u9F20';\\n  t['\\\\u2FD0'] = '\\\\u9F3B';\\n  t['\\\\u2FD1'] = '\\\\u9F4A';\\n  t['\\\\u2FD2'] = '\\\\u9F52';\\n  t['\\\\u2FD3'] = '\\\\u9F8D';\\n  t['\\\\u2FD4'] = '\\\\u9F9C';\\n  t['\\\\u2FD5'] = '\\\\u9FA0';\\n  t['\\\\u3036'] = '\\\\u3012';\\n  t['\\\\u3038'] = '\\\\u5341';\\n  t['\\\\u3039'] = '\\\\u5344';\\n  t['\\\\u303A'] = '\\\\u5345';\\n  t['\\\\u309B'] = ' \\\\u3099';\\n  t['\\\\u309C'] = ' \\\\u309A';\\n  t['\\\\u3131'] = '\\\\u1100';\\n  t['\\\\u3132'] = '\\\\u1101';\\n  t['\\\\u3133'] = '\\\\u11AA';\\n  t['\\\\u3134'] = '\\\\u1102';\\n  t['\\\\u3135'] = '\\\\u11AC';\\n  t['\\\\u3136'] = '\\\\u11AD';\\n  t['\\\\u3137'] = '\\\\u1103';\\n  t['\\\\u3138'] = '\\\\u1104';\\n  t['\\\\u3139'] = '\\\\u1105';\\n  t['\\\\u313A'] = '\\\\u11B0';\\n  t['\\\\u313B'] = '\\\\u11B1';\\n  t['\\\\u313C'] = '\\\\u11B2';\\n  t['\\\\u313D'] = '\\\\u11B3';\\n  t['\\\\u313E'] = '\\\\u11B4';\\n  t['\\\\u313F'] = '\\\\u11B5';\\n  t['\\\\u3140'] = '\\\\u111A';\\n  t['\\\\u3141'] = '\\\\u1106';\\n  t['\\\\u3142'] = '\\\\u1107';\\n  t['\\\\u3143'] = '\\\\u1108';\\n  t['\\\\u3144'] = '\\\\u1121';\\n  t['\\\\u3145'] = '\\\\u1109';\\n  t['\\\\u3146'] = '\\\\u110A';\\n  t['\\\\u3147'] = '\\\\u110B';\\n  t['\\\\u3148'] = '\\\\u110C';\\n  t['\\\\u3149'] = '\\\\u110D';\\n  t['\\\\u314A'] = '\\\\u110E';\\n  t['\\\\u314B'] = '\\\\u110F';\\n  t['\\\\u314C'] = '\\\\u1110';\\n  t['\\\\u314D'] = '\\\\u1111';\\n  t['\\\\u314E'] = '\\\\u1112';\\n  t['\\\\u314F'] = '\\\\u1161';\\n  t['\\\\u3150'] = '\\\\u1162';\\n  t['\\\\u3151'] = '\\\\u1163';\\n  t['\\\\u3152'] = '\\\\u1164';\\n  t['\\\\u3153'] = '\\\\u1165';\\n  t['\\\\u3154'] = '\\\\u1166';\\n  t['\\\\u3155'] = '\\\\u1167';\\n  t['\\\\u3156'] = '\\\\u1168';\\n  t['\\\\u3157'] = '\\\\u1169';\\n  t['\\\\u3158'] = '\\\\u116A';\\n  t['\\\\u3159'] = '\\\\u116B';\\n  t['\\\\u315A'] = '\\\\u116C';\\n  t['\\\\u315B'] = '\\\\u116D';\\n  t['\\\\u315C'] = '\\\\u116E';\\n  t['\\\\u315D'] = '\\\\u116F';\\n  t['\\\\u315E'] = '\\\\u1170';\\n  t['\\\\u315F'] = '\\\\u1171';\\n  t['\\\\u3160'] = '\\\\u1172';\\n  t['\\\\u3161'] = '\\\\u1173';\\n  t['\\\\u3162'] = '\\\\u1174';\\n  t['\\\\u3163'] = '\\\\u1175';\\n  t['\\\\u3164'] = '\\\\u1160';\\n  t['\\\\u3165'] = '\\\\u1114';\\n  t['\\\\u3166'] = '\\\\u1115';\\n  t['\\\\u3167'] = '\\\\u11C7';\\n  t['\\\\u3168'] = '\\\\u11C8';\\n  t['\\\\u3169'] = '\\\\u11CC';\\n  t['\\\\u316A'] = '\\\\u11CE';\\n  t['\\\\u316B'] = '\\\\u11D3';\\n  t['\\\\u316C'] = '\\\\u11D7';\\n  t['\\\\u316D'] = '\\\\u11D9';\\n  t['\\\\u316E'] = '\\\\u111C';\\n  t['\\\\u316F'] = '\\\\u11DD';\\n  t['\\\\u3170'] = '\\\\u11DF';\\n  t['\\\\u3171'] = '\\\\u111D';\\n  t['\\\\u3172'] = '\\\\u111E';\\n  t['\\\\u3173'] = '\\\\u1120';\\n  t['\\\\u3174'] = '\\\\u1122';\\n  t['\\\\u3175'] = '\\\\u1123';\\n  t['\\\\u3176'] = '\\\\u1127';\\n  t['\\\\u3177'] = '\\\\u1129';\\n  t['\\\\u3178'] = '\\\\u112B';\\n  t['\\\\u3179'] = '\\\\u112C';\\n  t['\\\\u317A'] = '\\\\u112D';\\n  t['\\\\u317B'] = '\\\\u112E';\\n  t['\\\\u317C'] = '\\\\u112F';\\n  t['\\\\u317D'] = '\\\\u1132';\\n  t['\\\\u317E'] = '\\\\u1136';\\n  t['\\\\u317F'] = '\\\\u1140';\\n  t['\\\\u3180'] = '\\\\u1147';\\n  t['\\\\u3181'] = '\\\\u114C';\\n  t['\\\\u3182'] = '\\\\u11F1';\\n  t['\\\\u3183'] = '\\\\u11F2';\\n  t['\\\\u3184'] = '\\\\u1157';\\n  t['\\\\u3185'] = '\\\\u1158';\\n  t['\\\\u3186'] = '\\\\u1159';\\n  t['\\\\u3187'] = '\\\\u1184';\\n  t['\\\\u3188'] = '\\\\u1185';\\n  t['\\\\u3189'] = '\\\\u1188';\\n  t['\\\\u318A'] = '\\\\u1191';\\n  t['\\\\u318B'] = '\\\\u1192';\\n  t['\\\\u318C'] = '\\\\u1194';\\n  t['\\\\u318D'] = '\\\\u119E';\\n  t['\\\\u318E'] = '\\\\u11A1';\\n  t['\\\\u3200'] = '(\\\\u1100)';\\n  t['\\\\u3201'] = '(\\\\u1102)';\\n  t['\\\\u3202'] = '(\\\\u1103)';\\n  t['\\\\u3203'] = '(\\\\u1105)';\\n  t['\\\\u3204'] = '(\\\\u1106)';\\n  t['\\\\u3205'] = '(\\\\u1107)';\\n  t['\\\\u3206'] = '(\\\\u1109)';\\n  t['\\\\u3207'] = '(\\\\u110B)';\\n  t['\\\\u3208'] = '(\\\\u110C)';\\n  t['\\\\u3209'] = '(\\\\u110E)';\\n  t['\\\\u320A'] = '(\\\\u110F)';\\n  t['\\\\u320B'] = '(\\\\u1110)';\\n  t['\\\\u320C'] = '(\\\\u1111)';\\n  t['\\\\u320D'] = '(\\\\u1112)';\\n  t['\\\\u320E'] = '(\\\\u1100\\\\u1161)';\\n  t['\\\\u320F'] = '(\\\\u1102\\\\u1161)';\\n  t['\\\\u3210'] = '(\\\\u1103\\\\u1161)';\\n  t['\\\\u3211'] = '(\\\\u1105\\\\u1161)';\\n  t['\\\\u3212'] = '(\\\\u1106\\\\u1161)';\\n  t['\\\\u3213'] = '(\\\\u1107\\\\u1161)';\\n  t['\\\\u3214'] = '(\\\\u1109\\\\u1161)';\\n  t['\\\\u3215'] = '(\\\\u110B\\\\u1161)';\\n  t['\\\\u3216'] = '(\\\\u110C\\\\u1161)';\\n  t['\\\\u3217'] = '(\\\\u110E\\\\u1161)';\\n  t['\\\\u3218'] = '(\\\\u110F\\\\u1161)';\\n  t['\\\\u3219'] = '(\\\\u1110\\\\u1161)';\\n  t['\\\\u321A'] = '(\\\\u1111\\\\u1161)';\\n  t['\\\\u321B'] = '(\\\\u1112\\\\u1161)';\\n  t['\\\\u321C'] = '(\\\\u110C\\\\u116E)';\\n  t['\\\\u321D'] = '(\\\\u110B\\\\u1169\\\\u110C\\\\u1165\\\\u11AB)';\\n  t['\\\\u321E'] = '(\\\\u110B\\\\u1169\\\\u1112\\\\u116E)';\\n  t['\\\\u3220'] = '(\\\\u4E00)';\\n  t['\\\\u3221'] = '(\\\\u4E8C)';\\n  t['\\\\u3222'] = '(\\\\u4E09)';\\n  t['\\\\u3223'] = '(\\\\u56DB)';\\n  t['\\\\u3224'] = '(\\\\u4E94)';\\n  t['\\\\u3225'] = '(\\\\u516D)';\\n  t['\\\\u3226'] = '(\\\\u4E03)';\\n  t['\\\\u3227'] = '(\\\\u516B)';\\n  t['\\\\u3228'] = '(\\\\u4E5D)';\\n  t['\\\\u3229'] = '(\\\\u5341)';\\n  t['\\\\u322A'] = '(\\\\u6708)';\\n  t['\\\\u322B'] = '(\\\\u706B)';\\n  t['\\\\u322C'] = '(\\\\u6C34)';\\n  t['\\\\u322D'] = '(\\\\u6728)';\\n  t['\\\\u322E'] = '(\\\\u91D1)';\\n  t['\\\\u322F'] = '(\\\\u571F)';\\n  t['\\\\u3230'] = '(\\\\u65E5)';\\n  t['\\\\u3231'] = '(\\\\u682A)';\\n  t['\\\\u3232'] = '(\\\\u6709)';\\n  t['\\\\u3233'] = '(\\\\u793E)';\\n  t['\\\\u3234'] = '(\\\\u540D)';\\n  t['\\\\u3235'] = '(\\\\u7279)';\\n  t['\\\\u3236'] = '(\\\\u8CA1)';\\n  t['\\\\u3237'] = '(\\\\u795D)';\\n  t['\\\\u3238'] = '(\\\\u52B4)';\\n  t['\\\\u3239'] = '(\\\\u4EE3)';\\n  t['\\\\u323A'] = '(\\\\u547C)';\\n  t['\\\\u323B'] = '(\\\\u5B66)';\\n  t['\\\\u323C'] = '(\\\\u76E3)';\\n  t['\\\\u323D'] = '(\\\\u4F01)';\\n  t['\\\\u323E'] = '(\\\\u8CC7)';\\n  t['\\\\u323F'] = '(\\\\u5354)';\\n  t['\\\\u3240'] = '(\\\\u796D)';\\n  t['\\\\u3241'] = '(\\\\u4F11)';\\n  t['\\\\u3242'] = '(\\\\u81EA)';\\n  t['\\\\u3243'] = '(\\\\u81F3)';\\n  t['\\\\u32C0'] = '1\\\\u6708';\\n  t['\\\\u32C1'] = '2\\\\u6708';\\n  t['\\\\u32C2'] = '3\\\\u6708';\\n  t['\\\\u32C3'] = '4\\\\u6708';\\n  t['\\\\u32C4'] = '5\\\\u6708';\\n  t['\\\\u32C5'] = '6\\\\u6708';\\n  t['\\\\u32C6'] = '7\\\\u6708';\\n  t['\\\\u32C7'] = '8\\\\u6708';\\n  t['\\\\u32C8'] = '9\\\\u6708';\\n  t['\\\\u32C9'] = '10\\\\u6708';\\n  t['\\\\u32CA'] = '11\\\\u6708';\\n  t['\\\\u32CB'] = '12\\\\u6708';\\n  t['\\\\u3358'] = '0\\\\u70B9';\\n  t['\\\\u3359'] = '1\\\\u70B9';\\n  t['\\\\u335A'] = '2\\\\u70B9';\\n  t['\\\\u335B'] = '3\\\\u70B9';\\n  t['\\\\u335C'] = '4\\\\u70B9';\\n  t['\\\\u335D'] = '5\\\\u70B9';\\n  t['\\\\u335E'] = '6\\\\u70B9';\\n  t['\\\\u335F'] = '7\\\\u70B9';\\n  t['\\\\u3360'] = '8\\\\u70B9';\\n  t['\\\\u3361'] = '9\\\\u70B9';\\n  t['\\\\u3362'] = '10\\\\u70B9';\\n  t['\\\\u3363'] = '11\\\\u70B9';\\n  t['\\\\u3364'] = '12\\\\u70B9';\\n  t['\\\\u3365'] = '13\\\\u70B9';\\n  t['\\\\u3366'] = '14\\\\u70B9';\\n  t['\\\\u3367'] = '15\\\\u70B9';\\n  t['\\\\u3368'] = '16\\\\u70B9';\\n  t['\\\\u3369'] = '17\\\\u70B9';\\n  t['\\\\u336A'] = '18\\\\u70B9';\\n  t['\\\\u336B'] = '19\\\\u70B9';\\n  t['\\\\u336C'] = '20\\\\u70B9';\\n  t['\\\\u336D'] = '21\\\\u70B9';\\n  t['\\\\u336E'] = '22\\\\u70B9';\\n  t['\\\\u336F'] = '23\\\\u70B9';\\n  t['\\\\u3370'] = '24\\\\u70B9';\\n  t['\\\\u33E0'] = '1\\\\u65E5';\\n  t['\\\\u33E1'] = '2\\\\u65E5';\\n  t['\\\\u33E2'] = '3\\\\u65E5';\\n  t['\\\\u33E3'] = '4\\\\u65E5';\\n  t['\\\\u33E4'] = '5\\\\u65E5';\\n  t['\\\\u33E5'] = '6\\\\u65E5';\\n  t['\\\\u33E6'] = '7\\\\u65E5';\\n  t['\\\\u33E7'] = '8\\\\u65E5';\\n  t['\\\\u33E8'] = '9\\\\u65E5';\\n  t['\\\\u33E9'] = '10\\\\u65E5';\\n  t['\\\\u33EA'] = '11\\\\u65E5';\\n  t['\\\\u33EB'] = '12\\\\u65E5';\\n  t['\\\\u33EC'] = '13\\\\u65E5';\\n  t['\\\\u33ED'] = '14\\\\u65E5';\\n  t['\\\\u33EE'] = '15\\\\u65E5';\\n  t['\\\\u33EF'] = '16\\\\u65E5';\\n  t['\\\\u33F0'] = '17\\\\u65E5';\\n  t['\\\\u33F1'] = '18\\\\u65E5';\\n  t['\\\\u33F2'] = '19\\\\u65E5';\\n  t['\\\\u33F3'] = '20\\\\u65E5';\\n  t['\\\\u33F4'] = '21\\\\u65E5';\\n  t['\\\\u33F5'] = '22\\\\u65E5';\\n  t['\\\\u33F6'] = '23\\\\u65E5';\\n  t['\\\\u33F7'] = '24\\\\u65E5';\\n  t['\\\\u33F8'] = '25\\\\u65E5';\\n  t['\\\\u33F9'] = '26\\\\u65E5';\\n  t['\\\\u33FA'] = '27\\\\u65E5';\\n  t['\\\\u33FB'] = '28\\\\u65E5';\\n  t['\\\\u33FC'] = '29\\\\u65E5';\\n  t['\\\\u33FD'] = '30\\\\u65E5';\\n  t['\\\\u33FE'] = '31\\\\u65E5';\\n  t['\\\\uFB00'] = 'ff';\\n  t['\\\\uFB01'] = 'fi';\\n  t['\\\\uFB02'] = 'fl';\\n  t['\\\\uFB03'] = 'ffi';\\n  t['\\\\uFB04'] = 'ffl';\\n  t['\\\\uFB05'] = '\\\\u017Ft';\\n  t['\\\\uFB06'] = 'st';\\n  t['\\\\uFB13'] = '\\\\u0574\\\\u0576';\\n  t['\\\\uFB14'] = '\\\\u0574\\\\u0565';\\n  t['\\\\uFB15'] = '\\\\u0574\\\\u056B';\\n  t['\\\\uFB16'] = '\\\\u057E\\\\u0576';\\n  t['\\\\uFB17'] = '\\\\u0574\\\\u056D';\\n  t['\\\\uFB4F'] = '\\\\u05D0\\\\u05DC';\\n  t['\\\\uFB50'] = '\\\\u0671';\\n  t['\\\\uFB51'] = '\\\\u0671';\\n  t['\\\\uFB52'] = '\\\\u067B';\\n  t['\\\\uFB53'] = '\\\\u067B';\\n  t['\\\\uFB54'] = '\\\\u067B';\\n  t['\\\\uFB55'] = '\\\\u067B';\\n  t['\\\\uFB56'] = '\\\\u067E';\\n  t['\\\\uFB57'] = '\\\\u067E';\\n  t['\\\\uFB58'] = '\\\\u067E';\\n  t['\\\\uFB59'] = '\\\\u067E';\\n  t['\\\\uFB5A'] = '\\\\u0680';\\n  t['\\\\uFB5B'] = '\\\\u0680';\\n  t['\\\\uFB5C'] = '\\\\u0680';\\n  t['\\\\uFB5D'] = '\\\\u0680';\\n  t['\\\\uFB5E'] = '\\\\u067A';\\n  t['\\\\uFB5F'] = '\\\\u067A';\\n  t['\\\\uFB60'] = '\\\\u067A';\\n  t['\\\\uFB61'] = '\\\\u067A';\\n  t['\\\\uFB62'] = '\\\\u067F';\\n  t['\\\\uFB63'] = '\\\\u067F';\\n  t['\\\\uFB64'] = '\\\\u067F';\\n  t['\\\\uFB65'] = '\\\\u067F';\\n  t['\\\\uFB66'] = '\\\\u0679';\\n  t['\\\\uFB67'] = '\\\\u0679';\\n  t['\\\\uFB68'] = '\\\\u0679';\\n  t['\\\\uFB69'] = '\\\\u0679';\\n  t['\\\\uFB6A'] = '\\\\u06A4';\\n  t['\\\\uFB6B'] = '\\\\u06A4';\\n  t['\\\\uFB6C'] = '\\\\u06A4';\\n  t['\\\\uFB6D'] = '\\\\u06A4';\\n  t['\\\\uFB6E'] = '\\\\u06A6';\\n  t['\\\\uFB6F'] = '\\\\u06A6';\\n  t['\\\\uFB70'] = '\\\\u06A6';\\n  t['\\\\uFB71'] = '\\\\u06A6';\\n  t['\\\\uFB72'] = '\\\\u0684';\\n  t['\\\\uFB73'] = '\\\\u0684';\\n  t['\\\\uFB74'] = '\\\\u0684';\\n  t['\\\\uFB75'] = '\\\\u0684';\\n  t['\\\\uFB76'] = '\\\\u0683';\\n  t['\\\\uFB77'] = '\\\\u0683';\\n  t['\\\\uFB78'] = '\\\\u0683';\\n  t['\\\\uFB79'] = '\\\\u0683';\\n  t['\\\\uFB7A'] = '\\\\u0686';\\n  t['\\\\uFB7B'] = '\\\\u0686';\\n  t['\\\\uFB7C'] = '\\\\u0686';\\n  t['\\\\uFB7D'] = '\\\\u0686';\\n  t['\\\\uFB7E'] = '\\\\u0687';\\n  t['\\\\uFB7F'] = '\\\\u0687';\\n  t['\\\\uFB80'] = '\\\\u0687';\\n  t['\\\\uFB81'] = '\\\\u0687';\\n  t['\\\\uFB82'] = '\\\\u068D';\\n  t['\\\\uFB83'] = '\\\\u068D';\\n  t['\\\\uFB84'] = '\\\\u068C';\\n  t['\\\\uFB85'] = '\\\\u068C';\\n  t['\\\\uFB86'] = '\\\\u068E';\\n  t['\\\\uFB87'] = '\\\\u068E';\\n  t['\\\\uFB88'] = '\\\\u0688';\\n  t['\\\\uFB89'] = '\\\\u0688';\\n  t['\\\\uFB8A'] = '\\\\u0698';\\n  t['\\\\uFB8B'] = '\\\\u0698';\\n  t['\\\\uFB8C'] = '\\\\u0691';\\n  t['\\\\uFB8D'] = '\\\\u0691';\\n  t['\\\\uFB8E'] = '\\\\u06A9';\\n  t['\\\\uFB8F'] = '\\\\u06A9';\\n  t['\\\\uFB90'] = '\\\\u06A9';\\n  t['\\\\uFB91'] = '\\\\u06A9';\\n  t['\\\\uFB92'] = '\\\\u06AF';\\n  t['\\\\uFB93'] = '\\\\u06AF';\\n  t['\\\\uFB94'] = '\\\\u06AF';\\n  t['\\\\uFB95'] = '\\\\u06AF';\\n  t['\\\\uFB96'] = '\\\\u06B3';\\n  t['\\\\uFB97'] = '\\\\u06B3';\\n  t['\\\\uFB98'] = '\\\\u06B3';\\n  t['\\\\uFB99'] = '\\\\u06B3';\\n  t['\\\\uFB9A'] = '\\\\u06B1';\\n  t['\\\\uFB9B'] = '\\\\u06B1';\\n  t['\\\\uFB9C'] = '\\\\u06B1';\\n  t['\\\\uFB9D'] = '\\\\u06B1';\\n  t['\\\\uFB9E'] = '\\\\u06BA';\\n  t['\\\\uFB9F'] = '\\\\u06BA';\\n  t['\\\\uFBA0'] = '\\\\u06BB';\\n  t['\\\\uFBA1'] = '\\\\u06BB';\\n  t['\\\\uFBA2'] = '\\\\u06BB';\\n  t['\\\\uFBA3'] = '\\\\u06BB';\\n  t['\\\\uFBA4'] = '\\\\u06C0';\\n  t['\\\\uFBA5'] = '\\\\u06C0';\\n  t['\\\\uFBA6'] = '\\\\u06C1';\\n  t['\\\\uFBA7'] = '\\\\u06C1';\\n  t['\\\\uFBA8'] = '\\\\u06C1';\\n  t['\\\\uFBA9'] = '\\\\u06C1';\\n  t['\\\\uFBAA'] = '\\\\u06BE';\\n  t['\\\\uFBAB'] = '\\\\u06BE';\\n  t['\\\\uFBAC'] = '\\\\u06BE';\\n  t['\\\\uFBAD'] = '\\\\u06BE';\\n  t['\\\\uFBAE'] = '\\\\u06D2';\\n  t['\\\\uFBAF'] = '\\\\u06D2';\\n  t['\\\\uFBB0'] = '\\\\u06D3';\\n  t['\\\\uFBB1'] = '\\\\u06D3';\\n  t['\\\\uFBD3'] = '\\\\u06AD';\\n  t['\\\\uFBD4'] = '\\\\u06AD';\\n  t['\\\\uFBD5'] = '\\\\u06AD';\\n  t['\\\\uFBD6'] = '\\\\u06AD';\\n  t['\\\\uFBD7'] = '\\\\u06C7';\\n  t['\\\\uFBD8'] = '\\\\u06C7';\\n  t['\\\\uFBD9'] = '\\\\u06C6';\\n  t['\\\\uFBDA'] = '\\\\u06C6';\\n  t['\\\\uFBDB'] = '\\\\u06C8';\\n  t['\\\\uFBDC'] = '\\\\u06C8';\\n  t['\\\\uFBDD'] = '\\\\u0677';\\n  t['\\\\uFBDE'] = '\\\\u06CB';\\n  t['\\\\uFBDF'] = '\\\\u06CB';\\n  t['\\\\uFBE0'] = '\\\\u06C5';\\n  t['\\\\uFBE1'] = '\\\\u06C5';\\n  t['\\\\uFBE2'] = '\\\\u06C9';\\n  t['\\\\uFBE3'] = '\\\\u06C9';\\n  t['\\\\uFBE4'] = '\\\\u06D0';\\n  t['\\\\uFBE5'] = '\\\\u06D0';\\n  t['\\\\uFBE6'] = '\\\\u06D0';\\n  t['\\\\uFBE7'] = '\\\\u06D0';\\n  t['\\\\uFBE8'] = '\\\\u0649';\\n  t['\\\\uFBE9'] = '\\\\u0649';\\n  t['\\\\uFBEA'] = '\\\\u0626\\\\u0627';\\n  t['\\\\uFBEB'] = '\\\\u0626\\\\u0627';\\n  t['\\\\uFBEC'] = '\\\\u0626\\\\u06D5';\\n  t['\\\\uFBED'] = '\\\\u0626\\\\u06D5';\\n  t['\\\\uFBEE'] = '\\\\u0626\\\\u0648';\\n  t['\\\\uFBEF'] = '\\\\u0626\\\\u0648';\\n  t['\\\\uFBF0'] = '\\\\u0626\\\\u06C7';\\n  t['\\\\uFBF1'] = '\\\\u0626\\\\u06C7';\\n  t['\\\\uFBF2'] = '\\\\u0626\\\\u06C6';\\n  t['\\\\uFBF3'] = '\\\\u0626\\\\u06C6';\\n  t['\\\\uFBF4'] = '\\\\u0626\\\\u06C8';\\n  t['\\\\uFBF5'] = '\\\\u0626\\\\u06C8';\\n  t['\\\\uFBF6'] = '\\\\u0626\\\\u06D0';\\n  t['\\\\uFBF7'] = '\\\\u0626\\\\u06D0';\\n  t['\\\\uFBF8'] = '\\\\u0626\\\\u06D0';\\n  t['\\\\uFBF9'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFBFA'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFBFB'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFBFC'] = '\\\\u06CC';\\n  t['\\\\uFBFD'] = '\\\\u06CC';\\n  t['\\\\uFBFE'] = '\\\\u06CC';\\n  t['\\\\uFBFF'] = '\\\\u06CC';\\n  t['\\\\uFC00'] = '\\\\u0626\\\\u062C';\\n  t['\\\\uFC01'] = '\\\\u0626\\\\u062D';\\n  t['\\\\uFC02'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFC03'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFC04'] = '\\\\u0626\\\\u064A';\\n  t['\\\\uFC05'] = '\\\\u0628\\\\u062C';\\n  t['\\\\uFC06'] = '\\\\u0628\\\\u062D';\\n  t['\\\\uFC07'] = '\\\\u0628\\\\u062E';\\n  t['\\\\uFC08'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFC09'] = '\\\\u0628\\\\u0649';\\n  t['\\\\uFC0A'] = '\\\\u0628\\\\u064A';\\n  t['\\\\uFC0B'] = '\\\\u062A\\\\u062C';\\n  t['\\\\uFC0C'] = '\\\\u062A\\\\u062D';\\n  t['\\\\uFC0D'] = '\\\\u062A\\\\u062E';\\n  t['\\\\uFC0E'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFC0F'] = '\\\\u062A\\\\u0649';\\n  t['\\\\uFC10'] = '\\\\u062A\\\\u064A';\\n  t['\\\\uFC11'] = '\\\\u062B\\\\u062C';\\n  t['\\\\uFC12'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFC13'] = '\\\\u062B\\\\u0649';\\n  t['\\\\uFC14'] = '\\\\u062B\\\\u064A';\\n  t['\\\\uFC15'] = '\\\\u062C\\\\u062D';\\n  t['\\\\uFC16'] = '\\\\u062C\\\\u0645';\\n  t['\\\\uFC17'] = '\\\\u062D\\\\u062C';\\n  t['\\\\uFC18'] = '\\\\u062D\\\\u0645';\\n  t['\\\\uFC19'] = '\\\\u062E\\\\u062C';\\n  t['\\\\uFC1A'] = '\\\\u062E\\\\u062D';\\n  t['\\\\uFC1B'] = '\\\\u062E\\\\u0645';\\n  t['\\\\uFC1C'] = '\\\\u0633\\\\u062C';\\n  t['\\\\uFC1D'] = '\\\\u0633\\\\u062D';\\n  t['\\\\uFC1E'] = '\\\\u0633\\\\u062E';\\n  t['\\\\uFC1F'] = '\\\\u0633\\\\u0645';\\n  t['\\\\uFC20'] = '\\\\u0635\\\\u062D';\\n  t['\\\\uFC21'] = '\\\\u0635\\\\u0645';\\n  t['\\\\uFC22'] = '\\\\u0636\\\\u062C';\\n  t['\\\\uFC23'] = '\\\\u0636\\\\u062D';\\n  t['\\\\uFC24'] = '\\\\u0636\\\\u062E';\\n  t['\\\\uFC25'] = '\\\\u0636\\\\u0645';\\n  t['\\\\uFC26'] = '\\\\u0637\\\\u062D';\\n  t['\\\\uFC27'] = '\\\\u0637\\\\u0645';\\n  t['\\\\uFC28'] = '\\\\u0638\\\\u0645';\\n  t['\\\\uFC29'] = '\\\\u0639\\\\u062C';\\n  t['\\\\uFC2A'] = '\\\\u0639\\\\u0645';\\n  t['\\\\uFC2B'] = '\\\\u063A\\\\u062C';\\n  t['\\\\uFC2C'] = '\\\\u063A\\\\u0645';\\n  t['\\\\uFC2D'] = '\\\\u0641\\\\u062C';\\n  t['\\\\uFC2E'] = '\\\\u0641\\\\u062D';\\n  t['\\\\uFC2F'] = '\\\\u0641\\\\u062E';\\n  t['\\\\uFC30'] = '\\\\u0641\\\\u0645';\\n  t['\\\\uFC31'] = '\\\\u0641\\\\u0649';\\n  t['\\\\uFC32'] = '\\\\u0641\\\\u064A';\\n  t['\\\\uFC33'] = '\\\\u0642\\\\u062D';\\n  t['\\\\uFC34'] = '\\\\u0642\\\\u0645';\\n  t['\\\\uFC35'] = '\\\\u0642\\\\u0649';\\n  t['\\\\uFC36'] = '\\\\u0642\\\\u064A';\\n  t['\\\\uFC37'] = '\\\\u0643\\\\u0627';\\n  t['\\\\uFC38'] = '\\\\u0643\\\\u062C';\\n  t['\\\\uFC39'] = '\\\\u0643\\\\u062D';\\n  t['\\\\uFC3A'] = '\\\\u0643\\\\u062E';\\n  t['\\\\uFC3B'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFC3C'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFC3D'] = '\\\\u0643\\\\u0649';\\n  t['\\\\uFC3E'] = '\\\\u0643\\\\u064A';\\n  t['\\\\uFC3F'] = '\\\\u0644\\\\u062C';\\n  t['\\\\uFC40'] = '\\\\u0644\\\\u062D';\\n  t['\\\\uFC41'] = '\\\\u0644\\\\u062E';\\n  t['\\\\uFC42'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFC43'] = '\\\\u0644\\\\u0649';\\n  t['\\\\uFC44'] = '\\\\u0644\\\\u064A';\\n  t['\\\\uFC45'] = '\\\\u0645\\\\u062C';\\n  t['\\\\uFC46'] = '\\\\u0645\\\\u062D';\\n  t['\\\\uFC47'] = '\\\\u0645\\\\u062E';\\n  t['\\\\uFC48'] = '\\\\u0645\\\\u0645';\\n  t['\\\\uFC49'] = '\\\\u0645\\\\u0649';\\n  t['\\\\uFC4A'] = '\\\\u0645\\\\u064A';\\n  t['\\\\uFC4B'] = '\\\\u0646\\\\u062C';\\n  t['\\\\uFC4C'] = '\\\\u0646\\\\u062D';\\n  t['\\\\uFC4D'] = '\\\\u0646\\\\u062E';\\n  t['\\\\uFC4E'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFC4F'] = '\\\\u0646\\\\u0649';\\n  t['\\\\uFC50'] = '\\\\u0646\\\\u064A';\\n  t['\\\\uFC51'] = '\\\\u0647\\\\u062C';\\n  t['\\\\uFC52'] = '\\\\u0647\\\\u0645';\\n  t['\\\\uFC53'] = '\\\\u0647\\\\u0649';\\n  t['\\\\uFC54'] = '\\\\u0647\\\\u064A';\\n  t['\\\\uFC55'] = '\\\\u064A\\\\u062C';\\n  t['\\\\uFC56'] = '\\\\u064A\\\\u062D';\\n  t['\\\\uFC57'] = '\\\\u064A\\\\u062E';\\n  t['\\\\uFC58'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFC59'] = '\\\\u064A\\\\u0649';\\n  t['\\\\uFC5A'] = '\\\\u064A\\\\u064A';\\n  t['\\\\uFC5B'] = '\\\\u0630\\\\u0670';\\n  t['\\\\uFC5C'] = '\\\\u0631\\\\u0670';\\n  t['\\\\uFC5D'] = '\\\\u0649\\\\u0670';\\n  t['\\\\uFC5E'] = ' \\\\u064C\\\\u0651';\\n  t['\\\\uFC5F'] = ' \\\\u064D\\\\u0651';\\n  t['\\\\uFC60'] = ' \\\\u064E\\\\u0651';\\n  t['\\\\uFC61'] = ' \\\\u064F\\\\u0651';\\n  t['\\\\uFC62'] = ' \\\\u0650\\\\u0651';\\n  t['\\\\uFC63'] = ' \\\\u0651\\\\u0670';\\n  t['\\\\uFC64'] = '\\\\u0626\\\\u0631';\\n  t['\\\\uFC65'] = '\\\\u0626\\\\u0632';\\n  t['\\\\uFC66'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFC67'] = '\\\\u0626\\\\u0646';\\n  t['\\\\uFC68'] = '\\\\u0626\\\\u0649';\\n  t['\\\\uFC69'] = '\\\\u0626\\\\u064A';\\n  t['\\\\uFC6A'] = '\\\\u0628\\\\u0631';\\n  t['\\\\uFC6B'] = '\\\\u0628\\\\u0632';\\n  t['\\\\uFC6C'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFC6D'] = '\\\\u0628\\\\u0646';\\n  t['\\\\uFC6E'] = '\\\\u0628\\\\u0649';\\n  t['\\\\uFC6F'] = '\\\\u0628\\\\u064A';\\n  t['\\\\uFC70'] = '\\\\u062A\\\\u0631';\\n  t['\\\\uFC71'] = '\\\\u062A\\\\u0632';\\n  t['\\\\uFC72'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFC73'] = '\\\\u062A\\\\u0646';\\n  t['\\\\uFC74'] = '\\\\u062A\\\\u0649';\\n  t['\\\\uFC75'] = '\\\\u062A\\\\u064A';\\n  t['\\\\uFC76'] = '\\\\u062B\\\\u0631';\\n  t['\\\\uFC77'] = '\\\\u062B\\\\u0632';\\n  t['\\\\uFC78'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFC79'] = '\\\\u062B\\\\u0646';\\n  t['\\\\uFC7A'] = '\\\\u062B\\\\u0649';\\n  t['\\\\uFC7B'] = '\\\\u062B\\\\u064A';\\n  t['\\\\uFC7C'] = '\\\\u0641\\\\u0649';\\n  t['\\\\uFC7D'] = '\\\\u0641\\\\u064A';\\n  t['\\\\uFC7E'] = '\\\\u0642\\\\u0649';\\n  t['\\\\uFC7F'] = '\\\\u0642\\\\u064A';\\n  t['\\\\uFC80'] = '\\\\u0643\\\\u0627';\\n  t['\\\\uFC81'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFC82'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFC83'] = '\\\\u0643\\\\u0649';\\n  t['\\\\uFC84'] = '\\\\u0643\\\\u064A';\\n  t['\\\\uFC85'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFC86'] = '\\\\u0644\\\\u0649';\\n  t['\\\\uFC87'] = '\\\\u0644\\\\u064A';\\n  t['\\\\uFC88'] = '\\\\u0645\\\\u0627';\\n  t['\\\\uFC89'] = '\\\\u0645\\\\u0645';\\n  t['\\\\uFC8A'] = '\\\\u0646\\\\u0631';\\n  t['\\\\uFC8B'] = '\\\\u0646\\\\u0632';\\n  t['\\\\uFC8C'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFC8D'] = '\\\\u0646\\\\u0646';\\n  t['\\\\uFC8E'] = '\\\\u0646\\\\u0649';\\n  t['\\\\uFC8F'] = '\\\\u0646\\\\u064A';\\n  t['\\\\uFC90'] = '\\\\u0649\\\\u0670';\\n  t['\\\\uFC91'] = '\\\\u064A\\\\u0631';\\n  t['\\\\uFC92'] = '\\\\u064A\\\\u0632';\\n  t['\\\\uFC93'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFC94'] = '\\\\u064A\\\\u0646';\\n  t['\\\\uFC95'] = '\\\\u064A\\\\u0649';\\n  t['\\\\uFC96'] = '\\\\u064A\\\\u064A';\\n  t['\\\\uFC97'] = '\\\\u0626\\\\u062C';\\n  t['\\\\uFC98'] = '\\\\u0626\\\\u062D';\\n  t['\\\\uFC99'] = '\\\\u0626\\\\u062E';\\n  t['\\\\uFC9A'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFC9B'] = '\\\\u0626\\\\u0647';\\n  t['\\\\uFC9C'] = '\\\\u0628\\\\u062C';\\n  t['\\\\uFC9D'] = '\\\\u0628\\\\u062D';\\n  t['\\\\uFC9E'] = '\\\\u0628\\\\u062E';\\n  t['\\\\uFC9F'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFCA0'] = '\\\\u0628\\\\u0647';\\n  t['\\\\uFCA1'] = '\\\\u062A\\\\u062C';\\n  t['\\\\uFCA2'] = '\\\\u062A\\\\u062D';\\n  t['\\\\uFCA3'] = '\\\\u062A\\\\u062E';\\n  t['\\\\uFCA4'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFCA5'] = '\\\\u062A\\\\u0647';\\n  t['\\\\uFCA6'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFCA7'] = '\\\\u062C\\\\u062D';\\n  t['\\\\uFCA8'] = '\\\\u062C\\\\u0645';\\n  t['\\\\uFCA9'] = '\\\\u062D\\\\u062C';\\n  t['\\\\uFCAA'] = '\\\\u062D\\\\u0645';\\n  t['\\\\uFCAB'] = '\\\\u062E\\\\u062C';\\n  t['\\\\uFCAC'] = '\\\\u062E\\\\u0645';\\n  t['\\\\uFCAD'] = '\\\\u0633\\\\u062C';\\n  t['\\\\uFCAE'] = '\\\\u0633\\\\u062D';\\n  t['\\\\uFCAF'] = '\\\\u0633\\\\u062E';\\n  t['\\\\uFCB0'] = '\\\\u0633\\\\u0645';\\n  t['\\\\uFCB1'] = '\\\\u0635\\\\u062D';\\n  t['\\\\uFCB2'] = '\\\\u0635\\\\u062E';\\n  t['\\\\uFCB3'] = '\\\\u0635\\\\u0645';\\n  t['\\\\uFCB4'] = '\\\\u0636\\\\u062C';\\n  t['\\\\uFCB5'] = '\\\\u0636\\\\u062D';\\n  t['\\\\uFCB6'] = '\\\\u0636\\\\u062E';\\n  t['\\\\uFCB7'] = '\\\\u0636\\\\u0645';\\n  t['\\\\uFCB8'] = '\\\\u0637\\\\u062D';\\n  t['\\\\uFCB9'] = '\\\\u0638\\\\u0645';\\n  t['\\\\uFCBA'] = '\\\\u0639\\\\u062C';\\n  t['\\\\uFCBB'] = '\\\\u0639\\\\u0645';\\n  t['\\\\uFCBC'] = '\\\\u063A\\\\u062C';\\n  t['\\\\uFCBD'] = '\\\\u063A\\\\u0645';\\n  t['\\\\uFCBE'] = '\\\\u0641\\\\u062C';\\n  t['\\\\uFCBF'] = '\\\\u0641\\\\u062D';\\n  t['\\\\uFCC0'] = '\\\\u0641\\\\u062E';\\n  t['\\\\uFCC1'] = '\\\\u0641\\\\u0645';\\n  t['\\\\uFCC2'] = '\\\\u0642\\\\u062D';\\n  t['\\\\uFCC3'] = '\\\\u0642\\\\u0645';\\n  t['\\\\uFCC4'] = '\\\\u0643\\\\u062C';\\n  t['\\\\uFCC5'] = '\\\\u0643\\\\u062D';\\n  t['\\\\uFCC6'] = '\\\\u0643\\\\u062E';\\n  t['\\\\uFCC7'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFCC8'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFCC9'] = '\\\\u0644\\\\u062C';\\n  t['\\\\uFCCA'] = '\\\\u0644\\\\u062D';\\n  t['\\\\uFCCB'] = '\\\\u0644\\\\u062E';\\n  t['\\\\uFCCC'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFCCD'] = '\\\\u0644\\\\u0647';\\n  t['\\\\uFCCE'] = '\\\\u0645\\\\u062C';\\n  t['\\\\uFCCF'] = '\\\\u0645\\\\u062D';\\n  t['\\\\uFCD0'] = '\\\\u0645\\\\u062E';\\n  t['\\\\uFCD1'] = '\\\\u0645\\\\u0645';\\n  t['\\\\uFCD2'] = '\\\\u0646\\\\u062C';\\n  t['\\\\uFCD3'] = '\\\\u0646\\\\u062D';\\n  t['\\\\uFCD4'] = '\\\\u0646\\\\u062E';\\n  t['\\\\uFCD5'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFCD6'] = '\\\\u0646\\\\u0647';\\n  t['\\\\uFCD7'] = '\\\\u0647\\\\u062C';\\n  t['\\\\uFCD8'] = '\\\\u0647\\\\u0645';\\n  t['\\\\uFCD9'] = '\\\\u0647\\\\u0670';\\n  t['\\\\uFCDA'] = '\\\\u064A\\\\u062C';\\n  t['\\\\uFCDB'] = '\\\\u064A\\\\u062D';\\n  t['\\\\uFCDC'] = '\\\\u064A\\\\u062E';\\n  t['\\\\uFCDD'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFCDE'] = '\\\\u064A\\\\u0647';\\n  t['\\\\uFCDF'] = '\\\\u0626\\\\u0645';\\n  t['\\\\uFCE0'] = '\\\\u0626\\\\u0647';\\n  t['\\\\uFCE1'] = '\\\\u0628\\\\u0645';\\n  t['\\\\uFCE2'] = '\\\\u0628\\\\u0647';\\n  t['\\\\uFCE3'] = '\\\\u062A\\\\u0645';\\n  t['\\\\uFCE4'] = '\\\\u062A\\\\u0647';\\n  t['\\\\uFCE5'] = '\\\\u062B\\\\u0645';\\n  t['\\\\uFCE6'] = '\\\\u062B\\\\u0647';\\n  t['\\\\uFCE7'] = '\\\\u0633\\\\u0645';\\n  t['\\\\uFCE8'] = '\\\\u0633\\\\u0647';\\n  t['\\\\uFCE9'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFCEA'] = '\\\\u0634\\\\u0647';\\n  t['\\\\uFCEB'] = '\\\\u0643\\\\u0644';\\n  t['\\\\uFCEC'] = '\\\\u0643\\\\u0645';\\n  t['\\\\uFCED'] = '\\\\u0644\\\\u0645';\\n  t['\\\\uFCEE'] = '\\\\u0646\\\\u0645';\\n  t['\\\\uFCEF'] = '\\\\u0646\\\\u0647';\\n  t['\\\\uFCF0'] = '\\\\u064A\\\\u0645';\\n  t['\\\\uFCF1'] = '\\\\u064A\\\\u0647';\\n  t['\\\\uFCF2'] = '\\\\u0640\\\\u064E\\\\u0651';\\n  t['\\\\uFCF3'] = '\\\\u0640\\\\u064F\\\\u0651';\\n  t['\\\\uFCF4'] = '\\\\u0640\\\\u0650\\\\u0651';\\n  t['\\\\uFCF5'] = '\\\\u0637\\\\u0649';\\n  t['\\\\uFCF6'] = '\\\\u0637\\\\u064A';\\n  t['\\\\uFCF7'] = '\\\\u0639\\\\u0649';\\n  t['\\\\uFCF8'] = '\\\\u0639\\\\u064A';\\n  t['\\\\uFCF9'] = '\\\\u063A\\\\u0649';\\n  t['\\\\uFCFA'] = '\\\\u063A\\\\u064A';\\n  t['\\\\uFCFB'] = '\\\\u0633\\\\u0649';\\n  t['\\\\uFCFC'] = '\\\\u0633\\\\u064A';\\n  t['\\\\uFCFD'] = '\\\\u0634\\\\u0649';\\n  t['\\\\uFCFE'] = '\\\\u0634\\\\u064A';\\n  t['\\\\uFCFF'] = '\\\\u062D\\\\u0649';\\n  t['\\\\uFD00'] = '\\\\u062D\\\\u064A';\\n  t['\\\\uFD01'] = '\\\\u062C\\\\u0649';\\n  t['\\\\uFD02'] = '\\\\u062C\\\\u064A';\\n  t['\\\\uFD03'] = '\\\\u062E\\\\u0649';\\n  t['\\\\uFD04'] = '\\\\u062E\\\\u064A';\\n  t['\\\\uFD05'] = '\\\\u0635\\\\u0649';\\n  t['\\\\uFD06'] = '\\\\u0635\\\\u064A';\\n  t['\\\\uFD07'] = '\\\\u0636\\\\u0649';\\n  t['\\\\uFD08'] = '\\\\u0636\\\\u064A';\\n  t['\\\\uFD09'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD0A'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD0B'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD0C'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFD0D'] = '\\\\u0634\\\\u0631';\\n  t['\\\\uFD0E'] = '\\\\u0633\\\\u0631';\\n  t['\\\\uFD0F'] = '\\\\u0635\\\\u0631';\\n  t['\\\\uFD10'] = '\\\\u0636\\\\u0631';\\n  t['\\\\uFD11'] = '\\\\u0637\\\\u0649';\\n  t['\\\\uFD12'] = '\\\\u0637\\\\u064A';\\n  t['\\\\uFD13'] = '\\\\u0639\\\\u0649';\\n  t['\\\\uFD14'] = '\\\\u0639\\\\u064A';\\n  t['\\\\uFD15'] = '\\\\u063A\\\\u0649';\\n  t['\\\\uFD16'] = '\\\\u063A\\\\u064A';\\n  t['\\\\uFD17'] = '\\\\u0633\\\\u0649';\\n  t['\\\\uFD18'] = '\\\\u0633\\\\u064A';\\n  t['\\\\uFD19'] = '\\\\u0634\\\\u0649';\\n  t['\\\\uFD1A'] = '\\\\u0634\\\\u064A';\\n  t['\\\\uFD1B'] = '\\\\u062D\\\\u0649';\\n  t['\\\\uFD1C'] = '\\\\u062D\\\\u064A';\\n  t['\\\\uFD1D'] = '\\\\u062C\\\\u0649';\\n  t['\\\\uFD1E'] = '\\\\u062C\\\\u064A';\\n  t['\\\\uFD1F'] = '\\\\u062E\\\\u0649';\\n  t['\\\\uFD20'] = '\\\\u062E\\\\u064A';\\n  t['\\\\uFD21'] = '\\\\u0635\\\\u0649';\\n  t['\\\\uFD22'] = '\\\\u0635\\\\u064A';\\n  t['\\\\uFD23'] = '\\\\u0636\\\\u0649';\\n  t['\\\\uFD24'] = '\\\\u0636\\\\u064A';\\n  t['\\\\uFD25'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD26'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD27'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD28'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFD29'] = '\\\\u0634\\\\u0631';\\n  t['\\\\uFD2A'] = '\\\\u0633\\\\u0631';\\n  t['\\\\uFD2B'] = '\\\\u0635\\\\u0631';\\n  t['\\\\uFD2C'] = '\\\\u0636\\\\u0631';\\n  t['\\\\uFD2D'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD2E'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD2F'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD30'] = '\\\\u0634\\\\u0645';\\n  t['\\\\uFD31'] = '\\\\u0633\\\\u0647';\\n  t['\\\\uFD32'] = '\\\\u0634\\\\u0647';\\n  t['\\\\uFD33'] = '\\\\u0637\\\\u0645';\\n  t['\\\\uFD34'] = '\\\\u0633\\\\u062C';\\n  t['\\\\uFD35'] = '\\\\u0633\\\\u062D';\\n  t['\\\\uFD36'] = '\\\\u0633\\\\u062E';\\n  t['\\\\uFD37'] = '\\\\u0634\\\\u062C';\\n  t['\\\\uFD38'] = '\\\\u0634\\\\u062D';\\n  t['\\\\uFD39'] = '\\\\u0634\\\\u062E';\\n  t['\\\\uFD3A'] = '\\\\u0637\\\\u0645';\\n  t['\\\\uFD3B'] = '\\\\u0638\\\\u0645';\\n  t['\\\\uFD3C'] = '\\\\u0627\\\\u064B';\\n  t['\\\\uFD3D'] = '\\\\u0627\\\\u064B';\\n  t['\\\\uFD50'] = '\\\\u062A\\\\u062C\\\\u0645';\\n  t['\\\\uFD51'] = '\\\\u062A\\\\u062D\\\\u062C';\\n  t['\\\\uFD52'] = '\\\\u062A\\\\u062D\\\\u062C';\\n  t['\\\\uFD53'] = '\\\\u062A\\\\u062D\\\\u0645';\\n  t['\\\\uFD54'] = '\\\\u062A\\\\u062E\\\\u0645';\\n  t['\\\\uFD55'] = '\\\\u062A\\\\u0645\\\\u062C';\\n  t['\\\\uFD56'] = '\\\\u062A\\\\u0645\\\\u062D';\\n  t['\\\\uFD57'] = '\\\\u062A\\\\u0645\\\\u062E';\\n  t['\\\\uFD58'] = '\\\\u062C\\\\u0645\\\\u062D';\\n  t['\\\\uFD59'] = '\\\\u062C\\\\u0645\\\\u062D';\\n  t['\\\\uFD5A'] = '\\\\u062D\\\\u0645\\\\u064A';\\n  t['\\\\uFD5B'] = '\\\\u062D\\\\u0645\\\\u0649';\\n  t['\\\\uFD5C'] = '\\\\u0633\\\\u062D\\\\u062C';\\n  t['\\\\uFD5D'] = '\\\\u0633\\\\u062C\\\\u062D';\\n  t['\\\\uFD5E'] = '\\\\u0633\\\\u062C\\\\u0649';\\n  t['\\\\uFD5F'] = '\\\\u0633\\\\u0645\\\\u062D';\\n  t['\\\\uFD60'] = '\\\\u0633\\\\u0645\\\\u062D';\\n  t['\\\\uFD61'] = '\\\\u0633\\\\u0645\\\\u062C';\\n  t['\\\\uFD62'] = '\\\\u0633\\\\u0645\\\\u0645';\\n  t['\\\\uFD63'] = '\\\\u0633\\\\u0645\\\\u0645';\\n  t['\\\\uFD64'] = '\\\\u0635\\\\u062D\\\\u062D';\\n  t['\\\\uFD65'] = '\\\\u0635\\\\u062D\\\\u062D';\\n  t['\\\\uFD66'] = '\\\\u0635\\\\u0645\\\\u0645';\\n  t['\\\\uFD67'] = '\\\\u0634\\\\u062D\\\\u0645';\\n  t['\\\\uFD68'] = '\\\\u0634\\\\u062D\\\\u0645';\\n  t['\\\\uFD69'] = '\\\\u0634\\\\u062C\\\\u064A';\\n  t['\\\\uFD6A'] = '\\\\u0634\\\\u0645\\\\u062E';\\n  t['\\\\uFD6B'] = '\\\\u0634\\\\u0645\\\\u062E';\\n  t['\\\\uFD6C'] = '\\\\u0634\\\\u0645\\\\u0645';\\n  t['\\\\uFD6D'] = '\\\\u0634\\\\u0645\\\\u0645';\\n  t['\\\\uFD6E'] = '\\\\u0636\\\\u062D\\\\u0649';\\n  t['\\\\uFD6F'] = '\\\\u0636\\\\u062E\\\\u0645';\\n  t['\\\\uFD70'] = '\\\\u0636\\\\u062E\\\\u0645';\\n  t['\\\\uFD71'] = '\\\\u0637\\\\u0645\\\\u062D';\\n  t['\\\\uFD72'] = '\\\\u0637\\\\u0645\\\\u062D';\\n  t['\\\\uFD73'] = '\\\\u0637\\\\u0645\\\\u0645';\\n  t['\\\\uFD74'] = '\\\\u0637\\\\u0645\\\\u064A';\\n  t['\\\\uFD75'] = '\\\\u0639\\\\u062C\\\\u0645';\\n  t['\\\\uFD76'] = '\\\\u0639\\\\u0645\\\\u0645';\\n  t['\\\\uFD77'] = '\\\\u0639\\\\u0645\\\\u0645';\\n  t['\\\\uFD78'] = '\\\\u0639\\\\u0645\\\\u0649';\\n  t['\\\\uFD79'] = '\\\\u063A\\\\u0645\\\\u0645';\\n  t['\\\\uFD7A'] = '\\\\u063A\\\\u0645\\\\u064A';\\n  t['\\\\uFD7B'] = '\\\\u063A\\\\u0645\\\\u0649';\\n  t['\\\\uFD7C'] = '\\\\u0641\\\\u062E\\\\u0645';\\n  t['\\\\uFD7D'] = '\\\\u0641\\\\u062E\\\\u0645';\\n  t['\\\\uFD7E'] = '\\\\u0642\\\\u0645\\\\u062D';\\n  t['\\\\uFD7F'] = '\\\\u0642\\\\u0645\\\\u0645';\\n  t['\\\\uFD80'] = '\\\\u0644\\\\u062D\\\\u0645';\\n  t['\\\\uFD81'] = '\\\\u0644\\\\u062D\\\\u064A';\\n  t['\\\\uFD82'] = '\\\\u0644\\\\u062D\\\\u0649';\\n  t['\\\\uFD83'] = '\\\\u0644\\\\u062C\\\\u062C';\\n  t['\\\\uFD84'] = '\\\\u0644\\\\u062C\\\\u062C';\\n  t['\\\\uFD85'] = '\\\\u0644\\\\u062E\\\\u0645';\\n  t['\\\\uFD86'] = '\\\\u0644\\\\u062E\\\\u0645';\\n  t['\\\\uFD87'] = '\\\\u0644\\\\u0645\\\\u062D';\\n  t['\\\\uFD88'] = '\\\\u0644\\\\u0645\\\\u062D';\\n  t['\\\\uFD89'] = '\\\\u0645\\\\u062D\\\\u062C';\\n  t['\\\\uFD8A'] = '\\\\u0645\\\\u062D\\\\u0645';\\n  t['\\\\uFD8B'] = '\\\\u0645\\\\u062D\\\\u064A';\\n  t['\\\\uFD8C'] = '\\\\u0645\\\\u062C\\\\u062D';\\n  t['\\\\uFD8D'] = '\\\\u0645\\\\u062C\\\\u0645';\\n  t['\\\\uFD8E'] = '\\\\u0645\\\\u062E\\\\u062C';\\n  t['\\\\uFD8F'] = '\\\\u0645\\\\u062E\\\\u0645';\\n  t['\\\\uFD92'] = '\\\\u0645\\\\u062C\\\\u062E';\\n  t['\\\\uFD93'] = '\\\\u0647\\\\u0645\\\\u062C';\\n  t['\\\\uFD94'] = '\\\\u0647\\\\u0645\\\\u0645';\\n  t['\\\\uFD95'] = '\\\\u0646\\\\u062D\\\\u0645';\\n  t['\\\\uFD96'] = '\\\\u0646\\\\u062D\\\\u0649';\\n  t['\\\\uFD97'] = '\\\\u0646\\\\u062C\\\\u0645';\\n  t['\\\\uFD98'] = '\\\\u0646\\\\u062C\\\\u0645';\\n  t['\\\\uFD99'] = '\\\\u0646\\\\u062C\\\\u0649';\\n  t['\\\\uFD9A'] = '\\\\u0646\\\\u0645\\\\u064A';\\n  t['\\\\uFD9B'] = '\\\\u0646\\\\u0645\\\\u0649';\\n  t['\\\\uFD9C'] = '\\\\u064A\\\\u0645\\\\u0645';\\n  t['\\\\uFD9D'] = '\\\\u064A\\\\u0645\\\\u0645';\\n  t['\\\\uFD9E'] = '\\\\u0628\\\\u062E\\\\u064A';\\n  t['\\\\uFD9F'] = '\\\\u062A\\\\u062C\\\\u064A';\\n  t['\\\\uFDA0'] = '\\\\u062A\\\\u062C\\\\u0649';\\n  t['\\\\uFDA1'] = '\\\\u062A\\\\u062E\\\\u064A';\\n  t['\\\\uFDA2'] = '\\\\u062A\\\\u062E\\\\u0649';\\n  t['\\\\uFDA3'] = '\\\\u062A\\\\u0645\\\\u064A';\\n  t['\\\\uFDA4'] = '\\\\u062A\\\\u0645\\\\u0649';\\n  t['\\\\uFDA5'] = '\\\\u062C\\\\u0645\\\\u064A';\\n  t['\\\\uFDA6'] = '\\\\u062C\\\\u062D\\\\u0649';\\n  t['\\\\uFDA7'] = '\\\\u062C\\\\u0645\\\\u0649';\\n  t['\\\\uFDA8'] = '\\\\u0633\\\\u062E\\\\u0649';\\n  t['\\\\uFDA9'] = '\\\\u0635\\\\u062D\\\\u064A';\\n  t['\\\\uFDAA'] = '\\\\u0634\\\\u062D\\\\u064A';\\n  t['\\\\uFDAB'] = '\\\\u0636\\\\u062D\\\\u064A';\\n  t['\\\\uFDAC'] = '\\\\u0644\\\\u062C\\\\u064A';\\n  t['\\\\uFDAD'] = '\\\\u0644\\\\u0645\\\\u064A';\\n  t['\\\\uFDAE'] = '\\\\u064A\\\\u062D\\\\u064A';\\n  t['\\\\uFDAF'] = '\\\\u064A\\\\u062C\\\\u064A';\\n  t['\\\\uFDB0'] = '\\\\u064A\\\\u0645\\\\u064A';\\n  t['\\\\uFDB1'] = '\\\\u0645\\\\u0645\\\\u064A';\\n  t['\\\\uFDB2'] = '\\\\u0642\\\\u0645\\\\u064A';\\n  t['\\\\uFDB3'] = '\\\\u0646\\\\u062D\\\\u064A';\\n  t['\\\\uFDB4'] = '\\\\u0642\\\\u0645\\\\u062D';\\n  t['\\\\uFDB5'] = '\\\\u0644\\\\u062D\\\\u0645';\\n  t['\\\\uFDB6'] = '\\\\u0639\\\\u0645\\\\u064A';\\n  t['\\\\uFDB7'] = '\\\\u0643\\\\u0645\\\\u064A';\\n  t['\\\\uFDB8'] = '\\\\u0646\\\\u062C\\\\u062D';\\n  t['\\\\uFDB9'] = '\\\\u0645\\\\u062E\\\\u064A';\\n  t['\\\\uFDBA'] = '\\\\u0644\\\\u062C\\\\u0645';\\n  t['\\\\uFDBB'] = '\\\\u0643\\\\u0645\\\\u0645';\\n  t['\\\\uFDBC'] = '\\\\u0644\\\\u062C\\\\u0645';\\n  t['\\\\uFDBD'] = '\\\\u0646\\\\u062C\\\\u062D';\\n  t['\\\\uFDBE'] = '\\\\u062C\\\\u062D\\\\u064A';\\n  t['\\\\uFDBF'] = '\\\\u062D\\\\u062C\\\\u064A';\\n  t['\\\\uFDC0'] = '\\\\u0645\\\\u062C\\\\u064A';\\n  t['\\\\uFDC1'] = '\\\\u0641\\\\u0645\\\\u064A';\\n  t['\\\\uFDC2'] = '\\\\u0628\\\\u062D\\\\u064A';\\n  t['\\\\uFDC3'] = '\\\\u0643\\\\u0645\\\\u0645';\\n  t['\\\\uFDC4'] = '\\\\u0639\\\\u062C\\\\u0645';\\n  t['\\\\uFDC5'] = '\\\\u0635\\\\u0645\\\\u0645';\\n  t['\\\\uFDC6'] = '\\\\u0633\\\\u062E\\\\u064A';\\n  t['\\\\uFDC7'] = '\\\\u0646\\\\u062C\\\\u064A';\\n  t['\\\\uFE49'] = '\\\\u203E';\\n  t['\\\\uFE4A'] = '\\\\u203E';\\n  t['\\\\uFE4B'] = '\\\\u203E';\\n  t['\\\\uFE4C'] = '\\\\u203E';\\n  t['\\\\uFE4D'] = '_';\\n  t['\\\\uFE4E'] = '_';\\n  t['\\\\uFE4F'] = '_';\\n  t['\\\\uFE80'] = '\\\\u0621';\\n  t['\\\\uFE81'] = '\\\\u0622';\\n  t['\\\\uFE82'] = '\\\\u0622';\\n  t['\\\\uFE83'] = '\\\\u0623';\\n  t['\\\\uFE84'] = '\\\\u0623';\\n  t['\\\\uFE85'] = '\\\\u0624';\\n  t['\\\\uFE86'] = '\\\\u0624';\\n  t['\\\\uFE87'] = '\\\\u0625';\\n  t['\\\\uFE88'] = '\\\\u0625';\\n  t['\\\\uFE89'] = '\\\\u0626';\\n  t['\\\\uFE8A'] = '\\\\u0626';\\n  t['\\\\uFE8B'] = '\\\\u0626';\\n  t['\\\\uFE8C'] = '\\\\u0626';\\n  t['\\\\uFE8D'] = '\\\\u0627';\\n  t['\\\\uFE8E'] = '\\\\u0627';\\n  t['\\\\uFE8F'] = '\\\\u0628';\\n  t['\\\\uFE90'] = '\\\\u0628';\\n  t['\\\\uFE91'] = '\\\\u0628';\\n  t['\\\\uFE92'] = '\\\\u0628';\\n  t['\\\\uFE93'] = '\\\\u0629';\\n  t['\\\\uFE94'] = '\\\\u0629';\\n  t['\\\\uFE95'] = '\\\\u062A';\\n  t['\\\\uFE96'] = '\\\\u062A';\\n  t['\\\\uFE97'] = '\\\\u062A';\\n  t['\\\\uFE98'] = '\\\\u062A';\\n  t['\\\\uFE99'] = '\\\\u062B';\\n  t['\\\\uFE9A'] = '\\\\u062B';\\n  t['\\\\uFE9B'] = '\\\\u062B';\\n  t['\\\\uFE9C'] = '\\\\u062B';\\n  t['\\\\uFE9D'] = '\\\\u062C';\\n  t['\\\\uFE9E'] = '\\\\u062C';\\n  t['\\\\uFE9F'] = '\\\\u062C';\\n  t['\\\\uFEA0'] = '\\\\u062C';\\n  t['\\\\uFEA1'] = '\\\\u062D';\\n  t['\\\\uFEA2'] = '\\\\u062D';\\n  t['\\\\uFEA3'] = '\\\\u062D';\\n  t['\\\\uFEA4'] = '\\\\u062D';\\n  t['\\\\uFEA5'] = '\\\\u062E';\\n  t['\\\\uFEA6'] = '\\\\u062E';\\n  t['\\\\uFEA7'] = '\\\\u062E';\\n  t['\\\\uFEA8'] = '\\\\u062E';\\n  t['\\\\uFEA9'] = '\\\\u062F';\\n  t['\\\\uFEAA'] = '\\\\u062F';\\n  t['\\\\uFEAB'] = '\\\\u0630';\\n  t['\\\\uFEAC'] = '\\\\u0630';\\n  t['\\\\uFEAD'] = '\\\\u0631';\\n  t['\\\\uFEAE'] = '\\\\u0631';\\n  t['\\\\uFEAF'] = '\\\\u0632';\\n  t['\\\\uFEB0'] = '\\\\u0632';\\n  t['\\\\uFEB1'] = '\\\\u0633';\\n  t['\\\\uFEB2'] = '\\\\u0633';\\n  t['\\\\uFEB3'] = '\\\\u0633';\\n  t['\\\\uFEB4'] = '\\\\u0633';\\n  t['\\\\uFEB5'] = '\\\\u0634';\\n  t['\\\\uFEB6'] = '\\\\u0634';\\n  t['\\\\uFEB7'] = '\\\\u0634';\\n  t['\\\\uFEB8'] = '\\\\u0634';\\n  t['\\\\uFEB9'] = '\\\\u0635';\\n  t['\\\\uFEBA'] = '\\\\u0635';\\n  t['\\\\uFEBB'] = '\\\\u0635';\\n  t['\\\\uFEBC'] = '\\\\u0635';\\n  t['\\\\uFEBD'] = '\\\\u0636';\\n  t['\\\\uFEBE'] = '\\\\u0636';\\n  t['\\\\uFEBF'] = '\\\\u0636';\\n  t['\\\\uFEC0'] = '\\\\u0636';\\n  t['\\\\uFEC1'] = '\\\\u0637';\\n  t['\\\\uFEC2'] = '\\\\u0637';\\n  t['\\\\uFEC3'] = '\\\\u0637';\\n  t['\\\\uFEC4'] = '\\\\u0637';\\n  t['\\\\uFEC5'] = '\\\\u0638';\\n  t['\\\\uFEC6'] = '\\\\u0638';\\n  t['\\\\uFEC7'] = '\\\\u0638';\\n  t['\\\\uFEC8'] = '\\\\u0638';\\n  t['\\\\uFEC9'] = '\\\\u0639';\\n  t['\\\\uFECA'] = '\\\\u0639';\\n  t['\\\\uFECB'] = '\\\\u0639';\\n  t['\\\\uFECC'] = '\\\\u0639';\\n  t['\\\\uFECD'] = '\\\\u063A';\\n  t['\\\\uFECE'] = '\\\\u063A';\\n  t['\\\\uFECF'] = '\\\\u063A';\\n  t['\\\\uFED0'] = '\\\\u063A';\\n  t['\\\\uFED1'] = '\\\\u0641';\\n  t['\\\\uFED2'] = '\\\\u0641';\\n  t['\\\\uFED3'] = '\\\\u0641';\\n  t['\\\\uFED4'] = '\\\\u0641';\\n  t['\\\\uFED5'] = '\\\\u0642';\\n  t['\\\\uFED6'] = '\\\\u0642';\\n  t['\\\\uFED7'] = '\\\\u0642';\\n  t['\\\\uFED8'] = '\\\\u0642';\\n  t['\\\\uFED9'] = '\\\\u0643';\\n  t['\\\\uFEDA'] = '\\\\u0643';\\n  t['\\\\uFEDB'] = '\\\\u0643';\\n  t['\\\\uFEDC'] = '\\\\u0643';\\n  t['\\\\uFEDD'] = '\\\\u0644';\\n  t['\\\\uFEDE'] = '\\\\u0644';\\n  t['\\\\uFEDF'] = '\\\\u0644';\\n  t['\\\\uFEE0'] = '\\\\u0644';\\n  t['\\\\uFEE1'] = '\\\\u0645';\\n  t['\\\\uFEE2'] = '\\\\u0645';\\n  t['\\\\uFEE3'] = '\\\\u0645';\\n  t['\\\\uFEE4'] = '\\\\u0645';\\n  t['\\\\uFEE5'] = '\\\\u0646';\\n  t['\\\\uFEE6'] = '\\\\u0646';\\n  t['\\\\uFEE7'] = '\\\\u0646';\\n  t['\\\\uFEE8'] = '\\\\u0646';\\n  t['\\\\uFEE9'] = '\\\\u0647';\\n  t['\\\\uFEEA'] = '\\\\u0647';\\n  t['\\\\uFEEB'] = '\\\\u0647';\\n  t['\\\\uFEEC'] = '\\\\u0647';\\n  t['\\\\uFEED'] = '\\\\u0648';\\n  t['\\\\uFEEE'] = '\\\\u0648';\\n  t['\\\\uFEEF'] = '\\\\u0649';\\n  t['\\\\uFEF0'] = '\\\\u0649';\\n  t['\\\\uFEF1'] = '\\\\u064A';\\n  t['\\\\uFEF2'] = '\\\\u064A';\\n  t['\\\\uFEF3'] = '\\\\u064A';\\n  t['\\\\uFEF4'] = '\\\\u064A';\\n  t['\\\\uFEF5'] = '\\\\u0644\\\\u0622';\\n  t['\\\\uFEF6'] = '\\\\u0644\\\\u0622';\\n  t['\\\\uFEF7'] = '\\\\u0644\\\\u0623';\\n  t['\\\\uFEF8'] = '\\\\u0644\\\\u0623';\\n  t['\\\\uFEF9'] = '\\\\u0644\\\\u0625';\\n  t['\\\\uFEFA'] = '\\\\u0644\\\\u0625';\\n  t['\\\\uFEFB'] = '\\\\u0644\\\\u0627';\\n  t['\\\\uFEFC'] = '\\\\u0644\\\\u0627';\\n});\\nfunction reverseIfRtl(chars) {\\n  var charsLength = chars.length;\\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\\n    return chars;\\n  }\\n  var s = '';\\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\\n    s += chars[ii];\\n  }\\n  return s;\\n}\\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\\nexports.reverseIfRtl = reverseIfRtl;\\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\\n\\n/***/ }),\\n/* 72 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _ps_parser = __w_pdfjs_require__(144);\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar IsEvalSupportedCached = {\\n  get value() {\\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\\n  }\\n};\\n\\nvar PDFFunctionFactory = function () {\\n  function PDFFunctionFactory(_ref) {\\n    var xref = _ref.xref,\\n        _ref$isEvalSupported = _ref.isEvalSupported,\\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\\n\\n    _classCallCheck(this, PDFFunctionFactory);\\n\\n    this.xref = xref;\\n    this.isEvalSupported = isEvalSupported !== false;\\n  }\\n\\n  _createClass(PDFFunctionFactory, [{\\n    key: 'create',\\n    value: function create(fn) {\\n      return PDFFunction.parse({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        fn: fn\\n      });\\n    }\\n  }, {\\n    key: 'createFromArray',\\n    value: function createFromArray(fnObj) {\\n      return PDFFunction.parseArray({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        fnObj: fnObj\\n      });\\n    }\\n  }, {\\n    key: 'createFromIR',\\n    value: function createFromIR(IR) {\\n      return PDFFunction.fromIR({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        IR: IR\\n      });\\n    }\\n  }, {\\n    key: 'createIR',\\n    value: function createIR(fn) {\\n      return PDFFunction.getIR({\\n        xref: this.xref,\\n        isEvalSupported: this.isEvalSupported,\\n        fn: fn\\n      });\\n    }\\n  }]);\\n\\n  return PDFFunctionFactory;\\n}();\\n\\nvar PDFFunction = function PDFFunctionClosure() {\\n  var CONSTRUCT_SAMPLED = 0;\\n  var CONSTRUCT_INTERPOLATED = 2;\\n  var CONSTRUCT_STICHED = 3;\\n  var CONSTRUCT_POSTSCRIPT = 4;\\n  return {\\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\\n      var i, ii;\\n      var length = 1;\\n      for (i = 0, ii = size.length; i < ii; i++) {\\n        length *= size[i];\\n      }\\n      length *= outputSize;\\n      var array = new Array(length);\\n      var codeSize = 0;\\n      var codeBuf = 0;\\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\\n      var strIdx = 0;\\n      for (i = 0; i < length; i++) {\\n        while (codeSize < bps) {\\n          codeBuf <<= 8;\\n          codeBuf |= strBytes[strIdx++];\\n          codeSize += 8;\\n        }\\n        codeSize -= bps;\\n        array[i] = (codeBuf >> codeSize) * sampleMul;\\n        codeBuf &= (1 << codeSize) - 1;\\n      }\\n      return array;\\n    },\\n    getIR: function getIR(_ref2) {\\n      var xref = _ref2.xref,\\n          isEvalSupported = _ref2.isEvalSupported,\\n          fn = _ref2.fn;\\n\\n      var dict = fn.dict;\\n      if (!dict) {\\n        dict = fn;\\n      }\\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\\n      var typeNum = dict.get('FunctionType');\\n      var typeFn = types[typeNum];\\n      if (!typeFn) {\\n        throw new _util.FormatError('Unknown type of function');\\n      }\\n      return typeFn.call(this, {\\n        xref: xref,\\n        isEvalSupported: isEvalSupported,\\n        fn: fn,\\n        dict: dict\\n      });\\n    },\\n    fromIR: function fromIR(_ref3) {\\n      var xref = _ref3.xref,\\n          isEvalSupported = _ref3.isEvalSupported,\\n          IR = _ref3.IR;\\n\\n      var type = IR[0];\\n      switch (type) {\\n        case CONSTRUCT_SAMPLED:\\n          return this.constructSampledFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n        case CONSTRUCT_INTERPOLATED:\\n          return this.constructInterpolatedFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n        case CONSTRUCT_STICHED:\\n          return this.constructStichedFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n        default:\\n          return this.constructPostScriptFromIR({\\n            xref: xref,\\n            isEvalSupported: isEvalSupported,\\n            IR: IR\\n          });\\n      }\\n    },\\n    parse: function parse(_ref4) {\\n      var xref = _ref4.xref,\\n          isEvalSupported = _ref4.isEvalSupported,\\n          fn = _ref4.fn;\\n\\n      var IR = this.getIR({\\n        xref: xref,\\n        isEvalSupported: isEvalSupported,\\n        fn: fn\\n      });\\n      return this.fromIR({\\n        xref: xref,\\n        isEvalSupported: isEvalSupported,\\n        IR: IR\\n      });\\n    },\\n    parseArray: function parseArray(_ref5) {\\n      var xref = _ref5.xref,\\n          isEvalSupported = _ref5.isEvalSupported,\\n          fnObj = _ref5.fnObj;\\n\\n      if (!Array.isArray(fnObj)) {\\n        return this.parse({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          fn: fnObj\\n        });\\n      }\\n      var fnArray = [];\\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\\n        fnArray.push(this.parse({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          fn: xref.fetchIfRef(fnObj[j])\\n        }));\\n      }\\n      return function (src, srcOffset, dest, destOffset) {\\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\\n          fnArray[i](src, srcOffset, dest, destOffset + i);\\n        }\\n      };\\n    },\\n    constructSampled: function constructSampled(_ref6) {\\n      var xref = _ref6.xref,\\n          isEvalSupported = _ref6.isEvalSupported,\\n          fn = _ref6.fn,\\n          dict = _ref6.dict;\\n\\n      function toMultiArray(arr) {\\n        var inputLength = arr.length;\\n        var out = [];\\n        var index = 0;\\n        for (var i = 0; i < inputLength; i += 2) {\\n          out[index] = [arr[i], arr[i + 1]];\\n          ++index;\\n        }\\n        return out;\\n      }\\n      var domain = dict.getArray('Domain');\\n      var range = dict.getArray('Range');\\n      if (!domain || !range) {\\n        throw new _util.FormatError('No domain or range');\\n      }\\n      var inputSize = domain.length / 2;\\n      var outputSize = range.length / 2;\\n      domain = toMultiArray(domain);\\n      range = toMultiArray(range);\\n      var size = dict.get('Size');\\n      var bps = dict.get('BitsPerSample');\\n      var order = dict.get('Order') || 1;\\n      if (order !== 1) {\\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\\n      }\\n      var encode = dict.getArray('Encode');\\n      if (!encode) {\\n        encode = [];\\n        for (var i = 0; i < inputSize; ++i) {\\n          encode.push(0);\\n          encode.push(size[i] - 1);\\n        }\\n      }\\n      encode = toMultiArray(encode);\\n      var decode = dict.getArray('Decode');\\n      if (!decode) {\\n        decode = range;\\n      } else {\\n        decode = toMultiArray(decode);\\n      }\\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\\n    },\\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\\n      var xref = _ref7.xref,\\n          isEvalSupported = _ref7.isEvalSupported,\\n          IR = _ref7.IR;\\n\\n      function interpolate(x, xmin, xmax, ymin, ymax) {\\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\\n      }\\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\\n        var m = IR[1];\\n        var domain = IR[2];\\n        var encode = IR[3];\\n        var decode = IR[4];\\n        var samples = IR[5];\\n        var size = IR[6];\\n        var n = IR[7];\\n        var range = IR[9];\\n        var cubeVertices = 1 << m;\\n        var cubeN = new Float64Array(cubeVertices);\\n        var cubeVertex = new Uint32Array(cubeVertices);\\n        var i, j;\\n        for (j = 0; j < cubeVertices; j++) {\\n          cubeN[j] = 1;\\n        }\\n        var k = n,\\n            pos = 1;\\n        for (i = 0; i < m; ++i) {\\n          var domain_2i = domain[i][0];\\n          var domain_2i_1 = domain[i][1];\\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\\n          var size_i = size[i];\\n          e = Math.min(Math.max(e, 0), size_i - 1);\\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\\n          var n0 = e0 + 1 - e;\\n          var n1 = e - e0;\\n          var offset0 = e0 * k;\\n          var offset1 = offset0 + k;\\n          for (j = 0; j < cubeVertices; j++) {\\n            if (j & pos) {\\n              cubeN[j] *= n1;\\n              cubeVertex[j] += offset1;\\n            } else {\\n              cubeN[j] *= n0;\\n              cubeVertex[j] += offset0;\\n            }\\n          }\\n          k *= size_i;\\n          pos <<= 1;\\n        }\\n        for (j = 0; j < n; ++j) {\\n          var rj = 0;\\n          for (i = 0; i < cubeVertices; i++) {\\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\\n          }\\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\\n        }\\n      };\\n    },\\n    constructInterpolated: function constructInterpolated(_ref8) {\\n      var xref = _ref8.xref,\\n          isEvalSupported = _ref8.isEvalSupported,\\n          fn = _ref8.fn,\\n          dict = _ref8.dict;\\n\\n      var c0 = dict.getArray('C0') || [0];\\n      var c1 = dict.getArray('C1') || [1];\\n      var n = dict.get('N');\\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\\n      }\\n      var length = c0.length;\\n      var diff = [];\\n      for (var i = 0; i < length; ++i) {\\n        diff.push(c1[i] - c0[i]);\\n      }\\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\\n    },\\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\\n      var xref = _ref9.xref,\\n          isEvalSupported = _ref9.isEvalSupported,\\n          IR = _ref9.IR;\\n\\n      var c0 = IR[1];\\n      var diff = IR[2];\\n      var n = IR[3];\\n      var length = diff.length;\\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\\n        for (var j = 0; j < length; ++j) {\\n          dest[destOffset + j] = c0[j] + x * diff[j];\\n        }\\n      };\\n    },\\n    constructStiched: function constructStiched(_ref10) {\\n      var xref = _ref10.xref,\\n          isEvalSupported = _ref10.isEvalSupported,\\n          fn = _ref10.fn,\\n          dict = _ref10.dict;\\n\\n      var domain = dict.getArray('Domain');\\n      if (!domain) {\\n        throw new _util.FormatError('No domain');\\n      }\\n      var inputSize = domain.length / 2;\\n      if (inputSize !== 1) {\\n        throw new _util.FormatError('Bad domain for stiched function');\\n      }\\n      var fnRefs = dict.get('Functions');\\n      var fns = [];\\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\\n        fns.push(this.getIR({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          fn: xref.fetchIfRef(fnRefs[i])\\n        }));\\n      }\\n      var bounds = dict.getArray('Bounds');\\n      var encode = dict.getArray('Encode');\\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\\n    },\\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\\n      var xref = _ref11.xref,\\n          isEvalSupported = _ref11.isEvalSupported,\\n          IR = _ref11.IR;\\n\\n      var domain = IR[1];\\n      var bounds = IR[2];\\n      var encode = IR[3];\\n      var fnsIR = IR[4];\\n      var fns = [];\\n      var tmpBuf = new Float32Array(1);\\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\\n        fns.push(this.fromIR({\\n          xref: xref,\\n          isEvalSupported: isEvalSupported,\\n          IR: fnsIR[i]\\n        }));\\n      }\\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\\n        var clip = function constructStichedFromIRClip(v, min, max) {\\n          if (v > max) {\\n            v = max;\\n          } else if (v < min) {\\n            v = min;\\n          }\\n          return v;\\n        };\\n        var v = clip(src[srcOffset], domain[0], domain[1]);\\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\\n          if (v < bounds[i]) {\\n            break;\\n          }\\n        }\\n        var dmin = domain[0];\\n        if (i > 0) {\\n          dmin = bounds[i - 1];\\n        }\\n        var dmax = domain[1];\\n        if (i < bounds.length) {\\n          dmax = bounds[i];\\n        }\\n        var rmin = encode[2 * i];\\n        var rmax = encode[2 * i + 1];\\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\\n        fns[i](tmpBuf, 0, dest, destOffset);\\n      };\\n    },\\n    constructPostScript: function constructPostScript(_ref12) {\\n      var xref = _ref12.xref,\\n          isEvalSupported = _ref12.isEvalSupported,\\n          fn = _ref12.fn,\\n          dict = _ref12.dict;\\n\\n      var domain = dict.getArray('Domain');\\n      var range = dict.getArray('Range');\\n      if (!domain) {\\n        throw new _util.FormatError('No domain.');\\n      }\\n      if (!range) {\\n        throw new _util.FormatError('No range.');\\n      }\\n      var lexer = new _ps_parser.PostScriptLexer(fn);\\n      var parser = new _ps_parser.PostScriptParser(lexer);\\n      var code = parser.parse();\\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\\n    },\\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\\n      var xref = _ref13.xref,\\n          isEvalSupported = _ref13.isEvalSupported,\\n          IR = _ref13.IR;\\n\\n      var domain = IR[1];\\n      var range = IR[2];\\n      var code = IR[3];\\n      if (isEvalSupported && IsEvalSupportedCached.value) {\\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\\n        if (compiled) {\\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\\n        }\\n      }\\n      (0, _util.info)('Unable to compile PS function');\\n      var numOutputs = range.length >> 1;\\n      var numInputs = domain.length >> 1;\\n      var evaluator = new PostScriptEvaluator(code);\\n      var cache = Object.create(null);\\n      var MAX_CACHE_SIZE = 2048 * 4;\\n      var cache_available = MAX_CACHE_SIZE;\\n      var tmpBuf = new Float32Array(numInputs);\\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\\n        var i, value;\\n        var key = '';\\n        var input = tmpBuf;\\n        for (i = 0; i < numInputs; i++) {\\n          value = src[srcOffset + i];\\n          input[i] = value;\\n          key += value + '_';\\n        }\\n        var cachedValue = cache[key];\\n        if (cachedValue !== undefined) {\\n          dest.set(cachedValue, destOffset);\\n          return;\\n        }\\n        var output = new Float32Array(numOutputs);\\n        var stack = evaluator.execute(input);\\n        var stackIndex = stack.length - numOutputs;\\n        for (i = 0; i < numOutputs; i++) {\\n          value = stack[stackIndex + i];\\n          var bound = range[i * 2];\\n          if (value < bound) {\\n            value = bound;\\n          } else {\\n            bound = range[i * 2 + 1];\\n            if (value > bound) {\\n              value = bound;\\n            }\\n          }\\n          output[i] = value;\\n        }\\n        if (cache_available > 0) {\\n          cache_available--;\\n          cache[key] = output;\\n        }\\n        dest.set(output, destOffset);\\n      };\\n    }\\n  };\\n}();\\nfunction isPDFFunction(v) {\\n  var fnDict;\\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\\n    return false;\\n  } else if ((0, _primitives.isDict)(v)) {\\n    fnDict = v;\\n  } else if ((0, _primitives.isStream)(v)) {\\n    fnDict = v.dict;\\n  } else {\\n    return false;\\n  }\\n  return fnDict.has('FunctionType');\\n}\\nvar PostScriptStack = function PostScriptStackClosure() {\\n  var MAX_STACK_SIZE = 100;\\n  function PostScriptStack(initialStack) {\\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\\n  }\\n  PostScriptStack.prototype = {\\n    push: function PostScriptStack_push(value) {\\n      if (this.stack.length >= MAX_STACK_SIZE) {\\n        throw new Error('PostScript function stack overflow.');\\n      }\\n      this.stack.push(value);\\n    },\\n    pop: function PostScriptStack_pop() {\\n      if (this.stack.length <= 0) {\\n        throw new Error('PostScript function stack underflow.');\\n      }\\n      return this.stack.pop();\\n    },\\n    copy: function PostScriptStack_copy(n) {\\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\\n        throw new Error('PostScript function stack overflow.');\\n      }\\n      var stack = this.stack;\\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\\n        stack.push(stack[i]);\\n      }\\n    },\\n    index: function PostScriptStack_index(n) {\\n      this.push(this.stack[this.stack.length - n - 1]);\\n    },\\n    roll: function PostScriptStack_roll(n, p) {\\n      var stack = this.stack;\\n      var l = stack.length - n;\\n      var r = stack.length - 1,\\n          c = l + (p - Math.floor(p / n) * n),\\n          i,\\n          j,\\n          t;\\n      for (i = l, j = r; i < j; i++, j--) {\\n        t = stack[i];\\n        stack[i] = stack[j];\\n        stack[j] = t;\\n      }\\n      for (i = l, j = c - 1; i < j; i++, j--) {\\n        t = stack[i];\\n        stack[i] = stack[j];\\n        stack[j] = t;\\n      }\\n      for (i = c, j = r; i < j; i++, j--) {\\n        t = stack[i];\\n        stack[i] = stack[j];\\n        stack[j] = t;\\n      }\\n    }\\n  };\\n  return PostScriptStack;\\n}();\\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\\n  function PostScriptEvaluator(operators) {\\n    this.operators = operators;\\n  }\\n  PostScriptEvaluator.prototype = {\\n    execute: function PostScriptEvaluator_execute(initialStack) {\\n      var stack = new PostScriptStack(initialStack);\\n      var counter = 0;\\n      var operators = this.operators;\\n      var length = operators.length;\\n      var operator, a, b;\\n      while (counter < length) {\\n        operator = operators[counter++];\\n        if (typeof operator === 'number') {\\n          stack.push(operator);\\n          continue;\\n        }\\n        switch (operator) {\\n          case 'jz':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if (!a) {\\n              counter = b;\\n            }\\n            break;\\n          case 'j':\\n            a = stack.pop();\\n            counter = a;\\n            break;\\n          case 'abs':\\n            a = stack.pop();\\n            stack.push(Math.abs(a));\\n            break;\\n          case 'add':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a + b);\\n            break;\\n          case 'and':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n              stack.push(a && b);\\n            } else {\\n              stack.push(a & b);\\n            }\\n            break;\\n          case 'atan':\\n            a = stack.pop();\\n            stack.push(Math.atan(a));\\n            break;\\n          case 'bitshift':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if (a > 0) {\\n              stack.push(a << b);\\n            } else {\\n              stack.push(a >> b);\\n            }\\n            break;\\n          case 'ceiling':\\n            a = stack.pop();\\n            stack.push(Math.ceil(a));\\n            break;\\n          case 'copy':\\n            a = stack.pop();\\n            stack.copy(a);\\n            break;\\n          case 'cos':\\n            a = stack.pop();\\n            stack.push(Math.cos(a));\\n            break;\\n          case 'cvi':\\n            a = stack.pop() | 0;\\n            stack.push(a);\\n            break;\\n          case 'cvr':\\n            break;\\n          case 'div':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a / b);\\n            break;\\n          case 'dup':\\n            stack.copy(1);\\n            break;\\n          case 'eq':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a === b);\\n            break;\\n          case 'exch':\\n            stack.roll(2, 1);\\n            break;\\n          case 'exp':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(Math.pow(a, b));\\n            break;\\n          case 'false':\\n            stack.push(false);\\n            break;\\n          case 'floor':\\n            a = stack.pop();\\n            stack.push(Math.floor(a));\\n            break;\\n          case 'ge':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a >= b);\\n            break;\\n          case 'gt':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a > b);\\n            break;\\n          case 'idiv':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a / b | 0);\\n            break;\\n          case 'index':\\n            a = stack.pop();\\n            stack.index(a);\\n            break;\\n          case 'le':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a <= b);\\n            break;\\n          case 'ln':\\n            a = stack.pop();\\n            stack.push(Math.log(a));\\n            break;\\n          case 'log':\\n            a = stack.pop();\\n            stack.push(Math.log(a) / Math.LN10);\\n            break;\\n          case 'lt':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a < b);\\n            break;\\n          case 'mod':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a % b);\\n            break;\\n          case 'mul':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a * b);\\n            break;\\n          case 'ne':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a !== b);\\n            break;\\n          case 'neg':\\n            a = stack.pop();\\n            stack.push(-a);\\n            break;\\n          case 'not':\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a)) {\\n              stack.push(!a);\\n            } else {\\n              stack.push(~a);\\n            }\\n            break;\\n          case 'or':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n              stack.push(a || b);\\n            } else {\\n              stack.push(a | b);\\n            }\\n            break;\\n          case 'pop':\\n            stack.pop();\\n            break;\\n          case 'roll':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.roll(a, b);\\n            break;\\n          case 'round':\\n            a = stack.pop();\\n            stack.push(Math.round(a));\\n            break;\\n          case 'sin':\\n            a = stack.pop();\\n            stack.push(Math.sin(a));\\n            break;\\n          case 'sqrt':\\n            a = stack.pop();\\n            stack.push(Math.sqrt(a));\\n            break;\\n          case 'sub':\\n            b = stack.pop();\\n            a = stack.pop();\\n            stack.push(a - b);\\n            break;\\n          case 'true':\\n            stack.push(true);\\n            break;\\n          case 'truncate':\\n            a = stack.pop();\\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\\n            stack.push(a);\\n            break;\\n          case 'xor':\\n            b = stack.pop();\\n            a = stack.pop();\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n              stack.push(a !== b);\\n            } else {\\n              stack.push(a ^ b);\\n            }\\n            break;\\n          default:\\n            throw new _util.FormatError('Unknown operator ' + operator);\\n        }\\n      }\\n      return stack.stack;\\n    }\\n  };\\n  return PostScriptEvaluator;\\n}();\\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\\n  function AstNode(type) {\\n    this.type = type;\\n  }\\n  AstNode.prototype.visit = function (visitor) {\\n    (0, _util.unreachable)('abstract method');\\n  };\\n  function AstArgument(index, min, max) {\\n    AstNode.call(this, 'args');\\n    this.index = index;\\n    this.min = min;\\n    this.max = max;\\n  }\\n  AstArgument.prototype = Object.create(AstNode.prototype);\\n  AstArgument.prototype.visit = function (visitor) {\\n    visitor.visitArgument(this);\\n  };\\n  function AstLiteral(number) {\\n    AstNode.call(this, 'literal');\\n    this.number = number;\\n    this.min = number;\\n    this.max = number;\\n  }\\n  AstLiteral.prototype = Object.create(AstNode.prototype);\\n  AstLiteral.prototype.visit = function (visitor) {\\n    visitor.visitLiteral(this);\\n  };\\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\\n    AstNode.call(this, 'binary');\\n    this.op = op;\\n    this.arg1 = arg1;\\n    this.arg2 = arg2;\\n    this.min = min;\\n    this.max = max;\\n  }\\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\\n  AstBinaryOperation.prototype.visit = function (visitor) {\\n    visitor.visitBinaryOperation(this);\\n  };\\n  function AstMin(arg, max) {\\n    AstNode.call(this, 'max');\\n    this.arg = arg;\\n    this.min = arg.min;\\n    this.max = max;\\n  }\\n  AstMin.prototype = Object.create(AstNode.prototype);\\n  AstMin.prototype.visit = function (visitor) {\\n    visitor.visitMin(this);\\n  };\\n  function AstVariable(index, min, max) {\\n    AstNode.call(this, 'var');\\n    this.index = index;\\n    this.min = min;\\n    this.max = max;\\n  }\\n  AstVariable.prototype = Object.create(AstNode.prototype);\\n  AstVariable.prototype.visit = function (visitor) {\\n    visitor.visitVariable(this);\\n  };\\n  function AstVariableDefinition(variable, arg) {\\n    AstNode.call(this, 'definition');\\n    this.variable = variable;\\n    this.arg = arg;\\n  }\\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\\n  AstVariableDefinition.prototype.visit = function (visitor) {\\n    visitor.visitVariableDefinition(this);\\n  };\\n  function ExpressionBuilderVisitor() {\\n    this.parts = [];\\n  }\\n  ExpressionBuilderVisitor.prototype = {\\n    visitArgument: function visitArgument(arg) {\\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\\n    },\\n    visitVariable: function visitVariable(variable) {\\n      this.parts.push('v', variable.index);\\n    },\\n    visitLiteral: function visitLiteral(literal) {\\n      this.parts.push(literal.number);\\n    },\\n    visitBinaryOperation: function visitBinaryOperation(operation) {\\n      this.parts.push('(');\\n      operation.arg1.visit(this);\\n      this.parts.push(' ', operation.op, ' ');\\n      operation.arg2.visit(this);\\n      this.parts.push(')');\\n    },\\n    visitVariableDefinition: function visitVariableDefinition(definition) {\\n      this.parts.push('var ');\\n      definition.variable.visit(this);\\n      this.parts.push(' = ');\\n      definition.arg.visit(this);\\n      this.parts.push(';');\\n    },\\n    visitMin: function visitMin(max) {\\n      this.parts.push('Math.min(');\\n      max.arg.visit(this);\\n      this.parts.push(', ', max.max, ')');\\n    },\\n    toString: function toString() {\\n      return this.parts.join('');\\n    }\\n  };\\n  function buildAddOperation(num1, num2) {\\n    if (num2.type === 'literal' && num2.number === 0) {\\n      return num1;\\n    }\\n    if (num1.type === 'literal' && num1.number === 0) {\\n      return num2;\\n    }\\n    if (num2.type === 'literal' && num1.type === 'literal') {\\n      return new AstLiteral(num1.number + num2.number);\\n    }\\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\\n  }\\n  function buildMulOperation(num1, num2) {\\n    if (num2.type === 'literal') {\\n      if (num2.number === 0) {\\n        return new AstLiteral(0);\\n      } else if (num2.number === 1) {\\n        return num1;\\n      } else if (num1.type === 'literal') {\\n        return new AstLiteral(num1.number * num2.number);\\n      }\\n    }\\n    if (num1.type === 'literal') {\\n      if (num1.number === 0) {\\n        return new AstLiteral(0);\\n      } else if (num1.number === 1) {\\n        return num2;\\n      }\\n    }\\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\n    return new AstBinaryOperation('*', num1, num2, min, max);\\n  }\\n  function buildSubOperation(num1, num2) {\\n    if (num2.type === 'literal') {\\n      if (num2.number === 0) {\\n        return num1;\\n      } else if (num1.type === 'literal') {\\n        return new AstLiteral(num1.number - num2.number);\\n      }\\n    }\\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\\n      return num2.arg2;\\n    }\\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\\n  }\\n  function buildMinOperation(num1, max) {\\n    if (num1.min >= max) {\\n      return new AstLiteral(max);\\n    } else if (num1.max <= max) {\\n      return num1;\\n    }\\n    return new AstMin(num1, max);\\n  }\\n  function PostScriptCompiler() {}\\n  PostScriptCompiler.prototype = {\\n    compile: function PostScriptCompiler_compile(code, domain, range) {\\n      var stack = [];\\n      var i, ii;\\n      var instructions = [];\\n      var inputSize = domain.length >> 1,\\n          outputSize = range.length >> 1;\\n      var lastRegister = 0;\\n      var n, j;\\n      var num1, num2, ast1, ast2, tmpVar, item;\\n      for (i = 0; i < inputSize; i++) {\\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\\n      }\\n      for (i = 0, ii = code.length; i < ii; i++) {\\n        item = code[i];\\n        if (typeof item === 'number') {\\n          stack.push(new AstLiteral(item));\\n          continue;\\n        }\\n        switch (item) {\\n          case 'add':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            stack.push(buildAddOperation(num1, num2));\\n            break;\\n          case 'cvr':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            break;\\n          case 'mul':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            stack.push(buildMulOperation(num1, num2));\\n            break;\\n          case 'sub':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            stack.push(buildSubOperation(num1, num2));\\n            break;\\n          case 'exch':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            ast1 = stack.pop();\\n            ast2 = stack.pop();\\n            stack.push(ast1, ast2);\\n            break;\\n          case 'pop':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            stack.pop();\\n            break;\\n          case 'index':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            num1 = stack.pop();\\n            if (num1.type !== 'literal') {\\n              return null;\\n            }\\n            n = num1.number;\\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\\n              return null;\\n            }\\n            ast1 = stack[stack.length - n - 1];\\n            if (ast1.type === 'literal' || ast1.type === 'var') {\\n              stack.push(ast1);\\n              break;\\n            }\\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\n            stack[stack.length - n - 1] = tmpVar;\\n            stack.push(tmpVar);\\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\\n            break;\\n          case 'dup':\\n            if (stack.length < 1) {\\n              return null;\\n            }\\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\\n              num1 = stack.pop();\\n              stack.push(buildMinOperation(num1, code[i + 1]));\\n              i += 6;\\n              break;\\n            }\\n            ast1 = stack[stack.length - 1];\\n            if (ast1.type === 'literal' || ast1.type === 'var') {\\n              stack.push(ast1);\\n              break;\\n            }\\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\n            stack[stack.length - 1] = tmpVar;\\n            stack.push(tmpVar);\\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\\n            break;\\n          case 'roll':\\n            if (stack.length < 2) {\\n              return null;\\n            }\\n            num2 = stack.pop();\\n            num1 = stack.pop();\\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\\n              return null;\\n            }\\n            j = num2.number;\\n            n = num1.number;\\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\\n              return null;\\n            }\\n            j = (j % n + n) % n;\\n            if (j === 0) {\\n              break;\\n            }\\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\\n            break;\\n          default:\\n            return null;\\n        }\\n      }\\n      if (stack.length !== outputSize) {\\n        return null;\\n      }\\n      var result = [];\\n      instructions.forEach(function (instruction) {\\n        var statementBuilder = new ExpressionBuilderVisitor();\\n        instruction.visit(statementBuilder);\\n        result.push(statementBuilder.toString());\\n      });\\n      stack.forEach(function (expr, i) {\\n        var statementBuilder = new ExpressionBuilderVisitor();\\n        expr.visit(statementBuilder);\\n        var min = range[i * 2],\\n            max = range[i * 2 + 1];\\n        var out = [statementBuilder.toString()];\\n        if (min > expr.min) {\\n          out.unshift('Math.max(', min, ', ');\\n          out.push(')');\\n        }\\n        if (max < expr.max) {\\n          out.unshift('Math.min(', max, ', ');\\n          out.push(')');\\n        }\\n        out.unshift('dest[destOffset + ', i, '] = ');\\n        out.push(';');\\n        result.push(out.join(''));\\n      });\\n      return result.join('\\\\n');\\n    }\\n  };\\n  return PostScriptCompiler;\\n}();\\nexports.isPDFFunction = isPDFFunction;\\nexports.PDFFunctionFactory = PDFFunctionFactory;\\nexports.PostScriptEvaluator = PostScriptEvaluator;\\nexports.PostScriptCompiler = PostScriptCompiler;\\n\\n/***/ }),\\n/* 73 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar pdfjsVersion = '2.0.305';\\nvar pdfjsBuild = '9c6a8801';\\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\\n\\n/***/ }),\\n/* 74 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _pdf_manager = __w_pdfjs_require__(127);\\n\\nvar _is_node = __w_pdfjs_require__(44);\\n\\nvar _is_node2 = _interopRequireDefault(_is_node);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar WorkerTask = function WorkerTaskClosure() {\\n  function WorkerTask(name) {\\n    this.name = name;\\n    this.terminated = false;\\n    this._capability = (0, _util.createPromiseCapability)();\\n  }\\n  WorkerTask.prototype = {\\n    get finished() {\\n      return this._capability.promise;\\n    },\\n    finish: function finish() {\\n      this._capability.resolve();\\n    },\\n    terminate: function terminate() {\\n      this.terminated = true;\\n    },\\n    ensureNotTerminated: function ensureNotTerminated() {\\n      if (this.terminated) {\\n        throw new Error('Worker task was terminated');\\n      }\\n    }\\n  };\\n  return WorkerTask;\\n}();\\n;\\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\\n  function PDFWorkerStream(msgHandler) {\\n    this._msgHandler = msgHandler;\\n    this._contentLength = null;\\n    this._fullRequestReader = null;\\n    this._rangeRequestReaders = [];\\n  }\\n  PDFWorkerStream.prototype = {\\n    getFullReader: function getFullReader() {\\n      (0, _util.assert)(!this._fullRequestReader);\\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\\n      return this._fullRequestReader;\\n    },\\n    getRangeReader: function getRangeReader(begin, end) {\\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\\n      this._rangeRequestReaders.push(reader);\\n      return reader;\\n    },\\n    cancelAllRequests: function cancelAllRequests(reason) {\\n      if (this._fullRequestReader) {\\n        this._fullRequestReader.cancel(reason);\\n      }\\n      var readers = this._rangeRequestReaders.slice(0);\\n      readers.forEach(function (reader) {\\n        reader.cancel(reason);\\n      });\\n    }\\n  };\\n  function PDFWorkerStreamReader(msgHandler) {\\n    var _this = this;\\n\\n    this._msgHandler = msgHandler;\\n    this._contentLength = null;\\n    this._isRangeSupported = false;\\n    this._isStreamingSupported = false;\\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\\n    this._reader = readableStream.getReader();\\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\\n      _this._isStreamingSupported = data.isStreamingSupported;\\n      _this._isRangeSupported = data.isRangeSupported;\\n      _this._contentLength = data.contentLength;\\n    });\\n  }\\n  PDFWorkerStreamReader.prototype = {\\n    get headersReady() {\\n      return this._headersReady;\\n    },\\n    get contentLength() {\\n      return this._contentLength;\\n    },\\n    get isStreamingSupported() {\\n      return this._isStreamingSupported;\\n    },\\n    get isRangeSupported() {\\n      return this._isRangeSupported;\\n    },\\n    read: function read() {\\n      return this._reader.read().then(function (_ref) {\\n        var value = _ref.value,\\n            done = _ref.done;\\n\\n        if (done) {\\n          return {\\n            value: undefined,\\n            done: true\\n          };\\n        }\\n        return {\\n          value: value.buffer,\\n          done: false\\n        };\\n      });\\n    },\\n    cancel: function cancel(reason) {\\n      this._reader.cancel(reason);\\n    }\\n  };\\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\\n    this._msgHandler = msgHandler;\\n    this.onProgress = null;\\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\\n      begin: begin,\\n      end: end\\n    });\\n    this._reader = readableStream.getReader();\\n  }\\n  PDFWorkerStreamRangeReader.prototype = {\\n    get isStreamingSupported() {\\n      return false;\\n    },\\n    read: function read() {\\n      return this._reader.read().then(function (_ref2) {\\n        var value = _ref2.value,\\n            done = _ref2.done;\\n\\n        if (done) {\\n          return {\\n            value: undefined,\\n            done: true\\n          };\\n        }\\n        return {\\n          value: value.buffer,\\n          done: false\\n        };\\n      });\\n    },\\n    cancel: function cancel(reason) {\\n      this._reader.cancel(reason);\\n    }\\n  };\\n  return PDFWorkerStream;\\n}();\\nvar WorkerMessageHandler = {\\n  setup: function setup(handler, port) {\\n    var testMessageProcessed = false;\\n    handler.on('test', function wphSetupTest(data) {\\n      if (testMessageProcessed) {\\n        return;\\n      }\\n      testMessageProcessed = true;\\n      if (!(data instanceof Uint8Array)) {\\n        handler.send('test', 'main', false);\\n        return;\\n      }\\n      var supportTransfers = data[0] === 255;\\n      handler.postMessageTransfers = supportTransfers;\\n      var xhr = new XMLHttpRequest();\\n      var responseExists = 'response' in xhr;\\n      try {\\n        xhr.responseType;\\n      } catch (e) {\\n        responseExists = false;\\n      }\\n      if (!responseExists) {\\n        handler.send('test', false);\\n        return;\\n      }\\n      handler.send('test', {\\n        supportTypedArray: true,\\n        supportTransfers: supportTransfers\\n      });\\n    });\\n    handler.on('configure', function wphConfigure(data) {\\n      (0, _util.setVerbosityLevel)(data.verbosity);\\n    });\\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\\n      return WorkerMessageHandler.createDocumentHandler(data, port);\\n    });\\n  },\\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\\n    var pdfManager;\\n    var terminated = false;\\n    var cancelXHRs = null;\\n    var WorkerTasks = [];\\n    var apiVersion = docParams.apiVersion;\\n    var workerVersion = '2.0.305';\\n    if (apiVersion !== null && apiVersion !== workerVersion) {\\n      throw new Error('The API version \\\"' + apiVersion + '\\\" does not match ' + ('the Worker version \\\"' + workerVersion + '\\\".'));\\n    }\\n    var docId = docParams.docId;\\n    var docBaseUrl = docParams.docBaseUrl;\\n    var workerHandlerName = docParams.docId + '_worker';\\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\\n    handler.postMessageTransfers = docParams.postMessageTransfers;\\n    function ensureNotTerminated() {\\n      if (terminated) {\\n        throw new Error('Worker was terminated');\\n      }\\n    }\\n    function startWorkerTask(task) {\\n      WorkerTasks.push(task);\\n    }\\n    function finishWorkerTask(task) {\\n      task.finish();\\n      var i = WorkerTasks.indexOf(task);\\n      WorkerTasks.splice(i, 1);\\n    }\\n    function loadDocument(recoveryMode) {\\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\\n      var parseSuccess = function parseSuccess() {\\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\\n          var _ref4 = _slicedToArray(_ref3, 2),\\n              numPages = _ref4[0],\\n              fingerprint = _ref4[1];\\n\\n          loadDocumentCapability.resolve({\\n            numPages: numPages,\\n            fingerprint: fingerprint\\n          });\\n        }, parseFailure);\\n      };\\n      var parseFailure = function parseFailure(e) {\\n        loadDocumentCapability.reject(e);\\n      };\\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\\n        }, parseFailure);\\n      }, parseFailure);\\n      return loadDocumentCapability.promise;\\n    }\\n    function getPdfManager(data, evaluatorOptions) {\\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\\n      var pdfManager;\\n      var source = data.source;\\n      if (source.data) {\\n        try {\\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\\n          pdfManagerCapability.resolve(pdfManager);\\n        } catch (ex) {\\n          pdfManagerCapability.reject(ex);\\n        }\\n        return pdfManagerCapability.promise;\\n      }\\n      var pdfStream,\\n          cachedChunks = [];\\n      try {\\n        pdfStream = new PDFWorkerStream(handler);\\n      } catch (ex) {\\n        pdfManagerCapability.reject(ex);\\n        return pdfManagerCapability.promise;\\n      }\\n      var fullRequest = pdfStream.getFullReader();\\n      fullRequest.headersReady.then(function () {\\n        if (!fullRequest.isRangeSupported) {\\n          return;\\n        }\\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\\n          msgHandler: handler,\\n          url: source.url,\\n          password: source.password,\\n          length: fullRequest.contentLength,\\n          disableAutoFetch: disableAutoFetch,\\n          rangeChunkSize: source.rangeChunkSize\\n        }, evaluatorOptions, docBaseUrl);\\n        for (var i = 0; i < cachedChunks.length; i++) {\\n          pdfManager.sendProgressiveData(cachedChunks[i]);\\n        }\\n        cachedChunks = [];\\n        pdfManagerCapability.resolve(pdfManager);\\n        cancelXHRs = null;\\n      }).catch(function (reason) {\\n        pdfManagerCapability.reject(reason);\\n        cancelXHRs = null;\\n      });\\n      var loaded = 0;\\n      var flushChunks = function flushChunks() {\\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\\n        if (source.length && pdfFile.length !== source.length) {\\n          (0, _util.warn)('reported HTTP length is different from actual');\\n        }\\n        try {\\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\\n          pdfManagerCapability.resolve(pdfManager);\\n        } catch (ex) {\\n          pdfManagerCapability.reject(ex);\\n        }\\n        cachedChunks = [];\\n      };\\n      var readPromise = new Promise(function (resolve, reject) {\\n        var readChunk = function readChunk(chunk) {\\n          try {\\n            ensureNotTerminated();\\n            if (chunk.done) {\\n              if (!pdfManager) {\\n                flushChunks();\\n              }\\n              cancelXHRs = null;\\n              return;\\n            }\\n            var data = chunk.value;\\n            loaded += (0, _util.arrayByteLength)(data);\\n            if (!fullRequest.isStreamingSupported) {\\n              handler.send('DocProgress', {\\n                loaded: loaded,\\n                total: Math.max(loaded, fullRequest.contentLength || 0)\\n              });\\n            }\\n            if (pdfManager) {\\n              pdfManager.sendProgressiveData(data);\\n            } else {\\n              cachedChunks.push(data);\\n            }\\n            fullRequest.read().then(readChunk, reject);\\n          } catch (e) {\\n            reject(e);\\n          }\\n        };\\n        fullRequest.read().then(readChunk, reject);\\n      });\\n      readPromise.catch(function (e) {\\n        pdfManagerCapability.reject(e);\\n        cancelXHRs = null;\\n      });\\n      cancelXHRs = function cancelXHRs() {\\n        pdfStream.cancelAllRequests('abort');\\n      };\\n      return pdfManagerCapability.promise;\\n    }\\n    function setupDoc(data) {\\n      function onSuccess(doc) {\\n        ensureNotTerminated();\\n        handler.send('GetDoc', { pdfInfo: doc });\\n      }\\n      function onFailure(e) {\\n        ensureNotTerminated();\\n        if (e instanceof _util.PasswordException) {\\n          var task = new WorkerTask('PasswordException: response ' + e.code);\\n          startWorkerTask(task);\\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\\n            finishWorkerTask(task);\\n            pdfManager.updatePassword(data.password);\\n            pdfManagerReady();\\n          }).catch(function (ex) {\\n            finishWorkerTask(task);\\n            handler.send('PasswordException', ex);\\n          }.bind(null, e));\\n        } else if (e instanceof _util.InvalidPDFException) {\\n          handler.send('InvalidPDF', e);\\n        } else if (e instanceof _util.MissingPDFException) {\\n          handler.send('MissingPDF', e);\\n        } else if (e instanceof _util.UnexpectedResponseException) {\\n          handler.send('UnexpectedResponse', e);\\n        } else {\\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\\n        }\\n      }\\n      function pdfManagerReady() {\\n        ensureNotTerminated();\\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\\n          ensureNotTerminated();\\n          if (!(ex instanceof _util.XRefParseException)) {\\n            onFailure(ex);\\n            return;\\n          }\\n          pdfManager.requestLoadedStream();\\n          pdfManager.onLoadedStream().then(function () {\\n            ensureNotTerminated();\\n            loadDocument(true).then(onSuccess, onFailure);\\n          });\\n        }, onFailure);\\n      }\\n      ensureNotTerminated();\\n      var evaluatorOptions = {\\n        forceDataSchema: data.disableCreateObjectURL,\\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\\n        disableFontFace: data.disableFontFace,\\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\\n        ignoreErrors: data.ignoreErrors,\\n        isEvalSupported: data.isEvalSupported\\n      };\\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\\n        if (terminated) {\\n          newPdfManager.terminate();\\n          throw new Error('Worker was terminated');\\n        }\\n        pdfManager = newPdfManager;\\n        handler.send('PDFManagerReady', null);\\n        pdfManager.onLoadedStream().then(function (stream) {\\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\\n        });\\n      }).then(pdfManagerReady, onFailure);\\n    }\\n    handler.on('GetPage', function wphSetupGetPage(data) {\\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\\n        var refPromise = pdfManager.ensure(page, 'ref');\\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\\n        var viewPromise = pdfManager.ensure(page, 'view');\\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\\n          return {\\n            rotate: results[0],\\n            ref: results[1],\\n            userUnit: results[2],\\n            view: results[3]\\n          };\\n        });\\n      });\\n    });\\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\\n      var catalog = pdfManager.pdfDocument.catalog;\\n      return catalog.getPageIndex(ref);\\n    });\\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\\n      return pdfManager.ensureCatalog('destinations');\\n    });\\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\\n    });\\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\\n      return pdfManager.ensureCatalog('pageLabels');\\n    });\\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\\n      return pdfManager.ensureCatalog('pageMode');\\n    });\\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\\n      return pdfManager.ensureCatalog('attachments');\\n    });\\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\\n      return pdfManager.ensureCatalog('javaScript');\\n    });\\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\\n      return pdfManager.ensureCatalog('documentOutline');\\n    });\\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\\n    });\\n    handler.on('GetData', function wphSetupGetData(data) {\\n      pdfManager.requestLoadedStream();\\n      return pdfManager.onLoadedStream().then(function (stream) {\\n        return stream.bytes;\\n      });\\n    });\\n    handler.on('GetStats', function wphSetupGetStats(data) {\\n      return pdfManager.pdfDocument.xref.stats;\\n    });\\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\\n      });\\n    });\\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\\n      var pageIndex = data.pageIndex;\\n      pdfManager.getPage(pageIndex).then(function (page) {\\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\\n        startWorkerTask(task);\\n        var pageNum = pageIndex + 1;\\n        var start = Date.now();\\n        page.getOperatorList({\\n          handler: handler,\\n          task: task,\\n          intent: data.intent,\\n          renderInteractiveForms: data.renderInteractiveForms\\n        }).then(function (operatorList) {\\n          finishWorkerTask(task);\\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\\n        }, function (e) {\\n          finishWorkerTask(task);\\n          if (task.terminated) {\\n            return;\\n          }\\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\\n          var wrappedException;\\n          if (typeof e === 'string') {\\n            wrappedException = {\\n              message: e,\\n              stack: minimumStackMessage\\n            };\\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\\n            wrappedException = {\\n              message: e.message || e.toString(),\\n              stack: e.stack || minimumStackMessage\\n            };\\n          } else {\\n            wrappedException = {\\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\\n              stack: minimumStackMessage\\n            };\\n          }\\n          handler.send('PageError', {\\n            pageNum: pageNum,\\n            error: wrappedException,\\n            intent: data.intent\\n          });\\n        });\\n      });\\n    }, this);\\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\\n      var pageIndex = data.pageIndex;\\n      sink.onPull = function (desiredSize) {};\\n      sink.onCancel = function (reason) {};\\n      pdfManager.getPage(pageIndex).then(function (page) {\\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\\n        startWorkerTask(task);\\n        var pageNum = pageIndex + 1;\\n        var start = Date.now();\\n        page.extractTextContent({\\n          handler: handler,\\n          task: task,\\n          sink: sink,\\n          normalizeWhitespace: data.normalizeWhitespace,\\n          combineTextItems: data.combineTextItems\\n        }).then(function () {\\n          finishWorkerTask(task);\\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\\n          sink.close();\\n        }, function (reason) {\\n          finishWorkerTask(task);\\n          if (task.terminated) {\\n            return;\\n          }\\n          sink.error(reason);\\n          throw reason;\\n        });\\n      });\\n    });\\n    handler.on('Cleanup', function wphCleanup(data) {\\n      return pdfManager.cleanup();\\n    });\\n    handler.on('Terminate', function wphTerminate(data) {\\n      terminated = true;\\n      if (pdfManager) {\\n        pdfManager.terminate();\\n        pdfManager = null;\\n      }\\n      if (cancelXHRs) {\\n        cancelXHRs();\\n      }\\n      var waitOn = [];\\n      WorkerTasks.forEach(function (task) {\\n        waitOn.push(task.finished);\\n        task.terminate();\\n      });\\n      return Promise.all(waitOn).then(function () {\\n        handler.destroy();\\n        handler = null;\\n      });\\n    });\\n    handler.on('Ready', function wphReady(data) {\\n      setupDoc(docParams);\\n      docParams = null;\\n    });\\n    return workerHandlerName;\\n  },\\n  initializeFromPort: function initializeFromPort(port) {\\n    var handler = new _util.MessageHandler('worker', 'main', port);\\n    WorkerMessageHandler.setup(handler, port);\\n    handler.send('ready', null);\\n  }\\n};\\nfunction isMessagePort(maybePort) {\\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\\n}\\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\\n  WorkerMessageHandler.initializeFromPort(self);\\n}\\nexports.WorkerTask = WorkerTask;\\nexports.WorkerMessageHandler = WorkerMessageHandler;\\n\\n/***/ }),\\n/* 75 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\\n  var globalScope = __w_pdfjs_require__(76);\\n  var isNodeJS = __w_pdfjs_require__(44);\\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\\n  var isAndroid = /Android/.test(userAgent);\\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\\n  var isIE = userAgent.indexOf('Trident') >= 0;\\n  var isIOS = /\\\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\\n  var isSafari = /Safari\\\\//.test(userAgent) && !/(Chrome\\\\/|Android\\\\s)/.test(userAgent);\\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\\n  if (typeof PDFJS === 'undefined') {\\n    globalScope.PDFJS = {};\\n  }\\n  PDFJS.compatibilityChecked = true;\\n  (function checkNodeBtoa() {\\n    if (globalScope.btoa || !isNodeJS()) {\\n      return;\\n    }\\n    globalScope.btoa = function (chars) {\\n      return Buffer.from(chars, 'binary').toString('base64');\\n    };\\n  })();\\n  (function checkNodeAtob() {\\n    if (globalScope.atob || !isNodeJS()) {\\n      return;\\n    }\\n    globalScope.atob = function (input) {\\n      return Buffer.from(input, 'base64').toString('binary');\\n    };\\n  })();\\n  (function checkOnBlobSupport() {\\n    if (isIE || isIOSChrome) {\\n      PDFJS.disableCreateObjectURL = true;\\n    }\\n  })();\\n  (function checkNavigatorLanguage() {\\n    if (typeof navigator === 'undefined') {\\n      return;\\n    }\\n    if ('language' in navigator) {\\n      return;\\n    }\\n    PDFJS.locale = navigator.userLanguage || 'en-US';\\n  })();\\n  (function checkRangeRequests() {\\n    if (isSafari || isIOS) {\\n      PDFJS.disableRange = true;\\n      PDFJS.disableStream = true;\\n    }\\n  })();\\n  (function checkCanvasSizeLimitation() {\\n    if (isIOS || isAndroid) {\\n      PDFJS.maxCanvasPixels = 5242880;\\n    }\\n  })();\\n  (function checkFullscreenSupport() {\\n    if (!hasDOM) {\\n      return;\\n    }\\n    if (isIE && window.parent !== window) {\\n      PDFJS.disableFullscreen = true;\\n    }\\n  })();\\n  (function checkCurrentScript() {\\n    if (!hasDOM) {\\n      return;\\n    }\\n    if ('currentScript' in document) {\\n      return;\\n    }\\n    Object.defineProperty(document, 'currentScript', {\\n      get: function get() {\\n        var scripts = document.getElementsByTagName('script');\\n        return scripts[scripts.length - 1];\\n      },\\n\\n      enumerable: true,\\n      configurable: true\\n    });\\n  })();\\n  (function checkChildNodeRemove() {\\n    if (!hasDOM) {\\n      return;\\n    }\\n    if (typeof Element.prototype.remove !== 'undefined') {\\n      return;\\n    }\\n    Element.prototype.remove = function () {\\n      if (this.parentNode) {\\n        this.parentNode.removeChild(this);\\n      }\\n    };\\n  })();\\n  (function checkArrayIncludes() {\\n    if (Array.prototype.includes) {\\n      return;\\n    }\\n    Array.prototype.includes = __w_pdfjs_require__(77);\\n  })();\\n  (function checkMathLog2() {\\n    if (Math.log2) {\\n      return;\\n    }\\n    Math.log2 = __w_pdfjs_require__(80);\\n  })();\\n  (function checkNumberIsNaN() {\\n    if (Number.isNaN) {\\n      return;\\n    }\\n    Number.isNaN = __w_pdfjs_require__(82);\\n  })();\\n  (function checkNumberIsInteger() {\\n    if (Number.isInteger) {\\n      return;\\n    }\\n    Number.isInteger = __w_pdfjs_require__(84);\\n  })();\\n  (function checkPromise() {\\n    if (globalScope.Promise) {\\n      return;\\n    }\\n    globalScope.Promise = __w_pdfjs_require__(87);\\n  })();\\n  (function checkWeakMap() {\\n    if (globalScope.WeakMap) {\\n      return;\\n    }\\n    globalScope.WeakMap = __w_pdfjs_require__(106);\\n  })();\\n  (function checkURLConstructor() {\\n    var hasWorkingUrl = false;\\n    try {\\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\\n        var u = new URL('b', 'http://a');\\n        u.pathname = 'c%20d';\\n        hasWorkingUrl = u.href === 'http://a/c%20d';\\n      }\\n    } catch (e) {}\\n    if (hasWorkingUrl) {\\n      return;\\n    }\\n    var relative = Object.create(null);\\n    relative['ftp'] = 21;\\n    relative['file'] = 0;\\n    relative['gopher'] = 70;\\n    relative['http'] = 80;\\n    relative['https'] = 443;\\n    relative['ws'] = 80;\\n    relative['wss'] = 443;\\n    var relativePathDotMapping = Object.create(null);\\n    relativePathDotMapping['%2e'] = '.';\\n    relativePathDotMapping['.%2e'] = '..';\\n    relativePathDotMapping['%2e.'] = '..';\\n    relativePathDotMapping['%2e%2e'] = '..';\\n    function isRelativeScheme(scheme) {\\n      return relative[scheme] !== undefined;\\n    }\\n    function invalid() {\\n      clear.call(this);\\n      this._isInvalid = true;\\n    }\\n    function IDNAToASCII(h) {\\n      if (h === '') {\\n        invalid.call(this);\\n      }\\n      return h.toLowerCase();\\n    }\\n    function percentEscape(c) {\\n      var unicode = c.charCodeAt(0);\\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\\n        return c;\\n      }\\n      return encodeURIComponent(c);\\n    }\\n    function percentEscapeQuery(c) {\\n      var unicode = c.charCodeAt(0);\\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\\n        return c;\\n      }\\n      return encodeURIComponent(c);\\n    }\\n    var EOF,\\n        ALPHA = /[a-zA-Z]/,\\n        ALPHANUMERIC = /[a-zA-Z0-9\\\\+\\\\-\\\\.]/;\\n    function parse(input, stateOverride, base) {\\n      function err(message) {\\n        errors.push(message);\\n      }\\n      var state = stateOverride || 'scheme start',\\n          cursor = 0,\\n          buffer = '',\\n          seenAt = false,\\n          seenBracket = false,\\n          errors = [];\\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\\n        var c = input[cursor];\\n        switch (state) {\\n          case 'scheme start':\\n            if (c && ALPHA.test(c)) {\\n              buffer += c.toLowerCase();\\n              state = 'scheme';\\n            } else if (!stateOverride) {\\n              buffer = '';\\n              state = 'no scheme';\\n              continue;\\n            } else {\\n              err('Invalid scheme.');\\n              break loop;\\n            }\\n            break;\\n          case 'scheme':\\n            if (c && ALPHANUMERIC.test(c)) {\\n              buffer += c.toLowerCase();\\n            } else if (c === ':') {\\n              this._scheme = buffer;\\n              buffer = '';\\n              if (stateOverride) {\\n                break loop;\\n              }\\n              if (isRelativeScheme(this._scheme)) {\\n                this._isRelative = true;\\n              }\\n              if (this._scheme === 'file') {\\n                state = 'relative';\\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\\n                state = 'relative or authority';\\n              } else if (this._isRelative) {\\n                state = 'authority first slash';\\n              } else {\\n                state = 'scheme data';\\n              }\\n            } else if (!stateOverride) {\\n              buffer = '';\\n              cursor = 0;\\n              state = 'no scheme';\\n              continue;\\n            } else if (c === EOF) {\\n              break loop;\\n            } else {\\n              err('Code point not allowed in scheme: ' + c);\\n              break loop;\\n            }\\n            break;\\n          case 'scheme data':\\n            if (c === '?') {\\n              this._query = '?';\\n              state = 'query';\\n            } else if (c === '#') {\\n              this._fragment = '#';\\n              state = 'fragment';\\n            } else {\\n              if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n                this._schemeData += percentEscape(c);\\n              }\\n            }\\n            break;\\n          case 'no scheme':\\n            if (!base || !isRelativeScheme(base._scheme)) {\\n              err('Missing scheme.');\\n              invalid.call(this);\\n            } else {\\n              state = 'relative';\\n              continue;\\n            }\\n            break;\\n          case 'relative or authority':\\n            if (c === '/' && input[cursor + 1] === '/') {\\n              state = 'authority ignore slashes';\\n            } else {\\n              err('Expected /, got: ' + c);\\n              state = 'relative';\\n              continue;\\n            }\\n            break;\\n          case 'relative':\\n            this._isRelative = true;\\n            if (this._scheme !== 'file') {\\n              this._scheme = base._scheme;\\n            }\\n            if (c === EOF) {\\n              this._host = base._host;\\n              this._port = base._port;\\n              this._path = base._path.slice();\\n              this._query = base._query;\\n              this._username = base._username;\\n              this._password = base._password;\\n              break loop;\\n            } else if (c === '/' || c === '\\\\\\\\') {\\n              if (c === '\\\\\\\\') {\\n                err('\\\\\\\\ is an invalid code point.');\\n              }\\n              state = 'relative slash';\\n            } else if (c === '?') {\\n              this._host = base._host;\\n              this._port = base._port;\\n              this._path = base._path.slice();\\n              this._query = '?';\\n              this._username = base._username;\\n              this._password = base._password;\\n              state = 'query';\\n            } else if (c === '#') {\\n              this._host = base._host;\\n              this._port = base._port;\\n              this._path = base._path.slice();\\n              this._query = base._query;\\n              this._fragment = '#';\\n              this._username = base._username;\\n              this._password = base._password;\\n              state = 'fragment';\\n            } else {\\n              var nextC = input[cursor + 1];\\n              var nextNextC = input[cursor + 2];\\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\\\\\' && nextNextC !== '?' && nextNextC !== '#') {\\n                this._host = base._host;\\n                this._port = base._port;\\n                this._username = base._username;\\n                this._password = base._password;\\n                this._path = base._path.slice();\\n                this._path.pop();\\n              }\\n              state = 'relative path';\\n              continue;\\n            }\\n            break;\\n          case 'relative slash':\\n            if (c === '/' || c === '\\\\\\\\') {\\n              if (c === '\\\\\\\\') {\\n                err('\\\\\\\\ is an invalid code point.');\\n              }\\n              if (this._scheme === 'file') {\\n                state = 'file host';\\n              } else {\\n                state = 'authority ignore slashes';\\n              }\\n            } else {\\n              if (this._scheme !== 'file') {\\n                this._host = base._host;\\n                this._port = base._port;\\n                this._username = base._username;\\n                this._password = base._password;\\n              }\\n              state = 'relative path';\\n              continue;\\n            }\\n            break;\\n          case 'authority first slash':\\n            if (c === '/') {\\n              state = 'authority second slash';\\n            } else {\\n              err('Expected \\\\'/\\\\', got: ' + c);\\n              state = 'authority ignore slashes';\\n              continue;\\n            }\\n            break;\\n          case 'authority second slash':\\n            state = 'authority ignore slashes';\\n            if (c !== '/') {\\n              err('Expected \\\\'/\\\\', got: ' + c);\\n              continue;\\n            }\\n            break;\\n          case 'authority ignore slashes':\\n            if (c !== '/' && c !== '\\\\\\\\') {\\n              state = 'authority';\\n              continue;\\n            } else {\\n              err('Expected authority, got: ' + c);\\n            }\\n            break;\\n          case 'authority':\\n            if (c === '@') {\\n              if (seenAt) {\\n                err('@ already seen.');\\n                buffer += '%40';\\n              }\\n              seenAt = true;\\n              for (var i = 0; i < buffer.length; i++) {\\n                var cp = buffer[i];\\n                if (cp === '\\\\t' || cp === '\\\\n' || cp === '\\\\r') {\\n                  err('Invalid whitespace in authority.');\\n                  continue;\\n                }\\n                if (cp === ':' && this._password === null) {\\n                  this._password = '';\\n                  continue;\\n                }\\n                var tempC = percentEscape(cp);\\n                if (this._password !== null) {\\n                  this._password += tempC;\\n                } else {\\n                  this._username += tempC;\\n                }\\n              }\\n              buffer = '';\\n            } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\n              cursor -= buffer.length;\\n              buffer = '';\\n              state = 'host';\\n              continue;\\n            } else {\\n              buffer += c;\\n            }\\n            break;\\n          case 'file host':\\n            if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\\n                state = 'relative path';\\n              } else if (buffer.length === 0) {\\n                state = 'relative path start';\\n              } else {\\n                this._host = IDNAToASCII.call(this, buffer);\\n                buffer = '';\\n                state = 'relative path start';\\n              }\\n              continue;\\n            } else if (c === '\\\\t' || c === '\\\\n' || c === '\\\\r') {\\n              err('Invalid whitespace in file host.');\\n            } else {\\n              buffer += c;\\n            }\\n            break;\\n          case 'host':\\n          case 'hostname':\\n            if (c === ':' && !seenBracket) {\\n              this._host = IDNAToASCII.call(this, buffer);\\n              buffer = '';\\n              state = 'port';\\n              if (stateOverride === 'hostname') {\\n                break loop;\\n              }\\n            } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\n              this._host = IDNAToASCII.call(this, buffer);\\n              buffer = '';\\n              state = 'relative path start';\\n              if (stateOverride) {\\n                break loop;\\n              }\\n              continue;\\n            } else if (c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n              if (c === '[') {\\n                seenBracket = true;\\n              } else if (c === ']') {\\n                seenBracket = false;\\n              }\\n              buffer += c;\\n            } else {\\n              err('Invalid code point in host/hostname: ' + c);\\n            }\\n            break;\\n          case 'port':\\n            if (/[0-9]/.test(c)) {\\n              buffer += c;\\n            } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#' || stateOverride) {\\n              if (buffer !== '') {\\n                var temp = parseInt(buffer, 10);\\n                if (temp !== relative[this._scheme]) {\\n                  this._port = temp + '';\\n                }\\n                buffer = '';\\n              }\\n              if (stateOverride) {\\n                break loop;\\n              }\\n              state = 'relative path start';\\n              continue;\\n            } else if (c === '\\\\t' || c === '\\\\n' || c === '\\\\r') {\\n              err('Invalid code point in port: ' + c);\\n            } else {\\n              invalid.call(this);\\n            }\\n            break;\\n          case 'relative path start':\\n            if (c === '\\\\\\\\') {\\n              err('\\\\'\\\\\\\\\\\\' not allowed in path.');\\n            }\\n            state = 'relative path';\\n            if (c !== '/' && c !== '\\\\\\\\') {\\n              continue;\\n            }\\n            break;\\n          case 'relative path':\\n            if (c === EOF || c === '/' || c === '\\\\\\\\' || !stateOverride && (c === '?' || c === '#')) {\\n              if (c === '\\\\\\\\') {\\n                err('\\\\\\\\ not allowed in relative path.');\\n              }\\n              var tmp;\\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\\n                buffer = tmp;\\n              }\\n              if (buffer === '..') {\\n                this._path.pop();\\n                if (c !== '/' && c !== '\\\\\\\\') {\\n                  this._path.push('');\\n                }\\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\\\\\') {\\n                this._path.push('');\\n              } else if (buffer !== '.') {\\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\\n                  buffer = buffer[0] + ':';\\n                }\\n                this._path.push(buffer);\\n              }\\n              buffer = '';\\n              if (c === '?') {\\n                this._query = '?';\\n                state = 'query';\\n              } else if (c === '#') {\\n                this._fragment = '#';\\n                state = 'fragment';\\n              }\\n            } else if (c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n              buffer += percentEscape(c);\\n            }\\n            break;\\n          case 'query':\\n            if (!stateOverride && c === '#') {\\n              this._fragment = '#';\\n              state = 'fragment';\\n            } else if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n              this._query += percentEscapeQuery(c);\\n            }\\n            break;\\n          case 'fragment':\\n            if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n              this._fragment += c;\\n            }\\n            break;\\n        }\\n        cursor++;\\n      }\\n    }\\n    function clear() {\\n      this._scheme = '';\\n      this._schemeData = '';\\n      this._username = '';\\n      this._password = null;\\n      this._host = '';\\n      this._port = '';\\n      this._path = [];\\n      this._query = '';\\n      this._fragment = '';\\n      this._isInvalid = false;\\n      this._isRelative = false;\\n    }\\n    function JURL(url, base) {\\n      if (base !== undefined && !(base instanceof JURL)) {\\n        base = new JURL(String(base));\\n      }\\n      this._url = url;\\n      clear.call(this);\\n      var input = url.replace(/^[ \\\\t\\\\r\\\\n\\\\f]+|[ \\\\t\\\\r\\\\n\\\\f]+$/g, '');\\n      parse.call(this, input, null, base);\\n    }\\n    JURL.prototype = {\\n      toString: function toString() {\\n        return this.href;\\n      },\\n\\n      get href() {\\n        if (this._isInvalid) {\\n          return this._url;\\n        }\\n        var authority = '';\\n        if (this._username !== '' || this._password !== null) {\\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\\n        }\\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\\n      },\\n      set href(value) {\\n        clear.call(this);\\n        parse.call(this, value);\\n      },\\n      get protocol() {\\n        return this._scheme + ':';\\n      },\\n      set protocol(value) {\\n        if (this._isInvalid) {\\n          return;\\n        }\\n        parse.call(this, value + ':', 'scheme start');\\n      },\\n      get host() {\\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\\n      },\\n      set host(value) {\\n        if (this._isInvalid || !this._isRelative) {\\n          return;\\n        }\\n        parse.call(this, value, 'host');\\n      },\\n      get hostname() {\\n        return this._host;\\n      },\\n      set hostname(value) {\\n        if (this._isInvalid || !this._isRelative) {\\n          return;\\n        }\\n        parse.call(this, value, 'hostname');\\n      },\\n      get port() {\\n        return this._port;\\n      },\\n      set port(value) {\\n        if (this._isInvalid || !this._isRelative) {\\n          return;\\n        }\\n        parse.call(this, value, 'port');\\n      },\\n      get pathname() {\\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\\n      },\\n      set pathname(value) {\\n        if (this._isInvalid || !this._isRelative) {\\n          return;\\n        }\\n        this._path = [];\\n        parse.call(this, value, 'relative path start');\\n      },\\n      get search() {\\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\\n      },\\n      set search(value) {\\n        if (this._isInvalid || !this._isRelative) {\\n          return;\\n        }\\n        this._query = '?';\\n        if (value[0] === '?') {\\n          value = value.slice(1);\\n        }\\n        parse.call(this, value, 'query');\\n      },\\n      get hash() {\\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\\n      },\\n      set hash(value) {\\n        if (this._isInvalid) {\\n          return;\\n        }\\n        this._fragment = '#';\\n        if (value[0] === '#') {\\n          value = value.slice(1);\\n        }\\n        parse.call(this, value, 'fragment');\\n      },\\n      get origin() {\\n        var host;\\n        if (this._isInvalid || !this._scheme) {\\n          return '';\\n        }\\n        switch (this._scheme) {\\n          case 'data':\\n          case 'file':\\n          case 'javascript':\\n          case 'mailto':\\n            return 'null';\\n          case 'blob':\\n            try {\\n              return new JURL(this._schemeData).origin || 'null';\\n            } catch (_) {}\\n            return 'null';\\n        }\\n        host = this.host;\\n        if (!host) {\\n          return '';\\n        }\\n        return this._scheme + '://' + host;\\n      }\\n    };\\n    var OriginalURL = globalScope.URL;\\n    if (OriginalURL) {\\n      JURL.createObjectURL = function (blob) {\\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\\n      };\\n      JURL.revokeObjectURL = function (url) {\\n        OriginalURL.revokeObjectURL(url);\\n      };\\n    }\\n    globalScope.URL = JURL;\\n  })();\\n  (function checkObjectValues() {\\n    if (Object.values) {\\n      return;\\n    }\\n    Object.values = __w_pdfjs_require__(122);\\n  })();\\n}\\n\\n/***/ }),\\n/* 76 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\\n\\n/***/ }),\\n/* 77 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(78);\\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\\n\\n/***/ }),\\n/* 78 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\nvar $includes = __w_pdfjs_require__(47)(true);\\n$export($export.P, 'Array', {\\n  includes: function includes(el) {\\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\\n  }\\n});\\n__w_pdfjs_require__(48)('includes');\\n\\n/***/ }),\\n/* 79 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar toInteger = __w_pdfjs_require__(32);\\nvar max = Math.max;\\nvar min = Math.min;\\nmodule.exports = function (index, length) {\\n  index = toInteger(index);\\n  return index < 0 ? max(index + length, 0) : min(index, length);\\n};\\n\\n/***/ }),\\n/* 80 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(81);\\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\\n\\n/***/ }),\\n/* 81 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\n$export($export.S, 'Math', {\\n  log2: function log2(x) {\\n    return Math.log(x) / Math.LN2;\\n  }\\n});\\n\\n/***/ }),\\n/* 82 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(83);\\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\\n\\n/***/ }),\\n/* 83 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\n$export($export.S, 'Number', {\\n  isNaN: function isNaN(number) {\\n    return number != number;\\n  }\\n});\\n\\n/***/ }),\\n/* 84 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(85);\\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\\n\\n/***/ }),\\n/* 85 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(86) });\\n\\n/***/ }),\\n/* 86 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nvar floor = Math.floor;\\nmodule.exports = function isInteger(it) {\\n  return !isObject(it) && isFinite(it) && floor(it) === it;\\n};\\n\\n/***/ }),\\n/* 87 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(50);\\n__w_pdfjs_require__(88);\\n__w_pdfjs_require__(55);\\n__w_pdfjs_require__(97);\\n__w_pdfjs_require__(104);\\n__w_pdfjs_require__(105);\\nmodule.exports = __w_pdfjs_require__(7).Promise;\\n\\n/***/ }),\\n/* 88 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $at = __w_pdfjs_require__(89)(true);\\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\\n  this._t = String(iterated);\\n  this._i = 0;\\n}, function () {\\n  var O = this._t;\\n  var index = this._i;\\n  var point;\\n  if (index >= O.length) return {\\n    value: undefined,\\n    done: true\\n  };\\n  point = $at(O, index);\\n  this._i += point.length;\\n  return {\\n    value: point,\\n    done: false\\n  };\\n});\\n\\n/***/ }),\\n/* 89 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar toInteger = __w_pdfjs_require__(32);\\nvar defined = __w_pdfjs_require__(30);\\nmodule.exports = function (TO_STRING) {\\n  return function (that, pos) {\\n    var s = String(defined(that));\\n    var i = toInteger(pos);\\n    var l = s.length;\\n    var a, b;\\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\\n    a = s.charCodeAt(i);\\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\\n  };\\n};\\n\\n/***/ }),\\n/* 90 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar create = __w_pdfjs_require__(91);\\nvar descriptor = __w_pdfjs_require__(28);\\nvar setToStringTag = __w_pdfjs_require__(24);\\nvar IteratorPrototype = {};\\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\\n  return this;\\n});\\nmodule.exports = function (Constructor, NAME, next) {\\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\\n  setToStringTag(Constructor, NAME + ' Iterator');\\n};\\n\\n/***/ }),\\n/* 91 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar anObject = __w_pdfjs_require__(8);\\nvar dPs = __w_pdfjs_require__(92);\\nvar enumBugKeys = __w_pdfjs_require__(53);\\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\\nvar Empty = function Empty() {};\\nvar PROTOTYPE = 'prototype';\\nvar _createDict = function createDict() {\\n  var iframe = __w_pdfjs_require__(27)('iframe');\\n  var i = enumBugKeys.length;\\n  var lt = '<';\\n  var gt = '>';\\n  var iframeDocument;\\n  iframe.style.display = 'none';\\n  __w_pdfjs_require__(54).appendChild(iframe);\\n  iframe.src = 'javascript:';\\n  iframeDocument = iframe.contentWindow.document;\\n  iframeDocument.open();\\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\\n  iframeDocument.close();\\n  _createDict = iframeDocument.F;\\n  while (i--) {\\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\\n  }return _createDict();\\n};\\nmodule.exports = Object.create || function create(O, Properties) {\\n  var result;\\n  if (O !== null) {\\n    Empty[PROTOTYPE] = anObject(O);\\n    result = new Empty();\\n    Empty[PROTOTYPE] = null;\\n    result[IE_PROTO] = O;\\n  } else result = _createDict();\\n  return Properties === undefined ? result : dPs(result, Properties);\\n};\\n\\n/***/ }),\\n/* 92 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar dP = __w_pdfjs_require__(15);\\nvar anObject = __w_pdfjs_require__(8);\\nvar getKeys = __w_pdfjs_require__(23);\\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\\n  anObject(O);\\n  var keys = getKeys(Properties);\\n  var length = keys.length;\\n  var i = 0;\\n  var P;\\n  while (length > i) {\\n    dP.f(O, P = keys[i++], Properties[P]);\\n  }return O;\\n};\\n\\n/***/ }),\\n/* 93 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar has = __w_pdfjs_require__(9);\\nvar toIObject = __w_pdfjs_require__(17);\\nvar arrayIndexOf = __w_pdfjs_require__(47)(false);\\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\\nmodule.exports = function (object, names) {\\n  var O = toIObject(object);\\n  var i = 0;\\n  var result = [];\\n  var key;\\n  for (key in O) {\\n    if (key != IE_PROTO) has(O, key) && result.push(key);\\n  }while (names.length > i) {\\n    if (has(O, key = names[i++])) {\\n      ~arrayIndexOf(result, key) || result.push(key);\\n    }\\n  }return result;\\n};\\n\\n/***/ }),\\n/* 94 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar has = __w_pdfjs_require__(9);\\nvar toObject = __w_pdfjs_require__(35);\\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\\nvar ObjectProto = Object.prototype;\\nmodule.exports = Object.getPrototypeOf || function (O) {\\n  O = toObject(O);\\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\\n    return O.constructor.prototype;\\n  }\\n  return O instanceof Object ? ObjectProto : null;\\n};\\n\\n/***/ }),\\n/* 95 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar addToUnscopables = __w_pdfjs_require__(48);\\nvar step = __w_pdfjs_require__(96);\\nvar Iterators = __w_pdfjs_require__(19);\\nvar toIObject = __w_pdfjs_require__(17);\\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\\n  this._t = toIObject(iterated);\\n  this._i = 0;\\n  this._k = kind;\\n}, function () {\\n  var O = this._t;\\n  var kind = this._k;\\n  var index = this._i++;\\n  if (!O || index >= O.length) {\\n    this._t = undefined;\\n    return step(1);\\n  }\\n  if (kind == 'keys') return step(0, index);\\n  if (kind == 'values') return step(0, O[index]);\\n  return step(0, [index, O[index]]);\\n}, 'values');\\nIterators.Arguments = Iterators.Array;\\naddToUnscopables('keys');\\naddToUnscopables('values');\\naddToUnscopables('entries');\\n\\n/***/ }),\\n/* 96 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (done, value) {\\n  return {\\n    value: value,\\n    done: !!done\\n  };\\n};\\n\\n/***/ }),\\n/* 97 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar LIBRARY = __w_pdfjs_require__(52);\\nvar global = __w_pdfjs_require__(5);\\nvar ctx = __w_pdfjs_require__(11);\\nvar classof = __w_pdfjs_require__(33);\\nvar $export = __w_pdfjs_require__(6);\\nvar isObject = __w_pdfjs_require__(3);\\nvar aFunction = __w_pdfjs_require__(16);\\nvar anInstance = __w_pdfjs_require__(36);\\nvar forOf = __w_pdfjs_require__(25);\\nvar speciesConstructor = __w_pdfjs_require__(56);\\nvar task = __w_pdfjs_require__(57).set;\\nvar microtask = __w_pdfjs_require__(102)();\\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\\nvar perform = __w_pdfjs_require__(58);\\nvar promiseResolve = __w_pdfjs_require__(59);\\nvar PROMISE = 'Promise';\\nvar TypeError = global.TypeError;\\nvar process = global.process;\\nvar $Promise = global[PROMISE];\\nvar isNode = classof(process) == 'process';\\nvar empty = function empty() {};\\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\\nvar USE_NATIVE = !!function () {\\n  try {\\n    var promise = $Promise.resolve(1);\\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\\n      exec(empty, empty);\\n    };\\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\\n  } catch (e) {}\\n}();\\nvar isThenable = function isThenable(it) {\\n  var then;\\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\\n};\\nvar notify = function notify(promise, isReject) {\\n  if (promise._n) return;\\n  promise._n = true;\\n  var chain = promise._c;\\n  microtask(function () {\\n    var value = promise._v;\\n    var ok = promise._s == 1;\\n    var i = 0;\\n    var run = function run(reaction) {\\n      var handler = ok ? reaction.ok : reaction.fail;\\n      var resolve = reaction.resolve;\\n      var reject = reaction.reject;\\n      var domain = reaction.domain;\\n      var result, then;\\n      try {\\n        if (handler) {\\n          if (!ok) {\\n            if (promise._h == 2) onHandleUnhandled(promise);\\n            promise._h = 1;\\n          }\\n          if (handler === true) result = value;else {\\n            if (domain) domain.enter();\\n            result = handler(value);\\n            if (domain) domain.exit();\\n          }\\n          if (result === reaction.promise) {\\n            reject(TypeError('Promise-chain cycle'));\\n          } else if (then = isThenable(result)) {\\n            then.call(result, resolve, reject);\\n          } else resolve(result);\\n        } else reject(value);\\n      } catch (e) {\\n        reject(e);\\n      }\\n    };\\n    while (chain.length > i) {\\n      run(chain[i++]);\\n    }promise._c = [];\\n    promise._n = false;\\n    if (isReject && !promise._h) onUnhandled(promise);\\n  });\\n};\\nvar onUnhandled = function onUnhandled(promise) {\\n  task.call(global, function () {\\n    var value = promise._v;\\n    var unhandled = isUnhandled(promise);\\n    var result, handler, console;\\n    if (unhandled) {\\n      result = perform(function () {\\n        if (isNode) {\\n          process.emit('unhandledRejection', value, promise);\\n        } else if (handler = global.onunhandledrejection) {\\n          handler({\\n            promise: promise,\\n            reason: value\\n          });\\n        } else if ((console = global.console) && console.error) {\\n          console.error('Unhandled promise rejection', value);\\n        }\\n      });\\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\\n    }\\n    promise._a = undefined;\\n    if (unhandled && result.e) throw result.v;\\n  });\\n};\\nvar isUnhandled = function isUnhandled(promise) {\\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\\n};\\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\\n  task.call(global, function () {\\n    var handler;\\n    if (isNode) {\\n      process.emit('rejectionHandled', promise);\\n    } else if (handler = global.onrejectionhandled) {\\n      handler({\\n        promise: promise,\\n        reason: promise._v\\n      });\\n    }\\n  });\\n};\\nvar $reject = function $reject(value) {\\n  var promise = this;\\n  if (promise._d) return;\\n  promise._d = true;\\n  promise = promise._w || promise;\\n  promise._v = value;\\n  promise._s = 2;\\n  if (!promise._a) promise._a = promise._c.slice();\\n  notify(promise, true);\\n};\\nvar $resolve = function $resolve(value) {\\n  var promise = this;\\n  var then;\\n  if (promise._d) return;\\n  promise._d = true;\\n  promise = promise._w || promise;\\n  try {\\n    if (promise === value) throw TypeError(\\\"Promise can't be resolved itself\\\");\\n    if (then = isThenable(value)) {\\n      microtask(function () {\\n        var wrapper = {\\n          _w: promise,\\n          _d: false\\n        };\\n        try {\\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\\n        } catch (e) {\\n          $reject.call(wrapper, e);\\n        }\\n      });\\n    } else {\\n      promise._v = value;\\n      promise._s = 1;\\n      notify(promise, false);\\n    }\\n  } catch (e) {\\n    $reject.call({\\n      _w: promise,\\n      _d: false\\n    }, e);\\n  }\\n};\\nif (!USE_NATIVE) {\\n  $Promise = function Promise(executor) {\\n    anInstance(this, $Promise, PROMISE, '_h');\\n    aFunction(executor);\\n    Internal.call(this);\\n    try {\\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\\n    } catch (err) {\\n      $reject.call(this, err);\\n    }\\n  };\\n  Internal = function Promise(executor) {\\n    this._c = [];\\n    this._a = undefined;\\n    this._s = 0;\\n    this._d = false;\\n    this._v = undefined;\\n    this._h = 0;\\n    this._n = false;\\n  };\\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\\n    then: function then(onFulfilled, onRejected) {\\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\\n      reaction.fail = typeof onRejected == 'function' && onRejected;\\n      reaction.domain = isNode ? process.domain : undefined;\\n      this._c.push(reaction);\\n      if (this._a) this._a.push(reaction);\\n      if (this._s) notify(this, false);\\n      return reaction.promise;\\n    },\\n    'catch': function _catch(onRejected) {\\n      return this.then(undefined, onRejected);\\n    }\\n  });\\n  OwnPromiseCapability = function OwnPromiseCapability() {\\n    var promise = new Internal();\\n    this.promise = promise;\\n    this.resolve = ctx($resolve, promise, 1);\\n    this.reject = ctx($reject, promise, 1);\\n  };\\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\\n  };\\n}\\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\\n__w_pdfjs_require__(24)($Promise, PROMISE);\\n__w_pdfjs_require__(103)(PROMISE);\\nWrapper = __w_pdfjs_require__(7)[PROMISE];\\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\\n  reject: function reject(r) {\\n    var capability = newPromiseCapability(this);\\n    var $$reject = capability.reject;\\n    $$reject(r);\\n    return capability.promise;\\n  }\\n});\\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\\n  resolve: function resolve(x) {\\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\\n  }\\n});\\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\\n  $Promise.all(iter)['catch'](empty);\\n})), PROMISE, {\\n  all: function all(iterable) {\\n    var C = this;\\n    var capability = newPromiseCapability(C);\\n    var resolve = capability.resolve;\\n    var reject = capability.reject;\\n    var result = perform(function () {\\n      var values = [];\\n      var index = 0;\\n      var remaining = 1;\\n      forOf(iterable, false, function (promise) {\\n        var $index = index++;\\n        var alreadyCalled = false;\\n        values.push(undefined);\\n        remaining++;\\n        C.resolve(promise).then(function (value) {\\n          if (alreadyCalled) return;\\n          alreadyCalled = true;\\n          values[$index] = value;\\n          --remaining || resolve(values);\\n        }, reject);\\n      });\\n      --remaining || resolve(values);\\n    });\\n    if (result.e) reject(result.v);\\n    return capability.promise;\\n  },\\n  race: function race(iterable) {\\n    var C = this;\\n    var capability = newPromiseCapability(C);\\n    var reject = capability.reject;\\n    var result = perform(function () {\\n      forOf(iterable, false, function (promise) {\\n        C.resolve(promise).then(capability.resolve, reject);\\n      });\\n    });\\n    if (result.e) reject(result.v);\\n    return capability.promise;\\n  }\\n});\\n\\n/***/ }),\\n/* 98 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar anObject = __w_pdfjs_require__(8);\\nmodule.exports = function (iterator, fn, value, entries) {\\n  try {\\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\\n  } catch (e) {\\n    var ret = iterator['return'];\\n    if (ret !== undefined) anObject(ret.call(iterator));\\n    throw e;\\n  }\\n};\\n\\n/***/ }),\\n/* 99 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar Iterators = __w_pdfjs_require__(19);\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\nvar ArrayProto = Array.prototype;\\nmodule.exports = function (it) {\\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\\n};\\n\\n/***/ }),\\n/* 100 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar classof = __w_pdfjs_require__(33);\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\nvar Iterators = __w_pdfjs_require__(19);\\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\\n};\\n\\n/***/ }),\\n/* 101 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = function (fn, args, that) {\\n  var un = that === undefined;\\n  switch (args.length) {\\n    case 0:\\n      return un ? fn() : fn.call(that);\\n    case 1:\\n      return un ? fn(args[0]) : fn.call(that, args[0]);\\n    case 2:\\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\\n    case 3:\\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\\n    case 4:\\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\\n  }\\n  return fn.apply(that, args);\\n};\\n\\n/***/ }),\\n/* 102 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar global = __w_pdfjs_require__(5);\\nvar macrotask = __w_pdfjs_require__(57).set;\\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\\nvar process = global.process;\\nvar Promise = global.Promise;\\nvar isNode = __w_pdfjs_require__(18)(process) == 'process';\\nmodule.exports = function () {\\n  var head, last, notify;\\n  var flush = function flush() {\\n    var parent, fn;\\n    if (isNode && (parent = process.domain)) parent.exit();\\n    while (head) {\\n      fn = head.fn;\\n      head = head.next;\\n      try {\\n        fn();\\n      } catch (e) {\\n        if (head) notify();else last = undefined;\\n        throw e;\\n      }\\n    }\\n    last = undefined;\\n    if (parent) parent.enter();\\n  };\\n  if (isNode) {\\n    notify = function notify() {\\n      process.nextTick(flush);\\n    };\\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\\n    var toggle = true;\\n    var node = document.createTextNode('');\\n    new Observer(flush).observe(node, { characterData: true });\\n    notify = function notify() {\\n      node.data = toggle = !toggle;\\n    };\\n  } else if (Promise && Promise.resolve) {\\n    var promise = Promise.resolve();\\n    notify = function notify() {\\n      promise.then(flush);\\n    };\\n  } else {\\n    notify = function notify() {\\n      macrotask.call(global, flush);\\n    };\\n  }\\n  return function (fn) {\\n    var task = {\\n      fn: fn,\\n      next: undefined\\n    };\\n    if (last) last.next = task;\\n    if (!head) {\\n      head = task;\\n      notify();\\n    }\\n    last = task;\\n  };\\n};\\n\\n/***/ }),\\n/* 103 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar global = __w_pdfjs_require__(5);\\nvar dP = __w_pdfjs_require__(15);\\nvar DESCRIPTORS = __w_pdfjs_require__(13);\\nvar SPECIES = __w_pdfjs_require__(4)('species');\\nmodule.exports = function (KEY) {\\n  var C = global[KEY];\\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\\n    configurable: true,\\n    get: function get() {\\n      return this;\\n    }\\n  });\\n};\\n\\n/***/ }),\\n/* 104 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\nvar core = __w_pdfjs_require__(7);\\nvar global = __w_pdfjs_require__(5);\\nvar speciesConstructor = __w_pdfjs_require__(56);\\nvar promiseResolve = __w_pdfjs_require__(59);\\n$export($export.P + $export.R, 'Promise', {\\n  'finally': function _finally(onFinally) {\\n    var C = speciesConstructor(this, core.Promise || global.Promise);\\n    var isFunction = typeof onFinally == 'function';\\n    return this.then(isFunction ? function (x) {\\n      return promiseResolve(C, onFinally()).then(function () {\\n        return x;\\n      });\\n    } : onFinally, isFunction ? function (e) {\\n      return promiseResolve(C, onFinally()).then(function () {\\n        throw e;\\n      });\\n    } : onFinally);\\n  }\\n});\\n\\n/***/ }),\\n/* 105 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\nvar newPromiseCapability = __w_pdfjs_require__(37);\\nvar perform = __w_pdfjs_require__(58);\\n$export($export.S, 'Promise', {\\n  'try': function _try(callbackfn) {\\n    var promiseCapability = newPromiseCapability.f(this);\\n    var result = perform(callbackfn);\\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\\n    return promiseCapability.promise;\\n  }\\n});\\n\\n/***/ }),\\n/* 106 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(50);\\n__w_pdfjs_require__(55);\\n__w_pdfjs_require__(107);\\n__w_pdfjs_require__(118);\\n__w_pdfjs_require__(120);\\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\\n\\n/***/ }),\\n/* 107 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar each = __w_pdfjs_require__(61)(0);\\nvar redefine = __w_pdfjs_require__(10);\\nvar meta = __w_pdfjs_require__(39);\\nvar assign = __w_pdfjs_require__(111);\\nvar weak = __w_pdfjs_require__(113);\\nvar isObject = __w_pdfjs_require__(3);\\nvar fails = __w_pdfjs_require__(14);\\nvar validate = __w_pdfjs_require__(62);\\nvar WEAK_MAP = 'WeakMap';\\nvar getWeak = meta.getWeak;\\nvar isExtensible = Object.isExtensible;\\nvar uncaughtFrozenStore = weak.ufstore;\\nvar tmp = {};\\nvar InternalMap;\\nvar wrapper = function wrapper(get) {\\n  return function WeakMap() {\\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\\n  };\\n};\\nvar methods = {\\n  get: function get(key) {\\n    if (isObject(key)) {\\n      var data = getWeak(key);\\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\\n      return data ? data[this._i] : undefined;\\n    }\\n  },\\n  set: function set(key, value) {\\n    return weak.def(validate(this, WEAK_MAP), key, value);\\n  }\\n};\\nvar $WeakMap = module.exports = __w_pdfjs_require__(114)(WEAK_MAP, wrapper, methods, weak, true, true);\\nif (fails(function () {\\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\\n})) {\\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\\n  assign(InternalMap.prototype, methods);\\n  meta.NEED = true;\\n  each(['delete', 'has', 'get', 'set'], function (key) {\\n    var proto = $WeakMap.prototype;\\n    var method = proto[key];\\n    redefine(proto, key, function (a, b) {\\n      if (isObject(a) && !isExtensible(a)) {\\n        if (!this._f) this._f = new InternalMap();\\n        var result = this._f[key](a, b);\\n        return key == 'set' ? this : result;\\n      }\\n      return method.call(this, a, b);\\n    });\\n  });\\n}\\n\\n/***/ }),\\n/* 108 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar speciesConstructor = __w_pdfjs_require__(109);\\nmodule.exports = function (original, length) {\\n  return new (speciesConstructor(original))(length);\\n};\\n\\n/***/ }),\\n/* 109 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nvar isArray = __w_pdfjs_require__(110);\\nvar SPECIES = __w_pdfjs_require__(4)('species');\\nmodule.exports = function (original) {\\n  var C;\\n  if (isArray(original)) {\\n    C = original.constructor;\\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\\n    if (isObject(C)) {\\n      C = C[SPECIES];\\n      if (C === null) C = undefined;\\n    }\\n  }\\n  return C === undefined ? Array : C;\\n};\\n\\n/***/ }),\\n/* 110 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar cof = __w_pdfjs_require__(18);\\nmodule.exports = Array.isArray || function isArray(arg) {\\n  return cof(arg) == 'Array';\\n};\\n\\n/***/ }),\\n/* 111 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar getKeys = __w_pdfjs_require__(23);\\nvar gOPS = __w_pdfjs_require__(112);\\nvar pIE = __w_pdfjs_require__(40);\\nvar toObject = __w_pdfjs_require__(35);\\nvar IObject = __w_pdfjs_require__(29);\\nvar $assign = Object.assign;\\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\\n  var A = {};\\n  var B = {};\\n  var S = Symbol();\\n  var K = 'abcdefghijklmnopqrst';\\n  A[S] = 7;\\n  K.split('').forEach(function (k) {\\n    B[k] = k;\\n  });\\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\\n}) ? function assign(target, source) {\\n  var T = toObject(target);\\n  var aLen = arguments.length;\\n  var index = 1;\\n  var getSymbols = gOPS.f;\\n  var isEnum = pIE.f;\\n  while (aLen > index) {\\n    var S = IObject(arguments[index++]);\\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\\n    var length = keys.length;\\n    var j = 0;\\n    var key;\\n    while (length > j) {\\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\\n    }\\n  }\\n  return T;\\n} : $assign;\\n\\n/***/ }),\\n/* 112 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nexports.f = Object.getOwnPropertySymbols;\\n\\n/***/ }),\\n/* 113 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar redefineAll = __w_pdfjs_require__(38);\\nvar getWeak = __w_pdfjs_require__(39).getWeak;\\nvar anObject = __w_pdfjs_require__(8);\\nvar isObject = __w_pdfjs_require__(3);\\nvar anInstance = __w_pdfjs_require__(36);\\nvar forOf = __w_pdfjs_require__(25);\\nvar createArrayMethod = __w_pdfjs_require__(61);\\nvar $has = __w_pdfjs_require__(9);\\nvar validate = __w_pdfjs_require__(62);\\nvar arrayFind = createArrayMethod(5);\\nvar arrayFindIndex = createArrayMethod(6);\\nvar id = 0;\\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\\n  return that._l || (that._l = new UncaughtFrozenStore());\\n};\\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\\n  this.a = [];\\n};\\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\\n  return arrayFind(store.a, function (it) {\\n    return it[0] === key;\\n  });\\n};\\nUncaughtFrozenStore.prototype = {\\n  get: function get(key) {\\n    var entry = findUncaughtFrozen(this, key);\\n    if (entry) return entry[1];\\n  },\\n  has: function has(key) {\\n    return !!findUncaughtFrozen(this, key);\\n  },\\n  set: function set(key, value) {\\n    var entry = findUncaughtFrozen(this, key);\\n    if (entry) entry[1] = value;else this.a.push([key, value]);\\n  },\\n  'delete': function _delete(key) {\\n    var index = arrayFindIndex(this.a, function (it) {\\n      return it[0] === key;\\n    });\\n    if (~index) this.a.splice(index, 1);\\n    return !!~index;\\n  }\\n};\\nmodule.exports = {\\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\\n    var C = wrapper(function (that, iterable) {\\n      anInstance(that, C, NAME, '_i');\\n      that._t = NAME;\\n      that._i = id++;\\n      that._l = undefined;\\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\\n    });\\n    redefineAll(C.prototype, {\\n      'delete': function _delete(key) {\\n        if (!isObject(key)) return false;\\n        var data = getWeak(key);\\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\\n        return data && $has(data, this._i) && delete data[this._i];\\n      },\\n      has: function has(key) {\\n        if (!isObject(key)) return false;\\n        var data = getWeak(key);\\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\\n        return data && $has(data, this._i);\\n      }\\n    });\\n    return C;\\n  },\\n  def: function def(that, key, value) {\\n    var data = getWeak(anObject(key), true);\\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\\n    return that;\\n  },\\n  ufstore: uncaughtFrozenStore\\n};\\n\\n/***/ }),\\n/* 114 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar global = __w_pdfjs_require__(5);\\nvar $export = __w_pdfjs_require__(6);\\nvar redefine = __w_pdfjs_require__(10);\\nvar redefineAll = __w_pdfjs_require__(38);\\nvar meta = __w_pdfjs_require__(39);\\nvar forOf = __w_pdfjs_require__(25);\\nvar anInstance = __w_pdfjs_require__(36);\\nvar isObject = __w_pdfjs_require__(3);\\nvar fails = __w_pdfjs_require__(14);\\nvar $iterDetect = __w_pdfjs_require__(60);\\nvar setToStringTag = __w_pdfjs_require__(24);\\nvar inheritIfRequired = __w_pdfjs_require__(115);\\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\\n  var Base = global[NAME];\\n  var C = Base;\\n  var ADDER = IS_MAP ? 'set' : 'add';\\n  var proto = C && C.prototype;\\n  var O = {};\\n  var fixMethod = function fixMethod(KEY) {\\n    var fn = proto[KEY];\\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\\n    } : KEY == 'has' ? function has(a) {\\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\\n    } : KEY == 'get' ? function get(a) {\\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\\n    } : KEY == 'add' ? function add(a) {\\n      fn.call(this, a === 0 ? 0 : a);\\n      return this;\\n    } : function set(a, b) {\\n      fn.call(this, a === 0 ? 0 : a, b);\\n      return this;\\n    });\\n  };\\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\\n    new C().entries().next();\\n  }))) {\\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\\n    redefineAll(C.prototype, methods);\\n    meta.NEED = true;\\n  } else {\\n    var instance = new C();\\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\\n    var THROWS_ON_PRIMITIVES = fails(function () {\\n      instance.has(1);\\n    });\\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\\n      new C(iter);\\n    });\\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\\n      var $instance = new C();\\n      var index = 5;\\n      while (index--) {\\n        $instance[ADDER](index, index);\\n      }return !$instance.has(-0);\\n    });\\n    if (!ACCEPT_ITERABLES) {\\n      C = wrapper(function (target, iterable) {\\n        anInstance(target, C, NAME);\\n        var that = inheritIfRequired(new Base(), target, C);\\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\\n        return that;\\n      });\\n      C.prototype = proto;\\n      proto.constructor = C;\\n    }\\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\\n      fixMethod('delete');\\n      fixMethod('has');\\n      IS_MAP && fixMethod('get');\\n    }\\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\\n    if (IS_WEAK && proto.clear) delete proto.clear;\\n  }\\n  setToStringTag(C, NAME);\\n  O[NAME] = C;\\n  $export($export.G + $export.W + $export.F * (C != Base), O);\\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\\n  return C;\\n};\\n\\n/***/ }),\\n/* 115 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nvar setPrototypeOf = __w_pdfjs_require__(116).set;\\nmodule.exports = function (that, target, C) {\\n  var S = target.constructor;\\n  var P;\\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\\n    setPrototypeOf(that, P);\\n  }\\n  return that;\\n};\\n\\n/***/ }),\\n/* 116 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isObject = __w_pdfjs_require__(3);\\nvar anObject = __w_pdfjs_require__(8);\\nvar check = function check(O, proto) {\\n  anObject(O);\\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \\\": can't set as prototype!\\\");\\n};\\nmodule.exports = {\\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\\n    try {\\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(117).f(Object.prototype, '__proto__').set, 2);\\n      set(test, []);\\n      buggy = !(test instanceof Array);\\n    } catch (e) {\\n      buggy = true;\\n    }\\n    return function setPrototypeOf(O, proto) {\\n      check(O, proto);\\n      if (buggy) O.__proto__ = proto;else set(O, proto);\\n      return O;\\n    };\\n  }({}, false) : undefined),\\n  check: check\\n};\\n\\n/***/ }),\\n/* 117 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar pIE = __w_pdfjs_require__(40);\\nvar createDesc = __w_pdfjs_require__(28);\\nvar toIObject = __w_pdfjs_require__(17);\\nvar toPrimitive = __w_pdfjs_require__(46);\\nvar has = __w_pdfjs_require__(9);\\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\\nvar gOPD = Object.getOwnPropertyDescriptor;\\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\\n  O = toIObject(O);\\n  P = toPrimitive(P, true);\\n  if (IE8_DOM_DEFINE) try {\\n    return gOPD(O, P);\\n  } catch (e) {}\\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\\n};\\n\\n/***/ }),\\n/* 118 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(119)('WeakMap');\\n\\n/***/ }),\\n/* 119 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\nmodule.exports = function (COLLECTION) {\\n  $export($export.S, COLLECTION, {\\n    of: function of() {\\n      var length = arguments.length;\\n      var A = new Array(length);\\n      while (length--) {\\n        A[length] = arguments[length];\\n      }return new this(A);\\n    }\\n  });\\n};\\n\\n/***/ }),\\n/* 120 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(121)('WeakMap');\\n\\n/***/ }),\\n/* 121 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\nvar aFunction = __w_pdfjs_require__(16);\\nvar ctx = __w_pdfjs_require__(11);\\nvar forOf = __w_pdfjs_require__(25);\\nmodule.exports = function (COLLECTION) {\\n  $export($export.S, COLLECTION, {\\n    from: function from(source) {\\n      var mapFn = arguments[1];\\n      var mapping, A, n, cb;\\n      aFunction(this);\\n      mapping = mapFn !== undefined;\\n      if (mapping) aFunction(mapFn);\\n      if (source == undefined) return new this();\\n      A = [];\\n      if (mapping) {\\n        n = 0;\\n        cb = ctx(mapFn, arguments[2], 2);\\n        forOf(source, false, function (nextItem) {\\n          A.push(cb(nextItem, n++));\\n        });\\n      } else {\\n        forOf(source, false, A.push, A);\\n      }\\n      return new this(A);\\n    }\\n  });\\n};\\n\\n/***/ }),\\n/* 122 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\n__w_pdfjs_require__(123);\\nmodule.exports = __w_pdfjs_require__(7).Object.values;\\n\\n/***/ }),\\n/* 123 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar $export = __w_pdfjs_require__(6);\\nvar $values = __w_pdfjs_require__(124)(false);\\n$export($export.S, 'Object', {\\n  values: function values(it) {\\n    return $values(it);\\n  }\\n});\\n\\n/***/ }),\\n/* 124 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar getKeys = __w_pdfjs_require__(23);\\nvar toIObject = __w_pdfjs_require__(17);\\nvar isEnum = __w_pdfjs_require__(40).f;\\nmodule.exports = function (isEntries) {\\n  return function (it) {\\n    var O = toIObject(it);\\n    var keys = getKeys(O);\\n    var length = keys.length;\\n    var i = 0;\\n    var result = [];\\n    var key;\\n    while (length > i) {\\n      if (isEnum.call(O, key = keys[i++])) {\\n        result.push(isEntries ? [key, O[key]] : O[key]);\\n      }\\n    }return result;\\n  };\\n};\\n\\n/***/ }),\\n/* 125 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar isReadableStreamSupported = false;\\nif (typeof ReadableStream !== 'undefined') {\\n  try {\\n    new ReadableStream({\\n      start: function start(controller) {\\n        controller.close();\\n      }\\n    });\\n    isReadableStreamSupported = true;\\n  } catch (e) {}\\n}\\nif (isReadableStreamSupported) {\\n  exports.ReadableStream = ReadableStream;\\n} else {\\n  exports.ReadableStream = __w_pdfjs_require__(126).ReadableStream;\\n}\\n\\n/***/ }),\\n/* 126 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\n(function (e, a) {\\n  for (var i in a) {\\n    e[i] = a[i];\\n  }\\n})(exports, function (modules) {\\n  var installedModules = {};\\n  function __w_pdfjs_require__(moduleId) {\\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\\n    var module = installedModules[moduleId] = {\\n      i: moduleId,\\n      l: false,\\n      exports: {}\\n    };\\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\\n    module.l = true;\\n    return module.exports;\\n  }\\n  __w_pdfjs_require__.m = modules;\\n  __w_pdfjs_require__.c = installedModules;\\n  __w_pdfjs_require__.i = function (value) {\\n    return value;\\n  };\\n  __w_pdfjs_require__.d = function (exports, name, getter) {\\n    if (!__w_pdfjs_require__.o(exports, name)) {\\n      Object.defineProperty(exports, name, {\\n        configurable: false,\\n        enumerable: true,\\n        get: getter\\n      });\\n    }\\n  };\\n  __w_pdfjs_require__.n = function (module) {\\n    var getter = module && module.__esModule ? function getDefault() {\\n      return module['default'];\\n    } : function getModuleExports() {\\n      return module;\\n    };\\n    __w_pdfjs_require__.d(getter, 'a', getter);\\n    return getter;\\n  };\\n  __w_pdfjs_require__.o = function (object, property) {\\n    return Object.prototype.hasOwnProperty.call(object, property);\\n  };\\n  __w_pdfjs_require__.p = \\\"\\\";\\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\\n}([function (module, exports, __w_pdfjs_require__) {\\n  \\\"use strict\\\";\\n\\n  var _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\\n  } : function (obj) {\\n    return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\\n  };\\n  var _require = __w_pdfjs_require__(1),\\n      assert = _require.assert;\\n  function IsPropertyKey(argument) {\\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\\n  }\\n  exports.typeIsObject = function (x) {\\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\\n  };\\n  exports.createDataProperty = function (o, p, v) {\\n    assert(exports.typeIsObject(o));\\n    Object.defineProperty(o, p, {\\n      value: v,\\n      writable: true,\\n      enumerable: true,\\n      configurable: true\\n    });\\n  };\\n  exports.createArrayFromList = function (elements) {\\n    return elements.slice();\\n  };\\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\\n  };\\n  exports.CreateIterResultObject = function (value, done) {\\n    assert(typeof done === 'boolean');\\n    var obj = {};\\n    Object.defineProperty(obj, 'value', {\\n      value: value,\\n      enumerable: true,\\n      writable: true,\\n      configurable: true\\n    });\\n    Object.defineProperty(obj, 'done', {\\n      value: done,\\n      enumerable: true,\\n      writable: true,\\n      configurable: true\\n    });\\n    return obj;\\n  };\\n  exports.IsFiniteNonNegativeNumber = function (v) {\\n    if (Number.isNaN(v)) {\\n      return false;\\n    }\\n    if (v === Infinity) {\\n      return false;\\n    }\\n    if (v < 0) {\\n      return false;\\n    }\\n    return true;\\n  };\\n  function Call(F, V, args) {\\n    if (typeof F !== 'function') {\\n      throw new TypeError('Argument is not a function');\\n    }\\n    return Function.prototype.apply.call(F, V, args);\\n  }\\n  exports.InvokeOrNoop = function (O, P, args) {\\n    assert(O !== undefined);\\n    assert(IsPropertyKey(P));\\n    assert(Array.isArray(args));\\n    var method = O[P];\\n    if (method === undefined) {\\n      return undefined;\\n    }\\n    return Call(method, O, args);\\n  };\\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\\n    assert(O !== undefined);\\n    assert(IsPropertyKey(P));\\n    assert(Array.isArray(args));\\n    try {\\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\\n    } catch (returnValueE) {\\n      return Promise.reject(returnValueE);\\n    }\\n  };\\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\\n    assert(O !== undefined);\\n    assert(IsPropertyKey(P));\\n    assert(Array.isArray(args));\\n    assert(Array.isArray(argsF));\\n    var method = void 0;\\n    try {\\n      method = O[P];\\n    } catch (methodE) {\\n      return Promise.reject(methodE);\\n    }\\n    if (method === undefined) {\\n      return F.apply(null, argsF);\\n    }\\n    try {\\n      return Promise.resolve(Call(method, O, args));\\n    } catch (e) {\\n      return Promise.reject(e);\\n    }\\n  };\\n  exports.TransferArrayBuffer = function (O) {\\n    return O.slice();\\n  };\\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\\n    highWaterMark = Number(highWaterMark);\\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\\n    }\\n    return highWaterMark;\\n  };\\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\\n    if (size !== undefined && typeof size !== 'function') {\\n      throw new TypeError('size property of a queuing strategy must be a function');\\n    }\\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\\n    return {\\n      size: size,\\n      highWaterMark: highWaterMark\\n    };\\n  };\\n}, function (module, exports, __w_pdfjs_require__) {\\n  \\\"use strict\\\";\\n\\n  function rethrowAssertionErrorRejection(e) {\\n    if (e && e.constructor === AssertionError) {\\n      setTimeout(function () {\\n        throw e;\\n      }, 0);\\n    }\\n  }\\n  function AssertionError(message) {\\n    this.name = 'AssertionError';\\n    this.message = message || '';\\n    this.stack = new Error().stack;\\n  }\\n  AssertionError.prototype = Object.create(Error.prototype);\\n  AssertionError.prototype.constructor = AssertionError;\\n  function assert(value, message) {\\n    if (!value) {\\n      throw new AssertionError(message);\\n    }\\n  }\\n  module.exports = {\\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\\n    AssertionError: AssertionError,\\n    assert: assert\\n  };\\n}, function (module, exports, __w_pdfjs_require__) {\\n  \\\"use strict\\\";\\n\\n  var _createClass = function () {\\n    function defineProperties(target, props) {\\n      for (var i = 0; i < props.length; i++) {\\n        var descriptor = props[i];\\n        descriptor.enumerable = descriptor.enumerable || false;\\n        descriptor.configurable = true;\\n        if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n        Object.defineProperty(target, descriptor.key, descriptor);\\n      }\\n    }\\n    return function (Constructor, protoProps, staticProps) {\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n      if (staticProps) defineProperties(Constructor, staticProps);\\n      return Constructor;\\n    };\\n  }();\\n  function _classCallCheck(instance, Constructor) {\\n    if (!(instance instanceof Constructor)) {\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\n    }\\n  }\\n  var _require = __w_pdfjs_require__(0),\\n      InvokeOrNoop = _require.InvokeOrNoop,\\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\\n      typeIsObject = _require.typeIsObject;\\n  var _require2 = __w_pdfjs_require__(1),\\n      assert = _require2.assert,\\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\\n  var _require3 = __w_pdfjs_require__(3),\\n      DequeueValue = _require3.DequeueValue,\\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\\n      PeekQueueValue = _require3.PeekQueueValue,\\n      ResetQueue = _require3.ResetQueue;\\n  var WritableStream = function () {\\n    function WritableStream() {\\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\n          size = _ref.size,\\n          _ref$highWaterMark = _ref.highWaterMark,\\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\\n      _classCallCheck(this, WritableStream);\\n      this._state = 'writable';\\n      this._storedError = undefined;\\n      this._writer = undefined;\\n      this._writableStreamController = undefined;\\n      this._writeRequests = [];\\n      this._inFlightWriteRequest = undefined;\\n      this._closeRequest = undefined;\\n      this._inFlightCloseRequest = undefined;\\n      this._pendingAbortRequest = undefined;\\n      this._backpressure = false;\\n      var type = underlyingSink.type;\\n      if (type !== undefined) {\\n        throw new RangeError('Invalid type is specified');\\n      }\\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\\n      this._writableStreamController.__startSteps();\\n    }\\n    _createClass(WritableStream, [{\\n      key: 'abort',\\n      value: function abort(reason) {\\n        if (IsWritableStream(this) === false) {\\n          return Promise.reject(streamBrandCheckException('abort'));\\n        }\\n        if (IsWritableStreamLocked(this) === true) {\\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\\n        }\\n        return WritableStreamAbort(this, reason);\\n      }\\n    }, {\\n      key: 'getWriter',\\n      value: function getWriter() {\\n        if (IsWritableStream(this) === false) {\\n          throw streamBrandCheckException('getWriter');\\n        }\\n        return AcquireWritableStreamDefaultWriter(this);\\n      }\\n    }, {\\n      key: 'locked',\\n      get: function get() {\\n        if (IsWritableStream(this) === false) {\\n          throw streamBrandCheckException('locked');\\n        }\\n        return IsWritableStreamLocked(this);\\n      }\\n    }]);\\n    return WritableStream;\\n  }();\\n  module.exports = {\\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\\n    IsWritableStream: IsWritableStream,\\n    IsWritableStreamLocked: IsWritableStreamLocked,\\n    WritableStream: WritableStream,\\n    WritableStreamAbort: WritableStreamAbort,\\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\\n  };\\n  function AcquireWritableStreamDefaultWriter(stream) {\\n    return new WritableStreamDefaultWriter(stream);\\n  }\\n  function IsWritableStream(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function IsWritableStreamLocked(stream) {\\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\\n    if (stream._writer === undefined) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function WritableStreamAbort(stream, reason) {\\n    var state = stream._state;\\n    if (state === 'closed') {\\n      return Promise.resolve(undefined);\\n    }\\n    if (state === 'errored') {\\n      return Promise.reject(stream._storedError);\\n    }\\n    var error = new TypeError('Requested to abort');\\n    if (stream._pendingAbortRequest !== undefined) {\\n      return Promise.reject(error);\\n    }\\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\\n    var wasAlreadyErroring = false;\\n    if (state === 'erroring') {\\n      wasAlreadyErroring = true;\\n      reason = undefined;\\n    }\\n    var promise = new Promise(function (resolve, reject) {\\n      stream._pendingAbortRequest = {\\n        _resolve: resolve,\\n        _reject: reject,\\n        _reason: reason,\\n        _wasAlreadyErroring: wasAlreadyErroring\\n      };\\n    });\\n    if (wasAlreadyErroring === false) {\\n      WritableStreamStartErroring(stream, error);\\n    }\\n    return promise;\\n  }\\n  function WritableStreamAddWriteRequest(stream) {\\n    assert(IsWritableStreamLocked(stream) === true);\\n    assert(stream._state === 'writable');\\n    var promise = new Promise(function (resolve, reject) {\\n      var writeRequest = {\\n        _resolve: resolve,\\n        _reject: reject\\n      };\\n      stream._writeRequests.push(writeRequest);\\n    });\\n    return promise;\\n  }\\n  function WritableStreamDealWithRejection(stream, error) {\\n    var state = stream._state;\\n    if (state === 'writable') {\\n      WritableStreamStartErroring(stream, error);\\n      return;\\n    }\\n    assert(state === 'erroring');\\n    WritableStreamFinishErroring(stream);\\n  }\\n  function WritableStreamStartErroring(stream, reason) {\\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\\n    assert(stream._state === 'writable', 'state must be writable');\\n    var controller = stream._writableStreamController;\\n    assert(controller !== undefined, 'controller must not be undefined');\\n    stream._state = 'erroring';\\n    stream._storedError = reason;\\n    var writer = stream._writer;\\n    if (writer !== undefined) {\\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\\n    }\\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\\n      WritableStreamFinishErroring(stream);\\n    }\\n  }\\n  function WritableStreamFinishErroring(stream) {\\n    assert(stream._state === 'erroring', 'stream._state === erroring');\\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\\n    stream._state = 'errored';\\n    stream._writableStreamController.__errorSteps();\\n    var storedError = stream._storedError;\\n    for (var i = 0; i < stream._writeRequests.length; i++) {\\n      var writeRequest = stream._writeRequests[i];\\n      writeRequest._reject(storedError);\\n    }\\n    stream._writeRequests = [];\\n    if (stream._pendingAbortRequest === undefined) {\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n      return;\\n    }\\n    var abortRequest = stream._pendingAbortRequest;\\n    stream._pendingAbortRequest = undefined;\\n    if (abortRequest._wasAlreadyErroring === true) {\\n      abortRequest._reject(storedError);\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n      return;\\n    }\\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\\n    promise.then(function () {\\n      abortRequest._resolve();\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n    }, function (reason) {\\n      abortRequest._reject(reason);\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n    });\\n  }\\n  function WritableStreamFinishInFlightWrite(stream) {\\n    assert(stream._inFlightWriteRequest !== undefined);\\n    stream._inFlightWriteRequest._resolve(undefined);\\n    stream._inFlightWriteRequest = undefined;\\n  }\\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\\n    assert(stream._inFlightWriteRequest !== undefined);\\n    stream._inFlightWriteRequest._reject(error);\\n    stream._inFlightWriteRequest = undefined;\\n    assert(stream._state === 'writable' || stream._state === 'erroring');\\n    WritableStreamDealWithRejection(stream, error);\\n  }\\n  function WritableStreamFinishInFlightClose(stream) {\\n    assert(stream._inFlightCloseRequest !== undefined);\\n    stream._inFlightCloseRequest._resolve(undefined);\\n    stream._inFlightCloseRequest = undefined;\\n    var state = stream._state;\\n    assert(state === 'writable' || state === 'erroring');\\n    if (state === 'erroring') {\\n      stream._storedError = undefined;\\n      if (stream._pendingAbortRequest !== undefined) {\\n        stream._pendingAbortRequest._resolve();\\n        stream._pendingAbortRequest = undefined;\\n      }\\n    }\\n    stream._state = 'closed';\\n    var writer = stream._writer;\\n    if (writer !== undefined) {\\n      defaultWriterClosedPromiseResolve(writer);\\n    }\\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\\n  }\\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\\n    assert(stream._inFlightCloseRequest !== undefined);\\n    stream._inFlightCloseRequest._reject(error);\\n    stream._inFlightCloseRequest = undefined;\\n    assert(stream._state === 'writable' || stream._state === 'erroring');\\n    if (stream._pendingAbortRequest !== undefined) {\\n      stream._pendingAbortRequest._reject(error);\\n      stream._pendingAbortRequest = undefined;\\n    }\\n    WritableStreamDealWithRejection(stream, error);\\n  }\\n  function WritableStreamCloseQueuedOrInFlight(stream) {\\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function WritableStreamHasOperationMarkedInFlight(stream) {\\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function WritableStreamMarkCloseRequestInFlight(stream) {\\n    assert(stream._inFlightCloseRequest === undefined);\\n    assert(stream._closeRequest !== undefined);\\n    stream._inFlightCloseRequest = stream._closeRequest;\\n    stream._closeRequest = undefined;\\n  }\\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\\n  }\\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\\\"errored\\\"`');\\n    if (stream._closeRequest !== undefined) {\\n      assert(stream._inFlightCloseRequest === undefined);\\n      stream._closeRequest._reject(stream._storedError);\\n      stream._closeRequest = undefined;\\n    }\\n    var writer = stream._writer;\\n    if (writer !== undefined) {\\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\\n      writer._closedPromise.catch(function () {});\\n    }\\n  }\\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\\n    assert(stream._state === 'writable');\\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\\n    var writer = stream._writer;\\n    if (writer !== undefined && backpressure !== stream._backpressure) {\\n      if (backpressure === true) {\\n        defaultWriterReadyPromiseReset(writer);\\n      } else {\\n        assert(backpressure === false);\\n        defaultWriterReadyPromiseResolve(writer);\\n      }\\n    }\\n    stream._backpressure = backpressure;\\n  }\\n  var WritableStreamDefaultWriter = function () {\\n    function WritableStreamDefaultWriter(stream) {\\n      _classCallCheck(this, WritableStreamDefaultWriter);\\n      if (IsWritableStream(stream) === false) {\\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\\n      }\\n      if (IsWritableStreamLocked(stream) === true) {\\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\\n      }\\n      this._ownerWritableStream = stream;\\n      stream._writer = this;\\n      var state = stream._state;\\n      if (state === 'writable') {\\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\\n          defaultWriterReadyPromiseInitialize(this);\\n        } else {\\n          defaultWriterReadyPromiseInitializeAsResolved(this);\\n        }\\n        defaultWriterClosedPromiseInitialize(this);\\n      } else if (state === 'erroring') {\\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\\n        this._readyPromise.catch(function () {});\\n        defaultWriterClosedPromiseInitialize(this);\\n      } else if (state === 'closed') {\\n        defaultWriterReadyPromiseInitializeAsResolved(this);\\n        defaultWriterClosedPromiseInitializeAsResolved(this);\\n      } else {\\n        assert(state === 'errored', 'state must be errored');\\n        var storedError = stream._storedError;\\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\\n        this._readyPromise.catch(function () {});\\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\\n        this._closedPromise.catch(function () {});\\n      }\\n    }\\n    _createClass(WritableStreamDefaultWriter, [{\\n      key: 'abort',\\n      value: function abort(reason) {\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\\n        }\\n        if (this._ownerWritableStream === undefined) {\\n          return Promise.reject(defaultWriterLockException('abort'));\\n        }\\n        return WritableStreamDefaultWriterAbort(this, reason);\\n      }\\n    }, {\\n      key: 'close',\\n      value: function close() {\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\n          return Promise.reject(defaultWriterBrandCheckException('close'));\\n        }\\n        var stream = this._ownerWritableStream;\\n        if (stream === undefined) {\\n          return Promise.reject(defaultWriterLockException('close'));\\n        }\\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\\n        }\\n        return WritableStreamDefaultWriterClose(this);\\n      }\\n    }, {\\n      key: 'releaseLock',\\n      value: function releaseLock() {\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\n          throw defaultWriterBrandCheckException('releaseLock');\\n        }\\n        var stream = this._ownerWritableStream;\\n        if (stream === undefined) {\\n          return;\\n        }\\n        assert(stream._writer !== undefined);\\n        WritableStreamDefaultWriterRelease(this);\\n      }\\n    }, {\\n      key: 'write',\\n      value: function write(chunk) {\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\n          return Promise.reject(defaultWriterBrandCheckException('write'));\\n        }\\n        if (this._ownerWritableStream === undefined) {\\n          return Promise.reject(defaultWriterLockException('write to'));\\n        }\\n        return WritableStreamDefaultWriterWrite(this, chunk);\\n      }\\n    }, {\\n      key: 'closed',\\n      get: function get() {\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\\n        }\\n        return this._closedPromise;\\n      }\\n    }, {\\n      key: 'desiredSize',\\n      get: function get() {\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\n          throw defaultWriterBrandCheckException('desiredSize');\\n        }\\n        if (this._ownerWritableStream === undefined) {\\n          throw defaultWriterLockException('desiredSize');\\n        }\\n        return WritableStreamDefaultWriterGetDesiredSize(this);\\n      }\\n    }, {\\n      key: 'ready',\\n      get: function get() {\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\\n        }\\n        return this._readyPromise;\\n      }\\n    }]);\\n    return WritableStreamDefaultWriter;\\n  }();\\n  function IsWritableStreamDefaultWriter(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function WritableStreamDefaultWriterAbort(writer, reason) {\\n    var stream = writer._ownerWritableStream;\\n    assert(stream !== undefined);\\n    return WritableStreamAbort(stream, reason);\\n  }\\n  function WritableStreamDefaultWriterClose(writer) {\\n    var stream = writer._ownerWritableStream;\\n    assert(stream !== undefined);\\n    var state = stream._state;\\n    if (state === 'closed' || state === 'errored') {\\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\\n    }\\n    assert(state === 'writable' || state === 'erroring');\\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\\n    var promise = new Promise(function (resolve, reject) {\\n      var closeRequest = {\\n        _resolve: resolve,\\n        _reject: reject\\n      };\\n      stream._closeRequest = closeRequest;\\n    });\\n    if (stream._backpressure === true && state === 'writable') {\\n      defaultWriterReadyPromiseResolve(writer);\\n    }\\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\\n    return promise;\\n  }\\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\\n    var stream = writer._ownerWritableStream;\\n    assert(stream !== undefined);\\n    var state = stream._state;\\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\\n      return Promise.resolve();\\n    }\\n    if (state === 'errored') {\\n      return Promise.reject(stream._storedError);\\n    }\\n    assert(state === 'writable' || state === 'erroring');\\n    return WritableStreamDefaultWriterClose(writer);\\n  }\\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\\n    if (writer._closedPromiseState === 'pending') {\\n      defaultWriterClosedPromiseReject(writer, error);\\n    } else {\\n      defaultWriterClosedPromiseResetToRejected(writer, error);\\n    }\\n    writer._closedPromise.catch(function () {});\\n  }\\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\\n    if (writer._readyPromiseState === 'pending') {\\n      defaultWriterReadyPromiseReject(writer, error);\\n    } else {\\n      defaultWriterReadyPromiseResetToRejected(writer, error);\\n    }\\n    writer._readyPromise.catch(function () {});\\n  }\\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\\n    var stream = writer._ownerWritableStream;\\n    var state = stream._state;\\n    if (state === 'errored' || state === 'erroring') {\\n      return null;\\n    }\\n    if (state === 'closed') {\\n      return 0;\\n    }\\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\\n  }\\n  function WritableStreamDefaultWriterRelease(writer) {\\n    var stream = writer._ownerWritableStream;\\n    assert(stream !== undefined);\\n    assert(stream._writer === writer);\\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\\\'s closedness');\\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\\n    stream._writer = undefined;\\n    writer._ownerWritableStream = undefined;\\n  }\\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\\n    var stream = writer._ownerWritableStream;\\n    assert(stream !== undefined);\\n    var controller = stream._writableStreamController;\\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\\n    if (stream !== writer._ownerWritableStream) {\\n      return Promise.reject(defaultWriterLockException('write to'));\\n    }\\n    var state = stream._state;\\n    if (state === 'errored') {\\n      return Promise.reject(stream._storedError);\\n    }\\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\\n    }\\n    if (state === 'erroring') {\\n      return Promise.reject(stream._storedError);\\n    }\\n    assert(state === 'writable');\\n    var promise = WritableStreamAddWriteRequest(stream);\\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\\n    return promise;\\n  }\\n  var WritableStreamDefaultController = function () {\\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\\n      _classCallCheck(this, WritableStreamDefaultController);\\n      if (IsWritableStream(stream) === false) {\\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\\n      }\\n      if (stream._writableStreamController !== undefined) {\\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\\n      }\\n      this._controlledWritableStream = stream;\\n      this._underlyingSink = underlyingSink;\\n      this._queue = undefined;\\n      this._queueTotalSize = undefined;\\n      ResetQueue(this);\\n      this._started = false;\\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\\n      this._strategySize = normalizedStrategy.size;\\n      this._strategyHWM = normalizedStrategy.highWaterMark;\\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\\n      WritableStreamUpdateBackpressure(stream, backpressure);\\n    }\\n    _createClass(WritableStreamDefaultController, [{\\n      key: 'error',\\n      value: function error(e) {\\n        if (IsWritableStreamDefaultController(this) === false) {\\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\\n        }\\n        var state = this._controlledWritableStream._state;\\n        if (state !== 'writable') {\\n          return;\\n        }\\n        WritableStreamDefaultControllerError(this, e);\\n      }\\n    }, {\\n      key: '__abortSteps',\\n      value: function __abortSteps(reason) {\\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\\n      }\\n    }, {\\n      key: '__errorSteps',\\n      value: function __errorSteps() {\\n        ResetQueue(this);\\n      }\\n    }, {\\n      key: '__startSteps',\\n      value: function __startSteps() {\\n        var _this = this;\\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\\n        var stream = this._controlledWritableStream;\\n        Promise.resolve(startResult).then(function () {\\n          assert(stream._state === 'writable' || stream._state === 'erroring');\\n          _this._started = true;\\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\\n        }, function (r) {\\n          assert(stream._state === 'writable' || stream._state === 'erroring');\\n          _this._started = true;\\n          WritableStreamDealWithRejection(stream, r);\\n        }).catch(rethrowAssertionErrorRejection);\\n      }\\n    }]);\\n    return WritableStreamDefaultController;\\n  }();\\n  function WritableStreamDefaultControllerClose(controller) {\\n    EnqueueValueWithSize(controller, 'close', 0);\\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\n  }\\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\\n    var strategySize = controller._strategySize;\\n    if (strategySize === undefined) {\\n      return 1;\\n    }\\n    try {\\n      return strategySize(chunk);\\n    } catch (chunkSizeE) {\\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\\n      return 1;\\n    }\\n  }\\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\\n    return controller._strategyHWM - controller._queueTotalSize;\\n  }\\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\\n    var writeRecord = { chunk: chunk };\\n    try {\\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\\n    } catch (enqueueE) {\\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\\n      return;\\n    }\\n    var stream = controller._controlledWritableStream;\\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\\n      WritableStreamUpdateBackpressure(stream, backpressure);\\n    }\\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\n  }\\n  function IsWritableStreamDefaultController(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\\n    var stream = controller._controlledWritableStream;\\n    if (controller._started === false) {\\n      return;\\n    }\\n    if (stream._inFlightWriteRequest !== undefined) {\\n      return;\\n    }\\n    var state = stream._state;\\n    if (state === 'closed' || state === 'errored') {\\n      return;\\n    }\\n    if (state === 'erroring') {\\n      WritableStreamFinishErroring(stream);\\n      return;\\n    }\\n    if (controller._queue.length === 0) {\\n      return;\\n    }\\n    var writeRecord = PeekQueueValue(controller);\\n    if (writeRecord === 'close') {\\n      WritableStreamDefaultControllerProcessClose(controller);\\n    } else {\\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\\n    }\\n  }\\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\\n    if (controller._controlledWritableStream._state === 'writable') {\\n      WritableStreamDefaultControllerError(controller, error);\\n    }\\n  }\\n  function WritableStreamDefaultControllerProcessClose(controller) {\\n    var stream = controller._controlledWritableStream;\\n    WritableStreamMarkCloseRequestInFlight(stream);\\n    DequeueValue(controller);\\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\\n    sinkClosePromise.then(function () {\\n      WritableStreamFinishInFlightClose(stream);\\n    }, function (reason) {\\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\\n    }).catch(rethrowAssertionErrorRejection);\\n  }\\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\\n    var stream = controller._controlledWritableStream;\\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\\n    sinkWritePromise.then(function () {\\n      WritableStreamFinishInFlightWrite(stream);\\n      var state = stream._state;\\n      assert(state === 'writable' || state === 'erroring');\\n      DequeueValue(controller);\\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\\n        WritableStreamUpdateBackpressure(stream, backpressure);\\n      }\\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\n    }, function (reason) {\\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\\n    }).catch(rethrowAssertionErrorRejection);\\n  }\\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\\n    return desiredSize <= 0;\\n  }\\n  function WritableStreamDefaultControllerError(controller, error) {\\n    var stream = controller._controlledWritableStream;\\n    assert(stream._state === 'writable');\\n    WritableStreamStartErroring(stream, error);\\n  }\\n  function streamBrandCheckException(name) {\\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\\n  }\\n  function defaultWriterBrandCheckException(name) {\\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\\n  }\\n  function defaultWriterLockException(name) {\\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\\n  }\\n  function defaultWriterClosedPromiseInitialize(writer) {\\n    writer._closedPromise = new Promise(function (resolve, reject) {\\n      writer._closedPromise_resolve = resolve;\\n      writer._closedPromise_reject = reject;\\n      writer._closedPromiseState = 'pending';\\n    });\\n  }\\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\\n    writer._closedPromise = Promise.reject(reason);\\n    writer._closedPromise_resolve = undefined;\\n    writer._closedPromise_reject = undefined;\\n    writer._closedPromiseState = 'rejected';\\n  }\\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\\n    writer._closedPromise = Promise.resolve(undefined);\\n    writer._closedPromise_resolve = undefined;\\n    writer._closedPromise_reject = undefined;\\n    writer._closedPromiseState = 'resolved';\\n  }\\n  function defaultWriterClosedPromiseReject(writer, reason) {\\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\\n    writer._closedPromise_reject(reason);\\n    writer._closedPromise_resolve = undefined;\\n    writer._closedPromise_reject = undefined;\\n    writer._closedPromiseState = 'rejected';\\n  }\\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\\n    writer._closedPromise = Promise.reject(reason);\\n    writer._closedPromiseState = 'rejected';\\n  }\\n  function defaultWriterClosedPromiseResolve(writer) {\\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\\n    writer._closedPromise_resolve(undefined);\\n    writer._closedPromise_resolve = undefined;\\n    writer._closedPromise_reject = undefined;\\n    writer._closedPromiseState = 'resolved';\\n  }\\n  function defaultWriterReadyPromiseInitialize(writer) {\\n    writer._readyPromise = new Promise(function (resolve, reject) {\\n      writer._readyPromise_resolve = resolve;\\n      writer._readyPromise_reject = reject;\\n    });\\n    writer._readyPromiseState = 'pending';\\n  }\\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\\n    writer._readyPromise = Promise.reject(reason);\\n    writer._readyPromise_resolve = undefined;\\n    writer._readyPromise_reject = undefined;\\n    writer._readyPromiseState = 'rejected';\\n  }\\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\\n    writer._readyPromise = Promise.resolve(undefined);\\n    writer._readyPromise_resolve = undefined;\\n    writer._readyPromise_reject = undefined;\\n    writer._readyPromiseState = 'fulfilled';\\n  }\\n  function defaultWriterReadyPromiseReject(writer, reason) {\\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\\n    writer._readyPromise_reject(reason);\\n    writer._readyPromise_resolve = undefined;\\n    writer._readyPromise_reject = undefined;\\n    writer._readyPromiseState = 'rejected';\\n  }\\n  function defaultWriterReadyPromiseReset(writer) {\\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\\n    writer._readyPromise = new Promise(function (resolve, reject) {\\n      writer._readyPromise_resolve = resolve;\\n      writer._readyPromise_reject = reject;\\n    });\\n    writer._readyPromiseState = 'pending';\\n  }\\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\\n    writer._readyPromise = Promise.reject(reason);\\n    writer._readyPromiseState = 'rejected';\\n  }\\n  function defaultWriterReadyPromiseResolve(writer) {\\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\\n    writer._readyPromise_resolve(undefined);\\n    writer._readyPromise_resolve = undefined;\\n    writer._readyPromise_reject = undefined;\\n    writer._readyPromiseState = 'fulfilled';\\n  }\\n}, function (module, exports, __w_pdfjs_require__) {\\n  \\\"use strict\\\";\\n\\n  var _require = __w_pdfjs_require__(0),\\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\\n  var _require2 = __w_pdfjs_require__(1),\\n      assert = _require2.assert;\\n  exports.DequeueValue = function (container) {\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\\n    var pair = container._queue.shift();\\n    container._queueTotalSize -= pair.size;\\n    if (container._queueTotalSize < 0) {\\n      container._queueTotalSize = 0;\\n    }\\n    return pair.value;\\n  };\\n  exports.EnqueueValueWithSize = function (container, value, size) {\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\\n    size = Number(size);\\n    if (!IsFiniteNonNegativeNumber(size)) {\\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\\n    }\\n    container._queue.push({\\n      value: value,\\n      size: size\\n    });\\n    container._queueTotalSize += size;\\n  };\\n  exports.PeekQueueValue = function (container) {\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\\n    var pair = container._queue[0];\\n    return pair.value;\\n  };\\n  exports.ResetQueue = function (container) {\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\n    container._queue = [];\\n    container._queueTotalSize = 0;\\n  };\\n}, function (module, exports, __w_pdfjs_require__) {\\n  \\\"use strict\\\";\\n\\n  var _createClass = function () {\\n    function defineProperties(target, props) {\\n      for (var i = 0; i < props.length; i++) {\\n        var descriptor = props[i];\\n        descriptor.enumerable = descriptor.enumerable || false;\\n        descriptor.configurable = true;\\n        if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n        Object.defineProperty(target, descriptor.key, descriptor);\\n      }\\n    }\\n    return function (Constructor, protoProps, staticProps) {\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n      if (staticProps) defineProperties(Constructor, staticProps);\\n      return Constructor;\\n    };\\n  }();\\n  function _classCallCheck(instance, Constructor) {\\n    if (!(instance instanceof Constructor)) {\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\n    }\\n  }\\n  var _require = __w_pdfjs_require__(0),\\n      ArrayBufferCopy = _require.ArrayBufferCopy,\\n      CreateIterResultObject = _require.CreateIterResultObject,\\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\\n      InvokeOrNoop = _require.InvokeOrNoop,\\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\\n      TransferArrayBuffer = _require.TransferArrayBuffer,\\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\\n  var _require2 = __w_pdfjs_require__(0),\\n      createArrayFromList = _require2.createArrayFromList,\\n      createDataProperty = _require2.createDataProperty,\\n      typeIsObject = _require2.typeIsObject;\\n  var _require3 = __w_pdfjs_require__(1),\\n      assert = _require3.assert,\\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\\n  var _require4 = __w_pdfjs_require__(3),\\n      DequeueValue = _require4.DequeueValue,\\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\\n      ResetQueue = _require4.ResetQueue;\\n  var _require5 = __w_pdfjs_require__(2),\\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\\n      IsWritableStream = _require5.IsWritableStream,\\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\\n      WritableStreamAbort = _require5.WritableStreamAbort,\\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\\n  var ReadableStream = function () {\\n    function ReadableStream() {\\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\n          size = _ref.size,\\n          highWaterMark = _ref.highWaterMark;\\n      _classCallCheck(this, ReadableStream);\\n      this._state = 'readable';\\n      this._reader = undefined;\\n      this._storedError = undefined;\\n      this._disturbed = false;\\n      this._readableStreamController = undefined;\\n      var type = underlyingSource.type;\\n      var typeString = String(type);\\n      if (typeString === 'bytes') {\\n        if (highWaterMark === undefined) {\\n          highWaterMark = 0;\\n        }\\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\\n      } else if (type === undefined) {\\n        if (highWaterMark === undefined) {\\n          highWaterMark = 1;\\n        }\\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\\n      } else {\\n        throw new RangeError('Invalid type is specified');\\n      }\\n    }\\n    _createClass(ReadableStream, [{\\n      key: 'cancel',\\n      value: function cancel(reason) {\\n        if (IsReadableStream(this) === false) {\\n          return Promise.reject(streamBrandCheckException('cancel'));\\n        }\\n        if (IsReadableStreamLocked(this) === true) {\\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\\n        }\\n        return ReadableStreamCancel(this, reason);\\n      }\\n    }, {\\n      key: 'getReader',\\n      value: function getReader() {\\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n            mode = _ref2.mode;\\n        if (IsReadableStream(this) === false) {\\n          throw streamBrandCheckException('getReader');\\n        }\\n        if (mode === undefined) {\\n          return AcquireReadableStreamDefaultReader(this);\\n        }\\n        mode = String(mode);\\n        if (mode === 'byob') {\\n          return AcquireReadableStreamBYOBReader(this);\\n        }\\n        throw new RangeError('Invalid mode is specified');\\n      }\\n    }, {\\n      key: 'pipeThrough',\\n      value: function pipeThrough(_ref3, options) {\\n        var writable = _ref3.writable,\\n            readable = _ref3.readable;\\n        var promise = this.pipeTo(writable, options);\\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\\n        return readable;\\n      }\\n    }, {\\n      key: 'pipeTo',\\n      value: function pipeTo(dest) {\\n        var _this = this;\\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\n            preventClose = _ref4.preventClose,\\n            preventAbort = _ref4.preventAbort,\\n            preventCancel = _ref4.preventCancel;\\n        if (IsReadableStream(this) === false) {\\n          return Promise.reject(streamBrandCheckException('pipeTo'));\\n        }\\n        if (IsWritableStream(dest) === false) {\\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\\\'s first argument must be a WritableStream'));\\n        }\\n        preventClose = Boolean(preventClose);\\n        preventAbort = Boolean(preventAbort);\\n        preventCancel = Boolean(preventCancel);\\n        if (IsReadableStreamLocked(this) === true) {\\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\\n        }\\n        if (IsWritableStreamLocked(dest) === true) {\\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\\n        }\\n        var reader = AcquireReadableStreamDefaultReader(this);\\n        var writer = AcquireWritableStreamDefaultWriter(dest);\\n        var shuttingDown = false;\\n        var currentWrite = Promise.resolve();\\n        return new Promise(function (resolve, reject) {\\n          function pipeLoop() {\\n            currentWrite = Promise.resolve();\\n            if (shuttingDown === true) {\\n              return Promise.resolve();\\n            }\\n            return writer._readyPromise.then(function () {\\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\\n                var value = _ref5.value,\\n                    done = _ref5.done;\\n                if (done === true) {\\n                  return;\\n                }\\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\\n              });\\n            }).then(pipeLoop);\\n          }\\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\\n            if (preventAbort === false) {\\n              shutdownWithAction(function () {\\n                return WritableStreamAbort(dest, storedError);\\n              }, true, storedError);\\n            } else {\\n              shutdown(true, storedError);\\n            }\\n          });\\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\\n            if (preventCancel === false) {\\n              shutdownWithAction(function () {\\n                return ReadableStreamCancel(_this, storedError);\\n              }, true, storedError);\\n            } else {\\n              shutdown(true, storedError);\\n            }\\n          });\\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\\n            if (preventClose === false) {\\n              shutdownWithAction(function () {\\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\\n              });\\n            } else {\\n              shutdown();\\n            }\\n          });\\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\\n            if (preventCancel === false) {\\n              shutdownWithAction(function () {\\n                return ReadableStreamCancel(_this, destClosed);\\n              }, true, destClosed);\\n            } else {\\n              shutdown(true, destClosed);\\n            }\\n          }\\n          pipeLoop().catch(function (err) {\\n            currentWrite = Promise.resolve();\\n            rethrowAssertionErrorRejection(err);\\n          });\\n          function waitForWritesToFinish() {\\n            var oldCurrentWrite = currentWrite;\\n            return currentWrite.then(function () {\\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\\n            });\\n          }\\n          function isOrBecomesErrored(stream, promise, action) {\\n            if (stream._state === 'errored') {\\n              action(stream._storedError);\\n            } else {\\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\\n            }\\n          }\\n          function isOrBecomesClosed(stream, promise, action) {\\n            if (stream._state === 'closed') {\\n              action();\\n            } else {\\n              promise.then(action).catch(rethrowAssertionErrorRejection);\\n            }\\n          }\\n          function shutdownWithAction(action, originalIsError, originalError) {\\n            if (shuttingDown === true) {\\n              return;\\n            }\\n            shuttingDown = true;\\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\\n              waitForWritesToFinish().then(doTheRest);\\n            } else {\\n              doTheRest();\\n            }\\n            function doTheRest() {\\n              action().then(function () {\\n                return finalize(originalIsError, originalError);\\n              }, function (newError) {\\n                return finalize(true, newError);\\n              }).catch(rethrowAssertionErrorRejection);\\n            }\\n          }\\n          function shutdown(isError, error) {\\n            if (shuttingDown === true) {\\n              return;\\n            }\\n            shuttingDown = true;\\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\\n              waitForWritesToFinish().then(function () {\\n                return finalize(isError, error);\\n              }).catch(rethrowAssertionErrorRejection);\\n            } else {\\n              finalize(isError, error);\\n            }\\n          }\\n          function finalize(isError, error) {\\n            WritableStreamDefaultWriterRelease(writer);\\n            ReadableStreamReaderGenericRelease(reader);\\n            if (isError) {\\n              reject(error);\\n            } else {\\n              resolve(undefined);\\n            }\\n          }\\n        });\\n      }\\n    }, {\\n      key: 'tee',\\n      value: function tee() {\\n        if (IsReadableStream(this) === false) {\\n          throw streamBrandCheckException('tee');\\n        }\\n        var branches = ReadableStreamTee(this, false);\\n        return createArrayFromList(branches);\\n      }\\n    }, {\\n      key: 'locked',\\n      get: function get() {\\n        if (IsReadableStream(this) === false) {\\n          throw streamBrandCheckException('locked');\\n        }\\n        return IsReadableStreamLocked(this);\\n      }\\n    }]);\\n    return ReadableStream;\\n  }();\\n  module.exports = {\\n    ReadableStream: ReadableStream,\\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\\n  };\\n  function AcquireReadableStreamBYOBReader(stream) {\\n    return new ReadableStreamBYOBReader(stream);\\n  }\\n  function AcquireReadableStreamDefaultReader(stream) {\\n    return new ReadableStreamDefaultReader(stream);\\n  }\\n  function IsReadableStream(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function IsReadableStreamDisturbed(stream) {\\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\\n    return stream._disturbed;\\n  }\\n  function IsReadableStreamLocked(stream) {\\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\\n    if (stream._reader === undefined) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function ReadableStreamTee(stream, cloneForBranch2) {\\n    assert(IsReadableStream(stream) === true);\\n    assert(typeof cloneForBranch2 === 'boolean');\\n    var reader = AcquireReadableStreamDefaultReader(stream);\\n    var teeState = {\\n      closedOrErrored: false,\\n      canceled1: false,\\n      canceled2: false,\\n      reason1: undefined,\\n      reason2: undefined\\n    };\\n    teeState.promise = new Promise(function (resolve) {\\n      teeState._resolve = resolve;\\n    });\\n    var pull = create_ReadableStreamTeePullFunction();\\n    pull._reader = reader;\\n    pull._teeState = teeState;\\n    pull._cloneForBranch2 = cloneForBranch2;\\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\\n    cancel1._stream = stream;\\n    cancel1._teeState = teeState;\\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\\n    cancel2._stream = stream;\\n    cancel2._teeState = teeState;\\n    var underlyingSource1 = Object.create(Object.prototype);\\n    createDataProperty(underlyingSource1, 'pull', pull);\\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\\n    var branch1Stream = new ReadableStream(underlyingSource1);\\n    var underlyingSource2 = Object.create(Object.prototype);\\n    createDataProperty(underlyingSource2, 'pull', pull);\\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\\n    var branch2Stream = new ReadableStream(underlyingSource2);\\n    pull._branch1 = branch1Stream._readableStreamController;\\n    pull._branch2 = branch2Stream._readableStreamController;\\n    reader._closedPromise.catch(function (r) {\\n      if (teeState.closedOrErrored === true) {\\n        return;\\n      }\\n      ReadableStreamDefaultControllerError(pull._branch1, r);\\n      ReadableStreamDefaultControllerError(pull._branch2, r);\\n      teeState.closedOrErrored = true;\\n    });\\n    return [branch1Stream, branch2Stream];\\n  }\\n  function create_ReadableStreamTeePullFunction() {\\n    function f() {\\n      var reader = f._reader,\\n          branch1 = f._branch1,\\n          branch2 = f._branch2,\\n          teeState = f._teeState;\\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\\n        assert(typeIsObject(result));\\n        var value = result.value;\\n        var done = result.done;\\n        assert(typeof done === 'boolean');\\n        if (done === true && teeState.closedOrErrored === false) {\\n          if (teeState.canceled1 === false) {\\n            ReadableStreamDefaultControllerClose(branch1);\\n          }\\n          if (teeState.canceled2 === false) {\\n            ReadableStreamDefaultControllerClose(branch2);\\n          }\\n          teeState.closedOrErrored = true;\\n        }\\n        if (teeState.closedOrErrored === true) {\\n          return;\\n        }\\n        var value1 = value;\\n        var value2 = value;\\n        if (teeState.canceled1 === false) {\\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\\n        }\\n        if (teeState.canceled2 === false) {\\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\\n        }\\n      });\\n    }\\n    return f;\\n  }\\n  function create_ReadableStreamTeeBranch1CancelFunction() {\\n    function f(reason) {\\n      var stream = f._stream,\\n          teeState = f._teeState;\\n      teeState.canceled1 = true;\\n      teeState.reason1 = reason;\\n      if (teeState.canceled2 === true) {\\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\\n        teeState._resolve(cancelResult);\\n      }\\n      return teeState.promise;\\n    }\\n    return f;\\n  }\\n  function create_ReadableStreamTeeBranch2CancelFunction() {\\n    function f(reason) {\\n      var stream = f._stream,\\n          teeState = f._teeState;\\n      teeState.canceled2 = true;\\n      teeState.reason2 = reason;\\n      if (teeState.canceled1 === true) {\\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\\n        teeState._resolve(cancelResult);\\n      }\\n      return teeState.promise;\\n    }\\n    return f;\\n  }\\n  function ReadableStreamAddReadIntoRequest(stream) {\\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\\n    assert(stream._state === 'readable' || stream._state === 'closed');\\n    var promise = new Promise(function (resolve, reject) {\\n      var readIntoRequest = {\\n        _resolve: resolve,\\n        _reject: reject\\n      };\\n      stream._reader._readIntoRequests.push(readIntoRequest);\\n    });\\n    return promise;\\n  }\\n  function ReadableStreamAddReadRequest(stream) {\\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\\n    assert(stream._state === 'readable');\\n    var promise = new Promise(function (resolve, reject) {\\n      var readRequest = {\\n        _resolve: resolve,\\n        _reject: reject\\n      };\\n      stream._reader._readRequests.push(readRequest);\\n    });\\n    return promise;\\n  }\\n  function ReadableStreamCancel(stream, reason) {\\n    stream._disturbed = true;\\n    if (stream._state === 'closed') {\\n      return Promise.resolve(undefined);\\n    }\\n    if (stream._state === 'errored') {\\n      return Promise.reject(stream._storedError);\\n    }\\n    ReadableStreamClose(stream);\\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\\n    return sourceCancelPromise.then(function () {\\n      return undefined;\\n    });\\n  }\\n  function ReadableStreamClose(stream) {\\n    assert(stream._state === 'readable');\\n    stream._state = 'closed';\\n    var reader = stream._reader;\\n    if (reader === undefined) {\\n      return undefined;\\n    }\\n    if (IsReadableStreamDefaultReader(reader) === true) {\\n      for (var i = 0; i < reader._readRequests.length; i++) {\\n        var _resolve = reader._readRequests[i]._resolve;\\n        _resolve(CreateIterResultObject(undefined, true));\\n      }\\n      reader._readRequests = [];\\n    }\\n    defaultReaderClosedPromiseResolve(reader);\\n    return undefined;\\n  }\\n  function ReadableStreamError(stream, e) {\\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\\n    assert(stream._state === 'readable', 'state must be readable');\\n    stream._state = 'errored';\\n    stream._storedError = e;\\n    var reader = stream._reader;\\n    if (reader === undefined) {\\n      return undefined;\\n    }\\n    if (IsReadableStreamDefaultReader(reader) === true) {\\n      for (var i = 0; i < reader._readRequests.length; i++) {\\n        var readRequest = reader._readRequests[i];\\n        readRequest._reject(e);\\n      }\\n      reader._readRequests = [];\\n    } else {\\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\\n        var readIntoRequest = reader._readIntoRequests[_i];\\n        readIntoRequest._reject(e);\\n      }\\n      reader._readIntoRequests = [];\\n    }\\n    defaultReaderClosedPromiseReject(reader, e);\\n    reader._closedPromise.catch(function () {});\\n  }\\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\\n    var reader = stream._reader;\\n    assert(reader._readIntoRequests.length > 0);\\n    var readIntoRequest = reader._readIntoRequests.shift();\\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\\n  }\\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\\n    var reader = stream._reader;\\n    assert(reader._readRequests.length > 0);\\n    var readRequest = reader._readRequests.shift();\\n    readRequest._resolve(CreateIterResultObject(chunk, done));\\n  }\\n  function ReadableStreamGetNumReadIntoRequests(stream) {\\n    return stream._reader._readIntoRequests.length;\\n  }\\n  function ReadableStreamGetNumReadRequests(stream) {\\n    return stream._reader._readRequests.length;\\n  }\\n  function ReadableStreamHasBYOBReader(stream) {\\n    var reader = stream._reader;\\n    if (reader === undefined) {\\n      return false;\\n    }\\n    if (IsReadableStreamBYOBReader(reader) === false) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function ReadableStreamHasDefaultReader(stream) {\\n    var reader = stream._reader;\\n    if (reader === undefined) {\\n      return false;\\n    }\\n    if (IsReadableStreamDefaultReader(reader) === false) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  var ReadableStreamDefaultReader = function () {\\n    function ReadableStreamDefaultReader(stream) {\\n      _classCallCheck(this, ReadableStreamDefaultReader);\\n      if (IsReadableStream(stream) === false) {\\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\\n      }\\n      if (IsReadableStreamLocked(stream) === true) {\\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\\n      }\\n      ReadableStreamReaderGenericInitialize(this, stream);\\n      this._readRequests = [];\\n    }\\n    _createClass(ReadableStreamDefaultReader, [{\\n      key: 'cancel',\\n      value: function cancel(reason) {\\n        if (IsReadableStreamDefaultReader(this) === false) {\\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\\n        }\\n        if (this._ownerReadableStream === undefined) {\\n          return Promise.reject(readerLockException('cancel'));\\n        }\\n        return ReadableStreamReaderGenericCancel(this, reason);\\n      }\\n    }, {\\n      key: 'read',\\n      value: function read() {\\n        if (IsReadableStreamDefaultReader(this) === false) {\\n          return Promise.reject(defaultReaderBrandCheckException('read'));\\n        }\\n        if (this._ownerReadableStream === undefined) {\\n          return Promise.reject(readerLockException('read from'));\\n        }\\n        return ReadableStreamDefaultReaderRead(this);\\n      }\\n    }, {\\n      key: 'releaseLock',\\n      value: function releaseLock() {\\n        if (IsReadableStreamDefaultReader(this) === false) {\\n          throw defaultReaderBrandCheckException('releaseLock');\\n        }\\n        if (this._ownerReadableStream === undefined) {\\n          return;\\n        }\\n        if (this._readRequests.length > 0) {\\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\\n        }\\n        ReadableStreamReaderGenericRelease(this);\\n      }\\n    }, {\\n      key: 'closed',\\n      get: function get() {\\n        if (IsReadableStreamDefaultReader(this) === false) {\\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\\n        }\\n        return this._closedPromise;\\n      }\\n    }]);\\n    return ReadableStreamDefaultReader;\\n  }();\\n  var ReadableStreamBYOBReader = function () {\\n    function ReadableStreamBYOBReader(stream) {\\n      _classCallCheck(this, ReadableStreamBYOBReader);\\n      if (!IsReadableStream(stream)) {\\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\\n      }\\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\\n      }\\n      if (IsReadableStreamLocked(stream)) {\\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\\n      }\\n      ReadableStreamReaderGenericInitialize(this, stream);\\n      this._readIntoRequests = [];\\n    }\\n    _createClass(ReadableStreamBYOBReader, [{\\n      key: 'cancel',\\n      value: function cancel(reason) {\\n        if (!IsReadableStreamBYOBReader(this)) {\\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\\n        }\\n        if (this._ownerReadableStream === undefined) {\\n          return Promise.reject(readerLockException('cancel'));\\n        }\\n        return ReadableStreamReaderGenericCancel(this, reason);\\n      }\\n    }, {\\n      key: 'read',\\n      value: function read(view) {\\n        if (!IsReadableStreamBYOBReader(this)) {\\n          return Promise.reject(byobReaderBrandCheckException('read'));\\n        }\\n        if (this._ownerReadableStream === undefined) {\\n          return Promise.reject(readerLockException('read from'));\\n        }\\n        if (!ArrayBuffer.isView(view)) {\\n          return Promise.reject(new TypeError('view must be an array buffer view'));\\n        }\\n        if (view.byteLength === 0) {\\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\\n        }\\n        return ReadableStreamBYOBReaderRead(this, view);\\n      }\\n    }, {\\n      key: 'releaseLock',\\n      value: function releaseLock() {\\n        if (!IsReadableStreamBYOBReader(this)) {\\n          throw byobReaderBrandCheckException('releaseLock');\\n        }\\n        if (this._ownerReadableStream === undefined) {\\n          return;\\n        }\\n        if (this._readIntoRequests.length > 0) {\\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\\n        }\\n        ReadableStreamReaderGenericRelease(this);\\n      }\\n    }, {\\n      key: 'closed',\\n      get: function get() {\\n        if (!IsReadableStreamBYOBReader(this)) {\\n          return Promise.reject(byobReaderBrandCheckException('closed'));\\n        }\\n        return this._closedPromise;\\n      }\\n    }]);\\n    return ReadableStreamBYOBReader;\\n  }();\\n  function IsReadableStreamBYOBReader(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function IsReadableStreamDefaultReader(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\\n    reader._ownerReadableStream = stream;\\n    stream._reader = reader;\\n    if (stream._state === 'readable') {\\n      defaultReaderClosedPromiseInitialize(reader);\\n    } else if (stream._state === 'closed') {\\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\\n    } else {\\n      assert(stream._state === 'errored', 'state must be errored');\\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\\n      reader._closedPromise.catch(function () {});\\n    }\\n  }\\n  function ReadableStreamReaderGenericCancel(reader, reason) {\\n    var stream = reader._ownerReadableStream;\\n    assert(stream !== undefined);\\n    return ReadableStreamCancel(stream, reason);\\n  }\\n  function ReadableStreamReaderGenericRelease(reader) {\\n    assert(reader._ownerReadableStream !== undefined);\\n    assert(reader._ownerReadableStream._reader === reader);\\n    if (reader._ownerReadableStream._state === 'readable') {\\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\\\'s closedness'));\\n    } else {\\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\\\'s closedness'));\\n    }\\n    reader._closedPromise.catch(function () {});\\n    reader._ownerReadableStream._reader = undefined;\\n    reader._ownerReadableStream = undefined;\\n  }\\n  function ReadableStreamBYOBReaderRead(reader, view) {\\n    var stream = reader._ownerReadableStream;\\n    assert(stream !== undefined);\\n    stream._disturbed = true;\\n    if (stream._state === 'errored') {\\n      return Promise.reject(stream._storedError);\\n    }\\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\\n  }\\n  function ReadableStreamDefaultReaderRead(reader) {\\n    var stream = reader._ownerReadableStream;\\n    assert(stream !== undefined);\\n    stream._disturbed = true;\\n    if (stream._state === 'closed') {\\n      return Promise.resolve(CreateIterResultObject(undefined, true));\\n    }\\n    if (stream._state === 'errored') {\\n      return Promise.reject(stream._storedError);\\n    }\\n    assert(stream._state === 'readable');\\n    return stream._readableStreamController.__pullSteps();\\n  }\\n  var ReadableStreamDefaultController = function () {\\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\\n      _classCallCheck(this, ReadableStreamDefaultController);\\n      if (IsReadableStream(stream) === false) {\\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\\n      }\\n      if (stream._readableStreamController !== undefined) {\\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\\n      }\\n      this._controlledReadableStream = stream;\\n      this._underlyingSource = underlyingSource;\\n      this._queue = undefined;\\n      this._queueTotalSize = undefined;\\n      ResetQueue(this);\\n      this._started = false;\\n      this._closeRequested = false;\\n      this._pullAgain = false;\\n      this._pulling = false;\\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\\n      this._strategySize = normalizedStrategy.size;\\n      this._strategyHWM = normalizedStrategy.highWaterMark;\\n      var controller = this;\\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\\n      Promise.resolve(startResult).then(function () {\\n        controller._started = true;\\n        assert(controller._pulling === false);\\n        assert(controller._pullAgain === false);\\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\n      }, function (r) {\\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\\n      }).catch(rethrowAssertionErrorRejection);\\n    }\\n    _createClass(ReadableStreamDefaultController, [{\\n      key: 'close',\\n      value: function close() {\\n        if (IsReadableStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('close');\\n        }\\n        if (this._closeRequested === true) {\\n          throw new TypeError('The stream has already been closed; do not close it again!');\\n        }\\n        var state = this._controlledReadableStream._state;\\n        if (state !== 'readable') {\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\\n        }\\n        ReadableStreamDefaultControllerClose(this);\\n      }\\n    }, {\\n      key: 'enqueue',\\n      value: function enqueue(chunk) {\\n        if (IsReadableStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('enqueue');\\n        }\\n        if (this._closeRequested === true) {\\n          throw new TypeError('stream is closed or draining');\\n        }\\n        var state = this._controlledReadableStream._state;\\n        if (state !== 'readable') {\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\\n        }\\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\\n      }\\n    }, {\\n      key: 'error',\\n      value: function error(e) {\\n        if (IsReadableStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('error');\\n        }\\n        var stream = this._controlledReadableStream;\\n        if (stream._state !== 'readable') {\\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\\n        }\\n        ReadableStreamDefaultControllerError(this, e);\\n      }\\n    }, {\\n      key: '__cancelSteps',\\n      value: function __cancelSteps(reason) {\\n        ResetQueue(this);\\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\\n      }\\n    }, {\\n      key: '__pullSteps',\\n      value: function __pullSteps() {\\n        var stream = this._controlledReadableStream;\\n        if (this._queue.length > 0) {\\n          var chunk = DequeueValue(this);\\n          if (this._closeRequested === true && this._queue.length === 0) {\\n            ReadableStreamClose(stream);\\n          } else {\\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\\n          }\\n          return Promise.resolve(CreateIterResultObject(chunk, false));\\n        }\\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\\n        return pendingPromise;\\n      }\\n    }, {\\n      key: 'desiredSize',\\n      get: function get() {\\n        if (IsReadableStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('desiredSize');\\n        }\\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\\n      }\\n    }]);\\n    return ReadableStreamDefaultController;\\n  }();\\n  function IsReadableStreamDefaultController(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\\n    if (shouldPull === false) {\\n      return undefined;\\n    }\\n    if (controller._pulling === true) {\\n      controller._pullAgain = true;\\n      return undefined;\\n    }\\n    assert(controller._pullAgain === false);\\n    controller._pulling = true;\\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\\n    pullPromise.then(function () {\\n      controller._pulling = false;\\n      if (controller._pullAgain === true) {\\n        controller._pullAgain = false;\\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\n      }\\n      return undefined;\\n    }, function (e) {\\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\\n    }).catch(rethrowAssertionErrorRejection);\\n    return undefined;\\n  }\\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\\n    var stream = controller._controlledReadableStream;\\n    if (stream._state === 'closed' || stream._state === 'errored') {\\n      return false;\\n    }\\n    if (controller._closeRequested === true) {\\n      return false;\\n    }\\n    if (controller._started === false) {\\n      return false;\\n    }\\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\n      return true;\\n    }\\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\\n    if (desiredSize > 0) {\\n      return true;\\n    }\\n    return false;\\n  }\\n  function ReadableStreamDefaultControllerClose(controller) {\\n    var stream = controller._controlledReadableStream;\\n    assert(controller._closeRequested === false);\\n    assert(stream._state === 'readable');\\n    controller._closeRequested = true;\\n    if (controller._queue.length === 0) {\\n      ReadableStreamClose(stream);\\n    }\\n  }\\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\\n    var stream = controller._controlledReadableStream;\\n    assert(controller._closeRequested === false);\\n    assert(stream._state === 'readable');\\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\\n    } else {\\n      var chunkSize = 1;\\n      if (controller._strategySize !== undefined) {\\n        var strategySize = controller._strategySize;\\n        try {\\n          chunkSize = strategySize(chunk);\\n        } catch (chunkSizeE) {\\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\\n          throw chunkSizeE;\\n        }\\n      }\\n      try {\\n        EnqueueValueWithSize(controller, chunk, chunkSize);\\n      } catch (enqueueE) {\\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\\n        throw enqueueE;\\n      }\\n    }\\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\n    return undefined;\\n  }\\n  function ReadableStreamDefaultControllerError(controller, e) {\\n    var stream = controller._controlledReadableStream;\\n    assert(stream._state === 'readable');\\n    ResetQueue(controller);\\n    ReadableStreamError(stream, e);\\n  }\\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\\n    if (controller._controlledReadableStream._state === 'readable') {\\n      ReadableStreamDefaultControllerError(controller, e);\\n    }\\n  }\\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\\n    var stream = controller._controlledReadableStream;\\n    var state = stream._state;\\n    if (state === 'errored') {\\n      return null;\\n    }\\n    if (state === 'closed') {\\n      return 0;\\n    }\\n    return controller._strategyHWM - controller._queueTotalSize;\\n  }\\n  var ReadableStreamBYOBRequest = function () {\\n    function ReadableStreamBYOBRequest(controller, view) {\\n      _classCallCheck(this, ReadableStreamBYOBRequest);\\n      this._associatedReadableByteStreamController = controller;\\n      this._view = view;\\n    }\\n    _createClass(ReadableStreamBYOBRequest, [{\\n      key: 'respond',\\n      value: function respond(bytesWritten) {\\n        if (IsReadableStreamBYOBRequest(this) === false) {\\n          throw byobRequestBrandCheckException('respond');\\n        }\\n        if (this._associatedReadableByteStreamController === undefined) {\\n          throw new TypeError('This BYOB request has been invalidated');\\n        }\\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\\n      }\\n    }, {\\n      key: 'respondWithNewView',\\n      value: function respondWithNewView(view) {\\n        if (IsReadableStreamBYOBRequest(this) === false) {\\n          throw byobRequestBrandCheckException('respond');\\n        }\\n        if (this._associatedReadableByteStreamController === undefined) {\\n          throw new TypeError('This BYOB request has been invalidated');\\n        }\\n        if (!ArrayBuffer.isView(view)) {\\n          throw new TypeError('You can only respond with array buffer views');\\n        }\\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\\n      }\\n    }, {\\n      key: 'view',\\n      get: function get() {\\n        return this._view;\\n      }\\n    }]);\\n    return ReadableStreamBYOBRequest;\\n  }();\\n  var ReadableByteStreamController = function () {\\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\\n      _classCallCheck(this, ReadableByteStreamController);\\n      if (IsReadableStream(stream) === false) {\\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\\n      }\\n      if (stream._readableStreamController !== undefined) {\\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\\n      }\\n      this._controlledReadableStream = stream;\\n      this._underlyingByteSource = underlyingByteSource;\\n      this._pullAgain = false;\\n      this._pulling = false;\\n      ReadableByteStreamControllerClearPendingPullIntos(this);\\n      this._queue = this._queueTotalSize = undefined;\\n      ResetQueue(this);\\n      this._closeRequested = false;\\n      this._started = false;\\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\\n      if (autoAllocateChunkSize !== undefined) {\\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\\n        }\\n      }\\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\\n      this._pendingPullIntos = [];\\n      var controller = this;\\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\\n      Promise.resolve(startResult).then(function () {\\n        controller._started = true;\\n        assert(controller._pulling === false);\\n        assert(controller._pullAgain === false);\\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\\n      }, function (r) {\\n        if (stream._state === 'readable') {\\n          ReadableByteStreamControllerError(controller, r);\\n        }\\n      }).catch(rethrowAssertionErrorRejection);\\n    }\\n    _createClass(ReadableByteStreamController, [{\\n      key: 'close',\\n      value: function close() {\\n        if (IsReadableByteStreamController(this) === false) {\\n          throw byteStreamControllerBrandCheckException('close');\\n        }\\n        if (this._closeRequested === true) {\\n          throw new TypeError('The stream has already been closed; do not close it again!');\\n        }\\n        var state = this._controlledReadableStream._state;\\n        if (state !== 'readable') {\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\\n        }\\n        ReadableByteStreamControllerClose(this);\\n      }\\n    }, {\\n      key: 'enqueue',\\n      value: function enqueue(chunk) {\\n        if (IsReadableByteStreamController(this) === false) {\\n          throw byteStreamControllerBrandCheckException('enqueue');\\n        }\\n        if (this._closeRequested === true) {\\n          throw new TypeError('stream is closed or draining');\\n        }\\n        var state = this._controlledReadableStream._state;\\n        if (state !== 'readable') {\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\\n        }\\n        if (!ArrayBuffer.isView(chunk)) {\\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\\n        }\\n        ReadableByteStreamControllerEnqueue(this, chunk);\\n      }\\n    }, {\\n      key: 'error',\\n      value: function error(e) {\\n        if (IsReadableByteStreamController(this) === false) {\\n          throw byteStreamControllerBrandCheckException('error');\\n        }\\n        var stream = this._controlledReadableStream;\\n        if (stream._state !== 'readable') {\\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\\n        }\\n        ReadableByteStreamControllerError(this, e);\\n      }\\n    }, {\\n      key: '__cancelSteps',\\n      value: function __cancelSteps(reason) {\\n        if (this._pendingPullIntos.length > 0) {\\n          var firstDescriptor = this._pendingPullIntos[0];\\n          firstDescriptor.bytesFilled = 0;\\n        }\\n        ResetQueue(this);\\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\\n      }\\n    }, {\\n      key: '__pullSteps',\\n      value: function __pullSteps() {\\n        var stream = this._controlledReadableStream;\\n        assert(ReadableStreamHasDefaultReader(stream) === true);\\n        if (this._queueTotalSize > 0) {\\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\\n          var entry = this._queue.shift();\\n          this._queueTotalSize -= entry.byteLength;\\n          ReadableByteStreamControllerHandleQueueDrain(this);\\n          var view = void 0;\\n          try {\\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\\n          } catch (viewE) {\\n            return Promise.reject(viewE);\\n          }\\n          return Promise.resolve(CreateIterResultObject(view, false));\\n        }\\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\\n        if (autoAllocateChunkSize !== undefined) {\\n          var buffer = void 0;\\n          try {\\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\\n          } catch (bufferE) {\\n            return Promise.reject(bufferE);\\n          }\\n          var pullIntoDescriptor = {\\n            buffer: buffer,\\n            byteOffset: 0,\\n            byteLength: autoAllocateChunkSize,\\n            bytesFilled: 0,\\n            elementSize: 1,\\n            ctor: Uint8Array,\\n            readerType: 'default'\\n          };\\n          this._pendingPullIntos.push(pullIntoDescriptor);\\n        }\\n        var promise = ReadableStreamAddReadRequest(stream);\\n        ReadableByteStreamControllerCallPullIfNeeded(this);\\n        return promise;\\n      }\\n    }, {\\n      key: 'byobRequest',\\n      get: function get() {\\n        if (IsReadableByteStreamController(this) === false) {\\n          throw byteStreamControllerBrandCheckException('byobRequest');\\n        }\\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\\n          var firstDescriptor = this._pendingPullIntos[0];\\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\\n        }\\n        return this._byobRequest;\\n      }\\n    }, {\\n      key: 'desiredSize',\\n      get: function get() {\\n        if (IsReadableByteStreamController(this) === false) {\\n          throw byteStreamControllerBrandCheckException('desiredSize');\\n        }\\n        return ReadableByteStreamControllerGetDesiredSize(this);\\n      }\\n    }]);\\n    return ReadableByteStreamController;\\n  }();\\n  function IsReadableByteStreamController(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function IsReadableStreamBYOBRequest(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\\n    if (shouldPull === false) {\\n      return undefined;\\n    }\\n    if (controller._pulling === true) {\\n      controller._pullAgain = true;\\n      return undefined;\\n    }\\n    assert(controller._pullAgain === false);\\n    controller._pulling = true;\\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\\n    pullPromise.then(function () {\\n      controller._pulling = false;\\n      if (controller._pullAgain === true) {\\n        controller._pullAgain = false;\\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\\n      }\\n    }, function (e) {\\n      if (controller._controlledReadableStream._state === 'readable') {\\n        ReadableByteStreamControllerError(controller, e);\\n      }\\n    }).catch(rethrowAssertionErrorRejection);\\n    return undefined;\\n  }\\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\n    controller._pendingPullIntos = [];\\n  }\\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\\n    assert(stream._state !== 'errored', 'state must not be errored');\\n    var done = false;\\n    if (stream._state === 'closed') {\\n      assert(pullIntoDescriptor.bytesFilled === 0);\\n      done = true;\\n    }\\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\\n    if (pullIntoDescriptor.readerType === 'default') {\\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\\n    } else {\\n      assert(pullIntoDescriptor.readerType === 'byob');\\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\\n    }\\n  }\\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\\n    var elementSize = pullIntoDescriptor.elementSize;\\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\\n    assert(bytesFilled % elementSize === 0);\\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\\n  }\\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\\n    controller._queue.push({\\n      buffer: buffer,\\n      byteOffset: byteOffset,\\n      byteLength: byteLength\\n    });\\n    controller._queueTotalSize += byteLength;\\n  }\\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\\n    var elementSize = pullIntoDescriptor.elementSize;\\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\\n    var totalBytesToCopyRemaining = maxBytesToCopy;\\n    var ready = false;\\n    if (maxAlignedBytes > currentAlignedBytes) {\\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\\n      ready = true;\\n    }\\n    var queue = controller._queue;\\n    while (totalBytesToCopyRemaining > 0) {\\n      var headOfQueue = queue[0];\\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\\n      if (headOfQueue.byteLength === bytesToCopy) {\\n        queue.shift();\\n      } else {\\n        headOfQueue.byteOffset += bytesToCopy;\\n        headOfQueue.byteLength -= bytesToCopy;\\n      }\\n      controller._queueTotalSize -= bytesToCopy;\\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\\n      totalBytesToCopyRemaining -= bytesToCopy;\\n    }\\n    if (ready === false) {\\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\\n      assert(pullIntoDescriptor.bytesFilled > 0);\\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\\n    }\\n    return ready;\\n  }\\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\n    pullIntoDescriptor.bytesFilled += size;\\n  }\\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\\n    assert(controller._controlledReadableStream._state === 'readable');\\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\\n      ReadableStreamClose(controller._controlledReadableStream);\\n    } else {\\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\\n    }\\n  }\\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\\n    if (controller._byobRequest === undefined) {\\n      return;\\n    }\\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\\n    controller._byobRequest._view = undefined;\\n    controller._byobRequest = undefined;\\n  }\\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\\n    assert(controller._closeRequested === false);\\n    while (controller._pendingPullIntos.length > 0) {\\n      if (controller._queueTotalSize === 0) {\\n        return;\\n      }\\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\\n      }\\n    }\\n  }\\n  function ReadableByteStreamControllerPullInto(controller, view) {\\n    var stream = controller._controlledReadableStream;\\n    var elementSize = 1;\\n    if (view.constructor !== DataView) {\\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\\n    }\\n    var ctor = view.constructor;\\n    var pullIntoDescriptor = {\\n      buffer: view.buffer,\\n      byteOffset: view.byteOffset,\\n      byteLength: view.byteLength,\\n      bytesFilled: 0,\\n      elementSize: elementSize,\\n      ctor: ctor,\\n      readerType: 'byob'\\n    };\\n    if (controller._pendingPullIntos.length > 0) {\\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\n      controller._pendingPullIntos.push(pullIntoDescriptor);\\n      return ReadableStreamAddReadIntoRequest(stream);\\n    }\\n    if (stream._state === 'closed') {\\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\\n    }\\n    if (controller._queueTotalSize > 0) {\\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\\n        ReadableByteStreamControllerHandleQueueDrain(controller);\\n        return Promise.resolve(CreateIterResultObject(filledView, false));\\n      }\\n      if (controller._closeRequested === true) {\\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\\n        ReadableByteStreamControllerError(controller, e);\\n        return Promise.reject(e);\\n      }\\n    }\\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\n    controller._pendingPullIntos.push(pullIntoDescriptor);\\n    var promise = ReadableStreamAddReadIntoRequest(stream);\\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\\n    return promise;\\n  }\\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\\n    var stream = controller._controlledReadableStream;\\n    if (ReadableStreamHasBYOBReader(stream) === true) {\\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\\n      }\\n    }\\n  }\\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\\n      throw new RangeError('bytesWritten out of range');\\n    }\\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\\n      return;\\n    }\\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\\n    if (remainderSize > 0) {\\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\\n    }\\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\n    pullIntoDescriptor.bytesFilled -= remainderSize;\\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\\n  }\\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\\n    var firstDescriptor = controller._pendingPullIntos[0];\\n    var stream = controller._controlledReadableStream;\\n    if (stream._state === 'closed') {\\n      if (bytesWritten !== 0) {\\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\\n      }\\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\\n    } else {\\n      assert(stream._state === 'readable');\\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\\n    }\\n  }\\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\\n    var descriptor = controller._pendingPullIntos.shift();\\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\n    return descriptor;\\n  }\\n  function ReadableByteStreamControllerShouldCallPull(controller) {\\n    var stream = controller._controlledReadableStream;\\n    if (stream._state !== 'readable') {\\n      return false;\\n    }\\n    if (controller._closeRequested === true) {\\n      return false;\\n    }\\n    if (controller._started === false) {\\n      return false;\\n    }\\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\n      return true;\\n    }\\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\\n      return true;\\n    }\\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\\n      return true;\\n    }\\n    return false;\\n  }\\n  function ReadableByteStreamControllerClose(controller) {\\n    var stream = controller._controlledReadableStream;\\n    assert(controller._closeRequested === false);\\n    assert(stream._state === 'readable');\\n    if (controller._queueTotalSize > 0) {\\n      controller._closeRequested = true;\\n      return;\\n    }\\n    if (controller._pendingPullIntos.length > 0) {\\n      var firstPendingPullInto = controller._pendingPullIntos[0];\\n      if (firstPendingPullInto.bytesFilled > 0) {\\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\\n        ReadableByteStreamControllerError(controller, e);\\n        throw e;\\n      }\\n    }\\n    ReadableStreamClose(stream);\\n  }\\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\\n    var stream = controller._controlledReadableStream;\\n    assert(controller._closeRequested === false);\\n    assert(stream._state === 'readable');\\n    var buffer = chunk.buffer;\\n    var byteOffset = chunk.byteOffset;\\n    var byteLength = chunk.byteLength;\\n    var transferredBuffer = TransferArrayBuffer(buffer);\\n    if (ReadableStreamHasDefaultReader(stream) === true) {\\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\n      } else {\\n        assert(controller._queue.length === 0);\\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\\n      }\\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\\n    } else {\\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\n    }\\n  }\\n  function ReadableByteStreamControllerError(controller, e) {\\n    var stream = controller._controlledReadableStream;\\n    assert(stream._state === 'readable');\\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\\n    ResetQueue(controller);\\n    ReadableStreamError(stream, e);\\n  }\\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\\n    var stream = controller._controlledReadableStream;\\n    var state = stream._state;\\n    if (state === 'errored') {\\n      return null;\\n    }\\n    if (state === 'closed') {\\n      return 0;\\n    }\\n    return controller._strategyHWM - controller._queueTotalSize;\\n  }\\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\\n    bytesWritten = Number(bytesWritten);\\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\\n      throw new RangeError('bytesWritten must be a finite');\\n    }\\n    assert(controller._pendingPullIntos.length > 0);\\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\\n  }\\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\\n    assert(controller._pendingPullIntos.length > 0);\\n    var firstDescriptor = controller._pendingPullIntos[0];\\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\\n      throw new RangeError('The region specified by view does not match byobRequest');\\n    }\\n    if (firstDescriptor.byteLength !== view.byteLength) {\\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\\n    }\\n    firstDescriptor.buffer = view.buffer;\\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\\n  }\\n  function streamBrandCheckException(name) {\\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\\n  }\\n  function readerLockException(name) {\\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\\n  }\\n  function defaultReaderBrandCheckException(name) {\\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\\n  }\\n  function defaultReaderClosedPromiseInitialize(reader) {\\n    reader._closedPromise = new Promise(function (resolve, reject) {\\n      reader._closedPromise_resolve = resolve;\\n      reader._closedPromise_reject = reject;\\n    });\\n  }\\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\\n    reader._closedPromise = Promise.reject(reason);\\n    reader._closedPromise_resolve = undefined;\\n    reader._closedPromise_reject = undefined;\\n  }\\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\\n    reader._closedPromise = Promise.resolve(undefined);\\n    reader._closedPromise_resolve = undefined;\\n    reader._closedPromise_reject = undefined;\\n  }\\n  function defaultReaderClosedPromiseReject(reader, reason) {\\n    assert(reader._closedPromise_resolve !== undefined);\\n    assert(reader._closedPromise_reject !== undefined);\\n    reader._closedPromise_reject(reason);\\n    reader._closedPromise_resolve = undefined;\\n    reader._closedPromise_reject = undefined;\\n  }\\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\\n    assert(reader._closedPromise_resolve === undefined);\\n    assert(reader._closedPromise_reject === undefined);\\n    reader._closedPromise = Promise.reject(reason);\\n  }\\n  function defaultReaderClosedPromiseResolve(reader) {\\n    assert(reader._closedPromise_resolve !== undefined);\\n    assert(reader._closedPromise_reject !== undefined);\\n    reader._closedPromise_resolve(undefined);\\n    reader._closedPromise_resolve = undefined;\\n    reader._closedPromise_reject = undefined;\\n  }\\n  function byobReaderBrandCheckException(name) {\\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\\n  }\\n  function defaultControllerBrandCheckException(name) {\\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\\n  }\\n  function byobRequestBrandCheckException(name) {\\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\\n  }\\n  function byteStreamControllerBrandCheckException(name) {\\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\\n  }\\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\\n    try {\\n      Promise.prototype.then.call(promise, undefined, function () {});\\n    } catch (e) {}\\n  }\\n}, function (module, exports, __w_pdfjs_require__) {\\n  \\\"use strict\\\";\\n\\n  var transformStream = __w_pdfjs_require__(6);\\n  var readableStream = __w_pdfjs_require__(4);\\n  var writableStream = __w_pdfjs_require__(2);\\n  exports.TransformStream = transformStream.TransformStream;\\n  exports.ReadableStream = readableStream.ReadableStream;\\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\\n  exports.IsWritableStream = writableStream.IsWritableStream;\\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\\n  exports.WritableStream = writableStream.WritableStream;\\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\\n}, function (module, exports, __w_pdfjs_require__) {\\n  \\\"use strict\\\";\\n\\n  var _createClass = function () {\\n    function defineProperties(target, props) {\\n      for (var i = 0; i < props.length; i++) {\\n        var descriptor = props[i];\\n        descriptor.enumerable = descriptor.enumerable || false;\\n        descriptor.configurable = true;\\n        if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n        Object.defineProperty(target, descriptor.key, descriptor);\\n      }\\n    }\\n    return function (Constructor, protoProps, staticProps) {\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n      if (staticProps) defineProperties(Constructor, staticProps);\\n      return Constructor;\\n    };\\n  }();\\n  function _classCallCheck(instance, Constructor) {\\n    if (!(instance instanceof Constructor)) {\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\n    }\\n  }\\n  var _require = __w_pdfjs_require__(1),\\n      assert = _require.assert;\\n  var _require2 = __w_pdfjs_require__(0),\\n      InvokeOrNoop = _require2.InvokeOrNoop,\\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\\n      typeIsObject = _require2.typeIsObject;\\n  var _require3 = __w_pdfjs_require__(4),\\n      ReadableStream = _require3.ReadableStream,\\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\\n  var _require4 = __w_pdfjs_require__(2),\\n      WritableStream = _require4.WritableStream,\\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\\n  function TransformStreamCloseReadable(transformStream) {\\n    if (transformStream._errored === true) {\\n      throw new TypeError('TransformStream is already errored');\\n    }\\n    if (transformStream._readableClosed === true) {\\n      throw new TypeError('Readable side is already closed');\\n    }\\n    TransformStreamCloseReadableInternal(transformStream);\\n  }\\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\\n    if (transformStream._errored === true) {\\n      throw new TypeError('TransformStream is already errored');\\n    }\\n    if (transformStream._readableClosed === true) {\\n      throw new TypeError('Readable side is already closed');\\n    }\\n    var controller = transformStream._readableController;\\n    try {\\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\\n    } catch (e) {\\n      transformStream._readableClosed = true;\\n      TransformStreamErrorIfNeeded(transformStream, e);\\n      throw transformStream._storedError;\\n    }\\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\\n    var maybeBackpressure = desiredSize <= 0;\\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\\n      TransformStreamSetBackpressure(transformStream, true);\\n    }\\n  }\\n  function TransformStreamError(transformStream, e) {\\n    if (transformStream._errored === true) {\\n      throw new TypeError('TransformStream is already errored');\\n    }\\n    TransformStreamErrorInternal(transformStream, e);\\n  }\\n  function TransformStreamCloseReadableInternal(transformStream) {\\n    assert(transformStream._errored === false);\\n    assert(transformStream._readableClosed === false);\\n    try {\\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\\n    } catch (e) {\\n      assert(false);\\n    }\\n    transformStream._readableClosed = true;\\n  }\\n  function TransformStreamErrorIfNeeded(transformStream, e) {\\n    if (transformStream._errored === false) {\\n      TransformStreamErrorInternal(transformStream, e);\\n    }\\n  }\\n  function TransformStreamErrorInternal(transformStream, e) {\\n    assert(transformStream._errored === false);\\n    transformStream._errored = true;\\n    transformStream._storedError = e;\\n    if (transformStream._writableDone === false) {\\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\\n    }\\n    if (transformStream._readableClosed === false) {\\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\\n    }\\n  }\\n  function TransformStreamReadableReadyPromise(transformStream) {\\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\n    if (transformStream._backpressure === false) {\\n      return Promise.resolve();\\n    }\\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\\n    return transformStream._backpressureChangePromise;\\n  }\\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\\n    if (transformStream._backpressureChangePromise !== undefined) {\\n      transformStream._backpressureChangePromise_resolve(backpressure);\\n    }\\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\\n      transformStream._backpressureChangePromise_resolve = resolve;\\n    });\\n    transformStream._backpressureChangePromise.then(function (resolution) {\\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\\n    });\\n    transformStream._backpressure = backpressure;\\n  }\\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\\n    var transformStream = transformStreamController._controlledTransformStream;\\n    TransformStreamEnqueueToReadable(transformStream, chunk);\\n    return Promise.resolve();\\n  }\\n  function TransformStreamTransform(transformStream, chunk) {\\n    assert(transformStream._errored === false);\\n    assert(transformStream._transforming === false);\\n    assert(transformStream._backpressure === false);\\n    transformStream._transforming = true;\\n    var transformer = transformStream._transformer;\\n    var controller = transformStream._transformStreamController;\\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\\n    return transformPromise.then(function () {\\n      transformStream._transforming = false;\\n      return TransformStreamReadableReadyPromise(transformStream);\\n    }, function (e) {\\n      TransformStreamErrorIfNeeded(transformStream, e);\\n      return Promise.reject(e);\\n    });\\n  }\\n  function IsTransformStreamDefaultController(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  function IsTransformStream(x) {\\n    if (!typeIsObject(x)) {\\n      return false;\\n    }\\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\\n      return false;\\n    }\\n    return true;\\n  }\\n  var TransformStreamSink = function () {\\n    function TransformStreamSink(transformStream, startPromise) {\\n      _classCallCheck(this, TransformStreamSink);\\n      this._transformStream = transformStream;\\n      this._startPromise = startPromise;\\n    }\\n    _createClass(TransformStreamSink, [{\\n      key: 'start',\\n      value: function start(c) {\\n        var transformStream = this._transformStream;\\n        transformStream._writableController = c;\\n        return this._startPromise.then(function () {\\n          return TransformStreamReadableReadyPromise(transformStream);\\n        });\\n      }\\n    }, {\\n      key: 'write',\\n      value: function write(chunk) {\\n        var transformStream = this._transformStream;\\n        return TransformStreamTransform(transformStream, chunk);\\n      }\\n    }, {\\n      key: 'abort',\\n      value: function abort() {\\n        var transformStream = this._transformStream;\\n        transformStream._writableDone = true;\\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\\n      }\\n    }, {\\n      key: 'close',\\n      value: function close() {\\n        var transformStream = this._transformStream;\\n        assert(transformStream._transforming === false);\\n        transformStream._writableDone = true;\\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\\n        return flushPromise.then(function () {\\n          if (transformStream._errored === true) {\\n            return Promise.reject(transformStream._storedError);\\n          }\\n          if (transformStream._readableClosed === false) {\\n            TransformStreamCloseReadableInternal(transformStream);\\n          }\\n          return Promise.resolve();\\n        }).catch(function (r) {\\n          TransformStreamErrorIfNeeded(transformStream, r);\\n          return Promise.reject(transformStream._storedError);\\n        });\\n      }\\n    }]);\\n    return TransformStreamSink;\\n  }();\\n  var TransformStreamSource = function () {\\n    function TransformStreamSource(transformStream, startPromise) {\\n      _classCallCheck(this, TransformStreamSource);\\n      this._transformStream = transformStream;\\n      this._startPromise = startPromise;\\n    }\\n    _createClass(TransformStreamSource, [{\\n      key: 'start',\\n      value: function start(c) {\\n        var transformStream = this._transformStream;\\n        transformStream._readableController = c;\\n        return this._startPromise.then(function () {\\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\n          if (transformStream._backpressure === true) {\\n            return Promise.resolve();\\n          }\\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\\n          return transformStream._backpressureChangePromise;\\n        });\\n      }\\n    }, {\\n      key: 'pull',\\n      value: function pull() {\\n        var transformStream = this._transformStream;\\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\n        TransformStreamSetBackpressure(transformStream, false);\\n        return transformStream._backpressureChangePromise;\\n      }\\n    }, {\\n      key: 'cancel',\\n      value: function cancel() {\\n        var transformStream = this._transformStream;\\n        transformStream._readableClosed = true;\\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\\n      }\\n    }]);\\n    return TransformStreamSource;\\n  }();\\n  var TransformStreamDefaultController = function () {\\n    function TransformStreamDefaultController(transformStream) {\\n      _classCallCheck(this, TransformStreamDefaultController);\\n      if (IsTransformStream(transformStream) === false) {\\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\\n      }\\n      if (transformStream._transformStreamController !== undefined) {\\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\\n      }\\n      this._controlledTransformStream = transformStream;\\n    }\\n    _createClass(TransformStreamDefaultController, [{\\n      key: 'enqueue',\\n      value: function enqueue(chunk) {\\n        if (IsTransformStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('enqueue');\\n        }\\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\\n      }\\n    }, {\\n      key: 'close',\\n      value: function close() {\\n        if (IsTransformStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('close');\\n        }\\n        TransformStreamCloseReadable(this._controlledTransformStream);\\n      }\\n    }, {\\n      key: 'error',\\n      value: function error(reason) {\\n        if (IsTransformStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('error');\\n        }\\n        TransformStreamError(this._controlledTransformStream, reason);\\n      }\\n    }, {\\n      key: 'desiredSize',\\n      get: function get() {\\n        if (IsTransformStreamDefaultController(this) === false) {\\n          throw defaultControllerBrandCheckException('desiredSize');\\n        }\\n        var transformStream = this._controlledTransformStream;\\n        var readableController = transformStream._readableController;\\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\\n      }\\n    }]);\\n    return TransformStreamDefaultController;\\n  }();\\n  var TransformStream = function () {\\n    function TransformStream() {\\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n      _classCallCheck(this, TransformStream);\\n      this._transformer = transformer;\\n      var readableStrategy = transformer.readableStrategy,\\n          writableStrategy = transformer.writableStrategy;\\n      this._transforming = false;\\n      this._errored = false;\\n      this._storedError = undefined;\\n      this._writableController = undefined;\\n      this._readableController = undefined;\\n      this._transformStreamController = undefined;\\n      this._writableDone = false;\\n      this._readableClosed = false;\\n      this._backpressure = undefined;\\n      this._backpressureChangePromise = undefined;\\n      this._backpressureChangePromise_resolve = undefined;\\n      this._transformStreamController = new TransformStreamDefaultController(this);\\n      var startPromise_resolve = void 0;\\n      var startPromise = new Promise(function (resolve) {\\n        startPromise_resolve = resolve;\\n      });\\n      var source = new TransformStreamSource(this, startPromise);\\n      this._readable = new ReadableStream(source, readableStrategy);\\n      var sink = new TransformStreamSink(this, startPromise);\\n      this._writable = new WritableStream(sink, writableStrategy);\\n      assert(this._writableController !== undefined);\\n      assert(this._readableController !== undefined);\\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\\n      var transformStream = this;\\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\\n      startPromise_resolve(startResult);\\n      startPromise.catch(function (e) {\\n        if (transformStream._errored === false) {\\n          transformStream._errored = true;\\n          transformStream._storedError = e;\\n        }\\n      });\\n    }\\n    _createClass(TransformStream, [{\\n      key: 'readable',\\n      get: function get() {\\n        if (IsTransformStream(this) === false) {\\n          throw streamBrandCheckException('readable');\\n        }\\n        return this._readable;\\n      }\\n    }, {\\n      key: 'writable',\\n      get: function get() {\\n        if (IsTransformStream(this) === false) {\\n          throw streamBrandCheckException('writable');\\n        }\\n        return this._writable;\\n      }\\n    }]);\\n    return TransformStream;\\n  }();\\n  module.exports = { TransformStream: TransformStream };\\n  function defaultControllerBrandCheckException(name) {\\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\\n  }\\n  function streamBrandCheckException(name) {\\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\\n  }\\n}, function (module, exports, __w_pdfjs_require__) {\\n  module.exports = __w_pdfjs_require__(5);\\n}]));\\n\\n/***/ }),\\n/* 127 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _chunked_stream = __w_pdfjs_require__(63);\\n\\nvar _document = __w_pdfjs_require__(128);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar BasePdfManager = function BasePdfManagerClosure() {\\n  function BasePdfManager() {\\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\\n  }\\n  BasePdfManager.prototype = {\\n    get docId() {\\n      return this._docId;\\n    },\\n    get password() {\\n      return this._password;\\n    },\\n    get docBaseUrl() {\\n      var docBaseUrl = null;\\n      if (this._docBaseUrl) {\\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\\n        if (absoluteUrl) {\\n          docBaseUrl = absoluteUrl.href;\\n        } else {\\n          (0, _util.warn)('Invalid absolute docBaseUrl: \\\"' + this._docBaseUrl + '\\\".');\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\\n    },\\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\\n      throw new _util.NotImplementedException();\\n    },\\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\\n      return this.ensure(this.pdfDocument, prop, args);\\n    },\\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\\n      return this.ensure(this.pdfDocument.xref, prop, args);\\n    },\\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\\n      return this.ensure(this.pdfDocument.catalog, prop, args);\\n    },\\n    getPage: function BasePdfManager_getPage(pageIndex) {\\n      return this.pdfDocument.getPage(pageIndex);\\n    },\\n    cleanup: function BasePdfManager_cleanup() {\\n      return this.pdfDocument.cleanup();\\n    },\\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\\n      return new _util.NotImplementedException();\\n    },\\n    requestRange: function BasePdfManager_requestRange(begin, end) {\\n      return new _util.NotImplementedException();\\n    },\\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\\n      return new _util.NotImplementedException();\\n    },\\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\\n      return new _util.NotImplementedException();\\n    },\\n    updatePassword: function BasePdfManager_updatePassword(password) {\\n      this._password = password;\\n    },\\n    terminate: function BasePdfManager_terminate() {\\n      return new _util.NotImplementedException();\\n    }\\n  };\\n  return BasePdfManager;\\n}();\\nvar LocalPdfManager = function LocalPdfManagerClosure() {\\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\\n    this._docId = docId;\\n    this._password = password;\\n    this._docBaseUrl = docBaseUrl;\\n    this.evaluatorOptions = evaluatorOptions;\\n    var stream = new _stream.Stream(data);\\n    this.pdfDocument = new _document.PDFDocument(this, stream);\\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\\n    this._loadedStreamCapability.resolve(stream);\\n  }\\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\\n      return new Promise(function (resolve, reject) {\\n        try {\\n          var value = obj[prop];\\n          var result;\\n          if (typeof value === 'function') {\\n            result = value.apply(obj, args);\\n          } else {\\n            result = value;\\n          }\\n          resolve(result);\\n        } catch (e) {\\n          reject(e);\\n        }\\n      });\\n    },\\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\\n      return Promise.resolve();\\n    },\\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\\n      return this._loadedStreamCapability.promise;\\n    },\\n    terminate: function LocalPdfManager_terminate() {}\\n  });\\n  return LocalPdfManager;\\n}();\\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\\n    this._docId = docId;\\n    this._password = args.password;\\n    this._docBaseUrl = docBaseUrl;\\n    this.msgHandler = args.msgHandler;\\n    this.evaluatorOptions = evaluatorOptions;\\n    var params = {\\n      msgHandler: args.msgHandler,\\n      url: args.url,\\n      length: args.length,\\n      disableAutoFetch: args.disableAutoFetch,\\n      rangeChunkSize: args.rangeChunkSize\\n    };\\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\\n  }\\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\\n      var pdfManager = this;\\n      return new Promise(function (resolve, reject) {\\n        function ensureHelper() {\\n          try {\\n            var result;\\n            var value = obj[prop];\\n            if (typeof value === 'function') {\\n              result = value.apply(obj, args);\\n            } else {\\n              result = value;\\n            }\\n            resolve(result);\\n          } catch (e) {\\n            if (!(e instanceof _util.MissingDataException)) {\\n              reject(e);\\n              return;\\n            }\\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\\n          }\\n        }\\n        ensureHelper();\\n      });\\n    },\\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\\n      return this.streamManager.requestRange(begin, end);\\n    },\\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\\n      this.streamManager.requestAllChunks();\\n    },\\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\\n      this.streamManager.onReceiveData({ chunk: chunk });\\n    },\\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\\n      return this.streamManager.onLoadedStream();\\n    },\\n    terminate: function NetworkPdfManager_terminate() {\\n      this.streamManager.abort();\\n    }\\n  });\\n  return NetworkPdfManager;\\n}();\\nexports.LocalPdfManager = LocalPdfManager;\\nexports.NetworkPdfManager = NetworkPdfManager;\\n\\n/***/ }),\\n/* 128 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PDFDocument = exports.Page = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _obj = __w_pdfjs_require__(64);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _annotation = __w_pdfjs_require__(134);\\n\\nvar _crypto = __w_pdfjs_require__(68);\\n\\nvar _parser = __w_pdfjs_require__(26);\\n\\nvar _operator_list = __w_pdfjs_require__(42);\\n\\nvar _evaluator = __w_pdfjs_require__(135);\\n\\nvar _function = __w_pdfjs_require__(72);\\n\\nvar Page = function PageClosure() {\\n  var DEFAULT_USER_UNIT = 1.0;\\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\\n  function isAnnotationRenderable(annotation, intent) {\\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\\n  }\\n  function Page(_ref) {\\n    var pdfManager = _ref.pdfManager,\\n        xref = _ref.xref,\\n        pageIndex = _ref.pageIndex,\\n        pageDict = _ref.pageDict,\\n        ref = _ref.ref,\\n        fontCache = _ref.fontCache,\\n        builtInCMapCache = _ref.builtInCMapCache,\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\n\\n    this.pdfManager = pdfManager;\\n    this.pageIndex = pageIndex;\\n    this.pageDict = pageDict;\\n    this.xref = xref;\\n    this.ref = ref;\\n    this.fontCache = fontCache;\\n    this.builtInCMapCache = builtInCMapCache;\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\\n    this.resourcesPromise = null;\\n    var uniquePrefix = 'p' + this.pageIndex + '_';\\n    var idCounters = { obj: 0 };\\n    this.idFactory = {\\n      createObjId: function createObjId() {\\n        return uniquePrefix + ++idCounters.obj;\\n      }\\n    };\\n  }\\n  Page.prototype = {\\n    getPageProp: function Page_getPageProp(key) {\\n      return this.pageDict.get(key);\\n    },\\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\\n      var dict = this.pageDict,\\n          valueArray = null,\\n          loopCount = 0;\\n      var MAX_LOOP_COUNT = 100;\\n      getArray = getArray || false;\\n      while (dict) {\\n        var value = getArray ? dict.getArray(key) : dict.get(key);\\n        if (value !== undefined) {\\n          if (!valueArray) {\\n            valueArray = [];\\n          }\\n          valueArray.push(value);\\n        }\\n        if (++loopCount > MAX_LOOP_COUNT) {\\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\\n          return valueArray ? valueArray[0] : undefined;\\n        }\\n        dict = dict.get('Parent');\\n      }\\n      if (!valueArray) {\\n        return undefined;\\n      }\\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\\n        return valueArray[0];\\n      }\\n      return _primitives.Dict.merge(this.xref, valueArray);\\n    },\\n    get content() {\\n      return this.getPageProp('Contents');\\n    },\\n    get resources() {\\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\\n    },\\n    get mediaBox() {\\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\\n      }\\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\\n    },\\n    get cropBox() {\\n      var cropBox = this.getInheritedPageProp('CropBox', true);\\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\\n      }\\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\\n    },\\n    get userUnit() {\\n      var obj = this.getPageProp('UserUnit');\\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\\n        obj = DEFAULT_USER_UNIT;\\n      }\\n      return (0, _util.shadow)(this, 'userUnit', obj);\\n    },\\n    get view() {\\n      var mediaBox = this.mediaBox,\\n          cropBox = this.cropBox;\\n      if (mediaBox === cropBox) {\\n        return (0, _util.shadow)(this, 'view', mediaBox);\\n      }\\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\\n    },\\n    get rotate() {\\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\\n      if (rotate % 90 !== 0) {\\n        rotate = 0;\\n      } else if (rotate >= 360) {\\n        rotate = rotate % 360;\\n      } else if (rotate < 0) {\\n        rotate = (rotate % 360 + 360) % 360;\\n      }\\n      return (0, _util.shadow)(this, 'rotate', rotate);\\n    },\\n    getContentStream: function Page_getContentStream() {\\n      var content = this.content;\\n      var stream;\\n      if (Array.isArray(content)) {\\n        var xref = this.xref;\\n        var i,\\n            n = content.length;\\n        var streams = [];\\n        for (i = 0; i < n; ++i) {\\n          streams.push(xref.fetchIfRef(content[i]));\\n        }\\n        stream = new _stream.StreamsSequenceStream(streams);\\n      } else if ((0, _primitives.isStream)(content)) {\\n        stream = content;\\n      } else {\\n        stream = new _stream.NullStream();\\n      }\\n      return stream;\\n    },\\n    loadResources: function Page_loadResources(keys) {\\n      var _this = this;\\n\\n      if (!this.resourcesPromise) {\\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\\n      }\\n      return this.resourcesPromise.then(function () {\\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\\n        return objectLoader.load();\\n      });\\n    },\\n    getOperatorList: function getOperatorList(_ref2) {\\n      var _this2 = this;\\n\\n      var handler = _ref2.handler,\\n          task = _ref2.task,\\n          intent = _ref2.intent,\\n          renderInteractiveForms = _ref2.renderInteractiveForms;\\n\\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\n      var partialEvaluator = new _evaluator.PartialEvaluator({\\n        pdfManager: this.pdfManager,\\n        xref: this.xref,\\n        handler: handler,\\n        pageIndex: this.pageIndex,\\n        idFactory: this.idFactory,\\n        fontCache: this.fontCache,\\n        builtInCMapCache: this.builtInCMapCache,\\n        options: this.evaluatorOptions,\\n        pdfFunctionFactory: this.pdfFunctionFactory\\n      });\\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\n      var pageListPromise = dataPromises.then(function (_ref3) {\\n        var _ref4 = _slicedToArray(_ref3, 1),\\n            contentStream = _ref4[0];\\n\\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\\n        handler.send('StartRenderPage', {\\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\\n          pageIndex: _this2.pageIndex,\\n          intent: intent\\n        });\\n        return partialEvaluator.getOperatorList({\\n          stream: contentStream,\\n          task: task,\\n          resources: _this2.resources,\\n          operatorList: opList\\n        }).then(function () {\\n          return opList;\\n        });\\n      });\\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\\n        var _ref6 = _slicedToArray(_ref5, 2),\\n            pageOpList = _ref6[0],\\n            annotations = _ref6[1];\\n\\n        if (annotations.length === 0) {\\n          pageOpList.flush(true);\\n          return pageOpList;\\n        }\\n        var i,\\n            ii,\\n            opListPromises = [];\\n        for (i = 0, ii = annotations.length; i < ii; i++) {\\n          if (isAnnotationRenderable(annotations[i], intent)) {\\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\\n          }\\n        }\\n        return Promise.all(opListPromises).then(function (opLists) {\\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\\n          for (i = 0, ii = opLists.length; i < ii; i++) {\\n            pageOpList.addOpList(opLists[i]);\\n          }\\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\\n          pageOpList.flush(true);\\n          return pageOpList;\\n        });\\n      });\\n    },\\n    extractTextContent: function extractTextContent(_ref7) {\\n      var _this3 = this;\\n\\n      var handler = _ref7.handler,\\n          task = _ref7.task,\\n          normalizeWhitespace = _ref7.normalizeWhitespace,\\n          sink = _ref7.sink,\\n          combineTextItems = _ref7.combineTextItems;\\n\\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\n      return dataPromises.then(function (_ref8) {\\n        var _ref9 = _slicedToArray(_ref8, 1),\\n            contentStream = _ref9[0];\\n\\n        var partialEvaluator = new _evaluator.PartialEvaluator({\\n          pdfManager: _this3.pdfManager,\\n          xref: _this3.xref,\\n          handler: handler,\\n          pageIndex: _this3.pageIndex,\\n          idFactory: _this3.idFactory,\\n          fontCache: _this3.fontCache,\\n          builtInCMapCache: _this3.builtInCMapCache,\\n          options: _this3.evaluatorOptions,\\n          pdfFunctionFactory: _this3.pdfFunctionFactory\\n        });\\n        return partialEvaluator.getTextContent({\\n          stream: contentStream,\\n          task: task,\\n          resources: _this3.resources,\\n          normalizeWhitespace: normalizeWhitespace,\\n          combineTextItems: combineTextItems,\\n          sink: sink\\n        });\\n      });\\n    },\\n\\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\\n      var annotations = this.annotations;\\n      var annotationsData = [];\\n      for (var i = 0, n = annotations.length; i < n; ++i) {\\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\\n          annotationsData.push(annotations[i].data);\\n        }\\n      }\\n      return annotationsData;\\n    },\\n    get annotations() {\\n      var annotations = [];\\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\\n        var annotationRef = annotationRefs[i];\\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\\n        if (annotation) {\\n          annotations.push(annotation);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'annotations', annotations);\\n    }\\n  };\\n  return Page;\\n}();\\nvar PDFDocument = function PDFDocumentClosure() {\\n  var FINGERPRINT_FIRST_BYTES = 1024;\\n  var EMPTY_FINGERPRINT = '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00';\\n  function PDFDocument(pdfManager, arg) {\\n    var stream;\\n    if ((0, _primitives.isStream)(arg)) {\\n      stream = arg;\\n    } else if ((0, _util.isArrayBuffer)(arg)) {\\n      stream = new _stream.Stream(arg);\\n    } else {\\n      throw new Error('PDFDocument: Unknown argument type');\\n    }\\n    if (stream.length <= 0) {\\n      throw new Error('PDFDocument: stream must have data');\\n    }\\n    this.pdfManager = pdfManager;\\n    this.stream = stream;\\n    this.xref = new _obj.XRef(stream, pdfManager);\\n    var evaluatorOptions = pdfManager.evaluatorOptions;\\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\\n      xref: this.xref,\\n      isEvalSupported: evaluatorOptions.isEvalSupported\\n    });\\n  }\\n  function find(stream, needle, limit, backwards) {\\n    var pos = stream.pos;\\n    var end = stream.end;\\n    var strBuf = [];\\n    if (pos + limit > end) {\\n      limit = end - pos;\\n    }\\n    for (var n = 0; n < limit; ++n) {\\n      strBuf.push(String.fromCharCode(stream.getByte()));\\n    }\\n    var str = strBuf.join('');\\n    stream.pos = pos;\\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\\n    if (index === -1) {\\n      return false;\\n    }\\n    stream.pos += index;\\n    return true;\\n  }\\n  var DocumentInfoValidators = {\\n    get entries() {\\n      return (0, _util.shadow)(this, 'entries', {\\n        Title: _util.isString,\\n        Author: _util.isString,\\n        Subject: _util.isString,\\n        Keywords: _util.isString,\\n        Creator: _util.isString,\\n        Producer: _util.isString,\\n        CreationDate: _util.isString,\\n        ModDate: _util.isString,\\n        Trapped: _primitives.isName\\n      });\\n    }\\n  };\\n  PDFDocument.prototype = {\\n    parse: function PDFDocument_parse(recoveryMode) {\\n      this.setup(recoveryMode);\\n      var version = this.catalog.catDict.get('Version');\\n      if ((0, _primitives.isName)(version)) {\\n        this.pdfFormatVersion = version.name;\\n      }\\n      try {\\n        this.acroForm = this.catalog.catDict.get('AcroForm');\\n        if (this.acroForm) {\\n          this.xfa = this.acroForm.get('XFA');\\n          var fields = this.acroForm.get('Fields');\\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\\n            this.acroForm = null;\\n          }\\n        }\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.info)('Something wrong with AcroForm entry');\\n        this.acroForm = null;\\n      }\\n    },\\n    get linearization() {\\n      var linearization = null;\\n      if (this.stream.length) {\\n        try {\\n          linearization = _parser.Linearization.create(this.stream);\\n        } catch (err) {\\n          if (err instanceof _util.MissingDataException) {\\n            throw err;\\n          }\\n          (0, _util.info)(err);\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'linearization', linearization);\\n    },\\n    get startXRef() {\\n      var stream = this.stream;\\n      var startXRef = 0;\\n      var linearization = this.linearization;\\n      if (linearization) {\\n        stream.reset();\\n        if (find(stream, 'endobj', 1024)) {\\n          startXRef = stream.pos + 6;\\n        }\\n      } else {\\n        var step = 1024;\\n        var found = false,\\n            pos = stream.end;\\n        while (!found && pos > 0) {\\n          pos -= step - 'startxref'.length;\\n          if (pos < 0) {\\n            pos = 0;\\n          }\\n          stream.pos = pos;\\n          found = find(stream, 'startxref', step, true);\\n        }\\n        if (found) {\\n          stream.skip(9);\\n          var ch;\\n          do {\\n            ch = stream.getByte();\\n          } while ((0, _util.isSpace)(ch));\\n          var str = '';\\n          while (ch >= 0x20 && ch <= 0x39) {\\n            str += String.fromCharCode(ch);\\n            ch = stream.getByte();\\n          }\\n          startXRef = parseInt(str, 10);\\n          if (isNaN(startXRef)) {\\n            startXRef = 0;\\n          }\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\\n    },\\n    get mainXRefEntriesOffset() {\\n      var mainXRefEntriesOffset = 0;\\n      var linearization = this.linearization;\\n      if (linearization) {\\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\\n      }\\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\\n    },\\n    checkHeader: function PDFDocument_checkHeader() {\\n      var stream = this.stream;\\n      stream.reset();\\n      if (find(stream, '%PDF-', 1024)) {\\n        stream.moveStart();\\n        var MAX_VERSION_LENGTH = 12;\\n        var version = '',\\n            ch;\\n        while ((ch = stream.getByte()) > 0x20) {\\n          if (version.length >= MAX_VERSION_LENGTH) {\\n            break;\\n          }\\n          version += String.fromCharCode(ch);\\n        }\\n        if (!this.pdfFormatVersion) {\\n          this.pdfFormatVersion = version.substring(5);\\n        }\\n        return;\\n      }\\n    },\\n    parseStartXRef: function PDFDocument_parseStartXRef() {\\n      var startXRef = this.startXRef;\\n      this.xref.setStartXRef(startXRef);\\n    },\\n    setup: function PDFDocument_setup(recoveryMode) {\\n      var _this4 = this;\\n\\n      this.xref.parse(recoveryMode);\\n      var pageFactory = {\\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\\n          return new Page({\\n            pdfManager: _this4.pdfManager,\\n            xref: _this4.xref,\\n            pageIndex: pageIndex,\\n            pageDict: dict,\\n            ref: ref,\\n            fontCache: fontCache,\\n            builtInCMapCache: builtInCMapCache,\\n            pdfFunctionFactory: _this4.pdfFunctionFactory\\n          });\\n        }\\n      };\\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\\n    },\\n    get numPages() {\\n      var linearization = this.linearization;\\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\\n      return (0, _util.shadow)(this, 'numPages', num);\\n    },\\n    get documentInfo() {\\n      var docInfo = {\\n        PDFFormatVersion: this.pdfFormatVersion,\\n        IsAcroFormPresent: !!this.acroForm,\\n        IsXFAPresent: !!this.xfa\\n      };\\n      var infoDict;\\n      try {\\n        infoDict = this.xref.trailer.get('Info');\\n      } catch (err) {\\n        if (err instanceof _util.MissingDataException) {\\n          throw err;\\n        }\\n        (0, _util.info)('The document information dictionary is invalid.');\\n      }\\n      if (infoDict) {\\n        var validEntries = DocumentInfoValidators.entries;\\n        for (var key in validEntries) {\\n          if (infoDict.has(key)) {\\n            var value = infoDict.get(key);\\n            if (validEntries[key](value)) {\\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\\n            } else {\\n              (0, _util.info)('Bad value in document info for \\\"' + key + '\\\"');\\n            }\\n          }\\n        }\\n      }\\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\\n    },\\n    get fingerprint() {\\n      var xref = this.xref,\\n          hash,\\n          fileID = '';\\n      var idArray = xref.trailer.get('ID');\\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\\n        hash = (0, _util.stringToBytes)(idArray[0]);\\n      } else {\\n        if (this.stream.ensureRange) {\\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\\n        }\\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\\n      }\\n      for (var i = 0, n = hash.length; i < n; i++) {\\n        var hex = hash[i].toString(16);\\n        fileID += hex.length === 1 ? '0' + hex : hex;\\n      }\\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\\n    },\\n    getPage: function PDFDocument_getPage(pageIndex) {\\n      return this.catalog.getPage(pageIndex);\\n    },\\n    cleanup: function PDFDocument_cleanup() {\\n      return this.catalog.cleanup();\\n    }\\n  };\\n  return PDFDocument;\\n}();\\nexports.Page = Page;\\nexports.PDFDocument = PDFDocument;\\n\\n/***/ }),\\n/* 129 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CCITTFaxStream = undefined;\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _ccitt = __w_pdfjs_require__(65);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\\n  function CCITTFaxStream(str, maybeLength, params) {\\n    this.str = str;\\n    this.dict = str.dict;\\n    if (!(0, _primitives.isDict)(params)) {\\n      params = _primitives.Dict.empty;\\n    }\\n    var source = {\\n      next: function next() {\\n        return str.getByte();\\n      }\\n    };\\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\\n      K: params.get('K'),\\n      EndOfLine: params.get('EndOfLine'),\\n      EncodedByteAlign: params.get('EncodedByteAlign'),\\n      Columns: params.get('Columns'),\\n      Rows: params.get('Rows'),\\n      EndOfBlock: params.get('EndOfBlock'),\\n      BlackIs1: params.get('BlackIs1')\\n    });\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  CCITTFaxStream.prototype.readBlock = function () {\\n    while (!this.eof) {\\n      var c = this.ccittFaxDecoder.readNextChar();\\n      if (c === -1) {\\n        this.eof = true;\\n        return;\\n      }\\n      this.ensureBuffer(this.bufferLength + 1);\\n      this.buffer[this.bufferLength++] = c;\\n    }\\n  };\\n  return CCITTFaxStream;\\n}();\\nexports.CCITTFaxStream = CCITTFaxStream;\\n\\n/***/ }),\\n/* 130 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Jbig2Stream = undefined;\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _jbig = __w_pdfjs_require__(131);\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar Jbig2Stream = function Jbig2StreamClosure() {\\n  function Jbig2Stream(stream, maybeLength, dict, params) {\\n    this.stream = stream;\\n    this.maybeLength = maybeLength;\\n    this.dict = dict;\\n    this.params = params;\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\\n    get: function get() {\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n    },\\n\\n    configurable: true\\n  });\\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\\n  Jbig2Stream.prototype.readBlock = function () {\\n    if (this.eof) {\\n      return;\\n    }\\n    var jbig2Image = new _jbig.Jbig2Image();\\n    var chunks = [];\\n    if ((0, _primitives.isDict)(this.params)) {\\n      var globalsStream = this.params.get('JBIG2Globals');\\n      if ((0, _primitives.isStream)(globalsStream)) {\\n        var globals = globalsStream.getBytes();\\n        chunks.push({\\n          data: globals,\\n          start: 0,\\n          end: globals.length\\n        });\\n      }\\n    }\\n    chunks.push({\\n      data: this.bytes,\\n      start: 0,\\n      end: this.bytes.length\\n    });\\n    var data = jbig2Image.parseChunks(chunks);\\n    var dataLength = data.length;\\n    for (var i = 0; i < dataLength; i++) {\\n      data[i] ^= 0xFF;\\n    }\\n    this.buffer = data;\\n    this.bufferLength = dataLength;\\n    this.eof = true;\\n  };\\n  return Jbig2Stream;\\n}();\\nexports.Jbig2Stream = Jbig2Stream;\\n\\n/***/ }),\\n/* 131 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Jbig2Image = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\\n\\nvar _ccitt = __w_pdfjs_require__(65);\\n\\nvar Jbig2Error = function Jbig2ErrorClosure() {\\n  function Jbig2Error(msg) {\\n    this.message = 'JBIG2 error: ' + msg;\\n  }\\n  Jbig2Error.prototype = new Error();\\n  Jbig2Error.prototype.name = 'Jbig2Error';\\n  Jbig2Error.constructor = Jbig2Error;\\n  return Jbig2Error;\\n}();\\nvar Jbig2Image = function Jbig2ImageClosure() {\\n  function ContextCache() {}\\n  ContextCache.prototype = {\\n    getContexts: function getContexts(id) {\\n      if (id in this) {\\n        return this[id];\\n      }\\n      return this[id] = new Int8Array(1 << 16);\\n    }\\n  };\\n  function DecodingContext(data, start, end) {\\n    this.data = data;\\n    this.start = start;\\n    this.end = end;\\n  }\\n  DecodingContext.prototype = {\\n    get decoder() {\\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\\n      return (0, _util.shadow)(this, 'decoder', decoder);\\n    },\\n    get contextCache() {\\n      var cache = new ContextCache();\\n      return (0, _util.shadow)(this, 'contextCache', cache);\\n    }\\n  };\\n  function decodeInteger(contextCache, procedure, decoder) {\\n    var contexts = contextCache.getContexts(procedure);\\n    var prev = 1;\\n    function readBits(length) {\\n      var v = 0;\\n      for (var i = 0; i < length; i++) {\\n        var bit = decoder.readBit(contexts, prev);\\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\\n        v = v << 1 | bit;\\n      }\\n      return v >>> 0;\\n    }\\n    var sign = readBits(1);\\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\\n    return sign === 0 ? value : value > 0 ? -value : null;\\n  }\\n  function decodeIAID(contextCache, decoder, codeLength) {\\n    var contexts = contextCache.getContexts('IAID');\\n    var prev = 1;\\n    for (var i = 0; i < codeLength; i++) {\\n      var bit = decoder.readBit(contexts, prev);\\n      prev = prev << 1 | bit;\\n    }\\n    if (codeLength < 31) {\\n      return prev & (1 << codeLength) - 1;\\n    }\\n    return prev & 0x7FFFFFFF;\\n  }\\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\\n  var CodingTemplates = [[{\\n    x: -1,\\n    y: -2\\n  }, {\\n    x: 0,\\n    y: -2\\n  }, {\\n    x: 1,\\n    y: -2\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: 2,\\n    y: -1\\n  }, {\\n    x: -4,\\n    y: 0\\n  }, {\\n    x: -3,\\n    y: 0\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }], [{\\n    x: -1,\\n    y: -2\\n  }, {\\n    x: 0,\\n    y: -2\\n  }, {\\n    x: 1,\\n    y: -2\\n  }, {\\n    x: 2,\\n    y: -2\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: 2,\\n    y: -1\\n  }, {\\n    x: -3,\\n    y: 0\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }], [{\\n    x: -1,\\n    y: -2\\n  }, {\\n    x: 0,\\n    y: -2\\n  }, {\\n    x: 1,\\n    y: -2\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }], [{\\n    x: -3,\\n    y: -1\\n  }, {\\n    x: -2,\\n    y: -1\\n  }, {\\n    x: -1,\\n    y: -1\\n  }, {\\n    x: 0,\\n    y: -1\\n  }, {\\n    x: 1,\\n    y: -1\\n  }, {\\n    x: -4,\\n    y: 0\\n  }, {\\n    x: -3,\\n    y: 0\\n  }, {\\n    x: -2,\\n    y: 0\\n  }, {\\n    x: -1,\\n    y: 0\\n  }]];\\n  var RefinementTemplates = [{\\n    coding: [{\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: 1,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }],\\n    reference: [{\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: 1,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }, {\\n      x: 0,\\n      y: 0\\n    }, {\\n      x: 1,\\n      y: 0\\n    }, {\\n      x: -1,\\n      y: 1\\n    }, {\\n      x: 0,\\n      y: 1\\n    }, {\\n      x: 1,\\n      y: 1\\n    }]\\n  }, {\\n    coding: [{\\n      x: -1,\\n      y: -1\\n    }, {\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: 1,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }],\\n    reference: [{\\n      x: 0,\\n      y: -1\\n    }, {\\n      x: -1,\\n      y: 0\\n    }, {\\n      x: 0,\\n      y: 0\\n    }, {\\n      x: 1,\\n      y: 0\\n    }, {\\n      x: 0,\\n      y: 1\\n    }, {\\n      x: 1,\\n      y: 1\\n    }]\\n  }];\\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\\n  var RefinementReusedContexts = [0x0020, 0x0008];\\n  function decodeBitmapTemplate0(width, height, decodingContext) {\\n    var decoder = decodingContext.decoder;\\n    var contexts = decodingContext.contextCache.getContexts('GB');\\n    var contextLabel,\\n        i,\\n        j,\\n        pixel,\\n        row,\\n        row1,\\n        row2,\\n        bitmap = [];\\n    var OLD_PIXEL_MASK = 0x7BF7;\\n    for (i = 0; i < height; i++) {\\n      row = bitmap[i] = new Uint8Array(width);\\n      row1 = i < 1 ? row : bitmap[i - 1];\\n      row2 = i < 2 ? row : bitmap[i - 2];\\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\\n      for (j = 0; j < width; j++) {\\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\\n    if (mmr) {\\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\\n      return decodeMMRBitmap(input, width, height, false);\\n    }\\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\\n      return decodeBitmapTemplate0(width, height, decodingContext);\\n    }\\n    var useskip = !!skip;\\n    var template = CodingTemplates[templateIndex].concat(at);\\n    template.sort(function (a, b) {\\n      return a.y - b.y || a.x - b.x;\\n    });\\n    var templateLength = template.length;\\n    var templateX = new Int8Array(templateLength);\\n    var templateY = new Int8Array(templateLength);\\n    var changingTemplateEntries = [];\\n    var reuseMask = 0,\\n        minX = 0,\\n        maxX = 0,\\n        minY = 0;\\n    var c, k;\\n    for (k = 0; k < templateLength; k++) {\\n      templateX[k] = template[k].x;\\n      templateY[k] = template[k].y;\\n      minX = Math.min(minX, template[k].x);\\n      maxX = Math.max(maxX, template[k].x);\\n      minY = Math.min(minY, template[k].y);\\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\\n        reuseMask |= 1 << templateLength - 1 - k;\\n      } else {\\n        changingTemplateEntries.push(k);\\n      }\\n    }\\n    var changingEntriesLength = changingTemplateEntries.length;\\n    var changingTemplateX = new Int8Array(changingEntriesLength);\\n    var changingTemplateY = new Int8Array(changingEntriesLength);\\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\\n    for (c = 0; c < changingEntriesLength; c++) {\\n      k = changingTemplateEntries[c];\\n      changingTemplateX[c] = template[k].x;\\n      changingTemplateY[c] = template[k].y;\\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\\n    }\\n    var sbb_left = -minX;\\n    var sbb_top = -minY;\\n    var sbb_right = width - maxX;\\n    var pseudoPixelContext = ReusedContexts[templateIndex];\\n    var row = new Uint8Array(width);\\n    var bitmap = [];\\n    var decoder = decodingContext.decoder;\\n    var contexts = decodingContext.contextCache.getContexts('GB');\\n    var ltp = 0,\\n        j,\\n        i0,\\n        j0,\\n        contextLabel = 0,\\n        bit,\\n        shift;\\n    for (var i = 0; i < height; i++) {\\n      if (prediction) {\\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\\n        ltp ^= sltp;\\n        if (ltp) {\\n          bitmap.push(row);\\n          continue;\\n        }\\n      }\\n      row = new Uint8Array(row);\\n      bitmap.push(row);\\n      for (j = 0; j < width; j++) {\\n        if (useskip && skip[i][j]) {\\n          row[j] = 0;\\n          continue;\\n        }\\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\\n          contextLabel = contextLabel << 1 & reuseMask;\\n          for (k = 0; k < changingEntriesLength; k++) {\\n            i0 = i + changingTemplateY[k];\\n            j0 = j + changingTemplateX[k];\\n            bit = bitmap[i0][j0];\\n            if (bit) {\\n              bit = changingTemplateBit[k];\\n              contextLabel |= bit;\\n            }\\n          }\\n        } else {\\n          contextLabel = 0;\\n          shift = templateLength - 1;\\n          for (k = 0; k < templateLength; k++, shift--) {\\n            j0 = j + templateX[k];\\n            if (j0 >= 0 && j0 < width) {\\n              i0 = i + templateY[k];\\n              if (i0 >= 0) {\\n                bit = bitmap[i0][j0];\\n                if (bit) {\\n                  contextLabel |= bit << shift;\\n                }\\n              }\\n            }\\n          }\\n        }\\n        var pixel = decoder.readBit(contexts, contextLabel);\\n        row[j] = pixel;\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\\n    if (templateIndex === 0) {\\n      codingTemplate = codingTemplate.concat([at[0]]);\\n    }\\n    var codingTemplateLength = codingTemplate.length;\\n    var codingTemplateX = new Int32Array(codingTemplateLength);\\n    var codingTemplateY = new Int32Array(codingTemplateLength);\\n    var k;\\n    for (k = 0; k < codingTemplateLength; k++) {\\n      codingTemplateX[k] = codingTemplate[k].x;\\n      codingTemplateY[k] = codingTemplate[k].y;\\n    }\\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\\n    if (templateIndex === 0) {\\n      referenceTemplate = referenceTemplate.concat([at[1]]);\\n    }\\n    var referenceTemplateLength = referenceTemplate.length;\\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\\n    for (k = 0; k < referenceTemplateLength; k++) {\\n      referenceTemplateX[k] = referenceTemplate[k].x;\\n      referenceTemplateY[k] = referenceTemplate[k].y;\\n    }\\n    var referenceWidth = referenceBitmap[0].length;\\n    var referenceHeight = referenceBitmap.length;\\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\\n    var bitmap = [];\\n    var decoder = decodingContext.decoder;\\n    var contexts = decodingContext.contextCache.getContexts('GR');\\n    var ltp = 0;\\n    for (var i = 0; i < height; i++) {\\n      if (prediction) {\\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\\n        ltp ^= sltp;\\n        if (ltp) {\\n          throw new Jbig2Error('prediction is not supported');\\n        }\\n      }\\n      var row = new Uint8Array(width);\\n      bitmap.push(row);\\n      for (var j = 0; j < width; j++) {\\n        var i0, j0;\\n        var contextLabel = 0;\\n        for (k = 0; k < codingTemplateLength; k++) {\\n          i0 = i + codingTemplateY[k];\\n          j0 = j + codingTemplateX[k];\\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\\n            contextLabel <<= 1;\\n          } else {\\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\\n          }\\n        }\\n        for (k = 0; k < referenceTemplateLength; k++) {\\n          i0 = i + referenceTemplateY[k] - offsetY;\\n          j0 = j + referenceTemplateX[k] - offsetX;\\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\\n            contextLabel <<= 1;\\n          } else {\\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\\n          }\\n        }\\n        var pixel = decoder.readBit(contexts, contextLabel);\\n        row[j] = pixel;\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\\n    if (huffman && refinement) {\\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\\n    }\\n    var newSymbols = [];\\n    var currentHeight = 0;\\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\\n    var decoder = decodingContext.decoder;\\n    var contextCache = decodingContext.contextCache;\\n    var tableB1 = void 0,\\n        symbolWidths = void 0;\\n    if (huffman) {\\n      tableB1 = getStandardTable(1);\\n      symbolWidths = [];\\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\\n    }\\n    while (newSymbols.length < numberOfNewSymbols) {\\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\\n      currentHeight += deltaHeight;\\n      var currentWidth = 0,\\n          totalWidth = 0;\\n      var firstSymbol = huffman ? symbolWidths.length : 0;\\n      while (true) {\\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\\n        if (deltaWidth === null) {\\n          break;\\n        }\\n        currentWidth += deltaWidth;\\n        totalWidth += currentWidth;\\n        var bitmap;\\n        if (refinement) {\\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\\n          if (numberOfInstances > 1) {\\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\\n          } else {\\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\\n          }\\n          newSymbols.push(bitmap);\\n        } else if (huffman) {\\n          symbolWidths.push(currentWidth);\\n        } else {\\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\\n          newSymbols.push(bitmap);\\n        }\\n      }\\n      if (huffman && !refinement) {\\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\\n        huffmanInput.byteAlign();\\n        var collectiveBitmap = void 0;\\n        if (bitmapSize === 0) {\\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\\n        } else {\\n          var originalEnd = huffmanInput.end;\\n          var bitmapEnd = huffmanInput.position + bitmapSize;\\n          huffmanInput.end = bitmapEnd;\\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\\n          huffmanInput.end = originalEnd;\\n          huffmanInput.position = bitmapEnd;\\n        }\\n        var numberOfSymbolsDecoded = symbolWidths.length;\\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\\n          newSymbols.push(collectiveBitmap);\\n        } else {\\n          var _i = void 0,\\n              y = void 0,\\n              xMin = 0,\\n              xMax = void 0,\\n              bitmapWidth = void 0,\\n              symbolBitmap = void 0;\\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\\n            bitmapWidth = symbolWidths[_i];\\n            xMax = xMin + bitmapWidth;\\n            symbolBitmap = [];\\n            for (y = 0; y < currentHeight; y++) {\\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\\n            }\\n            newSymbols.push(symbolBitmap);\\n            xMin = xMax;\\n          }\\n        }\\n      }\\n    }\\n    var exportedSymbols = [];\\n    var flags = [],\\n        currentFlag = false;\\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\\n    while (flags.length < totalSymbolsLength) {\\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\\n      while (runLength--) {\\n        flags.push(currentFlag);\\n      }\\n      currentFlag = !currentFlag;\\n    }\\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\\n      if (flags[i]) {\\n        exportedSymbols.push(symbols[i]);\\n      }\\n    }\\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\\n      if (flags[i]) {\\n        exportedSymbols.push(newSymbols[j]);\\n      }\\n    }\\n    return exportedSymbols;\\n  }\\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\\n    if (huffman && refinement) {\\n      throw new Jbig2Error('refinement with Huffman is not supported');\\n    }\\n    var bitmap = [];\\n    var i, row;\\n    for (i = 0; i < height; i++) {\\n      row = new Uint8Array(width);\\n      if (defaultPixelValue) {\\n        for (var j = 0; j < width; j++) {\\n          row[j] = defaultPixelValue;\\n        }\\n      }\\n      bitmap.push(row);\\n    }\\n    var decoder = decodingContext.decoder;\\n    var contextCache = decodingContext.contextCache;\\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\\n    var firstS = 0;\\n    i = 0;\\n    while (i < numberOfSymbolInstances) {\\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\\n      stripT += deltaT;\\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\\n      firstS += deltaFirstS;\\n      var currentS = firstS;\\n      do {\\n        var currentT = 0;\\n        if (stripSize > 1) {\\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\\n        }\\n        var t = stripSize * stripT + currentT;\\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\\n        var symbolBitmap = inputSymbols[symbolId];\\n        var symbolWidth = symbolBitmap[0].length;\\n        var symbolHeight = symbolBitmap.length;\\n        if (applyRefinement) {\\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\n          symbolWidth += rdw;\\n          symbolHeight += rdh;\\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\\n        }\\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\\n        var s2, t2, symbolRow;\\n        if (transposed) {\\n          for (s2 = 0; s2 < symbolHeight; s2++) {\\n            row = bitmap[offsetS + s2];\\n            if (!row) {\\n              continue;\\n            }\\n            symbolRow = symbolBitmap[s2];\\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\\n            switch (combinationOperator) {\\n              case 0:\\n                for (t2 = 0; t2 < maxWidth; t2++) {\\n                  row[offsetT + t2] |= symbolRow[t2];\\n                }\\n                break;\\n              case 2:\\n                for (t2 = 0; t2 < maxWidth; t2++) {\\n                  row[offsetT + t2] ^= symbolRow[t2];\\n                }\\n                break;\\n              default:\\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\n            }\\n          }\\n          currentS += symbolHeight - 1;\\n        } else {\\n          for (t2 = 0; t2 < symbolHeight; t2++) {\\n            row = bitmap[offsetT + t2];\\n            if (!row) {\\n              continue;\\n            }\\n            symbolRow = symbolBitmap[t2];\\n            switch (combinationOperator) {\\n              case 0:\\n                for (s2 = 0; s2 < symbolWidth; s2++) {\\n                  row[offsetS + s2] |= symbolRow[s2];\\n                }\\n                break;\\n              case 2:\\n                for (s2 = 0; s2 < symbolWidth; s2++) {\\n                  row[offsetS + s2] ^= symbolRow[s2];\\n                }\\n                break;\\n              default:\\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\n            }\\n          }\\n          currentS += symbolWidth - 1;\\n        }\\n        i++;\\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\\n        if (deltaS === null) {\\n          break;\\n        }\\n        currentS += deltaS + dsOffset;\\n      } while (true);\\n    }\\n    return bitmap;\\n  }\\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\\n    var at = [];\\n    if (!mmr) {\\n      at.push({\\n        x: -patternWidth,\\n        y: 0\\n      });\\n      if (template === 0) {\\n        at.push({\\n          x: -3,\\n          y: -1\\n        });\\n        at.push({\\n          x: 2,\\n          y: -2\\n        });\\n        at.push({\\n          x: -2,\\n          y: -2\\n        });\\n      }\\n    }\\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\\n    var patterns = [],\\n        i = 0,\\n        patternBitmap = void 0,\\n        xMin = void 0,\\n        xMax = void 0,\\n        y = void 0;\\n    while (i <= maxPatternIndex) {\\n      patternBitmap = [];\\n      xMin = patternWidth * i;\\n      xMax = xMin + patternWidth;\\n      for (y = 0; y < patternHeight; y++) {\\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\\n      }\\n      patterns.push(patternBitmap);\\n      i++;\\n    }\\n    return patterns;\\n  }\\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\\n    var skip = null;\\n    if (enableSkip) {\\n      throw new Jbig2Error('skip is not supported');\\n    }\\n    if (combinationOperator !== 0) {\\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\\n    }\\n    var regionBitmap = [];\\n    var i = void 0,\\n        j = void 0,\\n        row = void 0;\\n    for (i = 0; i < regionHeight; i++) {\\n      row = new Uint8Array(regionWidth);\\n      if (defaultPixelValue) {\\n        for (j = 0; j < regionWidth; j++) {\\n          row[j] = defaultPixelValue;\\n        }\\n      }\\n      regionBitmap.push(row);\\n    }\\n    var numberOfPatterns = patterns.length;\\n    var pattern0 = patterns[0];\\n    var patternWidth = pattern0[0].length,\\n        patternHeight = pattern0.length;\\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\\n    var at = [];\\n    if (!mmr) {\\n      at.push({\\n        x: template <= 1 ? 3 : 2,\\n        y: -1\\n      });\\n      if (template === 0) {\\n        at.push({\\n          x: -3,\\n          y: -1\\n        });\\n        at.push({\\n          x: 2,\\n          y: -2\\n        });\\n        at.push({\\n          x: -2,\\n          y: -2\\n        });\\n      }\\n    }\\n    var grayScaleBitPlanes = [],\\n        mmrInput = void 0,\\n        bitmap = void 0;\\n    if (mmr) {\\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\\n    }\\n    for (i = bitsPerValue - 1; i >= 0; i--) {\\n      if (mmr) {\\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\\n      } else {\\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\\n      }\\n      grayScaleBitPlanes[i] = bitmap;\\n    }\\n    var mg = void 0,\\n        ng = void 0,\\n        bit = void 0,\\n        patternIndex = void 0,\\n        patternBitmap = void 0,\\n        x = void 0,\\n        y = void 0,\\n        patternRow = void 0,\\n        regionRow = void 0;\\n    for (mg = 0; mg < gridHeight; mg++) {\\n      for (ng = 0; ng < gridWidth; ng++) {\\n        bit = 0;\\n        patternIndex = 0;\\n        for (j = bitsPerValue - 1; j >= 0; j--) {\\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\\n          patternIndex |= bit << j;\\n        }\\n        patternBitmap = patterns[patternIndex];\\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\\n          for (i = 0; i < patternHeight; i++) {\\n            regionRow = regionBitmap[y + i];\\n            patternRow = patternBitmap[i];\\n            for (j = 0; j < patternWidth; j++) {\\n              regionRow[x + j] |= patternRow[j];\\n            }\\n          }\\n        } else {\\n          var regionX = void 0,\\n              regionY = void 0;\\n          for (i = 0; i < patternHeight; i++) {\\n            regionY = y + i;\\n            if (regionY < 0 || regionY >= regionHeight) {\\n              continue;\\n            }\\n            regionRow = regionBitmap[regionY];\\n            patternRow = patternBitmap[i];\\n            for (j = 0; j < patternWidth; j++) {\\n              regionX = x + j;\\n              if (regionX >= 0 && regionX < regionWidth) {\\n                regionRow[regionX] |= patternRow[j];\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n    return regionBitmap;\\n  }\\n  function readSegmentHeader(data, start) {\\n    var segmentHeader = {};\\n    segmentHeader.number = (0, _util.readUint32)(data, start);\\n    var flags = data[start + 4];\\n    var segmentType = flags & 0x3F;\\n    if (!SegmentTypes[segmentType]) {\\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\\n    }\\n    segmentHeader.type = segmentType;\\n    segmentHeader.typeName = SegmentTypes[segmentType];\\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\\n    var pageAssociationFieldSize = !!(flags & 0x40);\\n    var referredFlags = data[start + 5];\\n    var referredToCount = referredFlags >> 5 & 7;\\n    var retainBits = [referredFlags & 31];\\n    var position = start + 6;\\n    if (referredFlags === 7) {\\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\\n      position += 3;\\n      var bytes = referredToCount + 7 >> 3;\\n      retainBits[0] = data[position++];\\n      while (--bytes > 0) {\\n        retainBits.push(data[position++]);\\n      }\\n    } else if (referredFlags === 5 || referredFlags === 6) {\\n      throw new Jbig2Error('invalid referred-to flags');\\n    }\\n    segmentHeader.retainBits = retainBits;\\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\\n    var referredTo = [];\\n    var i, ii;\\n    for (i = 0; i < referredToCount; i++) {\\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\\n      referredTo.push(number);\\n      position += referredToSegmentNumberSize;\\n    }\\n    segmentHeader.referredTo = referredTo;\\n    if (!pageAssociationFieldSize) {\\n      segmentHeader.pageAssociation = data[position++];\\n    } else {\\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\\n      position += 4;\\n    }\\n    segmentHeader.length = (0, _util.readUint32)(data, position);\\n    position += 4;\\n    if (segmentHeader.length === 0xFFFFFFFF) {\\n      if (segmentType === 38) {\\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\\n        var searchPatternLength = 6;\\n        var searchPattern = new Uint8Array(searchPatternLength);\\n        if (!genericRegionMmr) {\\n          searchPattern[0] = 0xFF;\\n          searchPattern[1] = 0xAC;\\n        }\\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\\n        for (i = position, ii = data.length; i < ii; i++) {\\n          var j = 0;\\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\\n            j++;\\n          }\\n          if (j === searchPatternLength) {\\n            segmentHeader.length = i + searchPatternLength;\\n            break;\\n          }\\n        }\\n        if (segmentHeader.length === 0xFFFFFFFF) {\\n          throw new Jbig2Error('segment end was not found');\\n        }\\n      } else {\\n        throw new Jbig2Error('invalid unknown segment length');\\n      }\\n    }\\n    segmentHeader.headerEnd = position;\\n    return segmentHeader;\\n  }\\n  function readSegments(header, data, start, end) {\\n    var segments = [];\\n    var position = start;\\n    while (position < end) {\\n      var segmentHeader = readSegmentHeader(data, position);\\n      position = segmentHeader.headerEnd;\\n      var segment = {\\n        header: segmentHeader,\\n        data: data\\n      };\\n      if (!header.randomAccess) {\\n        segment.start = position;\\n        position += segmentHeader.length;\\n        segment.end = position;\\n      }\\n      segments.push(segment);\\n      if (segmentHeader.type === 51) {\\n        break;\\n      }\\n    }\\n    if (header.randomAccess) {\\n      for (var i = 0, ii = segments.length; i < ii; i++) {\\n        segments[i].start = position;\\n        position += segments[i].header.length;\\n        segments[i].end = position;\\n      }\\n    }\\n    return segments;\\n  }\\n  function readRegionSegmentInformation(data, start) {\\n    return {\\n      width: (0, _util.readUint32)(data, start),\\n      height: (0, _util.readUint32)(data, start + 4),\\n      x: (0, _util.readUint32)(data, start + 8),\\n      y: (0, _util.readUint32)(data, start + 12),\\n      combinationOperator: data[start + 16] & 7\\n    };\\n  }\\n  var RegionSegmentInformationFieldLength = 17;\\n  function processSegment(segment, visitor) {\\n    var header = segment.header;\\n    var data = segment.data,\\n        position = segment.start,\\n        end = segment.end;\\n    var args, at, i, atLength;\\n    switch (header.type) {\\n      case 0:\\n        var dictionary = {};\\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\\n        dictionary.huffman = !!(dictionaryFlags & 1);\\n        dictionary.refinement = !!(dictionaryFlags & 2);\\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\\n        dictionary.template = dictionaryFlags >> 10 & 3;\\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\\n        position += 2;\\n        if (!dictionary.huffman) {\\n          atLength = dictionary.template === 0 ? 4 : 1;\\n          at = [];\\n          for (i = 0; i < atLength; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          dictionary.at = at;\\n        }\\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\\n          at = [];\\n          for (i = 0; i < 2; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          dictionary.refinementAt = at;\\n        }\\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        args = [dictionary, header.number, header.referredTo, data, position, end];\\n        break;\\n      case 6:\\n      case 7:\\n        var textRegion = {};\\n        textRegion.info = readRegionSegmentInformation(data, position);\\n        position += RegionSegmentInformationFieldLength;\\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\\n        position += 2;\\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\\n        textRegion.stripSize = 1 << textRegion.logStripSize;\\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\\n        if (textRegion.huffman) {\\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\\n          position += 2;\\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\\n        }\\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\\n          at = [];\\n          for (i = 0; i < 2; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          textRegion.refinementAt = at;\\n        }\\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        args = [textRegion, header.referredTo, data, position, end];\\n        break;\\n      case 16:\\n        var patternDictionary = {};\\n        var patternDictionaryFlags = data[position++];\\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\\n        patternDictionary.patternWidth = data[position++];\\n        patternDictionary.patternHeight = data[position++];\\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        args = [patternDictionary, header.number, data, position, end];\\n        break;\\n      case 22:\\n      case 23:\\n        var halftoneRegion = {};\\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\\n        position += RegionSegmentInformationFieldLength;\\n        var halftoneRegionFlags = data[position++];\\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\\n        position += 4;\\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\n        position += 4;\\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\n        position += 4;\\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\\n        position += 2;\\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\\n        position += 2;\\n        args = [halftoneRegion, header.referredTo, data, position, end];\\n        break;\\n      case 38:\\n      case 39:\\n        var genericRegion = {};\\n        genericRegion.info = readRegionSegmentInformation(data, position);\\n        position += RegionSegmentInformationFieldLength;\\n        var genericRegionSegmentFlags = data[position++];\\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\\n        if (!genericRegion.mmr) {\\n          atLength = genericRegion.template === 0 ? 4 : 1;\\n          at = [];\\n          for (i = 0; i < atLength; i++) {\\n            at.push({\\n              x: (0, _util.readInt8)(data, position),\\n              y: (0, _util.readInt8)(data, position + 1)\\n            });\\n            position += 2;\\n          }\\n          genericRegion.at = at;\\n        }\\n        args = [genericRegion, data, position, end];\\n        break;\\n      case 48:\\n        var pageInfo = {\\n          width: (0, _util.readUint32)(data, position),\\n          height: (0, _util.readUint32)(data, position + 4),\\n          resolutionX: (0, _util.readUint32)(data, position + 8),\\n          resolutionY: (0, _util.readUint32)(data, position + 12)\\n        };\\n        if (pageInfo.height === 0xFFFFFFFF) {\\n          delete pageInfo.height;\\n        }\\n        var pageSegmentFlags = data[position + 16];\\n        (0, _util.readUint16)(data, position + 17);\\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\\n        args = [pageInfo];\\n        break;\\n      case 49:\\n        break;\\n      case 50:\\n        break;\\n      case 51:\\n        break;\\n      case 53:\\n        args = [header.number, data, position, end];\\n        break;\\n      case 62:\\n        break;\\n      default:\\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\\n    }\\n    var callbackName = 'on' + header.typeName;\\n    if (callbackName in visitor) {\\n      visitor[callbackName].apply(visitor, args);\\n    }\\n  }\\n  function processSegments(segments, visitor) {\\n    for (var i = 0, ii = segments.length; i < ii; i++) {\\n      processSegment(segments[i], visitor);\\n    }\\n  }\\n  function parseJbig2Chunks(chunks) {\\n    var visitor = new SimpleSegmentVisitor();\\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\\n      var chunk = chunks[i];\\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\\n      processSegments(segments, visitor);\\n    }\\n    return visitor.buffer;\\n  }\\n  function SimpleSegmentVisitor() {}\\n  SimpleSegmentVisitor.prototype = {\\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\\n      this.currentPageInfo = info;\\n      var rowSize = info.width + 7 >> 3;\\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\\n      if (info.defaultPixelValue) {\\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\\n          buffer[i] = 0xFF;\\n        }\\n      }\\n      this.buffer = buffer;\\n    },\\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\\n      var pageInfo = this.currentPageInfo;\\n      var width = regionInfo.width,\\n          height = regionInfo.height;\\n      var rowSize = pageInfo.width + 7 >> 3;\\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\\n      var buffer = this.buffer;\\n      var mask0 = 128 >> (regionInfo.x & 7);\\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\\n      var i, j, mask, offset;\\n      switch (combinationOperator) {\\n        case 0:\\n          for (i = 0; i < height; i++) {\\n            mask = mask0;\\n            offset = offset0;\\n            for (j = 0; j < width; j++) {\\n              if (bitmap[i][j]) {\\n                buffer[offset] |= mask;\\n              }\\n              mask >>= 1;\\n              if (!mask) {\\n                mask = 128;\\n                offset++;\\n              }\\n            }\\n            offset0 += rowSize;\\n          }\\n          break;\\n        case 2:\\n          for (i = 0; i < height; i++) {\\n            mask = mask0;\\n            offset = offset0;\\n            for (j = 0; j < width; j++) {\\n              if (bitmap[i][j]) {\\n                buffer[offset] ^= mask;\\n              }\\n              mask >>= 1;\\n              if (!mask) {\\n                mask = 128;\\n                offset++;\\n              }\\n            }\\n            offset0 += rowSize;\\n          }\\n          break;\\n        default:\\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\n      }\\n    },\\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\\n      var regionInfo = region.info;\\n      var decodingContext = new DecodingContext(data, start, end);\\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\\n      this.drawBitmap(regionInfo, bitmap);\\n    },\\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\\n      this.onImmediateGenericRegion.apply(this, arguments);\\n    },\\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\\n      var huffmanTables = void 0,\\n          huffmanInput = void 0;\\n      if (dictionary.huffman) {\\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\\n        huffmanInput = new Reader(data, start, end);\\n      }\\n      var symbols = this.symbols;\\n      if (!symbols) {\\n        this.symbols = symbols = {};\\n      }\\n      var inputSymbols = [];\\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\n        var referredSymbols = symbols[referredSegments[i]];\\n        if (referredSymbols) {\\n          inputSymbols = inputSymbols.concat(referredSymbols);\\n        }\\n      }\\n      var decodingContext = new DecodingContext(data, start, end);\\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\\n    },\\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\\n      var regionInfo = region.info;\\n      var huffmanTables = void 0,\\n          huffmanInput = void 0;\\n      var symbols = this.symbols;\\n      var inputSymbols = [];\\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\n        var referredSymbols = symbols[referredSegments[i]];\\n        if (referredSymbols) {\\n          inputSymbols = inputSymbols.concat(referredSymbols);\\n        }\\n      }\\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\\n      if (region.huffman) {\\n        huffmanInput = new Reader(data, start, end);\\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\\n      }\\n      var decodingContext = new DecodingContext(data, start, end);\\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\\n      this.drawBitmap(regionInfo, bitmap);\\n    },\\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\\n      this.onImmediateTextRegion.apply(this, arguments);\\n    },\\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\\n      var patterns = this.patterns;\\n      if (!patterns) {\\n        this.patterns = patterns = {};\\n      }\\n      var decodingContext = new DecodingContext(data, start, end);\\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\\n    },\\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\\n      var patterns = this.patterns[referredSegments[0]];\\n      var regionInfo = region.info;\\n      var decodingContext = new DecodingContext(data, start, end);\\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\\n      this.drawBitmap(regionInfo, bitmap);\\n    },\\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\\n      this.onImmediateHalftoneRegion.apply(this, arguments);\\n    },\\n    onTables: function onTables(currentSegment, data, start, end) {\\n      var customTables = this.customTables;\\n      if (!customTables) {\\n        this.customTables = customTables = {};\\n      }\\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\\n    }\\n  };\\n  function HuffmanLine(lineData) {\\n    if (lineData.length === 2) {\\n      this.isOOB = true;\\n      this.rangeLow = 0;\\n      this.prefixLength = lineData[0];\\n      this.rangeLength = 0;\\n      this.prefixCode = lineData[1];\\n      this.isLowerRange = false;\\n    } else {\\n      this.isOOB = false;\\n      this.rangeLow = lineData[0];\\n      this.prefixLength = lineData[1];\\n      this.rangeLength = lineData[2];\\n      this.prefixCode = lineData[3];\\n      this.isLowerRange = lineData[4] === 'lower';\\n    }\\n  }\\n  function HuffmanTreeNode(line) {\\n    this.children = [];\\n    if (line) {\\n      this.isLeaf = true;\\n      this.rangeLength = line.rangeLength;\\n      this.rangeLow = line.rangeLow;\\n      this.isLowerRange = line.isLowerRange;\\n      this.isOOB = line.isOOB;\\n    } else {\\n      this.isLeaf = false;\\n    }\\n  }\\n  HuffmanTreeNode.prototype = {\\n    buildTree: function buildTree(line, shift) {\\n      var bit = line.prefixCode >> shift & 1;\\n      if (shift <= 0) {\\n        this.children[bit] = new HuffmanTreeNode(line);\\n      } else {\\n        var node = this.children[bit];\\n        if (!node) {\\n          this.children[bit] = node = new HuffmanTreeNode(null);\\n        }\\n        node.buildTree(line, shift - 1);\\n      }\\n    },\\n    decodeNode: function decodeNode(reader) {\\n      if (this.isLeaf) {\\n        if (this.isOOB) {\\n          return null;\\n        }\\n        var htOffset = reader.readBits(this.rangeLength);\\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\\n      }\\n      var node = this.children[reader.readBit()];\\n      if (!node) {\\n        throw new Jbig2Error('invalid Huffman data');\\n      }\\n      return node.decodeNode(reader);\\n    }\\n  };\\n  function HuffmanTable(lines, prefixCodesDone) {\\n    if (!prefixCodesDone) {\\n      this.assignPrefixCodes(lines);\\n    }\\n    this.rootNode = new HuffmanTreeNode(null);\\n    var i = void 0,\\n        ii = lines.length,\\n        line = void 0;\\n    for (i = 0; i < ii; i++) {\\n      line = lines[i];\\n      if (line.prefixLength > 0) {\\n        this.rootNode.buildTree(line, line.prefixLength - 1);\\n      }\\n    }\\n  }\\n  HuffmanTable.prototype = {\\n    decode: function decode(reader) {\\n      return this.rootNode.decodeNode(reader);\\n    },\\n    assignPrefixCodes: function assignPrefixCodes(lines) {\\n      var linesLength = lines.length,\\n          prefixLengthMax = 0,\\n          i = void 0;\\n      for (i = 0; i < linesLength; i++) {\\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\\n      }\\n      var histogram = new Uint32Array(prefixLengthMax + 1);\\n      for (i = 0; i < linesLength; i++) {\\n        histogram[lines[i].prefixLength]++;\\n      }\\n      var currentLength = 1,\\n          firstCode = 0,\\n          currentCode = void 0,\\n          currentTemp = void 0,\\n          line = void 0;\\n      histogram[0] = 0;\\n      while (currentLength <= prefixLengthMax) {\\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\\n        currentCode = firstCode;\\n        currentTemp = 0;\\n        while (currentTemp < linesLength) {\\n          line = lines[currentTemp];\\n          if (line.prefixLength === currentLength) {\\n            line.prefixCode = currentCode;\\n            currentCode++;\\n          }\\n          currentTemp++;\\n        }\\n        currentLength++;\\n      }\\n    }\\n  };\\n  function decodeTablesSegment(data, start, end) {\\n    var flags = data[start];\\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\\n    var reader = new Reader(data, start + 9, end);\\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\\n    var lines = [];\\n    var prefixLength = void 0,\\n        rangeLength = void 0,\\n        currentRangeLow = lowestValue;\\n    do {\\n      prefixLength = reader.readBits(prefixSizeBits);\\n      rangeLength = reader.readBits(rangeSizeBits);\\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\\n      currentRangeLow += 1 << rangeLength;\\n    } while (currentRangeLow < highestValue);\\n    prefixLength = reader.readBits(prefixSizeBits);\\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\\n    prefixLength = reader.readBits(prefixSizeBits);\\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\\n    if (flags & 1) {\\n      prefixLength = reader.readBits(prefixSizeBits);\\n      lines.push(new HuffmanLine([prefixLength, 0]));\\n    }\\n    return new HuffmanTable(lines, false);\\n  }\\n  var standardTablesCache = {};\\n  function getStandardTable(number) {\\n    var table = standardTablesCache[number];\\n    if (table) {\\n      return table;\\n    }\\n    var lines = void 0;\\n    switch (number) {\\n      case 1:\\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\\n        break;\\n      case 2:\\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\\n        break;\\n      case 3:\\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\\n        break;\\n      case 4:\\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\\n        break;\\n      case 5:\\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\\n        break;\\n      case 6:\\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\\n        break;\\n      case 7:\\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\\n        break;\\n      case 8:\\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\\n        break;\\n      case 9:\\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\\n        break;\\n      case 10:\\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\\n        break;\\n      case 11:\\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\\n        break;\\n      case 12:\\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\\n        break;\\n      case 13:\\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\\n        break;\\n      case 14:\\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\\n        break;\\n      case 15:\\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\\n        break;\\n      default:\\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\\n    }\\n    var length = lines.length,\\n        i = void 0;\\n    for (i = 0; i < length; i++) {\\n      lines[i] = new HuffmanLine(lines[i]);\\n    }\\n    table = new HuffmanTable(lines, true);\\n    standardTablesCache[number] = table;\\n    return table;\\n  }\\n  function Reader(data, start, end) {\\n    this.data = data;\\n    this.start = start;\\n    this.end = end;\\n    this.position = start;\\n    this.shift = -1;\\n    this.currentByte = 0;\\n  }\\n  Reader.prototype = {\\n    readBit: function readBit() {\\n      if (this.shift < 0) {\\n        if (this.position >= this.end) {\\n          throw new Jbig2Error('end of data while reading bit');\\n        }\\n        this.currentByte = this.data[this.position++];\\n        this.shift = 7;\\n      }\\n      var bit = this.currentByte >> this.shift & 1;\\n      this.shift--;\\n      return bit;\\n    },\\n    readBits: function readBits(numBits) {\\n      var result = 0,\\n          i = void 0;\\n      for (i = numBits - 1; i >= 0; i--) {\\n        result |= this.readBit() << i;\\n      }\\n      return result;\\n    },\\n    byteAlign: function byteAlign() {\\n      this.shift = -1;\\n    },\\n    next: function next() {\\n      if (this.position >= this.end) {\\n        return -1;\\n      }\\n      return this.data[this.position++];\\n    }\\n  };\\n  function getCustomHuffmanTable(index, referredTo, customTables) {\\n    var currentIndex = 0,\\n        i = void 0,\\n        ii = referredTo.length,\\n        table = void 0;\\n    for (i = 0; i < ii; i++) {\\n      table = customTables[referredTo[i]];\\n      if (table) {\\n        if (index === currentIndex) {\\n          return table;\\n        }\\n        currentIndex++;\\n      }\\n    }\\n    throw new Jbig2Error('can\\\\'t find custom Huffman table');\\n  }\\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\\n    var codes = [],\\n        i = void 0,\\n        codeLength = void 0;\\n    for (i = 0; i <= 34; i++) {\\n      codeLength = reader.readBits(4);\\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\\n    }\\n    var runCodesTable = new HuffmanTable(codes, false);\\n    codes.length = 0;\\n    for (i = 0; i < numberOfSymbols;) {\\n      codeLength = runCodesTable.decode(reader);\\n      if (codeLength >= 32) {\\n        var repeatedLength = void 0,\\n            numberOfRepeats = void 0,\\n            j = void 0;\\n        switch (codeLength) {\\n          case 32:\\n            if (i === 0) {\\n              throw new Jbig2Error('no previous value in symbol ID table');\\n            }\\n            numberOfRepeats = reader.readBits(2) + 3;\\n            repeatedLength = codes[i - 1].prefixLength;\\n            break;\\n          case 33:\\n            numberOfRepeats = reader.readBits(3) + 3;\\n            repeatedLength = 0;\\n            break;\\n          case 34:\\n            numberOfRepeats = reader.readBits(7) + 11;\\n            repeatedLength = 0;\\n            break;\\n          default:\\n            throw new Jbig2Error('invalid code length in symbol ID table');\\n        }\\n        for (j = 0; j < numberOfRepeats; j++) {\\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\\n          i++;\\n        }\\n      } else {\\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\\n        i++;\\n      }\\n    }\\n    reader.byteAlign();\\n    var symbolIDTable = new HuffmanTable(codes, false);\\n    var customIndex = 0,\\n        tableFirstS = void 0,\\n        tableDeltaS = void 0,\\n        tableDeltaT = void 0;\\n    switch (textRegion.huffmanFS) {\\n      case 0:\\n      case 1:\\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\\n        break;\\n      case 3:\\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman FS selector');\\n    }\\n    switch (textRegion.huffmanDS) {\\n      case 0:\\n      case 1:\\n      case 2:\\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\\n        break;\\n      case 3:\\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DS selector');\\n    }\\n    switch (textRegion.huffmanDT) {\\n      case 0:\\n      case 1:\\n      case 2:\\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\\n        break;\\n      case 3:\\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DT selector');\\n    }\\n    if (textRegion.refinement) {\\n      throw new Jbig2Error('refinement with Huffman is not supported');\\n    }\\n    return {\\n      symbolIDTable: symbolIDTable,\\n      tableFirstS: tableFirstS,\\n      tableDeltaS: tableDeltaS,\\n      tableDeltaT: tableDeltaT\\n    };\\n  }\\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\\n    var customIndex = 0,\\n        tableDeltaHeight = void 0,\\n        tableDeltaWidth = void 0;\\n    switch (dictionary.huffmanDHSelector) {\\n      case 0:\\n      case 1:\\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\\n        break;\\n      case 3:\\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DH selector');\\n    }\\n    switch (dictionary.huffmanDWSelector) {\\n      case 0:\\n      case 1:\\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\\n        break;\\n      case 3:\\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n        customIndex++;\\n        break;\\n      default:\\n        throw new Jbig2Error('invalid Huffman DW selector');\\n    }\\n    var tableBitmapSize = void 0,\\n        tableAggregateInstances = void 0;\\n    if (dictionary.bitmapSizeSelector) {\\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n      customIndex++;\\n    } else {\\n      tableBitmapSize = getStandardTable(1);\\n    }\\n    if (dictionary.aggregationInstancesSelector) {\\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n    } else {\\n      tableAggregateInstances = getStandardTable(1);\\n    }\\n    return {\\n      tableDeltaHeight: tableDeltaHeight,\\n      tableDeltaWidth: tableDeltaWidth,\\n      tableBitmapSize: tableBitmapSize,\\n      tableAggregateInstances: tableAggregateInstances\\n    };\\n  }\\n  function readUncompressedBitmap(reader, width, height) {\\n    var bitmap = [],\\n        x = void 0,\\n        y = void 0,\\n        row = void 0;\\n    for (y = 0; y < height; y++) {\\n      row = new Uint8Array(width);\\n      bitmap.push(row);\\n      for (x = 0; x < width; x++) {\\n        row[x] = reader.readBit();\\n      }\\n      reader.byteAlign();\\n    }\\n    return bitmap;\\n  }\\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\\n    var params = {\\n      K: -1,\\n      Columns: width,\\n      Rows: height,\\n      BlackIs1: true,\\n      EndOfBlock: endOfBlock\\n    };\\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\\n    var bitmap = [],\\n        x = void 0,\\n        y = void 0,\\n        row = void 0,\\n        currentByte = void 0,\\n        shift = void 0,\\n        eof = false;\\n    for (y = 0; y < height; y++) {\\n      row = new Uint8Array(width);\\n      bitmap.push(row);\\n      shift = -1;\\n      for (x = 0; x < width; x++) {\\n        if (shift < 0) {\\n          currentByte = decoder.readNextChar();\\n          if (currentByte === -1) {\\n            currentByte = 0;\\n            eof = true;\\n          }\\n          shift = 7;\\n        }\\n        row[x] = currentByte >> shift & 1;\\n        shift--;\\n      }\\n    }\\n    if (endOfBlock && !eof) {\\n      var lookForEOFLimit = 5;\\n      for (var i = 0; i < lookForEOFLimit; i++) {\\n        if (decoder.readNextChar() === -1) {\\n          break;\\n        }\\n      }\\n    }\\n    return bitmap;\\n  }\\n  function Jbig2Image() {}\\n  Jbig2Image.prototype = {\\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\\n      return parseJbig2Chunks(chunks);\\n    }\\n  };\\n  return Jbig2Image;\\n}();\\nexports.Jbig2Image = Jbig2Image;\\n\\n/***/ }),\\n/* 132 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpegImage = undefined;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar JpegError = function JpegErrorClosure() {\\n  function JpegError(msg) {\\n    this.message = 'JPEG error: ' + msg;\\n  }\\n  JpegError.prototype = new Error();\\n  JpegError.prototype.name = 'JpegError';\\n  JpegError.constructor = JpegError;\\n  return JpegError;\\n}();\\nvar JpegImage = function JpegImageClosure() {\\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\\n  var dctCos1 = 4017;\\n  var dctSin1 = 799;\\n  var dctCos3 = 3406;\\n  var dctSin3 = 2276;\\n  var dctCos6 = 1567;\\n  var dctSin6 = 3784;\\n  var dctSqrt2 = 5793;\\n  var dctSqrt1d2 = 2896;\\n  function JpegImage() {\\n    this.decodeTransform = null;\\n    this.colorTransform = -1;\\n  }\\n  function buildHuffmanTable(codeLengths, values) {\\n    var k = 0,\\n        code = [],\\n        i,\\n        j,\\n        length = 16;\\n    while (length > 0 && !codeLengths[length - 1]) {\\n      length--;\\n    }\\n    code.push({\\n      children: [],\\n      index: 0\\n    });\\n    var p = code[0],\\n        q;\\n    for (i = 0; i < length; i++) {\\n      for (j = 0; j < codeLengths[i]; j++) {\\n        p = code.pop();\\n        p.children[p.index] = values[k];\\n        while (p.index > 0) {\\n          p = code.pop();\\n        }\\n        p.index++;\\n        code.push(p);\\n        while (code.length <= i) {\\n          code.push(q = {\\n            children: [],\\n            index: 0\\n          });\\n          p.children[p.index] = q.children;\\n          p = q;\\n        }\\n        k++;\\n      }\\n      if (i + 1 < length) {\\n        code.push(q = {\\n          children: [],\\n          index: 0\\n        });\\n        p.children[p.index] = q.children;\\n        p = q;\\n      }\\n    }\\n    return code[0].children;\\n  }\\n  function getBlockBufferOffset(component, row, col) {\\n    return 64 * ((component.blocksPerLine + 1) * row + col);\\n  }\\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\\n    var mcusPerLine = frame.mcusPerLine;\\n    var progressive = frame.progressive;\\n    var startOffset = offset,\\n        bitsData = 0,\\n        bitsCount = 0;\\n    function readBit() {\\n      if (bitsCount > 0) {\\n        bitsCount--;\\n        return bitsData >> bitsCount & 1;\\n      }\\n      bitsData = data[offset++];\\n      if (bitsData === 0xFF) {\\n        var nextByte = data[offset++];\\n        if (nextByte) {\\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\\n        }\\n      }\\n      bitsCount = 7;\\n      return bitsData >>> 7;\\n    }\\n    function decodeHuffman(tree) {\\n      var node = tree;\\n      while (true) {\\n        node = node[readBit()];\\n        if (typeof node === 'number') {\\n          return node;\\n        }\\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\\n          throw new JpegError('invalid huffman sequence');\\n        }\\n      }\\n    }\\n    function receive(length) {\\n      var n = 0;\\n      while (length > 0) {\\n        n = n << 1 | readBit();\\n        length--;\\n      }\\n      return n;\\n    }\\n    function receiveAndExtend(length) {\\n      if (length === 1) {\\n        return readBit() === 1 ? 1 : -1;\\n      }\\n      var n = receive(length);\\n      if (n >= 1 << length - 1) {\\n        return n;\\n      }\\n      return n + (-1 << length) + 1;\\n    }\\n    function decodeBaseline(component, offset) {\\n      var t = decodeHuffman(component.huffmanTableDC);\\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\\n      component.blockData[offset] = component.pred += diff;\\n      var k = 1;\\n      while (k < 64) {\\n        var rs = decodeHuffman(component.huffmanTableAC);\\n        var s = rs & 15,\\n            r = rs >> 4;\\n        if (s === 0) {\\n          if (r < 15) {\\n            break;\\n          }\\n          k += 16;\\n          continue;\\n        }\\n        k += r;\\n        var z = dctZigZag[k];\\n        component.blockData[offset + z] = receiveAndExtend(s);\\n        k++;\\n      }\\n    }\\n    function decodeDCFirst(component, offset) {\\n      var t = decodeHuffman(component.huffmanTableDC);\\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\\n      component.blockData[offset] = component.pred += diff;\\n    }\\n    function decodeDCSuccessive(component, offset) {\\n      component.blockData[offset] |= readBit() << successive;\\n    }\\n    var eobrun = 0;\\n    function decodeACFirst(component, offset) {\\n      if (eobrun > 0) {\\n        eobrun--;\\n        return;\\n      }\\n      var k = spectralStart,\\n          e = spectralEnd;\\n      while (k <= e) {\\n        var rs = decodeHuffman(component.huffmanTableAC);\\n        var s = rs & 15,\\n            r = rs >> 4;\\n        if (s === 0) {\\n          if (r < 15) {\\n            eobrun = receive(r) + (1 << r) - 1;\\n            break;\\n          }\\n          k += 16;\\n          continue;\\n        }\\n        k += r;\\n        var z = dctZigZag[k];\\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\\n        k++;\\n      }\\n    }\\n    var successiveACState = 0,\\n        successiveACNextValue;\\n    function decodeACSuccessive(component, offset) {\\n      var k = spectralStart;\\n      var e = spectralEnd;\\n      var r = 0;\\n      var s;\\n      var rs;\\n      while (k <= e) {\\n        var offsetZ = offset + dctZigZag[k];\\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\\n        switch (successiveACState) {\\n          case 0:\\n            rs = decodeHuffman(component.huffmanTableAC);\\n            s = rs & 15;\\n            r = rs >> 4;\\n            if (s === 0) {\\n              if (r < 15) {\\n                eobrun = receive(r) + (1 << r);\\n                successiveACState = 4;\\n              } else {\\n                r = 16;\\n                successiveACState = 1;\\n              }\\n            } else {\\n              if (s !== 1) {\\n                throw new JpegError('invalid ACn encoding');\\n              }\\n              successiveACNextValue = receiveAndExtend(s);\\n              successiveACState = r ? 2 : 3;\\n            }\\n            continue;\\n          case 1:\\n          case 2:\\n            if (component.blockData[offsetZ]) {\\n              component.blockData[offsetZ] += sign * (readBit() << successive);\\n            } else {\\n              r--;\\n              if (r === 0) {\\n                successiveACState = successiveACState === 2 ? 3 : 0;\\n              }\\n            }\\n            break;\\n          case 3:\\n            if (component.blockData[offsetZ]) {\\n              component.blockData[offsetZ] += sign * (readBit() << successive);\\n            } else {\\n              component.blockData[offsetZ] = successiveACNextValue << successive;\\n              successiveACState = 0;\\n            }\\n            break;\\n          case 4:\\n            if (component.blockData[offsetZ]) {\\n              component.blockData[offsetZ] += sign * (readBit() << successive);\\n            }\\n            break;\\n        }\\n        k++;\\n      }\\n      if (successiveACState === 4) {\\n        eobrun--;\\n        if (eobrun === 0) {\\n          successiveACState = 0;\\n        }\\n      }\\n    }\\n    function decodeMcu(component, decode, mcu, row, col) {\\n      var mcuRow = mcu / mcusPerLine | 0;\\n      var mcuCol = mcu % mcusPerLine;\\n      var blockRow = mcuRow * component.v + row;\\n      var blockCol = mcuCol * component.h + col;\\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n      decode(component, offset);\\n    }\\n    function decodeBlock(component, decode, mcu) {\\n      var blockRow = mcu / component.blocksPerLine | 0;\\n      var blockCol = mcu % component.blocksPerLine;\\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n      decode(component, offset);\\n    }\\n    var componentsLength = components.length;\\n    var component, i, j, k, n;\\n    var decodeFn;\\n    if (progressive) {\\n      if (spectralStart === 0) {\\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\\n      } else {\\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\\n      }\\n    } else {\\n      decodeFn = decodeBaseline;\\n    }\\n    var mcu = 0,\\n        fileMarker;\\n    var mcuExpected;\\n    if (componentsLength === 1) {\\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\\n    } else {\\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\\n    }\\n    var h, v;\\n    while (mcu < mcuExpected) {\\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\\n      for (i = 0; i < componentsLength; i++) {\\n        components[i].pred = 0;\\n      }\\n      eobrun = 0;\\n      if (componentsLength === 1) {\\n        component = components[0];\\n        for (n = 0; n < mcuToRead; n++) {\\n          decodeBlock(component, decodeFn, mcu);\\n          mcu++;\\n        }\\n      } else {\\n        for (n = 0; n < mcuToRead; n++) {\\n          for (i = 0; i < componentsLength; i++) {\\n            component = components[i];\\n            h = component.h;\\n            v = component.v;\\n            for (j = 0; j < v; j++) {\\n              for (k = 0; k < h; k++) {\\n                decodeMcu(component, decodeFn, mcu, j, k);\\n              }\\n            }\\n          }\\n          mcu++;\\n        }\\n      }\\n      bitsCount = 0;\\n      fileMarker = findNextFileMarker(data, offset);\\n      if (fileMarker && fileMarker.invalid) {\\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\\n        offset = fileMarker.offset;\\n      }\\n      var marker = fileMarker && fileMarker.marker;\\n      if (!marker || marker <= 0xFF00) {\\n        throw new JpegError('marker was not found');\\n      }\\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\\n        offset += 2;\\n      } else {\\n        break;\\n      }\\n    }\\n    fileMarker = findNextFileMarker(data, offset);\\n    if (fileMarker && fileMarker.invalid) {\\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\\n      offset = fileMarker.offset;\\n    }\\n    return offset - startOffset;\\n  }\\n  function quantizeAndInverse(component, blockBufferOffset, p) {\\n    var qt = component.quantizationTable,\\n        blockData = component.blockData;\\n    var v0, v1, v2, v3, v4, v5, v6, v7;\\n    var p0, p1, p2, p3, p4, p5, p6, p7;\\n    var t;\\n    if (!qt) {\\n      throw new JpegError('missing required Quantization Table.');\\n    }\\n    for (var row = 0; row < 64; row += 8) {\\n      p0 = blockData[blockBufferOffset + row];\\n      p1 = blockData[blockBufferOffset + row + 1];\\n      p2 = blockData[blockBufferOffset + row + 2];\\n      p3 = blockData[blockBufferOffset + row + 3];\\n      p4 = blockData[blockBufferOffset + row + 4];\\n      p5 = blockData[blockBufferOffset + row + 5];\\n      p6 = blockData[blockBufferOffset + row + 6];\\n      p7 = blockData[blockBufferOffset + row + 7];\\n      p0 *= qt[row];\\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\n        t = dctSqrt2 * p0 + 512 >> 10;\\n        p[row] = t;\\n        p[row + 1] = t;\\n        p[row + 2] = t;\\n        p[row + 3] = t;\\n        p[row + 4] = t;\\n        p[row + 5] = t;\\n        p[row + 6] = t;\\n        p[row + 7] = t;\\n        continue;\\n      }\\n      p1 *= qt[row + 1];\\n      p2 *= qt[row + 2];\\n      p3 *= qt[row + 3];\\n      p4 *= qt[row + 4];\\n      p5 *= qt[row + 5];\\n      p6 *= qt[row + 6];\\n      p7 *= qt[row + 7];\\n      v0 = dctSqrt2 * p0 + 128 >> 8;\\n      v1 = dctSqrt2 * p4 + 128 >> 8;\\n      v2 = p2;\\n      v3 = p6;\\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\\n      v5 = p3 << 4;\\n      v6 = p5 << 4;\\n      v0 = v0 + v1 + 1 >> 1;\\n      v1 = v0 - v1;\\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\\n      v3 = t;\\n      v4 = v4 + v6 + 1 >> 1;\\n      v6 = v4 - v6;\\n      v7 = v7 + v5 + 1 >> 1;\\n      v5 = v7 - v5;\\n      v0 = v0 + v3 + 1 >> 1;\\n      v3 = v0 - v3;\\n      v1 = v1 + v2 + 1 >> 1;\\n      v2 = v1 - v2;\\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\n      v7 = t;\\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\n      v6 = t;\\n      p[row] = v0 + v7;\\n      p[row + 7] = v0 - v7;\\n      p[row + 1] = v1 + v6;\\n      p[row + 6] = v1 - v6;\\n      p[row + 2] = v2 + v5;\\n      p[row + 5] = v2 - v5;\\n      p[row + 3] = v3 + v4;\\n      p[row + 4] = v3 - v4;\\n    }\\n    for (var col = 0; col < 8; ++col) {\\n      p0 = p[col];\\n      p1 = p[col + 8];\\n      p2 = p[col + 16];\\n      p3 = p[col + 24];\\n      p4 = p[col + 32];\\n      p5 = p[col + 40];\\n      p6 = p[col + 48];\\n      p7 = p[col + 56];\\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\n        t = dctSqrt2 * p0 + 8192 >> 14;\\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\\n        blockData[blockBufferOffset + col] = t;\\n        blockData[blockBufferOffset + col + 8] = t;\\n        blockData[blockBufferOffset + col + 16] = t;\\n        blockData[blockBufferOffset + col + 24] = t;\\n        blockData[blockBufferOffset + col + 32] = t;\\n        blockData[blockBufferOffset + col + 40] = t;\\n        blockData[blockBufferOffset + col + 48] = t;\\n        blockData[blockBufferOffset + col + 56] = t;\\n        continue;\\n      }\\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\\n      v2 = p2;\\n      v3 = p6;\\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\\n      v5 = p3;\\n      v6 = p5;\\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\\n      v1 = v0 - v1;\\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\\n      v3 = t;\\n      v4 = v4 + v6 + 1 >> 1;\\n      v6 = v4 - v6;\\n      v7 = v7 + v5 + 1 >> 1;\\n      v5 = v7 - v5;\\n      v0 = v0 + v3 + 1 >> 1;\\n      v3 = v0 - v3;\\n      v1 = v1 + v2 + 1 >> 1;\\n      v2 = v1 - v2;\\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\n      v7 = t;\\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\n      v6 = t;\\n      p0 = v0 + v7;\\n      p7 = v0 - v7;\\n      p1 = v1 + v6;\\n      p6 = v1 - v6;\\n      p2 = v2 + v5;\\n      p5 = v2 - v5;\\n      p3 = v3 + v4;\\n      p4 = v3 - v4;\\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\\n      blockData[blockBufferOffset + col] = p0;\\n      blockData[blockBufferOffset + col + 8] = p1;\\n      blockData[blockBufferOffset + col + 16] = p2;\\n      blockData[blockBufferOffset + col + 24] = p3;\\n      blockData[blockBufferOffset + col + 32] = p4;\\n      blockData[blockBufferOffset + col + 40] = p5;\\n      blockData[blockBufferOffset + col + 48] = p6;\\n      blockData[blockBufferOffset + col + 56] = p7;\\n    }\\n  }\\n  function buildComponentData(frame, component) {\\n    var blocksPerLine = component.blocksPerLine;\\n    var blocksPerColumn = component.blocksPerColumn;\\n    var computationBuffer = new Int16Array(64);\\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n        quantizeAndInverse(component, offset, computationBuffer);\\n      }\\n    }\\n    return component.blockData;\\n  }\\n  function findNextFileMarker(data, currentPos, startPos) {\\n    function peekUint16(pos) {\\n      return data[pos] << 8 | data[pos + 1];\\n    }\\n    var maxPos = data.length - 1;\\n    var newPos = startPos < currentPos ? startPos : currentPos;\\n    if (currentPos >= maxPos) {\\n      return null;\\n    }\\n    var currentMarker = peekUint16(currentPos);\\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\\n      return {\\n        invalid: null,\\n        marker: currentMarker,\\n        offset: currentPos\\n      };\\n    }\\n    var newMarker = peekUint16(newPos);\\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\\n      if (++newPos >= maxPos) {\\n        return null;\\n      }\\n      newMarker = peekUint16(newPos);\\n    }\\n    return {\\n      invalid: currentMarker.toString(16),\\n      marker: newMarker,\\n      offset: newPos\\n    };\\n  }\\n  JpegImage.prototype = {\\n    parse: function parse(data) {\\n      function readUint16() {\\n        var value = data[offset] << 8 | data[offset + 1];\\n        offset += 2;\\n        return value;\\n      }\\n      function readDataBlock() {\\n        var length = readUint16();\\n        var endOffset = offset + length - 2;\\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\\n        if (fileMarker && fileMarker.invalid) {\\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\\n          endOffset = fileMarker.offset;\\n        }\\n        var array = data.subarray(offset, endOffset);\\n        offset += array.length;\\n        return array;\\n      }\\n      function prepareComponents(frame) {\\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\\n        for (var i = 0; i < frame.components.length; i++) {\\n          component = frame.components[i];\\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\\n          var blocksPerLineForMcu = mcusPerLine * component.h;\\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\\n          component.blockData = new Int16Array(blocksBufferSize);\\n          component.blocksPerLine = blocksPerLine;\\n          component.blocksPerColumn = blocksPerColumn;\\n        }\\n        frame.mcusPerLine = mcusPerLine;\\n        frame.mcusPerColumn = mcusPerColumn;\\n      }\\n      var offset = 0;\\n      var jfif = null;\\n      var adobe = null;\\n      var frame, resetInterval;\\n      var quantizationTables = [];\\n      var huffmanTablesAC = [],\\n          huffmanTablesDC = [];\\n      var fileMarker = readUint16();\\n      if (fileMarker !== 0xFFD8) {\\n        throw new JpegError('SOI not found');\\n      }\\n      fileMarker = readUint16();\\n      while (fileMarker !== 0xFFD9) {\\n        var i, j, l;\\n        switch (fileMarker) {\\n          case 0xFFE0:\\n          case 0xFFE1:\\n          case 0xFFE2:\\n          case 0xFFE3:\\n          case 0xFFE4:\\n          case 0xFFE5:\\n          case 0xFFE6:\\n          case 0xFFE7:\\n          case 0xFFE8:\\n          case 0xFFE9:\\n          case 0xFFEA:\\n          case 0xFFEB:\\n          case 0xFFEC:\\n          case 0xFFED:\\n          case 0xFFEE:\\n          case 0xFFEF:\\n          case 0xFFFE:\\n            var appData = readDataBlock();\\n            if (fileMarker === 0xFFE0) {\\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\\n                jfif = {\\n                  version: {\\n                    major: appData[5],\\n                    minor: appData[6]\\n                  },\\n                  densityUnits: appData[7],\\n                  xDensity: appData[8] << 8 | appData[9],\\n                  yDensity: appData[10] << 8 | appData[11],\\n                  thumbWidth: appData[12],\\n                  thumbHeight: appData[13],\\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\\n                };\\n              }\\n            }\\n            if (fileMarker === 0xFFEE) {\\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\\n                adobe = {\\n                  version: appData[5] << 8 | appData[6],\\n                  flags0: appData[7] << 8 | appData[8],\\n                  flags1: appData[9] << 8 | appData[10],\\n                  transformCode: appData[11]\\n                };\\n              }\\n            }\\n            break;\\n          case 0xFFDB:\\n            var quantizationTablesLength = readUint16();\\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\\n            var z;\\n            while (offset < quantizationTablesEnd) {\\n              var quantizationTableSpec = data[offset++];\\n              var tableData = new Uint16Array(64);\\n              if (quantizationTableSpec >> 4 === 0) {\\n                for (j = 0; j < 64; j++) {\\n                  z = dctZigZag[j];\\n                  tableData[z] = data[offset++];\\n                }\\n              } else if (quantizationTableSpec >> 4 === 1) {\\n                for (j = 0; j < 64; j++) {\\n                  z = dctZigZag[j];\\n                  tableData[z] = readUint16();\\n                }\\n              } else {\\n                throw new JpegError('DQT - invalid table spec');\\n              }\\n              quantizationTables[quantizationTableSpec & 15] = tableData;\\n            }\\n            break;\\n          case 0xFFC0:\\n          case 0xFFC1:\\n          case 0xFFC2:\\n            if (frame) {\\n              throw new JpegError('Only single frame JPEGs supported');\\n            }\\n            readUint16();\\n            frame = {};\\n            frame.extended = fileMarker === 0xFFC1;\\n            frame.progressive = fileMarker === 0xFFC2;\\n            frame.precision = data[offset++];\\n            frame.scanLines = readUint16();\\n            frame.samplesPerLine = readUint16();\\n            frame.components = [];\\n            frame.componentIds = {};\\n            var componentsCount = data[offset++],\\n                componentId;\\n            var maxH = 0,\\n                maxV = 0;\\n            for (i = 0; i < componentsCount; i++) {\\n              componentId = data[offset];\\n              var h = data[offset + 1] >> 4;\\n              var v = data[offset + 1] & 15;\\n              if (maxH < h) {\\n                maxH = h;\\n              }\\n              if (maxV < v) {\\n                maxV = v;\\n              }\\n              var qId = data[offset + 2];\\n              l = frame.components.push({\\n                h: h,\\n                v: v,\\n                quantizationId: qId,\\n                quantizationTable: null\\n              });\\n              frame.componentIds[componentId] = l - 1;\\n              offset += 3;\\n            }\\n            frame.maxH = maxH;\\n            frame.maxV = maxV;\\n            prepareComponents(frame);\\n            break;\\n          case 0xFFC4:\\n            var huffmanLength = readUint16();\\n            for (i = 2; i < huffmanLength;) {\\n              var huffmanTableSpec = data[offset++];\\n              var codeLengths = new Uint8Array(16);\\n              var codeLengthSum = 0;\\n              for (j = 0; j < 16; j++, offset++) {\\n                codeLengthSum += codeLengths[j] = data[offset];\\n              }\\n              var huffmanValues = new Uint8Array(codeLengthSum);\\n              for (j = 0; j < codeLengthSum; j++, offset++) {\\n                huffmanValues[j] = data[offset];\\n              }\\n              i += 17 + codeLengthSum;\\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\\n            }\\n            break;\\n          case 0xFFDD:\\n            readUint16();\\n            resetInterval = readUint16();\\n            break;\\n          case 0xFFDA:\\n            readUint16();\\n            var selectorsCount = data[offset++];\\n            var components = [],\\n                component;\\n            for (i = 0; i < selectorsCount; i++) {\\n              var componentIndex = frame.componentIds[data[offset++]];\\n              component = frame.components[componentIndex];\\n              var tableSpec = data[offset++];\\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\\n              components.push(component);\\n            }\\n            var spectralStart = data[offset++];\\n            var spectralEnd = data[offset++];\\n            var successiveApproximation = data[offset++];\\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\\n            offset += processed;\\n            break;\\n          case 0xFFFF:\\n            if (data[offset] !== 0xFF) {\\n              offset--;\\n            }\\n            break;\\n          default:\\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\\n              offset -= 3;\\n              break;\\n            }\\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\\n        }\\n        fileMarker = readUint16();\\n      }\\n      this.width = frame.samplesPerLine;\\n      this.height = frame.scanLines;\\n      this.jfif = jfif;\\n      this.adobe = adobe;\\n      this.components = [];\\n      for (i = 0; i < frame.components.length; i++) {\\n        component = frame.components[i];\\n        var quantizationTable = quantizationTables[component.quantizationId];\\n        if (quantizationTable) {\\n          component.quantizationTable = quantizationTable;\\n        }\\n        this.components.push({\\n          output: buildComponentData(frame, component),\\n          scaleX: component.h / frame.maxH,\\n          scaleY: component.v / frame.maxV,\\n          blocksPerLine: component.blocksPerLine,\\n          blocksPerColumn: component.blocksPerColumn\\n        });\\n      }\\n      this.numComponents = this.components.length;\\n    },\\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\\n      var scaleX = this.width / width,\\n          scaleY = this.height / height;\\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\\n      var x, y, i, j, k;\\n      var index;\\n      var offset = 0;\\n      var output;\\n      var numComponents = this.components.length;\\n      var dataLength = width * height * numComponents;\\n      var data = new Uint8ClampedArray(dataLength);\\n      var xScaleBlockOffset = new Uint32Array(width);\\n      var mask3LSB = 0xfffffff8;\\n      for (i = 0; i < numComponents; i++) {\\n        component = this.components[i];\\n        componentScaleX = component.scaleX * scaleX;\\n        componentScaleY = component.scaleY * scaleY;\\n        offset = i;\\n        output = component.output;\\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\\n        for (x = 0; x < width; x++) {\\n          j = 0 | x * componentScaleX;\\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\\n        }\\n        for (y = 0; y < height; y++) {\\n          j = 0 | y * componentScaleY;\\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\\n          for (x = 0; x < width; x++) {\\n            data[offset] = output[index + xScaleBlockOffset[x]];\\n            offset += numComponents;\\n          }\\n        }\\n      }\\n      var transform = this.decodeTransform;\\n      if (transform) {\\n        for (i = 0; i < dataLength;) {\\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\\n          }\\n        }\\n      }\\n      return data;\\n    },\\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\\n      if (this.adobe) {\\n        return !!this.adobe.transformCode;\\n      }\\n      if (this.numComponents === 3) {\\n        if (this.colorTransform === 0) {\\n          return false;\\n        }\\n        return true;\\n      }\\n      if (this.colorTransform === 1) {\\n        return true;\\n      }\\n      return false;\\n    },\\n\\n    _convertYccToRgb: function convertYccToRgb(data) {\\n      var Y, Cb, Cr;\\n      for (var i = 0, length = data.length; i < length; i += 3) {\\n        Y = data[i];\\n        Cb = data[i + 1];\\n        Cr = data[i + 2];\\n        data[i] = Y - 179.456 + 1.402 * Cr;\\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\\n      }\\n      return data;\\n    },\\n    _convertYcckToRgb: function convertYcckToRgb(data) {\\n      var Y, Cb, Cr, k;\\n      var offset = 0;\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\n        Y = data[i];\\n        Cb = data[i + 1];\\n        Cr = data[i + 2];\\n        k = data[i + 3];\\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\\n      }\\n      return data;\\n    },\\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\\n      var Y, Cb, Cr;\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\n        Y = data[i];\\n        Cb = data[i + 1];\\n        Cr = data[i + 2];\\n        data[i] = 434.456 - Y - 1.402 * Cr;\\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\\n      }\\n      return data;\\n    },\\n    _convertCmykToRgb: function convertCmykToRgb(data) {\\n      var c, m, y, k;\\n      var offset = 0;\\n      var scale = 1 / 255;\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\n        c = data[i] * scale;\\n        m = data[i + 1] * scale;\\n        y = data[i + 2] * scale;\\n        k = data[i + 3] * scale;\\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\\n      }\\n      return data;\\n    },\\n    getData: function getData(width, height, forceRGBoutput) {\\n      if (this.numComponents > 4) {\\n        throw new JpegError('Unsupported color mode');\\n      }\\n      var data = this._getLinearizedBlockData(width, height);\\n      if (this.numComponents === 1 && forceRGBoutput) {\\n        var dataLength = data.length;\\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\\n        var offset = 0;\\n        for (var i = 0; i < dataLength; i++) {\\n          var grayColor = data[i];\\n          rgbData[offset++] = grayColor;\\n          rgbData[offset++] = grayColor;\\n          rgbData[offset++] = grayColor;\\n        }\\n        return rgbData;\\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\\n        return this._convertYccToRgb(data);\\n      } else if (this.numComponents === 4) {\\n        if (this._isColorConversionNeeded()) {\\n          if (forceRGBoutput) {\\n            return this._convertYcckToRgb(data);\\n          }\\n          return this._convertYcckToCmyk(data);\\n        } else if (forceRGBoutput) {\\n          return this._convertCmykToRgb(data);\\n        }\\n      }\\n      return data;\\n    }\\n  };\\n  return JpegImage;\\n}();\\nexports.JpegImage = JpegImage;\\n\\n/***/ }),\\n/* 133 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.JpxStream = undefined;\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _jpx = __w_pdfjs_require__(67);\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar JpxStream = function JpxStreamClosure() {\\n  function JpxStream(stream, maybeLength, dict, params) {\\n    this.stream = stream;\\n    this.maybeLength = maybeLength;\\n    this.dict = dict;\\n    this.params = params;\\n    _stream.DecodeStream.call(this, maybeLength);\\n  }\\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\\n    get: function JpxStream_bytes() {\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n    },\\n    configurable: true\\n  });\\n  JpxStream.prototype.ensureBuffer = function (requested) {};\\n  JpxStream.prototype.readBlock = function () {\\n    if (this.eof) {\\n      return;\\n    }\\n    var jpxImage = new _jpx.JpxImage();\\n    jpxImage.parse(this.bytes);\\n    var width = jpxImage.width;\\n    var height = jpxImage.height;\\n    var componentsCount = jpxImage.componentsCount;\\n    var tileCount = jpxImage.tiles.length;\\n    if (tileCount === 1) {\\n      this.buffer = jpxImage.tiles[0].items;\\n    } else {\\n      var data = new Uint8ClampedArray(width * height * componentsCount);\\n      for (var k = 0; k < tileCount; k++) {\\n        var tileComponents = jpxImage.tiles[k];\\n        var tileWidth = tileComponents.width;\\n        var tileHeight = tileComponents.height;\\n        var tileLeft = tileComponents.left;\\n        var tileTop = tileComponents.top;\\n        var src = tileComponents.items;\\n        var srcPosition = 0;\\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\\n        var imgRowSize = width * componentsCount;\\n        var tileRowSize = tileWidth * componentsCount;\\n        for (var j = 0; j < tileHeight; j++) {\\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\\n          data.set(rowBytes, dataPosition);\\n          srcPosition += tileRowSize;\\n          dataPosition += imgRowSize;\\n        }\\n      }\\n      this.buffer = data;\\n    }\\n    this.bufferLength = this.buffer.length;\\n    this.eof = true;\\n  };\\n  return JpxStream;\\n}();\\nexports.JpxStream = JpxStream;\\n\\n/***/ }),\\n/* 134 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\\n\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _obj = __w_pdfjs_require__(64);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _colorspace = __w_pdfjs_require__(20);\\n\\nvar _operator_list = __w_pdfjs_require__(42);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar AnnotationFactory = function () {\\n  function AnnotationFactory() {\\n    _classCallCheck(this, AnnotationFactory);\\n  }\\n\\n  _createClass(AnnotationFactory, null, [{\\n    key: 'create',\\n    value: function create(xref, ref, pdfManager, idFactory) {\\n      var dict = xref.fetchIfRef(ref);\\n      if (!(0, _primitives.isDict)(dict)) {\\n        return;\\n      }\\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\\n      var subtype = dict.get('Subtype');\\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\\n      var parameters = {\\n        xref: xref,\\n        dict: dict,\\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\\n        subtype: subtype,\\n        id: id,\\n        pdfManager: pdfManager\\n      };\\n      switch (subtype) {\\n        case 'Link':\\n          return new LinkAnnotation(parameters);\\n        case 'Text':\\n          return new TextAnnotation(parameters);\\n        case 'Widget':\\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\n          switch (fieldType) {\\n            case 'Tx':\\n              return new TextWidgetAnnotation(parameters);\\n            case 'Btn':\\n              return new ButtonWidgetAnnotation(parameters);\\n            case 'Ch':\\n              return new ChoiceWidgetAnnotation(parameters);\\n          }\\n          (0, _util.warn)('Unimplemented widget field type \\\"' + fieldType + '\\\", ' + 'falling back to base field type.');\\n          return new WidgetAnnotation(parameters);\\n        case 'Popup':\\n          return new PopupAnnotation(parameters);\\n        case 'Line':\\n          return new LineAnnotation(parameters);\\n        case 'Square':\\n          return new SquareAnnotation(parameters);\\n        case 'Circle':\\n          return new CircleAnnotation(parameters);\\n        case 'PolyLine':\\n          return new PolylineAnnotation(parameters);\\n        case 'Polygon':\\n          return new PolygonAnnotation(parameters);\\n        case 'Highlight':\\n          return new HighlightAnnotation(parameters);\\n        case 'Underline':\\n          return new UnderlineAnnotation(parameters);\\n        case 'Squiggly':\\n          return new SquigglyAnnotation(parameters);\\n        case 'StrikeOut':\\n          return new StrikeOutAnnotation(parameters);\\n        case 'Stamp':\\n          return new StampAnnotation(parameters);\\n        case 'FileAttachment':\\n          return new FileAttachmentAnnotation(parameters);\\n        default:\\n          if (!subtype) {\\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\\n          } else {\\n            (0, _util.warn)('Unimplemented annotation type \\\"' + subtype + '\\\", ' + 'falling back to base annotation.');\\n          }\\n          return new Annotation(parameters);\\n      }\\n    }\\n  }]);\\n\\n  return AnnotationFactory;\\n}();\\n\\nfunction getTransformMatrix(rect, bbox, matrix) {\\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\\n  var minX = bounds[0];\\n  var minY = bounds[1];\\n  var maxX = bounds[2];\\n  var maxY = bounds[3];\\n  if (minX === maxX || minY === maxY) {\\n    return [1, 0, 0, 1, rect[0], rect[1]];\\n  }\\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\\n}\\n\\nvar Annotation = function () {\\n  function Annotation(params) {\\n    _classCallCheck(this, Annotation);\\n\\n    var dict = params.dict;\\n    this.setFlags(dict.get('F'));\\n    this.setRectangle(dict.getArray('Rect'));\\n    this.setColor(dict.getArray('C'));\\n    this.setBorderStyle(dict);\\n    this.setAppearance(dict);\\n    this.data = {\\n      annotationFlags: this.flags,\\n      borderStyle: this.borderStyle,\\n      color: this.color,\\n      hasAppearance: !!this.appearance,\\n      id: params.id,\\n      rect: this.rectangle,\\n      subtype: params.subtype\\n    };\\n  }\\n\\n  _createClass(Annotation, [{\\n    key: '_hasFlag',\\n    value: function _hasFlag(flags, flag) {\\n      return !!(flags & flag);\\n    }\\n  }, {\\n    key: '_isViewable',\\n    value: function _isViewable(flags) {\\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\\n    }\\n  }, {\\n    key: '_isPrintable',\\n    value: function _isPrintable(flags) {\\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\\n    }\\n  }, {\\n    key: 'setFlags',\\n    value: function setFlags(flags) {\\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\\n    }\\n  }, {\\n    key: 'hasFlag',\\n    value: function hasFlag(flag) {\\n      return this._hasFlag(this.flags, flag);\\n    }\\n  }, {\\n    key: 'setRectangle',\\n    value: function setRectangle(rectangle) {\\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\\n        this.rectangle = _util.Util.normalizeRect(rectangle);\\n      } else {\\n        this.rectangle = [0, 0, 0, 0];\\n      }\\n    }\\n  }, {\\n    key: 'setColor',\\n    value: function setColor(color) {\\n      var rgbColor = new Uint8Array(3);\\n      if (!Array.isArray(color)) {\\n        this.color = rgbColor;\\n        return;\\n      }\\n      switch (color.length) {\\n        case 0:\\n          this.color = null;\\n          break;\\n        case 1:\\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\\n          this.color = rgbColor;\\n          break;\\n        case 3:\\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\\n          this.color = rgbColor;\\n          break;\\n        case 4:\\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\\n          this.color = rgbColor;\\n          break;\\n        default:\\n          this.color = rgbColor;\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'setBorderStyle',\\n    value: function setBorderStyle(borderStyle) {\\n      this.borderStyle = new AnnotationBorderStyle();\\n      if (!(0, _primitives.isDict)(borderStyle)) {\\n        return;\\n      }\\n      if (borderStyle.has('BS')) {\\n        var dict = borderStyle.get('BS');\\n        var dictType = dict.get('Type');\\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\\n          this.borderStyle.setWidth(dict.get('W'));\\n          this.borderStyle.setStyle(dict.get('S'));\\n          this.borderStyle.setDashArray(dict.getArray('D'));\\n        }\\n      } else if (borderStyle.has('Border')) {\\n        var array = borderStyle.getArray('Border');\\n        if (Array.isArray(array) && array.length >= 3) {\\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\\n          this.borderStyle.setVerticalCornerRadius(array[1]);\\n          this.borderStyle.setWidth(array[2]);\\n          if (array.length === 4) {\\n            this.borderStyle.setDashArray(array[3]);\\n          }\\n        }\\n      } else {\\n        this.borderStyle.setWidth(0);\\n      }\\n    }\\n  }, {\\n    key: 'setAppearance',\\n    value: function setAppearance(dict) {\\n      this.appearance = null;\\n      var appearanceStates = dict.get('AP');\\n      if (!(0, _primitives.isDict)(appearanceStates)) {\\n        return;\\n      }\\n      var normalAppearanceState = appearanceStates.get('N');\\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\\n        this.appearance = normalAppearanceState;\\n        return;\\n      }\\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\\n        return;\\n      }\\n      var as = dict.get('AS');\\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\\n        return;\\n      }\\n      this.appearance = normalAppearanceState.get(as.name);\\n    }\\n  }, {\\n    key: '_preparePopup',\\n    value: function _preparePopup(dict) {\\n      if (!dict.has('C')) {\\n        this.data.color = null;\\n      }\\n      this.data.hasPopup = dict.has('Popup');\\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\\n    }\\n  }, {\\n    key: 'loadResources',\\n    value: function loadResources(keys) {\\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\\n        if (!resources) {\\n          return;\\n        }\\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\\n        return objectLoader.load().then(function () {\\n          return resources;\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'getOperatorList',\\n    value: function getOperatorList(evaluator, task, renderForms) {\\n      var _this = this;\\n\\n      if (!this.appearance) {\\n        return Promise.resolve(new _operator_list.OperatorList());\\n      }\\n      var data = this.data;\\n      var appearanceDict = this.appearance.dict;\\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\\n      return resourcesPromise.then(function (resources) {\\n        var opList = new _operator_list.OperatorList();\\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\\n        return evaluator.getOperatorList({\\n          stream: _this.appearance,\\n          task: task,\\n          resources: resources,\\n          operatorList: opList\\n        }).then(function () {\\n          opList.addOp(_util.OPS.endAnnotation, []);\\n          _this.appearance.reset();\\n          return opList;\\n        });\\n      });\\n    }\\n  }, {\\n    key: 'viewable',\\n    get: function get() {\\n      if (this.flags === 0) {\\n        return true;\\n      }\\n      return this._isViewable(this.flags);\\n    }\\n  }, {\\n    key: 'printable',\\n    get: function get() {\\n      if (this.flags === 0) {\\n        return false;\\n      }\\n      return this._isPrintable(this.flags);\\n    }\\n  }]);\\n\\n  return Annotation;\\n}();\\n\\nvar AnnotationBorderStyle = function () {\\n  function AnnotationBorderStyle() {\\n    _classCallCheck(this, AnnotationBorderStyle);\\n\\n    this.width = 1;\\n    this.style = _util.AnnotationBorderStyleType.SOLID;\\n    this.dashArray = [3];\\n    this.horizontalCornerRadius = 0;\\n    this.verticalCornerRadius = 0;\\n  }\\n\\n  _createClass(AnnotationBorderStyle, [{\\n    key: 'setWidth',\\n    value: function setWidth(width) {\\n      if (Number.isInteger(width)) {\\n        this.width = width;\\n      }\\n    }\\n  }, {\\n    key: 'setStyle',\\n    value: function setStyle(style) {\\n      if (!style) {\\n        return;\\n      }\\n      switch (style.name) {\\n        case 'S':\\n          this.style = _util.AnnotationBorderStyleType.SOLID;\\n          break;\\n        case 'D':\\n          this.style = _util.AnnotationBorderStyleType.DASHED;\\n          break;\\n        case 'B':\\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\\n          break;\\n        case 'I':\\n          this.style = _util.AnnotationBorderStyleType.INSET;\\n          break;\\n        case 'U':\\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\\n          break;\\n        default:\\n          break;\\n      }\\n    }\\n  }, {\\n    key: 'setDashArray',\\n    value: function setDashArray(dashArray) {\\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\\n        var isValid = true;\\n        var allZeros = true;\\n        for (var i = 0, len = dashArray.length; i < len; i++) {\\n          var element = dashArray[i];\\n          var validNumber = +element >= 0;\\n          if (!validNumber) {\\n            isValid = false;\\n            break;\\n          } else if (element > 0) {\\n            allZeros = false;\\n          }\\n        }\\n        if (isValid && !allZeros) {\\n          this.dashArray = dashArray;\\n        } else {\\n          this.width = 0;\\n        }\\n      } else if (dashArray) {\\n        this.width = 0;\\n      }\\n    }\\n  }, {\\n    key: 'setHorizontalCornerRadius',\\n    value: function setHorizontalCornerRadius(radius) {\\n      if (Number.isInteger(radius)) {\\n        this.horizontalCornerRadius = radius;\\n      }\\n    }\\n  }, {\\n    key: 'setVerticalCornerRadius',\\n    value: function setVerticalCornerRadius(radius) {\\n      if (Number.isInteger(radius)) {\\n        this.verticalCornerRadius = radius;\\n      }\\n    }\\n  }]);\\n\\n  return AnnotationBorderStyle;\\n}();\\n\\nvar WidgetAnnotation = function (_Annotation) {\\n  _inherits(WidgetAnnotation, _Annotation);\\n\\n  function WidgetAnnotation(params) {\\n    _classCallCheck(this, WidgetAnnotation);\\n\\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\\n\\n    var dict = params.dict;\\n    var data = _this2.data;\\n    data.annotationType = _util.AnnotationType.WIDGET;\\n    data.fieldName = _this2._constructFieldName(dict);\\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\\n      data.fieldFlags = 0;\\n    }\\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\\n    if (data.fieldType === 'Sig') {\\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\\n    }\\n    return _this2;\\n  }\\n\\n  _createClass(WidgetAnnotation, [{\\n    key: '_constructFieldName',\\n    value: function _constructFieldName(dict) {\\n      if (!dict.has('T') && !dict.has('Parent')) {\\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\\n        return '';\\n      }\\n      if (!dict.has('Parent')) {\\n        return (0, _util.stringToPDFString)(dict.get('T'));\\n      }\\n      var fieldName = [];\\n      if (dict.has('T')) {\\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\\n      }\\n      var loopDict = dict;\\n      while (loopDict.has('Parent')) {\\n        loopDict = loopDict.get('Parent');\\n        if (!(0, _primitives.isDict)(loopDict)) {\\n          break;\\n        }\\n        if (loopDict.has('T')) {\\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\\n        }\\n      }\\n      return fieldName.join('.');\\n    }\\n  }, {\\n    key: 'hasFieldFlag',\\n    value: function hasFieldFlag(flag) {\\n      return !!(this.data.fieldFlags & flag);\\n    }\\n  }, {\\n    key: 'getOperatorList',\\n    value: function getOperatorList(evaluator, task, renderForms) {\\n      if (renderForms) {\\n        return Promise.resolve(new _operator_list.OperatorList());\\n      }\\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\\n    }\\n  }]);\\n\\n  return WidgetAnnotation;\\n}(Annotation);\\n\\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\\n\\n  function TextWidgetAnnotation(params) {\\n    _classCallCheck(this, TextWidgetAnnotation);\\n\\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\\n\\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\\n      alignment = null;\\n    }\\n    _this3.data.textAlignment = alignment;\\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\\n      maximumLength = null;\\n    }\\n    _this3.data.maxLen = maximumLength;\\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\\n    return _this3;\\n  }\\n\\n  _createClass(TextWidgetAnnotation, [{\\n    key: 'getOperatorList',\\n    value: function getOperatorList(evaluator, task, renderForms) {\\n      if (renderForms || this.appearance) {\\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\\n      }\\n      var operatorList = new _operator_list.OperatorList();\\n      if (!this.data.defaultAppearance) {\\n        return Promise.resolve(operatorList);\\n      }\\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\\n      return evaluator.getOperatorList({\\n        stream: stream,\\n        task: task,\\n        resources: this.fieldResources,\\n        operatorList: operatorList\\n      }).then(function () {\\n        return operatorList;\\n      });\\n    }\\n  }]);\\n\\n  return TextWidgetAnnotation;\\n}(WidgetAnnotation);\\n\\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\\n\\n  function ButtonWidgetAnnotation(params) {\\n    _classCallCheck(this, ButtonWidgetAnnotation);\\n\\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\\n\\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n    if (_this4.data.checkBox) {\\n      _this4._processCheckBox();\\n    } else if (_this4.data.radioButton) {\\n      _this4._processRadioButton(params);\\n    } else if (_this4.data.pushButton) {\\n      _this4._processPushButton(params);\\n    } else {\\n      (0, _util.warn)('Invalid field flags for button widget annotation');\\n    }\\n    return _this4;\\n  }\\n\\n  _createClass(ButtonWidgetAnnotation, [{\\n    key: '_processCheckBox',\\n    value: function _processCheckBox() {\\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\\n        return;\\n      }\\n      this.data.fieldValue = this.data.fieldValue.name;\\n    }\\n  }, {\\n    key: '_processRadioButton',\\n    value: function _processRadioButton(params) {\\n      this.data.fieldValue = this.data.buttonValue = null;\\n      var fieldParent = params.dict.get('Parent');\\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\\n        var fieldParentValue = fieldParent.get('V');\\n        if ((0, _primitives.isName)(fieldParentValue)) {\\n          this.data.fieldValue = fieldParentValue.name;\\n        }\\n      }\\n      var appearanceStates = params.dict.get('AP');\\n      if (!(0, _primitives.isDict)(appearanceStates)) {\\n        return;\\n      }\\n      var normalAppearanceState = appearanceStates.get('N');\\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\\n        return;\\n      }\\n      var keys = normalAppearanceState.getKeys();\\n      for (var i = 0, ii = keys.length; i < ii; i++) {\\n        if (keys[i] !== 'Off') {\\n          this.data.buttonValue = keys[i];\\n          break;\\n        }\\n      }\\n    }\\n  }, {\\n    key: '_processPushButton',\\n    value: function _processPushButton(params) {\\n      if (!params.dict.has('A')) {\\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\\n        return;\\n      }\\n      _obj.Catalog.parseDestDictionary({\\n        destDict: params.dict,\\n        resultObj: this.data,\\n        docBaseUrl: params.pdfManager.docBaseUrl\\n      });\\n    }\\n  }]);\\n\\n  return ButtonWidgetAnnotation;\\n}(WidgetAnnotation);\\n\\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\\n\\n  function ChoiceWidgetAnnotation(params) {\\n    _classCallCheck(this, ChoiceWidgetAnnotation);\\n\\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\\n\\n    _this5.data.options = [];\\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\\n    if (Array.isArray(options)) {\\n      var xref = params.xref;\\n      for (var i = 0, ii = options.length; i < ii; i++) {\\n        var option = xref.fetchIfRef(options[i]);\\n        var isOptionArray = Array.isArray(option);\\n        _this5.data.options[i] = {\\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\\n        };\\n      }\\n    }\\n    if (!Array.isArray(_this5.data.fieldValue)) {\\n      _this5.data.fieldValue = [_this5.data.fieldValue];\\n    }\\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\\n    return _this5;\\n  }\\n\\n  return ChoiceWidgetAnnotation;\\n}(WidgetAnnotation);\\n\\nvar TextAnnotation = function (_Annotation2) {\\n  _inherits(TextAnnotation, _Annotation2);\\n\\n  function TextAnnotation(parameters) {\\n    _classCallCheck(this, TextAnnotation);\\n\\n    var DEFAULT_ICON_SIZE = 22;\\n\\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\\n\\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\\n    if (_this6.data.hasAppearance) {\\n      _this6.data.name = 'NoIcon';\\n    } else {\\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\\n    }\\n    _this6._preparePopup(parameters.dict);\\n    return _this6;\\n  }\\n\\n  return TextAnnotation;\\n}(Annotation);\\n\\nvar LinkAnnotation = function (_Annotation3) {\\n  _inherits(LinkAnnotation, _Annotation3);\\n\\n  function LinkAnnotation(params) {\\n    _classCallCheck(this, LinkAnnotation);\\n\\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\\n\\n    _this7.data.annotationType = _util.AnnotationType.LINK;\\n    _obj.Catalog.parseDestDictionary({\\n      destDict: params.dict,\\n      resultObj: _this7.data,\\n      docBaseUrl: params.pdfManager.docBaseUrl\\n    });\\n    return _this7;\\n  }\\n\\n  return LinkAnnotation;\\n}(Annotation);\\n\\nvar PopupAnnotation = function (_Annotation4) {\\n  _inherits(PopupAnnotation, _Annotation4);\\n\\n  function PopupAnnotation(parameters) {\\n    _classCallCheck(this, PopupAnnotation);\\n\\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\\n\\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\\n    var dict = parameters.dict;\\n    var parentItem = dict.get('Parent');\\n    if (!parentItem) {\\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\\n      return _possibleConstructorReturn(_this8);\\n    }\\n    var parentSubtype = parentItem.get('Subtype');\\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\\n    _this8.data.parentId = dict.getRaw('Parent').toString();\\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\\n    if (!parentItem.has('C')) {\\n      _this8.data.color = null;\\n    } else {\\n      _this8.setColor(parentItem.getArray('C'));\\n      _this8.data.color = _this8.color;\\n    }\\n    if (!_this8.viewable) {\\n      var parentFlags = parentItem.get('F');\\n      if (_this8._isViewable(parentFlags)) {\\n        _this8.setFlags(parentFlags);\\n      }\\n    }\\n    return _this8;\\n  }\\n\\n  return PopupAnnotation;\\n}(Annotation);\\n\\nvar LineAnnotation = function (_Annotation5) {\\n  _inherits(LineAnnotation, _Annotation5);\\n\\n  function LineAnnotation(parameters) {\\n    _classCallCheck(this, LineAnnotation);\\n\\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\\n\\n    _this9.data.annotationType = _util.AnnotationType.LINE;\\n    var dict = parameters.dict;\\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\\n    _this9._preparePopup(dict);\\n    return _this9;\\n  }\\n\\n  return LineAnnotation;\\n}(Annotation);\\n\\nvar SquareAnnotation = function (_Annotation6) {\\n  _inherits(SquareAnnotation, _Annotation6);\\n\\n  function SquareAnnotation(parameters) {\\n    _classCallCheck(this, SquareAnnotation);\\n\\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\\n\\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\\n    _this10._preparePopup(parameters.dict);\\n    return _this10;\\n  }\\n\\n  return SquareAnnotation;\\n}(Annotation);\\n\\nvar CircleAnnotation = function (_Annotation7) {\\n  _inherits(CircleAnnotation, _Annotation7);\\n\\n  function CircleAnnotation(parameters) {\\n    _classCallCheck(this, CircleAnnotation);\\n\\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\\n\\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\\n    _this11._preparePopup(parameters.dict);\\n    return _this11;\\n  }\\n\\n  return CircleAnnotation;\\n}(Annotation);\\n\\nvar PolylineAnnotation = function (_Annotation8) {\\n  _inherits(PolylineAnnotation, _Annotation8);\\n\\n  function PolylineAnnotation(parameters) {\\n    _classCallCheck(this, PolylineAnnotation);\\n\\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\\n\\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\\n    var dict = parameters.dict;\\n    var rawVertices = dict.getArray('Vertices');\\n    _this12.data.vertices = [];\\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\\n      _this12.data.vertices.push({\\n        x: rawVertices[i],\\n        y: rawVertices[i + 1]\\n      });\\n    }\\n    _this12._preparePopup(dict);\\n    return _this12;\\n  }\\n\\n  return PolylineAnnotation;\\n}(Annotation);\\n\\nvar PolygonAnnotation = function (_PolylineAnnotation) {\\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\\n\\n  function PolygonAnnotation(parameters) {\\n    _classCallCheck(this, PolygonAnnotation);\\n\\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\\n\\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\\n    return _this13;\\n  }\\n\\n  return PolygonAnnotation;\\n}(PolylineAnnotation);\\n\\nvar HighlightAnnotation = function (_Annotation9) {\\n  _inherits(HighlightAnnotation, _Annotation9);\\n\\n  function HighlightAnnotation(parameters) {\\n    _classCallCheck(this, HighlightAnnotation);\\n\\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\\n\\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\\n    _this14._preparePopup(parameters.dict);\\n    return _this14;\\n  }\\n\\n  return HighlightAnnotation;\\n}(Annotation);\\n\\nvar UnderlineAnnotation = function (_Annotation10) {\\n  _inherits(UnderlineAnnotation, _Annotation10);\\n\\n  function UnderlineAnnotation(parameters) {\\n    _classCallCheck(this, UnderlineAnnotation);\\n\\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\\n\\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\\n    _this15._preparePopup(parameters.dict);\\n    return _this15;\\n  }\\n\\n  return UnderlineAnnotation;\\n}(Annotation);\\n\\nvar SquigglyAnnotation = function (_Annotation11) {\\n  _inherits(SquigglyAnnotation, _Annotation11);\\n\\n  function SquigglyAnnotation(parameters) {\\n    _classCallCheck(this, SquigglyAnnotation);\\n\\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\\n\\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\\n    _this16._preparePopup(parameters.dict);\\n    return _this16;\\n  }\\n\\n  return SquigglyAnnotation;\\n}(Annotation);\\n\\nvar StrikeOutAnnotation = function (_Annotation12) {\\n  _inherits(StrikeOutAnnotation, _Annotation12);\\n\\n  function StrikeOutAnnotation(parameters) {\\n    _classCallCheck(this, StrikeOutAnnotation);\\n\\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\\n\\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\\n    _this17._preparePopup(parameters.dict);\\n    return _this17;\\n  }\\n\\n  return StrikeOutAnnotation;\\n}(Annotation);\\n\\nvar StampAnnotation = function (_Annotation13) {\\n  _inherits(StampAnnotation, _Annotation13);\\n\\n  function StampAnnotation(parameters) {\\n    _classCallCheck(this, StampAnnotation);\\n\\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\\n\\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\\n    _this18._preparePopup(parameters.dict);\\n    return _this18;\\n  }\\n\\n  return StampAnnotation;\\n}(Annotation);\\n\\nvar FileAttachmentAnnotation = function (_Annotation14) {\\n  _inherits(FileAttachmentAnnotation, _Annotation14);\\n\\n  function FileAttachmentAnnotation(parameters) {\\n    _classCallCheck(this, FileAttachmentAnnotation);\\n\\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\\n\\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\\n    _this19.data.file = file.serializable;\\n    _this19._preparePopup(parameters.dict);\\n    return _this19;\\n  }\\n\\n  return FileAttachmentAnnotation;\\n}(Annotation);\\n\\nexports.Annotation = Annotation;\\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\\nexports.AnnotationFactory = AnnotationFactory;\\n\\n/***/ }),\\n/* 135 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PartialEvaluator = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _cmap = __w_pdfjs_require__(136);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _fonts = __w_pdfjs_require__(137);\\n\\nvar _encodings = __w_pdfjs_require__(21);\\n\\nvar _unicode = __w_pdfjs_require__(71);\\n\\nvar _standard_fonts = __w_pdfjs_require__(70);\\n\\nvar _pattern = __w_pdfjs_require__(141);\\n\\nvar _parser = __w_pdfjs_require__(26);\\n\\nvar _bidi = __w_pdfjs_require__(142);\\n\\nvar _colorspace = __w_pdfjs_require__(20);\\n\\nvar _glyphlist = __w_pdfjs_require__(43);\\n\\nvar _metrics = __w_pdfjs_require__(143);\\n\\nvar _function = __w_pdfjs_require__(72);\\n\\nvar _jpeg_stream = __w_pdfjs_require__(41);\\n\\nvar _murmurhash = __w_pdfjs_require__(145);\\n\\nvar _operator_list = __w_pdfjs_require__(42);\\n\\nvar _image = __w_pdfjs_require__(146);\\n\\nvar PartialEvaluator = function PartialEvaluatorClosure() {\\n  var DefaultPartialEvaluatorOptions = {\\n    forceDataSchema: false,\\n    maxImageSize: -1,\\n    disableFontFace: false,\\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\\n    ignoreErrors: false,\\n    isEvalSupported: true\\n  };\\n  function NativeImageDecoder(_ref) {\\n    var xref = _ref.xref,\\n        resources = _ref.resources,\\n        handler = _ref.handler,\\n        _ref$forceDataSchema = _ref.forceDataSchema,\\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\n\\n    this.xref = xref;\\n    this.resources = resources;\\n    this.handler = handler;\\n    this.forceDataSchema = forceDataSchema;\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\n  }\\n  NativeImageDecoder.prototype = {\\n    canDecode: function canDecode(image) {\\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\\n    },\\n    decode: function decode(image) {\\n      var dict = image.dict;\\n      var colorSpace = dict.get('ColorSpace', 'CS');\\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\\n      var numComps = colorSpace.numComps;\\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\\n      return decodePromise.then(function (message) {\\n        var data = message.data;\\n        return new _stream.Stream(data, 0, data.length, image.dict);\\n      });\\n    }\\n  };\\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\\n    var dict = image.dict;\\n    if (dict.has('DecodeParms') || dict.has('DP')) {\\n      return false;\\n    }\\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\\n  };\\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\\n    var dict = image.dict;\\n    if (dict.has('DecodeParms') || dict.has('DP')) {\\n      return false;\\n    }\\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\\n  };\\n  function PartialEvaluator(_ref2) {\\n    var _this = this;\\n\\n    var pdfManager = _ref2.pdfManager,\\n        xref = _ref2.xref,\\n        handler = _ref2.handler,\\n        pageIndex = _ref2.pageIndex,\\n        idFactory = _ref2.idFactory,\\n        fontCache = _ref2.fontCache,\\n        builtInCMapCache = _ref2.builtInCMapCache,\\n        _ref2$options = _ref2.options,\\n        options = _ref2$options === undefined ? null : _ref2$options,\\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\\n\\n    this.pdfManager = pdfManager;\\n    this.xref = xref;\\n    this.handler = handler;\\n    this.pageIndex = pageIndex;\\n    this.idFactory = idFactory;\\n    this.fontCache = fontCache;\\n    this.builtInCMapCache = builtInCMapCache;\\n    this.options = options || DefaultPartialEvaluatorOptions;\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\n    this.fetchBuiltInCMap = function (name) {\\n      var cachedCMap = _this.builtInCMapCache[name];\\n      if (cachedCMap) {\\n        return Promise.resolve(cachedCMap);\\n      }\\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\\n          _this.builtInCMapCache[name] = data;\\n        }\\n        return data;\\n      });\\n    };\\n  }\\n  var TIME_SLOT_DURATION_MS = 20;\\n  var CHECK_TIME_EVERY = 100;\\n  function TimeSlotManager() {\\n    this.reset();\\n  }\\n  TimeSlotManager.prototype = {\\n    check: function TimeSlotManager_check() {\\n      if (++this.checked < CHECK_TIME_EVERY) {\\n        return false;\\n      }\\n      this.checked = 0;\\n      return this.endTime <= Date.now();\\n    },\\n    reset: function TimeSlotManager_reset() {\\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\\n      this.checked = 0;\\n    }\\n  };\\n  function normalizeBlendMode(value) {\\n    if (!(0, _primitives.isName)(value)) {\\n      return 'source-over';\\n    }\\n    switch (value.name) {\\n      case 'Normal':\\n      case 'Compatible':\\n        return 'source-over';\\n      case 'Multiply':\\n        return 'multiply';\\n      case 'Screen':\\n        return 'screen';\\n      case 'Overlay':\\n        return 'overlay';\\n      case 'Darken':\\n        return 'darken';\\n      case 'Lighten':\\n        return 'lighten';\\n      case 'ColorDodge':\\n        return 'color-dodge';\\n      case 'ColorBurn':\\n        return 'color-burn';\\n      case 'HardLight':\\n        return 'hard-light';\\n      case 'SoftLight':\\n        return 'soft-light';\\n      case 'Difference':\\n        return 'difference';\\n      case 'Exclusion':\\n        return 'exclusion';\\n      case 'Hue':\\n        return 'hue';\\n      case 'Saturation':\\n        return 'saturation';\\n      case 'Color':\\n        return 'color';\\n      case 'Luminosity':\\n        return 'luminosity';\\n    }\\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\\n    return 'source-over';\\n  }\\n  var deferred = Promise.resolve();\\n  var TILING_PATTERN = 1,\\n      SHADING_PATTERN = 2;\\n  PartialEvaluator.prototype = {\\n    clone: function clone() {\\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\\n\\n      var newEvaluator = Object.create(this);\\n      newEvaluator.options = newOptions;\\n      return newEvaluator;\\n    },\\n\\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\\n      if (!(0, _primitives.isDict)(resources)) {\\n        return false;\\n      }\\n      var processed = Object.create(null);\\n      if (resources.objId) {\\n        processed[resources.objId] = true;\\n      }\\n      var nodes = [resources],\\n          xref = this.xref;\\n      while (nodes.length) {\\n        var key, i, ii;\\n        var node = nodes.shift();\\n        var graphicStates = node.get('ExtGState');\\n        if ((0, _primitives.isDict)(graphicStates)) {\\n          var graphicStatesKeys = graphicStates.getKeys();\\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\\n            key = graphicStatesKeys[i];\\n            var graphicState = graphicStates.get(key);\\n            var bm = graphicState.get('BM');\\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\\n              return true;\\n            }\\n          }\\n        }\\n        var xObjects = node.get('XObject');\\n        if (!(0, _primitives.isDict)(xObjects)) {\\n          continue;\\n        }\\n        var xObjectsKeys = xObjects.getKeys();\\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\\n          key = xObjectsKeys[i];\\n          var xObject = xObjects.getRaw(key);\\n          if ((0, _primitives.isRef)(xObject)) {\\n            if (processed[xObject.toString()]) {\\n              continue;\\n            }\\n            xObject = xref.fetch(xObject);\\n          }\\n          if (!(0, _primitives.isStream)(xObject)) {\\n            continue;\\n          }\\n          if (xObject.dict.objId) {\\n            if (processed[xObject.dict.objId]) {\\n              continue;\\n            }\\n            processed[xObject.dict.objId] = true;\\n          }\\n          var xResources = xObject.dict.get('Resources');\\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\\n            nodes.push(xResources);\\n            if (xResources.objId) {\\n              processed[xResources.objId] = true;\\n            }\\n          }\\n        }\\n      }\\n      return false;\\n    },\\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\\n      var dict = xobj.dict;\\n      var matrix = dict.getArray('Matrix');\\n      var bbox = dict.getArray('BBox');\\n      var group = dict.get('Group');\\n      if (group) {\\n        var groupOptions = {\\n          matrix: matrix,\\n          bbox: bbox,\\n          smask: smask,\\n          isolated: false,\\n          knockout: false\\n        };\\n        var groupSubtype = group.get('S');\\n        var colorSpace = null;\\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\\n          groupOptions.isolated = group.get('I') || false;\\n          groupOptions.knockout = group.get('K') || false;\\n          if (group.has('CS')) {\\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\\n          }\\n        }\\n        if (smask && smask.backdrop) {\\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\\n        }\\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\\n      }\\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\\n      return this.getOperatorList({\\n        stream: xobj,\\n        task: task,\\n        resources: dict.get('Resources') || resources,\\n        operatorList: operatorList,\\n        initialState: initialState\\n      }).then(function () {\\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\\n        if (group) {\\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\\n        }\\n      });\\n    },\\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\\n      var _this2 = this;\\n\\n      var dict = image.dict;\\n      var w = dict.get('Width', 'W');\\n      var h = dict.get('Height', 'H');\\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\\n        return;\\n      }\\n      var maxImageSize = this.options.maxImageSize;\\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\\n        return;\\n      }\\n      var imageMask = dict.get('ImageMask', 'IM') || false;\\n      var imgData, args;\\n      if (imageMask) {\\n        var width = dict.get('Width', 'W');\\n        var height = dict.get('Height', 'H');\\n        var bitStrideLength = width + 7 >> 3;\\n        var imgArray = image.getBytes(bitStrideLength * height);\\n        var decode = dict.getArray('Decode', 'D');\\n        imgData = _image.PDFImage.createMask({\\n          imgArray: imgArray,\\n          width: width,\\n          height: height,\\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\\n          inverseDecode: !!decode && decode[0] > 0\\n        });\\n        imgData.cached = true;\\n        args = [imgData];\\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\\n        if (cacheKey) {\\n          imageCache[cacheKey] = {\\n            fn: _util.OPS.paintImageMaskXObject,\\n            args: args\\n          };\\n        }\\n        return;\\n      }\\n      var softMask = dict.get('SMask', 'SM') || false;\\n      var mask = dict.get('Mask') || false;\\n      var SMALL_IMAGE_DIMENSIONS = 200;\\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\\n        var imageObj = new _image.PDFImage({\\n          xref: this.xref,\\n          res: resources,\\n          image: image,\\n          isInline: inline,\\n          pdfFunctionFactory: this.pdfFunctionFactory\\n        });\\n        imgData = imageObj.createImageData(true);\\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\\n        return;\\n      }\\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\\n      var objId = 'img_' + this.idFactory.createObjId();\\n      operatorList.addDependency(objId);\\n      args = [objId, w, h];\\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\\n        if (cacheKey) {\\n          imageCache[cacheKey] = {\\n            fn: _util.OPS.paintJpegXObject,\\n            args: args\\n          };\\n        }\\n        return;\\n      }\\n      var nativeImageDecoder = null;\\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\\n        nativeImageDecoder = new NativeImageDecoder({\\n          xref: this.xref,\\n          resources: resources,\\n          handler: this.handler,\\n          forceDataSchema: this.options.forceDataSchema,\\n          pdfFunctionFactory: this.pdfFunctionFactory\\n        });\\n      }\\n      _image.PDFImage.buildImage({\\n        handler: this.handler,\\n        xref: this.xref,\\n        res: resources,\\n        image: image,\\n        isInline: inline,\\n        nativeDecoder: nativeImageDecoder,\\n        pdfFunctionFactory: this.pdfFunctionFactory\\n      }).then(function (imageObj) {\\n        var imgData = imageObj.createImageData(false);\\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\\n      }).catch(function (reason) {\\n        (0, _util.warn)('Unable to decode image: ' + reason);\\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\\n      });\\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\\n      if (cacheKey) {\\n        imageCache[cacheKey] = {\\n          fn: _util.OPS.paintImageXObject,\\n          args: args\\n        };\\n      }\\n    },\\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\\n      var smaskContent = smask.get('G');\\n      var smaskOptions = {\\n        subtype: smask.get('S').name,\\n        backdrop: smask.get('BC')\\n      };\\n      var transferObj = smask.get('TR');\\n      if ((0, _function.isPDFFunction)(transferObj)) {\\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\\n        var transferMap = new Uint8Array(256);\\n        var tmp = new Float32Array(1);\\n        for (var i = 0; i < 256; i++) {\\n          tmp[0] = i / 255;\\n          transferFn(tmp, 0, tmp, 0);\\n          transferMap[i] = tmp[0] * 255 | 0;\\n        }\\n        smaskOptions.transferMap = transferMap;\\n      }\\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\\n    },\\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\\n      var _this3 = this;\\n\\n      var tilingOpList = new _operator_list.OperatorList();\\n      var resourcesArray = [patternDict.get('Resources'), resources];\\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\\n      return this.getOperatorList({\\n        stream: pattern,\\n        task: task,\\n        resources: patternResources,\\n        operatorList: tilingOpList\\n      }).then(function () {\\n        return (0, _pattern.getTilingPatternIR)({\\n          fnArray: tilingOpList.fnArray,\\n          argsArray: tilingOpList.argsArray\\n        }, patternDict, args);\\n      }).then(function (tilingPatternIR) {\\n        operatorList.addDependencies(tilingOpList.dependencies);\\n        operatorList.addOp(fn, tilingPatternIR);\\n      }, function (reason) {\\n        if (_this3.options.ignoreErrors) {\\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n          (0, _util.warn)('handleTilingType - ignoring pattern: \\\"' + reason + '\\\".');\\n          return;\\n        }\\n        throw reason;\\n      });\\n    },\\n\\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\\n      var _this4 = this;\\n\\n      var fontName;\\n      if (fontArgs) {\\n        fontArgs = fontArgs.slice();\\n        fontName = fontArgs[0].name;\\n      }\\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\\n        if (!translated.font.isType3Font) {\\n          return translated;\\n        }\\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\\n          return translated;\\n        }).catch(function (reason) {\\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\\n        });\\n      }).then(function (translated) {\\n        state.font = translated.font;\\n        translated.send(_this4.handler);\\n        return translated.loadedName;\\n      });\\n    },\\n    handleText: function PartialEvaluator_handleText(chars, state) {\\n      var _this5 = this;\\n\\n      var font = state.font;\\n      var glyphs = font.charsToGlyphs(chars);\\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\\n        var buildPath = function buildPath(fontChar) {\\n          if (!font.renderer.hasBuiltPath(fontChar)) {\\n            var path = font.renderer.getPathJs(fontChar);\\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\\n          }\\n        };\\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\\n          var glyph = glyphs[i];\\n          buildPath(glyph.fontChar);\\n          var accent = glyph.accent;\\n          if (accent && accent.fontChar) {\\n            buildPath(accent.fontChar);\\n          }\\n        }\\n      }\\n      return glyphs;\\n    },\\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\\n      var _this6 = this;\\n\\n      var gStateObj = [];\\n      var gStateKeys = gState.getKeys();\\n      var promise = Promise.resolve();\\n\\n      var _loop = function _loop() {\\n        var key = gStateKeys[i];\\n        var value = gState.get(key);\\n        switch (key) {\\n          case 'Type':\\n            break;\\n          case 'LW':\\n          case 'LC':\\n          case 'LJ':\\n          case 'ML':\\n          case 'D':\\n          case 'RI':\\n          case 'FL':\\n          case 'CA':\\n          case 'ca':\\n            gStateObj.push([key, value]);\\n            break;\\n          case 'Font':\\n            promise = promise.then(function () {\\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\\n                operatorList.addDependency(loadedName);\\n                gStateObj.push([key, [loadedName, value[1]]]);\\n              });\\n            });\\n            break;\\n          case 'BM':\\n            gStateObj.push([key, normalizeBlendMode(value)]);\\n            break;\\n          case 'SMask':\\n            if ((0, _primitives.isName)(value, 'None')) {\\n              gStateObj.push([key, false]);\\n              break;\\n            }\\n            if ((0, _primitives.isDict)(value)) {\\n              promise = promise.then(function () {\\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\\n              });\\n              gStateObj.push([key, true]);\\n            } else {\\n              (0, _util.warn)('Unsupported SMask type');\\n            }\\n            break;\\n          case 'OP':\\n          case 'op':\\n          case 'OPM':\\n          case 'BG':\\n          case 'BG2':\\n          case 'UCR':\\n          case 'UCR2':\\n          case 'TR':\\n          case 'TR2':\\n          case 'HT':\\n          case 'SM':\\n          case 'SA':\\n          case 'AIS':\\n          case 'TK':\\n            (0, _util.info)('graphic state operator ' + key);\\n            break;\\n          default:\\n            (0, _util.info)('Unknown graphic state operator ' + key);\\n            break;\\n        }\\n      };\\n\\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\\n        _loop();\\n      }\\n      return promise.then(function () {\\n        if (gStateObj.length > 0) {\\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\\n        }\\n      });\\n    },\\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\\n      var _this7 = this;\\n\\n      function errorFont() {\\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\\n      }\\n      var fontRef,\\n          xref = this.xref;\\n      if (font) {\\n        if (!(0, _primitives.isRef)(font)) {\\n          throw new Error('The \\\"font\\\" object should be a reference.');\\n        }\\n        fontRef = font;\\n      } else {\\n        var fontRes = resources.get('Font');\\n        if (fontRes) {\\n          fontRef = fontRes.getRaw(fontName);\\n        } else {\\n          (0, _util.warn)('fontRes not available');\\n          return errorFont();\\n        }\\n      }\\n      if (!fontRef) {\\n        (0, _util.warn)('fontRef not available');\\n        return errorFont();\\n      }\\n      if (this.fontCache.has(fontRef)) {\\n        return this.fontCache.get(fontRef);\\n      }\\n      font = xref.fetchIfRef(fontRef);\\n      if (!(0, _primitives.isDict)(font)) {\\n        return errorFont();\\n      }\\n      if (font.translated) {\\n        return font.translated;\\n      }\\n      var fontCapability = (0, _util.createPromiseCapability)();\\n      var preEvaluatedFont = this.preEvaluateFont(font);\\n      var descriptor = preEvaluatedFont.descriptor;\\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\\n          fontID;\\n      if (fontRefIsRef) {\\n        fontID = fontRef.toString();\\n      }\\n      if ((0, _primitives.isDict)(descriptor)) {\\n        if (!descriptor.fontAliases) {\\n          descriptor.fontAliases = Object.create(null);\\n        }\\n        var fontAliases = descriptor.fontAliases;\\n        var hash = preEvaluatedFont.hash;\\n        if (fontAliases[hash]) {\\n          var aliasFontRef = fontAliases[hash].aliasRef;\\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\\n            this.fontCache.putAlias(fontRef, aliasFontRef);\\n            return this.fontCache.get(fontRef);\\n          }\\n        } else {\\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\\n        }\\n        if (fontRefIsRef) {\\n          fontAliases[hash].aliasRef = fontRef;\\n        }\\n        fontID = fontAliases[hash].fontID;\\n      }\\n      if (fontRefIsRef) {\\n        this.fontCache.put(fontRef, fontCapability.promise);\\n      } else {\\n        if (!fontID) {\\n          fontID = this.idFactory.createObjId();\\n        }\\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\\n      }\\n      (0, _util.assert)(fontID, 'The \\\"fontID\\\" must be defined.');\\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\\n      font.translated = fontCapability.promise;\\n      var translatedPromise;\\n      try {\\n        translatedPromise = this.translateFont(preEvaluatedFont);\\n      } catch (e) {\\n        translatedPromise = Promise.reject(e);\\n      }\\n      translatedPromise.then(function (translatedFont) {\\n        if (translatedFont.fontType !== undefined) {\\n          var xrefFontStats = xref.stats.fontTypes;\\n          xrefFontStats[translatedFont.fontType] = true;\\n        }\\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\\n      }).catch(function (reason) {\\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\\n        try {\\n          var descriptor = preEvaluatedFont.descriptor;\\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\\n          var subtype = fontFile3 && fontFile3.get('Subtype');\\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\\n          var xrefFontStats = xref.stats.fontTypes;\\n          xrefFontStats[fontType] = true;\\n        } catch (ex) {}\\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\\n      });\\n      return fontCapability.promise;\\n    },\\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\\n      var lastIndex = operatorList.length - 1;\\n      if (!args) {\\n        args = [];\\n      }\\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\\n      } else {\\n        var opArgs = operatorList.argsArray[lastIndex];\\n        opArgs[0].push(fn);\\n        Array.prototype.push.apply(opArgs[1], args);\\n      }\\n    },\\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\\n      var patternName = args[args.length - 1];\\n      var pattern;\\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\\n        var typeNum = dict.get('PatternType');\\n        if (typeNum === TILING_PATTERN) {\\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\\n        } else if (typeNum === SHADING_PATTERN) {\\n          var shading = dict.get('Shading');\\n          var matrix = dict.getArray('Matrix');\\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\\n          operatorList.addOp(fn, pattern.getIR());\\n          return Promise.resolve();\\n        }\\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\\n      }\\n      operatorList.addOp(fn, args);\\n      return Promise.resolve();\\n    },\\n    getOperatorList: function getOperatorList(_ref3) {\\n      var _this8 = this;\\n\\n      var stream = _ref3.stream,\\n          task = _ref3.task,\\n          resources = _ref3.resources,\\n          operatorList = _ref3.operatorList,\\n          _ref3$initialState = _ref3.initialState,\\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\\n\\n      resources = resources || _primitives.Dict.empty;\\n      initialState = initialState || new EvalState();\\n      if (!operatorList) {\\n        throw new Error('getOperatorList: missing \\\"operatorList\\\" parameter');\\n      }\\n      var self = this;\\n      var xref = this.xref;\\n      var imageCache = Object.create(null);\\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\\n      var stateManager = new StateManager(initialState);\\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\n      var timeSlotManager = new TimeSlotManager();\\n      function closePendingRestoreOPS(argument) {\\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\\n          operatorList.addOp(_util.OPS.restore, []);\\n        }\\n      }\\n      return new Promise(function promiseBody(resolve, reject) {\\n        var next = function next(promise) {\\n          promise.then(function () {\\n            try {\\n              promiseBody(resolve, reject);\\n            } catch (ex) {\\n              reject(ex);\\n            }\\n          }, reject);\\n        };\\n        task.ensureNotTerminated();\\n        timeSlotManager.reset();\\n        var stop,\\n            operation = {},\\n            i,\\n            ii,\\n            cs;\\n        while (!(stop = timeSlotManager.check())) {\\n          operation.args = null;\\n          if (!preprocessor.read(operation)) {\\n            break;\\n          }\\n          var args = operation.args;\\n          var fn = operation.fn;\\n          switch (fn | 0) {\\n            case _util.OPS.paintXObject:\\n              var name = args[0].name;\\n              if (name && imageCache[name] !== undefined) {\\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\\n                args = null;\\n                continue;\\n              }\\n              next(new Promise(function (resolveXObject, rejectXObject) {\\n                if (!name) {\\n                  throw new _util.FormatError('XObject must be referred to by name.');\\n                }\\n                var xobj = xobjs.get(name);\\n                if (!xobj) {\\n                  operatorList.addOp(fn, args);\\n                  resolveXObject();\\n                  return;\\n                }\\n                if (!(0, _primitives.isStream)(xobj)) {\\n                  throw new _util.FormatError('XObject should be a stream');\\n                }\\n                var type = xobj.dict.get('Subtype');\\n                if (!(0, _primitives.isName)(type)) {\\n                  throw new _util.FormatError('XObject should have a Name subtype');\\n                }\\n                if (type.name === 'Form') {\\n                  stateManager.save();\\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\\n                    stateManager.restore();\\n                    resolveXObject();\\n                  }, rejectXObject);\\n                  return;\\n                } else if (type.name === 'Image') {\\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\\n                } else if (type.name === 'PS') {\\n                  (0, _util.info)('Ignored XObject subtype PS');\\n                } else {\\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\\n                }\\n                resolveXObject();\\n              }).catch(function (reason) {\\n                if (self.options.ignoreErrors) {\\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \\\"' + reason + '\\\".');\\n                  return;\\n                }\\n                throw reason;\\n              }));\\n              return;\\n            case _util.OPS.setFont:\\n              var fontSize = args[1];\\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\\n                operatorList.addDependency(loadedName);\\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\\n              }));\\n              return;\\n            case _util.OPS.endInlineImage:\\n              var cacheKey = args[0].cacheKey;\\n              if (cacheKey) {\\n                var cacheEntry = imageCache[cacheKey];\\n                if (cacheEntry !== undefined) {\\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\\n                  args = null;\\n                  continue;\\n                }\\n              }\\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\\n              args = null;\\n              continue;\\n            case _util.OPS.showText:\\n              args[0] = self.handleText(args[0], stateManager.state);\\n              break;\\n            case _util.OPS.showSpacedText:\\n              var arr = args[0];\\n              var combinedGlyphs = [];\\n              var arrLength = arr.length;\\n              var state = stateManager.state;\\n              for (i = 0; i < arrLength; ++i) {\\n                var arrItem = arr[i];\\n                if ((0, _util.isString)(arrItem)) {\\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\\n                } else if ((0, _util.isNum)(arrItem)) {\\n                  combinedGlyphs.push(arrItem);\\n                }\\n              }\\n              args[0] = combinedGlyphs;\\n              fn = _util.OPS.showText;\\n              break;\\n            case _util.OPS.nextLineShowText:\\n              operatorList.addOp(_util.OPS.nextLine);\\n              args[0] = self.handleText(args[0], stateManager.state);\\n              fn = _util.OPS.showText;\\n              break;\\n            case _util.OPS.nextLineSetSpacingShowText:\\n              operatorList.addOp(_util.OPS.nextLine);\\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\\n              args[0] = self.handleText(args[0], stateManager.state);\\n              fn = _util.OPS.showText;\\n              break;\\n            case _util.OPS.setTextRenderingMode:\\n              stateManager.state.textRenderingMode = args[0];\\n              break;\\n            case _util.OPS.setFillColorSpace:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\n              continue;\\n            case _util.OPS.setStrokeColorSpace:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\n              continue;\\n            case _util.OPS.setFillColor:\\n              cs = stateManager.state.fillColorSpace;\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeColor:\\n              cs = stateManager.state.strokeColorSpace;\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.setFillGray:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeGray:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.setFillCMYKColor:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeCMYKColor:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.setFillRGBColor:\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\n              break;\\n            case _util.OPS.setStrokeRGBColor:\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\n              break;\\n            case _util.OPS.setFillColorN:\\n              cs = stateManager.state.fillColorSpace;\\n              if (cs.name === 'Pattern') {\\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\\n                return;\\n              }\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setFillRGBColor;\\n              break;\\n            case _util.OPS.setStrokeColorN:\\n              cs = stateManager.state.strokeColorSpace;\\n              if (cs.name === 'Pattern') {\\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\\n                return;\\n              }\\n              args = cs.getRgb(args, 0);\\n              fn = _util.OPS.setStrokeRGBColor;\\n              break;\\n            case _util.OPS.shadingFill:\\n              var shadingRes = resources.get('Shading');\\n              if (!shadingRes) {\\n                throw new _util.FormatError('No shading resource found');\\n              }\\n              var shading = shadingRes.get(args[0].name);\\n              if (!shading) {\\n                throw new _util.FormatError('No shading object found');\\n              }\\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\\n              var patternIR = shadingFill.getIR();\\n              args = [patternIR];\\n              fn = _util.OPS.shadingFill;\\n              break;\\n            case _util.OPS.setGState:\\n              var dictName = args[0];\\n              var extGState = resources.get('ExtGState');\\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\\n                break;\\n              }\\n              var gState = extGState.get(dictName.name);\\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\\n              return;\\n            case _util.OPS.moveTo:\\n            case _util.OPS.lineTo:\\n            case _util.OPS.curveTo:\\n            case _util.OPS.curveTo2:\\n            case _util.OPS.curveTo3:\\n            case _util.OPS.closePath:\\n              self.buildPath(operatorList, fn, args);\\n              continue;\\n            case _util.OPS.rectangle:\\n              self.buildPath(operatorList, fn, args);\\n              continue;\\n            case _util.OPS.markPoint:\\n            case _util.OPS.markPointProps:\\n            case _util.OPS.beginMarkedContent:\\n            case _util.OPS.beginMarkedContentProps:\\n            case _util.OPS.endMarkedContent:\\n            case _util.OPS.beginCompat:\\n            case _util.OPS.endCompat:\\n              continue;\\n            default:\\n              if (args !== null) {\\n                for (i = 0, ii = args.length; i < ii; i++) {\\n                  if (args[i] instanceof _primitives.Dict) {\\n                    break;\\n                  }\\n                }\\n                if (i < ii) {\\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\\n                  continue;\\n                }\\n              }\\n          }\\n          operatorList.addOp(fn, args);\\n        }\\n        if (stop) {\\n          next(deferred);\\n          return;\\n        }\\n        closePendingRestoreOPS();\\n        resolve();\\n      }).catch(function (reason) {\\n        if (_this8.options.ignoreErrors) {\\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\\n          closePendingRestoreOPS();\\n          return;\\n        }\\n        throw reason;\\n      });\\n    },\\n    getTextContent: function getTextContent(_ref4) {\\n      var _this9 = this;\\n\\n      var stream = _ref4.stream,\\n          task = _ref4.task,\\n          resources = _ref4.resources,\\n          _ref4$stateManager = _ref4.stateManager,\\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\\n          _ref4$combineTextItem = _ref4.combineTextItems,\\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\\n          sink = _ref4.sink,\\n          _ref4$seenStyles = _ref4.seenStyles,\\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\\n\\n      resources = resources || _primitives.Dict.empty;\\n      stateManager = stateManager || new StateManager(new TextState());\\n      var WhitespaceRegexp = /\\\\s/g;\\n      var textContent = {\\n        items: [],\\n        styles: Object.create(null)\\n      };\\n      var textContentItem = {\\n        initialized: false,\\n        str: [],\\n        width: 0,\\n        height: 0,\\n        vertical: false,\\n        lastAdvanceWidth: 0,\\n        lastAdvanceHeight: 0,\\n        textAdvanceScale: 0,\\n        spaceWidth: 0,\\n        fakeSpaceMin: Infinity,\\n        fakeMultiSpaceMin: Infinity,\\n        fakeMultiSpaceMax: -0,\\n        textRunBreakAllowed: false,\\n        transform: null,\\n        fontName: null\\n      };\\n      var SPACE_FACTOR = 0.3;\\n      var MULTI_SPACE_FACTOR = 1.5;\\n      var MULTI_SPACE_FACTOR_MAX = 4;\\n      var self = this;\\n      var xref = this.xref;\\n      var xobjs = null;\\n      var skipEmptyXObjs = Object.create(null);\\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\n      var textState;\\n      function ensureTextContentItem() {\\n        if (textContentItem.initialized) {\\n          return textContentItem;\\n        }\\n        var font = textState.font;\\n        if (!(font.loadedName in seenStyles)) {\\n          seenStyles[font.loadedName] = true;\\n          textContent.styles[font.loadedName] = {\\n            fontFamily: font.fallbackName,\\n            ascent: font.ascent,\\n            descent: font.descent,\\n            vertical: font.vertical\\n          };\\n        }\\n        textContentItem.fontName = font.loadedName;\\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\\n          var glyphHeight = font.bbox[3] - font.bbox[1];\\n          if (glyphHeight > 0) {\\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\\n            tsm[3] *= glyphHeight;\\n          }\\n        }\\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\\n        textContentItem.transform = trm;\\n        if (!font.vertical) {\\n          textContentItem.width = 0;\\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\\n          textContentItem.vertical = false;\\n        } else {\\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\\n          textContentItem.height = 0;\\n          textContentItem.vertical = true;\\n        }\\n        var a = textState.textLineMatrix[0];\\n        var b = textState.textLineMatrix[1];\\n        var scaleLineX = Math.sqrt(a * a + b * b);\\n        a = textState.ctm[0];\\n        b = textState.ctm[1];\\n        var scaleCtmX = Math.sqrt(a * a + b * b);\\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\\n        textContentItem.lastAdvanceWidth = 0;\\n        textContentItem.lastAdvanceHeight = 0;\\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\\n        if (spaceWidth) {\\n          textContentItem.spaceWidth = spaceWidth;\\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\\n        } else {\\n          textContentItem.spaceWidth = 0;\\n          textContentItem.fakeSpaceMin = Infinity;\\n          textContentItem.fakeMultiSpaceMin = Infinity;\\n          textContentItem.fakeMultiSpaceMax = 0;\\n          textContentItem.textRunBreakAllowed = false;\\n        }\\n        textContentItem.initialized = true;\\n        return textContentItem;\\n      }\\n      function replaceWhitespace(str) {\\n        var i = 0,\\n            ii = str.length,\\n            code;\\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\\n          i++;\\n        }\\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\\n      }\\n      function runBidiTransform(textChunk) {\\n        var str = textChunk.str.join('');\\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\\n        return {\\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\\n          dir: bidiResult.dir,\\n          width: textChunk.width,\\n          height: textChunk.height,\\n          transform: textChunk.transform,\\n          fontName: textChunk.fontName\\n        };\\n      }\\n      function handleSetFont(fontName, fontRef) {\\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\\n          textState.font = translated.font;\\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\n        });\\n      }\\n      function buildTextContentItem(chars) {\\n        var font = textState.font;\\n        var textChunk = ensureTextContentItem();\\n        var width = 0;\\n        var height = 0;\\n        var glyphs = font.charsToGlyphs(chars);\\n        for (var i = 0; i < glyphs.length; i++) {\\n          var glyph = glyphs[i];\\n          var glyphWidth = null;\\n          if (font.vertical && glyph.vmetric) {\\n            glyphWidth = glyph.vmetric[0];\\n          } else {\\n            glyphWidth = glyph.width;\\n          }\\n          var glyphUnicode = glyph.unicode;\\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\\n          }\\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\\n          var charSpacing = textState.charSpacing;\\n          if (glyph.isSpace) {\\n            var wordSpacing = textState.wordSpacing;\\n            charSpacing += wordSpacing;\\n            if (wordSpacing > 0) {\\n              addFakeSpaces(wordSpacing, textChunk.str);\\n            }\\n          }\\n          var tx = 0;\\n          var ty = 0;\\n          if (!font.vertical) {\\n            var w0 = glyphWidth * textState.fontMatrix[0];\\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\\n            width += tx;\\n          } else {\\n            var w1 = glyphWidth * textState.fontMatrix[0];\\n            ty = w1 * textState.fontSize + charSpacing;\\n            height += ty;\\n          }\\n          textState.translateTextMatrix(tx, ty);\\n          textChunk.str.push(glyphUnicode);\\n        }\\n        if (!font.vertical) {\\n          textChunk.lastAdvanceWidth = width;\\n          textChunk.width += width;\\n        } else {\\n          textChunk.lastAdvanceHeight = height;\\n          textChunk.height += Math.abs(height);\\n        }\\n        return textChunk;\\n      }\\n      function addFakeSpaces(width, strBuf) {\\n        if (width < textContentItem.fakeSpaceMin) {\\n          return;\\n        }\\n        if (width < textContentItem.fakeMultiSpaceMin) {\\n          strBuf.push(' ');\\n          return;\\n        }\\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\\n        while (fakeSpaces-- > 0) {\\n          strBuf.push(' ');\\n        }\\n      }\\n      function flushTextContentItem() {\\n        if (!textContentItem.initialized) {\\n          return;\\n        }\\n        textContentItem.width *= textContentItem.textAdvanceScale;\\n        textContentItem.height *= textContentItem.textAdvanceScale;\\n        textContent.items.push(runBidiTransform(textContentItem));\\n        textContentItem.initialized = false;\\n        textContentItem.str.length = 0;\\n      }\\n      function enqueueChunk() {\\n        var length = textContent.items.length;\\n        if (length > 0) {\\n          sink.enqueue(textContent, length);\\n          textContent.items = [];\\n          textContent.styles = Object.create(null);\\n        }\\n      }\\n      var timeSlotManager = new TimeSlotManager();\\n      return new Promise(function promiseBody(resolve, reject) {\\n        var next = function next(promise) {\\n          enqueueChunk();\\n          Promise.all([promise, sink.ready]).then(function () {\\n            try {\\n              promiseBody(resolve, reject);\\n            } catch (ex) {\\n              reject(ex);\\n            }\\n          }, reject);\\n        };\\n        task.ensureNotTerminated();\\n        timeSlotManager.reset();\\n        var stop,\\n            operation = {},\\n            args = [];\\n        while (!(stop = timeSlotManager.check())) {\\n          args.length = 0;\\n          operation.args = args;\\n          if (!preprocessor.read(operation)) {\\n            break;\\n          }\\n          textState = stateManager.state;\\n          var fn = operation.fn;\\n          args = operation.args;\\n          var advance, diff;\\n          switch (fn | 0) {\\n            case _util.OPS.setFont:\\n              var fontNameArg = args[0].name,\\n                  fontSizeArg = args[1];\\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\\n                break;\\n              }\\n              flushTextContentItem();\\n              textState.fontName = fontNameArg;\\n              textState.fontSize = fontSizeArg;\\n              next(handleSetFont(fontNameArg, null));\\n              return;\\n            case _util.OPS.setTextRise:\\n              flushTextContentItem();\\n              textState.textRise = args[0];\\n              break;\\n            case _util.OPS.setHScale:\\n              flushTextContentItem();\\n              textState.textHScale = args[0] / 100;\\n              break;\\n            case _util.OPS.setLeading:\\n              flushTextContentItem();\\n              textState.leading = args[0];\\n              break;\\n            case _util.OPS.moveText:\\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\\n              advance = args[0] - args[1];\\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\\n                textState.translateTextLineMatrix(args[0], args[1]);\\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\\n                addFakeSpaces(diff, textContentItem.str);\\n                break;\\n              }\\n              flushTextContentItem();\\n              textState.translateTextLineMatrix(args[0], args[1]);\\n              textState.textMatrix = textState.textLineMatrix.slice();\\n              break;\\n            case _util.OPS.setLeadingMoveText:\\n              flushTextContentItem();\\n              textState.leading = -args[1];\\n              textState.translateTextLineMatrix(args[0], args[1]);\\n              textState.textMatrix = textState.textLineMatrix.slice();\\n              break;\\n            case _util.OPS.nextLine:\\n              flushTextContentItem();\\n              textState.carriageReturn();\\n              break;\\n            case _util.OPS.setTextMatrix:\\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\\n                textState.translateTextLineMatrix(advance.width, advance.height);\\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\\n                addFakeSpaces(diff, textContentItem.str);\\n                break;\\n              }\\n              flushTextContentItem();\\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\n              break;\\n            case _util.OPS.setCharSpacing:\\n              textState.charSpacing = args[0];\\n              break;\\n            case _util.OPS.setWordSpacing:\\n              textState.wordSpacing = args[0];\\n              break;\\n            case _util.OPS.beginText:\\n              flushTextContentItem();\\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\n              break;\\n            case _util.OPS.showSpacedText:\\n              var items = args[0];\\n              var offset;\\n              for (var j = 0, jj = items.length; j < jj; j++) {\\n                if (typeof items[j] === 'string') {\\n                  buildTextContentItem(items[j]);\\n                } else if ((0, _util.isNum)(items[j])) {\\n                  ensureTextContentItem();\\n                  advance = items[j] * textState.fontSize / 1000;\\n                  var breakTextRun = false;\\n                  if (textState.font.vertical) {\\n                    offset = advance;\\n                    textState.translateTextMatrix(0, offset);\\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\n                    if (!breakTextRun) {\\n                      textContentItem.height += offset;\\n                    }\\n                  } else {\\n                    advance = -advance;\\n                    offset = advance * textState.textHScale;\\n                    textState.translateTextMatrix(offset, 0);\\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\n                    if (!breakTextRun) {\\n                      textContentItem.width += offset;\\n                    }\\n                  }\\n                  if (breakTextRun) {\\n                    flushTextContentItem();\\n                  } else if (advance > 0) {\\n                    addFakeSpaces(advance, textContentItem.str);\\n                  }\\n                }\\n              }\\n              break;\\n            case _util.OPS.showText:\\n              buildTextContentItem(args[0]);\\n              break;\\n            case _util.OPS.nextLineShowText:\\n              flushTextContentItem();\\n              textState.carriageReturn();\\n              buildTextContentItem(args[0]);\\n              break;\\n            case _util.OPS.nextLineSetSpacingShowText:\\n              flushTextContentItem();\\n              textState.wordSpacing = args[0];\\n              textState.charSpacing = args[1];\\n              textState.carriageReturn();\\n              buildTextContentItem(args[2]);\\n              break;\\n            case _util.OPS.paintXObject:\\n              flushTextContentItem();\\n              if (!xobjs) {\\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\\n              }\\n              var name = args[0].name;\\n              if (name && skipEmptyXObjs[name] !== undefined) {\\n                break;\\n              }\\n              next(new Promise(function (resolveXObject, rejectXObject) {\\n                if (!name) {\\n                  throw new _util.FormatError('XObject must be referred to by name.');\\n                }\\n                var xobj = xobjs.get(name);\\n                if (!xobj) {\\n                  resolveXObject();\\n                  return;\\n                }\\n                if (!(0, _primitives.isStream)(xobj)) {\\n                  throw new _util.FormatError('XObject should be a stream');\\n                }\\n                var type = xobj.dict.get('Subtype');\\n                if (!(0, _primitives.isName)(type)) {\\n                  throw new _util.FormatError('XObject should have a Name subtype');\\n                }\\n                if (type.name !== 'Form') {\\n                  skipEmptyXObjs[name] = true;\\n                  resolveXObject();\\n                  return;\\n                }\\n                var currentState = stateManager.state.clone();\\n                var xObjStateManager = new StateManager(currentState);\\n                var matrix = xobj.dict.getArray('Matrix');\\n                if (Array.isArray(matrix) && matrix.length === 6) {\\n                  xObjStateManager.transform(matrix);\\n                }\\n                enqueueChunk();\\n                var sinkWrapper = {\\n                  enqueueInvoked: false,\\n                  enqueue: function enqueue(chunk, size) {\\n                    this.enqueueInvoked = true;\\n                    sink.enqueue(chunk, size);\\n                  },\\n\\n                  get desiredSize() {\\n                    return sink.desiredSize;\\n                  },\\n                  get ready() {\\n                    return sink.ready;\\n                  }\\n                };\\n                self.getTextContent({\\n                  stream: xobj,\\n                  task: task,\\n                  resources: xobj.dict.get('Resources') || resources,\\n                  stateManager: xObjStateManager,\\n                  normalizeWhitespace: normalizeWhitespace,\\n                  combineTextItems: combineTextItems,\\n                  sink: sinkWrapper,\\n                  seenStyles: seenStyles\\n                }).then(function () {\\n                  if (!sinkWrapper.enqueueInvoked) {\\n                    skipEmptyXObjs[name] = true;\\n                  }\\n                  resolveXObject();\\n                }, rejectXObject);\\n              }).catch(function (reason) {\\n                if (reason instanceof _util.AbortException) {\\n                  return;\\n                }\\n                if (self.options.ignoreErrors) {\\n                  (0, _util.warn)('getTextContent - ignoring XObject: \\\"' + reason + '\\\".');\\n                  return;\\n                }\\n                throw reason;\\n              }));\\n              return;\\n            case _util.OPS.setGState:\\n              flushTextContentItem();\\n              var dictName = args[0];\\n              var extGState = resources.get('ExtGState');\\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\\n                break;\\n              }\\n              var gState = extGState.get(dictName.name);\\n              if (!(0, _primitives.isDict)(gState)) {\\n                break;\\n              }\\n              var gStateFont = gState.get('Font');\\n              if (gStateFont) {\\n                textState.fontName = null;\\n                textState.fontSize = gStateFont[1];\\n                next(handleSetFont(null, gStateFont[0]));\\n                return;\\n              }\\n              break;\\n          }\\n          if (textContent.items.length >= sink.desiredSize) {\\n            stop = true;\\n            break;\\n          }\\n        }\\n        if (stop) {\\n          next(deferred);\\n          return;\\n        }\\n        flushTextContentItem();\\n        enqueueChunk();\\n        resolve();\\n      }).catch(function (reason) {\\n        if (reason instanceof _util.AbortException) {\\n          return;\\n        }\\n        if (_this9.options.ignoreErrors) {\\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\\n          flushTextContentItem();\\n          enqueueChunk();\\n          return;\\n        }\\n        throw reason;\\n      });\\n    },\\n\\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\\n      var _this10 = this;\\n\\n      var xref = this.xref;\\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\\n      if (properties.composite) {\\n        var cidSystemInfo = dict.get('CIDSystemInfo');\\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\\n          properties.cidSystemInfo = {\\n            registry: cidSystemInfo.get('Registry'),\\n            ordering: cidSystemInfo.get('Ordering'),\\n            supplement: cidSystemInfo.get('Supplement')\\n          };\\n        }\\n        var cidToGidMap = dict.get('CIDToGIDMap');\\n        if ((0, _primitives.isStream)(cidToGidMap)) {\\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\\n        }\\n      }\\n      var differences = [];\\n      var baseEncodingName = null;\\n      var encoding;\\n      if (dict.has('Encoding')) {\\n        encoding = dict.get('Encoding');\\n        if ((0, _primitives.isDict)(encoding)) {\\n          baseEncodingName = encoding.get('BaseEncoding');\\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\\n          if (encoding.has('Differences')) {\\n            var diffEncoding = encoding.get('Differences');\\n            var index = 0;\\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\\n              var data = xref.fetchIfRef(diffEncoding[j]);\\n              if ((0, _util.isNum)(data)) {\\n                index = data;\\n              } else if ((0, _primitives.isName)(data)) {\\n                differences[index++] = data.name;\\n              } else {\\n                throw new _util.FormatError('Invalid entry in \\\\'Differences\\\\' array: ' + data);\\n              }\\n            }\\n          }\\n        } else if ((0, _primitives.isName)(encoding)) {\\n          baseEncodingName = encoding.name;\\n        } else {\\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\\n        }\\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\\n          baseEncodingName = null;\\n        }\\n      }\\n      if (baseEncodingName) {\\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\\n      } else {\\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\\n        encoding = _encodings.StandardEncoding;\\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\\n          encoding = _encodings.WinAnsiEncoding;\\n        }\\n        if (isSymbolicFont) {\\n          encoding = _encodings.MacRomanEncoding;\\n          if (!properties.file) {\\n            if (/Symbol/i.test(properties.name)) {\\n              encoding = _encodings.SymbolSetEncoding;\\n            } else if (/Dingbats/i.test(properties.name)) {\\n              encoding = _encodings.ZapfDingbatsEncoding;\\n            }\\n          }\\n        }\\n        properties.defaultEncoding = encoding;\\n      }\\n      properties.differences = differences;\\n      properties.baseEncodingName = baseEncodingName;\\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\\n      properties.dict = dict;\\n      return toUnicodePromise.then(function (toUnicode) {\\n        properties.toUnicode = toUnicode;\\n        return _this10.buildToUnicode(properties);\\n      }).then(function (toUnicode) {\\n        properties.toUnicode = toUnicode;\\n        return properties;\\n      });\\n    },\\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\\n      var toUnicode = [],\\n          charcode = void 0,\\n          glyphName = void 0;\\n      var encoding = properties.defaultEncoding.slice();\\n      var baseEncodingName = properties.baseEncodingName;\\n      var differences = properties.differences;\\n      for (charcode in differences) {\\n        glyphName = differences[charcode];\\n        if (glyphName === '.notdef') {\\n          continue;\\n        }\\n        encoding[charcode] = glyphName;\\n      }\\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n      for (charcode in encoding) {\\n        glyphName = encoding[charcode];\\n        if (glyphName === '') {\\n          continue;\\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\\n          var code = 0;\\n          switch (glyphName[0]) {\\n            case 'G':\\n              if (glyphName.length === 3) {\\n                code = parseInt(glyphName.substr(1), 16);\\n              }\\n              break;\\n            case 'g':\\n              if (glyphName.length === 5) {\\n                code = parseInt(glyphName.substr(1), 16);\\n              }\\n              break;\\n            case 'C':\\n            case 'c':\\n              if (glyphName.length >= 3) {\\n                code = +glyphName.substr(1);\\n              }\\n              break;\\n            default:\\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n              if (unicode !== -1) {\\n                code = unicode;\\n              }\\n          }\\n          if (code) {\\n            if (baseEncodingName && code === +charcode) {\\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\n                continue;\\n              }\\n            }\\n            toUnicode[charcode] = String.fromCharCode(code);\\n          }\\n          continue;\\n        }\\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\n      }\\n      return new _fonts.ToUnicodeMap(toUnicode);\\n    },\\n    buildToUnicode: function buildToUnicode(properties) {\\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\\n      if (properties.hasIncludedToUnicodeMap) {\\n        if (!properties.composite && properties.hasEncoding) {\\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\\n        }\\n        return Promise.resolve(properties.toUnicode);\\n      }\\n      if (!properties.composite) {\\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\\n      }\\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\\n        var registry = properties.cidSystemInfo.registry;\\n        var ordering = properties.cidSystemInfo.ordering;\\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\\n        return _cmap.CMapFactory.create({\\n          encoding: ucs2CMapName,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (ucs2CMap) {\\n          var cMap = properties.cMap;\\n          var toUnicode = [];\\n          cMap.forEach(function (charcode, cid) {\\n            if (cid > 0xffff) {\\n              throw new _util.FormatError('Max size of CID is 65,535');\\n            }\\n            var ucs2 = ucs2CMap.lookup(cid);\\n            if (ucs2) {\\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\\n            }\\n          });\\n          return new _fonts.ToUnicodeMap(toUnicode);\\n        });\\n      }\\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\\n    },\\n\\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\\n      var cmapObj = toUnicode;\\n      if ((0, _primitives.isName)(cmapObj)) {\\n        return _cmap.CMapFactory.create({\\n          encoding: cmapObj,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (cmap) {\\n          if (cmap instanceof _cmap.IdentityCMap) {\\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\n          }\\n          return new _fonts.ToUnicodeMap(cmap.getMap());\\n        });\\n      } else if ((0, _primitives.isStream)(cmapObj)) {\\n        return _cmap.CMapFactory.create({\\n          encoding: cmapObj,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (cmap) {\\n          if (cmap instanceof _cmap.IdentityCMap) {\\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\n          }\\n          var map = new Array(cmap.length);\\n          cmap.forEach(function (charCode, token) {\\n            var str = [];\\n            for (var k = 0; k < token.length; k += 2) {\\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\n              if ((w1 & 0xF800) !== 0xD800) {\\n                str.push(w1);\\n                continue;\\n              }\\n              k += 2;\\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\\n            }\\n            map[charCode] = String.fromCharCode.apply(String, str);\\n          });\\n          return new _fonts.ToUnicodeMap(map);\\n        });\\n      }\\n      return Promise.resolve(null);\\n    },\\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\\n      var glyphsData = cidToGidStream.getBytes();\\n      var result = [];\\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\\n        if (glyphID === 0) {\\n          continue;\\n        }\\n        var code = j >> 1;\\n        result[code] = glyphID;\\n      }\\n      return result;\\n    },\\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\\n      var xref = this.xref;\\n      var glyphsWidths = [];\\n      var defaultWidth = 0;\\n      var glyphsVMetrics = [];\\n      var defaultVMetrics;\\n      var i, ii, j, jj, start, code, widths;\\n      if (properties.composite) {\\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\\n        widths = dict.get('W');\\n        if (widths) {\\n          for (i = 0, ii = widths.length; i < ii; i++) {\\n            start = xref.fetchIfRef(widths[i++]);\\n            code = xref.fetchIfRef(widths[i]);\\n            if (Array.isArray(code)) {\\n              for (j = 0, jj = code.length; j < jj; j++) {\\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\\n              }\\n            } else {\\n              var width = xref.fetchIfRef(widths[++i]);\\n              for (j = start; j <= code; j++) {\\n                glyphsWidths[j] = width;\\n              }\\n            }\\n          }\\n        }\\n        if (properties.vertical) {\\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\\n          vmetrics = dict.get('W2');\\n          if (vmetrics) {\\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\\n              start = xref.fetchIfRef(vmetrics[i++]);\\n              code = xref.fetchIfRef(vmetrics[i]);\\n              if (Array.isArray(code)) {\\n                for (j = 0, jj = code.length; j < jj; j++) {\\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\\n                }\\n              } else {\\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\\n                for (j = start; j <= code; j++) {\\n                  glyphsVMetrics[j] = vmetric;\\n                }\\n              }\\n            }\\n          }\\n        }\\n      } else {\\n        var firstChar = properties.firstChar;\\n        widths = dict.get('Widths');\\n        if (widths) {\\n          j = firstChar;\\n          for (i = 0, ii = widths.length; i < ii; i++) {\\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\\n          }\\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\\n        } else {\\n          var baseFontName = dict.get('BaseFont');\\n          if ((0, _primitives.isName)(baseFontName)) {\\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\\n            defaultWidth = metrics.defaultWidth;\\n          }\\n        }\\n      }\\n      var isMonospace = true;\\n      var firstWidth = defaultWidth;\\n      for (var glyph in glyphsWidths) {\\n        var glyphWidth = glyphsWidths[glyph];\\n        if (!glyphWidth) {\\n          continue;\\n        }\\n        if (!firstWidth) {\\n          firstWidth = glyphWidth;\\n          continue;\\n        }\\n        if (firstWidth !== glyphWidth) {\\n          isMonospace = false;\\n          break;\\n        }\\n      }\\n      if (isMonospace) {\\n        properties.flags |= _fonts.FontFlags.FixedPitch;\\n      }\\n      properties.defaultWidth = defaultWidth;\\n      properties.widths = glyphsWidths;\\n      properties.defaultVMetrics = defaultVMetrics;\\n      properties.vmetrics = glyphsVMetrics;\\n    },\\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\\n      var fontNameWoStyle = baseFontName.split('-')[0];\\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\\n    },\\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\\n      var defaultWidth = 0;\\n      var widths = [];\\n      var monospace = false;\\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\\n      var lookupName = stdFontMap[name] || name;\\n      var Metrics = (0, _metrics.getMetrics)();\\n      if (!(lookupName in Metrics)) {\\n        if (this.isSerifFont(name)) {\\n          lookupName = 'Times-Roman';\\n        } else {\\n          lookupName = 'Helvetica';\\n        }\\n      }\\n      var glyphWidths = Metrics[lookupName];\\n      if ((0, _util.isNum)(glyphWidths)) {\\n        defaultWidth = glyphWidths;\\n        monospace = true;\\n      } else {\\n        widths = glyphWidths();\\n      }\\n      return {\\n        defaultWidth: defaultWidth,\\n        monospace: monospace,\\n        widths: widths\\n      };\\n    },\\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\\n      var widths = Object.create(null);\\n      var differences = properties.differences;\\n      var encoding = properties.defaultEncoding;\\n      for (var charCode = 0; charCode < 256; charCode++) {\\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\\n          continue;\\n        }\\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\\n          continue;\\n        }\\n      }\\n      return widths;\\n    },\\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\\n      var baseDict = dict;\\n      var type = dict.get('Subtype');\\n      if (!(0, _primitives.isName)(type)) {\\n        throw new _util.FormatError('invalid font Subtype');\\n      }\\n      var composite = false;\\n      var uint8array;\\n      if (type.name === 'Type0') {\\n        var df = dict.get('DescendantFonts');\\n        if (!df) {\\n          throw new _util.FormatError('Descendant fonts are not specified');\\n        }\\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\\n        type = dict.get('Subtype');\\n        if (!(0, _primitives.isName)(type)) {\\n          throw new _util.FormatError('invalid font Subtype');\\n        }\\n        composite = true;\\n      }\\n      var descriptor = dict.get('FontDescriptor');\\n      if (descriptor) {\\n        var hash = new _murmurhash.MurmurHash3_64();\\n        var encoding = baseDict.getRaw('Encoding');\\n        if ((0, _primitives.isName)(encoding)) {\\n          hash.update(encoding.name);\\n        } else if ((0, _primitives.isRef)(encoding)) {\\n          hash.update(encoding.toString());\\n        } else if ((0, _primitives.isDict)(encoding)) {\\n          var keys = encoding.getKeys();\\n          for (var i = 0, ii = keys.length; i < ii; i++) {\\n            var entry = encoding.getRaw(keys[i]);\\n            if ((0, _primitives.isName)(entry)) {\\n              hash.update(entry.name);\\n            } else if ((0, _primitives.isRef)(entry)) {\\n              hash.update(entry.toString());\\n            } else if (Array.isArray(entry)) {\\n              var diffLength = entry.length,\\n                  diffBuf = new Array(diffLength);\\n              for (var j = 0; j < diffLength; j++) {\\n                var diffEntry = entry[j];\\n                if ((0, _primitives.isName)(diffEntry)) {\\n                  diffBuf[j] = diffEntry.name;\\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\\n                  diffBuf[j] = diffEntry.toString();\\n                }\\n              }\\n              hash.update(diffBuf.join());\\n            }\\n          }\\n        }\\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\n        if ((0, _primitives.isStream)(toUnicode)) {\\n          var stream = toUnicode.str || toUnicode;\\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\\n          hash.update(uint8array);\\n        } else if ((0, _primitives.isName)(toUnicode)) {\\n          hash.update(toUnicode.name);\\n        }\\n        var widths = dict.get('Widths') || baseDict.get('Widths');\\n        if (widths) {\\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\\n          hash.update(uint8array);\\n        }\\n      }\\n      return {\\n        descriptor: descriptor,\\n        dict: dict,\\n        baseDict: baseDict,\\n        composite: composite,\\n        type: type.name,\\n        hash: hash ? hash.hexdigest() : ''\\n      };\\n    },\\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\\n      var _this11 = this;\\n\\n      var baseDict = preEvaluatedFont.baseDict;\\n      var dict = preEvaluatedFont.dict;\\n      var composite = preEvaluatedFont.composite;\\n      var descriptor = preEvaluatedFont.descriptor;\\n      var type = preEvaluatedFont.type;\\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\\n      var properties;\\n      if (!descriptor) {\\n        if (type === 'Type3') {\\n          descriptor = new _primitives.Dict(null);\\n          descriptor.set('FontName', _primitives.Name.get(type));\\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\\n        } else {\\n          var baseFontName = dict.get('BaseFont');\\n          if (!(0, _primitives.isName)(baseFontName)) {\\n            throw new _util.FormatError('Base font is not specified');\\n          }\\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\\n          var metrics = this.getBaseFontMetrics(baseFontName);\\n          var fontNameWoStyle = baseFontName.split('-')[0];\\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\\n          properties = {\\n            type: type,\\n            name: baseFontName,\\n            widths: metrics.widths,\\n            defaultWidth: metrics.defaultWidth,\\n            flags: flags,\\n            firstChar: 0,\\n            lastChar: maxCharIndex\\n          };\\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\\n            return new _fonts.Font(baseFontName, null, properties);\\n          });\\n        }\\n      }\\n      var firstChar = dict.get('FirstChar') || 0;\\n      var lastChar = dict.get('LastChar') || maxCharIndex;\\n      var fontName = descriptor.get('FontName');\\n      var baseFont = dict.get('BaseFont');\\n      if ((0, _util.isString)(fontName)) {\\n        fontName = _primitives.Name.get(fontName);\\n      }\\n      if ((0, _util.isString)(baseFont)) {\\n        baseFont = _primitives.Name.get(baseFont);\\n      }\\n      if (type !== 'Type3') {\\n        var fontNameStr = fontName && fontName.name;\\n        var baseFontStr = baseFont && baseFont.name;\\n        if (fontNameStr !== baseFontStr) {\\n          (0, _util.info)('The FontDescriptor\\\\'s FontName is \\\"' + fontNameStr + '\\\" but should be the same as the Font\\\\'s BaseFont \\\"' + baseFontStr + '\\\"');\\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\\n            fontName = baseFont;\\n          }\\n        }\\n      }\\n      fontName = fontName || baseFont;\\n      if (!(0, _primitives.isName)(fontName)) {\\n        throw new _util.FormatError('invalid font name');\\n      }\\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\\n      if (fontFile) {\\n        if (fontFile.dict) {\\n          var subtype = fontFile.dict.get('Subtype');\\n          if (subtype) {\\n            subtype = subtype.name;\\n          }\\n          var length1 = fontFile.dict.get('Length1');\\n          var length2 = fontFile.dict.get('Length2');\\n          var length3 = fontFile.dict.get('Length3');\\n        }\\n      }\\n      properties = {\\n        type: type,\\n        name: fontName.name,\\n        subtype: subtype,\\n        file: fontFile,\\n        length1: length1,\\n        length2: length2,\\n        length3: length3,\\n        loadedName: baseDict.loadedName,\\n        composite: composite,\\n        wideChars: composite,\\n        fixedPitch: false,\\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\\n        firstChar: firstChar || 0,\\n        lastChar: lastChar || maxCharIndex,\\n        bbox: descriptor.getArray('FontBBox'),\\n        ascent: descriptor.get('Ascent'),\\n        descent: descriptor.get('Descent'),\\n        xHeight: descriptor.get('XHeight'),\\n        capHeight: descriptor.get('CapHeight'),\\n        flags: descriptor.get('Flags'),\\n        italicAngle: descriptor.get('ItalicAngle'),\\n        isType3Font: false\\n      };\\n      var cMapPromise;\\n      if (composite) {\\n        var cidEncoding = baseDict.get('Encoding');\\n        if ((0, _primitives.isName)(cidEncoding)) {\\n          properties.cidEncoding = cidEncoding.name;\\n        }\\n        cMapPromise = _cmap.CMapFactory.create({\\n          encoding: cidEncoding,\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\n          useCMap: null\\n        }).then(function (cMap) {\\n          properties.cMap = cMap;\\n          properties.vertical = properties.cMap.vertical;\\n        });\\n      } else {\\n        cMapPromise = Promise.resolve(undefined);\\n      }\\n      return cMapPromise.then(function () {\\n        return _this11.extractDataStructures(dict, baseDict, properties);\\n      }).then(function (properties) {\\n        _this11.extractWidths(dict, descriptor, properties);\\n        if (type === 'Type3') {\\n          properties.isType3Font = true;\\n        }\\n        return new _fonts.Font(fontName.name, fontFile, properties);\\n      });\\n    }\\n  };\\n  return PartialEvaluator;\\n}();\\nvar TranslatedFont = function TranslatedFontClosure() {\\n  function TranslatedFont(loadedName, font, dict) {\\n    this.loadedName = loadedName;\\n    this.font = font;\\n    this.dict = dict;\\n    this.type3Loaded = null;\\n    this.sent = false;\\n  }\\n  TranslatedFont.prototype = {\\n    send: function send(handler) {\\n      if (this.sent) {\\n        return;\\n      }\\n      var fontData = this.font.exportData();\\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\\n      this.sent = true;\\n    },\\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\\n      if (!this.font.isType3Font) {\\n        throw new Error('Must be a Type3 font.');\\n      }\\n      if (this.type3Loaded) {\\n        return this.type3Loaded;\\n      }\\n      var type3Options = Object.create(evaluator.options);\\n      type3Options.ignoreErrors = false;\\n      var type3Evaluator = evaluator.clone(type3Options);\\n      var translatedFont = this.font;\\n      var loadCharProcsPromise = Promise.resolve();\\n      var charProcs = this.dict.get('CharProcs');\\n      var fontResources = this.dict.get('Resources') || resources;\\n      var charProcKeys = charProcs.getKeys();\\n      var charProcOperatorList = Object.create(null);\\n\\n      var _loop2 = function _loop2() {\\n        var key = charProcKeys[i];\\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\\n          var glyphStream = charProcs.get(key);\\n          var operatorList = new _operator_list.OperatorList();\\n          return type3Evaluator.getOperatorList({\\n            stream: glyphStream,\\n            task: task,\\n            resources: fontResources,\\n            operatorList: operatorList\\n          }).then(function () {\\n            charProcOperatorList[key] = operatorList.getIR();\\n            parentOperatorList.addDependencies(operatorList.dependencies);\\n          }).catch(function (reason) {\\n            (0, _util.warn)('Type3 font resource \\\"' + key + '\\\" is not available.');\\n            var operatorList = new _operator_list.OperatorList();\\n            charProcOperatorList[key] = operatorList.getIR();\\n          });\\n        });\\n      };\\n\\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\\n        _loop2();\\n      }\\n      this.type3Loaded = loadCharProcsPromise.then(function () {\\n        translatedFont.charProcOperatorList = charProcOperatorList;\\n      });\\n      return this.type3Loaded;\\n    }\\n  };\\n  return TranslatedFont;\\n}();\\nvar StateManager = function StateManagerClosure() {\\n  function StateManager(initialState) {\\n    this.state = initialState;\\n    this.stateStack = [];\\n  }\\n  StateManager.prototype = {\\n    save: function save() {\\n      var old = this.state;\\n      this.stateStack.push(this.state);\\n      this.state = old.clone();\\n    },\\n    restore: function restore() {\\n      var prev = this.stateStack.pop();\\n      if (prev) {\\n        this.state = prev;\\n      }\\n    },\\n    transform: function transform(args) {\\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\\n    }\\n  };\\n  return StateManager;\\n}();\\nvar TextState = function TextStateClosure() {\\n  function TextState() {\\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\n    this.fontName = null;\\n    this.fontSize = 0;\\n    this.font = null;\\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\n    this.charSpacing = 0;\\n    this.wordSpacing = 0;\\n    this.leading = 0;\\n    this.textHScale = 1;\\n    this.textRise = 0;\\n  }\\n  TextState.prototype = {\\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\n      var m = this.textMatrix;\\n      m[0] = a;\\n      m[1] = b;\\n      m[2] = c;\\n      m[3] = d;\\n      m[4] = e;\\n      m[5] = f;\\n    },\\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\n      var m = this.textLineMatrix;\\n      m[0] = a;\\n      m[1] = b;\\n      m[2] = c;\\n      m[3] = d;\\n      m[4] = e;\\n      m[5] = f;\\n    },\\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\\n      var m = this.textMatrix;\\n      m[4] = m[0] * x + m[2] * y + m[4];\\n      m[5] = m[1] * x + m[3] * y + m[5];\\n    },\\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\\n      var m = this.textLineMatrix;\\n      m[4] = m[0] * x + m[2] * y + m[4];\\n      m[5] = m[1] * x + m[3] * y + m[5];\\n    },\\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\\n      var font = this.font;\\n      if (!font) {\\n        return null;\\n      }\\n      var m = this.textLineMatrix;\\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\\n        return null;\\n      }\\n      var txDiff = e - m[4],\\n          tyDiff = f - m[5];\\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\\n        return null;\\n      }\\n      var tx,\\n          ty,\\n          denominator = a * d - b * c;\\n      if (font.vertical) {\\n        tx = -tyDiff * c / denominator;\\n        ty = tyDiff * a / denominator;\\n      } else {\\n        tx = txDiff * d / denominator;\\n        ty = -txDiff * b / denominator;\\n      }\\n      return {\\n        width: tx,\\n        height: ty,\\n        value: font.vertical ? ty : tx\\n      };\\n    },\\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\\n    },\\n    carriageReturn: function TextState_carriageReturn() {\\n      this.translateTextLineMatrix(0, -this.leading);\\n      this.textMatrix = this.textLineMatrix.slice();\\n    },\\n    clone: function TextState_clone() {\\n      var clone = Object.create(this);\\n      clone.textMatrix = this.textMatrix.slice();\\n      clone.textLineMatrix = this.textLineMatrix.slice();\\n      clone.fontMatrix = this.fontMatrix.slice();\\n      return clone;\\n    }\\n  };\\n  return TextState;\\n}();\\nvar EvalState = function EvalStateClosure() {\\n  function EvalState() {\\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\n    this.font = null;\\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\n  }\\n  EvalState.prototype = {\\n    clone: function CanvasExtraState_clone() {\\n      return Object.create(this);\\n    }\\n  };\\n  return EvalState;\\n}();\\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\\n    t['w'] = {\\n      id: _util.OPS.setLineWidth,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['J'] = {\\n      id: _util.OPS.setLineCap,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['j'] = {\\n      id: _util.OPS.setLineJoin,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['M'] = {\\n      id: _util.OPS.setMiterLimit,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['d'] = {\\n      id: _util.OPS.setDash,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['ri'] = {\\n      id: _util.OPS.setRenderingIntent,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['i'] = {\\n      id: _util.OPS.setFlatness,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['gs'] = {\\n      id: _util.OPS.setGState,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['q'] = {\\n      id: _util.OPS.save,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['Q'] = {\\n      id: _util.OPS.restore,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['cm'] = {\\n      id: _util.OPS.transform,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['m'] = {\\n      id: _util.OPS.moveTo,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['l'] = {\\n      id: _util.OPS.lineTo,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['c'] = {\\n      id: _util.OPS.curveTo,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['v'] = {\\n      id: _util.OPS.curveTo2,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['y'] = {\\n      id: _util.OPS.curveTo3,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['h'] = {\\n      id: _util.OPS.closePath,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['re'] = {\\n      id: _util.OPS.rectangle,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['S'] = {\\n      id: _util.OPS.stroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['s'] = {\\n      id: _util.OPS.closeStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['f'] = {\\n      id: _util.OPS.fill,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['F'] = {\\n      id: _util.OPS.fill,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['f*'] = {\\n      id: _util.OPS.eoFill,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['B'] = {\\n      id: _util.OPS.fillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['B*'] = {\\n      id: _util.OPS.eoFillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['b'] = {\\n      id: _util.OPS.closeFillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['b*'] = {\\n      id: _util.OPS.closeEOFillStroke,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['n'] = {\\n      id: _util.OPS.endPath,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['W'] = {\\n      id: _util.OPS.clip,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['W*'] = {\\n      id: _util.OPS.eoClip,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['BT'] = {\\n      id: _util.OPS.beginText,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['ET'] = {\\n      id: _util.OPS.endText,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['Tc'] = {\\n      id: _util.OPS.setCharSpacing,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Tw'] = {\\n      id: _util.OPS.setWordSpacing,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Tz'] = {\\n      id: _util.OPS.setHScale,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['TL'] = {\\n      id: _util.OPS.setLeading,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Tf'] = {\\n      id: _util.OPS.setFont,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['Tr'] = {\\n      id: _util.OPS.setTextRenderingMode,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Ts'] = {\\n      id: _util.OPS.setTextRise,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Td'] = {\\n      id: _util.OPS.moveText,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['TD'] = {\\n      id: _util.OPS.setLeadingMoveText,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['Tm'] = {\\n      id: _util.OPS.setTextMatrix,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['T*'] = {\\n      id: _util.OPS.nextLine,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['Tj'] = {\\n      id: _util.OPS.showText,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['TJ'] = {\\n      id: _util.OPS.showSpacedText,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['\\\\''] = {\\n      id: _util.OPS.nextLineShowText,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['\\\"'] = {\\n      id: _util.OPS.nextLineSetSpacingShowText,\\n      numArgs: 3,\\n      variableArgs: false\\n    };\\n    t['d0'] = {\\n      id: _util.OPS.setCharWidth,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['d1'] = {\\n      id: _util.OPS.setCharWidthAndBounds,\\n      numArgs: 6,\\n      variableArgs: false\\n    };\\n    t['CS'] = {\\n      id: _util.OPS.setStrokeColorSpace,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['cs'] = {\\n      id: _util.OPS.setFillColorSpace,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['SC'] = {\\n      id: _util.OPS.setStrokeColor,\\n      numArgs: 4,\\n      variableArgs: true\\n    };\\n    t['SCN'] = {\\n      id: _util.OPS.setStrokeColorN,\\n      numArgs: 33,\\n      variableArgs: true\\n    };\\n    t['sc'] = {\\n      id: _util.OPS.setFillColor,\\n      numArgs: 4,\\n      variableArgs: true\\n    };\\n    t['scn'] = {\\n      id: _util.OPS.setFillColorN,\\n      numArgs: 33,\\n      variableArgs: true\\n    };\\n    t['G'] = {\\n      id: _util.OPS.setStrokeGray,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['g'] = {\\n      id: _util.OPS.setFillGray,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['RG'] = {\\n      id: _util.OPS.setStrokeRGBColor,\\n      numArgs: 3,\\n      variableArgs: false\\n    };\\n    t['rg'] = {\\n      id: _util.OPS.setFillRGBColor,\\n      numArgs: 3,\\n      variableArgs: false\\n    };\\n    t['K'] = {\\n      id: _util.OPS.setStrokeCMYKColor,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['k'] = {\\n      id: _util.OPS.setFillCMYKColor,\\n      numArgs: 4,\\n      variableArgs: false\\n    };\\n    t['sh'] = {\\n      id: _util.OPS.shadingFill,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['BI'] = {\\n      id: _util.OPS.beginInlineImage,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['ID'] = {\\n      id: _util.OPS.beginImageData,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['EI'] = {\\n      id: _util.OPS.endInlineImage,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['Do'] = {\\n      id: _util.OPS.paintXObject,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['MP'] = {\\n      id: _util.OPS.markPoint,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['DP'] = {\\n      id: _util.OPS.markPointProps,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['BMC'] = {\\n      id: _util.OPS.beginMarkedContent,\\n      numArgs: 1,\\n      variableArgs: false\\n    };\\n    t['BDC'] = {\\n      id: _util.OPS.beginMarkedContentProps,\\n      numArgs: 2,\\n      variableArgs: false\\n    };\\n    t['EMC'] = {\\n      id: _util.OPS.endMarkedContent,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['BX'] = {\\n      id: _util.OPS.beginCompat,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['EX'] = {\\n      id: _util.OPS.endCompat,\\n      numArgs: 0,\\n      variableArgs: false\\n    };\\n    t['BM'] = null;\\n    t['BD'] = null;\\n    t['true'] = null;\\n    t['fa'] = null;\\n    t['fal'] = null;\\n    t['fals'] = null;\\n    t['false'] = null;\\n    t['nu'] = null;\\n    t['nul'] = null;\\n    t['null'] = null;\\n  });\\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\\n    this.opMap = getOPMap();\\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\\n    this.stateManager = stateManager;\\n    this.nonProcessedArgs = [];\\n  }\\n  EvaluatorPreprocessor.prototype = {\\n    get savedStatesDepth() {\\n      return this.stateManager.stateStack.length;\\n    },\\n    read: function EvaluatorPreprocessor_read(operation) {\\n      var args = operation.args;\\n      while (true) {\\n        var obj = this.parser.getObj();\\n        if ((0, _primitives.isCmd)(obj)) {\\n          var cmd = obj.cmd;\\n          var opSpec = this.opMap[cmd];\\n          if (!opSpec) {\\n            (0, _util.warn)('Unknown command \\\"' + cmd + '\\\"');\\n            continue;\\n          }\\n          var fn = opSpec.id;\\n          var numArgs = opSpec.numArgs;\\n          var argsLength = args !== null ? args.length : 0;\\n          if (!opSpec.variableArgs) {\\n            if (argsLength !== numArgs) {\\n              var nonProcessedArgs = this.nonProcessedArgs;\\n              while (argsLength > numArgs) {\\n                nonProcessedArgs.push(args.shift());\\n                argsLength--;\\n              }\\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\\n                if (args === null) {\\n                  args = [];\\n                }\\n                args.unshift(nonProcessedArgs.pop());\\n                argsLength++;\\n              }\\n            }\\n            if (argsLength < numArgs) {\\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\\n              if (args !== null) {\\n                args.length = 0;\\n              }\\n              continue;\\n            }\\n          } else if (argsLength > numArgs) {\\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\\n          }\\n          this.preprocessCommand(fn, args);\\n          operation.fn = fn;\\n          operation.args = args;\\n          return true;\\n        }\\n        if ((0, _primitives.isEOF)(obj)) {\\n          return false;\\n        }\\n        if (obj !== null) {\\n          if (args === null) {\\n            args = [];\\n          }\\n          args.push(obj);\\n          if (args.length > 33) {\\n            throw new _util.FormatError('Too many arguments');\\n          }\\n        }\\n      }\\n    },\\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\\n      switch (fn | 0) {\\n        case _util.OPS.save:\\n          this.stateManager.save();\\n          break;\\n        case _util.OPS.restore:\\n          this.stateManager.restore();\\n          break;\\n        case _util.OPS.transform:\\n          this.stateManager.transform(args);\\n          break;\\n      }\\n    }\\n  };\\n  return EvaluatorPreprocessor;\\n}();\\nexports.PartialEvaluator = PartialEvaluator;\\n\\n/***/ }),\\n/* 136 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _parser = __w_pdfjs_require__(26);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\\nvar CMap = function CMapClosure() {\\n  function CMap(builtInCMap) {\\n    this.codespaceRanges = [[], [], [], []];\\n    this.numCodespaceRanges = 0;\\n    this._map = [];\\n    this.name = '';\\n    this.vertical = false;\\n    this.useCMap = null;\\n    this.builtInCMap = builtInCMap;\\n  }\\n  CMap.prototype = {\\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\\n      this.codespaceRanges[n - 1].push(low, high);\\n      this.numCodespaceRanges++;\\n    },\\n    mapCidRange: function mapCidRange(low, high, dstLow) {\\n      while (low <= high) {\\n        this._map[low++] = dstLow++;\\n      }\\n    },\\n    mapBfRange: function mapBfRange(low, high, dstLow) {\\n      var lastByte = dstLow.length - 1;\\n      while (low <= high) {\\n        this._map[low++] = dstLow;\\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\\n      }\\n    },\\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\\n      var i = 0,\\n          ii = array.length;\\n      while (low <= high && i < ii) {\\n        this._map[low] = array[i++];\\n        ++low;\\n      }\\n    },\\n    mapOne: function mapOne(src, dst) {\\n      this._map[src] = dst;\\n    },\\n    lookup: function lookup(code) {\\n      return this._map[code];\\n    },\\n    contains: function contains(code) {\\n      return this._map[code] !== undefined;\\n    },\\n    forEach: function forEach(callback) {\\n      var map = this._map;\\n      var length = map.length;\\n      if (length <= 0x10000) {\\n        for (var i = 0; i < length; i++) {\\n          if (map[i] !== undefined) {\\n            callback(i, map[i]);\\n          }\\n        }\\n      } else {\\n        for (var _i in map) {\\n          callback(_i, map[_i]);\\n        }\\n      }\\n    },\\n    charCodeOf: function charCodeOf(value) {\\n      var map = this._map;\\n      if (map.length <= 0x10000) {\\n        return map.indexOf(value);\\n      }\\n      for (var charCode in map) {\\n        if (map[charCode] === value) {\\n          return charCode | 0;\\n        }\\n      }\\n      return -1;\\n    },\\n    getMap: function getMap() {\\n      return this._map;\\n    },\\n    readCharCode: function readCharCode(str, offset, out) {\\n      var c = 0;\\n      var codespaceRanges = this.codespaceRanges;\\n      var codespaceRangesLen = this.codespaceRanges.length;\\n      for (var n = 0; n < codespaceRangesLen; n++) {\\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\\n        var codespaceRange = codespaceRanges[n];\\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\\n          var low = codespaceRange[k++];\\n          var high = codespaceRange[k++];\\n          if (c >= low && c <= high) {\\n            out.charcode = c;\\n            out.length = n + 1;\\n            return;\\n          }\\n        }\\n      }\\n      out.charcode = 0;\\n      out.length = 1;\\n    },\\n\\n    get length() {\\n      return this._map.length;\\n    },\\n    get isIdentityCMap() {\\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\\n        return false;\\n      }\\n      if (this._map.length !== 0x10000) {\\n        return false;\\n      }\\n      for (var i = 0; i < 0x10000; i++) {\\n        if (this._map[i] !== i) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }\\n  };\\n  return CMap;\\n}();\\nvar IdentityCMap = function IdentityCMapClosure() {\\n  function IdentityCMap(vertical, n) {\\n    CMap.call(this);\\n    this.vertical = vertical;\\n    this.addCodespaceRange(n, 0, 0xffff);\\n  }\\n  _util.Util.inherit(IdentityCMap, CMap, {});\\n  IdentityCMap.prototype = {\\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\\n    mapCidRange: function mapCidRange(low, high, dstLow) {\\n      (0, _util.unreachable)('should not call mapCidRange');\\n    },\\n    mapBfRange: function mapBfRange(low, high, dstLow) {\\n      (0, _util.unreachable)('should not call mapBfRange');\\n    },\\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\\n    },\\n    mapOne: function mapOne(src, dst) {\\n      (0, _util.unreachable)('should not call mapCidOne');\\n    },\\n    lookup: function lookup(code) {\\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\\n    },\\n    contains: function contains(code) {\\n      return Number.isInteger(code) && code <= 0xffff;\\n    },\\n    forEach: function forEach(callback) {\\n      for (var i = 0; i <= 0xffff; i++) {\\n        callback(i, i);\\n      }\\n    },\\n    charCodeOf: function charCodeOf(value) {\\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\\n    },\\n    getMap: function getMap() {\\n      var map = new Array(0x10000);\\n      for (var i = 0; i <= 0xffff; i++) {\\n        map[i] = i;\\n      }\\n      return map;\\n    },\\n\\n    readCharCode: CMap.prototype.readCharCode,\\n    get length() {\\n      return 0x10000;\\n    },\\n    get isIdentityCMap() {\\n      (0, _util.unreachable)('should not access .isIdentityCMap');\\n    }\\n  };\\n  return IdentityCMap;\\n}();\\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\\n  function hexToInt(a, size) {\\n    var n = 0;\\n    for (var i = 0; i <= size; i++) {\\n      n = n << 8 | a[i];\\n    }\\n    return n >>> 0;\\n  }\\n  function hexToStr(a, size) {\\n    if (size === 1) {\\n      return String.fromCharCode(a[0], a[1]);\\n    }\\n    if (size === 3) {\\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\\n    }\\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\\n  }\\n  function addHex(a, b, size) {\\n    var c = 0;\\n    for (var i = size; i >= 0; i--) {\\n      c += a[i] + b[i];\\n      a[i] = c & 255;\\n      c >>= 8;\\n    }\\n  }\\n  function incHex(a, size) {\\n    var c = 1;\\n    for (var i = size; i >= 0 && c > 0; i--) {\\n      c += a[i];\\n      a[i] = c & 255;\\n      c >>= 8;\\n    }\\n  }\\n  var MAX_NUM_SIZE = 16;\\n  var MAX_ENCODED_NUM_SIZE = 19;\\n  function BinaryCMapStream(data) {\\n    this.buffer = data;\\n    this.pos = 0;\\n    this.end = data.length;\\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\\n  }\\n  BinaryCMapStream.prototype = {\\n    readByte: function readByte() {\\n      if (this.pos >= this.end) {\\n        return -1;\\n      }\\n      return this.buffer[this.pos++];\\n    },\\n    readNumber: function readNumber() {\\n      var n = 0;\\n      var last;\\n      do {\\n        var b = this.readByte();\\n        if (b < 0) {\\n          throw new _util.FormatError('unexpected EOF in bcmap');\\n        }\\n        last = !(b & 0x80);\\n        n = n << 7 | b & 0x7F;\\n      } while (!last);\\n      return n;\\n    },\\n    readSigned: function readSigned() {\\n      var n = this.readNumber();\\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\\n    },\\n    readHex: function readHex(num, size) {\\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\\n      this.pos += size + 1;\\n    },\\n    readHexNumber: function readHexNumber(num, size) {\\n      var last;\\n      var stack = this.tmpBuf,\\n          sp = 0;\\n      do {\\n        var b = this.readByte();\\n        if (b < 0) {\\n          throw new _util.FormatError('unexpected EOF in bcmap');\\n        }\\n        last = !(b & 0x80);\\n        stack[sp++] = b & 0x7F;\\n      } while (!last);\\n      var i = size,\\n          buffer = 0,\\n          bufferSize = 0;\\n      while (i >= 0) {\\n        while (bufferSize < 8 && stack.length > 0) {\\n          buffer = stack[--sp] << bufferSize | buffer;\\n          bufferSize += 7;\\n        }\\n        num[i] = buffer & 255;\\n        i--;\\n        buffer >>= 8;\\n        bufferSize -= 8;\\n      }\\n    },\\n    readHexSigned: function readHexSigned(num, size) {\\n      this.readHexNumber(num, size);\\n      var sign = num[size] & 1 ? 255 : 0;\\n      var c = 0;\\n      for (var i = 0; i <= size; i++) {\\n        c = (c & 1) << 8 | num[i];\\n        num[i] = c >> 1 ^ sign;\\n      }\\n    },\\n    readString: function readString() {\\n      var len = this.readNumber();\\n      var s = '';\\n      for (var i = 0; i < len; i++) {\\n        s += String.fromCharCode(this.readNumber());\\n      }\\n      return s;\\n    }\\n  };\\n  function processBinaryCMap(data, cMap, extend) {\\n    return new Promise(function (resolve, reject) {\\n      var stream = new BinaryCMapStream(data);\\n      var header = stream.readByte();\\n      cMap.vertical = !!(header & 1);\\n      var useCMap = null;\\n      var start = new Uint8Array(MAX_NUM_SIZE);\\n      var end = new Uint8Array(MAX_NUM_SIZE);\\n      var char = new Uint8Array(MAX_NUM_SIZE);\\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\\n      var code;\\n      var b;\\n      while ((b = stream.readByte()) >= 0) {\\n        var type = b >> 5;\\n        if (type === 7) {\\n          switch (b & 0x1F) {\\n            case 0:\\n              stream.readString();\\n              break;\\n            case 1:\\n              useCMap = stream.readString();\\n              break;\\n          }\\n          continue;\\n        }\\n        var sequence = !!(b & 0x10);\\n        var dataSize = b & 15;\\n        if (dataSize + 1 > MAX_NUM_SIZE) {\\n          throw new Error('processBinaryCMap: Invalid dataSize.');\\n        }\\n        var ucs2DataSize = 1;\\n        var subitemsCount = stream.readNumber();\\n        var i;\\n        switch (type) {\\n          case 0:\\n            stream.readHex(start, dataSize);\\n            stream.readHexNumber(end, dataSize);\\n            addHex(end, start, dataSize);\\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, dataSize);\\n              stream.readHexNumber(start, dataSize);\\n              addHex(start, end, dataSize);\\n              stream.readHexNumber(end, dataSize);\\n              addHex(end, start, dataSize);\\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\n            }\\n            break;\\n          case 1:\\n            stream.readHex(start, dataSize);\\n            stream.readHexNumber(end, dataSize);\\n            addHex(end, start, dataSize);\\n            stream.readNumber();\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, dataSize);\\n              stream.readHexNumber(start, dataSize);\\n              addHex(start, end, dataSize);\\n              stream.readHexNumber(end, dataSize);\\n              addHex(end, start, dataSize);\\n              stream.readNumber();\\n            }\\n            break;\\n          case 2:\\n            stream.readHex(char, dataSize);\\n            code = stream.readNumber();\\n            cMap.mapOne(hexToInt(char, dataSize), code);\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(char, dataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(tmp, dataSize);\\n                addHex(char, tmp, dataSize);\\n              }\\n              code = stream.readSigned() + (code + 1);\\n              cMap.mapOne(hexToInt(char, dataSize), code);\\n            }\\n            break;\\n          case 3:\\n            stream.readHex(start, dataSize);\\n            stream.readHexNumber(end, dataSize);\\n            addHex(end, start, dataSize);\\n            code = stream.readNumber();\\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, dataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(start, dataSize);\\n                addHex(start, end, dataSize);\\n              } else {\\n                start.set(end);\\n              }\\n              stream.readHexNumber(end, dataSize);\\n              addHex(end, start, dataSize);\\n              code = stream.readNumber();\\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\n            }\\n            break;\\n          case 4:\\n            stream.readHex(char, ucs2DataSize);\\n            stream.readHex(charCode, dataSize);\\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(char, ucs2DataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(tmp, ucs2DataSize);\\n                addHex(char, tmp, ucs2DataSize);\\n              }\\n              incHex(charCode, dataSize);\\n              stream.readHexSigned(tmp, dataSize);\\n              addHex(charCode, tmp, dataSize);\\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\n            }\\n            break;\\n          case 5:\\n            stream.readHex(start, ucs2DataSize);\\n            stream.readHexNumber(end, ucs2DataSize);\\n            addHex(end, start, ucs2DataSize);\\n            stream.readHex(charCode, dataSize);\\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\n            for (i = 1; i < subitemsCount; i++) {\\n              incHex(end, ucs2DataSize);\\n              if (!sequence) {\\n                stream.readHexNumber(start, ucs2DataSize);\\n                addHex(start, end, ucs2DataSize);\\n              } else {\\n                start.set(end);\\n              }\\n              stream.readHexNumber(end, ucs2DataSize);\\n              addHex(end, start, ucs2DataSize);\\n              stream.readHex(charCode, dataSize);\\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\n            }\\n            break;\\n          default:\\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\\n            return;\\n        }\\n      }\\n      if (useCMap) {\\n        resolve(extend(useCMap));\\n        return;\\n      }\\n      resolve(cMap);\\n    });\\n  }\\n  function BinaryCMapReader() {}\\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\\n  return BinaryCMapReader;\\n}();\\nvar CMapFactory = function CMapFactoryClosure() {\\n  function strToInt(str) {\\n    var a = 0;\\n    for (var i = 0; i < str.length; i++) {\\n      a = a << 8 | str.charCodeAt(i);\\n    }\\n    return a >>> 0;\\n  }\\n  function expectString(obj) {\\n    if (!(0, _util.isString)(obj)) {\\n      throw new _util.FormatError('Malformed CMap: expected string.');\\n    }\\n  }\\n  function expectInt(obj) {\\n    if (!Number.isInteger(obj)) {\\n      throw new _util.FormatError('Malformed CMap: expected int.');\\n    }\\n  }\\n  function parseBfChar(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var src = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectString(obj);\\n      var dst = obj;\\n      cMap.mapOne(src, dst);\\n    }\\n  }\\n  function parseBfRange(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var low = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectString(obj);\\n      var high = strToInt(obj);\\n      obj = lexer.getObj();\\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\\n        cMap.mapBfRange(low, high, dstLow);\\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\\n        obj = lexer.getObj();\\n        var array = [];\\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\\n          array.push(obj);\\n          obj = lexer.getObj();\\n        }\\n        cMap.mapBfRangeToArray(low, high, array);\\n      } else {\\n        break;\\n      }\\n    }\\n    throw new _util.FormatError('Invalid bf range.');\\n  }\\n  function parseCidChar(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var src = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectInt(obj);\\n      var dst = obj;\\n      cMap.mapOne(src, dst);\\n    }\\n  }\\n  function parseCidRange(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\\n        return;\\n      }\\n      expectString(obj);\\n      var low = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectString(obj);\\n      var high = strToInt(obj);\\n      obj = lexer.getObj();\\n      expectInt(obj);\\n      var dstLow = obj;\\n      cMap.mapCidRange(low, high, dstLow);\\n    }\\n  }\\n  function parseCodespaceRange(cMap, lexer) {\\n    while (true) {\\n      var obj = lexer.getObj();\\n      if ((0, _primitives.isEOF)(obj)) {\\n        break;\\n      }\\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\\n        return;\\n      }\\n      if (!(0, _util.isString)(obj)) {\\n        break;\\n      }\\n      var low = strToInt(obj);\\n      obj = lexer.getObj();\\n      if (!(0, _util.isString)(obj)) {\\n        break;\\n      }\\n      var high = strToInt(obj);\\n      cMap.addCodespaceRange(obj.length, low, high);\\n    }\\n    throw new _util.FormatError('Invalid codespace range.');\\n  }\\n  function parseWMode(cMap, lexer) {\\n    var obj = lexer.getObj();\\n    if (Number.isInteger(obj)) {\\n      cMap.vertical = !!obj;\\n    }\\n  }\\n  function parseCMapName(cMap, lexer) {\\n    var obj = lexer.getObj();\\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\\n      cMap.name = obj.name;\\n    }\\n  }\\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\\n    var previous;\\n    var embededUseCMap;\\n    objLoop: while (true) {\\n      try {\\n        var obj = lexer.getObj();\\n        if ((0, _primitives.isEOF)(obj)) {\\n          break;\\n        } else if ((0, _primitives.isName)(obj)) {\\n          if (obj.name === 'WMode') {\\n            parseWMode(cMap, lexer);\\n          } else if (obj.name === 'CMapName') {\\n            parseCMapName(cMap, lexer);\\n          }\\n          previous = obj;\\n        } else if ((0, _primitives.isCmd)(obj)) {\\n          switch (obj.cmd) {\\n            case 'endcmap':\\n              break objLoop;\\n            case 'usecmap':\\n              if ((0, _primitives.isName)(previous)) {\\n                embededUseCMap = previous.name;\\n              }\\n              break;\\n            case 'begincodespacerange':\\n              parseCodespaceRange(cMap, lexer);\\n              break;\\n            case 'beginbfchar':\\n              parseBfChar(cMap, lexer);\\n              break;\\n            case 'begincidchar':\\n              parseCidChar(cMap, lexer);\\n              break;\\n            case 'beginbfrange':\\n              parseBfRange(cMap, lexer);\\n              break;\\n            case 'begincidrange':\\n              parseCidRange(cMap, lexer);\\n              break;\\n          }\\n        }\\n      } catch (ex) {\\n        if (ex instanceof _util.MissingDataException) {\\n          throw ex;\\n        }\\n        (0, _util.warn)('Invalid cMap data: ' + ex);\\n        continue;\\n      }\\n    }\\n    if (!useCMap && embededUseCMap) {\\n      useCMap = embededUseCMap;\\n    }\\n    if (useCMap) {\\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\n    }\\n    return Promise.resolve(cMap);\\n  }\\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\\n      cMap.useCMap = newCMap;\\n      if (cMap.numCodespaceRanges === 0) {\\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\\n        }\\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\\n      }\\n      cMap.useCMap.forEach(function (key, value) {\\n        if (!cMap.contains(key)) {\\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\\n        }\\n      });\\n      return cMap;\\n    });\\n  }\\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\\n    if (name === 'Identity-H') {\\n      return Promise.resolve(new IdentityCMap(false, 2));\\n    } else if (name === 'Identity-V') {\\n      return Promise.resolve(new IdentityCMap(true, 2));\\n    }\\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\\n    }\\n    if (!fetchBuiltInCMap) {\\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\\n    }\\n    return fetchBuiltInCMap(name).then(function (data) {\\n      var cMapData = data.cMapData,\\n          compressionType = data.compressionType;\\n      var cMap = new CMap(true);\\n      if (compressionType === _util.CMapCompressionType.BINARY) {\\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\n        });\\n      }\\n      if (compressionType === _util.CMapCompressionType.NONE) {\\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\\n      }\\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\\n    });\\n  }\\n  return {\\n    create: function create(params) {\\n      var encoding = params.encoding;\\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\\n      var useCMap = params.useCMap;\\n      if ((0, _primitives.isName)(encoding)) {\\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\\n      } else if ((0, _primitives.isStream)(encoding)) {\\n        var cMap = new CMap();\\n        var lexer = new _parser.Lexer(encoding);\\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\\n          if (parsedCMap.isIdentityCMap) {\\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\\n          }\\n          return parsedCMap;\\n        });\\n      }\\n      return Promise.reject(new Error('Encoding required.'));\\n    }\\n  };\\n}();\\nexports.CMap = CMap;\\nexports.IdentityCMap = IdentityCMap;\\nexports.CMapFactory = CMapFactory;\\n\\n/***/ }),\\n/* 137 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _cff_parser = __w_pdfjs_require__(69);\\n\\nvar _glyphlist = __w_pdfjs_require__(43);\\n\\nvar _encodings = __w_pdfjs_require__(21);\\n\\nvar _standard_fonts = __w_pdfjs_require__(70);\\n\\nvar _unicode = __w_pdfjs_require__(71);\\n\\nvar _font_renderer = __w_pdfjs_require__(139);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _type1_parser = __w_pdfjs_require__(140);\\n\\nvar PRIVATE_USE_OFFSET_START = 0xE000;\\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\\nvar PDF_GLYPH_SPACE_UNITS = 1000;\\nvar SEAC_ANALYSIS_ENABLED = false;\\nvar FontFlags = {\\n  FixedPitch: 1,\\n  Serif: 2,\\n  Symbolic: 4,\\n  Script: 8,\\n  Nonsymbolic: 32,\\n  Italic: 64,\\n  AllCap: 65536,\\n  SmallCap: 131072,\\n  ForceBold: 262144\\n};\\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\\nfunction adjustWidths(properties) {\\n  if (!properties.fontMatrix) {\\n    return;\\n  }\\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\\n    return;\\n  }\\n  var scale = 0.001 / properties.fontMatrix[0];\\n  var glyphsWidths = properties.widths;\\n  for (var glyph in glyphsWidths) {\\n    glyphsWidths[glyph] *= scale;\\n  }\\n  properties.defaultWidth *= scale;\\n}\\nfunction adjustToUnicode(properties, builtInEncoding) {\\n  if (properties.hasIncludedToUnicodeMap) {\\n    return;\\n  }\\n  if (properties.hasEncoding) {\\n    return;\\n  }\\n  if (builtInEncoding === properties.defaultEncoding) {\\n    return;\\n  }\\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\\n    return;\\n  }\\n  var toUnicode = [],\\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n  for (var charCode in builtInEncoding) {\\n    var glyphName = builtInEncoding[charCode];\\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n    if (unicode !== -1) {\\n      toUnicode[charCode] = String.fromCharCode(unicode);\\n    }\\n  }\\n  properties.toUnicode.amend(toUnicode);\\n}\\nfunction getFontType(type, subtype) {\\n  switch (type) {\\n    case 'Type1':\\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\\n    case 'CIDFontType0':\\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\\n    case 'OpenType':\\n      return _util.FontType.OPENTYPE;\\n    case 'TrueType':\\n      return _util.FontType.TRUETYPE;\\n    case 'CIDFontType2':\\n      return _util.FontType.CIDFONTTYPE2;\\n    case 'MMType1':\\n      return _util.FontType.MMTYPE1;\\n    case 'Type0':\\n      return _util.FontType.TYPE0;\\n    default:\\n      return _util.FontType.UNKNOWN;\\n  }\\n}\\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\\n  if (glyphsUnicodeMap[name] !== undefined) {\\n    return name;\\n  }\\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\\n  if (unicode !== -1) {\\n    for (var key in glyphsUnicodeMap) {\\n      if (glyphsUnicodeMap[key] === unicode) {\\n        return key;\\n      }\\n    }\\n  }\\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\\n  return name;\\n}\\nvar Glyph = function GlyphClosure() {\\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\n    this.fontChar = fontChar;\\n    this.unicode = unicode;\\n    this.accent = accent;\\n    this.width = width;\\n    this.vmetric = vmetric;\\n    this.operatorListId = operatorListId;\\n    this.isSpace = isSpace;\\n    this.isInFont = isInFont;\\n  }\\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\\n  };\\n  return Glyph;\\n}();\\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\\n  function ToUnicodeMap() {\\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n\\n    this._map = cmap;\\n  }\\n  ToUnicodeMap.prototype = {\\n    get length() {\\n      return this._map.length;\\n    },\\n    forEach: function forEach(callback) {\\n      for (var charCode in this._map) {\\n        callback(charCode, this._map[charCode].charCodeAt(0));\\n      }\\n    },\\n    has: function has(i) {\\n      return this._map[i] !== undefined;\\n    },\\n    get: function get(i) {\\n      return this._map[i];\\n    },\\n    charCodeOf: function charCodeOf(value) {\\n      var map = this._map;\\n      if (map.length <= 0x10000) {\\n        return map.indexOf(value);\\n      }\\n      for (var charCode in map) {\\n        if (map[charCode] === value) {\\n          return charCode | 0;\\n        }\\n      }\\n      return -1;\\n    },\\n    amend: function amend(map) {\\n      for (var charCode in map) {\\n        this._map[charCode] = map[charCode];\\n      }\\n    }\\n  };\\n  return ToUnicodeMap;\\n}();\\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\\n  function IdentityToUnicodeMap(firstChar, lastChar) {\\n    this.firstChar = firstChar;\\n    this.lastChar = lastChar;\\n  }\\n  IdentityToUnicodeMap.prototype = {\\n    get length() {\\n      return this.lastChar + 1 - this.firstChar;\\n    },\\n    forEach: function forEach(callback) {\\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\\n        callback(i, i);\\n      }\\n    },\\n    has: function has(i) {\\n      return this.firstChar <= i && i <= this.lastChar;\\n    },\\n    get: function get(i) {\\n      if (this.firstChar <= i && i <= this.lastChar) {\\n        return String.fromCharCode(i);\\n      }\\n      return undefined;\\n    },\\n    charCodeOf: function charCodeOf(v) {\\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\\n    },\\n    amend: function amend(map) {\\n      (0, _util.unreachable)('Should not call amend()');\\n    }\\n  };\\n  return IdentityToUnicodeMap;\\n}();\\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\\n  function writeInt16(dest, offset, num) {\\n    dest[offset] = num >> 8 & 0xFF;\\n    dest[offset + 1] = num & 0xFF;\\n  }\\n  function writeInt32(dest, offset, num) {\\n    dest[offset] = num >> 24 & 0xFF;\\n    dest[offset + 1] = num >> 16 & 0xFF;\\n    dest[offset + 2] = num >> 8 & 0xFF;\\n    dest[offset + 3] = num & 0xFF;\\n  }\\n  function writeData(dest, offset, data) {\\n    var i, ii;\\n    if (data instanceof Uint8Array) {\\n      dest.set(data, offset);\\n    } else if (typeof data === 'string') {\\n      for (i = 0, ii = data.length; i < ii; i++) {\\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\\n      }\\n    } else {\\n      for (i = 0, ii = data.length; i < ii; i++) {\\n        dest[offset++] = data[i] & 0xFF;\\n      }\\n    }\\n  }\\n  function OpenTypeFileBuilder(sfnt) {\\n    this.sfnt = sfnt;\\n    this.tables = Object.create(null);\\n  }\\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\\n    var maxPower2 = 1,\\n        log2 = 0;\\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\\n      maxPower2 <<= 1;\\n      log2++;\\n    }\\n    var searchRange = maxPower2 * entrySize;\\n    return {\\n      range: searchRange,\\n      entry: log2,\\n      rangeShift: entrySize * entriesCount - searchRange\\n    };\\n  };\\n  var OTF_HEADER_SIZE = 12;\\n  var OTF_TABLE_ENTRY_SIZE = 16;\\n  OpenTypeFileBuilder.prototype = {\\n    toArray: function OpenTypeFileBuilder_toArray() {\\n      var sfnt = this.sfnt;\\n      var tables = this.tables;\\n      var tablesNames = Object.keys(tables);\\n      tablesNames.sort();\\n      var numTables = tablesNames.length;\\n      var i, j, jj, table, tableName;\\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\\n      var tableOffsets = [offset];\\n      for (i = 0; i < numTables; i++) {\\n        table = tables[tablesNames[i]];\\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\\n        offset += paddedLength;\\n        tableOffsets.push(offset);\\n      }\\n      var file = new Uint8Array(offset);\\n      for (i = 0; i < numTables; i++) {\\n        table = tables[tablesNames[i]];\\n        writeData(file, tableOffsets[i], table);\\n      }\\n      if (sfnt === 'true') {\\n        sfnt = (0, _util.string32)(0x00010000);\\n      }\\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\\n      writeInt16(file, 4, numTables);\\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\\n      writeInt16(file, 6, searchParams.range);\\n      writeInt16(file, 8, searchParams.entry);\\n      writeInt16(file, 10, searchParams.rangeShift);\\n      offset = OTF_HEADER_SIZE;\\n      for (i = 0; i < numTables; i++) {\\n        tableName = tablesNames[i];\\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\\n        var checksum = 0;\\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\\n          var quad = (0, _util.readUint32)(file, j);\\n          checksum = checksum + quad >>> 0;\\n        }\\n        writeInt32(file, offset + 4, checksum);\\n        writeInt32(file, offset + 8, tableOffsets[i]);\\n        writeInt32(file, offset + 12, tables[tableName].length);\\n        offset += OTF_TABLE_ENTRY_SIZE;\\n      }\\n      return file;\\n    },\\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\\n      if (tag in this.tables) {\\n        throw new Error('Table ' + tag + ' already exists');\\n      }\\n      this.tables[tag] = data;\\n    }\\n  };\\n  return OpenTypeFileBuilder;\\n}();\\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\\nvar Font = function FontClosure() {\\n  function Font(name, file, properties) {\\n    var charCode;\\n    this.name = name;\\n    this.loadedName = properties.loadedName;\\n    this.isType3Font = properties.isType3Font;\\n    this.sizes = [];\\n    this.missingFile = false;\\n    this.glyphCache = Object.create(null);\\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\\n    var type = properties.type;\\n    var subtype = properties.subtype;\\n    this.type = type;\\n    this.subtype = subtype;\\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\\n    this.differences = properties.differences;\\n    this.widths = properties.widths;\\n    this.defaultWidth = properties.defaultWidth;\\n    this.composite = properties.composite;\\n    this.wideChars = properties.wideChars;\\n    this.cMap = properties.cMap;\\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\\n    this.fontMatrix = properties.fontMatrix;\\n    this.bbox = properties.bbox;\\n    this.defaultEncoding = properties.defaultEncoding;\\n    this.toUnicode = properties.toUnicode;\\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\\n    this.toFontChar = [];\\n    if (properties.type === 'Type3') {\\n      for (charCode = 0; charCode < 256; charCode++) {\\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\\n      }\\n      this.fontType = _util.FontType.TYPE3;\\n      return;\\n    }\\n    this.cidEncoding = properties.cidEncoding;\\n    this.vertical = properties.vertical;\\n    if (this.vertical) {\\n      this.vmetrics = properties.vmetrics;\\n      this.defaultVMetrics = properties.defaultVMetrics;\\n    }\\n    if (!file || file.isEmpty) {\\n      if (file) {\\n        (0, _util.warn)('Font file is empty in \\\"' + name + '\\\" (' + this.loadedName + ')');\\n      }\\n      this.fallbackToSystemFont();\\n      return;\\n    }\\n    if (subtype === 'Type1C') {\\n      if (type !== 'Type1' && type !== 'MMType1') {\\n        if (isTrueTypeFile(file)) {\\n          subtype = 'TrueType';\\n        } else {\\n          type = 'Type1';\\n        }\\n      } else if (isOpenTypeFile(file)) {\\n        subtype = 'OpenType';\\n      }\\n    }\\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\\n      type = 'CIDFontType0';\\n    }\\n    if (type === 'CIDFontType0') {\\n      if (isType1File(file)) {\\n        subtype = 'CIDFontType0';\\n      } else if (isOpenTypeFile(file)) {\\n        subtype = 'OpenType';\\n      } else {\\n        subtype = 'CIDFontType0C';\\n      }\\n    }\\n    if (subtype === 'OpenType' && type !== 'OpenType') {\\n      type = 'OpenType';\\n    }\\n    try {\\n      var data;\\n      switch (type) {\\n        case 'MMType1':\\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\\n        case 'Type1':\\n        case 'CIDFontType0':\\n          this.mimetype = 'font/opentype';\\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\\n          adjustWidths(properties);\\n          data = this.convert(name, cff, properties);\\n          break;\\n        case 'OpenType':\\n        case 'TrueType':\\n        case 'CIDFontType2':\\n          this.mimetype = 'font/opentype';\\n          data = this.checkAndRepair(name, file, properties);\\n          if (this.isOpenType) {\\n            adjustWidths(properties);\\n            type = 'OpenType';\\n          }\\n          break;\\n        default:\\n          throw new _util.FormatError('Font ' + type + ' is not supported');\\n      }\\n    } catch (e) {\\n      if (!(e instanceof _util.FormatError)) {\\n        throw e;\\n      }\\n      (0, _util.warn)(e);\\n      this.fallbackToSystemFont();\\n      return;\\n    }\\n    this.data = data;\\n    this.fontType = getFontType(type, subtype);\\n    this.fontMatrix = properties.fontMatrix;\\n    this.widths = properties.widths;\\n    this.defaultWidth = properties.defaultWidth;\\n    this.toUnicode = properties.toUnicode;\\n    this.encoding = properties.baseEncoding;\\n    this.seacMap = properties.seacMap;\\n    this.loading = true;\\n  }\\n  Font.getFontID = function () {\\n    var ID = 1;\\n    return function Font_getFontID() {\\n      return String(ID++);\\n    };\\n  }();\\n  function int16(b0, b1) {\\n    return (b0 << 8) + b1;\\n  }\\n  function writeSignedInt16(bytes, index, value) {\\n    bytes[index + 1] = value;\\n    bytes[index] = value >>> 8;\\n  }\\n  function signedInt16(b0, b1) {\\n    var value = (b0 << 8) + b1;\\n    return value & 1 << 15 ? value - 0x10000 : value;\\n  }\\n  function int32(b0, b1, b2, b3) {\\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n  }\\n  function string16(value) {\\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\n  }\\n  function safeString16(value) {\\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\n  }\\n  function isTrueTypeFile(file) {\\n    var header = file.peekBytes(4);\\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\\n  }\\n  function isTrueTypeCollectionFile(file) {\\n    var header = file.peekBytes(4);\\n    return (0, _util.bytesToString)(header) === 'ttcf';\\n  }\\n  function isOpenTypeFile(file) {\\n    var header = file.peekBytes(4);\\n    return (0, _util.bytesToString)(header) === 'OTTO';\\n  }\\n  function isType1File(file) {\\n    var header = file.peekBytes(2);\\n    if (header[0] === 0x25 && header[1] === 0x21) {\\n      return true;\\n    }\\n    if (header[0] === 0x80 && header[1] === 0x01) {\\n      return true;\\n    }\\n    return false;\\n  }\\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\\n    var toFontChar = [],\\n        unicode;\\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\\n      if (unicode !== -1) {\\n        toFontChar[i] = unicode;\\n      }\\n    }\\n    for (var charCode in differences) {\\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\\n      if (unicode !== -1) {\\n        toFontChar[+charCode] = unicode;\\n      }\\n    }\\n    return toFontChar;\\n  }\\n  function isProblematicUnicodeLocation(code) {\\n    var i = 0,\\n        j = ProblematicCharRanges.length - 1;\\n    while (i < j) {\\n      var c = i + j + 1 >> 1;\\n      if (code < ProblematicCharRanges[c]) {\\n        j = c - 1;\\n      } else {\\n        i = c;\\n      }\\n    }\\n    return !(i & 1);\\n  }\\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\\n    var toUnicode = properties.toUnicode;\\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\\n    var newMap = Object.create(null);\\n    var toFontChar = [];\\n    var usedFontCharCodes = [];\\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\\n    for (var originalCharCode in charCodeToGlyphId) {\\n      originalCharCode |= 0;\\n      var glyphId = charCodeToGlyphId[originalCharCode];\\n      if (missingGlyphs[glyphId]) {\\n        continue;\\n      }\\n      var fontCharCode = originalCharCode;\\n      var hasUnicodeValue = false;\\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\\n        hasUnicodeValue = true;\\n        var unicode = toUnicode.get(fontCharCode);\\n        if (unicode.length === 1) {\\n          fontCharCode = unicode.charCodeAt(0);\\n        }\\n      }\\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\\n        do {\\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\\n            (0, _util.warn)('Ran out of space in font private use area.');\\n            break;\\n          }\\n          fontCharCode = nextAvailableFontCharCode++;\\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\\n            fontCharCode = 0xF020;\\n            nextAvailableFontCharCode = fontCharCode + 1;\\n          }\\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\\n      }\\n      newMap[fontCharCode] = glyphId;\\n      toFontChar[originalCharCode] = fontCharCode;\\n      usedFontCharCodes[fontCharCode] = true;\\n    }\\n    return {\\n      toFontChar: toFontChar,\\n      charCodeToGlyphId: newMap,\\n      nextAvailableFontCharCode: nextAvailableFontCharCode\\n    };\\n  }\\n  function getRanges(glyphs, numGlyphs) {\\n    var codes = [];\\n    for (var charCode in glyphs) {\\n      if (glyphs[charCode] >= numGlyphs) {\\n        continue;\\n      }\\n      codes.push({\\n        fontCharCode: charCode | 0,\\n        glyphId: glyphs[charCode]\\n      });\\n    }\\n    if (codes.length === 0) {\\n      codes.push({\\n        fontCharCode: 0,\\n        glyphId: 0\\n      });\\n    }\\n    codes.sort(function fontGetRangesSort(a, b) {\\n      return a.fontCharCode - b.fontCharCode;\\n    });\\n    var ranges = [];\\n    var length = codes.length;\\n    for (var n = 0; n < length;) {\\n      var start = codes[n].fontCharCode;\\n      var codeIndices = [codes[n].glyphId];\\n      ++n;\\n      var end = start;\\n      while (n < length && end + 1 === codes[n].fontCharCode) {\\n        codeIndices.push(codes[n].glyphId);\\n        ++end;\\n        ++n;\\n        if (end === 0xFFFF) {\\n          break;\\n        }\\n      }\\n      ranges.push([start, end, codeIndices]);\\n    }\\n    return ranges;\\n  }\\n  function createCmapTable(glyphs, numGlyphs) {\\n    var ranges = getRanges(glyphs, numGlyphs);\\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\\n    var cmap = '\\\\x00\\\\x00' + string16(numTables) + '\\\\x00\\\\x03' + '\\\\x00\\\\x01' + (0, _util.string32)(4 + numTables * 8);\\n    var i, ii, j, jj;\\n    for (i = ranges.length - 1; i >= 0; --i) {\\n      if (ranges[i][0] <= 0xFFFF) {\\n        break;\\n      }\\n    }\\n    var bmpLength = i + 1;\\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\\n      ranges[i][1] = 0xFFFE;\\n    }\\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\\n    var segCount = bmpLength + trailingRangesCount;\\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\\n    var startCount = '';\\n    var endCount = '';\\n    var idDeltas = '';\\n    var idRangeOffsets = '';\\n    var glyphsIds = '';\\n    var bias = 0;\\n    var range, start, end, codes;\\n    for (i = 0, ii = bmpLength; i < ii; i++) {\\n      range = ranges[i];\\n      start = range[0];\\n      end = range[1];\\n      startCount += string16(start);\\n      endCount += string16(end);\\n      codes = range[2];\\n      var contiguous = true;\\n      for (j = 1, jj = codes.length; j < jj; ++j) {\\n        if (codes[j] !== codes[j - 1] + 1) {\\n          contiguous = false;\\n          break;\\n        }\\n      }\\n      if (!contiguous) {\\n        var offset = (segCount - i) * 2 + bias * 2;\\n        bias += end - start + 1;\\n        idDeltas += string16(0);\\n        idRangeOffsets += string16(offset);\\n        for (j = 0, jj = codes.length; j < jj; ++j) {\\n          glyphsIds += string16(codes[j]);\\n        }\\n      } else {\\n        var startCode = codes[0];\\n        idDeltas += string16(startCode - start & 0xFFFF);\\n        idRangeOffsets += string16(0);\\n      }\\n    }\\n    if (trailingRangesCount > 0) {\\n      endCount += '\\\\xFF\\\\xFF';\\n      startCount += '\\\\xFF\\\\xFF';\\n      idDeltas += '\\\\x00\\\\x01';\\n      idRangeOffsets += '\\\\x00\\\\x00';\\n    }\\n    var format314 = '\\\\x00\\\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\\\x00\\\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\\n    var format31012 = '';\\n    var header31012 = '';\\n    if (numTables > 1) {\\n      cmap += '\\\\x00\\\\x03' + '\\\\x00\\\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\\n      format31012 = '';\\n      for (i = 0, ii = ranges.length; i < ii; i++) {\\n        range = ranges[i];\\n        start = range[0];\\n        codes = range[2];\\n        var code = codes[0];\\n        for (j = 1, jj = codes.length; j < jj; ++j) {\\n          if (codes[j] !== codes[j - 1] + 1) {\\n            end = range[0] + j - 1;\\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\\n            start = end + 1;\\n            code = codes[j];\\n          }\\n        }\\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\\n      }\\n      header31012 = '\\\\x00\\\\x0C' + '\\\\x00\\\\x00' + (0, _util.string32)(format31012.length + 16) + '\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(format31012.length / 12);\\n    }\\n    return cmap + '\\\\x00\\\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\\n  }\\n  function validateOS2Table(os2) {\\n    var stream = new _stream.Stream(os2.data);\\n    var version = stream.getUint16();\\n    stream.getBytes(60);\\n    var selection = stream.getUint16();\\n    if (version < 4 && selection & 0x0300) {\\n      return false;\\n    }\\n    var firstChar = stream.getUint16();\\n    var lastChar = stream.getUint16();\\n    if (firstChar > lastChar) {\\n      return false;\\n    }\\n    stream.getBytes(6);\\n    var usWinAscent = stream.getUint16();\\n    if (usWinAscent === 0) {\\n      return false;\\n    }\\n    os2.data[8] = os2.data[9] = 0;\\n    return true;\\n  }\\n  function createOS2Table(properties, charstrings, override) {\\n    override = override || {\\n      unitsPerEm: 0,\\n      yMax: 0,\\n      yMin: 0,\\n      ascent: 0,\\n      descent: 0\\n    };\\n    var ulUnicodeRange1 = 0;\\n    var ulUnicodeRange2 = 0;\\n    var ulUnicodeRange3 = 0;\\n    var ulUnicodeRange4 = 0;\\n    var firstCharIndex = null;\\n    var lastCharIndex = 0;\\n    if (charstrings) {\\n      for (var code in charstrings) {\\n        code |= 0;\\n        if (firstCharIndex > code || !firstCharIndex) {\\n          firstCharIndex = code;\\n        }\\n        if (lastCharIndex < code) {\\n          lastCharIndex = code;\\n        }\\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\\n        if (position < 32) {\\n          ulUnicodeRange1 |= 1 << position;\\n        } else if (position < 64) {\\n          ulUnicodeRange2 |= 1 << position - 32;\\n        } else if (position < 96) {\\n          ulUnicodeRange3 |= 1 << position - 64;\\n        } else if (position < 123) {\\n          ulUnicodeRange4 |= 1 << position - 96;\\n        } else {\\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\\n        }\\n      }\\n    } else {\\n      firstCharIndex = 0;\\n      lastCharIndex = 255;\\n    }\\n    var bbox = properties.bbox || [0, 0, 0, 0];\\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\\n      typoDescent = -typoDescent;\\n    }\\n    var winAscent = override.yMax || typoAscent;\\n    var winDescent = -override.yMin || -typoDescent;\\n    return '\\\\x00\\\\x03' + '\\\\x02\\\\x24' + '\\\\x01\\\\xF4' + '\\\\x00\\\\x05' + '\\\\x00\\\\x00' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x00\\\\x8C' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x01\\\\xDF' + '\\\\x00\\\\x31' + '\\\\x01\\\\x02' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\\\x2A\\\\x32\\\\x31\\\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\\\x00\\\\x64' + string16(winAscent) + string16(winDescent) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\\\x00\\\\x03';\\n  }\\n  function createPostTable(properties) {\\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\\n    return '\\\\x00\\\\x03\\\\x00\\\\x00' + (0, _util.string32)(angle) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00';\\n  }\\n  function createNameTable(name, proto) {\\n    if (!proto) {\\n      proto = [[], []];\\n    }\\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\\n    var stringsUnicode = [];\\n    var i, ii, j, jj, str;\\n    for (i = 0, ii = strings.length; i < ii; i++) {\\n      str = proto[1][i] || strings[i];\\n      var strBufUnicode = [];\\n      for (j = 0, jj = str.length; j < jj; j++) {\\n        strBufUnicode.push(string16(str.charCodeAt(j)));\\n      }\\n      stringsUnicode.push(strBufUnicode.join(''));\\n    }\\n    var names = [strings, stringsUnicode];\\n    var platforms = ['\\\\x00\\\\x01', '\\\\x00\\\\x03'];\\n    var encodings = ['\\\\x00\\\\x00', '\\\\x00\\\\x01'];\\n    var languages = ['\\\\x00\\\\x00', '\\\\x04\\\\x09'];\\n    var namesRecordCount = strings.length * platforms.length;\\n    var nameTable = '\\\\x00\\\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\\n    var strOffset = 0;\\n    for (i = 0, ii = platforms.length; i < ii; i++) {\\n      var strs = names[i];\\n      for (j = 0, jj = strs.length; j < jj; j++) {\\n        str = strs[j];\\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\\n        nameTable += nameRecord;\\n        strOffset += str.length;\\n      }\\n    }\\n    nameTable += strings.join('') + stringsUnicode.join('');\\n    return nameTable;\\n  }\\n  Font.prototype = {\\n    name: null,\\n    font: null,\\n    mimetype: null,\\n    encoding: null,\\n    get renderer() {\\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\\n      return (0, _util.shadow)(this, 'renderer', renderer);\\n    },\\n    exportData: function Font_exportData() {\\n      var data = {};\\n      for (var i in this) {\\n        if (this.hasOwnProperty(i)) {\\n          data[i] = this[i];\\n        }\\n      }\\n      return data;\\n    },\\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\\n      var _this = this;\\n\\n      this.missingFile = true;\\n      var charCode, unicode;\\n      var name = this.name;\\n      var type = this.type;\\n      var subtype = this.subtype;\\n      var fontName = name.replace(/[,_]/g, '-');\\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\\n      this.bold = fontName.search(/bold/gi) !== -1;\\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\\n      this.black = name.search(/Black/g) !== -1;\\n      this.remeasure = Object.keys(this.widths).length > 0;\\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\\n        var map = [];\\n        for (charCode in GlyphMapForStandardFonts) {\\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\\n        }\\n        if (/Arial-?Black/i.test(name)) {\\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\\n          for (charCode in SupplementalGlyphMapForArialBlack) {\\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\\n          }\\n        } else if (/Calibri/i.test(name)) {\\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\\n          for (charCode in SupplementalGlyphMapForCalibri) {\\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\\n          }\\n        }\\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\\n        if (!isIdentityUnicode) {\\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\n            map[+charCode] = unicodeCharCode;\\n          });\\n        }\\n        this.toFontChar = map;\\n        this.toUnicode = new ToUnicodeMap(map);\\n      } else if (/Symbol/i.test(fontName)) {\\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\n      } else if (/Dingbats/i.test(fontName)) {\\n        if (/Wingdings/i.test(name)) {\\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\\n        }\\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\\n      } else if (isStandardFont) {\\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\n      } else {\\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\n          if (!_this.composite) {\\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n            if (unicode !== -1) {\\n              unicodeCharCode = unicode;\\n            }\\n          }\\n          _this.toFontChar[charCode] = unicodeCharCode;\\n        });\\n      }\\n      this.loadedName = fontName.split('-')[0];\\n      this.loading = false;\\n      this.fontType = getFontType(type, subtype);\\n    },\\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\\n      function readTables(file, numTables) {\\n        var tables = Object.create(null);\\n        tables['OS/2'] = null;\\n        tables['cmap'] = null;\\n        tables['head'] = null;\\n        tables['hhea'] = null;\\n        tables['hmtx'] = null;\\n        tables['maxp'] = null;\\n        tables['name'] = null;\\n        tables['post'] = null;\\n        for (var i = 0; i < numTables; i++) {\\n          var table = readTableEntry(font);\\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\\n            continue;\\n          }\\n          if (table.length === 0) {\\n            continue;\\n          }\\n          tables[table.tag] = table;\\n        }\\n        return tables;\\n      }\\n      function readTableEntry(file) {\\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\\n        var checksum = file.getInt32() >>> 0;\\n        var offset = file.getInt32() >>> 0;\\n        var length = file.getInt32() >>> 0;\\n        var previousPosition = file.pos;\\n        file.pos = file.start ? file.start : 0;\\n        file.skip(offset);\\n        var data = file.getBytes(length);\\n        file.pos = previousPosition;\\n        if (tag === 'head') {\\n          data[8] = data[9] = data[10] = data[11] = 0;\\n          data[17] |= 0x20;\\n        }\\n        return {\\n          tag: tag,\\n          checksum: checksum,\\n          length: length,\\n          offset: offset,\\n          data: data\\n        };\\n      }\\n      function readOpenTypeHeader(ttf) {\\n        return {\\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\\n          numTables: ttf.getUint16(),\\n          searchRange: ttf.getUint16(),\\n          entrySelector: ttf.getUint16(),\\n          rangeShift: ttf.getUint16()\\n        };\\n      }\\n      function readTrueTypeCollectionHeader(ttc) {\\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\\n        var majorVersion = ttc.getUint16();\\n        var minorVersion = ttc.getUint16();\\n        var numFonts = ttc.getInt32() >>> 0;\\n        var offsetTable = [];\\n        for (var i = 0; i < numFonts; i++) {\\n          offsetTable.push(ttc.getInt32() >>> 0);\\n        }\\n        var header = {\\n          ttcTag: ttcTag,\\n          majorVersion: majorVersion,\\n          minorVersion: minorVersion,\\n          numFonts: numFonts,\\n          offsetTable: offsetTable\\n        };\\n        switch (majorVersion) {\\n          case 1:\\n            return header;\\n          case 2:\\n            header.dsigTag = ttc.getInt32() >>> 0;\\n            header.dsigLength = ttc.getInt32() >>> 0;\\n            header.dsigOffset = ttc.getInt32() >>> 0;\\n            return header;\\n        }\\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\\n      }\\n      function readTrueTypeCollectionData(ttc, fontName) {\\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\\n            numFonts = _readTrueTypeCollecti.numFonts,\\n            offsetTable = _readTrueTypeCollecti.offsetTable;\\n\\n        for (var i = 0; i < numFonts; i++) {\\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\\n          var potentialHeader = readOpenTypeHeader(ttc);\\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\\n          if (!potentialTables['name']) {\\n            throw new _util.FormatError('TrueType Collection font must contain a \\\"name\\\" table.');\\n          }\\n          var nameTable = readNameTable(potentialTables['name']);\\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\\n              var nameEntry = nameTable[j][k];\\n              if (nameEntry && nameEntry.replace(/\\\\s/g, '') === fontName) {\\n                return {\\n                  header: potentialHeader,\\n                  tables: potentialTables\\n                };\\n              }\\n            }\\n          }\\n        }\\n        throw new _util.FormatError('TrueType Collection does not contain \\\"' + fontName + '\\\" font.');\\n      }\\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\\n        if (!cmap) {\\n          (0, _util.warn)('No cmap table available.');\\n          return {\\n            platformId: -1,\\n            encodingId: -1,\\n            mappings: [],\\n            hasShortCmap: false\\n          };\\n        }\\n        var segment;\\n        var start = (font.start ? font.start : 0) + cmap.offset;\\n        font.pos = start;\\n        font.getUint16();\\n        var numTables = font.getUint16();\\n        var potentialTable;\\n        var canBreak = false;\\n        for (var i = 0; i < numTables; i++) {\\n          var platformId = font.getUint16();\\n          var encodingId = font.getUint16();\\n          var offset = font.getInt32() >>> 0;\\n          var useTable = false;\\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\\n            continue;\\n          }\\n          if (platformId === 0 && encodingId === 0) {\\n            useTable = true;\\n          } else if (platformId === 1 && encodingId === 0) {\\n            useTable = true;\\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\\n            useTable = true;\\n            if (!isSymbolicFont) {\\n              canBreak = true;\\n            }\\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\\n            useTable = true;\\n            canBreak = true;\\n          }\\n          if (useTable) {\\n            potentialTable = {\\n              platformId: platformId,\\n              encodingId: encodingId,\\n              offset: offset\\n            };\\n          }\\n          if (canBreak) {\\n            break;\\n          }\\n        }\\n        if (potentialTable) {\\n          font.pos = start + potentialTable.offset;\\n        }\\n        if (!potentialTable || font.peekByte() === -1) {\\n          (0, _util.warn)('Could not find a preferred cmap table.');\\n          return {\\n            platformId: -1,\\n            encodingId: -1,\\n            mappings: [],\\n            hasShortCmap: false\\n          };\\n        }\\n        var format = font.getUint16();\\n        font.getUint16();\\n        font.getUint16();\\n        var hasShortCmap = false;\\n        var mappings = [];\\n        var j, glyphId;\\n        if (format === 0) {\\n          for (j = 0; j < 256; j++) {\\n            var index = font.getByte();\\n            if (!index) {\\n              continue;\\n            }\\n            mappings.push({\\n              charCode: j,\\n              glyphId: index\\n            });\\n          }\\n          hasShortCmap = true;\\n        } else if (format === 4) {\\n          var segCount = font.getUint16() >> 1;\\n          font.getBytes(6);\\n          var segIndex,\\n              segments = [];\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segments.push({ end: font.getUint16() });\\n          }\\n          font.getUint16();\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segments[segIndex].start = font.getUint16();\\n          }\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segments[segIndex].delta = font.getUint16();\\n          }\\n          var offsetsCount = 0;\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segment = segments[segIndex];\\n            var rangeOffset = font.getUint16();\\n            if (!rangeOffset) {\\n              segment.offsetIndex = -1;\\n              continue;\\n            }\\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\\n            segment.offsetIndex = offsetIndex;\\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\\n          }\\n          var offsets = [];\\n          for (j = 0; j < offsetsCount; j++) {\\n            offsets.push(font.getUint16());\\n          }\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\n            segment = segments[segIndex];\\n            start = segment.start;\\n            var end = segment.end;\\n            var delta = segment.delta;\\n            offsetIndex = segment.offsetIndex;\\n            for (j = start; j <= end; j++) {\\n              if (j === 0xFFFF) {\\n                continue;\\n              }\\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\\n              glyphId = glyphId + delta & 0xFFFF;\\n              mappings.push({\\n                charCode: j,\\n                glyphId: glyphId\\n              });\\n            }\\n          }\\n        } else if (format === 6) {\\n          var firstCode = font.getUint16();\\n          var entryCount = font.getUint16();\\n          for (j = 0; j < entryCount; j++) {\\n            glyphId = font.getUint16();\\n            var charCode = firstCode + j;\\n            mappings.push({\\n              charCode: charCode,\\n              glyphId: glyphId\\n            });\\n          }\\n        } else {\\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\\n          return {\\n            platformId: -1,\\n            encodingId: -1,\\n            mappings: [],\\n            hasShortCmap: false\\n          };\\n        }\\n        mappings.sort(function (a, b) {\\n          return a.charCode - b.charCode;\\n        });\\n        for (i = 1; i < mappings.length; i++) {\\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\\n            mappings.splice(i, 1);\\n            i--;\\n          }\\n        }\\n        return {\\n          platformId: potentialTable.platformId,\\n          encodingId: potentialTable.encodingId,\\n          mappings: mappings,\\n          hasShortCmap: hasShortCmap\\n        };\\n      }\\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\\n        if (!header) {\\n          if (metrics) {\\n            metrics.data = null;\\n          }\\n          return;\\n        }\\n        font.pos = (font.start ? font.start : 0) + header.offset;\\n        font.pos += header.length - 2;\\n        var numOfMetrics = font.getUint16();\\n        if (numOfMetrics > numGlyphs) {\\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\\n          numOfMetrics = numGlyphs;\\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\\n          header.data[35] = numOfMetrics & 0x00ff;\\n        }\\n        var numOfSidebearings = numGlyphs - numOfMetrics;\\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\\n        if (numMissing > 0) {\\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\\n          entries.set(metrics.data);\\n          metrics.data = entries;\\n        }\\n      }\\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\\n        var glyphProfile = {\\n          length: 0,\\n          sizeOfInstructions: 0\\n        };\\n        if (sourceEnd - sourceStart <= 12) {\\n          return glyphProfile;\\n        }\\n        var glyf = source.subarray(sourceStart, sourceEnd);\\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\\n        if (contoursCount < 0) {\\n          contoursCount = -1;\\n          writeSignedInt16(glyf, 0, contoursCount);\\n          dest.set(glyf, destStart);\\n          glyphProfile.length = glyf.length;\\n          return glyphProfile;\\n        }\\n        var i,\\n            j = 10,\\n            flagsCount = 0;\\n        for (i = 0; i < contoursCount; i++) {\\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\\n          flagsCount = endPoint + 1;\\n          j += 2;\\n        }\\n        var instructionsStart = j;\\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\\n        glyphProfile.sizeOfInstructions = instructionsLength;\\n        j += 2 + instructionsLength;\\n        var instructionsEnd = j;\\n        var coordinatesLength = 0;\\n        for (i = 0; i < flagsCount; i++) {\\n          var flag = glyf[j++];\\n          if (flag & 0xC0) {\\n            glyf[j - 1] = flag & 0x3F;\\n          }\\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\\n          coordinatesLength += xyLength;\\n          if (flag & 8) {\\n            var repeat = glyf[j++];\\n            i += repeat;\\n            coordinatesLength += repeat * xyLength;\\n          }\\n        }\\n        if (coordinatesLength === 0) {\\n          return glyphProfile;\\n        }\\n        var glyphDataLength = j + coordinatesLength;\\n        if (glyphDataLength > glyf.length) {\\n          return glyphProfile;\\n        }\\n        if (!hintsValid && instructionsLength > 0) {\\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\\n          dest.set([0, 0], destStart + instructionsStart);\\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\\n          glyphDataLength -= instructionsLength;\\n          if (glyf.length - glyphDataLength > 3) {\\n            glyphDataLength = glyphDataLength + 3 & ~3;\\n          }\\n          glyphProfile.length = glyphDataLength;\\n          return glyphProfile;\\n        }\\n        if (glyf.length - glyphDataLength > 3) {\\n          glyphDataLength = glyphDataLength + 3 & ~3;\\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\\n          glyphProfile.length = glyphDataLength;\\n          return glyphProfile;\\n        }\\n        dest.set(glyf, destStart);\\n        glyphProfile.length = glyf.length;\\n        return glyphProfile;\\n      }\\n      function sanitizeHead(head, numGlyphs, locaLength) {\\n        var data = head.data;\\n        var version = int32(data[0], data[1], data[2], data[3]);\\n        if (version >> 16 !== 1) {\\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\\n          data[0] = 0;\\n          data[1] = 1;\\n          data[2] = 0;\\n          data[3] = 0;\\n        }\\n        var indexToLocFormat = int16(data[50], data[51]);\\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\\n          var numGlyphsPlusOne = numGlyphs + 1;\\n          if (locaLength === numGlyphsPlusOne << 1) {\\n            data[50] = 0;\\n            data[51] = 0;\\n          } else if (locaLength === numGlyphsPlusOne << 2) {\\n            data[50] = 0;\\n            data[51] = 1;\\n          } else {\\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\\n          }\\n        }\\n      }\\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\\n        var itemSize, itemDecode, itemEncode;\\n        if (isGlyphLocationsLong) {\\n          itemSize = 4;\\n          itemDecode = function fontItemDecodeLong(data, offset) {\\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n          };\\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\\n            data[offset] = value >>> 24 & 0xFF;\\n            data[offset + 1] = value >> 16 & 0xFF;\\n            data[offset + 2] = value >> 8 & 0xFF;\\n            data[offset + 3] = value & 0xFF;\\n          };\\n        } else {\\n          itemSize = 2;\\n          itemDecode = function fontItemDecode(data, offset) {\\n            return data[offset] << 9 | data[offset + 1] << 1;\\n          };\\n          itemEncode = function fontItemEncode(data, offset, value) {\\n            data[offset] = value >> 9 & 0xFF;\\n            data[offset + 1] = value >> 1 & 0xFF;\\n          };\\n        }\\n        var locaData = loca.data;\\n        var locaDataSize = itemSize * (1 + numGlyphs);\\n        if (locaData.length !== locaDataSize) {\\n          locaData = new Uint8Array(locaDataSize);\\n          locaData.set(loca.data.subarray(0, locaDataSize));\\n          loca.data = locaData;\\n        }\\n        var oldGlyfData = glyf.data;\\n        var oldGlyfDataLength = oldGlyfData.length;\\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\\n        var startOffset = itemDecode(locaData, 0);\\n        var writeOffset = 0;\\n        var missingGlyphs = Object.create(null);\\n        itemEncode(locaData, 0, writeOffset);\\n        var i, j;\\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\\n          var endOffset = itemDecode(locaData, j);\\n          if (endOffset === 0) {\\n            endOffset = startOffset;\\n          }\\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\\n            endOffset = oldGlyfDataLength;\\n          }\\n          if (endOffset > oldGlyfDataLength) {\\n            startOffset = endOffset;\\n          }\\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\\n          var newLength = glyphProfile.length;\\n          if (newLength === 0) {\\n            missingGlyphs[i] = true;\\n          }\\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\\n          }\\n          writeOffset += newLength;\\n          itemEncode(locaData, j, writeOffset);\\n          startOffset = endOffset;\\n        }\\n        if (writeOffset === 0) {\\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\\n            itemEncode(locaData, j, simpleGlyph.length);\\n          }\\n          glyf.data = simpleGlyph;\\n        } else if (dupFirstEntry) {\\n          var firstEntryLength = itemDecode(locaData, itemSize);\\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\\n          } else {\\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\\n          }\\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\\n        } else {\\n          glyf.data = newGlyfData.subarray(0, writeOffset);\\n        }\\n        return {\\n          missingGlyphs: missingGlyphs,\\n          maxSizeOfInstructions: maxSizeOfInstructions\\n        };\\n      }\\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\\n        var start = (font.start ? font.start : 0) + post.offset;\\n        font.pos = start;\\n        var length = post.length,\\n            end = start + length;\\n        var version = font.getInt32();\\n        font.getBytes(28);\\n        var glyphNames;\\n        var valid = true;\\n        var i;\\n        switch (version) {\\n          case 0x00010000:\\n            glyphNames = MacStandardGlyphOrdering;\\n            break;\\n          case 0x00020000:\\n            var numGlyphs = font.getUint16();\\n            if (numGlyphs !== maxpNumGlyphs) {\\n              valid = false;\\n              break;\\n            }\\n            var glyphNameIndexes = [];\\n            for (i = 0; i < numGlyphs; ++i) {\\n              var index = font.getUint16();\\n              if (index >= 32768) {\\n                valid = false;\\n                break;\\n              }\\n              glyphNameIndexes.push(index);\\n            }\\n            if (!valid) {\\n              break;\\n            }\\n            var customNames = [];\\n            var strBuf = [];\\n            while (font.pos < end) {\\n              var stringLength = font.getByte();\\n              strBuf.length = stringLength;\\n              for (i = 0; i < stringLength; ++i) {\\n                strBuf[i] = String.fromCharCode(font.getByte());\\n              }\\n              customNames.push(strBuf.join(''));\\n            }\\n            glyphNames = [];\\n            for (i = 0; i < numGlyphs; ++i) {\\n              var j = glyphNameIndexes[i];\\n              if (j < 258) {\\n                glyphNames.push(MacStandardGlyphOrdering[j]);\\n                continue;\\n              }\\n              glyphNames.push(customNames[j - 258]);\\n            }\\n            break;\\n          case 0x00030000:\\n            break;\\n          default:\\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\\n            valid = false;\\n            if (properties.defaultEncoding) {\\n              glyphNames = properties.defaultEncoding;\\n            }\\n            break;\\n        }\\n        properties.glyphNames = glyphNames;\\n        return valid;\\n      }\\n      function readNameTable(nameTable) {\\n        var start = (font.start ? font.start : 0) + nameTable.offset;\\n        font.pos = start;\\n        var names = [[], []];\\n        var length = nameTable.length,\\n            end = start + length;\\n        var format = font.getUint16();\\n        var FORMAT_0_HEADER_LENGTH = 6;\\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\\n          return names;\\n        }\\n        var numRecords = font.getUint16();\\n        var stringsStart = font.getUint16();\\n        var records = [];\\n        var NAME_RECORD_LENGTH = 12;\\n        var i, ii;\\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\\n          var r = {\\n            platform: font.getUint16(),\\n            encoding: font.getUint16(),\\n            language: font.getUint16(),\\n            name: font.getUint16(),\\n            length: font.getUint16(),\\n            offset: font.getUint16()\\n          };\\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\\n            records.push(r);\\n          }\\n        }\\n        for (i = 0, ii = records.length; i < ii; i++) {\\n          var record = records[i];\\n          if (record.length <= 0) {\\n            continue;\\n          }\\n          var pos = start + stringsStart + record.offset;\\n          if (pos + record.length > end) {\\n            continue;\\n          }\\n          font.pos = pos;\\n          var nameIndex = record.name;\\n          if (record.encoding) {\\n            var str = '';\\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\\n              str += String.fromCharCode(font.getUint16());\\n            }\\n            names[1][nameIndex] = str;\\n          } else {\\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\\n          }\\n        }\\n        return names;\\n      }\\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\\n      function sanitizeTTProgram(table, ttContext) {\\n        var data = table.data;\\n        var i = 0,\\n            j,\\n            n,\\n            b,\\n            funcId,\\n            pc,\\n            lastEndf = 0,\\n            lastDeff = 0;\\n        var stack = [];\\n        var callstack = [];\\n        var functionsCalled = [];\\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\\n        var inFDEF = false,\\n            ifLevel = 0,\\n            inELSE = 0;\\n        for (var ii = data.length; i < ii;) {\\n          var op = data[i++];\\n          if (op === 0x40) {\\n            n = data[i++];\\n            if (inFDEF || inELSE) {\\n              i += n;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                stack.push(data[i++]);\\n              }\\n            }\\n          } else if (op === 0x41) {\\n            n = data[i++];\\n            if (inFDEF || inELSE) {\\n              i += n * 2;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                b = data[i++];\\n                stack.push(b << 8 | data[i++]);\\n              }\\n            }\\n          } else if ((op & 0xF8) === 0xB0) {\\n            n = op - 0xB0 + 1;\\n            if (inFDEF || inELSE) {\\n              i += n;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                stack.push(data[i++]);\\n              }\\n            }\\n          } else if ((op & 0xF8) === 0xB8) {\\n            n = op - 0xB8 + 1;\\n            if (inFDEF || inELSE) {\\n              i += n * 2;\\n            } else {\\n              for (j = 0; j < n; j++) {\\n                b = data[i++];\\n                stack.push(b << 8 | data[i++]);\\n              }\\n            }\\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\\n            if (!inFDEF && !inELSE) {\\n              funcId = stack[stack.length - 1];\\n              ttContext.functionsUsed[funcId] = true;\\n              if (funcId in ttContext.functionsStackDeltas) {\\n                stack.length += ttContext.functionsStackDeltas[funcId];\\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\\n                callstack.push({\\n                  data: data,\\n                  i: i,\\n                  stackTop: stack.length - 1\\n                });\\n                functionsCalled.push(funcId);\\n                pc = ttContext.functionsDefined[funcId];\\n                if (!pc) {\\n                  (0, _util.warn)('TT: CALL non-existent function');\\n                  ttContext.hintsValid = false;\\n                  return;\\n                }\\n                data = pc.data;\\n                i = pc.i;\\n              }\\n            }\\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\\n            if (inFDEF || inELSE) {\\n              (0, _util.warn)('TT: nested FDEFs not allowed');\\n              tooComplexToFollowFunctions = true;\\n            }\\n            inFDEF = true;\\n            lastDeff = i;\\n            funcId = stack.pop();\\n            ttContext.functionsDefined[funcId] = {\\n              data: data,\\n              i: i\\n            };\\n          } else if (op === 0x2D) {\\n            if (inFDEF) {\\n              inFDEF = false;\\n              lastEndf = i;\\n            } else {\\n              pc = callstack.pop();\\n              if (!pc) {\\n                (0, _util.warn)('TT: ENDF bad stack');\\n                ttContext.hintsValid = false;\\n                return;\\n              }\\n              funcId = functionsCalled.pop();\\n              data = pc.data;\\n              i = pc.i;\\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\\n            }\\n          } else if (op === 0x89) {\\n            if (inFDEF || inELSE) {\\n              (0, _util.warn)('TT: nested IDEFs not allowed');\\n              tooComplexToFollowFunctions = true;\\n            }\\n            inFDEF = true;\\n            lastDeff = i;\\n          } else if (op === 0x58) {\\n            ++ifLevel;\\n          } else if (op === 0x1B) {\\n            inELSE = ifLevel;\\n          } else if (op === 0x59) {\\n            if (inELSE === ifLevel) {\\n              inELSE = 0;\\n            }\\n            --ifLevel;\\n          } else if (op === 0x1C) {\\n            if (!inFDEF && !inELSE) {\\n              var offset = stack[stack.length - 1];\\n              if (offset > 0) {\\n                i += offset - 1;\\n              }\\n            }\\n          }\\n          if (!inFDEF && !inELSE) {\\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\\n            if (op >= 0x71 && op <= 0x75) {\\n              n = stack.pop();\\n              if (!isNaN(n)) {\\n                stackDelta = -n * 2;\\n              }\\n            }\\n            while (stackDelta < 0 && stack.length > 0) {\\n              stack.pop();\\n              stackDelta++;\\n            }\\n            while (stackDelta > 0) {\\n              stack.push(NaN);\\n              stackDelta--;\\n            }\\n          }\\n        }\\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\\n        var content = [data];\\n        if (i > data.length) {\\n          content.push(new Uint8Array(i - data.length));\\n        }\\n        if (lastDeff > lastEndf) {\\n          (0, _util.warn)('TT: complementing a missing function tail');\\n          content.push(new Uint8Array([0x22, 0x2D]));\\n        }\\n        foldTTTable(table, content);\\n      }\\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\\n        if (ttContext.tooComplexToFollowFunctions) {\\n          return;\\n        }\\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\\n          (0, _util.warn)('TT: more functions defined than expected');\\n          ttContext.hintsValid = false;\\n          return;\\n        }\\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\\n          if (j > maxFunctionDefs) {\\n            (0, _util.warn)('TT: invalid function id: ' + j);\\n            ttContext.hintsValid = false;\\n            return;\\n          }\\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\\n            (0, _util.warn)('TT: undefined function: ' + j);\\n            ttContext.hintsValid = false;\\n            return;\\n          }\\n        }\\n      }\\n      function foldTTTable(table, content) {\\n        if (content.length > 1) {\\n          var newLength = 0;\\n          var j, jj;\\n          for (j = 0, jj = content.length; j < jj; j++) {\\n            newLength += content[j].length;\\n          }\\n          newLength = newLength + 3 & ~3;\\n          var result = new Uint8Array(newLength);\\n          var pos = 0;\\n          for (j = 0, jj = content.length; j < jj; j++) {\\n            result.set(content[j], pos);\\n            pos += content[j].length;\\n          }\\n          table.data = result;\\n          table.length = newLength;\\n        }\\n      }\\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\\n        var ttContext = {\\n          functionsDefined: [],\\n          functionsUsed: [],\\n          functionsStackDeltas: [],\\n          tooComplexToFollowFunctions: false,\\n          hintsValid: true\\n        };\\n        if (fpgm) {\\n          sanitizeTTProgram(fpgm, ttContext);\\n        }\\n        if (prep) {\\n          sanitizeTTProgram(prep, ttContext);\\n        }\\n        if (fpgm) {\\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\\n        }\\n        if (cvt && cvt.length & 1) {\\n          var cvtData = new Uint8Array(cvt.length + 1);\\n          cvtData.set(cvt.data);\\n          cvt.data = cvtData;\\n        }\\n        return ttContext.hintsValid;\\n      }\\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\\n      var header = void 0,\\n          tables = void 0;\\n      if (isTrueTypeCollectionFile(font)) {\\n        var ttcData = readTrueTypeCollectionData(font, this.name);\\n        header = ttcData.header;\\n        tables = ttcData.tables;\\n      } else {\\n        header = readOpenTypeHeader(font);\\n        tables = readTables(font, header.numTables);\\n      }\\n      var cff = void 0,\\n          cffFile = void 0;\\n      var isTrueType = !tables['CFF '];\\n      if (!isTrueType) {\\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\\n          cffFile = new _stream.Stream(tables['CFF '].data);\\n          cff = new CFFFont(cffFile, properties);\\n          adjustWidths(properties);\\n          return this.convert(name, cff, properties);\\n        }\\n        delete tables['glyf'];\\n        delete tables['loca'];\\n        delete tables['fpgm'];\\n        delete tables['prep'];\\n        delete tables['cvt '];\\n        this.isOpenType = true;\\n      } else {\\n        if (!tables['loca']) {\\n          throw new _util.FormatError('Required \\\"loca\\\" table is not found');\\n        }\\n        if (!tables['glyf']) {\\n          (0, _util.warn)('Required \\\"glyf\\\" table is not found -- trying to recover.');\\n          tables['glyf'] = {\\n            tag: 'glyf',\\n            data: new Uint8Array(0)\\n          };\\n        }\\n        this.isOpenType = false;\\n      }\\n      if (!tables['maxp']) {\\n        throw new _util.FormatError('Required \\\"maxp\\\" table is not found');\\n      }\\n      font.pos = (font.start || 0) + tables['maxp'].offset;\\n      var version = font.getInt32();\\n      var numGlyphs = font.getUint16();\\n      var maxFunctionDefs = 0;\\n      var maxSizeOfInstructions = 0;\\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\n        font.pos += 8;\\n        var maxZones = font.getUint16();\\n        if (maxZones > 2) {\\n          tables['maxp'].data[14] = 0;\\n          tables['maxp'].data[15] = 2;\\n        }\\n        font.pos += 4;\\n        maxFunctionDefs = font.getUint16();\\n        font.pos += 6;\\n        maxSizeOfInstructions = font.getUint16();\\n      }\\n      var dupFirstEntry = false;\\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\\\0') {\\n        dupFirstEntry = true;\\n        numGlyphs++;\\n        tables['maxp'].data[4] = numGlyphs >> 8;\\n        tables['maxp'].data[5] = numGlyphs & 255;\\n      }\\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\\n      if (!hintsValid) {\\n        delete tables['fpgm'];\\n        delete tables['prep'];\\n        delete tables['cvt '];\\n      }\\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\\n      if (!tables['head']) {\\n        throw new _util.FormatError('Required \\\"head\\\" table is not found');\\n      }\\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\\n      var missingGlyphs = Object.create(null);\\n      if (isTrueType) {\\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\\n        missingGlyphs = glyphsInfo.missingGlyphs;\\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\\n        }\\n      }\\n      if (!tables['hhea']) {\\n        throw new _util.FormatError('Required \\\"hhea\\\" table is not found');\\n      }\\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\\n        tables['hhea'].data[10] = 0xFF;\\n        tables['hhea'].data[11] = 0xFF;\\n      }\\n      var metricsOverride = {\\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\\n      };\\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\\n      if (tables['post']) {\\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\\n        if (!valid) {\\n          tables['post'] = null;\\n        }\\n      }\\n      var charCodeToGlyphId = [],\\n          charCode;\\n      function hasGlyph(glyphId) {\\n        return !missingGlyphs[glyphId];\\n      }\\n      if (properties.composite) {\\n        var cidToGidMap = properties.cidToGidMap || [];\\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\\n        properties.cMap.forEach(function (charCode, cid) {\\n          if (cid > 0xffff) {\\n            throw new _util.FormatError('Max size of CID is 65,535');\\n          }\\n          var glyphId = -1;\\n          if (isCidToGidMapEmpty) {\\n            glyphId = cid;\\n          } else if (cidToGidMap[cid] !== undefined) {\\n            glyphId = cidToGidMap[cid];\\n          }\\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\\n            charCodeToGlyphId[charCode] = glyphId;\\n          }\\n        });\\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\\n          charCodeToGlyphId[0] = numGlyphs - 1;\\n        }\\n      } else {\\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\\n        var cmapPlatformId = cmapTable.platformId;\\n        var cmapEncodingId = cmapTable.encodingId;\\n        var cmapMappings = cmapTable.mappings;\\n        var cmapMappingsLength = cmapMappings.length;\\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\\n          var baseEncoding = [];\\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\n          }\\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n          for (charCode = 0; charCode < 256; charCode++) {\\n            var glyphName, standardGlyphName;\\n            if (this.differences && charCode in this.differences) {\\n              glyphName = this.differences[charCode];\\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\\n              glyphName = baseEncoding[charCode];\\n            } else {\\n              glyphName = _encodings.StandardEncoding[charCode];\\n            }\\n            if (!glyphName) {\\n              continue;\\n            }\\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\n            var unicodeOrCharCode;\\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\\n            }\\n            var found = false;\\n            for (var i = 0; i < cmapMappingsLength; ++i) {\\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\\n                continue;\\n              }\\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\\n              found = true;\\n              break;\\n            }\\n            if (!found && properties.glyphNames) {\\n              var glyphId = properties.glyphNames.indexOf(glyphName);\\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\\n              }\\n              if (glyphId > 0 && hasGlyph(glyphId)) {\\n                charCodeToGlyphId[charCode] = glyphId;\\n              }\\n            }\\n          }\\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\\n          }\\n        } else {\\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\\n            charCode = cmapMappings[_i2].charCode;\\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\\n              charCode &= 0xFF;\\n            }\\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\\n          }\\n        }\\n      }\\n      if (charCodeToGlyphId.length === 0) {\\n        charCodeToGlyphId[0] = 0;\\n      }\\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\\n      this.toFontChar = newMapping.toFontChar;\\n      tables['cmap'] = {\\n        tag: 'cmap',\\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\\n      };\\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\\n        tables['OS/2'] = {\\n          tag: 'OS/2',\\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\\n        };\\n      }\\n      if (!tables['post']) {\\n        tables['post'] = {\\n          tag: 'post',\\n          data: createPostTable(properties)\\n        };\\n      }\\n      if (!isTrueType) {\\n        try {\\n          cffFile = new _stream.Stream(tables['CFF '].data);\\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\\n          cff = parser.parse();\\n          var compiler = new _cff_parser.CFFCompiler(cff);\\n          tables['CFF '].data = compiler.compile();\\n        } catch (e) {\\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\n        }\\n      }\\n      if (!tables['name']) {\\n        tables['name'] = {\\n          tag: 'name',\\n          data: createNameTable(this.name)\\n        };\\n      } else {\\n        var namePrototype = readNameTable(tables['name']);\\n        tables['name'].data = createNameTable(name, namePrototype);\\n      }\\n      var builder = new OpenTypeFileBuilder(header.version);\\n      for (var tableTag in tables) {\\n        builder.addTable(tableTag, tables[tableTag].data);\\n      }\\n      return builder.toArray();\\n    },\\n    convert: function Font_convert(fontName, font, properties) {\\n      properties.fixedPitch = false;\\n      if (properties.builtInEncoding) {\\n        adjustToUnicode(properties, properties.builtInEncoding);\\n      }\\n      var mapping = font.getGlyphMapping(properties);\\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\\n      this.toFontChar = newMapping.toFontChar;\\n      var numGlyphs = font.numGlyphs;\\n      function getCharCodes(charCodeToGlyphId, glyphId) {\\n        var charCodes = null;\\n        for (var charCode in charCodeToGlyphId) {\\n          if (glyphId === charCodeToGlyphId[charCode]) {\\n            if (!charCodes) {\\n              charCodes = [];\\n            }\\n            charCodes.push(charCode | 0);\\n          }\\n        }\\n        return charCodes;\\n      }\\n      function createCharCode(charCodeToGlyphId, glyphId) {\\n        for (var charCode in charCodeToGlyphId) {\\n          if (glyphId === charCodeToGlyphId[charCode]) {\\n            return charCode | 0;\\n          }\\n        }\\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\\n        return newMapping.nextAvailableFontCharCode++;\\n      }\\n      var seacs = font.seacs;\\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\n        var charset = font.getCharset();\\n        var seacMap = Object.create(null);\\n        for (var glyphId in seacs) {\\n          glyphId |= 0;\\n          var seac = seacs[glyphId];\\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\\n          var baseGlyphId = charset.indexOf(baseGlyphName);\\n          var accentGlyphId = charset.indexOf(accentGlyphName);\\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\\n            continue;\\n          }\\n          var accentOffset = {\\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\\n          };\\n          var charCodes = getCharCodes(mapping, glyphId);\\n          if (!charCodes) {\\n            continue;\\n          }\\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\\n            var charCode = charCodes[i];\\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\\n            seacMap[charCode] = {\\n              baseFontCharCode: baseFontCharCode,\\n              accentFontCharCode: accentFontCharCode,\\n              accentOffset: accentOffset\\n            };\\n          }\\n        }\\n        properties.seacMap = seacMap;\\n      }\\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\n      var builder = new OpenTypeFileBuilder('\\\\x4F\\\\x54\\\\x54\\\\x4F');\\n      builder.addTable('CFF ', font.data);\\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\\n      builder.addTable('head', '\\\\x00\\\\x01\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x10\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x5F\\\\x0F\\\\x3C\\\\xF5' + '\\\\x00\\\\x00' + safeString16(unitsPerEm) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00' + safeString16(properties.descent) + '\\\\x0F\\\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\\\x00\\\\x11' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00');\\n      builder.addTable('hhea', '\\\\x00\\\\x01\\\\x00\\\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\\\x00\\\\x00' + '\\\\xFF\\\\xFF' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + string16(numGlyphs));\\n      builder.addTable('hmtx', function fontFieldsHmtx() {\\n        var charstrings = font.charstrings;\\n        var cffWidths = font.cff ? font.cff.widths : null;\\n        var hmtx = '\\\\x00\\\\x00\\\\x00\\\\x00';\\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\\n          var width = 0;\\n          if (charstrings) {\\n            var charstring = charstrings[i - 1];\\n            width = 'width' in charstring ? charstring.width : 0;\\n          } else if (cffWidths) {\\n            width = Math.ceil(cffWidths[i] || 0);\\n          }\\n          hmtx += string16(width) + string16(0);\\n        }\\n        return hmtx;\\n      }());\\n      builder.addTable('maxp', '\\\\x00\\\\x00\\\\x50\\\\x00' + string16(numGlyphs));\\n      builder.addTable('name', createNameTable(fontName));\\n      builder.addTable('post', createPostTable(properties));\\n      return builder.toArray();\\n    },\\n    get spaceWidth() {\\n      if ('_shadowWidth' in this) {\\n        return this._shadowWidth;\\n      }\\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\\n      var width;\\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\\n        var glyphName = possibleSpaceReplacements[i];\\n        if (glyphName in this.widths) {\\n          width = this.widths[glyphName];\\n          break;\\n        }\\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\\n        var charcode = 0;\\n        if (this.composite) {\\n          if (this.cMap.contains(glyphUnicode)) {\\n            charcode = this.cMap.lookup(glyphUnicode);\\n          }\\n        }\\n        if (!charcode && this.toUnicode) {\\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\\n        }\\n        if (charcode <= 0) {\\n          charcode = glyphUnicode;\\n        }\\n        width = this.widths[charcode];\\n        if (width) {\\n          break;\\n        }\\n      }\\n      width = width || this.defaultWidth;\\n      this._shadowWidth = width;\\n      return width;\\n    },\\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\\n      var fontCharCode, width, operatorListId;\\n      var widthCode = charcode;\\n      if (this.cMap && this.cMap.contains(charcode)) {\\n        widthCode = this.cMap.lookup(charcode);\\n      }\\n      width = this.widths[widthCode];\\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\\n      if (typeof unicode === 'number') {\\n        unicode = String.fromCharCode(unicode);\\n      }\\n      var isInFont = charcode in this.toFontChar;\\n      fontCharCode = this.toFontChar[charcode] || charcode;\\n      if (this.missingFile) {\\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\\n      }\\n      if (this.isType3Font) {\\n        operatorListId = fontCharCode;\\n      }\\n      var accent = null;\\n      if (this.seacMap && this.seacMap[charcode]) {\\n        isInFont = true;\\n        var seac = this.seacMap[charcode];\\n        fontCharCode = seac.baseFontCharCode;\\n        accent = {\\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\\n          offset: seac.accentOffset\\n        };\\n      }\\n      var fontChar = String.fromCharCode(fontCharCode);\\n      var glyph = this.glyphCache[charcode];\\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\\n        this.glyphCache[charcode] = glyph;\\n      }\\n      return glyph;\\n    },\\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\\n      var charsCache = this.charsCache;\\n      var glyphs, glyph, charcode;\\n      if (charsCache) {\\n        glyphs = charsCache[chars];\\n        if (glyphs) {\\n          return glyphs;\\n        }\\n      }\\n      if (!charsCache) {\\n        charsCache = this.charsCache = Object.create(null);\\n      }\\n      glyphs = [];\\n      var charsCacheKey = chars;\\n      var i = 0,\\n          ii;\\n      if (this.cMap) {\\n        var c = Object.create(null);\\n        while (i < chars.length) {\\n          this.cMap.readCharCode(chars, i, c);\\n          charcode = c.charcode;\\n          var length = c.length;\\n          i += length;\\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\\n          glyph = this.charToGlyph(charcode, isSpace);\\n          glyphs.push(glyph);\\n        }\\n      } else {\\n        for (i = 0, ii = chars.length; i < ii; ++i) {\\n          charcode = chars.charCodeAt(i);\\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\\n          glyphs.push(glyph);\\n        }\\n      }\\n      return charsCache[charsCacheKey] = glyphs;\\n    }\\n  };\\n  return Font;\\n}();\\nvar ErrorFont = function ErrorFontClosure() {\\n  function ErrorFont(error) {\\n    this.error = error;\\n    this.loadedName = 'g_font_error';\\n    this.loading = false;\\n  }\\n  ErrorFont.prototype = {\\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\\n      return [];\\n    },\\n    exportData: function ErrorFont_exportData() {\\n      return { error: this.error };\\n    }\\n  };\\n  return ErrorFont;\\n}();\\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\\n  var charCodeToGlyphId = Object.create(null);\\n  var glyphId, charCode, baseEncoding;\\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\n  if (properties.baseEncodingName) {\\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\n      if (glyphId >= 0) {\\n        charCodeToGlyphId[charCode] = glyphId;\\n      } else {\\n        charCodeToGlyphId[charCode] = 0;\\n      }\\n    }\\n  } else if (isSymbolicFont) {\\n    for (charCode in builtInEncoding) {\\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\\n    }\\n  } else {\\n    baseEncoding = _encodings.StandardEncoding;\\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\n      if (glyphId >= 0) {\\n        charCodeToGlyphId[charCode] = glyphId;\\n      } else {\\n        charCodeToGlyphId[charCode] = 0;\\n      }\\n    }\\n  }\\n  var differences = properties.differences,\\n      glyphsUnicodeMap;\\n  if (differences) {\\n    for (charCode in differences) {\\n      var glyphName = differences[charCode];\\n      glyphId = glyphNames.indexOf(glyphName);\\n      if (glyphId === -1) {\\n        if (!glyphsUnicodeMap) {\\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n        }\\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\n        if (standardGlyphName !== glyphName) {\\n          glyphId = glyphNames.indexOf(standardGlyphName);\\n        }\\n      }\\n      if (glyphId >= 0) {\\n        charCodeToGlyphId[charCode] = glyphId;\\n      } else {\\n        charCodeToGlyphId[charCode] = 0;\\n      }\\n    }\\n  }\\n  return charCodeToGlyphId;\\n}\\nvar Type1Font = function Type1FontClosure() {\\n  function findBlock(streamBytes, signature, startIndex) {\\n    var streamBytesLength = streamBytes.length;\\n    var signatureLength = signature.length;\\n    var scanLength = streamBytesLength - signatureLength;\\n    var i = startIndex,\\n        j,\\n        found = false;\\n    while (i < scanLength) {\\n      j = 0;\\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\\n        j++;\\n      }\\n      if (j >= signatureLength) {\\n        i += j;\\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\\n          i++;\\n        }\\n        found = true;\\n        break;\\n      }\\n      i++;\\n    }\\n    return {\\n      found: found,\\n      length: i\\n    };\\n  }\\n  function getHeaderBlock(stream, suggestedLength) {\\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\\n    var streamStartPos = stream.pos;\\n    var headerBytes, headerBytesLength, block;\\n    try {\\n      headerBytes = stream.getBytes(suggestedLength);\\n      headerBytesLength = headerBytes.length;\\n    } catch (ex) {\\n      if (ex instanceof _util.MissingDataException) {\\n        throw ex;\\n      }\\n    }\\n    if (headerBytesLength === suggestedLength) {\\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\\n      if (block.found && block.length === suggestedLength) {\\n        return {\\n          stream: new _stream.Stream(headerBytes),\\n          length: suggestedLength\\n        };\\n      }\\n    }\\n    (0, _util.warn)('Invalid \\\"Length1\\\" property in Type1 font -- trying to recover.');\\n    stream.pos = streamStartPos;\\n    var SCAN_BLOCK_LENGTH = 2048;\\n    var actualLength;\\n    while (true) {\\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\\n      if (block.length === 0) {\\n        break;\\n      }\\n      stream.pos += block.length;\\n      if (block.found) {\\n        actualLength = stream.pos - streamStartPos;\\n        break;\\n      }\\n    }\\n    stream.pos = streamStartPos;\\n    if (actualLength) {\\n      return {\\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\\n        length: actualLength\\n      };\\n    }\\n    (0, _util.warn)('Unable to recover \\\"Length1\\\" property in Type1 font -- using as is.');\\n    return {\\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\\n      length: suggestedLength\\n    };\\n  }\\n  function getEexecBlock(stream, suggestedLength) {\\n    var eexecBytes = stream.getBytes();\\n    return {\\n      stream: new _stream.Stream(eexecBytes),\\n      length: eexecBytes.length\\n    };\\n  }\\n  function Type1Font(name, file, properties) {\\n    var PFB_HEADER_SIZE = 6;\\n    var headerBlockLength = properties.length1;\\n    var eexecBlockLength = properties.length2;\\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\\n    if (pfbHeaderPresent) {\\n      file.skip(PFB_HEADER_SIZE);\\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\n    }\\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\\n    headerBlockParser.extractFontHeader(properties);\\n    if (pfbHeaderPresent) {\\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\n    }\\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\\n    var data = eexecBlockParser.extractFontProgram();\\n    for (var info in data.properties) {\\n      properties[info] = data.properties[info];\\n    }\\n    var charstrings = data.charstrings;\\n    var type2Charstrings = this.getType2Charstrings(charstrings);\\n    var subrs = this.getType2Subrs(data.subrs);\\n    this.charstrings = charstrings;\\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\\n    this.seacs = this.getSeacs(data.charstrings);\\n  }\\n  Type1Font.prototype = {\\n    get numGlyphs() {\\n      return this.charstrings.length + 1;\\n    },\\n    getCharset: function Type1Font_getCharset() {\\n      var charset = ['.notdef'];\\n      var charstrings = this.charstrings;\\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\\n        charset.push(charstrings[glyphId].glyphName);\\n      }\\n      return charset;\\n    },\\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\\n      var charstrings = this.charstrings;\\n      var glyphNames = ['.notdef'],\\n          glyphId;\\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\\n        glyphNames.push(charstrings[glyphId].glyphName);\\n      }\\n      var encoding = properties.builtInEncoding;\\n      if (encoding) {\\n        var builtInEncoding = Object.create(null);\\n        for (var charCode in encoding) {\\n          glyphId = glyphNames.indexOf(encoding[charCode]);\\n          if (glyphId >= 0) {\\n            builtInEncoding[charCode] = glyphId;\\n          }\\n        }\\n      }\\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\\n    },\\n    getSeacs: function Type1Font_getSeacs(charstrings) {\\n      var i, ii;\\n      var seacMap = [];\\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\\n        var charstring = charstrings[i];\\n        if (charstring.seac) {\\n          seacMap[i + 1] = charstring.seac;\\n        }\\n      }\\n      return seacMap;\\n    },\\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\\n      var type2Charstrings = [];\\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\\n        type2Charstrings.push(type1Charstrings[i].charstring);\\n      }\\n      return type2Charstrings;\\n    },\\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\\n      var bias = 0;\\n      var count = type1Subrs.length;\\n      if (count < 1133) {\\n        bias = 107;\\n      } else if (count < 33769) {\\n        bias = 1131;\\n      } else {\\n        bias = 32768;\\n      }\\n      var type2Subrs = [];\\n      var i;\\n      for (i = 0; i < bias; i++) {\\n        type2Subrs.push([0x0B]);\\n      }\\n      for (i = 0; i < count; i++) {\\n        type2Subrs.push(type1Subrs[i]);\\n      }\\n      return type2Subrs;\\n    },\\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\\n      var cff = new _cff_parser.CFF();\\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\\n      cff.names = [name];\\n      var topDict = new _cff_parser.CFFTopDict();\\n      topDict.setByName('version', 391);\\n      topDict.setByName('Notice', 392);\\n      topDict.setByName('FullName', 393);\\n      topDict.setByName('FamilyName', 394);\\n      topDict.setByName('Weight', 395);\\n      topDict.setByName('Encoding', null);\\n      topDict.setByName('FontMatrix', properties.fontMatrix);\\n      topDict.setByName('FontBBox', properties.bbox);\\n      topDict.setByName('charset', null);\\n      topDict.setByName('CharStrings', null);\\n      topDict.setByName('Private', null);\\n      cff.topDict = topDict;\\n      var strings = new _cff_parser.CFFStrings();\\n      strings.add('Version 0.11');\\n      strings.add('See original notice');\\n      strings.add(name);\\n      strings.add(name);\\n      strings.add('Medium');\\n      cff.strings = strings;\\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\\n      var count = glyphs.length;\\n      var charsetArray = [0];\\n      var i, ii;\\n      for (i = 0; i < count; i++) {\\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\\n        if (index === -1) {\\n          index = 0;\\n        }\\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\\n      }\\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\\n      var charStringsIndex = new _cff_parser.CFFIndex();\\n      charStringsIndex.add([0x8B, 0x0E]);\\n      for (i = 0; i < count; i++) {\\n        var glyph = glyphs[i];\\n        if (glyph.length === 0) {\\n          charStringsIndex.add([0x8B, 0x0E]);\\n          continue;\\n        }\\n        charStringsIndex.add(glyph);\\n      }\\n      cff.charStrings = charStringsIndex;\\n      var privateDict = new _cff_parser.CFFPrivateDict();\\n      privateDict.setByName('Subrs', null);\\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\\n      for (i = 0, ii = fields.length; i < ii; i++) {\\n        var field = fields[i];\\n        if (!(field in properties.privateData)) {\\n          continue;\\n        }\\n        var value = properties.privateData[field];\\n        if (Array.isArray(value)) {\\n          for (var j = value.length - 1; j > 0; j--) {\\n            value[j] -= value[j - 1];\\n          }\\n        }\\n        privateDict.setByName(field, value);\\n      }\\n      cff.topDict.privateDict = privateDict;\\n      var subrIndex = new _cff_parser.CFFIndex();\\n      for (i = 0, ii = subrs.length; i < ii; i++) {\\n        subrIndex.add(subrs[i]);\\n      }\\n      privateDict.subrsIndex = subrIndex;\\n      var compiler = new _cff_parser.CFFCompiler(cff);\\n      return compiler.compile();\\n    }\\n  };\\n  return Type1Font;\\n}();\\nvar CFFFont = function CFFFontClosure() {\\n  function CFFFont(file, properties) {\\n    this.properties = properties;\\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\\n    this.cff = parser.parse();\\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\\n    this.seacs = this.cff.seacs;\\n    try {\\n      this.data = compiler.compile();\\n    } catch (e) {\\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\n      this.data = file;\\n    }\\n  }\\n  CFFFont.prototype = {\\n    get numGlyphs() {\\n      return this.cff.charStrings.count;\\n    },\\n    getCharset: function CFFFont_getCharset() {\\n      return this.cff.charset.charset;\\n    },\\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\\n      var cff = this.cff;\\n      var properties = this.properties;\\n      var charsets = cff.charset.charset;\\n      var charCodeToGlyphId;\\n      var glyphId;\\n      if (properties.composite) {\\n        charCodeToGlyphId = Object.create(null);\\n        if (cff.isCIDFont) {\\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\\n            var cid = charsets[glyphId];\\n            var charCode = properties.cMap.charCodeOf(cid);\\n            charCodeToGlyphId[charCode] = glyphId;\\n          }\\n        } else {\\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\\n            charCodeToGlyphId[glyphId] = glyphId;\\n          }\\n        }\\n        return charCodeToGlyphId;\\n      }\\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\\n      return charCodeToGlyphId;\\n    }\\n  };\\n  return CFFFont;\\n}();\\n(function checkSeacSupport() {\\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\\n  }\\n})();\\n(function checkChromeWindows() {\\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\\n  }\\n})();\\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\\nexports.ErrorFont = ErrorFont;\\nexports.Font = Font;\\nexports.FontFlags = FontFlags;\\nexports.ToUnicodeMap = ToUnicodeMap;\\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\\nexports.ProblematicCharRanges = ProblematicCharRanges;\\nexports.getFontType = getFontType;\\n\\n/***/ }),\\n/* 138 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\\nexports.ISOAdobeCharset = ISOAdobeCharset;\\nexports.ExpertCharset = ExpertCharset;\\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\\n\\n/***/ }),\\n/* 139 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.FontRendererFactory = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _cff_parser = __w_pdfjs_require__(69);\\n\\nvar _glyphlist = __w_pdfjs_require__(43);\\n\\nvar _encodings = __w_pdfjs_require__(21);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar FontRendererFactory = function FontRendererFactoryClosure() {\\n  function getLong(data, offset) {\\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n  }\\n  function getUshort(data, offset) {\\n    return data[offset] << 8 | data[offset + 1];\\n  }\\n  function parseCmap(data, start, end) {\\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\\n    var format = getUshort(data, start + offset);\\n    var ranges, p, i;\\n    if (format === 4) {\\n      getUshort(data, start + offset + 2);\\n      var segCount = getUshort(data, start + offset + 6) >> 1;\\n      p = start + offset + 14;\\n      ranges = [];\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        ranges[i] = { end: getUshort(data, p) };\\n      }\\n      p += 2;\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        ranges[i].start = getUshort(data, p);\\n      }\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        ranges[i].idDelta = getUshort(data, p);\\n      }\\n      for (i = 0; i < segCount; i++, p += 2) {\\n        var idOffset = getUshort(data, p);\\n        if (idOffset === 0) {\\n          continue;\\n        }\\n        ranges[i].ids = [];\\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\\n          idOffset += 2;\\n        }\\n      }\\n      return ranges;\\n    } else if (format === 12) {\\n      getLong(data, start + offset + 4);\\n      var groups = getLong(data, start + offset + 12);\\n      p = start + offset + 16;\\n      ranges = [];\\n      for (i = 0; i < groups; i++) {\\n        ranges.push({\\n          start: getLong(data, p),\\n          end: getLong(data, p + 4),\\n          idDelta: getLong(data, p + 8) - getLong(data, p)\\n        });\\n        p += 12;\\n      }\\n      return ranges;\\n    }\\n    throw new _util.FormatError('unsupported cmap: ' + format);\\n  }\\n  function parseCff(data, start, end, seacAnalysisEnabled) {\\n    var properties = {};\\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\\n    var cff = parser.parse();\\n    return {\\n      glyphs: cff.charStrings.objects,\\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\\n    };\\n  }\\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\\n    var itemSize, itemDecode;\\n    if (isGlyphLocationsLong) {\\n      itemSize = 4;\\n      itemDecode = function fontItemDecodeLong(data, offset) {\\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n      };\\n    } else {\\n      itemSize = 2;\\n      itemDecode = function fontItemDecode(data, offset) {\\n        return data[offset] << 9 | data[offset + 1] << 1;\\n      };\\n    }\\n    var glyphs = [];\\n    var startOffset = itemDecode(loca, 0);\\n    for (var j = itemSize; j < loca.length; j += itemSize) {\\n      var endOffset = itemDecode(loca, j);\\n      glyphs.push(glyf.subarray(startOffset, endOffset));\\n      startOffset = endOffset;\\n    }\\n    return glyphs;\\n  }\\n  function lookupCmap(ranges, unicode) {\\n    var code = unicode.charCodeAt(0),\\n        gid = 0;\\n    var l = 0,\\n        r = ranges.length - 1;\\n    while (l < r) {\\n      var c = l + r + 1 >> 1;\\n      if (code < ranges[c].start) {\\n        r = c - 1;\\n      } else {\\n        l = c;\\n      }\\n    }\\n    if (ranges[l].start <= code && code <= ranges[l].end) {\\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\\n    }\\n    return {\\n      charCode: code,\\n      glyphId: gid\\n    };\\n  }\\n  function compileGlyf(code, cmds, font) {\\n    function moveTo(x, y) {\\n      cmds.push({\\n        cmd: 'moveTo',\\n        args: [x, y]\\n      });\\n    }\\n    function lineTo(x, y) {\\n      cmds.push({\\n        cmd: 'lineTo',\\n        args: [x, y]\\n      });\\n    }\\n    function quadraticCurveTo(xa, ya, x, y) {\\n      cmds.push({\\n        cmd: 'quadraticCurveTo',\\n        args: [xa, ya, x, y]\\n      });\\n    }\\n    var i = 0;\\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\\n    var flags;\\n    var x = 0,\\n        y = 0;\\n    i += 10;\\n    if (numberOfContours < 0) {\\n      do {\\n        flags = code[i] << 8 | code[i + 1];\\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\\n        i += 4;\\n        var arg1, arg2;\\n        if (flags & 0x01) {\\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\\n          i += 4;\\n        } else {\\n          arg1 = code[i++];\\n          arg2 = code[i++];\\n        }\\n        if (flags & 0x02) {\\n          x = arg1;\\n          y = arg2;\\n        } else {\\n          x = 0;\\n          y = 0;\\n        }\\n        var scaleX = 1,\\n            scaleY = 1,\\n            scale01 = 0,\\n            scale10 = 0;\\n        if (flags & 0x08) {\\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n          i += 2;\\n        } else if (flags & 0x40) {\\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\n          i += 4;\\n        } else if (flags & 0x80) {\\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\\n          i += 8;\\n        }\\n        var subglyph = font.glyphs[glyphIndex];\\n        if (subglyph) {\\n          cmds.push({ cmd: 'save' });\\n          cmds.push({\\n            cmd: 'transform',\\n            args: [scaleX, scale01, scale10, scaleY, x, y]\\n          });\\n          compileGlyf(subglyph, cmds, font);\\n          cmds.push({ cmd: 'restore' });\\n        }\\n      } while (flags & 0x20);\\n    } else {\\n      var endPtsOfContours = [];\\n      var j, jj;\\n      for (j = 0; j < numberOfContours; j++) {\\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\\n        i += 2;\\n      }\\n      var instructionLength = code[i] << 8 | code[i + 1];\\n      i += 2 + instructionLength;\\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\\n      var points = [];\\n      while (points.length < numberOfPoints) {\\n        flags = code[i++];\\n        var repeat = 1;\\n        if (flags & 0x08) {\\n          repeat += code[i++];\\n        }\\n        while (repeat-- > 0) {\\n          points.push({ flags: flags });\\n        }\\n      }\\n      for (j = 0; j < numberOfPoints; j++) {\\n        switch (points[j].flags & 0x12) {\\n          case 0x00:\\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\\n            i += 2;\\n            break;\\n          case 0x02:\\n            x -= code[i++];\\n            break;\\n          case 0x12:\\n            x += code[i++];\\n            break;\\n        }\\n        points[j].x = x;\\n      }\\n      for (j = 0; j < numberOfPoints; j++) {\\n        switch (points[j].flags & 0x24) {\\n          case 0x00:\\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\\n            i += 2;\\n            break;\\n          case 0x04:\\n            y -= code[i++];\\n            break;\\n          case 0x24:\\n            y += code[i++];\\n            break;\\n        }\\n        points[j].y = y;\\n      }\\n      var startPoint = 0;\\n      for (i = 0; i < numberOfContours; i++) {\\n        var endPoint = endPtsOfContours[i];\\n        var contour = points.slice(startPoint, endPoint + 1);\\n        if (contour[0].flags & 1) {\\n          contour.push(contour[0]);\\n        } else if (contour[contour.length - 1].flags & 1) {\\n          contour.unshift(contour[contour.length - 1]);\\n        } else {\\n          var p = {\\n            flags: 1,\\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\\n          };\\n          contour.unshift(p);\\n          contour.push(p);\\n        }\\n        moveTo(contour[0].x, contour[0].y);\\n        for (j = 1, jj = contour.length; j < jj; j++) {\\n          if (contour[j].flags & 1) {\\n            lineTo(contour[j].x, contour[j].y);\\n          } else if (contour[j + 1].flags & 1) {\\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\\n            j++;\\n          } else {\\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\\n          }\\n        }\\n        startPoint = endPoint + 1;\\n      }\\n    }\\n  }\\n  function compileCharString(code, cmds, font) {\\n    var stack = [];\\n    var x = 0,\\n        y = 0;\\n    var stems = 0;\\n    function moveTo(x, y) {\\n      cmds.push({\\n        cmd: 'moveTo',\\n        args: [x, y]\\n      });\\n    }\\n    function lineTo(x, y) {\\n      cmds.push({\\n        cmd: 'lineTo',\\n        args: [x, y]\\n      });\\n    }\\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\\n      cmds.push({\\n        cmd: 'bezierCurveTo',\\n        args: [x1, y1, x2, y2, x, y]\\n      });\\n    }\\n    function parse(code) {\\n      var i = 0;\\n      while (i < code.length) {\\n        var stackClean = false;\\n        var v = code[i++];\\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\\n        switch (v) {\\n          case 1:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 3:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 4:\\n            y += stack.pop();\\n            moveTo(x, y);\\n            stackClean = true;\\n            break;\\n          case 5:\\n            while (stack.length > 0) {\\n              x += stack.shift();\\n              y += stack.shift();\\n              lineTo(x, y);\\n            }\\n            break;\\n          case 6:\\n            while (stack.length > 0) {\\n              x += stack.shift();\\n              lineTo(x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              y += stack.shift();\\n              lineTo(x, y);\\n            }\\n            break;\\n          case 7:\\n            while (stack.length > 0) {\\n              y += stack.shift();\\n              lineTo(x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              x += stack.shift();\\n              lineTo(x, y);\\n            }\\n            break;\\n          case 8:\\n            while (stack.length > 0) {\\n              xa = x + stack.shift();\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + stack.shift();\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 10:\\n            n = stack.pop() + font.subrsBias;\\n            subrCode = font.subrs[n];\\n            if (subrCode) {\\n              parse(subrCode);\\n            }\\n            break;\\n          case 11:\\n            return;\\n          case 12:\\n            v = code[i++];\\n            switch (v) {\\n              case 34:\\n                xa = x + stack.shift();\\n                xb = xa + stack.shift();\\n                y1 = y + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y, xb, y1, x, y1);\\n                xa = x + stack.shift();\\n                xb = xa + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y1, xb, y, x, y);\\n                break;\\n              case 35:\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb + stack.shift();\\n                y = yb + stack.shift();\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb + stack.shift();\\n                y = yb + stack.shift();\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                stack.pop();\\n                break;\\n              case 36:\\n                xa = x + stack.shift();\\n                y1 = y + stack.shift();\\n                xb = xa + stack.shift();\\n                y2 = y1 + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\\n                xa = x + stack.shift();\\n                xb = xa + stack.shift();\\n                y3 = y2 + stack.shift();\\n                x = xb + stack.shift();\\n                bezierCurveTo(xa, y2, xb, y3, x, y);\\n                break;\\n              case 37:\\n                var x0 = x,\\n                    y0 = y;\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb + stack.shift();\\n                y = yb + stack.shift();\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                xa = x + stack.shift();\\n                ya = y + stack.shift();\\n                xb = xa + stack.shift();\\n                yb = ya + stack.shift();\\n                x = xb;\\n                y = yb;\\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\\n                  x += stack.shift();\\n                } else {\\n                  y += stack.shift();\\n                }\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\n                break;\\n              default:\\n                throw new _util.FormatError('unknown operator: 12 ' + v);\\n            }\\n            break;\\n          case 14:\\n            if (stack.length >= 4) {\\n              var achar = stack.pop();\\n              var bchar = stack.pop();\\n              y = stack.pop();\\n              x = stack.pop();\\n              cmds.push({ cmd: 'save' });\\n              cmds.push({\\n                cmd: 'translate',\\n                args: [x, y]\\n              });\\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\\n              cmds.push({ cmd: 'restore' });\\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\\n            }\\n            return;\\n          case 18:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 19:\\n            stems += stack.length >> 1;\\n            i += stems + 7 >> 3;\\n            stackClean = true;\\n            break;\\n          case 20:\\n            stems += stack.length >> 1;\\n            i += stems + 7 >> 3;\\n            stackClean = true;\\n            break;\\n          case 21:\\n            y += stack.pop();\\n            x += stack.pop();\\n            moveTo(x, y);\\n            stackClean = true;\\n            break;\\n          case 22:\\n            x += stack.pop();\\n            moveTo(x, y);\\n            stackClean = true;\\n            break;\\n          case 23:\\n            stems += stack.length >> 1;\\n            stackClean = true;\\n            break;\\n          case 24:\\n            while (stack.length > 2) {\\n              xa = x + stack.shift();\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + stack.shift();\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            x += stack.shift();\\n            y += stack.shift();\\n            lineTo(x, y);\\n            break;\\n          case 25:\\n            while (stack.length > 6) {\\n              x += stack.shift();\\n              y += stack.shift();\\n              lineTo(x, y);\\n            }\\n            xa = x + stack.shift();\\n            ya = y + stack.shift();\\n            xb = xa + stack.shift();\\n            yb = ya + stack.shift();\\n            x = xb + stack.shift();\\n            y = yb + stack.shift();\\n            bezierCurveTo(xa, ya, xb, yb, x, y);\\n            break;\\n          case 26:\\n            if (stack.length % 2) {\\n              x += stack.shift();\\n            }\\n            while (stack.length > 0) {\\n              xa = x;\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb;\\n              y = yb + stack.shift();\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 27:\\n            if (stack.length % 2) {\\n              y += stack.shift();\\n            }\\n            while (stack.length > 0) {\\n              xa = x + stack.shift();\\n              ya = y;\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb;\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 28:\\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\\n            i += 2;\\n            break;\\n          case 29:\\n            n = stack.pop() + font.gsubrsBias;\\n            subrCode = font.gsubrs[n];\\n            if (subrCode) {\\n              parse(subrCode);\\n            }\\n            break;\\n          case 30:\\n            while (stack.length > 0) {\\n              xa = x;\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              xa = x + stack.shift();\\n              ya = y;\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              y = yb + stack.shift();\\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          case 31:\\n            while (stack.length > 0) {\\n              xa = x + stack.shift();\\n              ya = y;\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              y = yb + stack.shift();\\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n              if (stack.length === 0) {\\n                break;\\n              }\\n              xa = x;\\n              ya = y + stack.shift();\\n              xb = xa + stack.shift();\\n              yb = ya + stack.shift();\\n              x = xb + stack.shift();\\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\n            }\\n            break;\\n          default:\\n            if (v < 32) {\\n              throw new _util.FormatError('unknown operator: ' + v);\\n            }\\n            if (v < 247) {\\n              stack.push(v - 139);\\n            } else if (v < 251) {\\n              stack.push((v - 247) * 256 + code[i++] + 108);\\n            } else if (v < 255) {\\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\\n            } else {\\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\\n              i += 4;\\n            }\\n            break;\\n        }\\n        if (stackClean) {\\n          stack.length = 0;\\n        }\\n      }\\n    }\\n    parse(code);\\n  }\\n  var noop = '';\\n  function CompiledFont(fontMatrix) {\\n    this.compiledGlyphs = Object.create(null);\\n    this.compiledCharCodeToGlyphId = Object.create(null);\\n    this.fontMatrix = fontMatrix;\\n  }\\n  CompiledFont.prototype = {\\n    getPathJs: function getPathJs(unicode) {\\n      var cmap = lookupCmap(this.cmap, unicode);\\n      var fn = this.compiledGlyphs[cmap.glyphId];\\n      if (!fn) {\\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\\n        this.compiledGlyphs[cmap.glyphId] = fn;\\n      }\\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\\n      }\\n      return fn;\\n    },\\n    compileGlyph: function compileGlyph(code) {\\n      if (!code || code.length === 0 || code[0] === 14) {\\n        return noop;\\n      }\\n      var cmds = [];\\n      cmds.push({ cmd: 'save' });\\n      cmds.push({\\n        cmd: 'transform',\\n        args: this.fontMatrix.slice()\\n      });\\n      cmds.push({\\n        cmd: 'scale',\\n        args: ['size', '-size']\\n      });\\n      this.compileGlyphImpl(code, cmds);\\n      cmds.push({ cmd: 'restore' });\\n      return cmds;\\n    },\\n    compileGlyphImpl: function compileGlyphImpl() {\\n      (0, _util.unreachable)('Children classes should implement this.');\\n    },\\n    hasBuiltPath: function hasBuiltPath(unicode) {\\n      var cmap = lookupCmap(this.cmap, unicode);\\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\\n    }\\n  };\\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\\n    CompiledFont.call(this, fontMatrix);\\n    this.glyphs = glyphs;\\n    this.cmap = cmap;\\n  }\\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\\n      compileGlyf(code, cmds, this);\\n    }\\n  });\\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\\n    CompiledFont.call(this, fontMatrix);\\n    this.glyphs = cffInfo.glyphs;\\n    this.gsubrs = cffInfo.gsubrs || [];\\n    this.subrs = cffInfo.subrs || [];\\n    this.cmap = cmap;\\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\\n  }\\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\\n      compileCharString(code, cmds, this);\\n    }\\n  });\\n  return {\\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\\n      var data = new Uint8Array(font.data);\\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\\n      var numTables = getUshort(data, 4);\\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\\n        var offset = getLong(data, p + 8);\\n        var length = getLong(data, p + 12);\\n        switch (tag) {\\n          case 'cmap':\\n            cmap = parseCmap(data, offset, offset + length);\\n            break;\\n          case 'glyf':\\n            glyf = data.subarray(offset, offset + length);\\n            break;\\n          case 'loca':\\n            loca = data.subarray(offset, offset + length);\\n            break;\\n          case 'head':\\n            unitsPerEm = getUshort(data, offset + 18);\\n            indexToLocFormat = getUshort(data, offset + 50);\\n            break;\\n          case 'CFF ':\\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\\n            break;\\n        }\\n      }\\n      if (glyf) {\\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\\n      }\\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\\n    }\\n  };\\n}();\\nexports.FontRendererFactory = FontRendererFactory;\\n\\n/***/ }),\\n/* 140 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Type1Parser = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _encodings = __w_pdfjs_require__(21);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar HINTING_ENABLED = false;\\nvar Type1CharString = function Type1CharStringClosure() {\\n  var COMMAND_MAP = {\\n    'hstem': [1],\\n    'vstem': [3],\\n    'vmoveto': [4],\\n    'rlineto': [5],\\n    'hlineto': [6],\\n    'vlineto': [7],\\n    'rrcurveto': [8],\\n    'callsubr': [10],\\n    'flex': [12, 35],\\n    'drop': [12, 18],\\n    'endchar': [14],\\n    'rmoveto': [21],\\n    'hmoveto': [22],\\n    'vhcurveto': [30],\\n    'hvcurveto': [31]\\n  };\\n  function Type1CharString() {\\n    this.width = 0;\\n    this.lsb = 0;\\n    this.flexing = false;\\n    this.output = [];\\n    this.stack = [];\\n  }\\n  Type1CharString.prototype = {\\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\\n      var count = encoded.length;\\n      var error = false;\\n      var wx, sbx, subrNumber;\\n      for (var i = 0; i < count; i++) {\\n        var value = encoded[i];\\n        if (value < 32) {\\n          if (value === 12) {\\n            value = (value << 8) + encoded[++i];\\n          }\\n          switch (value) {\\n            case 1:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\\n              break;\\n            case 3:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\\n              break;\\n            case 4:\\n              if (this.flexing) {\\n                if (this.stack.length < 1) {\\n                  error = true;\\n                  break;\\n                }\\n                var dy = this.stack.pop();\\n                this.stack.push(0, dy);\\n                break;\\n              }\\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\\n              break;\\n            case 5:\\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\\n              break;\\n            case 6:\\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\\n              break;\\n            case 7:\\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\\n              break;\\n            case 8:\\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\\n              break;\\n            case 9:\\n              this.stack = [];\\n              break;\\n            case 10:\\n              if (this.stack.length < 1) {\\n                error = true;\\n                break;\\n              }\\n              subrNumber = this.stack.pop();\\n              if (!subrs[subrNumber]) {\\n                error = true;\\n                break;\\n              }\\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\\n              break;\\n            case 11:\\n              return error;\\n            case 13:\\n              if (this.stack.length < 2) {\\n                error = true;\\n                break;\\n              }\\n              wx = this.stack.pop();\\n              sbx = this.stack.pop();\\n              this.lsb = sbx;\\n              this.width = wx;\\n              this.stack.push(wx, sbx);\\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\\n              break;\\n            case 14:\\n              this.output.push(COMMAND_MAP.endchar[0]);\\n              break;\\n            case 21:\\n              if (this.flexing) {\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\\n              break;\\n            case 22:\\n              if (this.flexing) {\\n                this.stack.push(0);\\n                break;\\n              }\\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\\n              break;\\n            case 30:\\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\\n              break;\\n            case 31:\\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\\n              break;\\n            case (12 << 8) + 0:\\n              this.stack = [];\\n              break;\\n            case (12 << 8) + 1:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\\n              break;\\n            case (12 << 8) + 2:\\n              if (!HINTING_ENABLED) {\\n                this.stack = [];\\n                break;\\n              }\\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\\n              break;\\n            case (12 << 8) + 6:\\n              if (seacAnalysisEnabled) {\\n                this.seac = this.stack.splice(-4, 4);\\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\\n              } else {\\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\\n              }\\n              break;\\n            case (12 << 8) + 7:\\n              if (this.stack.length < 4) {\\n                error = true;\\n                break;\\n              }\\n              this.stack.pop();\\n              wx = this.stack.pop();\\n              var sby = this.stack.pop();\\n              sbx = this.stack.pop();\\n              this.lsb = sbx;\\n              this.width = wx;\\n              this.stack.push(wx, sbx, sby);\\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\\n              break;\\n            case (12 << 8) + 12:\\n              if (this.stack.length < 2) {\\n                error = true;\\n                break;\\n              }\\n              var num2 = this.stack.pop();\\n              var num1 = this.stack.pop();\\n              this.stack.push(num1 / num2);\\n              break;\\n            case (12 << 8) + 16:\\n              if (this.stack.length < 2) {\\n                error = true;\\n                break;\\n              }\\n              subrNumber = this.stack.pop();\\n              var numArgs = this.stack.pop();\\n              if (subrNumber === 0 && numArgs === 3) {\\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\\n                this.flexing = false;\\n                this.stack.push(flexArgs[15], flexArgs[16]);\\n              } else if (subrNumber === 1 && numArgs === 0) {\\n                this.flexing = true;\\n              }\\n              break;\\n            case (12 << 8) + 17:\\n              break;\\n            case (12 << 8) + 33:\\n              this.stack = [];\\n              break;\\n            default:\\n              (0, _util.warn)('Unknown type 1 charstring command of \\\"' + value + '\\\"');\\n              break;\\n          }\\n          if (error) {\\n            break;\\n          }\\n          continue;\\n        } else if (value <= 246) {\\n          value = value - 139;\\n        } else if (value <= 250) {\\n          value = (value - 247) * 256 + encoded[++i] + 108;\\n        } else if (value <= 254) {\\n          value = -((value - 251) * 256) - encoded[++i] - 108;\\n        } else {\\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\\n        }\\n        this.stack.push(value);\\n      }\\n      return error;\\n    },\\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\\n      var stackLength = this.stack.length;\\n      if (howManyArgs > stackLength) {\\n        return true;\\n      }\\n      var start = stackLength - howManyArgs;\\n      for (var i = start; i < stackLength; i++) {\\n        var value = this.stack[i];\\n        if (Number.isInteger(value)) {\\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\\n        } else {\\n          value = 65536 * value | 0;\\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\\n        }\\n      }\\n      this.output.push.apply(this.output, command);\\n      if (keepStack) {\\n        this.stack.splice(start, howManyArgs);\\n      } else {\\n        this.stack.length = 0;\\n      }\\n      return false;\\n    }\\n  };\\n  return Type1CharString;\\n}();\\nvar Type1Parser = function Type1ParserClosure() {\\n  var EEXEC_ENCRYPT_KEY = 55665;\\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\\n  function isHexDigit(code) {\\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\\n  }\\n  function decrypt(data, key, discardNumber) {\\n    if (discardNumber >= data.length) {\\n      return new Uint8Array(0);\\n    }\\n    var r = key | 0,\\n        c1 = 52845,\\n        c2 = 22719,\\n        i,\\n        j;\\n    for (i = 0; i < discardNumber; i++) {\\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\\n    }\\n    var count = data.length - discardNumber;\\n    var decrypted = new Uint8Array(count);\\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\\n      var value = data[i];\\n      decrypted[j] = value ^ r >> 8;\\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\\n    }\\n    return decrypted;\\n  }\\n  function decryptAscii(data, key, discardNumber) {\\n    var r = key | 0,\\n        c1 = 52845,\\n        c2 = 22719;\\n    var count = data.length,\\n        maybeLength = count >>> 1;\\n    var decrypted = new Uint8Array(maybeLength);\\n    var i, j;\\n    for (i = 0, j = 0; i < count; i++) {\\n      var digit1 = data[i];\\n      if (!isHexDigit(digit1)) {\\n        continue;\\n      }\\n      i++;\\n      var digit2;\\n      while (i < count && !isHexDigit(digit2 = data[i])) {\\n        i++;\\n      }\\n      if (i < count) {\\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\\n        decrypted[j++] = value ^ r >> 8;\\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\\n      }\\n    }\\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\\n  }\\n  function isSpecial(c) {\\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\\n  }\\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\\n    if (encrypted) {\\n      var data = stream.getBytes();\\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\\n    }\\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\n    this.stream = stream;\\n    this.nextChar();\\n  }\\n  Type1Parser.prototype = {\\n    readNumberArray: function Type1Parser_readNumberArray() {\\n      this.getToken();\\n      var array = [];\\n      while (true) {\\n        var token = this.getToken();\\n        if (token === null || token === ']' || token === '}') {\\n          break;\\n        }\\n        array.push(parseFloat(token || 0));\\n      }\\n      return array;\\n    },\\n    readNumber: function Type1Parser_readNumber() {\\n      var token = this.getToken();\\n      return parseFloat(token || 0);\\n    },\\n    readInt: function Type1Parser_readInt() {\\n      var token = this.getToken();\\n      return parseInt(token || 0, 10) | 0;\\n    },\\n    readBoolean: function Type1Parser_readBoolean() {\\n      var token = this.getToken();\\n      return token === 'true' ? 1 : 0;\\n    },\\n    nextChar: function Type1_nextChar() {\\n      return this.currentChar = this.stream.getByte();\\n    },\\n    getToken: function Type1Parser_getToken() {\\n      var comment = false;\\n      var ch = this.currentChar;\\n      while (true) {\\n        if (ch === -1) {\\n          return null;\\n        }\\n        if (comment) {\\n          if (ch === 0x0A || ch === 0x0D) {\\n            comment = false;\\n          }\\n        } else if (ch === 0x25) {\\n          comment = true;\\n        } else if (!(0, _util.isSpace)(ch)) {\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n      if (isSpecial(ch)) {\\n        this.nextChar();\\n        return String.fromCharCode(ch);\\n      }\\n      var token = '';\\n      do {\\n        token += String.fromCharCode(ch);\\n        ch = this.nextChar();\\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\\n      return token;\\n    },\\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\\n      if (lenIV === -1) {\\n        return bytes;\\n      }\\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\\n    },\\n    extractFontProgram: function Type1Parser_extractFontProgram() {\\n      var stream = this.stream;\\n      var subrs = [],\\n          charstrings = [];\\n      var privateData = Object.create(null);\\n      privateData['lenIV'] = 4;\\n      var program = {\\n        subrs: [],\\n        charstrings: [],\\n        properties: { 'privateData': privateData }\\n      };\\n      var token, length, data, lenIV, encoded;\\n      while ((token = this.getToken()) !== null) {\\n        if (token !== '/') {\\n          continue;\\n        }\\n        token = this.getToken();\\n        switch (token) {\\n          case 'CharStrings':\\n            this.getToken();\\n            this.getToken();\\n            this.getToken();\\n            this.getToken();\\n            while (true) {\\n              token = this.getToken();\\n              if (token === null || token === 'end') {\\n                break;\\n              }\\n              if (token !== '/') {\\n                continue;\\n              }\\n              var glyph = this.getToken();\\n              length = this.readInt();\\n              this.getToken();\\n              data = stream.makeSubStream(stream.pos, length);\\n              lenIV = program.properties.privateData['lenIV'];\\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\\n              stream.skip(length);\\n              this.nextChar();\\n              token = this.getToken();\\n              if (token === 'noaccess') {\\n                this.getToken();\\n              }\\n              charstrings.push({\\n                glyph: glyph,\\n                encoded: encoded\\n              });\\n            }\\n            break;\\n          case 'Subrs':\\n            this.readInt();\\n            this.getToken();\\n            while (this.getToken() === 'dup') {\\n              var index = this.readInt();\\n              length = this.readInt();\\n              this.getToken();\\n              data = stream.makeSubStream(stream.pos, length);\\n              lenIV = program.properties.privateData['lenIV'];\\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\\n              stream.skip(length);\\n              this.nextChar();\\n              token = this.getToken();\\n              if (token === 'noaccess') {\\n                this.getToken();\\n              }\\n              subrs[index] = encoded;\\n            }\\n            break;\\n          case 'BlueValues':\\n          case 'OtherBlues':\\n          case 'FamilyBlues':\\n          case 'FamilyOtherBlues':\\n            var blueArray = this.readNumberArray();\\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\\n              program.properties.privateData[token] = blueArray;\\n            }\\n            break;\\n          case 'StemSnapH':\\n          case 'StemSnapV':\\n            program.properties.privateData[token] = this.readNumberArray();\\n            break;\\n          case 'StdHW':\\n          case 'StdVW':\\n            program.properties.privateData[token] = this.readNumberArray()[0];\\n            break;\\n          case 'BlueShift':\\n          case 'lenIV':\\n          case 'BlueFuzz':\\n          case 'BlueScale':\\n          case 'LanguageGroup':\\n          case 'ExpansionFactor':\\n            program.properties.privateData[token] = this.readNumber();\\n            break;\\n          case 'ForceBold':\\n            program.properties.privateData[token] = this.readBoolean();\\n            break;\\n        }\\n      }\\n      for (var i = 0; i < charstrings.length; i++) {\\n        glyph = charstrings[i].glyph;\\n        encoded = charstrings[i].encoded;\\n        var charString = new Type1CharString();\\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\\n        var output = charString.output;\\n        if (error) {\\n          output = [14];\\n        }\\n        program.charstrings.push({\\n          glyphName: glyph,\\n          charstring: output,\\n          width: charString.width,\\n          lsb: charString.lsb,\\n          seac: charString.seac\\n        });\\n      }\\n      return program;\\n    },\\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\\n      var token;\\n      while ((token = this.getToken()) !== null) {\\n        if (token !== '/') {\\n          continue;\\n        }\\n        token = this.getToken();\\n        switch (token) {\\n          case 'FontMatrix':\\n            var matrix = this.readNumberArray();\\n            properties.fontMatrix = matrix;\\n            break;\\n          case 'Encoding':\\n            var encodingArg = this.getToken();\\n            var encoding;\\n            if (!/^\\\\d+$/.test(encodingArg)) {\\n              encoding = (0, _encodings.getEncoding)(encodingArg);\\n            } else {\\n              encoding = [];\\n              var size = parseInt(encodingArg, 10) | 0;\\n              this.getToken();\\n              for (var j = 0; j < size; j++) {\\n                token = this.getToken();\\n                while (token !== 'dup' && token !== 'def') {\\n                  token = this.getToken();\\n                  if (token === null) {\\n                    return;\\n                  }\\n                }\\n                if (token === 'def') {\\n                  break;\\n                }\\n                var index = this.readInt();\\n                this.getToken();\\n                var glyph = this.getToken();\\n                encoding[index] = glyph;\\n                this.getToken();\\n              }\\n            }\\n            properties.builtInEncoding = encoding;\\n            break;\\n          case 'FontBBox':\\n            var fontBBox = this.readNumberArray();\\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\n            properties.ascentScaled = true;\\n            break;\\n        }\\n      }\\n    }\\n  };\\n  return Type1Parser;\\n}();\\nexports.Type1Parser = Type1Parser;\\n\\n/***/ }),\\n/* 141 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getTilingPatternIR = exports.Pattern = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _colorspace = __w_pdfjs_require__(20);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar ShadingType = {\\n  FUNCTION_BASED: 1,\\n  AXIAL: 2,\\n  RADIAL: 3,\\n  FREE_FORM_MESH: 4,\\n  LATTICE_FORM_MESH: 5,\\n  COONS_PATCH_MESH: 6,\\n  TENSOR_PATCH_MESH: 7\\n};\\nvar Pattern = function PatternClosure() {\\n  function Pattern() {\\n    (0, _util.unreachable)('should not call Pattern constructor');\\n  }\\n  Pattern.prototype = {\\n    getPattern: function Pattern_getPattern(ctx) {\\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\\n    }\\n  };\\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\\n    var type = dict.get('ShadingType');\\n    try {\\n      switch (type) {\\n        case ShadingType.AXIAL:\\n        case ShadingType.RADIAL:\\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\\n        case ShadingType.FREE_FORM_MESH:\\n        case ShadingType.LATTICE_FORM_MESH:\\n        case ShadingType.COONS_PATCH_MESH:\\n        case ShadingType.TENSOR_PATCH_MESH:\\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\\n        default:\\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\\n      }\\n    } catch (ex) {\\n      if (ex instanceof _util.MissingDataException) {\\n        throw ex;\\n      }\\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\\n      (0, _util.warn)(ex);\\n      return new Shadings.Dummy();\\n    }\\n  };\\n  return Pattern;\\n}();\\nvar Shadings = {};\\nShadings.SMALL_NUMBER = 1e-6;\\nShadings.RadialAxial = function RadialAxialClosure() {\\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\\n    this.matrix = matrix;\\n    this.coordsArr = dict.getArray('Coords');\\n    this.shadingType = dict.get('ShadingType');\\n    this.type = 'Pattern';\\n    var cs = dict.get('ColorSpace', 'CS');\\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\n    this.cs = cs;\\n    var t0 = 0.0,\\n        t1 = 1.0;\\n    if (dict.has('Domain')) {\\n      var domainArr = dict.getArray('Domain');\\n      t0 = domainArr[0];\\n      t1 = domainArr[1];\\n    }\\n    var extendStart = false,\\n        extendEnd = false;\\n    if (dict.has('Extend')) {\\n      var extendArr = dict.getArray('Extend');\\n      extendStart = extendArr[0];\\n      extendEnd = extendArr[1];\\n    }\\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\\n      var x1 = this.coordsArr[0];\\n      var y1 = this.coordsArr[1];\\n      var r1 = this.coordsArr[2];\\n      var x2 = this.coordsArr[3];\\n      var y2 = this.coordsArr[4];\\n      var r2 = this.coordsArr[5];\\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\\n        (0, _util.warn)('Unsupported radial gradient.');\\n      }\\n    }\\n    this.extendStart = extendStart;\\n    this.extendEnd = extendEnd;\\n    var fnObj = dict.get('Function');\\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\\n    var diff = t1 - t0;\\n    var step = diff / 10;\\n    var colorStops = this.colorStops = [];\\n    if (t0 >= t1 || step <= 0) {\\n      (0, _util.info)('Bad shading domain.');\\n      return;\\n    }\\n    var color = new Float32Array(cs.numComps),\\n        ratio = new Float32Array(1);\\n    var rgbColor;\\n    for (var i = t0; i <= t1; i += step) {\\n      ratio[0] = i;\\n      fn(ratio, 0, color, 0);\\n      rgbColor = cs.getRgb(color, 0);\\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\n      colorStops.push([(i - t0) / diff, cssColor]);\\n    }\\n    var background = 'transparent';\\n    if (dict.has('Background')) {\\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\n    }\\n    if (!extendStart) {\\n      colorStops.unshift([0, background]);\\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\\n    }\\n    if (!extendEnd) {\\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\\n      colorStops.push([1, background]);\\n    }\\n    this.colorStops = colorStops;\\n  }\\n  RadialAxial.prototype = {\\n    getIR: function RadialAxial_getIR() {\\n      var coordsArr = this.coordsArr;\\n      var shadingType = this.shadingType;\\n      var type, p0, p1, r0, r1;\\n      if (shadingType === ShadingType.AXIAL) {\\n        p0 = [coordsArr[0], coordsArr[1]];\\n        p1 = [coordsArr[2], coordsArr[3]];\\n        r0 = null;\\n        r1 = null;\\n        type = 'axial';\\n      } else if (shadingType === ShadingType.RADIAL) {\\n        p0 = [coordsArr[0], coordsArr[1]];\\n        p1 = [coordsArr[3], coordsArr[4]];\\n        r0 = coordsArr[2];\\n        r1 = coordsArr[5];\\n        type = 'radial';\\n      } else {\\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\\n      }\\n      var matrix = this.matrix;\\n      if (matrix) {\\n        p0 = _util.Util.applyTransform(p0, matrix);\\n        p1 = _util.Util.applyTransform(p1, matrix);\\n        if (shadingType === ShadingType.RADIAL) {\\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\\n          r0 *= scale[0];\\n          r1 *= scale[1];\\n        }\\n      }\\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\\n    }\\n  };\\n  return RadialAxial;\\n}();\\nShadings.Mesh = function MeshClosure() {\\n  function MeshStreamReader(stream, context) {\\n    this.stream = stream;\\n    this.context = context;\\n    this.buffer = 0;\\n    this.bufferLength = 0;\\n    var numComps = context.numComps;\\n    this.tmpCompsBuf = new Float32Array(numComps);\\n    var csNumComps = context.colorSpace.numComps;\\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\\n  }\\n  MeshStreamReader.prototype = {\\n    get hasData() {\\n      if (this.stream.end) {\\n        return this.stream.pos < this.stream.end;\\n      }\\n      if (this.bufferLength > 0) {\\n        return true;\\n      }\\n      var nextByte = this.stream.getByte();\\n      if (nextByte < 0) {\\n        return false;\\n      }\\n      this.buffer = nextByte;\\n      this.bufferLength = 8;\\n      return true;\\n    },\\n    readBits: function MeshStreamReader_readBits(n) {\\n      var buffer = this.buffer;\\n      var bufferLength = this.bufferLength;\\n      if (n === 32) {\\n        if (bufferLength === 0) {\\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\\n        }\\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\\n        var nextByte = this.stream.getByte();\\n        this.buffer = nextByte & (1 << bufferLength) - 1;\\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\\n      }\\n      if (n === 8 && bufferLength === 0) {\\n        return this.stream.getByte();\\n      }\\n      while (bufferLength < n) {\\n        buffer = buffer << 8 | this.stream.getByte();\\n        bufferLength += 8;\\n      }\\n      bufferLength -= n;\\n      this.bufferLength = bufferLength;\\n      this.buffer = buffer & (1 << bufferLength) - 1;\\n      return buffer >> bufferLength;\\n    },\\n    align: function MeshStreamReader_align() {\\n      this.buffer = 0;\\n      this.bufferLength = 0;\\n    },\\n    readFlag: function MeshStreamReader_readFlag() {\\n      return this.readBits(this.context.bitsPerFlag);\\n    },\\n    readCoordinate: function MeshStreamReader_readCoordinate() {\\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\\n      var xi = this.readBits(bitsPerCoordinate);\\n      var yi = this.readBits(bitsPerCoordinate);\\n      var decode = this.context.decode;\\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\\n    },\\n    readComponents: function MeshStreamReader_readComponents() {\\n      var numComps = this.context.numComps;\\n      var bitsPerComponent = this.context.bitsPerComponent;\\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\\n      var decode = this.context.decode;\\n      var components = this.tmpCompsBuf;\\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\\n        var ci = this.readBits(bitsPerComponent);\\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\\n      }\\n      var color = this.tmpCsCompsBuf;\\n      if (this.context.colorFn) {\\n        this.context.colorFn(components, 0, color, 0);\\n      }\\n      return this.context.colorSpace.getRgb(color, 0);\\n    }\\n  };\\n  function decodeType4Shading(mesh, reader) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var operators = [];\\n    var ps = [];\\n    var verticesLeft = 0;\\n    while (reader.hasData) {\\n      var f = reader.readFlag();\\n      var coord = reader.readCoordinate();\\n      var color = reader.readComponents();\\n      if (verticesLeft === 0) {\\n        if (!(0 <= f && f <= 2)) {\\n          throw new _util.FormatError('Unknown type4 flag');\\n        }\\n        switch (f) {\\n          case 0:\\n            verticesLeft = 3;\\n            break;\\n          case 1:\\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\\n            verticesLeft = 1;\\n            break;\\n          case 2:\\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\\n            verticesLeft = 1;\\n            break;\\n        }\\n        operators.push(f);\\n      }\\n      ps.push(coords.length);\\n      coords.push(coord);\\n      colors.push(color);\\n      verticesLeft--;\\n      reader.align();\\n    }\\n    mesh.figures.push({\\n      type: 'triangles',\\n      coords: new Int32Array(ps),\\n      colors: new Int32Array(ps)\\n    });\\n  }\\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var ps = [];\\n    while (reader.hasData) {\\n      var coord = reader.readCoordinate();\\n      var color = reader.readComponents();\\n      ps.push(coords.length);\\n      coords.push(coord);\\n      colors.push(color);\\n    }\\n    mesh.figures.push({\\n      type: 'lattice',\\n      coords: new Int32Array(ps),\\n      colors: new Int32Array(ps),\\n      verticesPerRow: verticesPerRow\\n    });\\n  }\\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\\n  var TRIANGLE_DENSITY = 20;\\n  var getB = function getBClosure() {\\n    function buildB(count) {\\n      var lut = [];\\n      for (var i = 0; i <= count; i++) {\\n        var t = i / count,\\n            t_ = 1 - t;\\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\\n      }\\n      return lut;\\n    }\\n    var cache = [];\\n    return function getB(count) {\\n      if (!cache[count]) {\\n        cache[count] = buildB(count);\\n      }\\n      return cache[count];\\n    };\\n  }();\\n  function buildFigureFromPatch(mesh, index) {\\n    var figure = mesh.figures[index];\\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\\n    var coords = mesh.coords,\\n        colors = mesh.colors;\\n    var pi = figure.coords;\\n    var ci = figure.colors;\\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\\n    var verticesPerRow = splitXBy + 1;\\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\\n    var k = 0;\\n    var cl = new Uint8Array(3),\\n        cr = new Uint8Array(3);\\n    var c0 = colors[ci[0]],\\n        c1 = colors[ci[1]],\\n        c2 = colors[ci[2]],\\n        c3 = colors[ci[3]];\\n    var bRow = getB(splitYBy),\\n        bCol = getB(splitXBy);\\n    for (var row = 0; row <= splitYBy; row++) {\\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\\n      for (var col = 0; col <= splitXBy; col++, k++) {\\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\\n          continue;\\n        }\\n        var x = 0,\\n            y = 0;\\n        var q = 0;\\n        for (var i = 0; i <= 3; i++) {\\n          for (var j = 0; j <= 3; j++, q++) {\\n            var m = bRow[row][i] * bCol[col][j];\\n            x += coords[pi[q]][0] * m;\\n            y += coords[pi[q]][1] * m;\\n          }\\n        }\\n        figureCoords[k] = coords.length;\\n        coords.push([x, y]);\\n        figureColors[k] = colors.length;\\n        var newColor = new Uint8Array(3);\\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\\n        colors.push(newColor);\\n      }\\n    }\\n    figureCoords[0] = pi[0];\\n    figureColors[0] = ci[0];\\n    figureCoords[splitXBy] = pi[3];\\n    figureColors[splitXBy] = ci[1];\\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\\n    figureColors[verticesPerRow * splitYBy] = ci[2];\\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\\n    mesh.figures[index] = {\\n      type: 'lattice',\\n      coords: figureCoords,\\n      colors: figureColors,\\n      verticesPerRow: verticesPerRow\\n    };\\n  }\\n  function decodeType6Shading(mesh, reader) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var ps = new Int32Array(16);\\n    var cs = new Int32Array(4);\\n    while (reader.hasData) {\\n      var f = reader.readFlag();\\n      if (!(0 <= f && f <= 3)) {\\n        throw new _util.FormatError('Unknown type6 flag');\\n      }\\n      var i, ii;\\n      var pi = coords.length;\\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\\n        coords.push(reader.readCoordinate());\\n      }\\n      var ci = colors.length;\\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\n        colors.push(reader.readComponents());\\n      }\\n      var tmp1, tmp2, tmp3, tmp4;\\n      switch (f) {\\n        case 0:\\n          ps[12] = pi + 3;\\n          ps[13] = pi + 4;\\n          ps[14] = pi + 5;\\n          ps[15] = pi + 6;\\n          ps[8] = pi + 2;\\n          ps[11] = pi + 7;\\n          ps[4] = pi + 1;\\n          ps[7] = pi + 8;\\n          ps[0] = pi;\\n          ps[1] = pi + 11;\\n          ps[2] = pi + 10;\\n          ps[3] = pi + 9;\\n          cs[2] = ci + 1;\\n          cs[3] = ci + 2;\\n          cs[0] = ci;\\n          cs[1] = ci + 3;\\n          break;\\n        case 1:\\n          tmp1 = ps[12];\\n          tmp2 = ps[13];\\n          tmp3 = ps[14];\\n          tmp4 = ps[15];\\n          ps[12] = tmp4;\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = tmp3;\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[2];\\n          tmp2 = cs[3];\\n          cs[2] = tmp2;\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 2:\\n          tmp1 = ps[15];\\n          tmp2 = ps[11];\\n          ps[12] = ps[3];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[7];\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[3];\\n          cs[2] = cs[1];\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 3:\\n          ps[12] = ps[0];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[1];\\n          ps[11] = pi + 3;\\n          ps[4] = ps[2];\\n          ps[7] = pi + 4;\\n          ps[0] = ps[3];\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          cs[2] = cs[0];\\n          cs[3] = ci;\\n          cs[0] = cs[1];\\n          cs[1] = ci + 1;\\n          break;\\n      }\\n      ps[5] = coords.length;\\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\\n      ps[6] = coords.length;\\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\\n      ps[9] = coords.length;\\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\\n      ps[10] = coords.length;\\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\\n      mesh.figures.push({\\n        type: 'patch',\\n        coords: new Int32Array(ps),\\n        colors: new Int32Array(cs)\\n      });\\n    }\\n  }\\n  function decodeType7Shading(mesh, reader) {\\n    var coords = mesh.coords;\\n    var colors = mesh.colors;\\n    var ps = new Int32Array(16);\\n    var cs = new Int32Array(4);\\n    while (reader.hasData) {\\n      var f = reader.readFlag();\\n      if (!(0 <= f && f <= 3)) {\\n        throw new _util.FormatError('Unknown type7 flag');\\n      }\\n      var i, ii;\\n      var pi = coords.length;\\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\\n        coords.push(reader.readCoordinate());\\n      }\\n      var ci = colors.length;\\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\n        colors.push(reader.readComponents());\\n      }\\n      var tmp1, tmp2, tmp3, tmp4;\\n      switch (f) {\\n        case 0:\\n          ps[12] = pi + 3;\\n          ps[13] = pi + 4;\\n          ps[14] = pi + 5;\\n          ps[15] = pi + 6;\\n          ps[8] = pi + 2;\\n          ps[9] = pi + 13;\\n          ps[10] = pi + 14;\\n          ps[11] = pi + 7;\\n          ps[4] = pi + 1;\\n          ps[5] = pi + 12;\\n          ps[6] = pi + 15;\\n          ps[7] = pi + 8;\\n          ps[0] = pi;\\n          ps[1] = pi + 11;\\n          ps[2] = pi + 10;\\n          ps[3] = pi + 9;\\n          cs[2] = ci + 1;\\n          cs[3] = ci + 2;\\n          cs[0] = ci;\\n          cs[1] = ci + 3;\\n          break;\\n        case 1:\\n          tmp1 = ps[12];\\n          tmp2 = ps[13];\\n          tmp3 = ps[14];\\n          tmp4 = ps[15];\\n          ps[12] = tmp4;\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = tmp3;\\n          ps[9] = pi + 9;\\n          ps[10] = pi + 10;\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[5] = pi + 8;\\n          ps[6] = pi + 11;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[2];\\n          tmp2 = cs[3];\\n          cs[2] = tmp2;\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 2:\\n          tmp1 = ps[15];\\n          tmp2 = ps[11];\\n          ps[12] = ps[3];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[7];\\n          ps[9] = pi + 9;\\n          ps[10] = pi + 10;\\n          ps[11] = pi + 3;\\n          ps[4] = tmp2;\\n          ps[5] = pi + 8;\\n          ps[6] = pi + 11;\\n          ps[7] = pi + 4;\\n          ps[0] = tmp1;\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          tmp1 = cs[3];\\n          cs[2] = cs[1];\\n          cs[3] = ci;\\n          cs[0] = tmp1;\\n          cs[1] = ci + 1;\\n          break;\\n        case 3:\\n          ps[12] = ps[0];\\n          ps[13] = pi + 0;\\n          ps[14] = pi + 1;\\n          ps[15] = pi + 2;\\n          ps[8] = ps[1];\\n          ps[9] = pi + 9;\\n          ps[10] = pi + 10;\\n          ps[11] = pi + 3;\\n          ps[4] = ps[2];\\n          ps[5] = pi + 8;\\n          ps[6] = pi + 11;\\n          ps[7] = pi + 4;\\n          ps[0] = ps[3];\\n          ps[1] = pi + 7;\\n          ps[2] = pi + 6;\\n          ps[3] = pi + 5;\\n          cs[2] = cs[0];\\n          cs[3] = ci;\\n          cs[0] = cs[1];\\n          cs[1] = ci + 1;\\n          break;\\n      }\\n      mesh.figures.push({\\n        type: 'patch',\\n        coords: new Int32Array(ps),\\n        colors: new Int32Array(cs)\\n      });\\n    }\\n  }\\n  function updateBounds(mesh) {\\n    var minX = mesh.coords[0][0],\\n        minY = mesh.coords[0][1],\\n        maxX = minX,\\n        maxY = minY;\\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\\n      var x = mesh.coords[i][0],\\n          y = mesh.coords[i][1];\\n      minX = minX > x ? x : minX;\\n      minY = minY > y ? y : minY;\\n      maxX = maxX < x ? x : maxX;\\n      maxY = maxY < y ? y : maxY;\\n    }\\n    mesh.bounds = [minX, minY, maxX, maxY];\\n  }\\n  function packData(mesh) {\\n    var i, ii, j, jj;\\n    var coords = mesh.coords;\\n    var coordsPacked = new Float32Array(coords.length * 2);\\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\\n      var xy = coords[i];\\n      coordsPacked[j++] = xy[0];\\n      coordsPacked[j++] = xy[1];\\n    }\\n    mesh.coords = coordsPacked;\\n    var colors = mesh.colors;\\n    var colorsPacked = new Uint8Array(colors.length * 3);\\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\\n      var c = colors[i];\\n      colorsPacked[j++] = c[0];\\n      colorsPacked[j++] = c[1];\\n      colorsPacked[j++] = c[2];\\n    }\\n    mesh.colors = colorsPacked;\\n    var figures = mesh.figures;\\n    for (i = 0, ii = figures.length; i < ii; i++) {\\n      var figure = figures[i],\\n          ps = figure.coords,\\n          cs = figure.colors;\\n      for (j = 0, jj = ps.length; j < jj; j++) {\\n        ps[j] *= 2;\\n        cs[j] *= 3;\\n      }\\n    }\\n  }\\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\\n    if (!(0, _primitives.isStream)(stream)) {\\n      throw new _util.FormatError('Mesh data is not a stream');\\n    }\\n    var dict = stream.dict;\\n    this.matrix = matrix;\\n    this.shadingType = dict.get('ShadingType');\\n    this.type = 'Pattern';\\n    this.bbox = dict.getArray('BBox');\\n    var cs = dict.get('ColorSpace', 'CS');\\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\n    this.cs = cs;\\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\\n    var fnObj = dict.get('Function');\\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\\n    this.coords = [];\\n    this.colors = [];\\n    this.figures = [];\\n    var decodeContext = {\\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\\n      bitsPerComponent: dict.get('BitsPerComponent'),\\n      bitsPerFlag: dict.get('BitsPerFlag'),\\n      decode: dict.getArray('Decode'),\\n      colorFn: fn,\\n      colorSpace: cs,\\n      numComps: fn ? 1 : cs.numComps\\n    };\\n    var reader = new MeshStreamReader(stream, decodeContext);\\n    var patchMesh = false;\\n    switch (this.shadingType) {\\n      case ShadingType.FREE_FORM_MESH:\\n        decodeType4Shading(this, reader);\\n        break;\\n      case ShadingType.LATTICE_FORM_MESH:\\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\\n        if (verticesPerRow < 2) {\\n          throw new _util.FormatError('Invalid VerticesPerRow');\\n        }\\n        decodeType5Shading(this, reader, verticesPerRow);\\n        break;\\n      case ShadingType.COONS_PATCH_MESH:\\n        decodeType6Shading(this, reader);\\n        patchMesh = true;\\n        break;\\n      case ShadingType.TENSOR_PATCH_MESH:\\n        decodeType7Shading(this, reader);\\n        patchMesh = true;\\n        break;\\n      default:\\n        (0, _util.unreachable)('Unsupported mesh type.');\\n        break;\\n    }\\n    if (patchMesh) {\\n      updateBounds(this);\\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\\n        buildFigureFromPatch(this, i);\\n      }\\n    }\\n    updateBounds(this);\\n    packData(this);\\n  }\\n  Mesh.prototype = {\\n    getIR: function Mesh_getIR() {\\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\\n    }\\n  };\\n  return Mesh;\\n}();\\nShadings.Dummy = function DummyClosure() {\\n  function Dummy() {\\n    this.type = 'Pattern';\\n  }\\n  Dummy.prototype = {\\n    getIR: function Dummy_getIR() {\\n      return ['Dummy'];\\n    }\\n  };\\n  return Dummy;\\n}();\\nfunction getTilingPatternIR(operatorList, dict, args) {\\n  var matrix = dict.getArray('Matrix');\\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\\n  var xstep = dict.get('XStep');\\n  var ystep = dict.get('YStep');\\n  var paintType = dict.get('PaintType');\\n  var tilingType = dict.get('TilingType');\\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\\n  }\\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\\n}\\nexports.Pattern = Pattern;\\nexports.getTilingPatternIR = getTilingPatternIR;\\n\\n/***/ }),\\n/* 142 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.bidi = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\\nfunction isOdd(i) {\\n  return (i & 1) !== 0;\\n}\\nfunction isEven(i) {\\n  return (i & 1) === 0;\\n}\\nfunction findUnequal(arr, start, value) {\\n  for (var j = start, jj = arr.length; j < jj; ++j) {\\n    if (arr[j] !== value) {\\n      return j;\\n    }\\n  }\\n  return j;\\n}\\nfunction setValues(arr, start, end, value) {\\n  for (var j = start; j < end; ++j) {\\n    arr[j] = value;\\n  }\\n}\\nfunction reverseValues(arr, start, end) {\\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\\n    var temp = arr[i];\\n    arr[i] = arr[j];\\n    arr[j] = temp;\\n  }\\n}\\nfunction createBidiText(str, isLTR, vertical) {\\n  return {\\n    str: str,\\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\\n  };\\n}\\nvar chars = [];\\nvar types = [];\\nfunction bidi(str, startLevel, vertical) {\\n  var isLTR = true;\\n  var strLength = str.length;\\n  if (strLength === 0 || vertical) {\\n    return createBidiText(str, isLTR, vertical);\\n  }\\n  chars.length = strLength;\\n  types.length = strLength;\\n  var numBidi = 0;\\n  var i, ii;\\n  for (i = 0; i < strLength; ++i) {\\n    chars[i] = str.charAt(i);\\n    var charCode = str.charCodeAt(i);\\n    var charType = 'L';\\n    if (charCode <= 0x00ff) {\\n      charType = baseTypes[charCode];\\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\\n      charType = 'R';\\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\\n      charType = arabicTypes[charCode & 0xff];\\n      if (!charType) {\\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\\n      }\\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\\n      charType = 'AL';\\n    }\\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\\n      numBidi++;\\n    }\\n    types[i] = charType;\\n  }\\n  if (numBidi === 0) {\\n    isLTR = true;\\n    return createBidiText(str, isLTR);\\n  }\\n  if (startLevel === -1) {\\n    if (numBidi / strLength < 0.3) {\\n      isLTR = true;\\n      startLevel = 0;\\n    } else {\\n      isLTR = false;\\n      startLevel = 1;\\n    }\\n  }\\n  var levels = [];\\n  for (i = 0; i < strLength; ++i) {\\n    levels[i] = startLevel;\\n  }\\n  var e = isOdd(startLevel) ? 'R' : 'L';\\n  var sor = e;\\n  var eor = sor;\\n  var lastType = sor;\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'NSM') {\\n      types[i] = lastType;\\n    } else {\\n      lastType = types[i];\\n    }\\n  }\\n  lastType = sor;\\n  var t;\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'EN') {\\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\\n      lastType = t;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'AL') {\\n      types[i] = 'R';\\n    }\\n  }\\n  for (i = 1; i < strLength - 1; ++i) {\\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\\n      types[i] = 'EN';\\n    }\\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\\n      types[i] = types[i - 1];\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'EN') {\\n      var j;\\n      for (j = i - 1; j >= 0; --j) {\\n        if (types[j] !== 'ET') {\\n          break;\\n        }\\n        types[j] = 'EN';\\n      }\\n      for (j = i + 1; j < strLength; ++j) {\\n        if (types[j] !== 'ET') {\\n          break;\\n        }\\n        types[j] = 'EN';\\n      }\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\\n      types[i] = 'ON';\\n    }\\n  }\\n  lastType = sor;\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (t === 'EN') {\\n      types[i] = lastType === 'L' ? 'L' : 'EN';\\n    } else if (t === 'R' || t === 'L') {\\n      lastType = t;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'ON') {\\n      var end = findUnequal(types, i + 1, 'ON');\\n      var before = sor;\\n      if (i > 0) {\\n        before = types[i - 1];\\n      }\\n      var after = eor;\\n      if (end + 1 < strLength) {\\n        after = types[end + 1];\\n      }\\n      if (before !== 'L') {\\n        before = 'R';\\n      }\\n      if (after !== 'L') {\\n        after = 'R';\\n      }\\n      if (before === after) {\\n        setValues(types, i, end, before);\\n      }\\n      i = end - 1;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    if (types[i] === 'ON') {\\n      types[i] = e;\\n    }\\n  }\\n  for (i = 0; i < strLength; ++i) {\\n    t = types[i];\\n    if (isEven(levels[i])) {\\n      if (t === 'R') {\\n        levels[i] += 1;\\n      } else if (t === 'AN' || t === 'EN') {\\n        levels[i] += 2;\\n      }\\n    } else {\\n      if (t === 'L' || t === 'AN' || t === 'EN') {\\n        levels[i] += 1;\\n      }\\n    }\\n  }\\n  var highestLevel = -1;\\n  var lowestOddLevel = 99;\\n  var level;\\n  for (i = 0, ii = levels.length; i < ii; ++i) {\\n    level = levels[i];\\n    if (highestLevel < level) {\\n      highestLevel = level;\\n    }\\n    if (lowestOddLevel > level && isOdd(level)) {\\n      lowestOddLevel = level;\\n    }\\n  }\\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\\n    var start = -1;\\n    for (i = 0, ii = levels.length; i < ii; ++i) {\\n      if (levels[i] < level) {\\n        if (start >= 0) {\\n          reverseValues(chars, start, i);\\n          start = -1;\\n        }\\n      } else if (start < 0) {\\n        start = i;\\n      }\\n    }\\n    if (start >= 0) {\\n      reverseValues(chars, start, levels.length);\\n    }\\n  }\\n  for (i = 0, ii = chars.length; i < ii; ++i) {\\n    var ch = chars[i];\\n    if (ch === '<' || ch === '>') {\\n      chars[i] = '';\\n    }\\n  }\\n  return createBidiText(chars.join(''), isLTR);\\n}\\nexports.bidi = bidi;\\n\\n/***/ }),\\n/* 143 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getMetrics = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\\n  t['Courier'] = 600;\\n  t['Courier-Bold'] = 600;\\n  t['Courier-BoldOblique'] = 600;\\n  t['Courier-Oblique'] = 600;\\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 278;\\n    t['quotedbl'] = 355;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 667;\\n    t['quoteright'] = 222;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 556;\\n    t['at'] = 1015;\\n    t['A'] = 667;\\n    t['B'] = 667;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 500;\\n    t['K'] = 667;\\n    t['L'] = 556;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 278;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 278;\\n    t['asciicircum'] = 469;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 222;\\n    t['a'] = 556;\\n    t['b'] = 556;\\n    t['c'] = 500;\\n    t['d'] = 556;\\n    t['e'] = 556;\\n    t['f'] = 278;\\n    t['g'] = 556;\\n    t['h'] = 556;\\n    t['i'] = 222;\\n    t['j'] = 222;\\n    t['k'] = 500;\\n    t['l'] = 222;\\n    t['m'] = 833;\\n    t['n'] = 556;\\n    t['o'] = 556;\\n    t['p'] = 556;\\n    t['q'] = 556;\\n    t['r'] = 333;\\n    t['s'] = 500;\\n    t['t'] = 278;\\n    t['u'] = 556;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 500;\\n    t['braceleft'] = 334;\\n    t['bar'] = 260;\\n    t['braceright'] = 334;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 191;\\n    t['quotedblleft'] = 333;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 500;\\n    t['fl'] = 500;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 537;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 222;\\n    t['quotedblbase'] = 333;\\n    t['quotedblright'] = 333;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 556;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 222;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 667;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 500;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 500;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 222;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 500;\\n    t['scedilla'] = 500;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 667;\\n    t['rcaron'] = 333;\\n    t['ccedilla'] = 500;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 643;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 667;\\n    t['Abreve'] = 667;\\n    t['multiply'] = 584;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 500;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 260;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 333;\\n    t['omacron'] = 556;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 222;\\n    t['tcaron'] = 317;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 667;\\n    t['Adieresis'] = 667;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 222;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 556;\\n    t['amacron'] = 556;\\n    t['sacute'] = 500;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 556;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 556;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 556;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 556;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 299;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 556;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 556;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 556;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 556;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 556;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 556;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 333;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 556;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 556;\\n    t['Atilde'] = 667;\\n    t['Aogonek'] = 667;\\n    t['Aring'] = 667;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 556;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 556;\\n    t['eth'] = 556;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 474;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 722;\\n    t['quoteright'] = 278;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 611;\\n    t['at'] = 975;\\n    t['A'] = 722;\\n    t['B'] = 722;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 556;\\n    t['K'] = 722;\\n    t['L'] = 611;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 584;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 278;\\n    t['a'] = 556;\\n    t['b'] = 611;\\n    t['c'] = 556;\\n    t['d'] = 611;\\n    t['e'] = 556;\\n    t['f'] = 333;\\n    t['g'] = 611;\\n    t['h'] = 611;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 556;\\n    t['l'] = 278;\\n    t['m'] = 889;\\n    t['n'] = 611;\\n    t['o'] = 611;\\n    t['p'] = 611;\\n    t['q'] = 611;\\n    t['r'] = 389;\\n    t['s'] = 556;\\n    t['t'] = 333;\\n    t['u'] = 611;\\n    t['v'] = 556;\\n    t['w'] = 778;\\n    t['x'] = 556;\\n    t['y'] = 556;\\n    t['z'] = 500;\\n    t['braceleft'] = 389;\\n    t['bar'] = 280;\\n    t['braceright'] = 389;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 238;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 611;\\n    t['fl'] = 611;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 556;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 278;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 611;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 556;\\n    t['scommaaccent'] = 556;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 611;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 556;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 556;\\n    t['scedilla'] = 556;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 611;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 556;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 743;\\n    t['Umacron'] = 722;\\n    t['uring'] = 611;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 584;\\n    t['uacute'] = 611;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 556;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 556;\\n    t['nacute'] = 611;\\n    t['umacron'] = 611;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 280;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 389;\\n    t['omacron'] = 611;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 389;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 611;\\n    t['amacron'] = 556;\\n    t['sacute'] = 556;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 611;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 611;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 611;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 611;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 400;\\n    t['Kcommaaccent'] = 722;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 611;\\n    t['ntilde'] = 611;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 611;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 611;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 611;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 611;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 556;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 611;\\n    t['tcommaaccent'] = 333;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 611;\\n    t['udieresis'] = 611;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 611;\\n    t['eth'] = 611;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 611;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 474;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 722;\\n    t['quoteright'] = 278;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 611;\\n    t['at'] = 975;\\n    t['A'] = 722;\\n    t['B'] = 722;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 556;\\n    t['K'] = 722;\\n    t['L'] = 611;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 584;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 278;\\n    t['a'] = 556;\\n    t['b'] = 611;\\n    t['c'] = 556;\\n    t['d'] = 611;\\n    t['e'] = 556;\\n    t['f'] = 333;\\n    t['g'] = 611;\\n    t['h'] = 611;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 556;\\n    t['l'] = 278;\\n    t['m'] = 889;\\n    t['n'] = 611;\\n    t['o'] = 611;\\n    t['p'] = 611;\\n    t['q'] = 611;\\n    t['r'] = 389;\\n    t['s'] = 556;\\n    t['t'] = 333;\\n    t['u'] = 611;\\n    t['v'] = 556;\\n    t['w'] = 778;\\n    t['x'] = 556;\\n    t['y'] = 556;\\n    t['z'] = 500;\\n    t['braceleft'] = 389;\\n    t['bar'] = 280;\\n    t['braceright'] = 389;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 238;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 611;\\n    t['fl'] = 611;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 556;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 278;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 611;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 556;\\n    t['scommaaccent'] = 556;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 611;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 556;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 556;\\n    t['scedilla'] = 556;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 611;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 556;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 743;\\n    t['Umacron'] = 722;\\n    t['uring'] = 611;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 584;\\n    t['uacute'] = 611;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 556;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 556;\\n    t['nacute'] = 611;\\n    t['umacron'] = 611;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 280;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 389;\\n    t['omacron'] = 611;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 389;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 611;\\n    t['amacron'] = 556;\\n    t['sacute'] = 556;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 611;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 611;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 611;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 611;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 400;\\n    t['Kcommaaccent'] = 722;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 611;\\n    t['ntilde'] = 611;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 611;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 611;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 611;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 611;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 556;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 611;\\n    t['tcommaaccent'] = 333;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 611;\\n    t['udieresis'] = 611;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 611;\\n    t['eth'] = 611;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 611;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['exclam'] = 278;\\n    t['quotedbl'] = 355;\\n    t['numbersign'] = 556;\\n    t['dollar'] = 556;\\n    t['percent'] = 889;\\n    t['ampersand'] = 667;\\n    t['quoteright'] = 222;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 389;\\n    t['plus'] = 584;\\n    t['comma'] = 278;\\n    t['hyphen'] = 333;\\n    t['period'] = 278;\\n    t['slash'] = 278;\\n    t['zero'] = 556;\\n    t['one'] = 556;\\n    t['two'] = 556;\\n    t['three'] = 556;\\n    t['four'] = 556;\\n    t['five'] = 556;\\n    t['six'] = 556;\\n    t['seven'] = 556;\\n    t['eight'] = 556;\\n    t['nine'] = 556;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 584;\\n    t['equal'] = 584;\\n    t['greater'] = 584;\\n    t['question'] = 556;\\n    t['at'] = 1015;\\n    t['A'] = 667;\\n    t['B'] = 667;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 722;\\n    t['I'] = 278;\\n    t['J'] = 500;\\n    t['K'] = 667;\\n    t['L'] = 556;\\n    t['M'] = 833;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 667;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 667;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 944;\\n    t['X'] = 667;\\n    t['Y'] = 667;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 278;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 278;\\n    t['asciicircum'] = 469;\\n    t['underscore'] = 556;\\n    t['quoteleft'] = 222;\\n    t['a'] = 556;\\n    t['b'] = 556;\\n    t['c'] = 500;\\n    t['d'] = 556;\\n    t['e'] = 556;\\n    t['f'] = 278;\\n    t['g'] = 556;\\n    t['h'] = 556;\\n    t['i'] = 222;\\n    t['j'] = 222;\\n    t['k'] = 500;\\n    t['l'] = 222;\\n    t['m'] = 833;\\n    t['n'] = 556;\\n    t['o'] = 556;\\n    t['p'] = 556;\\n    t['q'] = 556;\\n    t['r'] = 333;\\n    t['s'] = 500;\\n    t['t'] = 278;\\n    t['u'] = 556;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 500;\\n    t['braceleft'] = 334;\\n    t['bar'] = 260;\\n    t['braceright'] = 334;\\n    t['asciitilde'] = 584;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 556;\\n    t['sterling'] = 556;\\n    t['fraction'] = 167;\\n    t['yen'] = 556;\\n    t['florin'] = 556;\\n    t['section'] = 556;\\n    t['currency'] = 556;\\n    t['quotesingle'] = 191;\\n    t['quotedblleft'] = 333;\\n    t['guillemotleft'] = 556;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 500;\\n    t['fl'] = 500;\\n    t['endash'] = 556;\\n    t['dagger'] = 556;\\n    t['daggerdbl'] = 556;\\n    t['periodcentered'] = 278;\\n    t['paragraph'] = 537;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 222;\\n    t['quotedblbase'] = 333;\\n    t['quotedblright'] = 333;\\n    t['guillemotright'] = 556;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 611;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 370;\\n    t['Lslash'] = 556;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 365;\\n    t['ae'] = 889;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 222;\\n    t['oslash'] = 611;\\n    t['oe'] = 944;\\n    t['germandbls'] = 611;\\n    t['Idieresis'] = 278;\\n    t['eacute'] = 556;\\n    t['abreve'] = 556;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 556;\\n    t['Ydieresis'] = 667;\\n    t['divide'] = 584;\\n    t['Yacute'] = 667;\\n    t['Acircumflex'] = 667;\\n    t['aacute'] = 556;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 500;\\n    t['ecircumflex'] = 556;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 556;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 737;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 500;\\n    t['aring'] = 556;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 222;\\n    t['agrave'] = 556;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 556;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 500;\\n    t['scedilla'] = 500;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 556;\\n    t['Amacron'] = 667;\\n    t['rcaron'] = 333;\\n    t['ccedilla'] = 500;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 667;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 667;\\n    t['dcaron'] = 643;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 333;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 667;\\n    t['Abreve'] = 667;\\n    t['multiply'] = 584;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 556;\\n    t['edieresis'] = 556;\\n    t['cacute'] = 500;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 278;\\n    t['plusminus'] = 584;\\n    t['brokenbar'] = 260;\\n    t['registered'] = 737;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 278;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 333;\\n    t['omacron'] = 556;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 222;\\n    t['tcaron'] = 317;\\n    t['eogonek'] = 556;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 667;\\n    t['Adieresis'] = 667;\\n    t['egrave'] = 556;\\n    t['zacute'] = 500;\\n    t['iogonek'] = 222;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 556;\\n    t['amacron'] = 556;\\n    t['sacute'] = 500;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 556;\\n    t['twosuperior'] = 333;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 556;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 556;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 556;\\n    t['threequarters'] = 834;\\n    t['Scedilla'] = 667;\\n    t['lcaron'] = 299;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 556;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 556;\\n    t['Igrave'] = 278;\\n    t['Imacron'] = 278;\\n    t['Lcaron'] = 556;\\n    t['onehalf'] = 834;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 556;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 556;\\n    t['gbreve'] = 556;\\n    t['onequarter'] = 834;\\n    t['Scaron'] = 667;\\n    t['Scommaaccent'] = 667;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 556;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 556;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 333;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 556;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 556;\\n    t['Atilde'] = 667;\\n    t['Aogonek'] = 667;\\n    t['Aring'] = 667;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 500;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 278;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 584;\\n    t['Icircumflex'] = 278;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 584;\\n    t['odieresis'] = 556;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 556;\\n    t['eth'] = 556;\\n    t['zcaron'] = 500;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 333;\\n    t['imacron'] = 278;\\n    t['Euro'] = 556;\\n  });\\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['universal'] = 713;\\n    t['numbersign'] = 500;\\n    t['existential'] = 549;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['suchthat'] = 439;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asteriskmath'] = 500;\\n    t['plus'] = 549;\\n    t['comma'] = 250;\\n    t['minus'] = 549;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 549;\\n    t['equal'] = 549;\\n    t['greater'] = 549;\\n    t['question'] = 444;\\n    t['congruent'] = 549;\\n    t['Alpha'] = 722;\\n    t['Beta'] = 667;\\n    t['Chi'] = 722;\\n    t['Delta'] = 612;\\n    t['Epsilon'] = 611;\\n    t['Phi'] = 763;\\n    t['Gamma'] = 603;\\n    t['Eta'] = 722;\\n    t['Iota'] = 333;\\n    t['theta1'] = 631;\\n    t['Kappa'] = 722;\\n    t['Lambda'] = 686;\\n    t['Mu'] = 889;\\n    t['Nu'] = 722;\\n    t['Omicron'] = 722;\\n    t['Pi'] = 768;\\n    t['Theta'] = 741;\\n    t['Rho'] = 556;\\n    t['Sigma'] = 592;\\n    t['Tau'] = 611;\\n    t['Upsilon'] = 690;\\n    t['sigma1'] = 439;\\n    t['Omega'] = 768;\\n    t['Xi'] = 645;\\n    t['Psi'] = 795;\\n    t['Zeta'] = 611;\\n    t['bracketleft'] = 333;\\n    t['therefore'] = 863;\\n    t['bracketright'] = 333;\\n    t['perpendicular'] = 658;\\n    t['underscore'] = 500;\\n    t['radicalex'] = 500;\\n    t['alpha'] = 631;\\n    t['beta'] = 549;\\n    t['chi'] = 549;\\n    t['delta'] = 494;\\n    t['epsilon'] = 439;\\n    t['phi'] = 521;\\n    t['gamma'] = 411;\\n    t['eta'] = 603;\\n    t['iota'] = 329;\\n    t['phi1'] = 603;\\n    t['kappa'] = 549;\\n    t['lambda'] = 549;\\n    t['mu'] = 576;\\n    t['nu'] = 521;\\n    t['omicron'] = 549;\\n    t['pi'] = 549;\\n    t['theta'] = 521;\\n    t['rho'] = 549;\\n    t['sigma'] = 603;\\n    t['tau'] = 439;\\n    t['upsilon'] = 576;\\n    t['omega1'] = 713;\\n    t['omega'] = 686;\\n    t['xi'] = 493;\\n    t['psi'] = 686;\\n    t['zeta'] = 494;\\n    t['braceleft'] = 480;\\n    t['bar'] = 200;\\n    t['braceright'] = 480;\\n    t['similar'] = 549;\\n    t['Euro'] = 750;\\n    t['Upsilon1'] = 620;\\n    t['minute'] = 247;\\n    t['lessequal'] = 549;\\n    t['fraction'] = 167;\\n    t['infinity'] = 713;\\n    t['florin'] = 500;\\n    t['club'] = 753;\\n    t['diamond'] = 753;\\n    t['heart'] = 753;\\n    t['spade'] = 753;\\n    t['arrowboth'] = 1042;\\n    t['arrowleft'] = 987;\\n    t['arrowup'] = 603;\\n    t['arrowright'] = 987;\\n    t['arrowdown'] = 603;\\n    t['degree'] = 400;\\n    t['plusminus'] = 549;\\n    t['second'] = 411;\\n    t['greaterequal'] = 549;\\n    t['multiply'] = 549;\\n    t['proportional'] = 713;\\n    t['partialdiff'] = 494;\\n    t['bullet'] = 460;\\n    t['divide'] = 549;\\n    t['notequal'] = 549;\\n    t['equivalence'] = 549;\\n    t['approxequal'] = 549;\\n    t['ellipsis'] = 1000;\\n    t['arrowvertex'] = 603;\\n    t['arrowhorizex'] = 1000;\\n    t['carriagereturn'] = 658;\\n    t['aleph'] = 823;\\n    t['Ifraktur'] = 686;\\n    t['Rfraktur'] = 795;\\n    t['weierstrass'] = 987;\\n    t['circlemultiply'] = 768;\\n    t['circleplus'] = 768;\\n    t['emptyset'] = 823;\\n    t['intersection'] = 768;\\n    t['union'] = 768;\\n    t['propersuperset'] = 713;\\n    t['reflexsuperset'] = 713;\\n    t['notsubset'] = 713;\\n    t['propersubset'] = 713;\\n    t['reflexsubset'] = 713;\\n    t['element'] = 713;\\n    t['notelement'] = 713;\\n    t['angle'] = 768;\\n    t['gradient'] = 713;\\n    t['registerserif'] = 790;\\n    t['copyrightserif'] = 790;\\n    t['trademarkserif'] = 890;\\n    t['product'] = 823;\\n    t['radical'] = 549;\\n    t['dotmath'] = 250;\\n    t['logicalnot'] = 713;\\n    t['logicaland'] = 603;\\n    t['logicalor'] = 603;\\n    t['arrowdblboth'] = 1042;\\n    t['arrowdblleft'] = 987;\\n    t['arrowdblup'] = 603;\\n    t['arrowdblright'] = 987;\\n    t['arrowdbldown'] = 603;\\n    t['lozenge'] = 494;\\n    t['angleleft'] = 329;\\n    t['registersans'] = 790;\\n    t['copyrightsans'] = 790;\\n    t['trademarksans'] = 786;\\n    t['summation'] = 713;\\n    t['parenlefttp'] = 384;\\n    t['parenleftex'] = 384;\\n    t['parenleftbt'] = 384;\\n    t['bracketlefttp'] = 384;\\n    t['bracketleftex'] = 384;\\n    t['bracketleftbt'] = 384;\\n    t['bracelefttp'] = 494;\\n    t['braceleftmid'] = 494;\\n    t['braceleftbt'] = 494;\\n    t['braceex'] = 494;\\n    t['angleright'] = 329;\\n    t['integral'] = 274;\\n    t['integraltp'] = 686;\\n    t['integralex'] = 686;\\n    t['integralbt'] = 686;\\n    t['parenrighttp'] = 384;\\n    t['parenrightex'] = 384;\\n    t['parenrightbt'] = 384;\\n    t['bracketrighttp'] = 384;\\n    t['bracketrightex'] = 384;\\n    t['bracketrightbt'] = 384;\\n    t['bracerighttp'] = 494;\\n    t['bracerightmid'] = 494;\\n    t['bracerightbt'] = 494;\\n    t['apple'] = 790;\\n  });\\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 408;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 564;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 278;\\n    t['semicolon'] = 278;\\n    t['less'] = 564;\\n    t['equal'] = 564;\\n    t['greater'] = 564;\\n    t['question'] = 444;\\n    t['at'] = 921;\\n    t['A'] = 722;\\n    t['B'] = 667;\\n    t['C'] = 667;\\n    t['D'] = 722;\\n    t['E'] = 611;\\n    t['F'] = 556;\\n    t['G'] = 722;\\n    t['H'] = 722;\\n    t['I'] = 333;\\n    t['J'] = 389;\\n    t['K'] = 722;\\n    t['L'] = 611;\\n    t['M'] = 889;\\n    t['N'] = 722;\\n    t['O'] = 722;\\n    t['P'] = 556;\\n    t['Q'] = 722;\\n    t['R'] = 667;\\n    t['S'] = 556;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 722;\\n    t['W'] = 944;\\n    t['X'] = 722;\\n    t['Y'] = 722;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 469;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 444;\\n    t['b'] = 500;\\n    t['c'] = 444;\\n    t['d'] = 500;\\n    t['e'] = 444;\\n    t['f'] = 333;\\n    t['g'] = 500;\\n    t['h'] = 500;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 500;\\n    t['l'] = 278;\\n    t['m'] = 778;\\n    t['n'] = 500;\\n    t['o'] = 500;\\n    t['p'] = 500;\\n    t['q'] = 500;\\n    t['r'] = 333;\\n    t['s'] = 389;\\n    t['t'] = 278;\\n    t['u'] = 500;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 444;\\n    t['braceleft'] = 480;\\n    t['bar'] = 200;\\n    t['braceright'] = 480;\\n    t['asciitilde'] = 541;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 180;\\n    t['quotedblleft'] = 444;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 556;\\n    t['fl'] = 556;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 453;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 444;\\n    t['quotedblright'] = 444;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 444;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 889;\\n    t['ordfeminine'] = 276;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 722;\\n    t['OE'] = 889;\\n    t['ordmasculine'] = 310;\\n    t['ae'] = 667;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 722;\\n    t['germandbls'] = 500;\\n    t['Idieresis'] = 333;\\n    t['eacute'] = 444;\\n    t['abreve'] = 444;\\n    t['uhungarumlaut'] = 500;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 722;\\n    t['divide'] = 564;\\n    t['Yacute'] = 722;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 444;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 444;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 500;\\n    t['Edieresis'] = 611;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 760;\\n    t['Emacron'] = 611;\\n    t['ccaron'] = 444;\\n    t['aring'] = 444;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 444;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 667;\\n    t['atilde'] = 444;\\n    t['Edotaccent'] = 611;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 667;\\n    t['Gcommaaccent'] = 722;\\n    t['ucircumflex'] = 500;\\n    t['acircumflex'] = 444;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 333;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 556;\\n    t['Omacron'] = 722;\\n    t['Racute'] = 667;\\n    t['Sacute'] = 556;\\n    t['dcaron'] = 588;\\n    t['Umacron'] = 722;\\n    t['uring'] = 500;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 722;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 564;\\n    t['uacute'] = 500;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 611;\\n    t['adieresis'] = 444;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 500;\\n    t['umacron'] = 500;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 333;\\n    t['plusminus'] = 564;\\n    t['brokenbar'] = 200;\\n    t['registered'] = 760;\\n    t['Gbreve'] = 722;\\n    t['Idotaccent'] = 333;\\n    t['summation'] = 600;\\n    t['Egrave'] = 611;\\n    t['racute'] = 333;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 667;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 326;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 444;\\n    t['zacute'] = 444;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 722;\\n    t['oacute'] = 500;\\n    t['amacron'] = 444;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 722;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 500;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 722;\\n    t['mu'] = 500;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 611;\\n    t['dcroat'] = 500;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 556;\\n    t['lcaron'] = 344;\\n    t['Kcommaaccent'] = 722;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 980;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 333;\\n    t['Imacron'] = 333;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 500;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 611;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 556;\\n    t['Scommaaccent'] = 556;\\n    t['Ohungarumlaut'] = 722;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 667;\\n    t['ugrave'] = 500;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 333;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 667;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 722;\\n    t['zdotaccent'] = 444;\\n    t['Ecaron'] = 611;\\n    t['Iogonek'] = 333;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 564;\\n    t['Icircumflex'] = 333;\\n    t['ncaron'] = 500;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 564;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 500;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 444;\\n    t['ncommaaccent'] = 500;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 555;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 1000;\\n    t['ampersand'] = 833;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 570;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 570;\\n    t['equal'] = 570;\\n    t['greater'] = 570;\\n    t['question'] = 500;\\n    t['at'] = 930;\\n    t['A'] = 722;\\n    t['B'] = 667;\\n    t['C'] = 722;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 611;\\n    t['G'] = 778;\\n    t['H'] = 778;\\n    t['I'] = 389;\\n    t['J'] = 500;\\n    t['K'] = 778;\\n    t['L'] = 667;\\n    t['M'] = 944;\\n    t['N'] = 722;\\n    t['O'] = 778;\\n    t['P'] = 611;\\n    t['Q'] = 778;\\n    t['R'] = 722;\\n    t['S'] = 556;\\n    t['T'] = 667;\\n    t['U'] = 722;\\n    t['V'] = 722;\\n    t['W'] = 1000;\\n    t['X'] = 722;\\n    t['Y'] = 722;\\n    t['Z'] = 667;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 581;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 500;\\n    t['b'] = 556;\\n    t['c'] = 444;\\n    t['d'] = 556;\\n    t['e'] = 444;\\n    t['f'] = 333;\\n    t['g'] = 500;\\n    t['h'] = 556;\\n    t['i'] = 278;\\n    t['j'] = 333;\\n    t['k'] = 556;\\n    t['l'] = 278;\\n    t['m'] = 833;\\n    t['n'] = 556;\\n    t['o'] = 500;\\n    t['p'] = 556;\\n    t['q'] = 556;\\n    t['r'] = 444;\\n    t['s'] = 389;\\n    t['t'] = 333;\\n    t['u'] = 556;\\n    t['v'] = 500;\\n    t['w'] = 722;\\n    t['x'] = 500;\\n    t['y'] = 500;\\n    t['z'] = 444;\\n    t['braceleft'] = 394;\\n    t['bar'] = 220;\\n    t['braceright'] = 394;\\n    t['asciitilde'] = 520;\\n    t['exclamdown'] = 333;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 278;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 556;\\n    t['fl'] = 556;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 540;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 500;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 1000;\\n    t['ordfeminine'] = 300;\\n    t['Lslash'] = 667;\\n    t['Oslash'] = 778;\\n    t['OE'] = 1000;\\n    t['ordmasculine'] = 330;\\n    t['ae'] = 722;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 722;\\n    t['germandbls'] = 556;\\n    t['Idieresis'] = 389;\\n    t['eacute'] = 444;\\n    t['abreve'] = 500;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 722;\\n    t['divide'] = 570;\\n    t['Yacute'] = 722;\\n    t['Acircumflex'] = 722;\\n    t['aacute'] = 500;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 500;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 500;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 747;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 444;\\n    t['aring'] = 500;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 500;\\n    t['Tcommaaccent'] = 667;\\n    t['Cacute'] = 722;\\n    t['atilde'] = 500;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 722;\\n    t['Gcommaaccent'] = 778;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 500;\\n    t['Amacron'] = 722;\\n    t['rcaron'] = 444;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 667;\\n    t['Thorn'] = 611;\\n    t['Omacron'] = 778;\\n    t['Racute'] = 722;\\n    t['Sacute'] = 556;\\n    t['dcaron'] = 672;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 778;\\n    t['Agrave'] = 722;\\n    t['Abreve'] = 722;\\n    t['multiply'] = 570;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 667;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 500;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 500;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 389;\\n    t['plusminus'] = 570;\\n    t['brokenbar'] = 220;\\n    t['registered'] = 747;\\n    t['Gbreve'] = 778;\\n    t['Idotaccent'] = 389;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 444;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 667;\\n    t['Zcaron'] = 667;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 722;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 416;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 722;\\n    t['Adieresis'] = 722;\\n    t['egrave'] = 444;\\n    t['zacute'] = 444;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 778;\\n    t['oacute'] = 500;\\n    t['amacron'] = 500;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 778;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 556;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 778;\\n    t['mu'] = 556;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 556;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 556;\\n    t['lcaron'] = 394;\\n    t['Kcommaaccent'] = 778;\\n    t['Lacute'] = 667;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 389;\\n    t['Imacron'] = 389;\\n    t['Lcaron'] = 667;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 556;\\n    t['Scommaaccent'] = 556;\\n    t['Ohungarumlaut'] = 778;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 722;\\n    t['ugrave'] = 556;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 444;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 722;\\n    t['Lcommaaccent'] = 667;\\n    t['Atilde'] = 722;\\n    t['Aogonek'] = 722;\\n    t['Aring'] = 722;\\n    t['Otilde'] = 778;\\n    t['zdotaccent'] = 444;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 389;\\n    t['kcommaaccent'] = 556;\\n    t['minus'] = 570;\\n    t['Icircumflex'] = 389;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 333;\\n    t['logicalnot'] = 570;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 444;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 389;\\n    t['quotedbl'] = 555;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 570;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 570;\\n    t['equal'] = 570;\\n    t['greater'] = 570;\\n    t['question'] = 500;\\n    t['at'] = 832;\\n    t['A'] = 667;\\n    t['B'] = 667;\\n    t['C'] = 667;\\n    t['D'] = 722;\\n    t['E'] = 667;\\n    t['F'] = 667;\\n    t['G'] = 722;\\n    t['H'] = 778;\\n    t['I'] = 389;\\n    t['J'] = 500;\\n    t['K'] = 667;\\n    t['L'] = 611;\\n    t['M'] = 889;\\n    t['N'] = 722;\\n    t['O'] = 722;\\n    t['P'] = 611;\\n    t['Q'] = 722;\\n    t['R'] = 667;\\n    t['S'] = 556;\\n    t['T'] = 611;\\n    t['U'] = 722;\\n    t['V'] = 667;\\n    t['W'] = 889;\\n    t['X'] = 667;\\n    t['Y'] = 611;\\n    t['Z'] = 611;\\n    t['bracketleft'] = 333;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 333;\\n    t['asciicircum'] = 570;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 500;\\n    t['b'] = 500;\\n    t['c'] = 444;\\n    t['d'] = 500;\\n    t['e'] = 444;\\n    t['f'] = 333;\\n    t['g'] = 500;\\n    t['h'] = 556;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 500;\\n    t['l'] = 278;\\n    t['m'] = 778;\\n    t['n'] = 556;\\n    t['o'] = 500;\\n    t['p'] = 500;\\n    t['q'] = 500;\\n    t['r'] = 389;\\n    t['s'] = 389;\\n    t['t'] = 278;\\n    t['u'] = 556;\\n    t['v'] = 444;\\n    t['w'] = 667;\\n    t['x'] = 500;\\n    t['y'] = 444;\\n    t['z'] = 389;\\n    t['braceleft'] = 348;\\n    t['bar'] = 220;\\n    t['braceright'] = 348;\\n    t['asciitilde'] = 570;\\n    t['exclamdown'] = 389;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 278;\\n    t['quotedblleft'] = 500;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 556;\\n    t['fl'] = 556;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 500;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 500;\\n    t['quotedblright'] = 500;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 1000;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 500;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 1000;\\n    t['AE'] = 944;\\n    t['ordfeminine'] = 266;\\n    t['Lslash'] = 611;\\n    t['Oslash'] = 722;\\n    t['OE'] = 944;\\n    t['ordmasculine'] = 300;\\n    t['ae'] = 722;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 722;\\n    t['germandbls'] = 500;\\n    t['Idieresis'] = 389;\\n    t['eacute'] = 444;\\n    t['abreve'] = 500;\\n    t['uhungarumlaut'] = 556;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 611;\\n    t['divide'] = 570;\\n    t['Yacute'] = 611;\\n    t['Acircumflex'] = 667;\\n    t['aacute'] = 500;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 444;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 500;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 556;\\n    t['Edieresis'] = 667;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 747;\\n    t['Emacron'] = 667;\\n    t['ccaron'] = 444;\\n    t['aring'] = 500;\\n    t['Ncommaaccent'] = 722;\\n    t['lacute'] = 278;\\n    t['agrave'] = 500;\\n    t['Tcommaaccent'] = 611;\\n    t['Cacute'] = 667;\\n    t['atilde'] = 500;\\n    t['Edotaccent'] = 667;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 494;\\n    t['Rcaron'] = 667;\\n    t['Gcommaaccent'] = 722;\\n    t['ucircumflex'] = 556;\\n    t['acircumflex'] = 500;\\n    t['Amacron'] = 667;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 611;\\n    t['Thorn'] = 611;\\n    t['Omacron'] = 722;\\n    t['Racute'] = 667;\\n    t['Sacute'] = 556;\\n    t['dcaron'] = 608;\\n    t['Umacron'] = 722;\\n    t['uring'] = 556;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 722;\\n    t['Agrave'] = 667;\\n    t['Abreve'] = 667;\\n    t['multiply'] = 570;\\n    t['uacute'] = 556;\\n    t['Tcaron'] = 611;\\n    t['partialdiff'] = 494;\\n    t['ydieresis'] = 444;\\n    t['Nacute'] = 722;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 667;\\n    t['adieresis'] = 500;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 556;\\n    t['umacron'] = 556;\\n    t['Ncaron'] = 722;\\n    t['Iacute'] = 389;\\n    t['plusminus'] = 570;\\n    t['brokenbar'] = 220;\\n    t['registered'] = 747;\\n    t['Gbreve'] = 722;\\n    t['Idotaccent'] = 389;\\n    t['summation'] = 600;\\n    t['Egrave'] = 667;\\n    t['racute'] = 389;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 611;\\n    t['Zcaron'] = 611;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 667;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 366;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 667;\\n    t['Adieresis'] = 667;\\n    t['egrave'] = 444;\\n    t['zacute'] = 389;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 722;\\n    t['oacute'] = 500;\\n    t['amacron'] = 500;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 722;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 500;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 722;\\n    t['mu'] = 576;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 667;\\n    t['dcroat'] = 500;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 556;\\n    t['lcaron'] = 382;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 611;\\n    t['trademark'] = 1000;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 389;\\n    t['Imacron'] = 389;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 556;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 667;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 556;\\n    t['Scommaaccent'] = 556;\\n    t['Ohungarumlaut'] = 722;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 667;\\n    t['ugrave'] = 556;\\n    t['radical'] = 549;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 722;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 667;\\n    t['Lcommaaccent'] = 611;\\n    t['Atilde'] = 667;\\n    t['Aogonek'] = 667;\\n    t['Aring'] = 667;\\n    t['Otilde'] = 722;\\n    t['zdotaccent'] = 389;\\n    t['Ecaron'] = 667;\\n    t['Iogonek'] = 389;\\n    t['kcommaaccent'] = 500;\\n    t['minus'] = 606;\\n    t['Icircumflex'] = 389;\\n    t['ncaron'] = 556;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 606;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 556;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 389;\\n    t['ncommaaccent'] = 556;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 250;\\n    t['exclam'] = 333;\\n    t['quotedbl'] = 420;\\n    t['numbersign'] = 500;\\n    t['dollar'] = 500;\\n    t['percent'] = 833;\\n    t['ampersand'] = 778;\\n    t['quoteright'] = 333;\\n    t['parenleft'] = 333;\\n    t['parenright'] = 333;\\n    t['asterisk'] = 500;\\n    t['plus'] = 675;\\n    t['comma'] = 250;\\n    t['hyphen'] = 333;\\n    t['period'] = 250;\\n    t['slash'] = 278;\\n    t['zero'] = 500;\\n    t['one'] = 500;\\n    t['two'] = 500;\\n    t['three'] = 500;\\n    t['four'] = 500;\\n    t['five'] = 500;\\n    t['six'] = 500;\\n    t['seven'] = 500;\\n    t['eight'] = 500;\\n    t['nine'] = 500;\\n    t['colon'] = 333;\\n    t['semicolon'] = 333;\\n    t['less'] = 675;\\n    t['equal'] = 675;\\n    t['greater'] = 675;\\n    t['question'] = 500;\\n    t['at'] = 920;\\n    t['A'] = 611;\\n    t['B'] = 611;\\n    t['C'] = 667;\\n    t['D'] = 722;\\n    t['E'] = 611;\\n    t['F'] = 611;\\n    t['G'] = 722;\\n    t['H'] = 722;\\n    t['I'] = 333;\\n    t['J'] = 444;\\n    t['K'] = 667;\\n    t['L'] = 556;\\n    t['M'] = 833;\\n    t['N'] = 667;\\n    t['O'] = 722;\\n    t['P'] = 611;\\n    t['Q'] = 722;\\n    t['R'] = 611;\\n    t['S'] = 500;\\n    t['T'] = 556;\\n    t['U'] = 722;\\n    t['V'] = 611;\\n    t['W'] = 833;\\n    t['X'] = 611;\\n    t['Y'] = 556;\\n    t['Z'] = 556;\\n    t['bracketleft'] = 389;\\n    t['backslash'] = 278;\\n    t['bracketright'] = 389;\\n    t['asciicircum'] = 422;\\n    t['underscore'] = 500;\\n    t['quoteleft'] = 333;\\n    t['a'] = 500;\\n    t['b'] = 500;\\n    t['c'] = 444;\\n    t['d'] = 500;\\n    t['e'] = 444;\\n    t['f'] = 278;\\n    t['g'] = 500;\\n    t['h'] = 500;\\n    t['i'] = 278;\\n    t['j'] = 278;\\n    t['k'] = 444;\\n    t['l'] = 278;\\n    t['m'] = 722;\\n    t['n'] = 500;\\n    t['o'] = 500;\\n    t['p'] = 500;\\n    t['q'] = 500;\\n    t['r'] = 389;\\n    t['s'] = 389;\\n    t['t'] = 278;\\n    t['u'] = 500;\\n    t['v'] = 444;\\n    t['w'] = 667;\\n    t['x'] = 444;\\n    t['y'] = 444;\\n    t['z'] = 389;\\n    t['braceleft'] = 400;\\n    t['bar'] = 275;\\n    t['braceright'] = 400;\\n    t['asciitilde'] = 541;\\n    t['exclamdown'] = 389;\\n    t['cent'] = 500;\\n    t['sterling'] = 500;\\n    t['fraction'] = 167;\\n    t['yen'] = 500;\\n    t['florin'] = 500;\\n    t['section'] = 500;\\n    t['currency'] = 500;\\n    t['quotesingle'] = 214;\\n    t['quotedblleft'] = 556;\\n    t['guillemotleft'] = 500;\\n    t['guilsinglleft'] = 333;\\n    t['guilsinglright'] = 333;\\n    t['fi'] = 500;\\n    t['fl'] = 500;\\n    t['endash'] = 500;\\n    t['dagger'] = 500;\\n    t['daggerdbl'] = 500;\\n    t['periodcentered'] = 250;\\n    t['paragraph'] = 523;\\n    t['bullet'] = 350;\\n    t['quotesinglbase'] = 333;\\n    t['quotedblbase'] = 556;\\n    t['quotedblright'] = 556;\\n    t['guillemotright'] = 500;\\n    t['ellipsis'] = 889;\\n    t['perthousand'] = 1000;\\n    t['questiondown'] = 500;\\n    t['grave'] = 333;\\n    t['acute'] = 333;\\n    t['circumflex'] = 333;\\n    t['tilde'] = 333;\\n    t['macron'] = 333;\\n    t['breve'] = 333;\\n    t['dotaccent'] = 333;\\n    t['dieresis'] = 333;\\n    t['ring'] = 333;\\n    t['cedilla'] = 333;\\n    t['hungarumlaut'] = 333;\\n    t['ogonek'] = 333;\\n    t['caron'] = 333;\\n    t['emdash'] = 889;\\n    t['AE'] = 889;\\n    t['ordfeminine'] = 276;\\n    t['Lslash'] = 556;\\n    t['Oslash'] = 722;\\n    t['OE'] = 944;\\n    t['ordmasculine'] = 310;\\n    t['ae'] = 667;\\n    t['dotlessi'] = 278;\\n    t['lslash'] = 278;\\n    t['oslash'] = 500;\\n    t['oe'] = 667;\\n    t['germandbls'] = 500;\\n    t['Idieresis'] = 333;\\n    t['eacute'] = 444;\\n    t['abreve'] = 500;\\n    t['uhungarumlaut'] = 500;\\n    t['ecaron'] = 444;\\n    t['Ydieresis'] = 556;\\n    t['divide'] = 675;\\n    t['Yacute'] = 556;\\n    t['Acircumflex'] = 611;\\n    t['aacute'] = 500;\\n    t['Ucircumflex'] = 722;\\n    t['yacute'] = 444;\\n    t['scommaaccent'] = 389;\\n    t['ecircumflex'] = 444;\\n    t['Uring'] = 722;\\n    t['Udieresis'] = 722;\\n    t['aogonek'] = 500;\\n    t['Uacute'] = 722;\\n    t['uogonek'] = 500;\\n    t['Edieresis'] = 611;\\n    t['Dcroat'] = 722;\\n    t['commaaccent'] = 250;\\n    t['copyright'] = 760;\\n    t['Emacron'] = 611;\\n    t['ccaron'] = 444;\\n    t['aring'] = 500;\\n    t['Ncommaaccent'] = 667;\\n    t['lacute'] = 278;\\n    t['agrave'] = 500;\\n    t['Tcommaaccent'] = 556;\\n    t['Cacute'] = 667;\\n    t['atilde'] = 500;\\n    t['Edotaccent'] = 611;\\n    t['scaron'] = 389;\\n    t['scedilla'] = 389;\\n    t['iacute'] = 278;\\n    t['lozenge'] = 471;\\n    t['Rcaron'] = 611;\\n    t['Gcommaaccent'] = 722;\\n    t['ucircumflex'] = 500;\\n    t['acircumflex'] = 500;\\n    t['Amacron'] = 611;\\n    t['rcaron'] = 389;\\n    t['ccedilla'] = 444;\\n    t['Zdotaccent'] = 556;\\n    t['Thorn'] = 611;\\n    t['Omacron'] = 722;\\n    t['Racute'] = 611;\\n    t['Sacute'] = 500;\\n    t['dcaron'] = 544;\\n    t['Umacron'] = 722;\\n    t['uring'] = 500;\\n    t['threesuperior'] = 300;\\n    t['Ograve'] = 722;\\n    t['Agrave'] = 611;\\n    t['Abreve'] = 611;\\n    t['multiply'] = 675;\\n    t['uacute'] = 500;\\n    t['Tcaron'] = 556;\\n    t['partialdiff'] = 476;\\n    t['ydieresis'] = 444;\\n    t['Nacute'] = 667;\\n    t['icircumflex'] = 278;\\n    t['Ecircumflex'] = 611;\\n    t['adieresis'] = 500;\\n    t['edieresis'] = 444;\\n    t['cacute'] = 444;\\n    t['nacute'] = 500;\\n    t['umacron'] = 500;\\n    t['Ncaron'] = 667;\\n    t['Iacute'] = 333;\\n    t['plusminus'] = 675;\\n    t['brokenbar'] = 275;\\n    t['registered'] = 760;\\n    t['Gbreve'] = 722;\\n    t['Idotaccent'] = 333;\\n    t['summation'] = 600;\\n    t['Egrave'] = 611;\\n    t['racute'] = 389;\\n    t['omacron'] = 500;\\n    t['Zacute'] = 556;\\n    t['Zcaron'] = 556;\\n    t['greaterequal'] = 549;\\n    t['Eth'] = 722;\\n    t['Ccedilla'] = 667;\\n    t['lcommaaccent'] = 278;\\n    t['tcaron'] = 300;\\n    t['eogonek'] = 444;\\n    t['Uogonek'] = 722;\\n    t['Aacute'] = 611;\\n    t['Adieresis'] = 611;\\n    t['egrave'] = 444;\\n    t['zacute'] = 389;\\n    t['iogonek'] = 278;\\n    t['Oacute'] = 722;\\n    t['oacute'] = 500;\\n    t['amacron'] = 500;\\n    t['sacute'] = 389;\\n    t['idieresis'] = 278;\\n    t['Ocircumflex'] = 722;\\n    t['Ugrave'] = 722;\\n    t['Delta'] = 612;\\n    t['thorn'] = 500;\\n    t['twosuperior'] = 300;\\n    t['Odieresis'] = 722;\\n    t['mu'] = 500;\\n    t['igrave'] = 278;\\n    t['ohungarumlaut'] = 500;\\n    t['Eogonek'] = 611;\\n    t['dcroat'] = 500;\\n    t['threequarters'] = 750;\\n    t['Scedilla'] = 500;\\n    t['lcaron'] = 300;\\n    t['Kcommaaccent'] = 667;\\n    t['Lacute'] = 556;\\n    t['trademark'] = 980;\\n    t['edotaccent'] = 444;\\n    t['Igrave'] = 333;\\n    t['Imacron'] = 333;\\n    t['Lcaron'] = 611;\\n    t['onehalf'] = 750;\\n    t['lessequal'] = 549;\\n    t['ocircumflex'] = 500;\\n    t['ntilde'] = 500;\\n    t['Uhungarumlaut'] = 722;\\n    t['Eacute'] = 611;\\n    t['emacron'] = 444;\\n    t['gbreve'] = 500;\\n    t['onequarter'] = 750;\\n    t['Scaron'] = 500;\\n    t['Scommaaccent'] = 500;\\n    t['Ohungarumlaut'] = 722;\\n    t['degree'] = 400;\\n    t['ograve'] = 500;\\n    t['Ccaron'] = 667;\\n    t['ugrave'] = 500;\\n    t['radical'] = 453;\\n    t['Dcaron'] = 722;\\n    t['rcommaaccent'] = 389;\\n    t['Ntilde'] = 667;\\n    t['otilde'] = 500;\\n    t['Rcommaaccent'] = 611;\\n    t['Lcommaaccent'] = 556;\\n    t['Atilde'] = 611;\\n    t['Aogonek'] = 611;\\n    t['Aring'] = 611;\\n    t['Otilde'] = 722;\\n    t['zdotaccent'] = 389;\\n    t['Ecaron'] = 611;\\n    t['Iogonek'] = 333;\\n    t['kcommaaccent'] = 444;\\n    t['minus'] = 675;\\n    t['Icircumflex'] = 333;\\n    t['ncaron'] = 500;\\n    t['tcommaaccent'] = 278;\\n    t['logicalnot'] = 675;\\n    t['odieresis'] = 500;\\n    t['udieresis'] = 500;\\n    t['notequal'] = 549;\\n    t['gcommaaccent'] = 500;\\n    t['eth'] = 500;\\n    t['zcaron'] = 389;\\n    t['ncommaaccent'] = 500;\\n    t['onesuperior'] = 300;\\n    t['imacron'] = 278;\\n    t['Euro'] = 500;\\n  });\\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\\n    t['space'] = 278;\\n    t['a1'] = 974;\\n    t['a2'] = 961;\\n    t['a202'] = 974;\\n    t['a3'] = 980;\\n    t['a4'] = 719;\\n    t['a5'] = 789;\\n    t['a119'] = 790;\\n    t['a118'] = 791;\\n    t['a117'] = 690;\\n    t['a11'] = 960;\\n    t['a12'] = 939;\\n    t['a13'] = 549;\\n    t['a14'] = 855;\\n    t['a15'] = 911;\\n    t['a16'] = 933;\\n    t['a105'] = 911;\\n    t['a17'] = 945;\\n    t['a18'] = 974;\\n    t['a19'] = 755;\\n    t['a20'] = 846;\\n    t['a21'] = 762;\\n    t['a22'] = 761;\\n    t['a23'] = 571;\\n    t['a24'] = 677;\\n    t['a25'] = 763;\\n    t['a26'] = 760;\\n    t['a27'] = 759;\\n    t['a28'] = 754;\\n    t['a6'] = 494;\\n    t['a7'] = 552;\\n    t['a8'] = 537;\\n    t['a9'] = 577;\\n    t['a10'] = 692;\\n    t['a29'] = 786;\\n    t['a30'] = 788;\\n    t['a31'] = 788;\\n    t['a32'] = 790;\\n    t['a33'] = 793;\\n    t['a34'] = 794;\\n    t['a35'] = 816;\\n    t['a36'] = 823;\\n    t['a37'] = 789;\\n    t['a38'] = 841;\\n    t['a39'] = 823;\\n    t['a40'] = 833;\\n    t['a41'] = 816;\\n    t['a42'] = 831;\\n    t['a43'] = 923;\\n    t['a44'] = 744;\\n    t['a45'] = 723;\\n    t['a46'] = 749;\\n    t['a47'] = 790;\\n    t['a48'] = 792;\\n    t['a49'] = 695;\\n    t['a50'] = 776;\\n    t['a51'] = 768;\\n    t['a52'] = 792;\\n    t['a53'] = 759;\\n    t['a54'] = 707;\\n    t['a55'] = 708;\\n    t['a56'] = 682;\\n    t['a57'] = 701;\\n    t['a58'] = 826;\\n    t['a59'] = 815;\\n    t['a60'] = 789;\\n    t['a61'] = 789;\\n    t['a62'] = 707;\\n    t['a63'] = 687;\\n    t['a64'] = 696;\\n    t['a65'] = 689;\\n    t['a66'] = 786;\\n    t['a67'] = 787;\\n    t['a68'] = 713;\\n    t['a69'] = 791;\\n    t['a70'] = 785;\\n    t['a71'] = 791;\\n    t['a72'] = 873;\\n    t['a73'] = 761;\\n    t['a74'] = 762;\\n    t['a203'] = 762;\\n    t['a75'] = 759;\\n    t['a204'] = 759;\\n    t['a76'] = 892;\\n    t['a77'] = 892;\\n    t['a78'] = 788;\\n    t['a79'] = 784;\\n    t['a81'] = 438;\\n    t['a82'] = 138;\\n    t['a83'] = 277;\\n    t['a84'] = 415;\\n    t['a97'] = 392;\\n    t['a98'] = 392;\\n    t['a99'] = 668;\\n    t['a100'] = 668;\\n    t['a89'] = 390;\\n    t['a90'] = 390;\\n    t['a93'] = 317;\\n    t['a94'] = 317;\\n    t['a91'] = 276;\\n    t['a92'] = 276;\\n    t['a205'] = 509;\\n    t['a85'] = 509;\\n    t['a206'] = 410;\\n    t['a86'] = 410;\\n    t['a87'] = 234;\\n    t['a88'] = 234;\\n    t['a95'] = 334;\\n    t['a96'] = 334;\\n    t['a101'] = 732;\\n    t['a102'] = 544;\\n    t['a103'] = 544;\\n    t['a104'] = 910;\\n    t['a106'] = 667;\\n    t['a107'] = 760;\\n    t['a108'] = 760;\\n    t['a112'] = 776;\\n    t['a111'] = 595;\\n    t['a110'] = 694;\\n    t['a109'] = 626;\\n    t['a120'] = 788;\\n    t['a121'] = 788;\\n    t['a122'] = 788;\\n    t['a123'] = 788;\\n    t['a124'] = 788;\\n    t['a125'] = 788;\\n    t['a126'] = 788;\\n    t['a127'] = 788;\\n    t['a128'] = 788;\\n    t['a129'] = 788;\\n    t['a130'] = 788;\\n    t['a131'] = 788;\\n    t['a132'] = 788;\\n    t['a133'] = 788;\\n    t['a134'] = 788;\\n    t['a135'] = 788;\\n    t['a136'] = 788;\\n    t['a137'] = 788;\\n    t['a138'] = 788;\\n    t['a139'] = 788;\\n    t['a140'] = 788;\\n    t['a141'] = 788;\\n    t['a142'] = 788;\\n    t['a143'] = 788;\\n    t['a144'] = 788;\\n    t['a145'] = 788;\\n    t['a146'] = 788;\\n    t['a147'] = 788;\\n    t['a148'] = 788;\\n    t['a149'] = 788;\\n    t['a150'] = 788;\\n    t['a151'] = 788;\\n    t['a152'] = 788;\\n    t['a153'] = 788;\\n    t['a154'] = 788;\\n    t['a155'] = 788;\\n    t['a156'] = 788;\\n    t['a157'] = 788;\\n    t['a158'] = 788;\\n    t['a159'] = 788;\\n    t['a160'] = 894;\\n    t['a161'] = 838;\\n    t['a163'] = 1016;\\n    t['a164'] = 458;\\n    t['a196'] = 748;\\n    t['a165'] = 924;\\n    t['a192'] = 748;\\n    t['a166'] = 918;\\n    t['a167'] = 927;\\n    t['a168'] = 928;\\n    t['a169'] = 928;\\n    t['a170'] = 834;\\n    t['a171'] = 873;\\n    t['a172'] = 828;\\n    t['a173'] = 924;\\n    t['a162'] = 924;\\n    t['a174'] = 917;\\n    t['a175'] = 930;\\n    t['a176'] = 931;\\n    t['a177'] = 463;\\n    t['a178'] = 883;\\n    t['a179'] = 836;\\n    t['a193'] = 836;\\n    t['a180'] = 867;\\n    t['a199'] = 867;\\n    t['a181'] = 696;\\n    t['a200'] = 696;\\n    t['a182'] = 874;\\n    t['a201'] = 874;\\n    t['a183'] = 760;\\n    t['a184'] = 946;\\n    t['a197'] = 771;\\n    t['a185'] = 865;\\n    t['a194'] = 771;\\n    t['a198'] = 888;\\n    t['a186'] = 967;\\n    t['a195'] = 888;\\n    t['a187'] = 831;\\n    t['a188'] = 873;\\n    t['a189'] = 927;\\n    t['a190'] = 970;\\n    t['a191'] = 918;\\n  });\\n});\\nexports.getMetrics = getMetrics;\\n\\n/***/ }),\\n/* 144 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar PostScriptParser = function PostScriptParserClosure() {\\n  function PostScriptParser(lexer) {\\n    this.lexer = lexer;\\n    this.operators = [];\\n    this.token = null;\\n    this.prev = null;\\n  }\\n  PostScriptParser.prototype = {\\n    nextToken: function PostScriptParser_nextToken() {\\n      this.prev = this.token;\\n      this.token = this.lexer.getToken();\\n    },\\n    accept: function PostScriptParser_accept(type) {\\n      if (this.token.type === type) {\\n        this.nextToken();\\n        return true;\\n      }\\n      return false;\\n    },\\n    expect: function PostScriptParser_expect(type) {\\n      if (this.accept(type)) {\\n        return true;\\n      }\\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\\n    },\\n    parse: function PostScriptParser_parse() {\\n      this.nextToken();\\n      this.expect(PostScriptTokenTypes.LBRACE);\\n      this.parseBlock();\\n      this.expect(PostScriptTokenTypes.RBRACE);\\n      return this.operators;\\n    },\\n    parseBlock: function PostScriptParser_parseBlock() {\\n      while (true) {\\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\\n          this.operators.push(this.prev.value);\\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\\n          this.operators.push(this.prev.value);\\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\n          this.parseCondition();\\n        } else {\\n          return;\\n        }\\n      }\\n    },\\n    parseCondition: function PostScriptParser_parseCondition() {\\n      var conditionLocation = this.operators.length;\\n      this.operators.push(null, null);\\n      this.parseBlock();\\n      this.expect(PostScriptTokenTypes.RBRACE);\\n      if (this.accept(PostScriptTokenTypes.IF)) {\\n        this.operators[conditionLocation] = this.operators.length;\\n        this.operators[conditionLocation + 1] = 'jz';\\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\n        var jumpLocation = this.operators.length;\\n        this.operators.push(null, null);\\n        var endOfTrue = this.operators.length;\\n        this.parseBlock();\\n        this.expect(PostScriptTokenTypes.RBRACE);\\n        this.expect(PostScriptTokenTypes.IFELSE);\\n        this.operators[jumpLocation] = this.operators.length;\\n        this.operators[jumpLocation + 1] = 'j';\\n        this.operators[conditionLocation] = endOfTrue;\\n        this.operators[conditionLocation + 1] = 'jz';\\n      } else {\\n        throw new _util.FormatError('PS Function: error parsing conditional.');\\n      }\\n    }\\n  };\\n  return PostScriptParser;\\n}();\\nvar PostScriptTokenTypes = {\\n  LBRACE: 0,\\n  RBRACE: 1,\\n  NUMBER: 2,\\n  OPERATOR: 3,\\n  IF: 4,\\n  IFELSE: 5\\n};\\nvar PostScriptToken = function PostScriptTokenClosure() {\\n  function PostScriptToken(type, value) {\\n    this.type = type;\\n    this.value = value;\\n  }\\n  var opCache = Object.create(null);\\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\\n    var opValue = opCache[op];\\n    if (opValue) {\\n      return opValue;\\n    }\\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\\n  };\\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\\n  return PostScriptToken;\\n}();\\nvar PostScriptLexer = function PostScriptLexerClosure() {\\n  function PostScriptLexer(stream) {\\n    this.stream = stream;\\n    this.nextChar();\\n    this.strBuf = [];\\n  }\\n  PostScriptLexer.prototype = {\\n    nextChar: function PostScriptLexer_nextChar() {\\n      return this.currentChar = this.stream.getByte();\\n    },\\n    getToken: function PostScriptLexer_getToken() {\\n      var comment = false;\\n      var ch = this.currentChar;\\n      while (true) {\\n        if (ch < 0) {\\n          return _primitives.EOF;\\n        }\\n        if (comment) {\\n          if (ch === 0x0A || ch === 0x0D) {\\n            comment = false;\\n          }\\n        } else if (ch === 0x25) {\\n          comment = true;\\n        } else if (!(0, _util.isSpace)(ch)) {\\n          break;\\n        }\\n        ch = this.nextChar();\\n      }\\n      switch (ch | 0) {\\n        case 0x30:\\n        case 0x31:\\n        case 0x32:\\n        case 0x33:\\n        case 0x34:\\n        case 0x35:\\n        case 0x36:\\n        case 0x37:\\n        case 0x38:\\n        case 0x39:\\n        case 0x2B:\\n        case 0x2D:\\n        case 0x2E:\\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\\n        case 0x7B:\\n          this.nextChar();\\n          return PostScriptToken.LBRACE;\\n        case 0x7D:\\n          this.nextChar();\\n          return PostScriptToken.RBRACE;\\n      }\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      strBuf[0] = String.fromCharCode(ch);\\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\\n        strBuf.push(String.fromCharCode(ch));\\n      }\\n      var str = strBuf.join('');\\n      switch (str.toLowerCase()) {\\n        case 'if':\\n          return PostScriptToken.IF;\\n        case 'ifelse':\\n          return PostScriptToken.IFELSE;\\n        default:\\n          return PostScriptToken.getOperator(str);\\n      }\\n    },\\n    getNumber: function PostScriptLexer_getNumber() {\\n      var ch = this.currentChar;\\n      var strBuf = this.strBuf;\\n      strBuf.length = 0;\\n      strBuf[0] = String.fromCharCode(ch);\\n      while ((ch = this.nextChar()) >= 0) {\\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\\n          strBuf.push(String.fromCharCode(ch));\\n        } else {\\n          break;\\n        }\\n      }\\n      var value = parseFloat(strBuf.join(''));\\n      if (isNaN(value)) {\\n        throw new _util.FormatError('Invalid floating point number: ' + value);\\n      }\\n      return value;\\n    }\\n  };\\n  return PostScriptLexer;\\n}();\\nexports.PostScriptLexer = PostScriptLexer;\\nexports.PostScriptParser = PostScriptParser;\\n\\n/***/ }),\\n/* 145 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.MurmurHash3_64 = undefined;\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\\n  var MASK_HIGH = 0xffff0000;\\n  var MASK_LOW = 0xffff;\\n  function MurmurHash3_64(seed) {\\n    var SEED = 0xc3d2e1f0;\\n    this.h1 = seed ? seed & 0xffffffff : SEED;\\n    this.h2 = seed ? seed & 0xffffffff : SEED;\\n  }\\n  MurmurHash3_64.prototype = {\\n    update: function MurmurHash3_64_update(input) {\\n      var data = void 0,\\n          length = void 0;\\n      if ((0, _util.isString)(input)) {\\n        data = new Uint8Array(input.length * 2);\\n        length = 0;\\n        for (var i = 0, ii = input.length; i < ii; i++) {\\n          var code = input.charCodeAt(i);\\n          if (code <= 0xff) {\\n            data[length++] = code;\\n          } else {\\n            data[length++] = code >>> 8;\\n            data[length++] = code & 0xff;\\n          }\\n        }\\n      } else if ((0, _util.isArrayBuffer)(input)) {\\n        data = input;\\n        length = data.byteLength;\\n      } else {\\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\\n      }\\n      var blockCounts = length >> 2;\\n      var tailLength = length - blockCounts * 4;\\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\\n      var k1 = 0;\\n      var k2 = 0;\\n      var h1 = this.h1;\\n      var h2 = this.h2;\\n      var C1 = 0xcc9e2d51;\\n      var C2 = 0x1b873593;\\n      var C1_LOW = C1 & MASK_LOW;\\n      var C2_LOW = C2 & MASK_LOW;\\n      for (var _i = 0; _i < blockCounts; _i++) {\\n        if (_i & 1) {\\n          k1 = dataUint32[_i];\\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\n          k1 = k1 << 15 | k1 >>> 17;\\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\n          h1 ^= k1;\\n          h1 = h1 << 13 | h1 >>> 19;\\n          h1 = h1 * 5 + 0xe6546b64;\\n        } else {\\n          k2 = dataUint32[_i];\\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\\n          k2 = k2 << 15 | k2 >>> 17;\\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\\n          h2 ^= k2;\\n          h2 = h2 << 13 | h2 >>> 19;\\n          h2 = h2 * 5 + 0xe6546b64;\\n        }\\n      }\\n      k1 = 0;\\n      switch (tailLength) {\\n        case 3:\\n          k1 ^= data[blockCounts * 4 + 2] << 16;\\n        case 2:\\n          k1 ^= data[blockCounts * 4 + 1] << 8;\\n        case 1:\\n          k1 ^= data[blockCounts * 4];\\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\n          k1 = k1 << 15 | k1 >>> 17;\\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\n          if (blockCounts & 1) {\\n            h1 ^= k1;\\n          } else {\\n            h2 ^= k1;\\n          }\\n      }\\n      this.h1 = h1;\\n      this.h2 = h2;\\n      return this;\\n    },\\n    hexdigest: function MurmurHash3_64_hexdigest() {\\n      var h1 = this.h1;\\n      var h2 = this.h2;\\n      h1 ^= h2 >>> 1;\\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\\n      h1 ^= h2 >>> 1;\\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\\n      h1 ^= h2 >>> 1;\\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\\n        var hex = (arr[i] >>> 0).toString(16);\\n        while (hex.length < 8) {\\n          hex = '0' + hex;\\n        }\\n        str += hex;\\n      }\\n      return str;\\n    }\\n  };\\n  return MurmurHash3_64;\\n}();\\nexports.MurmurHash3_64 = MurmurHash3_64;\\n\\n/***/ }),\\n/* 146 */\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.PDFImage = undefined;\\n\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\n\\nvar _util = __w_pdfjs_require__(0);\\n\\nvar _primitives = __w_pdfjs_require__(1);\\n\\nvar _colorspace = __w_pdfjs_require__(20);\\n\\nvar _stream = __w_pdfjs_require__(2);\\n\\nvar _jpeg_stream = __w_pdfjs_require__(41);\\n\\nvar _jpx = __w_pdfjs_require__(67);\\n\\nvar PDFImage = function PDFImageClosure() {\\n  function handleImageData(image, nativeDecoder) {\\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\\n      return nativeDecoder.decode(image);\\n    }\\n    return Promise.resolve(image);\\n  }\\n  function decodeAndClamp(value, addend, coefficient, max) {\\n    value = addend + value * coefficient;\\n    return value < 0 ? 0 : value > max ? max : value;\\n  }\\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\\n    var length = w2 * h2;\\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\n    var xRatio = w1 / w2;\\n    var yRatio = h1 / h2;\\n    var i,\\n        j,\\n        py,\\n        newIndex = 0,\\n        oldIndex;\\n    var xScaled = new Uint16Array(w2);\\n    var w1Scanline = w1;\\n    for (i = 0; i < w2; i++) {\\n      xScaled[i] = Math.floor(i * xRatio);\\n    }\\n    for (i = 0; i < h2; i++) {\\n      py = Math.floor(i * yRatio) * w1Scanline;\\n      for (j = 0; j < w2; j++) {\\n        oldIndex = py + xScaled[j];\\n        dest[newIndex++] = src[oldIndex];\\n      }\\n    }\\n    return dest;\\n  }\\n  function PDFImage(_ref) {\\n    var xref = _ref.xref,\\n        res = _ref.res,\\n        image = _ref.image,\\n        _ref$isInline = _ref.isInline,\\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\\n        _ref$smask = _ref.smask,\\n        smask = _ref$smask === undefined ? null : _ref$smask,\\n        _ref$mask = _ref.mask,\\n        mask = _ref$mask === undefined ? null : _ref$mask,\\n        _ref$isMask = _ref.isMask,\\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\n\\n    this.image = image;\\n    var dict = image.dict;\\n    if (dict.has('Filter')) {\\n      var filter = dict.get('Filter').name;\\n      if (filter === 'JPXDecode') {\\n        var jpxImage = new _jpx.JpxImage();\\n        jpxImage.parseImageProperties(image.stream);\\n        image.stream.reset();\\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\\n        image.numComps = jpxImage.componentsCount;\\n      } else if (filter === 'JBIG2Decode') {\\n        image.bitsPerComponent = 1;\\n        image.numComps = 1;\\n      }\\n    }\\n    this.width = dict.get('Width', 'W');\\n    this.height = dict.get('Height', 'H');\\n    if (this.width < 1 || this.height < 1) {\\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\\n    }\\n    this.interpolate = dict.get('Interpolate', 'I') || false;\\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\\n    this.matte = dict.get('Matte') || false;\\n    var bitsPerComponent = image.bitsPerComponent;\\n    if (!bitsPerComponent) {\\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\\n      if (!bitsPerComponent) {\\n        if (this.imageMask) {\\n          bitsPerComponent = 1;\\n        } else {\\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\\n        }\\n      }\\n    }\\n    this.bpc = bitsPerComponent;\\n    if (!this.imageMask) {\\n      var colorSpace = dict.get('ColorSpace', 'CS');\\n      if (!colorSpace) {\\n        (0, _util.info)('JPX images (which do not require color spaces)');\\n        switch (image.numComps) {\\n          case 1:\\n            colorSpace = _primitives.Name.get('DeviceGray');\\n            break;\\n          case 3:\\n            colorSpace = _primitives.Name.get('DeviceRGB');\\n            break;\\n          case 4:\\n            colorSpace = _primitives.Name.get('DeviceCMYK');\\n            break;\\n          default:\\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\\n        }\\n      }\\n      var resources = isInline ? res : null;\\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\\n      this.numComps = this.colorSpace.numComps;\\n    }\\n    this.decode = dict.getArray('Decode', 'D');\\n    this.needsDecode = false;\\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\\n      this.needsDecode = true;\\n      var max = (1 << bitsPerComponent) - 1;\\n      this.decodeCoefficients = [];\\n      this.decodeAddends = [];\\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\\n        var dmin = this.decode[i];\\n        var dmax = this.decode[i + 1];\\n        this.decodeCoefficients[j] = dmax - dmin;\\n        this.decodeAddends[j] = max * dmin;\\n      }\\n    }\\n    if (smask) {\\n      this.smask = new PDFImage({\\n        xref: xref,\\n        res: res,\\n        image: smask,\\n        isInline: isInline,\\n        pdfFunctionFactory: pdfFunctionFactory\\n      });\\n    } else if (mask) {\\n      if ((0, _primitives.isStream)(mask)) {\\n        var maskDict = mask.dict,\\n            imageMask = maskDict.get('ImageMask', 'IM');\\n        if (!imageMask) {\\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\\n        } else {\\n          this.mask = new PDFImage({\\n            xref: xref,\\n            res: res,\\n            image: mask,\\n            isInline: isInline,\\n            isMask: true,\\n            pdfFunctionFactory: pdfFunctionFactory\\n          });\\n        }\\n      } else {\\n        this.mask = mask;\\n      }\\n    }\\n  }\\n  PDFImage.buildImage = function (_ref2) {\\n    var handler = _ref2.handler,\\n        xref = _ref2.xref,\\n        res = _ref2.res,\\n        image = _ref2.image,\\n        _ref2$isInline = _ref2.isInline,\\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\\n\\n    var imagePromise = handleImageData(image, nativeDecoder);\\n    var smaskPromise;\\n    var maskPromise;\\n    var smask = image.dict.get('SMask');\\n    var mask = image.dict.get('Mask');\\n    if (smask) {\\n      smaskPromise = handleImageData(smask, nativeDecoder);\\n      maskPromise = Promise.resolve(null);\\n    } else {\\n      smaskPromise = Promise.resolve(null);\\n      if (mask) {\\n        if ((0, _primitives.isStream)(mask)) {\\n          maskPromise = handleImageData(mask, nativeDecoder);\\n        } else if (Array.isArray(mask)) {\\n          maskPromise = Promise.resolve(mask);\\n        } else {\\n          (0, _util.warn)('Unsupported mask format.');\\n          maskPromise = Promise.resolve(null);\\n        }\\n      } else {\\n        maskPromise = Promise.resolve(null);\\n      }\\n    }\\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\\n      var _ref4 = _slicedToArray(_ref3, 3),\\n          imageData = _ref4[0],\\n          smaskData = _ref4[1],\\n          maskData = _ref4[2];\\n\\n      return new PDFImage({\\n        xref: xref,\\n        res: res,\\n        image: imageData,\\n        isInline: isInline,\\n        smask: smaskData,\\n        mask: maskData,\\n        pdfFunctionFactory: pdfFunctionFactory\\n      });\\n    });\\n  };\\n  PDFImage.createMask = function (_ref5) {\\n    var imgArray = _ref5.imgArray,\\n        width = _ref5.width,\\n        height = _ref5.height,\\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\\n        inverseDecode = _ref5.inverseDecode;\\n\\n    var computedLength = (width + 7 >> 3) * height;\\n    var actualLength = imgArray.byteLength;\\n    var haveFullData = computedLength === actualLength;\\n    var data, i;\\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\\n      data = imgArray;\\n    } else if (!inverseDecode) {\\n      data = new Uint8Array(actualLength);\\n      data.set(imgArray);\\n    } else {\\n      data = new Uint8Array(computedLength);\\n      data.set(imgArray);\\n      for (i = actualLength; i < computedLength; i++) {\\n        data[i] = 0xff;\\n      }\\n    }\\n    if (inverseDecode) {\\n      for (i = 0; i < actualLength; i++) {\\n        data[i] ^= 0xFF;\\n      }\\n    }\\n    return {\\n      data: data,\\n      width: width,\\n      height: height\\n    };\\n  };\\n  PDFImage.prototype = {\\n    get drawWidth() {\\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\\n    },\\n    get drawHeight() {\\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\\n    },\\n    decodeBuffer: function decodeBuffer(buffer) {\\n      var bpc = this.bpc;\\n      var numComps = this.numComps;\\n      var decodeAddends = this.decodeAddends;\\n      var decodeCoefficients = this.decodeCoefficients;\\n      var max = (1 << bpc) - 1;\\n      var i, ii;\\n      if (bpc === 1) {\\n        for (i = 0, ii = buffer.length; i < ii; i++) {\\n          buffer[i] = +!buffer[i];\\n        }\\n        return;\\n      }\\n      var index = 0;\\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\\n        for (var j = 0; j < numComps; j++) {\\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\\n          index++;\\n        }\\n      }\\n    },\\n    getComponents: function getComponents(buffer) {\\n      var bpc = this.bpc;\\n      if (bpc === 8) {\\n        return buffer;\\n      }\\n      var width = this.width;\\n      var height = this.height;\\n      var numComps = this.numComps;\\n      var length = width * height * numComps;\\n      var bufferPos = 0;\\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\n      var rowComps = width * numComps;\\n      var max = (1 << bpc) - 1;\\n      var i = 0,\\n          ii,\\n          buf;\\n      if (bpc === 1) {\\n        var mask, loop1End, loop2End;\\n        for (var j = 0; j < height; j++) {\\n          loop1End = i + (rowComps & ~7);\\n          loop2End = i + rowComps;\\n          while (i < loop1End) {\\n            buf = buffer[bufferPos++];\\n            output[i] = buf >> 7 & 1;\\n            output[i + 1] = buf >> 6 & 1;\\n            output[i + 2] = buf >> 5 & 1;\\n            output[i + 3] = buf >> 4 & 1;\\n            output[i + 4] = buf >> 3 & 1;\\n            output[i + 5] = buf >> 2 & 1;\\n            output[i + 6] = buf >> 1 & 1;\\n            output[i + 7] = buf & 1;\\n            i += 8;\\n          }\\n          if (i < loop2End) {\\n            buf = buffer[bufferPos++];\\n            mask = 128;\\n            while (i < loop2End) {\\n              output[i++] = +!!(buf & mask);\\n              mask >>= 1;\\n            }\\n          }\\n        }\\n      } else {\\n        var bits = 0;\\n        buf = 0;\\n        for (i = 0, ii = length; i < ii; ++i) {\\n          if (i % rowComps === 0) {\\n            buf = 0;\\n            bits = 0;\\n          }\\n          while (bits < bpc) {\\n            buf = buf << 8 | buffer[bufferPos++];\\n            bits += 8;\\n          }\\n          var remainingBits = bits - bpc;\\n          var value = buf >> remainingBits;\\n          output[i] = value < 0 ? 0 : value > max ? max : value;\\n          buf = buf & (1 << remainingBits) - 1;\\n          bits = remainingBits;\\n        }\\n      }\\n      return output;\\n    },\\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\\n      var smask = this.smask;\\n      var mask = this.mask;\\n      var alphaBuf, sw, sh, i, ii, j;\\n      if (smask) {\\n        sw = smask.width;\\n        sh = smask.height;\\n        alphaBuf = new Uint8Array(sw * sh);\\n        smask.fillGrayBuffer(alphaBuf);\\n        if (sw !== width || sh !== height) {\\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\\n        }\\n      } else if (mask) {\\n        if (mask instanceof PDFImage) {\\n          sw = mask.width;\\n          sh = mask.height;\\n          alphaBuf = new Uint8Array(sw * sh);\\n          mask.numComps = 1;\\n          mask.fillGrayBuffer(alphaBuf);\\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\\n            alphaBuf[i] = 255 - alphaBuf[i];\\n          }\\n          if (sw !== width || sh !== height) {\\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\\n          }\\n        } else if (Array.isArray(mask)) {\\n          alphaBuf = new Uint8Array(width * height);\\n          var numComps = this.numComps;\\n          for (i = 0, ii = width * height; i < ii; ++i) {\\n            var opacity = 0;\\n            var imageOffset = i * numComps;\\n            for (j = 0; j < numComps; ++j) {\\n              var color = image[imageOffset + j];\\n              var maskOffset = j * 2;\\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\\n                opacity = 255;\\n                break;\\n              }\\n            }\\n            alphaBuf[i] = opacity;\\n          }\\n        } else {\\n          throw new _util.FormatError('Unknown mask format.');\\n        }\\n      }\\n      if (alphaBuf) {\\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\n          rgbaBuf[j] = alphaBuf[i];\\n        }\\n      } else {\\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\n          rgbaBuf[j] = 255;\\n        }\\n      }\\n    },\\n    undoPreblend: function undoPreblend(buffer, width, height) {\\n      var matte = this.smask && this.smask.matte;\\n      if (!matte) {\\n        return;\\n      }\\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\\n      var matteR = matteRgb[0];\\n      var matteG = matteRgb[1];\\n      var matteB = matteRgb[2];\\n      var length = width * height * 4;\\n      var r, g, b;\\n      for (var i = 0; i < length; i += 4) {\\n        var alpha = buffer[i + 3];\\n        if (alpha === 0) {\\n          buffer[i] = 255;\\n          buffer[i + 1] = 255;\\n          buffer[i + 2] = 255;\\n          continue;\\n        }\\n        var k = 255 / alpha;\\n        r = (buffer[i] - matteR) * k + matteR;\\n        g = (buffer[i + 1] - matteG) * k + matteG;\\n        b = (buffer[i + 2] - matteB) * k + matteB;\\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\\n      }\\n    },\\n    createImageData: function createImageData() {\\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n\\n      var drawWidth = this.drawWidth;\\n      var drawHeight = this.drawHeight;\\n      var imgData = {\\n        width: drawWidth,\\n        height: drawHeight\\n      };\\n      var numComps = this.numComps;\\n      var originalWidth = this.width;\\n      var originalHeight = this.height;\\n      var bpc = this.bpc;\\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\\n      var imgArray;\\n      if (!forceRGBA) {\\n        var kind;\\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\\n          kind = _util.ImageKind.RGB_24BPP;\\n        }\\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\\n          imgData.kind = kind;\\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\\n          if (this.image instanceof _stream.DecodeStream) {\\n            imgData.data = imgArray;\\n          } else {\\n            var newArray = new Uint8Array(imgArray.length);\\n            newArray.set(imgArray);\\n            imgData.data = newArray;\\n          }\\n          if (this.needsDecode) {\\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\\n            var buffer = imgData.data;\\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\\n              buffer[i] ^= 0xff;\\n            }\\n          }\\n          return imgData;\\n        }\\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\\n          var imageLength = originalHeight * rowBytes;\\n          switch (this.colorSpace.name) {\\n            case 'DeviceGray':\\n              imageLength *= 3;\\n            case 'DeviceRGB':\\n            case 'DeviceCMYK':\\n              imgData.kind = _util.ImageKind.RGB_24BPP;\\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\\n              return imgData;\\n          }\\n        }\\n      }\\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\\n      var comps = this.getComponents(imgArray);\\n      var alpha01, maybeUndoPreblend;\\n      if (!forceRGBA && !this.smask && !this.mask) {\\n        imgData.kind = _util.ImageKind.RGB_24BPP;\\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\\n        alpha01 = 0;\\n        maybeUndoPreblend = false;\\n      } else {\\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\\n        alpha01 = 1;\\n        maybeUndoPreblend = true;\\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\\n      }\\n      if (this.needsDecode) {\\n        this.decodeBuffer(comps);\\n      }\\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\\n      if (maybeUndoPreblend) {\\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\\n      }\\n      return imgData;\\n    },\\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\\n      var numComps = this.numComps;\\n      if (numComps !== 1) {\\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\\n      }\\n      var width = this.width;\\n      var height = this.height;\\n      var bpc = this.bpc;\\n      var rowBytes = width * numComps * bpc + 7 >> 3;\\n      var imgArray = this.getImageBytes(height * rowBytes);\\n      var comps = this.getComponents(imgArray);\\n      var i, length;\\n      if (bpc === 1) {\\n        length = width * height;\\n        if (this.needsDecode) {\\n          for (i = 0; i < length; ++i) {\\n            buffer[i] = comps[i] - 1 & 255;\\n          }\\n        } else {\\n          for (i = 0; i < length; ++i) {\\n            buffer[i] = -comps[i] & 255;\\n          }\\n        }\\n        return;\\n      }\\n      if (this.needsDecode) {\\n        this.decodeBuffer(comps);\\n      }\\n      length = width * height;\\n      var scale = 255 / ((1 << bpc) - 1);\\n      for (i = 0; i < length; ++i) {\\n        buffer[i] = scale * comps[i] | 0;\\n      }\\n    },\\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\\n\\n      this.image.reset();\\n      this.image.drawWidth = drawWidth || this.width;\\n      this.image.drawHeight = drawHeight || this.height;\\n      this.image.forceRGB = !!forceRGB;\\n      return this.image.getBytes(length);\\n    }\\n  };\\n  return PDFImage;\\n}();\\nexports.PDFImage = PDFImage;\\n\\n/***/ })\\n/******/ ]);\\n});\\n//# sourceMappingURL=pdf.worker.js.map\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{\"./node_modules/pdfjs-dist/build/pdf.worker.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/pdfjs-dist/build/pdf.worker.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */function(e,t,r){(function(t,r,a){var i;\"undefined\"!=typeof self&&self,i=function(){return function(e){var t={};function r(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=73)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.unreachable=t.warn=t.utf8StringToString=t.stringToUTF8String=t.stringToPDFString=t.stringToBytes=t.string32=t.shadow=t.setVerbosityLevel=t.ReadableStream=t.removeNullCharacters=t.readUint32=t.readUint16=t.readInt8=t.log2=t.loadJpegStream=t.isEvalSupported=t.isLittleEndian=t.createValidAbsoluteUrl=t.isSameOrigin=t.isSpace=t.isString=t.isNum=t.isEmptyObj=t.isBool=t.isArrayBuffer=t.info=t.getVerbosityLevel=t.getLookupTableFactory=t.deprecated=t.createObjectURL=t.createPromiseCapability=t.createBlob=t.bytesToString=t.assert=t.arraysToBytes=t.arrayByteLength=t.FormatError=t.XRefParseException=t.Util=t.UnknownErrorException=t.UnexpectedResponseException=t.TextRenderingMode=t.StreamType=t.PasswordResponses=t.PasswordException=t.PageViewport=t.NotImplementedException=t.NativeImageDecoding=t.MissingPDFException=t.MissingDataException=t.MessageHandler=t.InvalidPDFException=t.AbortException=t.CMapCompressionType=t.ImageKind=t.FontType=t.AnnotationType=t.AnnotationFlag=t.AnnotationFieldFlag=t.AnnotationBorderStyleType=t.UNSUPPORTED_FEATURES=t.VERBOSITY_LEVELS=t.OPS=t.IDENTITY_MATRIX=t.FONT_IDENTITY_MATRIX=void 0;var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};r(75);var i=r(125),n={errors:0,warnings:1,infos:5},o=n.warnings;function s(e){o>=n.warnings&&console.log(\"Warning: \"+e)}function c(e){throw new Error(e)}function l(e,t){e||c(t)}var u=function(){function e(e,t){this.name=\"PasswordException\",this.message=e,this.code=t}return e.prototype=new Error,e.constructor=e,e}(),h=function(){function e(e,t){this.name=\"UnknownErrorException\",this.message=e,this.details=t}return e.prototype=new Error,e.constructor=e,e}(),f=function(){function e(e){this.name=\"InvalidPDFException\",this.message=e}return e.prototype=new Error,e.constructor=e,e}(),d=function(){function e(e){this.name=\"MissingPDFException\",this.message=e}return e.prototype=new Error,e.constructor=e,e}(),g=function(){function e(e,t){this.name=\"UnexpectedResponseException\",this.message=e,this.status=t}return e.prototype=new Error,e.constructor=e,e}(),m=function(){function e(e){this.message=e}return e.prototype=new Error,e.prototype.name=\"NotImplementedException\",e.constructor=e,e}(),p=function(){function e(e,t){this.begin=e,this.end=t,this.message=\"Missing data [\"+e+\", \"+t+\")\"}return e.prototype=new Error,e.prototype.name=\"MissingDataException\",e.constructor=e,e}(),b=function(){function e(e){this.message=e}return e.prototype=new Error,e.prototype.name=\"XRefParseException\",e.constructor=e,e}(),v=function(){function e(e){this.message=e}return e.prototype=new Error,e.prototype.name=\"FormatError\",e.constructor=e,e}(),y=function(){function e(e){this.name=\"AbortException\",this.message=e}return e.prototype=new Error,e.constructor=e,e}(),w=/\\x00/g;function k(e){l(\"string\"==typeof e,\"Invalid argument for stringToBytes\");for(var t=e.length,r=new Uint8Array(t),a=0;a<t;++a)r[a]=255&e.charCodeAt(a);return r}function S(e){return void 0!==e.length?e.length:(l(void 0!==e.byteLength),e.byteLength)}var C=function(){function e(){}var t=[\"rgb(\",0,\",\",0,\",\",0,\")\"];e.makeCssRgb=function(e,r,a){return t[1]=e,t[3]=r,t[5]=a,t.join(\"\")},e.transform=function(e,t){return[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]]},e.applyTransform=function(e,t){return[e[0]*t[0]+e[1]*t[2]+t[4],e[0]*t[1]+e[1]*t[3]+t[5]]},e.applyInverseTransform=function(e,t){var r=t[0]*t[3]-t[1]*t[2];return[(e[0]*t[3]-e[1]*t[2]+t[2]*t[5]-t[4]*t[3])/r,(-e[0]*t[1]+e[1]*t[0]+t[4]*t[1]-t[5]*t[0])/r]},e.getAxialAlignedBoundingBox=function(t,r){var a=e.applyTransform(t,r),i=e.applyTransform(t.slice(2,4),r),n=e.applyTransform([t[0],t[3]],r),o=e.applyTransform([t[2],t[1]],r);return[Math.min(a[0],i[0],n[0],o[0]),Math.min(a[1],i[1],n[1],o[1]),Math.max(a[0],i[0],n[0],o[0]),Math.max(a[1],i[1],n[1],o[1])]},e.inverseTransform=function(e){var t=e[0]*e[3]-e[1]*e[2];return[e[3]/t,-e[1]/t,-e[2]/t,e[0]/t,(e[2]*e[5]-e[4]*e[3])/t,(e[4]*e[1]-e[5]*e[0])/t]},e.apply3dTransform=function(e,t){return[e[0]*t[0]+e[1]*t[1]+e[2]*t[2],e[3]*t[0]+e[4]*t[1]+e[5]*t[2],e[6]*t[0]+e[7]*t[1]+e[8]*t[2]]},e.singularValueDecompose2dScale=function(e){var t=[e[0],e[2],e[1],e[3]],r=e[0]*t[0]+e[1]*t[2],a=e[0]*t[1]+e[1]*t[3],i=e[2]*t[0]+e[3]*t[2],n=e[2]*t[1]+e[3]*t[3],o=(r+n)/2,s=Math.sqrt((r+n)*(r+n)-4*(r*n-i*a))/2,c=o+s||1,l=o-s||1;return[Math.sqrt(c),Math.sqrt(l)]},e.normalizeRect=function(e){var t=e.slice(0);return e[0]>e[2]&&(t[0]=e[2],t[2]=e[0]),e[1]>e[3]&&(t[1]=e[3],t[3]=e[1]),t},e.intersect=function(t,r){function a(e,t){return e-t}var i=[t[0],t[2],r[0],r[2]].sort(a),n=[t[1],t[3],r[1],r[3]].sort(a),o=[];return t=e.normalizeRect(t),r=e.normalizeRect(r),(i[0]===t[0]&&i[1]===r[0]||i[0]===r[0]&&i[1]===t[0])&&(o[0]=i[1],o[2]=i[2],(n[0]===t[1]&&n[1]===r[1]||n[0]===r[1]&&n[1]===t[1])&&(o[1]=n[1],o[3]=n[2],o))};var r=[\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"];return e.toRoman=function(e,t){l(Number.isInteger(e)&&e>0,\"The number should be a positive integer.\");for(var a,i=[];e>=1e3;)e-=1e3,i.push(\"M\");a=e/100|0,e%=100,i.push(r[a]),a=e/10|0,e%=10,i.push(r[10+a]),i.push(r[20+e]);var n=i.join(\"\");return t?n.toLowerCase():n},e.appendToArray=function(e,t){Array.prototype.push.apply(e,t)},e.prependToArray=function(e,t){Array.prototype.unshift.apply(e,t)},e.extendObj=function(e,t){for(var r in t)e[r]=t[r]},e.getInheritableProperty=function(e,t,r){for(;e&&!e.has(t);)e=e.get(\"Parent\");return e?r?e.getArray(t):e.get(t):null},e.inherit=function(e,t,r){for(var a in e.prototype=Object.create(t.prototype),e.prototype.constructor=e,r)e.prototype[a]=r[a]},e.loadScript=function(e,t){var r=document.createElement(\"script\"),a=!1;r.setAttribute(\"src\",e),t&&(r.onload=function(){a||t(),a=!0}),document.getElementsByTagName(\"head\")[0].appendChild(r)},e}(),x=function(){function e(e,t,r,a,i,n){this.viewBox=e,this.scale=t,this.rotation=r,this.offsetX=a,this.offsetY=i;var o,s,c,l,u,h,f,d,g=(e[2]+e[0])/2,m=(e[3]+e[1])/2;switch(r=(r%=360)<0?r+360:r){case 180:o=-1,s=0,c=0,l=1;break;case 90:o=0,s=1,c=1,l=0;break;case 270:o=0,s=-1,c=-1,l=0;break;default:o=1,s=0,c=0,l=-1}n&&(c=-c,l=-l),0===o?(u=Math.abs(m-e[1])*t+a,h=Math.abs(g-e[0])*t+i,f=Math.abs(e[3]-e[1])*t,d=Math.abs(e[2]-e[0])*t):(u=Math.abs(g-e[0])*t+a,h=Math.abs(m-e[1])*t+i,f=Math.abs(e[2]-e[0])*t,d=Math.abs(e[3]-e[1])*t),this.transform=[o*t,s*t,c*t,l*t,u-o*t*g-c*t*m,h-s*t*g-l*t*m],this.width=f,this.height=d,this.fontScale=t}return e.prototype={clone:function(t){var r=\"scale\"in(t=t||{})?t.scale:this.scale,a=\"rotation\"in t?t.rotation:this.rotation;return new e(this.viewBox.slice(),r,a,this.offsetX,this.offsetY,t.dontFlip)},convertToViewportPoint:function(e,t){return C.applyTransform([e,t],this.transform)},convertToViewportRectangle:function(e){var t=C.applyTransform([e[0],e[1]],this.transform),r=C.applyTransform([e[2],e[3]],this.transform);return[t[0],t[1],r[0],r[1]]},convertToPdfPoint:function(e,t){return C.applyInverseTransform([e,t],this.transform)}},e}(),A=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];function _(){var e={};return e.promise=new Promise(function(t,r){e.resolve=t,e.reject=r}),e}var P,I=function(e,t){if(\"undefined\"!=typeof Blob)return new Blob([e],{type:t});throw new Error('The \"Blob\" constructor is not supported.')},T=(P=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!r&&URL.createObjectURL){var a=I(e,t);return URL.createObjectURL(a)}for(var i=\"data:\"+t+\";base64,\",n=0,o=e.length;n<o;n+=3){var s=255&e[n],c=255&e[n+1],l=255&e[n+2],u=s>>2,h=(3&s)<<4|c>>4,f=n+1<o?(15&c)<<2|l>>6:64,d=n+2<o?63&l:64;i+=P[u]+P[h]+P[f]+P[d]}return i});function O(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return e?new Promise(function(a,i){a(e.apply(r,t))}):Promise.resolve(void 0)}function E(e){if(\"object\"!==(void 0===e?\"undefined\":a(e)))return e;switch(e.name){case\"AbortException\":return new y(e.message);case\"MissingPDFException\":return new d(e.message);case\"UnexpectedResponseException\":return new g(e.message,e.status);default:return new h(e.message,e.details)}}function F(e){return!(e instanceof Error)||e instanceof y||e instanceof d||e instanceof g||e instanceof h?e:new h(e.message,e.toString())}function R(e,t,r){t?e.resolve():e.reject(r)}function B(e,t,r){var a=this;this.sourceName=e,this.targetName=t,this.comObj=r,this.callbackId=1,this.streamId=1,this.postMessageTransfers=!0,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null);var i=this.callbacksCapabilities=Object.create(null),n=this.actionHandler=Object.create(null);this._onComObjOnMessage=function(e){var t=e.data;if(t.targetName===a.sourceName)if(t.stream)a._processStreamMessage(t);else if(t.isReply){var o=t.callbackId;if(!(t.callbackId in i))throw new Error(\"Cannot resolve callback \"+o);var s=i[o];delete i[o],\"error\"in t?s.reject(E(t.error)):s.resolve(t.data)}else{if(!(t.action in n))throw new Error(\"Unknown action from worker: \"+t.action);var c=n[t.action];if(t.callbackId){var l=a.sourceName,u=t.sourceName;Promise.resolve().then(function(){return c[0].call(c[1],t.data)}).then(function(e){r.postMessage({sourceName:l,targetName:u,isReply:!0,callbackId:t.callbackId,data:e})},function(e){r.postMessage({sourceName:l,targetName:u,isReply:!0,callbackId:t.callbackId,error:F(e)})})}else t.streamId?a._createStreamSink(t):c[0].call(c[1],t.data)}},r.addEventListener(\"message\",this._onComObjOnMessage)}B.prototype={on:function(e,t,r){var a=this.actionHandler;if(a[e])throw new Error('There is already an actionName called \"'+e+'\"');a[e]=[t,r]},send:function(e,t,r){var a={sourceName:this.sourceName,targetName:this.targetName,action:e,data:t};this.postMessage(a,r)},sendWithPromise:function(e,t,r){var a=this.callbackId++,i={sourceName:this.sourceName,targetName:this.targetName,action:e,data:t,callbackId:a},n=_();this.callbacksCapabilities[a]=n;try{this.postMessage(i,r)}catch(e){n.reject(e)}return n.promise},sendWithStream:function(e,t,r,a){var n=this,o=this.streamId++,s=this.sourceName,c=this.targetName;return new i.ReadableStream({start:function(r){var a=_();return n.streamControllers[o]={controller:r,startCall:a,isClosed:!1},n.postMessage({sourceName:s,targetName:c,action:e,streamId:o,data:t,desiredSize:r.desiredSize}),a.promise},pull:function(e){var t=_();return n.streamControllers[o].pullCall=t,n.postMessage({sourceName:s,targetName:c,stream:\"pull\",streamId:o,desiredSize:e.desiredSize}),t.promise},cancel:function(e){var t=_();return n.streamControllers[o].cancelCall=t,n.streamControllers[o].isClosed=!0,n.postMessage({sourceName:s,targetName:c,stream:\"cancel\",reason:e,streamId:o}),t.promise}},r)},_createStreamSink:function(e){var t=this,r=this,a=this.actionHandler[e.action],i=e.streamId,n=e.desiredSize,o=this.sourceName,s=e.sourceName,c=_(),l=function(e){var r=e.stream,a=e.chunk,n=e.transfers,c=e.success,l=e.reason;t.postMessage({sourceName:o,targetName:s,stream:r,streamId:i,chunk:a,success:c,reason:l},n)},u={enqueue:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments[2];if(!this.isCancelled){var a=this.desiredSize;this.desiredSize-=t,a>0&&this.desiredSize<=0&&(this.sinkCapability=_(),this.ready=this.sinkCapability.promise),l({stream:\"enqueue\",chunk:e,transfers:r})}},close:function(){this.isCancelled||(this.isCancelled=!0,l({stream:\"close\"}),delete r.streamSinks[i])},error:function(e){this.isCancelled||(this.isCancelled=!0,l({stream:\"error\",reason:e}))},sinkCapability:c,onPull:null,onCancel:null,isCancelled:!1,desiredSize:n,ready:null};u.sinkCapability.resolve(),u.ready=u.sinkCapability.promise,this.streamSinks[i]=u,O(a[0],[e.data,u],a[1]).then(function(){l({stream:\"start_complete\",success:!0})},function(e){l({stream:\"start_complete\",success:!1,reason:e})})},_processStreamMessage:function(e){var t=this,r=this.sourceName,a=e.sourceName,i=e.streamId,n=function(e){var n=e.stream,o=e.success,s=e.reason;t.comObj.postMessage({sourceName:r,targetName:a,stream:n,success:o,streamId:i,reason:s})},o=function(){Promise.all([t.streamControllers[e.streamId].startCall,t.streamControllers[e.streamId].pullCall,t.streamControllers[e.streamId].cancelCall].map(function(e){return e&&(t=e.promise,Promise.resolve(t).catch(function(){}));var t})).then(function(){delete t.streamControllers[e.streamId]})};switch(e.stream){case\"start_complete\":R(this.streamControllers[e.streamId].startCall,e.success,E(e.reason));break;case\"pull_complete\":R(this.streamControllers[e.streamId].pullCall,e.success,E(e.reason));break;case\"pull\":if(!this.streamSinks[e.streamId]){n({stream:\"pull_complete\",success:!0});break}this.streamSinks[e.streamId].desiredSize<=0&&e.desiredSize>0&&this.streamSinks[e.streamId].sinkCapability.resolve(),this.streamSinks[e.streamId].desiredSize=e.desiredSize,O(this.streamSinks[e.streamId].onPull).then(function(){n({stream:\"pull_complete\",success:!0})},function(e){n({stream:\"pull_complete\",success:!1,reason:e})});break;case\"enqueue\":l(this.streamControllers[e.streamId],\"enqueue should have stream controller\"),this.streamControllers[e.streamId].isClosed||this.streamControllers[e.streamId].controller.enqueue(e.chunk);break;case\"close\":if(l(this.streamControllers[e.streamId],\"close should have stream controller\"),this.streamControllers[e.streamId].isClosed)break;this.streamControllers[e.streamId].isClosed=!0,this.streamControllers[e.streamId].controller.close(),o();break;case\"error\":l(this.streamControllers[e.streamId],\"error should have stream controller\"),this.streamControllers[e.streamId].controller.error(E(e.reason)),o();break;case\"cancel_complete\":R(this.streamControllers[e.streamId].cancelCall,e.success,E(e.reason)),o();break;case\"cancel\":if(!this.streamSinks[e.streamId])break;O(this.streamSinks[e.streamId].onCancel,[E(e.reason)]).then(function(){n({stream:\"cancel_complete\",success:!0})},function(e){n({stream:\"cancel_complete\",success:!1,reason:e})}),this.streamSinks[e.streamId].sinkCapability.reject(E(e.reason)),this.streamSinks[e.streamId].isCancelled=!0,delete this.streamSinks[e.streamId];break;default:throw new Error(\"Unexpected stream case\")}},postMessage:function(e,t){t&&this.postMessageTransfers?this.comObj.postMessage(e,t):this.comObj.postMessage(e)},destroy:function(){this.comObj.removeEventListener(\"message\",this._onComObjOnMessage)}},t.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0],t.IDENTITY_MATRIX=[1,0,0,1,0,0],t.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotations:78,endAnnotations:79,beginAnnotation:80,endAnnotation:81,paintJpegXObject:82,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91},t.VERBOSITY_LEVELS=n,t.UNSUPPORTED_FEATURES={unknown:\"unknown\",forms:\"forms\",javaScript:\"javaScript\",smask:\"smask\",shadingPattern:\"shadingPattern\",font:\"font\"},t.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},t.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864},t.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512},t.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},t.FontType={UNKNOWN:0,TYPE1:1,TYPE1C:2,CIDFONTTYPE0:3,CIDFONTTYPE0C:4,TRUETYPE:5,CIDFONTTYPE2:6,TYPE3:7,OPENTYPE:8,TYPE0:9,MMTYPE1:10},t.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},t.CMapCompressionType={NONE:0,BINARY:1,STREAM:2},t.AbortException=y,t.InvalidPDFException=f,t.MessageHandler=B,t.MissingDataException=p,t.MissingPDFException=d,t.NativeImageDecoding={NONE:\"none\",DECODE:\"decode\",DISPLAY:\"display\"},t.NotImplementedException=m,t.PageViewport=x,t.PasswordException=u,t.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2},t.StreamType={UNKNOWN:0,FLATE:1,LZW:2,DCT:3,JPX:4,JBIG:5,A85:6,AHX:7,CCF:8,RL:9},t.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},t.UnexpectedResponseException=g,t.UnknownErrorException=h,t.Util=C,t.XRefParseException=b,t.FormatError=v,t.arrayByteLength=S,t.arraysToBytes=function(e){if(1===e.length&&e[0]instanceof Uint8Array)return e[0];var t,r,a,i=0,n=e.length;for(t=0;t<n;t++)i+=a=S(r=e[t]);var o=0,s=new Uint8Array(i);for(t=0;t<n;t++)(r=e[t])instanceof Uint8Array||(r=\"string\"==typeof r?k(r):new Uint8Array(r)),a=r.byteLength,s.set(r,o),o+=a;return s},t.assert=l,t.bytesToString=function(e){l(null!==e&&\"object\"===(void 0===e?\"undefined\":a(e))&&void 0!==e.length,\"Invalid argument for bytesToString\");var t=e.length;if(t<8192)return String.fromCharCode.apply(null,e);for(var r=[],i=0;i<t;i+=8192){var n=Math.min(i+8192,t),o=e.subarray(i,n);r.push(String.fromCharCode.apply(null,o))}return r.join(\"\")},t.createBlob=I,t.createPromiseCapability=_,t.createObjectURL=T,t.deprecated=function(e){console.log(\"Deprecated API usage: \"+e)},t.getLookupTableFactory=function(e){var t;return function(){return e&&(t=Object.create(null),e(t),e=null),t}},t.getVerbosityLevel=function(){return o},t.info=function(e){o>=n.infos&&console.log(\"Info: \"+e)},t.isArrayBuffer=function(e){return\"object\"===(void 0===e?\"undefined\":a(e))&&null!==e&&void 0!==e.byteLength},t.isBool=function(e){return\"boolean\"==typeof e},t.isEmptyObj=function(e){for(var t in e)return!1;return!0},t.isNum=function(e){return\"number\"==typeof e},t.isString=function(e){return\"string\"==typeof e},t.isSpace=function(e){return 32===e||9===e||13===e||10===e},t.isSameOrigin=function(e,t){try{var r=new URL(e);if(!r.origin||\"null\"===r.origin)return!1}catch(e){return!1}var a=new URL(t,r);return r.origin===a.origin},t.createValidAbsoluteUrl=function(e,t){if(!e)return null;try{var r=t?new URL(e,t):new URL(e);if(function(e){if(!e)return!1;switch(e.protocol){case\"http:\":case\"https:\":case\"ftp:\":case\"mailto:\":case\"tel:\":return!0;default:return!1}}(r))return r}catch(e){}return null},t.isLittleEndian=function(){var e=new Uint8Array(4);return e[0]=1,1===new Uint32Array(e.buffer,0,1)[0]},t.isEvalSupported=function(){try{return new Function(\"\"),!0}catch(e){return!1}},t.loadJpegStream=function(e,t,r){var a=new Image;a.onload=function(){r.resolve(e,a)},a.onerror=function(){r.resolve(e,null),s(\"Error during JPEG image loading\")},a.src=t},t.log2=function(e){return e<=0?0:Math.ceil(Math.log2(e))},t.readInt8=function(e,t){return e[t]<<24>>24},t.readUint16=function(e,t){return e[t]<<8|e[t+1]},t.readUint32=function(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0},t.removeNullCharacters=function(e){return\"string\"!=typeof e?(s(\"The argument for removeNullCharacters must be a string.\"),e):e.replace(w,\"\")},t.ReadableStream=i.ReadableStream,t.setVerbosityLevel=function(e){o=e},t.shadow=function(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!1}),r},t.string32=function(e){return String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e)},t.stringToBytes=k,t.stringToPDFString=function(e){var t,r=e.length,a=[];if(\"þ\"===e[0]&&\"ÿ\"===e[1])for(t=2;t<r;t+=2)a.push(String.fromCharCode(e.charCodeAt(t)<<8|e.charCodeAt(t+1)));else for(t=0;t<r;++t){var i=A[e.charCodeAt(t)];a.push(i?String.fromCharCode(i):e.charAt(t))}return a.join(\"\")},t.stringToUTF8String=function(e){return decodeURIComponent(escape(e))},t.utf8StringToString=function(e){return unescape(encodeURIComponent(e))},t.warn=s,t.unreachable=c},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i={},n=function(){function e(e){this.name=e}e.prototype={};var t=Object.create(null);return e.get=function(r){var a=t[r];return a||(t[r]=new e(r))},e}(),o=function(){function e(e){this.cmd=e}e.prototype={};var t=Object.create(null);return e.get=function(r){var a=t[r];return a||(t[r]=new e(r))},e}(),s=function(){var e=function(){return e};function t(t){this._map=Object.create(null),this.xref=t,this.objId=null,this.suppressEncryption=!1,this.__nonSerializable__=e}return t.prototype={assignXref:function(e){this.xref=e},get:function(e,t,r){var a,i=this.xref,n=this.suppressEncryption;return void 0!==(a=this._map[e])||e in this._map||void 0===t?i?i.fetchIfRef(a,n):a:void 0!==(a=this._map[t])||t in this._map||void 0===r?i?i.fetchIfRef(a,n):a:(a=this._map[r]||null,i?i.fetchIfRef(a,n):a)},getAsync:function(e,t,r){var a,i=this.xref,n=this.suppressEncryption;return void 0!==(a=this._map[e])||e in this._map||void 0===t?i?i.fetchIfRefAsync(a,n):Promise.resolve(a):void 0!==(a=this._map[t])||t in this._map||void 0===r?i?i.fetchIfRefAsync(a,n):Promise.resolve(a):(a=this._map[r]||null,i?i.fetchIfRefAsync(a,n):Promise.resolve(a))},getArray:function(e,t,r){var a=this.get(e,t,r),i=this.xref,n=this.suppressEncryption;if(!Array.isArray(a)||!i)return a;for(var o=0,s=(a=a.slice()).length;o<s;o++)d(a[o])&&(a[o]=i.fetch(a[o],n));return a},getRaw:function(e){return this._map[e]},getKeys:function(){return Object.keys(this._map)},set:function(e,t){this._map[e]=t},has:function(e){return e in this._map},forEach:function(e){for(var t in this._map)e(t,this.get(t))}},t.empty=new t(null),t.merge=function(e,r){for(var a=new t(e),i=0,n=r.length;i<n;i++){var o=r[i];if(f(o))for(var s in o._map)void 0===a._map[s]&&(a._map[s]=o._map[s])}return a},t}(),c=function(){function e(e,t){this.num=e,this.gen=t}return e.prototype={toString:function(){var e=this.num+\"R\";return 0!==this.gen&&(e+=this.gen),e}},e}(),l=function(){function e(){this.dict=Object.create(null)}return e.prototype={has:function(e){return e.toString()in this.dict},put:function(e){this.dict[e.toString()]=!0},remove:function(e){delete this.dict[e.toString()]}},e}(),u=function(){function e(){this.dict=Object.create(null)}return e.prototype={get:function(e){return this.dict[e.toString()]},has:function(e){return e.toString()in this.dict},put:function(e,t){this.dict[e.toString()]=t},putAlias:function(e,t){this.dict[e.toString()]=this.get(t)},forEach:function(e,t){for(var r in this.dict)e.call(t,this.dict[r])},clear:function(){this.dict=Object.create(null)}},e}();function h(e,t){return e instanceof n&&(void 0===t||e.name===t)}function f(e,t){return e instanceof s&&(void 0===t||h(e.get(\"Type\"),t))}function d(e){return e instanceof c}t.EOF=i,t.Cmd=o,t.Dict=s,t.Name=n,t.Ref=c,t.RefSet=l,t.RefSetCache=u,t.isEOF=function(e){return e===i},t.isCmd=function(e,t){return e instanceof o&&(void 0===t||e.cmd===t)},t.isDict=f,t.isName=h,t.isRef=d,t.isRefsEqual=function(e,t){return e.num===t.num&&e.gen===t.gen},t.isStream=function(e){return\"object\"===(void 0===e?\"undefined\":a(e))&&null!==e&&void 0!==e.getBytes}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.LZWStream=t.StringStream=t.StreamsSequenceStream=t.Stream=t.RunLengthStream=t.PredictorStream=t.NullStream=t.FlateStream=t.DecodeStream=t.DecryptStream=t.AsciiHexStream=t.Ascii85Stream=void 0;var a=r(0),i=r(1),n=function(){function e(e,t,r,a){this.bytes=e instanceof Uint8Array?e:new Uint8Array(e),this.start=t||0,this.pos=this.start,this.end=t+r||this.bytes.length,this.dict=a}return e.prototype={get length(){return this.end-this.start},get isEmpty(){return 0===this.length},getByte:function(){return this.pos>=this.end?-1:this.bytes[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t=this.bytes,r=this.pos,a=this.end;if(!e)return t.subarray(r,a);var i=r+e;return i>a&&(i=a),this.pos=i,t.subarray(r,i)},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=this.getBytes(e);return this.pos-=t.length,t},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=this.start},moveStart:function(){this.start=this.pos},makeSubStream:function(t,r,a){return new e(this.bytes.buffer,t,r,a)}},e}(),o=function(){function e(e){var t=(0,a.stringToBytes)(e);n.call(this,t)}return e.prototype=n.prototype,e}(),s=function(){var e=new Uint8Array(0);function t(t){if(this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=e,this.minBufferLength=512,t)for(;this.minBufferLength<t;)this.minBufferLength*=2}return t.prototype={get isEmpty(){for(;!this.eof&&0===this.bufferLength;)this.readBlock();return 0===this.bufferLength},ensureBuffer:function(e){var t=this.buffer;if(e<=t.byteLength)return t;for(var r=this.minBufferLength;r<e;)r*=2;var a=new Uint8Array(r);return a.set(t),this.buffer=a},getByte:function(){for(var e=this.pos;this.bufferLength<=e;){if(this.eof)return-1;this.readBlock()}return this.buffer[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t,r=this.pos;if(e){for(this.ensureBuffer(r+e),t=r+e;!this.eof&&this.bufferLength<t;)this.readBlock();var a=this.bufferLength;t>a&&(t=a)}else{for(;!this.eof;)this.readBlock();t=this.bufferLength}return this.pos=t,this.buffer.subarray(r,t)},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=this.getBytes(e);return this.pos-=t.length,t},makeSubStream:function(e,t,r){for(var a=e+t;this.bufferLength<=a&&!this.eof;)this.readBlock();return new n(this.buffer,e,t,r)},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=0},getBaseStreams:function(){return this.str&&this.str.getBaseStreams?this.str.getBaseStreams():[]}},t}(),c=function(){function e(e){this.streams=e,s.call(this,null)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e=this.streams;if(0!==e.length){var t=e.shift().getBytes(),r=this.bufferLength,a=r+t.length;this.ensureBuffer(a).set(t,r),this.bufferLength=a}else this.eof=!0},e.prototype.getBaseStreams=function(){for(var e=[],t=0,r=this.streams.length;t<r;t++){var i=this.streams[t];i.getBaseStreams&&a.Util.appendToArray(e,i.getBaseStreams())}return e},e}(),l=function(){var e=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),t=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),r=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),i=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],n=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];function o(e,t){this.str=e,this.dict=e.dict;var r=e.getByte(),i=e.getByte();if(-1===r||-1===i)throw new a.FormatError(\"Invalid header in flate stream: \"+r+\", \"+i);if(8!=(15&r))throw new a.FormatError(\"Unknown compression method in flate stream: \"+r+\", \"+i);if(((r<<8)+i)%31!=0)throw new a.FormatError(\"Bad FCHECK in flate stream: \"+r+\", \"+i);if(32&i)throw new a.FormatError(\"FDICT bit set in flate stream: \"+r+\", \"+i);this.codeSize=0,this.codeBuf=0,s.call(this,t)}return o.prototype=Object.create(s.prototype),o.prototype.getBits=function(e){for(var t,r=this.str,i=this.codeSize,n=this.codeBuf;i<e;){if(-1===(t=r.getByte()))throw new a.FormatError(\"Bad encoding in flate stream\");n|=t<<i,i+=8}return t=n&(1<<e)-1,this.codeBuf=n>>e,this.codeSize=i-=e,t},o.prototype.getCode=function(e){for(var t,r=this.str,i=e[0],n=e[1],o=this.codeSize,s=this.codeBuf;o<n&&-1!==(t=r.getByte());)s|=t<<o,o+=8;var c=i[s&(1<<n)-1],l=c>>16,u=65535&c;if(l<1||o<l)throw new a.FormatError(\"Bad encoding in flate stream\");return this.codeBuf=s>>l,this.codeSize=o-l,u},o.prototype.generateHuffmanTable=function(e){var t,r=e.length,a=0;for(t=0;t<r;++t)e[t]>a&&(a=e[t]);for(var i=1<<a,n=new Int32Array(i),o=1,s=0,c=2;o<=a;++o,s<<=1,c<<=1)for(var l=0;l<r;++l)if(e[l]===o){var u=0,h=s;for(t=0;t<o;++t)u=u<<1|1&h,h>>=1;for(t=u;t<i;t+=c)n[t]=o<<16|l;++s}return[n,a]},o.prototype.readBlock=function(){var o,s,c=this.str,l=this.getBits(3);if(1&l&&(this.eof=!0),0!==(l>>=1)){var u,h;if(1===l)u=i,h=n;else{if(2!==l)throw new a.FormatError(\"Unknown block type in flate stream\");var f,d=this.getBits(5)+257,g=this.getBits(5)+1,m=this.getBits(4)+4,p=new Uint8Array(e.length);for(f=0;f<m;++f)p[e[f]]=this.getBits(3);var b=this.generateHuffmanTable(p);s=0,f=0;for(var v,y,w,k=d+g,S=new Uint8Array(k);f<k;){var C=this.getCode(b);if(16===C)v=2,y=3,w=s;else if(17===C)v=3,y=3,w=s=0;else{if(18!==C){S[f++]=s=C;continue}v=7,y=11,w=s=0}for(var x=this.getBits(v)+y;x-- >0;)S[f++]=w}u=this.generateHuffmanTable(S.subarray(0,d)),h=this.generateHuffmanTable(S.subarray(d,k))}for(var A=(o=this.buffer)?o.length:0,_=this.bufferLength;;){var P=this.getCode(u);if(P<256)_+1>=A&&(A=(o=this.ensureBuffer(_+1)).length),o[_++]=P;else{if(256===P)return void(this.bufferLength=_);var I=(P=t[P-=257])>>16;I>0&&(I=this.getBits(I)),s=(65535&P)+I,P=this.getCode(h),(I=(P=r[P])>>16)>0&&(I=this.getBits(I));var T=(65535&P)+I;_+s>=A&&(A=(o=this.ensureBuffer(_+s)).length);for(var O=0;O<s;++O,++_)o[_]=o[_-T]}}}else{var E;if(-1===(E=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");var F=E;if(-1===(E=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");if(F|=E<<8,-1===(E=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");var R=E;if(-1===(E=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");if((R|=E<<8)!==(65535&~F)&&(0!==F||0!==R))throw new a.FormatError(\"Bad uncompressed block length in flate stream\");this.codeBuf=0,this.codeSize=0;var B=this.bufferLength;o=this.ensureBuffer(B+F);var M=B+F;if(this.bufferLength=M,0===F)-1===c.peekByte()&&(this.eof=!0);else for(var D=B;D<M;++D){if(-1===(E=c.getByte())){this.eof=!0;break}o[D]=E}}},o}(),u=function(){function e(e,t,r){if(!(0,i.isDict)(r))return e;var n=this.predictor=r.get(\"Predictor\")||1;if(n<=1)return e;if(2!==n&&(n<10||n>15))throw new a.FormatError(\"Unsupported predictor: \"+n);this.readBlock=2===n?this.readBlockTiff:this.readBlockPng,this.str=e,this.dict=e.dict;var o=this.colors=r.get(\"Colors\")||1,c=this.bits=r.get(\"BitsPerComponent\")||8,l=this.columns=r.get(\"Columns\")||1;return this.pixBytes=o*c+7>>3,this.rowBytes=l*o*c+7>>3,s.call(this,t),this}return e.prototype=Object.create(s.prototype),e.prototype.readBlockTiff=function(){var e=this.rowBytes,t=this.bufferLength,r=this.ensureBuffer(t+e),a=this.bits,i=this.colors,n=this.str.getBytes(e);if(this.eof=!n.length,!this.eof){var o,s=0,c=0,l=0,u=0,h=t;if(1===a&&1===i)for(o=0;o<e;++o){var f=n[o]^s;f^=f>>1,f^=f>>2,s=(1&(f^=f>>4))<<7,r[h++]=f}else if(8===a){for(o=0;o<i;++o)r[h++]=n[o];for(;o<e;++o)r[h]=r[h-i]+n[o],h++}else if(16===a){var d=2*i;for(o=0;o<d;++o)r[h++]=n[o];for(;o<e;o+=2){var g=((255&n[o])<<8)+(255&n[o+1])+((255&r[h-d])<<8)+(255&r[h-d+1]);r[h++]=g>>8&255,r[h++]=255&g}}else{var m=new Uint8Array(i+1),p=(1<<a)-1,b=0,v=t,y=this.columns;for(o=0;o<y;++o)for(var w=0;w<i;++w)l<a&&(s=s<<8|255&n[b++],l+=8),m[w]=m[w]+(s>>l-a)&p,l-=a,c=c<<a|m[w],(u+=a)>=8&&(r[v++]=c>>u-8&255,u-=8);u>0&&(r[v++]=(c<<8-u)+(s&(1<<8-u)-1))}this.bufferLength+=e}},e.prototype.readBlockPng=function(){var e=this.rowBytes,t=this.pixBytes,r=this.str.getByte(),i=this.str.getBytes(e);if(this.eof=!i.length,!this.eof){var n=this.bufferLength,o=this.ensureBuffer(n+e),s=o.subarray(n-e,n);0===s.length&&(s=new Uint8Array(e));var c,l,u,h=n;switch(r){case 0:for(c=0;c<e;++c)o[h++]=i[c];break;case 1:for(c=0;c<t;++c)o[h++]=i[c];for(;c<e;++c)o[h]=o[h-t]+i[c]&255,h++;break;case 2:for(c=0;c<e;++c)o[h++]=s[c]+i[c]&255;break;case 3:for(c=0;c<t;++c)o[h++]=(s[c]>>1)+i[c];for(;c<e;++c)o[h]=(s[c]+o[h-t]>>1)+i[c]&255,h++;break;case 4:for(c=0;c<t;++c)l=s[c],u=i[c],o[h++]=l+u;for(;c<e;++c){l=s[c];var f=s[c-t],d=o[h-t],g=d+l-f,m=g-d;m<0&&(m=-m);var p=g-l;p<0&&(p=-p);var b=g-f;b<0&&(b=-b),u=i[c],o[h++]=m<=p&&m<=b?d+u:p<=b?l+u:f+u}break;default:throw new a.FormatError(\"Unsupported predictor: \"+r)}this.bufferLength+=e}},e}(),h=function(){function e(e,t,r){this.str=e,this.dict=e.dict,this.decrypt=r,this.nextChunk=null,this.initialized=!1,s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e;if(this.initialized?e=this.nextChunk:(e=this.str.getBytes(512),this.initialized=!0),e&&0!==e.length){this.nextChunk=this.str.getBytes(512);var t=this.nextChunk&&this.nextChunk.length>0;e=(0,this.decrypt)(e,!t);var r,a=this.bufferLength,i=e.length,n=this.ensureBuffer(a+i);for(r=0;r<i;r++)n[a++]=e[r];this.bufferLength=a}else this.eof=!0},e}(),f=function(){function e(e,t){this.str=e,this.dict=e.dict,this.input=new Uint8Array(5),t&&(t*=.8),s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){for(var e=this.str,t=e.getByte();(0,a.isSpace)(t);)t=e.getByte();if(-1!==t&&126!==t){var r,i,n=this.bufferLength;if(122===t){for(r=this.ensureBuffer(n+4),i=0;i<4;++i)r[n+i]=0;this.bufferLength+=4}else{var o=this.input;for(o[0]=t,i=1;i<5;++i){for(t=e.getByte();(0,a.isSpace)(t);)t=e.getByte();if(o[i]=t,-1===t||126===t)break}if(r=this.ensureBuffer(n+i-1),this.bufferLength+=i-1,i<5){for(;i<5;++i)o[i]=117;this.eof=!0}var s=0;for(i=0;i<5;++i)s=85*s+(o[i]-33);for(i=3;i>=0;--i)r[n+i]=255&s,s>>=8}}else this.eof=!0},e}(),d=function(){function e(e,t){this.str=e,this.dict=e.dict,this.firstDigit=-1,t&&(t*=.5),s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(8e3);if(e.length){for(var t=e.length+1>>1,r=this.ensureBuffer(this.bufferLength+t),a=this.bufferLength,i=this.firstDigit,n=0,o=e.length;n<o;n++){var s,c=e[n];if(c>=48&&c<=57)s=15&c;else{if(!(c>=65&&c<=70||c>=97&&c<=102)){if(62===c){this.eof=!0;break}continue}s=9+(15&c)}i<0?i=s:(r[a++]=i<<4|s,i=-1)}i>=0&&this.eof&&(r[a++]=i<<4,i=-1),this.firstDigit=i,this.bufferLength=a}else this.eof=!0},e}(),g=function(){function e(e,t){this.str=e,this.dict=e.dict,s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(2);if(!e||e.length<2||128===e[0])this.eof=!0;else{var t,r=this.bufferLength,a=e[0];if(a<128){if((t=this.ensureBuffer(r+a+1))[r++]=e[1],a>0){var i=this.str.getBytes(a);t.set(i,r),r+=a}}else{a=257-a;var n=e[1];t=this.ensureBuffer(r+a+1);for(var o=0;o<a;o++)t[r++]=n}this.bufferLength=r}},e}(),m=function(){function e(e,t,r){this.str=e,this.dict=e.dict,this.cachedData=0,this.bitsCached=0;for(var a={earlyChange:r,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(4096),dictionaryLengths:new Uint16Array(4096),dictionaryPrevCodes:new Uint16Array(4096),currentSequence:new Uint8Array(4096),currentSequenceLength:0},i=0;i<256;++i)a.dictionaryValues[i]=i,a.dictionaryLengths[i]=1;this.lzwState=a,s.call(this,t)}return e.prototype=Object.create(s.prototype),e.prototype.readBits=function(e){for(var t=this.bitsCached,r=this.cachedData;t<e;){var a=this.str.getByte();if(-1===a)return this.eof=!0,null;r=r<<8|a,t+=8}return this.bitsCached=t-=e,this.cachedData=r,this.lastCode=null,r>>>t&(1<<e)-1},e.prototype.readBlock=function(){var e,t,r,a=1024,i=this.lzwState;if(i){var n=i.earlyChange,o=i.nextCode,s=i.dictionaryValues,c=i.dictionaryLengths,l=i.dictionaryPrevCodes,u=i.codeLength,h=i.prevCode,f=i.currentSequence,d=i.currentSequenceLength,g=0,m=this.bufferLength,p=this.ensureBuffer(this.bufferLength+a);for(e=0;e<512;e++){var b=this.readBits(u),v=d>0;if(b<256)f[0]=b,d=1;else{if(!(b>=258)){if(256===b){u=9,o=258,d=0;continue}this.eof=!0,delete this.lzwState;break}if(b<o)for(t=(d=c[b])-1,r=b;t>=0;t--)f[t]=s[r],r=l[r];else f[d++]=f[0]}if(v&&(l[o]=h,c[o]=c[h]+1,s[o]=f[0],u=++o+n&o+n-1?u:0|Math.min(Math.log(o+n)/.6931471805599453+1,12)),h=b,a<(g+=d)){do{a+=512}while(a<g);p=this.ensureBuffer(this.bufferLength+a)}for(t=0;t<d;t++)p[m++]=f[t]}i.nextCode=o,i.codeLength=u,i.prevCode=h,i.currentSequenceLength=d,this.bufferLength=m}},e}(),p=function(){function e(){n.call(this,new Uint8Array(0))}return e.prototype=n.prototype,e}();t.Ascii85Stream=f,t.AsciiHexStream=d,t.DecryptStream=h,t.DecodeStream=s,t.FlateStream=l,t.NullStream=p,t.PredictorStream=u,t.RunLengthStream=g,t.Stream=n,t.StreamsSequenceStream=c,t.StringStream=o,t.LZWStream=m},function(e,t,r){\"use strict\";var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};e.exports=function(e){return\"object\"===(void 0===e?\"undefined\":a(e))?null!==e:\"function\"==typeof e}},function(e,t,r){\"use strict\";var a=r(49)(\"wks\"),i=r(22),n=r(5).Symbol,o=\"function\"==typeof n;(e.exports=function(e){return a[e]||(a[e]=o&&n[e]||(o?n:i)(\"Symbol.\"+e))}).store=a},function(e,t,r){\"use strict\";var a=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=a)},function(e,t,r){\"use strict\";var a=r(5),i=r(7),n=r(12),o=r(10),s=r(11),c=function e(t,r,c){var l,u,h,f,d=t&e.F,g=t&e.G,m=t&e.P,p=t&e.B,b=g?a:t&e.S?a[r]||(a[r]={}):(a[r]||{}).prototype,v=g?i:i[r]||(i[r]={}),y=v.prototype||(v.prototype={});for(l in g&&(c=r),c)h=((u=!d&&b&&void 0!==b[l])?b:c)[l],f=p&&u?s(h,a):m&&\"function\"==typeof h?s(Function.call,h):h,b&&o(b,l,h,t&e.U),v[l]!=h&&n(v,l,f),m&&y[l]!=h&&(y[l]=h)};a.core=i,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,t,r){\"use strict\";var a=e.exports={version:\"2.5.3\"};\"number\"==typeof __e&&(__e=a)},function(e,t,r){\"use strict\";var a=r(3);e.exports=function(e){if(!a(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t,r){\"use strict\";var a={}.hasOwnProperty;e.exports=function(e,t){return a.call(e,t)}},function(e,t,r){\"use strict\";var a=r(5),i=r(12),n=r(9),o=r(22)(\"src\"),s=Function.toString,c=(\"\"+s).split(\"toString\");r(7).inspectSource=function(e){return s.call(e)},(e.exports=function(e,t,r,s){var l=\"function\"==typeof r;l&&(n(r,\"name\")||i(r,\"name\",t)),e[t]!==r&&(l&&(n(r,o)||i(r,o,e[t]?\"\"+e[t]:c.join(String(t)))),e===a?e[t]=r:s?e[t]?e[t]=r:i(e,t,r):(delete e[t],i(e,t,r)))})(Function.prototype,\"toString\",function(){return\"function\"==typeof this&&this[o]||s.call(this)})},function(e,t,r){\"use strict\";var a=r(16);e.exports=function(e,t,r){if(a(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,a){return e.call(t,r,a)};case 3:return function(r,a,i){return e.call(t,r,a,i)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){\"use strict\";var a=r(15),i=r(28);e.exports=r(13)?function(e,t,r){return a.f(e,t,i(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){\"use strict\";e.exports=!r(14)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t,r){\"use strict\";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){\"use strict\";var a=r(8),i=r(45),n=r(46),o=Object.defineProperty;t.f=r(13)?Object.defineProperty:function(e,t,r){if(a(e),t=n(t,!0),a(r),i)try{return o(e,t,r)}catch(e){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported!\");return\"value\"in r&&(e[t]=r.value),e}},function(e,t,r){\"use strict\";e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t,r){\"use strict\";var a=r(29),i=r(30);e.exports=function(e){return a(i(e))}},function(e,t,r){\"use strict\";var a={}.toString;e.exports=function(e){return a.call(e).slice(8,-1)}},function(e,t,r){\"use strict\";e.exports={}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ColorSpace=void 0;var a=r(0),i=r(1),n=function(){function e(){(0,a.unreachable)(\"should not call ColorSpace constructor\")}return e.prototype={getRgb:function(e,t){var r=new Uint8Array(3);return this.getRgbItem(e,t,r,0),r},getRgbItem:function(e,t,r,i){(0,a.unreachable)(\"Should not call ColorSpace.getRgbItem\")},getRgbBuffer:function(e,t,r,i,n,o,s){(0,a.unreachable)(\"Should not call ColorSpace.getRgbBuffer\")},getOutputLength:function(e,t){(0,a.unreachable)(\"Should not call ColorSpace.getOutputLength\")},isPassthrough:function(e){return!1},fillRgb:function(e,t,r,a,i,n,o,s,c){var l,u,h=t*r,f=null,d=1<<o,g=r!==i||t!==a;if(this.isPassthrough(o))f=s;else if(1===this.numComps&&h>d&&\"DeviceGray\"!==this.name&&\"DeviceRGB\"!==this.name){var m,p=o<=8?new Uint8Array(d):new Uint16Array(d);for(l=0;l<d;l++)p[l]=l;var b,v,y=new Uint8Array(3*d);if(this.getRgbBuffer(p,0,d,y,0,o,0),g)for(f=new Uint8Array(3*h),v=0,l=0;l<h;++l)m=3*s[l],f[v++]=y[m],f[v++]=y[m+1],f[v++]=y[m+2];else for(b=0,l=0;l<h;++l)m=3*s[l],e[b++]=y[m],e[b++]=y[m+1],e[b++]=y[m+2],b+=c}else g?(f=new Uint8Array(3*h),this.getRgbBuffer(s,0,h,f,0,o,0)):this.getRgbBuffer(s,0,a*n,e,0,o,c);if(f)if(g)!function(e,t,r,a,i,n,o,s){o=1!==o?0:o;var c,l,u,h,f=r/i,d=a/n,g=0,m=new Uint16Array(i),p=3*r;for(c=0;c<i;c++)m[c]=3*Math.floor(c*f);for(c=0;c<n;c++)for(u=Math.floor(c*d)*p,l=0;l<i;l++)h=u+m[l],s[g++]=e[h++],s[g++]=e[h++],s[g++]=e[h++],g+=o}(f,0,t,r,a,i,c,e);else for(v=0,b=0,l=0,u=a*n;l<u;l++)e[b++]=f[v++],e[b++]=f[v++],e[b++]=f[v++],b+=c},usesZeroToOneRange:!0},e.parse=function(t,r,a,i){var n=e.parseToIR(t,r,a,i);return e.fromIR(n,i)},e.fromIR=function(t,r){var i,n,l,u=Array.isArray(t)?t[0]:t;switch(u){case\"DeviceGrayCS\":return this.singletons.gray;case\"DeviceRgbCS\":return this.singletons.rgb;case\"DeviceCmykCS\":return this.singletons.cmyk;case\"CalGrayCS\":return i=t[1],n=t[2],l=t[3],new f(i,n,l);case\"CalRGBCS\":i=t[1],n=t[2],l=t[3];var h=t[4];return new d(i,n,l,h);case\"PatternCS\":var m=t[1];return m&&(m=e.fromIR(m,r)),new s(m);case\"IndexedCS\":var p=t[1],b=t[2],v=t[3];return new c(e.fromIR(p,r),b,v);case\"AlternateCS\":var y=t[1],w=t[2],k=t[3];return new o(y,e.fromIR(w,r),r.createFromIR(k));case\"LabCS\":i=t[1],n=t[2];var S=t[3];return new g(i,n,S);default:throw new a.FormatError(\"Unknown colorspace name: \"+u)}},e.parseToIR=function(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments[3];if(t=r.fetchIfRef(t),(0,i.isName)(t))switch(t.name){case\"DeviceGray\":case\"G\":return\"DeviceGrayCS\";case\"DeviceRGB\":case\"RGB\":return\"DeviceRgbCS\";case\"DeviceCMYK\":case\"CMYK\":return\"DeviceCmykCS\";case\"Pattern\":return[\"PatternCS\",null];default:if((0,i.isDict)(n)){var s=n.get(\"ColorSpace\");if((0,i.isDict)(s)){var c=s.get(t.name);if(c){if((0,i.isName)(c))return e.parseToIR(c,r,n,o);t=c;break}}}throw new a.FormatError(\"unrecognized colorspace \"+t.name)}if(Array.isArray(t)){var l,u,h,f,d,g,m=r.fetchIfRef(t[0]).name;switch(m){case\"DeviceGray\":case\"G\":return\"DeviceGrayCS\";case\"DeviceRGB\":case\"RGB\":return\"DeviceRgbCS\";case\"DeviceCMYK\":case\"CMYK\":return\"DeviceCmykCS\";case\"CalGray\":return[\"CalGrayCS\",f=(u=r.fetchIfRef(t[1])).getArray(\"WhitePoint\"),d=u.getArray(\"BlackPoint\"),g=u.get(\"Gamma\")];case\"CalRGB\":f=(u=r.fetchIfRef(t[1])).getArray(\"WhitePoint\"),d=u.getArray(\"BlackPoint\"),g=u.getArray(\"Gamma\");var p=u.getArray(\"Matrix\");return[\"CalRGBCS\",f,d,g,p];case\"ICCBased\":var b=r.fetchIfRef(t[1]),v=b.dict;if(l=v.get(\"N\"),h=v.get(\"Alternate\")){var y=e.parseToIR(h,r,n,o),w=e.fromIR(y,o);if(w.numComps===l)return y;(0,a.warn)(\"ICCBased color space: Ignoring incorrect /Alternate entry.\")}if(1===l)return\"DeviceGrayCS\";if(3===l)return\"DeviceRgbCS\";if(4===l)return\"DeviceCmykCS\";break;case\"Pattern\":var k=t[1]||null;return k&&(k=e.parseToIR(k,r,n,o)),[\"PatternCS\",k];case\"Indexed\":case\"I\":var S=e.parseToIR(t[1],r,n,o),C=r.fetchIfRef(t[2])+1,x=r.fetchIfRef(t[3]);return(0,i.isStream)(x)&&(x=x.getBytes()),[\"IndexedCS\",S,C,x];case\"Separation\":case\"DeviceN\":var A=r.fetchIfRef(t[1]);l=Array.isArray(A)?A.length:1,h=e.parseToIR(t[2],r,n,o);var _=o.createIR(r.fetchIfRef(t[3]));return[\"AlternateCS\",l,h,_];case\"Lab\":f=(u=r.fetchIfRef(t[1])).getArray(\"WhitePoint\"),d=u.getArray(\"BlackPoint\");var P=u.getArray(\"Range\");return[\"LabCS\",f,d,P];default:throw new a.FormatError('unimplemented color space object \"'+m+'\"')}}throw new a.FormatError('unrecognized color space object: \"'+t+'\"')},e.isDefaultDecode=function(e,t){if(!Array.isArray(e))return!0;if(2*t!==e.length)return(0,a.warn)(\"The decode map is not the correct length\"),!0;for(var r=0,i=e.length;r<i;r+=2)if(0!==e[r]||1!==e[r+1])return!1;return!0},e.singletons={get gray(){return(0,a.shadow)(this,\"gray\",new l)},get rgb(){return(0,a.shadow)(this,\"rgb\",new u)},get cmyk(){return(0,a.shadow)(this,\"cmyk\",new h)}},e}(),o=function(){function e(e,t,r){this.name=\"Alternate\",this.numComps=e,this.defaultColor=new Float32Array(e);for(var a=0;a<e;++a)this.defaultColor[a]=1;this.base=t,this.tintFn=r,this.tmpBuf=new Float32Array(t.numComps)}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=this.tmpBuf;this.tintFn(e,t,i,0),this.base.getRgbItem(i,0,r,a)},getRgbBuffer:function(e,t,r,a,i,n,o){var s,c,l=this.tintFn,u=this.base,h=1/((1<<n)-1),f=u.numComps,d=u.usesZeroToOneRange,g=(u.isPassthrough(8)||!d)&&0===o,m=g?i:0,p=g?a:new Uint8Array(f*r),b=this.numComps,v=new Float32Array(b),y=new Float32Array(f);for(s=0;s<r;s++){for(c=0;c<b;c++)v[c]=e[t++]*h;if(l(v,0,y,0),d)for(c=0;c<f;c++)p[m++]=255*y[c];else u.getRgbItem(y,0,p,m),m+=f}g||u.getRgbBuffer(p,0,r,a,i,8,o)},getOutputLength:function(e,t){return this.base.getOutputLength(e*this.base.numComps/this.numComps,t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),s=function(){function e(e){this.name=\"Pattern\",this.base=e}return e.prototype={},e}(),c=function(){function e(e,t,r){this.name=\"Indexed\",this.numComps=1,this.defaultColor=new Uint8Array(this.numComps),this.base=e,this.highVal=t;var n=e.numComps*t;if((0,i.isStream)(r)){this.lookup=new Uint8Array(n);var o=r.getBytes(n);this.lookup.set(o)}else if((0,a.isString)(r)){this.lookup=new Uint8Array(n);for(var s=0;s<n;++s)this.lookup[s]=r.charCodeAt(s)}else{if(!(r instanceof Uint8Array))throw new a.FormatError(\"Unrecognized lookup table: \"+r);this.lookup=r}}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=this.base.numComps,n=e[t]*i;this.base.getRgbBuffer(this.lookup,n,1,r,a,8,0)},getRgbBuffer:function(e,t,r,a,i,n,o){for(var s=this.base,c=s.numComps,l=s.getOutputLength(c,o),u=this.lookup,h=0;h<r;++h){var f=e[t++]*c;s.getRgbBuffer(u,f,1,a,i,8,o),i+=l}},getOutputLength:function(e,t){return this.base.getOutputLength(e*this.base.numComps,t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return!0},usesZeroToOneRange:!0},e}(),l=function(){function e(){this.name=\"DeviceGray\",this.numComps=1,this.defaultColor=new Float32Array(this.numComps)}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=255*e[t]|0;i=i<0?0:i>255?255:i,r[a]=r[a+1]=r[a+2]=i},getRgbBuffer:function(e,t,r,a,i,n,o){for(var s=255/((1<<n)-1),c=t,l=i,u=0;u<r;++u){var h=s*e[c++]|0;a[l++]=h,a[l++]=h,a[l++]=h,l+=o}},getOutputLength:function(e,t){return e*(3+t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),u=function(){function e(){this.name=\"DeviceRGB\",this.numComps=3,this.defaultColor=new Float32Array(this.numComps)}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){var i=255*e[t]|0,n=255*e[t+1]|0,o=255*e[t+2]|0;r[a]=i<0?0:i>255?255:i,r[a+1]=n<0?0:n>255?255:n,r[a+2]=o<0?0:o>255?255:o},getRgbBuffer:function(e,t,r,a,i,n,o){if(8!==n||0!==o)for(var s=255/((1<<n)-1),c=t,l=i,u=0;u<r;++u)a[l++]=s*e[c++]|0,a[l++]=s*e[c++]|0,a[l++]=s*e[c++]|0,l+=o;else a.set(e.subarray(t,t+3*r),i)},getOutputLength:function(e,t){return e*(3+t)/3|0},isPassthrough:function(e){return 8===e},fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),h=function(){function e(e,t,r,a,i){var n=e[t+0]*r,o=e[t+1]*r,s=e[t+2]*r,c=e[t+3]*r,l=n*(-4.387332384609988*n+54.48615194189176*o+18.82290502165302*s+212.25662451639585*c-285.2331026137004)+o*(1.7149763477362134*o-5.6096736904047315*s+-17.873870861415444*c-5.497006427196366)+s*(-2.5217340131683033*s-21.248923337353073*c+17.5119270841813)+c*(-21.86122147463605*c-189.48180835922747)+255|0,u=n*(8.841041422036149*n+60.118027045597366*o+6.871425592049007*s+31.159100130055922*c-79.2970844816548)+o*(-15.310361306967817*o+17.575251261109482*s+131.35250912493976*c-190.9453302588951)+s*(4.444339102852739*s+9.8632861493405*c-24.86741582555878)+c*(-20.737325471181034*c-187.80453709719578)+255|0,h=n*(.8842522430003296*n+8.078677503112928*o+30.89978309703729*s-.23883238689178934*c-14.183576799673286)+o*(10.49593273432072*o+63.02378494754052*s+50.606957656360734*c-112.23884253719248)+s*(.03296041114873217*s+115.60384449646641*c-193.58209356861505)+c*(-22.33816807309886*c-180.12613974708367)+255|0;a[i]=l>255?255:l<0?0:l,a[i+1]=u>255?255:u<0?0:u,a[i+2]=h>255?255:h<0?0:h}function t(){this.name=\"DeviceCMYK\",this.numComps=4,this.defaultColor=new Float32Array(this.numComps),this.defaultColor[3]=1}return t.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(t,r,a,i){e(t,r,1,a,i)},getRgbBuffer:function(t,r,a,i,n,o,s){for(var c=1/((1<<o)-1),l=0;l<a;l++)e(t,r,c,i,n),r+=4,n+=3+s},getOutputLength:function(e,t){return e/4*(3+t)|0},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},t}(),f=function(){function e(e,t,r){if(this.name=\"CalGray\",this.numComps=1,this.defaultColor=new Float32Array(this.numComps),!e)throw new a.FormatError(\"WhitePoint missing - required for color space CalGray\");if(t=t||[0,0,0],r=r||1,this.XW=e[0],this.YW=e[1],this.ZW=e[2],this.XB=t[0],this.YB=t[1],this.ZB=t[2],this.G=r,this.XW<0||this.ZW<0||1!==this.YW)throw new a.FormatError(\"Invalid WhitePoint components for \"+this.name+\", no fallback available\");(this.XB<0||this.YB<0||this.ZB<0)&&((0,a.info)(\"Invalid BlackPoint for \"+this.name+\", falling back to default\"),this.XB=this.YB=this.ZB=0),0===this.XB&&0===this.YB&&0===this.ZB||(0,a.warn)(this.name+\", BlackPoint: XB: \"+this.XB+\", YB: \"+this.YB+\", ZB: \"+this.ZB+\", only default values are supported.\"),this.G<1&&((0,a.info)(\"Invalid Gamma: \"+this.G+\" for \"+this.name+\", falling back to default\"),this.G=1)}function t(e,t,r,a,i,n){var o=t[r]*n,s=Math.pow(o,e.G),c=e.YW*s,l=0|Math.max(295.8*Math.pow(c,.3333333333333333)-40.8,0);a[i]=l,a[i+1]=l,a[i+2]=l}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,r,a,i){t(this,e,r,a,i,1)},getRgbBuffer:function(e,r,a,i,n,o,s){for(var c=1/((1<<o)-1),l=0;l<a;++l)t(this,e,r,i,n,c),r+=1,n+=3+s},getOutputLength:function(e,t){return e*(3+t)},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},e}(),d=function(){var e=new Float32Array([.8951,.2664,-.1614,-.7502,1.7135,.0367,.0389,-.0685,1.0296]),t=new Float32Array([.9869929,-.1470543,.1599627,.4323053,.5183603,.0492912,-.0085287,.0400428,.9684867]),r=new Float32Array([3.2404542,-1.5371385,-.4985314,-.969266,1.8760108,.041556,.0556434,-.2040259,1.0572252]),i=new Float32Array([1,1,1]),o=new Float32Array(3),s=new Float32Array(3),c=new Float32Array(3),l=Math.pow(24/116,3)/8;function u(e,t,r,i){if(this.name=\"CalRGB\",this.numComps=3,this.defaultColor=new Float32Array(this.numComps),!e)throw new a.FormatError(\"WhitePoint missing - required for color space CalRGB\");t=t||new Float32Array(3),r=r||new Float32Array([1,1,1]),i=i||new Float32Array([1,0,0,0,1,0,0,0,1]);var n=e[0],o=e[1],s=e[2];this.whitePoint=e;var c=t[0],l=t[1],u=t[2];if(this.blackPoint=t,this.GR=r[0],this.GG=r[1],this.GB=r[2],this.MXA=i[0],this.MYA=i[1],this.MZA=i[2],this.MXB=i[3],this.MYB=i[4],this.MZB=i[5],this.MXC=i[6],this.MYC=i[7],this.MZC=i[8],n<0||s<0||1!==o)throw new a.FormatError(\"Invalid WhitePoint components for \"+this.name+\", no fallback available\");(c<0||l<0||u<0)&&((0,a.info)(\"Invalid BlackPoint for \"+this.name+\" [\"+c+\", \"+l+\", \"+u+\"], falling back to default\"),this.blackPoint=new Float32Array(3)),(this.GR<0||this.GG<0||this.GB<0)&&((0,a.info)(\"Invalid Gamma [\"+this.GR+\", \"+this.GG+\", \"+this.GB+\"] for \"+this.name+\", falling back to default\"),this.GR=this.GG=this.GB=1),(this.MXA<0||this.MYA<0||this.MZA<0||this.MXB<0||this.MYB<0||this.MZB<0||this.MXC<0||this.MYC<0||this.MZC<0)&&((0,a.info)(\"Invalid Matrix for \"+this.name+\" [\"+this.MXA+\", \"+this.MYA+\", \"+this.MZA+this.MXB+\", \"+this.MYB+\", \"+this.MZB+this.MXC+\", \"+this.MYC+\", \"+this.MZC+\"], falling back to default\"),this.MXA=this.MYB=this.MZC=1,this.MXB=this.MYA=this.MZA=this.MXC=this.MYC=this.MZB=0)}function h(e,t,r){r[0]=e[0]*t[0]+e[1]*t[1]+e[2]*t[2],r[1]=e[3]*t[0]+e[4]*t[1]+e[5]*t[2],r[2]=e[6]*t[0]+e[7]*t[1]+e[8]*t[2]}function f(e){return d(0,1,e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function d(e,t,r){return Math.max(e,Math.min(t,r))}function g(e){return e<0?-g(-e):e>8?Math.pow((e+16)/116,3):e*l}function m(a,n,l,u,m,p){var b=d(0,1,n[l]*p),v=d(0,1,n[l+1]*p),y=d(0,1,n[l+2]*p),w=Math.pow(b,a.GR),k=Math.pow(v,a.GG),S=Math.pow(y,a.GB),C=a.MXA*w+a.MXB*k+a.MXC*S,x=a.MYA*w+a.MYB*k+a.MYC*S,A=a.MZA*w+a.MZB*k+a.MZC*S,_=s;_[0]=C,_[1]=x,_[2]=A;var P=c;!function(r,a,i){if(1===r[0]&&1===r[2])return i[0]=a[0],i[1]=a[1],void(i[2]=a[2]);var n=i;h(e,a,n);var s=o;!function(e,t,r){r[0]=1*t[0]/e[0],r[1]=1*t[1]/e[1],r[2]=1*t[2]/e[2]}(r,n,s),h(t,s,i)}(a.whitePoint,_,P);var I=s;!function(e,t,r){if(0===e[0]&&0===e[1]&&0===e[2])return r[0]=t[0],r[1]=t[1],void(r[2]=t[2]);var a=g(0),i=(1-a)/(1-g(e[0])),n=1-i,o=(1-a)/(1-g(e[1])),s=1-o,c=(1-a)/(1-g(e[2])),l=1-c;r[0]=t[0]*i+n,r[1]=t[1]*o+s,r[2]=t[2]*c+l}(a.blackPoint,P,I);var T=c;!function(r,a,i){var n=i;h(e,a,n);var s=o;!function(e,t,r){r[0]=.95047*t[0]/e[0],r[1]=1*t[1]/e[1],r[2]=1.08883*t[2]/e[2]}(r,n,s),h(t,s,i)}(i,I,T);var O=s;h(r,T,O);var E=f(O[0]),F=f(O[1]),R=f(O[2]);u[m]=Math.round(255*E),u[m+1]=Math.round(255*F),u[m+2]=Math.round(255*R)}return u.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){m(this,e,t,r,a,1)},getRgbBuffer:function(e,t,r,a,i,n,o){for(var s=1/((1<<n)-1),c=0;c<r;++c)m(this,e,t,a,i,s),t+=3,i+=3+o},getOutputLength:function(e,t){return e*(3+t)/3|0},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return n.isDefaultDecode(e,this.numComps)},usesZeroToOneRange:!0},u}(),g=function(){function e(e,t,r){if(this.name=\"Lab\",this.numComps=3,this.defaultColor=new Float32Array(this.numComps),!e)throw new a.FormatError(\"WhitePoint missing - required for color space Lab\");if(t=t||[0,0,0],r=r||[-100,100,-100,100],this.XW=e[0],this.YW=e[1],this.ZW=e[2],this.amin=r[0],this.amax=r[1],this.bmin=r[2],this.bmax=r[3],this.XB=t[0],this.YB=t[1],this.ZB=t[2],this.XW<0||this.ZW<0||1!==this.YW)throw new a.FormatError(\"Invalid WhitePoint components, no fallback available\");(this.XB<0||this.YB<0||this.ZB<0)&&((0,a.info)(\"Invalid BlackPoint, falling back to default\"),this.XB=this.YB=this.ZB=0),(this.amin>this.amax||this.bmin>this.bmax)&&((0,a.info)(\"Invalid Range, falling back to defaults\"),this.amin=-100,this.amax=100,this.bmin=-100,this.bmax=100)}function t(e){return e>=6/29?e*e*e:108/841*(e-4/29)}function r(e,t,r,a){return r+e*(a-r)/t}function i(e,a,i,n,o,s){var c=a[i],l=a[i+1],u=a[i+2];!1!==n&&(c=r(c,n,0,100),l=r(l,n,e.amin,e.amax),u=r(u,n,e.bmin,e.bmax));var h,f,d,g=(c+16)/116,m=g+(l=l>e.amax?e.amax:l<e.amin?e.amin:l)/500,p=g-(u=u>e.bmax?e.bmax:u<e.bmin?e.bmin:u)/200,b=e.XW*t(m),v=e.YW*t(g),y=e.ZW*t(p);e.ZW<1?(h=3.1339*b+-1.617*v+-.4906*y,f=-.9785*b+1.916*v+.0333*y,d=.072*b+-.229*v+1.4057*y):(h=3.2406*b+-1.5372*v+-.4986*y,f=-.9689*b+1.8758*v+.0415*y,d=.0557*b+-.204*v+1.057*y),o[s]=h<=0?0:h>=1?255:255*Math.sqrt(h)|0,o[s+1]=f<=0?0:f>=1?255:255*Math.sqrt(f)|0,o[s+2]=d<=0?0:d>=1?255:255*Math.sqrt(d)|0}return e.prototype={getRgb:n.prototype.getRgb,getRgbItem:function(e,t,r,a){i(this,e,t,!1,r,a)},getRgbBuffer:function(e,t,r,a,n,o,s){for(var c=(1<<o)-1,l=0;l<r;l++)i(this,e,t,c,a,n),t+=3,n+=3+s},getOutputLength:function(e,t){return e*(3+t)/3|0},isPassthrough:n.prototype.isPassthrough,fillRgb:n.prototype.fillRgb,isDefaultDecode:function(e){return!0},usesZeroToOneRange:!1},e}();t.ColorSpace=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var a=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"\",\"\",\"\",\"isuperior\",\"\",\"\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"\",\"\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"\",\"\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"\",\"Dotaccentsmall\",\"\",\"\",\"Macronsmall\",\"\",\"\",\"figuredash\",\"hypheninferior\",\"\",\"\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"],i=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"centoldstyle\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"\",\"threequartersemdash\",\"\",\"questionsmall\",\"\",\"\",\"\",\"\",\"Ethsmall\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"\",\"\",\"\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hypheninferior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"asuperior\",\"centsuperior\",\"\",\"\",\"\",\"\",\"Aacutesmall\",\"Agravesmall\",\"Acircumflexsmall\",\"Adieresissmall\",\"Atildesmall\",\"Aringsmall\",\"Ccedillasmall\",\"Eacutesmall\",\"Egravesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Iacutesmall\",\"Igravesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ntildesmall\",\"Oacutesmall\",\"Ogravesmall\",\"Ocircumflexsmall\",\"Odieresissmall\",\"Otildesmall\",\"Uacutesmall\",\"Ugravesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"\",\"eightsuperior\",\"fourinferior\",\"threeinferior\",\"sixinferior\",\"eightinferior\",\"seveninferior\",\"Scaronsmall\",\"\",\"centinferior\",\"twoinferior\",\"\",\"Dieresissmall\",\"\",\"Caronsmall\",\"osuperior\",\"fiveinferior\",\"\",\"commainferior\",\"periodinferior\",\"Yacutesmall\",\"\",\"dollarinferior\",\"\",\"\",\"Thornsmall\",\"\",\"nineinferior\",\"zeroinferior\",\"Zcaronsmall\",\"AEsmall\",\"Oslashsmall\",\"questiondownsmall\",\"oneinferior\",\"Lslashsmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"Cedillasmall\",\"\",\"\",\"\",\"\",\"\",\"OEsmall\",\"figuredash\",\"hyphensuperior\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"\",\"Ydieresissmall\",\"\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"ninesuperior\",\"zerosuperior\",\"\",\"esuperior\",\"rsuperior\",\"tsuperior\",\"\",\"\",\"isuperior\",\"ssuperior\",\"dsuperior\",\"\",\"\",\"\",\"\",\"\",\"lsuperior\",\"Ogoneksmall\",\"Brevesmall\",\"Macronsmall\",\"bsuperior\",\"nsuperior\",\"msuperior\",\"commasuperior\",\"periodsuperior\",\"Dotaccentsmall\",\"Ringsmall\",\"\",\"\",\"\",\"\"],n=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"space\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\"],o=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"\",\"questiondown\",\"\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"\",\"ring\",\"cedilla\",\"\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"AE\",\"\",\"ordfeminine\",\"\",\"\",\"\",\"\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"\",\"\",\"\",\"\",\"\",\"ae\",\"\",\"\",\"\",\"dotlessi\",\"\",\"\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"\",\"\",\"\",\"\"],s=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"bullet\",\"Euro\",\"bullet\",\"quotesinglbase\",\"florin\",\"quotedblbase\",\"ellipsis\",\"dagger\",\"daggerdbl\",\"circumflex\",\"perthousand\",\"Scaron\",\"guilsinglleft\",\"OE\",\"bullet\",\"Zcaron\",\"bullet\",\"bullet\",\"quoteleft\",\"quoteright\",\"quotedblleft\",\"quotedblright\",\"bullet\",\"endash\",\"emdash\",\"tilde\",\"trademark\",\"scaron\",\"guilsinglright\",\"oe\",\"bullet\",\"zcaron\",\"Ydieresis\",\"space\",\"exclamdown\",\"cent\",\"sterling\",\"currency\",\"yen\",\"brokenbar\",\"section\",\"dieresis\",\"copyright\",\"ordfeminine\",\"guillemotleft\",\"logicalnot\",\"hyphen\",\"registered\",\"macron\",\"degree\",\"plusminus\",\"twosuperior\",\"threesuperior\",\"acute\",\"mu\",\"paragraph\",\"periodcentered\",\"cedilla\",\"onesuperior\",\"ordmasculine\",\"guillemotright\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondown\",\"Agrave\",\"Aacute\",\"Acircumflex\",\"Atilde\",\"Adieresis\",\"Aring\",\"AE\",\"Ccedilla\",\"Egrave\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Igrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Eth\",\"Ntilde\",\"Ograve\",\"Oacute\",\"Ocircumflex\",\"Otilde\",\"Odieresis\",\"multiply\",\"Oslash\",\"Ugrave\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Yacute\",\"Thorn\",\"germandbls\",\"agrave\",\"aacute\",\"acircumflex\",\"atilde\",\"adieresis\",\"aring\",\"ae\",\"ccedilla\",\"egrave\",\"eacute\",\"ecircumflex\",\"edieresis\",\"igrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"eth\",\"ntilde\",\"ograve\",\"oacute\",\"ocircumflex\",\"otilde\",\"odieresis\",\"divide\",\"oslash\",\"ugrave\",\"uacute\",\"ucircumflex\",\"udieresis\",\"yacute\",\"thorn\",\"ydieresis\"],c=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"universal\",\"numbersign\",\"existential\",\"percent\",\"ampersand\",\"suchthat\",\"parenleft\",\"parenright\",\"asteriskmath\",\"plus\",\"comma\",\"minus\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"congruent\",\"Alpha\",\"Beta\",\"Chi\",\"Delta\",\"Epsilon\",\"Phi\",\"Gamma\",\"Eta\",\"Iota\",\"theta1\",\"Kappa\",\"Lambda\",\"Mu\",\"Nu\",\"Omicron\",\"Pi\",\"Theta\",\"Rho\",\"Sigma\",\"Tau\",\"Upsilon\",\"sigma1\",\"Omega\",\"Xi\",\"Psi\",\"Zeta\",\"bracketleft\",\"therefore\",\"bracketright\",\"perpendicular\",\"underscore\",\"radicalex\",\"alpha\",\"beta\",\"chi\",\"delta\",\"epsilon\",\"phi\",\"gamma\",\"eta\",\"iota\",\"phi1\",\"kappa\",\"lambda\",\"mu\",\"nu\",\"omicron\",\"pi\",\"theta\",\"rho\",\"sigma\",\"tau\",\"upsilon\",\"omega1\",\"omega\",\"xi\",\"psi\",\"zeta\",\"braceleft\",\"bar\",\"braceright\",\"similar\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Euro\",\"Upsilon1\",\"minute\",\"lessequal\",\"fraction\",\"infinity\",\"florin\",\"club\",\"diamond\",\"heart\",\"spade\",\"arrowboth\",\"arrowleft\",\"arrowup\",\"arrowright\",\"arrowdown\",\"degree\",\"plusminus\",\"second\",\"greaterequal\",\"multiply\",\"proportional\",\"partialdiff\",\"bullet\",\"divide\",\"notequal\",\"equivalence\",\"approxequal\",\"ellipsis\",\"arrowvertex\",\"arrowhorizex\",\"carriagereturn\",\"aleph\",\"Ifraktur\",\"Rfraktur\",\"weierstrass\",\"circlemultiply\",\"circleplus\",\"emptyset\",\"intersection\",\"union\",\"propersuperset\",\"reflexsuperset\",\"notsubset\",\"propersubset\",\"reflexsubset\",\"element\",\"notelement\",\"angle\",\"gradient\",\"registerserif\",\"copyrightserif\",\"trademarkserif\",\"product\",\"radical\",\"dotmath\",\"logicalnot\",\"logicaland\",\"logicalor\",\"arrowdblboth\",\"arrowdblleft\",\"arrowdblup\",\"arrowdblright\",\"arrowdbldown\",\"lozenge\",\"angleleft\",\"registersans\",\"copyrightsans\",\"trademarksans\",\"summation\",\"parenlefttp\",\"parenleftex\",\"parenleftbt\",\"bracketlefttp\",\"bracketleftex\",\"bracketleftbt\",\"bracelefttp\",\"braceleftmid\",\"braceleftbt\",\"braceex\",\"\",\"angleright\",\"integral\",\"integraltp\",\"integralex\",\"integralbt\",\"parenrighttp\",\"parenrightex\",\"parenrightbt\",\"bracketrighttp\",\"bracketrightex\",\"bracketrightbt\",\"bracerighttp\",\"bracerightmid\",\"bracerightbt\",\"\"],l=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"a1\",\"a2\",\"a202\",\"a3\",\"a4\",\"a5\",\"a119\",\"a118\",\"a117\",\"a11\",\"a12\",\"a13\",\"a14\",\"a15\",\"a16\",\"a105\",\"a17\",\"a18\",\"a19\",\"a20\",\"a21\",\"a22\",\"a23\",\"a24\",\"a25\",\"a26\",\"a27\",\"a28\",\"a6\",\"a7\",\"a8\",\"a9\",\"a10\",\"a29\",\"a30\",\"a31\",\"a32\",\"a33\",\"a34\",\"a35\",\"a36\",\"a37\",\"a38\",\"a39\",\"a40\",\"a41\",\"a42\",\"a43\",\"a44\",\"a45\",\"a46\",\"a47\",\"a48\",\"a49\",\"a50\",\"a51\",\"a52\",\"a53\",\"a54\",\"a55\",\"a56\",\"a57\",\"a58\",\"a59\",\"a60\",\"a61\",\"a62\",\"a63\",\"a64\",\"a65\",\"a66\",\"a67\",\"a68\",\"a69\",\"a70\",\"a71\",\"a72\",\"a73\",\"a74\",\"a203\",\"a75\",\"a204\",\"a76\",\"a77\",\"a78\",\"a79\",\"a81\",\"a82\",\"a83\",\"a84\",\"a97\",\"a98\",\"a99\",\"a100\",\"\",\"a89\",\"a90\",\"a93\",\"a94\",\"a91\",\"a92\",\"a205\",\"a85\",\"a206\",\"a86\",\"a87\",\"a88\",\"a95\",\"a96\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"a101\",\"a102\",\"a103\",\"a104\",\"a106\",\"a107\",\"a108\",\"a112\",\"a111\",\"a110\",\"a109\",\"a120\",\"a121\",\"a122\",\"a123\",\"a124\",\"a125\",\"a126\",\"a127\",\"a128\",\"a129\",\"a130\",\"a131\",\"a132\",\"a133\",\"a134\",\"a135\",\"a136\",\"a137\",\"a138\",\"a139\",\"a140\",\"a141\",\"a142\",\"a143\",\"a144\",\"a145\",\"a146\",\"a147\",\"a148\",\"a149\",\"a150\",\"a151\",\"a152\",\"a153\",\"a154\",\"a155\",\"a156\",\"a157\",\"a158\",\"a159\",\"a160\",\"a161\",\"a163\",\"a164\",\"a196\",\"a165\",\"a192\",\"a166\",\"a167\",\"a168\",\"a169\",\"a170\",\"a171\",\"a172\",\"a173\",\"a162\",\"a174\",\"a175\",\"a176\",\"a177\",\"a178\",\"a179\",\"a193\",\"a180\",\"a199\",\"a181\",\"a200\",\"a182\",\"\",\"a201\",\"a183\",\"a184\",\"a197\",\"a185\",\"a194\",\"a198\",\"a186\",\"a195\",\"a187\",\"a188\",\"a189\",\"a190\",\"a191\",\"\"];t.WinAnsiEncoding=s,t.StandardEncoding=o,t.MacRomanEncoding=n,t.SymbolSetEncoding=c,t.ZapfDingbatsEncoding=l,t.ExpertEncoding=a,t.getEncoding=function(e){switch(e){case\"WinAnsiEncoding\":return s;case\"StandardEncoding\":return o;case\"MacRomanEncoding\":return n;case\"SymbolSetEncoding\":return c;case\"ZapfDingbatsEncoding\":return l;case\"ExpertEncoding\":return a;case\"MacExpertEncoding\":return i;default:return null}}},function(e,t,r){\"use strict\";var a=0,i=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++a+i).toString(36))}},function(e,t,r){\"use strict\";var a=r(93),i=r(53);e.exports=Object.keys||function(e){return a(e,i)}},function(e,t,r){\"use strict\";var a=r(15).f,i=r(9),n=r(4)(\"toStringTag\");e.exports=function(e,t,r){e&&!i(e=r?e:e.prototype,n)&&a(e,n,{configurable:!0,value:t})}},function(e,t,r){\"use strict\";var a=r(11),i=r(98),n=r(99),o=r(8),s=r(31),c=r(100),l={},u={},h=e.exports=function(e,t,r,h,f){var d,g,m,p,b=f?function(){return e}:c(e),v=a(r,h,t?2:1),y=0;if(\"function\"!=typeof b)throw TypeError(e+\" is not iterable!\");if(n(b)){for(d=s(e.length);d>y;y++)if((p=t?v(o(g=e[y])[0],g[1]):v(e[y]))===l||p===u)return p}else for(m=b.call(e);!(g=m.next()).done;)if((p=i(m,v,g.value,t))===l||p===u)return p};h.BREAK=l,h.RETURN=u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Parser=t.Linearization=t.Lexer=void 0;var a=r(2),i=r(0),n=r(1),o=r(129),s=r(130),c=r(41),l=r(133),u=function(){function e(e,t,r,a){this.lexer=e,this.allowStreams=t,this.xref=r,this.recoveryMode=a||!1,this.imageCache=Object.create(null),this.refill()}return e.prototype={refill:function(){this.buf1=this.lexer.getObj(),this.buf2=this.lexer.getObj()},shift:function(){(0,n.isCmd)(this.buf2,\"ID\")?(this.buf1=this.buf2,this.buf2=null):(this.buf1=this.buf2,this.buf2=this.lexer.getObj())},tryShift:function(){try{return this.shift(),!0}catch(e){if(e instanceof i.MissingDataException)throw e;return!1}},getObj:function(e){var t=this.buf1;if(this.shift(),t instanceof n.Cmd)switch(t.cmd){case\"BI\":return this.makeInlineImage(e);case\"[\":for(var r=[];!(0,n.isCmd)(this.buf1,\"]\")&&!(0,n.isEOF)(this.buf1);)r.push(this.getObj(e));if((0,n.isEOF)(this.buf1)){if(!this.recoveryMode)throw new i.FormatError(\"End of file inside array\");return r}return this.shift(),r;case\"<<\":for(var a=new n.Dict(this.xref);!(0,n.isCmd)(this.buf1,\">>\")&&!(0,n.isEOF)(this.buf1);)if((0,n.isName)(this.buf1)){var o=this.buf1.name;if(this.shift(),(0,n.isEOF)(this.buf1))break;a.set(o,this.getObj(e))}else(0,i.info)(\"Malformed dictionary: key must be a name object\"),this.shift();if((0,n.isEOF)(this.buf1)){if(!this.recoveryMode)throw new i.FormatError(\"End of file inside dictionary\");return a}return(0,n.isCmd)(this.buf2,\"stream\")?this.allowStreams?this.makeStream(a,e):a:(this.shift(),a);default:return t}if(Number.isInteger(t)){var s=t;if(Number.isInteger(this.buf1)&&(0,n.isCmd)(this.buf2,\"R\")){var c=new n.Ref(s,this.buf1);return this.shift(),this.shift(),c}return s}if((0,i.isString)(t)){var l=t;return e&&(l=e.decryptString(l)),l}return t},findDefaultInlineStreamEnd:function(e){for(var t=e.pos,r=0,a=void 0,n=void 0;-1!==(a=e.getByte());)if(0===r)r=69===a?1:0;else if(1===r)r=73===a?2:0;else if((0,i.assert)(2===r),32===a||10===a||13===a){n=e.pos;for(var o=e.peekBytes(10),s=0,c=o.length;s<c;s++)if((0!==(a=o[s])||0===o[s+1])&&10!==a&&13!==a&&(a<32||a>127)){r=0;break}if(2===r)break}else r=0;return-1===a&&((0,i.warn)(\"findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker\"),n&&((0,i.warn)('... trying to recover by using the last \"EI\" occurrence.'),e.skip(-(e.pos-n)))),e.pos-4-t},findDCTDecodeInlineStreamEnd:function(e){for(var t,r,a,n=e.pos,o=!1;-1!==(t=e.getByte());)if(255===t){switch(e.getByte()){case 0:break;case 255:e.skip(-1);break;case 217:o=!0;break;case 192:case 193:case 194:case 195:case 197:case 198:case 199:case 201:case 202:case 203:case 205:case 206:case 207:case 196:case 204:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 254:(r=e.getUint16())>2?e.skip(r-2):e.skip(-2)}if(o)break}return a=e.pos-n,-1===t?((0,i.warn)(\"Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead.\"),e.skip(-a),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),a)},findASCII85DecodeInlineStreamEnd:function(e){for(var t,r,a=e.pos;-1!==(t=e.getByte());)if(126===t&&62===e.peekByte()){e.skip();break}return r=e.pos-a,-1===t?((0,i.warn)(\"Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-r),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),r)},findASCIIHexDecodeInlineStreamEnd:function(e){for(var t,r,a=e.pos;-1!==(t=e.getByte())&&62!==t;);return r=e.pos-a,-1===t?((0,i.warn)(\"Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-r),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),r)},inlineStreamSkipEI:function(e){for(var t,r=0;-1!==(t=e.getByte());)if(0===r)r=69===t?1:0;else if(1===r)r=73===t?2:0;else if(2===r)break},makeInlineImage:function(e){for(var t=this.lexer.stream,r=new n.Dict(this.xref);!(0,n.isCmd)(this.buf1,\"ID\")&&!(0,n.isEOF)(this.buf1);){if(!(0,n.isName)(this.buf1))throw new i.FormatError(\"Dictionary key must be a name object\");var a=this.buf1.name;if(this.shift(),(0,n.isEOF)(this.buf1))break;r.set(a,this.getObj(e))}var o,s=r.get(\"Filter\",\"F\");if((0,n.isName)(s))o=s.name;else if(Array.isArray(s)){var c=this.xref.fetchIfRef(s[0]);(0,n.isName)(c)&&(o=c.name)}var l,u,h,f=t.pos;l=\"DCTDecode\"===o||\"DCT\"===o?this.findDCTDecodeInlineStreamEnd(t):\"ASCII85Decode\"===o||\"A85\"===o?this.findASCII85DecodeInlineStreamEnd(t):\"ASCIIHexDecode\"===o||\"AHx\"===o?this.findASCIIHexDecodeInlineStreamEnd(t):this.findDefaultInlineStreamEnd(t);var d,g=t.makeSubStream(f,l,r);if(l<1e3){var m=g.getBytes();g.reset();var p=1,b=0;for(u=0,h=m.length;u<h;++u)b+=p+=255&m[u];d=b%65521<<16|p%65521;var v=this.imageCache[d];if(void 0!==v)return this.buf2=n.Cmd.get(\"EI\"),this.shift(),v.reset(),v}return e&&(g=e.createStream(g,l)),(g=this.filter(g,r,l)).dict=r,void 0!==d&&(g.cacheKey=\"inline_\"+l+\"_\"+d,this.imageCache[d]=g),this.buf2=n.Cmd.get(\"EI\"),this.shift(),g},makeStream:function(e,t){var r=this.lexer,a=r.stream;r.skipToNextLine();var o=a.pos-1,s=e.get(\"Length\");if(Number.isInteger(s)||((0,i.info)(\"Bad \"+s+\" attribute in stream\"),s=0),a.pos=o+s,r.nextChar(),this.tryShift()&&(0,n.isCmd)(this.buf2,\"endstream\"))this.shift();else{a.pos=o;for(var c,l,u=[101,110,100,115,116,114,101,97,109],h=0,f=!1;a.pos<a.end;){var d=a.peekBytes(2048),g=d.length-9;if(g<=0)break;for(f=!1,c=0;c<g;){for(l=0;l<9&&d[c+l]===u[l];)l++;if(l>=9){f=!0;break}c++}if(f){h+=c,a.pos+=c;break}h+=g,a.pos+=g}if(!f)throw new i.FormatError(\"Missing endstream\");s=h,r.nextChar(),this.shift(),this.shift()}return this.shift(),a=a.makeSubStream(o,s,e),t&&(a=t.createStream(a,s)),(a=this.filter(a,e,s)).dict=e,a},filter:function(e,t,r){var a=t.get(\"Filter\",\"F\"),o=t.get(\"DecodeParms\",\"DP\");if((0,n.isName)(a))return Array.isArray(o)&&(0,i.warn)(\"/DecodeParms should not contain an Array, when /Filter contains a Name.\"),this.makeFilter(e,a.name,r,o);var s=r;if(Array.isArray(a))for(var c=a,l=o,u=0,h=c.length;u<h;++u){if(a=this.xref.fetchIfRef(c[u]),!(0,n.isName)(a))throw new i.FormatError(\"Bad filter name: \"+a);o=null,Array.isArray(l)&&u in l&&(o=this.xref.fetchIfRef(l[u])),e=this.makeFilter(e,a.name,s,o),s=null}return e},makeFilter:function(e,t,r,n){if(0===r)return(0,i.warn)('Empty \"'+t+'\" stream.'),new a.NullStream;try{var u=this.xref.stats.streamTypes;if(\"FlateDecode\"===t||\"Fl\"===t)return u[i.StreamType.FLATE]=!0,n?new a.PredictorStream(new a.FlateStream(e,r),r,n):new a.FlateStream(e,r);if(\"LZWDecode\"===t||\"LZW\"===t){u[i.StreamType.LZW]=!0;var h=1;return n?(n.has(\"EarlyChange\")&&(h=n.get(\"EarlyChange\")),new a.PredictorStream(new a.LZWStream(e,r,h),r,n)):new a.LZWStream(e,r,h)}return\"DCTDecode\"===t||\"DCT\"===t?(u[i.StreamType.DCT]=!0,new c.JpegStream(e,r,e.dict,n)):\"JPXDecode\"===t||\"JPX\"===t?(u[i.StreamType.JPX]=!0,new l.JpxStream(e,r,e.dict,n)):\"ASCII85Decode\"===t||\"A85\"===t?(u[i.StreamType.A85]=!0,new a.Ascii85Stream(e,r)):\"ASCIIHexDecode\"===t||\"AHx\"===t?(u[i.StreamType.AHX]=!0,new a.AsciiHexStream(e,r)):\"CCITTFaxDecode\"===t||\"CCF\"===t?(u[i.StreamType.CCF]=!0,new o.CCITTFaxStream(e,r,n)):\"RunLengthDecode\"===t||\"RL\"===t?(u[i.StreamType.RL]=!0,new a.RunLengthStream(e,r)):\"JBIG2Decode\"===t?(u[i.StreamType.JBIG]=!0,new s.Jbig2Stream(e,r,e.dict,n)):((0,i.warn)('filter \"'+t+'\" not supported yet'),e)}catch(e){if(e instanceof i.MissingDataException)throw e;return(0,i.warn)('Invalid stream: \"'+e+'\"'),new a.NullStream}}},e}(),h=function(){function e(e,t){this.stream=e,this.nextChar(),this.strBuf=[],this.knownCommands=t}var t=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function r(e){return e>=48&&e<=57?15&e:e>=65&&e<=70||e>=97&&e<=102?9+(15&e):-1}return e.prototype={nextChar:function(){return this.currentChar=this.stream.getByte()},peekChar:function(){return this.stream.peekByte()},getNumber:function(){var e=this.currentChar,t=!1,r=0,a=1;if(45===e?(a=-1,45===(e=this.nextChar())&&(e=this.nextChar())):43===e&&(e=this.nextChar()),46===e&&(r=10,e=this.nextChar()),10===e||13===e)do{e=this.nextChar()}while(10===e||13===e);if(e<48||e>57)throw new i.FormatError(\"Invalid number: \"+String.fromCharCode(e)+\" (charCode \"+e+\")\");for(var n=e-48,o=0,s=1;(e=this.nextChar())>=0;)if(48<=e&&e<=57){var c=e-48;t?o=10*o+c:(0!==r&&(r*=10),n=10*n+c)}else if(46===e){if(0!==r)break;r=1}else if(45===e)(0,i.warn)(\"Badly formatted number\");else{if(69!==e&&101!==e)break;if(43===(e=this.peekChar())||45===e)s=45===e?-1:1,this.nextChar();else if(e<48||e>57)break;t=!0}return 0!==r&&(n/=r),t&&(n*=Math.pow(10,s*o)),a*n},getString:function(){var e=1,t=!1,r=this.strBuf;r.length=0;for(var a=this.nextChar();;){var n=!1;switch(0|a){case-1:(0,i.warn)(\"Unterminated string\"),t=!0;break;case 40:++e,r.push(\"(\");break;case 41:0==--e?(this.nextChar(),t=!0):r.push(\")\");break;case 92:switch(a=this.nextChar()){case-1:(0,i.warn)(\"Unterminated string\"),t=!0;break;case 110:r.push(\"\\n\");break;case 114:r.push(\"\\r\");break;case 116:r.push(\"\\t\");break;case 98:r.push(\"\\b\");break;case 102:r.push(\"\\f\");break;case 92:case 40:case 41:r.push(String.fromCharCode(a));break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:var o=15&a;n=!0,(a=this.nextChar())>=48&&a<=55&&(o=(o<<3)+(15&a),(a=this.nextChar())>=48&&a<=55&&(n=!1,o=(o<<3)+(15&a))),r.push(String.fromCharCode(o));break;case 13:10===this.peekChar()&&this.nextChar();break;case 10:break;default:r.push(String.fromCharCode(a))}break;default:r.push(String.fromCharCode(a))}if(t)break;n||(a=this.nextChar())}return r.join(\"\")},getName:function(){var e,a,o=this.strBuf;for(o.length=0;(e=this.nextChar())>=0&&!t[e];)if(35===e){if(e=this.nextChar(),t[e]){(0,i.warn)(\"Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number.\"),o.push(\"#\");break}var s=r(e);if(-1!==s){a=e;var c=r(e=this.nextChar());if(-1===c){if((0,i.warn)(\"Lexer_getName: Illegal digit (\"+String.fromCharCode(e)+\") in hexadecimal number.\"),o.push(\"#\",String.fromCharCode(a)),t[e])break;o.push(String.fromCharCode(e));continue}o.push(String.fromCharCode(s<<4|c))}else o.push(\"#\",String.fromCharCode(e))}else o.push(String.fromCharCode(e));return o.length>127&&(0,i.warn)(\"name token is longer than allowed by the spec: \"+o.length),n.Name.get(o.join(\"\"))},getHexString:function(){var e=this.strBuf;e.length=0;for(var a,n,o=this.currentChar,s=!0;;){if(o<0){(0,i.warn)(\"Unterminated hex string\");break}if(62===o){this.nextChar();break}if(1!==t[o]){if(s){if(-1===(a=r(o))){(0,i.warn)('Ignoring invalid character \"'+o+'\" in hex string'),o=this.nextChar();continue}}else{if(-1===(n=r(o))){(0,i.warn)('Ignoring invalid character \"'+o+'\" in hex string'),o=this.nextChar();continue}e.push(String.fromCharCode(a<<4|n))}s=!s,o=this.nextChar()}else o=this.nextChar()}return e.join(\"\")},getObj:function(){for(var e=!1,r=this.currentChar;;){if(r<0)return n.EOF;if(e)10!==r&&13!==r||(e=!1);else if(37===r)e=!0;else if(1!==t[r])break;r=this.nextChar()}switch(0|r){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return this.getNumber();case 40:return this.getString();case 47:return this.getName();case 91:return this.nextChar(),n.Cmd.get(\"[\");case 93:return this.nextChar(),n.Cmd.get(\"]\");case 60:return 60===(r=this.nextChar())?(this.nextChar(),n.Cmd.get(\"<<\")):this.getHexString();case 62:return 62===(r=this.nextChar())?(this.nextChar(),n.Cmd.get(\">>\")):n.Cmd.get(\">\");case 123:return this.nextChar(),n.Cmd.get(\"{\");case 125:return this.nextChar(),n.Cmd.get(\"}\");case 41:throw this.nextChar(),new i.FormatError(\"Illegal character: \"+r)}for(var a=String.fromCharCode(r),o=this.knownCommands,s=o&&void 0!==o[a];(r=this.nextChar())>=0&&!t[r];){var c=a+String.fromCharCode(r);if(s&&void 0===o[c])break;if(128===a.length)throw new i.FormatError(\"Command token too long: \"+a.length);a=c,s=o&&void 0!==o[a]}return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:n.Cmd.get(a))},skipToNextLine:function(){for(var e=this.currentChar;e>=0;){if(13===e){10===(e=this.nextChar())&&this.nextChar();break}if(10===e){this.nextChar();break}e=this.nextChar()}}},e}(),f={create:function(e){function t(e,t){var r=f.get(e);if(Number.isInteger(r)&&(t?r>=0:r>0))return r;throw new Error('The \"'+e+'\" parameter in the linearization dictionary is invalid.')}var r,a,o=new u(new h(e),!1,null),s=o.getObj(),c=o.getObj(),l=o.getObj(),f=o.getObj();if(!(Number.isInteger(s)&&Number.isInteger(c)&&(0,n.isCmd)(l,\"obj\")&&(0,n.isDict)(f)&&(0,i.isNum)(r=f.get(\"Linearized\"))&&r>0))return null;if((a=t(\"L\"))!==e.length)throw new Error('The \"L\" parameter in the linearization dictionary does not equal the stream length.');return{length:a,hints:function(){var e,t,r=f.get(\"H\");if(Array.isArray(r)&&(2===(e=r.length)||4===e)){for(var a=0;a<e;a++)if(!(Number.isInteger(t=r[a])&&t>0))throw new Error(\"Hint (\"+a+\") in the linearization dictionary is invalid.\");return r}throw new Error(\"Hint array in the linearization dictionary is invalid.\")}(),objectNumberFirst:t(\"O\"),endFirst:t(\"E\"),numPages:t(\"N\"),mainXRefEntriesOffset:t(\"T\"),pageFirst:f.has(\"P\")?t(\"P\",!0):0}}};t.Lexer=h,t.Linearization=f,t.Parser=u},function(e,t,r){\"use strict\";var a=r(3),i=r(5).document,n=a(i)&&a(i.createElement);e.exports=function(e){return n?i.createElement(e):{}}},function(e,t,r){\"use strict\";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){\"use strict\";var a=r(18);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==a(e)?e.split(\"\"):Object(e)}},function(e,t,r){\"use strict\";e.exports=function(e){if(null==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t,r){\"use strict\";var a=r(32),i=Math.min;e.exports=function(e){return e>0?i(a(e),9007199254740991):0}},function(e,t,r){\"use strict\";var a=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:a)(e)}},function(e,t,r){\"use strict\";var a=r(18),i=r(4)(\"toStringTag\"),n=\"Arguments\"==a(function(){return arguments}());e.exports=function(e){var t,r,o;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?r:n?a(t):\"Object\"==(o=a(t))&&\"function\"==typeof t.callee?\"Arguments\":o}},function(e,t,r){\"use strict\";var a=r(49)(\"keys\"),i=r(22);e.exports=function(e){return a[e]||(a[e]=i(e))}},function(e,t,r){\"use strict\";var a=r(30);e.exports=function(e){return Object(a(e))}},function(e,t,r){\"use strict\";e.exports=function(e,t,r,a){if(!(e instanceof t)||void 0!==a&&a in e)throw TypeError(r+\": incorrect invocation!\");return e}},function(e,t,r){\"use strict\";var a=r(16);function i(e){var t,r;this.promise=new e(function(e,a){if(void 0!==t||void 0!==r)throw TypeError(\"Bad Promise constructor\");t=e,r=a}),this.resolve=a(t),this.reject=a(r)}e.exports.f=function(e){return new i(e)}},function(e,t,r){\"use strict\";var a=r(10);e.exports=function(e,t,r){for(var i in t)a(e,i,t[i],r);return e}},function(e,t,r){\"use strict\";var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i=r(22)(\"meta\"),n=r(3),o=r(9),s=r(15).f,c=0,l=Object.isExtensible||function(){return!0},u=!r(14)(function(){return l(Object.preventExtensions({}))}),h=function(e){s(e,i,{value:{i:\"O\"+ ++c,w:{}}})},f=e.exports={KEY:i,NEED:!1,fastKey:function(e,t){if(!n(e))return\"symbol\"==(void 0===e?\"undefined\":a(e))?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!o(e,i)){if(!l(e))return\"F\";if(!t)return\"E\";h(e)}return e[i].i},getWeak:function(e,t){if(!o(e,i)){if(!l(e))return!0;if(!t)return!1;h(e)}return e[i].w},onFreeze:function(e){return u&&f.NEED&&l(e)&&!o(e,i)&&h(e),e}}},function(e,t,r){\"use strict\";t.f={}.propertyIsEnumerable},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegStream=void 0;var a=r(0),i=r(2),n=r(1),o=r(132),s=function(){function e(e,t,r,a){for(var n=void 0;-1!==(n=e.getByte());)if(255===n){e.skip(-1);break}this.stream=e,this.maybeLength=t,this.dict=r,this.params=a,i.DecodeStream.call(this,t)}return e.prototype=Object.create(i.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,a.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new o.JpegImage,t=this.dict.getArray(\"Decode\",\"D\");if(this.forceRGB&&Array.isArray(t)){for(var r=this.dict.get(\"BitsPerComponent\")||8,a=t.length,i=new Int32Array(a),s=!1,c=(1<<r)-1,l=0;l<a;l+=2)i[l]=256*(t[l+1]-t[l])|0,i[l+1]=t[l]*c|0,256===i[l]&&0===i[l+1]||(s=!0);s&&(e.decodeTransform=i)}if((0,n.isDict)(this.params)){var u=this.params.get(\"ColorTransform\");Number.isInteger(u)&&(e.colorTransform=u)}e.parse(this.bytes);var h=e.getData(this.drawWidth,this.drawHeight,this.forceRGB);this.buffer=h,this.bufferLength=h.length,this.eof=!0}},e.prototype.getIR=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(0,a.createObjectURL)(this.bytes,\"image/jpeg\",e)},e}();t.JpegStream=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.OperatorList=void 0;var a=r(0),i=function(){function e(e,t,r,a,i){for(var n=e,o=0,s=t.length-1;o<s;o++){var c=t[o];n=n[c]||(n[c]=[])}n[t[t.length-1]]={checkFn:r,iterateFn:a,processFn:i}}var t=[];function r(e){this.queue=e,this.state=null,this.context={iCurr:0,fnArray:e.fnArray,argsArray:e.argsArray},this.match=null,this.lastProcessed=0}return e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintInlineImageXObject,a.OPS.restore],null,function(e,t){var r=e.fnArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:return r[t]===a.OPS.transform;case 2:return r[t]===a.OPS.paintInlineImageXObject;case 3:return r[t]===a.OPS.restore}},function(e,t){var r=e.fnArray,i=e.argsArray,n=e.iCurr,o=n-3,s=n-2,c=n-1,l=Math.min(Math.floor((t-o)/4),200);if(l<10)return t-(t-o)%4;var u,h=0,f=[],d=0,g=1,m=1;for(u=0;u<l;u++){var p=i[s+(u<<2)],b=i[c+(u<<2)][0];g+b.width>1e3&&(h=Math.max(h,g),m+=d+2,g=0,d=0),f.push({transform:p,x:g,y:m,w:b.width,h:b.height}),g+=b.width+2,d=Math.max(d,b.height)}var v=Math.max(h,g)+1,y=m+d+1,w=new Uint8Array(v*y*4),k=v<<2;for(u=0;u<l;u++){var S=i[c+(u<<2)][0].data,C=f[u].w<<2,x=0,A=f[u].x+f[u].y*v<<2;w.set(S.subarray(0,C),A-k);for(var _=0,P=f[u].h;_<P;_++)w.set(S.subarray(x,x+C),A),x+=C,A+=k;for(w.set(S.subarray(x-C,x),A);A>=0;)S[A-4]=S[A],S[A-3]=S[A+1],S[A-2]=S[A+2],S[A-1]=S[A+3],S[A+C]=S[A+C-4],S[A+C+1]=S[A+C-3],S[A+C+2]=S[A+C-2],S[A+C+3]=S[A+C-1],A-=k}return r.splice(o,4*l,a.OPS.paintInlineImageXObjectGroup),i.splice(o,4*l,[{width:v,height:y,kind:a.ImageKind.RGBA_32BPP,data:w},f]),o+1}),e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintImageMaskXObject,a.OPS.restore],null,function(e,t){var r=e.fnArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:return r[t]===a.OPS.transform;case 2:return r[t]===a.OPS.paintImageMaskXObject;case 3:return r[t]===a.OPS.restore}},function(e,t){var r,i=e.fnArray,n=e.argsArray,o=e.iCurr,s=o-3,c=o-2,l=o-1,u=Math.floor((t-s)/4);if((u=function(e,t,r,i){for(var n=e+2,o=0;o<t;o++){var s=i[n+4*o],c=1===s.length&&s[0];if(!c||1!==c.width||1!==c.height||c.data.length&&(1!==c.data.length||0!==c.data[0]))break;r[n+4*o]=a.OPS.paintSolidColorImageMask}return t-o}(s,u,i,n))<10)return t-(t-s)%4;var h,f,d=!1,g=n[l][0];if(0===n[c][1]&&0===n[c][2]){d=!0;var m=n[c][0],p=n[c][3];h=c+4;var b=l+4;for(r=1;r<u;r++,h+=4,b+=4)if(f=n[h],n[b][0]!==g||f[0]!==m||0!==f[1]||0!==f[2]||f[3]!==p){r<10?d=!1:u=r;break}}if(d){u=Math.min(u,1e3);var v=new Float32Array(2*u);for(h=c,r=0;r<u;r++,h+=4)f=n[h],v[r<<1]=f[4],v[1+(r<<1)]=f[5];i.splice(s,4*u,a.OPS.paintImageMaskXObjectRepeat),n.splice(s,4*u,[g,m,p,v])}else{u=Math.min(u,100);var y=[];for(r=0;r<u;r++){f=n[c+(r<<2)];var w=n[l+(r<<2)][0];y.push({data:w.data,width:w.width,height:w.height,transform:f})}i.splice(s,4*u,a.OPS.paintImageMaskXObjectGroup),n.splice(s,4*u,[y])}return s+1}),e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintImageXObject,a.OPS.restore],function(e){var t=e.argsArray,r=e.iCurr-2;return 0===t[r][1]&&0===t[r][2]},function(e,t){var r=e.fnArray,i=e.argsArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:if(r[t]!==a.OPS.transform)return!1;var n=e.iCurr-2,o=i[n][0],s=i[n][3];return i[t][0]===o&&0===i[t][1]&&0===i[t][2]&&i[t][3]===s;case 2:if(r[t]!==a.OPS.paintImageXObject)return!1;var c=i[e.iCurr-1][0];return i[t][0]===c;case 3:return r[t]===a.OPS.restore}},function(e,t){var r=e.fnArray,i=e.argsArray,n=e.iCurr,o=n-3,s=n-2,c=i[n-1][0],l=i[s][0],u=i[s][3],h=Math.min(Math.floor((t-o)/4),1e3);if(h<3)return t-(t-o)%4;for(var f=new Float32Array(2*h),d=s,g=0;g<h;g++,d+=4){var m=i[d];f[g<<1]=m[4],f[1+(g<<1)]=m[5]}var p=[c,l,u,f];return r.splice(o,4*h,a.OPS.paintImageXObjectRepeat),i.splice(o,4*h,p),o+1}),e(t,[a.OPS.beginText,a.OPS.setFont,a.OPS.setTextMatrix,a.OPS.showText,a.OPS.endText],null,function(e,t){var r=e.fnArray,i=e.argsArray;switch((t-(e.iCurr-4))%5){case 0:return r[t]===a.OPS.beginText;case 1:return r[t]===a.OPS.setFont;case 2:return r[t]===a.OPS.setTextMatrix;case 3:if(r[t]!==a.OPS.showText)return!1;var n=e.iCurr-3,o=i[n][0],s=i[n][1];return i[t][0]===o&&i[t][1]===s;case 4:return r[t]===a.OPS.endText}},function(e,t){var r=e.fnArray,a=e.argsArray,i=e.iCurr,n=i-4,o=i-3,s=i-2,c=i-1,l=i,u=a[o][0],h=a[o][1],f=Math.min(Math.floor((t-n)/5),1e3);if(f<3)return t-(t-n)%5;var d=n;n>=4&&r[n-4]===r[o]&&r[n-3]===r[s]&&r[n-2]===r[c]&&r[n-1]===r[l]&&a[n-4][0]===u&&a[n-4][1]===h&&(f++,d-=5);for(var g=d+4,m=1;m<f;m++)r.splice(g,3),a.splice(g,3),g+=2;return g+1}),r.prototype={_optimize:function(){var e=this.queue.fnArray,r=this.lastProcessed,a=e.length,i=this.state,n=this.match;if(i||n||r+1!==a||t[e[r]]){for(var o=this.context;r<a;){if(n){if((0,n.iterateFn)(o,r)){r++;continue}if(r=(0,n.processFn)(o,r+1),n=null,i=null,r>=(a=e.length))break}(i=(i||t)[e[r]])&&!Array.isArray(i)?(o.iCurr=r,r++,!i.checkFn||(0,i.checkFn)(o)?(n=i,i=null):i=null):r++}this.state=i,this.match=n,this.lastProcessed=r}else this.lastProcessed=a},push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t),this._optimize()},flush:function(){for(;this.match;){var e=this.queue.fnArray.length;this.lastProcessed=(0,this.match.processFn)(this.context,e),this.match=null,this.state=null,this._optimize()}},reset:function(){this.state=null,this.match=null,this.lastProcessed=0}},r}(),n=function(){function e(e){this.queue=e}return e.prototype={push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t)},flush:function(){}},e}(),o=function(){function e(e,t,r){this.messageHandler=t,this.fnArray=[],this.argsArray=[],t&&\"oplist\"!==this.intent?this.optimizer=new i(this):this.optimizer=new n(this),this.dependencies=Object.create(null),this._totalLength=0,this.pageIndex=r,this.intent=e,this.weight=0}return e.prototype={get length(){return this.argsArray.length},get totalLength(){return this._totalLength+this.length},addOp:function(e,t){this.optimizer.push(e,t),this.weight++,this.messageHandler&&(this.weight>=1e3?this.flush():this.weight>=995&&(e===a.OPS.restore||e===a.OPS.endText)&&this.flush())},addDependency:function(e){e in this.dependencies||(this.dependencies[e]=!0,this.addOp(a.OPS.dependency,[e]))},addDependencies:function(e){for(var t in e)this.addDependency(t)},addOpList:function(e){a.Util.extendObj(this.dependencies,e.dependencies);for(var t=0,r=e.length;t<r;t++)this.addOp(e.fnArray[t],e.argsArray[t])},getIR:function(){return{fnArray:this.fnArray,argsArray:this.argsArray,length:this.length}},flush:function(e){this.optimizer.flush();var t=function(e){for(var t=[],r=e.fnArray,i=e.argsArray,n=0,o=e.length;n<o;n++)switch(r[n]){case a.OPS.paintInlineImageXObject:case a.OPS.paintInlineImageXObjectGroup:case a.OPS.paintImageMaskXObject:var s=i[n][0];s.cached||t.push(s.data.buffer)}return t}(this),r=this.length;this._totalLength+=r,this.messageHandler.send(\"RenderPageChunk\",{operatorList:{fnArray:this.fnArray,argsArray:this.argsArray,lastChunk:e,length:r},pageIndex:this.pageIndex,intent:this.intent},t),this.dependencies=Object.create(null),this.fnArray.length=0,this.argsArray.length=0,this.weight=0,this.optimizer.reset()}},e}();t.OperatorList=o},function(e,t,r){\"use strict\";var a=r(0).getLookupTableFactory,i=a(function(e){e.A=65,e.AE=198,e.AEacute=508,e.AEmacron=482,e.AEsmall=63462,e.Aacute=193,e.Aacutesmall=63457,e.Abreve=258,e.Abreveacute=7854,e.Abrevecyrillic=1232,e.Abrevedotbelow=7862,e.Abrevegrave=7856,e.Abrevehookabove=7858,e.Abrevetilde=7860,e.Acaron=461,e.Acircle=9398,e.Acircumflex=194,e.Acircumflexacute=7844,e.Acircumflexdotbelow=7852,e.Acircumflexgrave=7846,e.Acircumflexhookabove=7848,e.Acircumflexsmall=63458,e.Acircumflextilde=7850,e.Acute=63177,e.Acutesmall=63412,e.Acyrillic=1040,e.Adblgrave=512,e.Adieresis=196,e.Adieresiscyrillic=1234,e.Adieresismacron=478,e.Adieresissmall=63460,e.Adotbelow=7840,e.Adotmacron=480,e.Agrave=192,e.Agravesmall=63456,e.Ahookabove=7842,e.Aiecyrillic=1236,e.Ainvertedbreve=514,e.Alpha=913,e.Alphatonos=902,e.Amacron=256,e.Amonospace=65313,e.Aogonek=260,e.Aring=197,e.Aringacute=506,e.Aringbelow=7680,e.Aringsmall=63461,e.Asmall=63329,e.Atilde=195,e.Atildesmall=63459,e.Aybarmenian=1329,e.B=66,e.Bcircle=9399,e.Bdotaccent=7682,e.Bdotbelow=7684,e.Becyrillic=1041,e.Benarmenian=1330,e.Beta=914,e.Bhook=385,e.Blinebelow=7686,e.Bmonospace=65314,e.Brevesmall=63220,e.Bsmall=63330,e.Btopbar=386,e.C=67,e.Caarmenian=1342,e.Cacute=262,e.Caron=63178,e.Caronsmall=63221,e.Ccaron=268,e.Ccedilla=199,e.Ccedillaacute=7688,e.Ccedillasmall=63463,e.Ccircle=9400,e.Ccircumflex=264,e.Cdot=266,e.Cdotaccent=266,e.Cedillasmall=63416,e.Chaarmenian=1353,e.Cheabkhasiancyrillic=1212,e.Checyrillic=1063,e.Chedescenderabkhasiancyrillic=1214,e.Chedescendercyrillic=1206,e.Chedieresiscyrillic=1268,e.Cheharmenian=1347,e.Chekhakassiancyrillic=1227,e.Cheverticalstrokecyrillic=1208,e.Chi=935,e.Chook=391,e.Circumflexsmall=63222,e.Cmonospace=65315,e.Coarmenian=1361,e.Csmall=63331,e.D=68,e.DZ=497,e.DZcaron=452,e.Daarmenian=1332,e.Dafrican=393,e.Dcaron=270,e.Dcedilla=7696,e.Dcircle=9401,e.Dcircumflexbelow=7698,e.Dcroat=272,e.Ddotaccent=7690,e.Ddotbelow=7692,e.Decyrillic=1044,e.Deicoptic=1006,e.Delta=8710,e.Deltagreek=916,e.Dhook=394,e.Dieresis=63179,e.DieresisAcute=63180,e.DieresisGrave=63181,e.Dieresissmall=63400,e.Digammagreek=988,e.Djecyrillic=1026,e.Dlinebelow=7694,e.Dmonospace=65316,e.Dotaccentsmall=63223,e.Dslash=272,e.Dsmall=63332,e.Dtopbar=395,e.Dz=498,e.Dzcaron=453,e.Dzeabkhasiancyrillic=1248,e.Dzecyrillic=1029,e.Dzhecyrillic=1039,e.E=69,e.Eacute=201,e.Eacutesmall=63465,e.Ebreve=276,e.Ecaron=282,e.Ecedillabreve=7708,e.Echarmenian=1333,e.Ecircle=9402,e.Ecircumflex=202,e.Ecircumflexacute=7870,e.Ecircumflexbelow=7704,e.Ecircumflexdotbelow=7878,e.Ecircumflexgrave=7872,e.Ecircumflexhookabove=7874,e.Ecircumflexsmall=63466,e.Ecircumflextilde=7876,e.Ecyrillic=1028,e.Edblgrave=516,e.Edieresis=203,e.Edieresissmall=63467,e.Edot=278,e.Edotaccent=278,e.Edotbelow=7864,e.Efcyrillic=1060,e.Egrave=200,e.Egravesmall=63464,e.Eharmenian=1335,e.Ehookabove=7866,e.Eightroman=8551,e.Einvertedbreve=518,e.Eiotifiedcyrillic=1124,e.Elcyrillic=1051,e.Elevenroman=8554,e.Emacron=274,e.Emacronacute=7702,e.Emacrongrave=7700,e.Emcyrillic=1052,e.Emonospace=65317,e.Encyrillic=1053,e.Endescendercyrillic=1186,e.Eng=330,e.Enghecyrillic=1188,e.Enhookcyrillic=1223,e.Eogonek=280,e.Eopen=400,e.Epsilon=917,e.Epsilontonos=904,e.Ercyrillic=1056,e.Ereversed=398,e.Ereversedcyrillic=1069,e.Escyrillic=1057,e.Esdescendercyrillic=1194,e.Esh=425,e.Esmall=63333,e.Eta=919,e.Etarmenian=1336,e.Etatonos=905,e.Eth=208,e.Ethsmall=63472,e.Etilde=7868,e.Etildebelow=7706,e.Euro=8364,e.Ezh=439,e.Ezhcaron=494,e.Ezhreversed=440,e.F=70,e.Fcircle=9403,e.Fdotaccent=7710,e.Feharmenian=1366,e.Feicoptic=996,e.Fhook=401,e.Fitacyrillic=1138,e.Fiveroman=8548,e.Fmonospace=65318,e.Fourroman=8547,e.Fsmall=63334,e.G=71,e.GBsquare=13191,e.Gacute=500,e.Gamma=915,e.Gammaafrican=404,e.Gangiacoptic=1002,e.Gbreve=286,e.Gcaron=486,e.Gcedilla=290,e.Gcircle=9404,e.Gcircumflex=284,e.Gcommaaccent=290,e.Gdot=288,e.Gdotaccent=288,e.Gecyrillic=1043,e.Ghadarmenian=1346,e.Ghemiddlehookcyrillic=1172,e.Ghestrokecyrillic=1170,e.Gheupturncyrillic=1168,e.Ghook=403,e.Gimarmenian=1331,e.Gjecyrillic=1027,e.Gmacron=7712,e.Gmonospace=65319,e.Grave=63182,e.Gravesmall=63328,e.Gsmall=63335,e.Gsmallhook=667,e.Gstroke=484,e.H=72,e.H18533=9679,e.H18543=9642,e.H18551=9643,e.H22073=9633,e.HPsquare=13259,e.Haabkhasiancyrillic=1192,e.Hadescendercyrillic=1202,e.Hardsigncyrillic=1066,e.Hbar=294,e.Hbrevebelow=7722,e.Hcedilla=7720,e.Hcircle=9405,e.Hcircumflex=292,e.Hdieresis=7718,e.Hdotaccent=7714,e.Hdotbelow=7716,e.Hmonospace=65320,e.Hoarmenian=1344,e.Horicoptic=1e3,e.Hsmall=63336,e.Hungarumlaut=63183,e.Hungarumlautsmall=63224,e.Hzsquare=13200,e.I=73,e.IAcyrillic=1071,e.IJ=306,e.IUcyrillic=1070,e.Iacute=205,e.Iacutesmall=63469,e.Ibreve=300,e.Icaron=463,e.Icircle=9406,e.Icircumflex=206,e.Icircumflexsmall=63470,e.Icyrillic=1030,e.Idblgrave=520,e.Idieresis=207,e.Idieresisacute=7726,e.Idieresiscyrillic=1252,e.Idieresissmall=63471,e.Idot=304,e.Idotaccent=304,e.Idotbelow=7882,e.Iebrevecyrillic=1238,e.Iecyrillic=1045,e.Ifraktur=8465,e.Igrave=204,e.Igravesmall=63468,e.Ihookabove=7880,e.Iicyrillic=1048,e.Iinvertedbreve=522,e.Iishortcyrillic=1049,e.Imacron=298,e.Imacroncyrillic=1250,e.Imonospace=65321,e.Iniarmenian=1339,e.Iocyrillic=1025,e.Iogonek=302,e.Iota=921,e.Iotaafrican=406,e.Iotadieresis=938,e.Iotatonos=906,e.Ismall=63337,e.Istroke=407,e.Itilde=296,e.Itildebelow=7724,e.Izhitsacyrillic=1140,e.Izhitsadblgravecyrillic=1142,e.J=74,e.Jaarmenian=1345,e.Jcircle=9407,e.Jcircumflex=308,e.Jecyrillic=1032,e.Jheharmenian=1355,e.Jmonospace=65322,e.Jsmall=63338,e.K=75,e.KBsquare=13189,e.KKsquare=13261,e.Kabashkircyrillic=1184,e.Kacute=7728,e.Kacyrillic=1050,e.Kadescendercyrillic=1178,e.Kahookcyrillic=1219,e.Kappa=922,e.Kastrokecyrillic=1182,e.Kaverticalstrokecyrillic=1180,e.Kcaron=488,e.Kcedilla=310,e.Kcircle=9408,e.Kcommaaccent=310,e.Kdotbelow=7730,e.Keharmenian=1364,e.Kenarmenian=1343,e.Khacyrillic=1061,e.Kheicoptic=998,e.Khook=408,e.Kjecyrillic=1036,e.Klinebelow=7732,e.Kmonospace=65323,e.Koppacyrillic=1152,e.Koppagreek=990,e.Ksicyrillic=1134,e.Ksmall=63339,e.L=76,e.LJ=455,e.LL=63167,e.Lacute=313,e.Lambda=923,e.Lcaron=317,e.Lcedilla=315,e.Lcircle=9409,e.Lcircumflexbelow=7740,e.Lcommaaccent=315,e.Ldot=319,e.Ldotaccent=319,e.Ldotbelow=7734,e.Ldotbelowmacron=7736,e.Liwnarmenian=1340,e.Lj=456,e.Ljecyrillic=1033,e.Llinebelow=7738,e.Lmonospace=65324,e.Lslash=321,e.Lslashsmall=63225,e.Lsmall=63340,e.M=77,e.MBsquare=13190,e.Macron=63184,e.Macronsmall=63407,e.Macute=7742,e.Mcircle=9410,e.Mdotaccent=7744,e.Mdotbelow=7746,e.Menarmenian=1348,e.Mmonospace=65325,e.Msmall=63341,e.Mturned=412,e.Mu=924,e.N=78,e.NJ=458,e.Nacute=323,e.Ncaron=327,e.Ncedilla=325,e.Ncircle=9411,e.Ncircumflexbelow=7754,e.Ncommaaccent=325,e.Ndotaccent=7748,e.Ndotbelow=7750,e.Nhookleft=413,e.Nineroman=8552,e.Nj=459,e.Njecyrillic=1034,e.Nlinebelow=7752,e.Nmonospace=65326,e.Nowarmenian=1350,e.Nsmall=63342,e.Ntilde=209,e.Ntildesmall=63473,e.Nu=925,e.O=79,e.OE=338,e.OEsmall=63226,e.Oacute=211,e.Oacutesmall=63475,e.Obarredcyrillic=1256,e.Obarreddieresiscyrillic=1258,e.Obreve=334,e.Ocaron=465,e.Ocenteredtilde=415,e.Ocircle=9412,e.Ocircumflex=212,e.Ocircumflexacute=7888,e.Ocircumflexdotbelow=7896,e.Ocircumflexgrave=7890,e.Ocircumflexhookabove=7892,e.Ocircumflexsmall=63476,e.Ocircumflextilde=7894,e.Ocyrillic=1054,e.Odblacute=336,e.Odblgrave=524,e.Odieresis=214,e.Odieresiscyrillic=1254,e.Odieresissmall=63478,e.Odotbelow=7884,e.Ogoneksmall=63227,e.Ograve=210,e.Ogravesmall=63474,e.Oharmenian=1365,e.Ohm=8486,e.Ohookabove=7886,e.Ohorn=416,e.Ohornacute=7898,e.Ohorndotbelow=7906,e.Ohorngrave=7900,e.Ohornhookabove=7902,e.Ohorntilde=7904,e.Ohungarumlaut=336,e.Oi=418,e.Oinvertedbreve=526,e.Omacron=332,e.Omacronacute=7762,e.Omacrongrave=7760,e.Omega=8486,e.Omegacyrillic=1120,e.Omegagreek=937,e.Omegaroundcyrillic=1146,e.Omegatitlocyrillic=1148,e.Omegatonos=911,e.Omicron=927,e.Omicrontonos=908,e.Omonospace=65327,e.Oneroman=8544,e.Oogonek=490,e.Oogonekmacron=492,e.Oopen=390,e.Oslash=216,e.Oslashacute=510,e.Oslashsmall=63480,e.Osmall=63343,e.Ostrokeacute=510,e.Otcyrillic=1150,e.Otilde=213,e.Otildeacute=7756,e.Otildedieresis=7758,e.Otildesmall=63477,e.P=80,e.Pacute=7764,e.Pcircle=9413,e.Pdotaccent=7766,e.Pecyrillic=1055,e.Peharmenian=1354,e.Pemiddlehookcyrillic=1190,e.Phi=934,e.Phook=420,e.Pi=928,e.Piwrarmenian=1363,e.Pmonospace=65328,e.Psi=936,e.Psicyrillic=1136,e.Psmall=63344,e.Q=81,e.Qcircle=9414,e.Qmonospace=65329,e.Qsmall=63345,e.R=82,e.Raarmenian=1356,e.Racute=340,e.Rcaron=344,e.Rcedilla=342,e.Rcircle=9415,e.Rcommaaccent=342,e.Rdblgrave=528,e.Rdotaccent=7768,e.Rdotbelow=7770,e.Rdotbelowmacron=7772,e.Reharmenian=1360,e.Rfraktur=8476,e.Rho=929,e.Ringsmall=63228,e.Rinvertedbreve=530,e.Rlinebelow=7774,e.Rmonospace=65330,e.Rsmall=63346,e.Rsmallinverted=641,e.Rsmallinvertedsuperior=694,e.S=83,e.SF010000=9484,e.SF020000=9492,e.SF030000=9488,e.SF040000=9496,e.SF050000=9532,e.SF060000=9516,e.SF070000=9524,e.SF080000=9500,e.SF090000=9508,e.SF100000=9472,e.SF110000=9474,e.SF190000=9569,e.SF200000=9570,e.SF210000=9558,e.SF220000=9557,e.SF230000=9571,e.SF240000=9553,e.SF250000=9559,e.SF260000=9565,e.SF270000=9564,e.SF280000=9563,e.SF360000=9566,e.SF370000=9567,e.SF380000=9562,e.SF390000=9556,e.SF400000=9577,e.SF410000=9574,e.SF420000=9568,e.SF430000=9552,e.SF440000=9580,e.SF450000=9575,e.SF460000=9576,e.SF470000=9572,e.SF480000=9573,e.SF490000=9561,e.SF500000=9560,e.SF510000=9554,e.SF520000=9555,e.SF530000=9579,e.SF540000=9578,e.Sacute=346,e.Sacutedotaccent=7780,e.Sampigreek=992,e.Scaron=352,e.Scarondotaccent=7782,e.Scaronsmall=63229,e.Scedilla=350,e.Schwa=399,e.Schwacyrillic=1240,e.Schwadieresiscyrillic=1242,e.Scircle=9416,e.Scircumflex=348,e.Scommaaccent=536,e.Sdotaccent=7776,e.Sdotbelow=7778,e.Sdotbelowdotaccent=7784,e.Seharmenian=1357,e.Sevenroman=8550,e.Shaarmenian=1351,e.Shacyrillic=1064,e.Shchacyrillic=1065,e.Sheicoptic=994,e.Shhacyrillic=1210,e.Shimacoptic=1004,e.Sigma=931,e.Sixroman=8549,e.Smonospace=65331,e.Softsigncyrillic=1068,e.Ssmall=63347,e.Stigmagreek=986,e.T=84,e.Tau=932,e.Tbar=358,e.Tcaron=356,e.Tcedilla=354,e.Tcircle=9417,e.Tcircumflexbelow=7792,e.Tcommaaccent=354,e.Tdotaccent=7786,e.Tdotbelow=7788,e.Tecyrillic=1058,e.Tedescendercyrillic=1196,e.Tenroman=8553,e.Tetsecyrillic=1204,e.Theta=920,e.Thook=428,e.Thorn=222,e.Thornsmall=63486,e.Threeroman=8546,e.Tildesmall=63230,e.Tiwnarmenian=1359,e.Tlinebelow=7790,e.Tmonospace=65332,e.Toarmenian=1337,e.Tonefive=444,e.Tonesix=388,e.Tonetwo=423,e.Tretroflexhook=430,e.Tsecyrillic=1062,e.Tshecyrillic=1035,e.Tsmall=63348,e.Twelveroman=8555,e.Tworoman=8545,e.U=85,e.Uacute=218,e.Uacutesmall=63482,e.Ubreve=364,e.Ucaron=467,e.Ucircle=9418,e.Ucircumflex=219,e.Ucircumflexbelow=7798,e.Ucircumflexsmall=63483,e.Ucyrillic=1059,e.Udblacute=368,e.Udblgrave=532,e.Udieresis=220,e.Udieresisacute=471,e.Udieresisbelow=7794,e.Udieresiscaron=473,e.Udieresiscyrillic=1264,e.Udieresisgrave=475,e.Udieresismacron=469,e.Udieresissmall=63484,e.Udotbelow=7908,e.Ugrave=217,e.Ugravesmall=63481,e.Uhookabove=7910,e.Uhorn=431,e.Uhornacute=7912,e.Uhorndotbelow=7920,e.Uhorngrave=7914,e.Uhornhookabove=7916,e.Uhorntilde=7918,e.Uhungarumlaut=368,e.Uhungarumlautcyrillic=1266,e.Uinvertedbreve=534,e.Ukcyrillic=1144,e.Umacron=362,e.Umacroncyrillic=1262,e.Umacrondieresis=7802,e.Umonospace=65333,e.Uogonek=370,e.Upsilon=933,e.Upsilon1=978,e.Upsilonacutehooksymbolgreek=979,e.Upsilonafrican=433,e.Upsilondieresis=939,e.Upsilondieresishooksymbolgreek=980,e.Upsilonhooksymbol=978,e.Upsilontonos=910,e.Uring=366,e.Ushortcyrillic=1038,e.Usmall=63349,e.Ustraightcyrillic=1198,e.Ustraightstrokecyrillic=1200,e.Utilde=360,e.Utildeacute=7800,e.Utildebelow=7796,e.V=86,e.Vcircle=9419,e.Vdotbelow=7806,e.Vecyrillic=1042,e.Vewarmenian=1358,e.Vhook=434,e.Vmonospace=65334,e.Voarmenian=1352,e.Vsmall=63350,e.Vtilde=7804,e.W=87,e.Wacute=7810,e.Wcircle=9420,e.Wcircumflex=372,e.Wdieresis=7812,e.Wdotaccent=7814,e.Wdotbelow=7816,e.Wgrave=7808,e.Wmonospace=65335,e.Wsmall=63351,e.X=88,e.Xcircle=9421,e.Xdieresis=7820,e.Xdotaccent=7818,e.Xeharmenian=1341,e.Xi=926,e.Xmonospace=65336,e.Xsmall=63352,e.Y=89,e.Yacute=221,e.Yacutesmall=63485,e.Yatcyrillic=1122,e.Ycircle=9422,e.Ycircumflex=374,e.Ydieresis=376,e.Ydieresissmall=63487,e.Ydotaccent=7822,e.Ydotbelow=7924,e.Yericyrillic=1067,e.Yerudieresiscyrillic=1272,e.Ygrave=7922,e.Yhook=435,e.Yhookabove=7926,e.Yiarmenian=1349,e.Yicyrillic=1031,e.Yiwnarmenian=1362,e.Ymonospace=65337,e.Ysmall=63353,e.Ytilde=7928,e.Yusbigcyrillic=1130,e.Yusbigiotifiedcyrillic=1132,e.Yuslittlecyrillic=1126,e.Yuslittleiotifiedcyrillic=1128,e.Z=90,e.Zaarmenian=1334,e.Zacute=377,e.Zcaron=381,e.Zcaronsmall=63231,e.Zcircle=9423,e.Zcircumflex=7824,e.Zdot=379,e.Zdotaccent=379,e.Zdotbelow=7826,e.Zecyrillic=1047,e.Zedescendercyrillic=1176,e.Zedieresiscyrillic=1246,e.Zeta=918,e.Zhearmenian=1338,e.Zhebrevecyrillic=1217,e.Zhecyrillic=1046,e.Zhedescendercyrillic=1174,e.Zhedieresiscyrillic=1244,e.Zlinebelow=7828,e.Zmonospace=65338,e.Zsmall=63354,e.Zstroke=437,e.a=97,e.aabengali=2438,e.aacute=225,e.aadeva=2310,e.aagujarati=2694,e.aagurmukhi=2566,e.aamatragurmukhi=2622,e.aarusquare=13059,e.aavowelsignbengali=2494,e.aavowelsigndeva=2366,e.aavowelsigngujarati=2750,e.abbreviationmarkarmenian=1375,e.abbreviationsigndeva=2416,e.abengali=2437,e.abopomofo=12570,e.abreve=259,e.abreveacute=7855,e.abrevecyrillic=1233,e.abrevedotbelow=7863,e.abrevegrave=7857,e.abrevehookabove=7859,e.abrevetilde=7861,e.acaron=462,e.acircle=9424,e.acircumflex=226,e.acircumflexacute=7845,e.acircumflexdotbelow=7853,e.acircumflexgrave=7847,e.acircumflexhookabove=7849,e.acircumflextilde=7851,e.acute=180,e.acutebelowcmb=791,e.acutecmb=769,e.acutecomb=769,e.acutedeva=2388,e.acutelowmod=719,e.acutetonecmb=833,e.acyrillic=1072,e.adblgrave=513,e.addakgurmukhi=2673,e.adeva=2309,e.adieresis=228,e.adieresiscyrillic=1235,e.adieresismacron=479,e.adotbelow=7841,e.adotmacron=481,e.ae=230,e.aeacute=509,e.aekorean=12624,e.aemacron=483,e.afii00208=8213,e.afii08941=8356,e.afii10017=1040,e.afii10018=1041,e.afii10019=1042,e.afii10020=1043,e.afii10021=1044,e.afii10022=1045,e.afii10023=1025,e.afii10024=1046,e.afii10025=1047,e.afii10026=1048,e.afii10027=1049,e.afii10028=1050,e.afii10029=1051,e.afii10030=1052;e.afii10031=1053,e.afii10032=1054,e.afii10033=1055,e.afii10034=1056,e.afii10035=1057,e.afii10036=1058,e.afii10037=1059,e.afii10038=1060,e.afii10039=1061,e.afii10040=1062,e.afii10041=1063,e.afii10042=1064,e.afii10043=1065,e.afii10044=1066,e.afii10045=1067,e.afii10046=1068,e.afii10047=1069,e.afii10048=1070,e.afii10049=1071,e.afii10050=1168,e.afii10051=1026,e.afii10052=1027,e.afii10053=1028,e.afii10054=1029,e.afii10055=1030,e.afii10056=1031,e.afii10057=1032,e.afii10058=1033,e.afii10059=1034,e.afii10060=1035,e.afii10061=1036,e.afii10062=1038,e.afii10063=63172,e.afii10064=63173,e.afii10065=1072,e.afii10066=1073,e.afii10067=1074,e.afii10068=1075,e.afii10069=1076,e.afii10070=1077,e.afii10071=1105,e.afii10072=1078,e.afii10073=1079,e.afii10074=1080,e.afii10075=1081,e.afii10076=1082,e.afii10077=1083,e.afii10078=1084,e.afii10079=1085,e.afii10080=1086,e.afii10081=1087,e.afii10082=1088,e.afii10083=1089,e.afii10084=1090,e.afii10085=1091,e.afii10086=1092,e.afii10087=1093,e.afii10088=1094,e.afii10089=1095,e.afii10090=1096,e.afii10091=1097,e.afii10092=1098,e.afii10093=1099,e.afii10094=1100,e.afii10095=1101,e.afii10096=1102,e.afii10097=1103,e.afii10098=1169,e.afii10099=1106,e.afii10100=1107,e.afii10101=1108,e.afii10102=1109,e.afii10103=1110,e.afii10104=1111,e.afii10105=1112,e.afii10106=1113,e.afii10107=1114,e.afii10108=1115,e.afii10109=1116,e.afii10110=1118,e.afii10145=1039,e.afii10146=1122,e.afii10147=1138,e.afii10148=1140,e.afii10192=63174,e.afii10193=1119,e.afii10194=1123,e.afii10195=1139,e.afii10196=1141,e.afii10831=63175,e.afii10832=63176,e.afii10846=1241,e.afii299=8206,e.afii300=8207,e.afii301=8205,e.afii57381=1642,e.afii57388=1548,e.afii57392=1632,e.afii57393=1633,e.afii57394=1634,e.afii57395=1635,e.afii57396=1636,e.afii57397=1637,e.afii57398=1638,e.afii57399=1639,e.afii57400=1640,e.afii57401=1641,e.afii57403=1563,e.afii57407=1567,e.afii57409=1569,e.afii57410=1570,e.afii57411=1571,e.afii57412=1572,e.afii57413=1573,e.afii57414=1574,e.afii57415=1575,e.afii57416=1576,e.afii57417=1577,e.afii57418=1578,e.afii57419=1579,e.afii57420=1580,e.afii57421=1581,e.afii57422=1582,e.afii57423=1583,e.afii57424=1584,e.afii57425=1585,e.afii57426=1586,e.afii57427=1587,e.afii57428=1588,e.afii57429=1589,e.afii57430=1590,e.afii57431=1591,e.afii57432=1592,e.afii57433=1593,e.afii57434=1594,e.afii57440=1600,e.afii57441=1601,e.afii57442=1602,e.afii57443=1603,e.afii57444=1604,e.afii57445=1605,e.afii57446=1606,e.afii57448=1608,e.afii57449=1609,e.afii57450=1610,e.afii57451=1611,e.afii57452=1612,e.afii57453=1613,e.afii57454=1614,e.afii57455=1615,e.afii57456=1616,e.afii57457=1617,e.afii57458=1618,e.afii57470=1607,e.afii57505=1700,e.afii57506=1662,e.afii57507=1670,e.afii57508=1688,e.afii57509=1711,e.afii57511=1657,e.afii57512=1672,e.afii57513=1681,e.afii57514=1722,e.afii57519=1746,e.afii57534=1749,e.afii57636=8362,e.afii57645=1470,e.afii57658=1475,e.afii57664=1488,e.afii57665=1489,e.afii57666=1490,e.afii57667=1491,e.afii57668=1492,e.afii57669=1493,e.afii57670=1494,e.afii57671=1495,e.afii57672=1496,e.afii57673=1497,e.afii57674=1498,e.afii57675=1499,e.afii57676=1500,e.afii57677=1501,e.afii57678=1502,e.afii57679=1503,e.afii57680=1504,e.afii57681=1505,e.afii57682=1506,e.afii57683=1507,e.afii57684=1508,e.afii57685=1509,e.afii57686=1510,e.afii57687=1511,e.afii57688=1512,e.afii57689=1513,e.afii57690=1514,e.afii57694=64298,e.afii57695=64299,e.afii57700=64331,e.afii57705=64287,e.afii57716=1520,e.afii57717=1521,e.afii57718=1522,e.afii57723=64309,e.afii57793=1460,e.afii57794=1461,e.afii57795=1462,e.afii57796=1467,e.afii57797=1464,e.afii57798=1463,e.afii57799=1456,e.afii57800=1458,e.afii57801=1457,e.afii57802=1459,e.afii57803=1474,e.afii57804=1473,e.afii57806=1465,e.afii57807=1468,e.afii57839=1469,e.afii57841=1471,e.afii57842=1472,e.afii57929=700,e.afii61248=8453,e.afii61289=8467,e.afii61352=8470,e.afii61573=8236,e.afii61574=8237,e.afii61575=8238,e.afii61664=8204,e.afii63167=1645,e.afii64937=701,e.agrave=224,e.agujarati=2693,e.agurmukhi=2565,e.ahiragana=12354,e.ahookabove=7843,e.aibengali=2448,e.aibopomofo=12574,e.aideva=2320,e.aiecyrillic=1237,e.aigujarati=2704,e.aigurmukhi=2576,e.aimatragurmukhi=2632,e.ainarabic=1593,e.ainfinalarabic=65226,e.aininitialarabic=65227,e.ainmedialarabic=65228,e.ainvertedbreve=515,e.aivowelsignbengali=2504,e.aivowelsigndeva=2376,e.aivowelsigngujarati=2760,e.akatakana=12450,e.akatakanahalfwidth=65393,e.akorean=12623,e.alef=1488,e.alefarabic=1575,e.alefdageshhebrew=64304,e.aleffinalarabic=65166,e.alefhamzaabovearabic=1571,e.alefhamzaabovefinalarabic=65156,e.alefhamzabelowarabic=1573,e.alefhamzabelowfinalarabic=65160,e.alefhebrew=1488,e.aleflamedhebrew=64335,e.alefmaddaabovearabic=1570,e.alefmaddaabovefinalarabic=65154,e.alefmaksuraarabic=1609,e.alefmaksurafinalarabic=65264,e.alefmaksurainitialarabic=65267,e.alefmaksuramedialarabic=65268,e.alefpatahhebrew=64302,e.alefqamatshebrew=64303,e.aleph=8501,e.allequal=8780,e.alpha=945,e.alphatonos=940,e.amacron=257,e.amonospace=65345,e.ampersand=38,e.ampersandmonospace=65286,e.ampersandsmall=63270,e.amsquare=13250,e.anbopomofo=12578,e.angbopomofo=12580,e.angbracketleft=12296,e.angbracketright=12297,e.angkhankhuthai=3674,e.angle=8736,e.anglebracketleft=12296,e.anglebracketleftvertical=65087,e.anglebracketright=12297,e.anglebracketrightvertical=65088,e.angleleft=9001,e.angleright=9002,e.angstrom=8491,e.anoteleia=903,e.anudattadeva=2386,e.anusvarabengali=2434,e.anusvaradeva=2306,e.anusvaragujarati=2690,e.aogonek=261,e.apaatosquare=13056,e.aparen=9372,e.apostrophearmenian=1370,e.apostrophemod=700,e.apple=63743,e.approaches=8784,e.approxequal=8776,e.approxequalorimage=8786,e.approximatelyequal=8773,e.araeaekorean=12686,e.araeakorean=12685,e.arc=8978,e.arighthalfring=7834,e.aring=229,e.aringacute=507,e.aringbelow=7681,e.arrowboth=8596,e.arrowdashdown=8675,e.arrowdashleft=8672,e.arrowdashright=8674,e.arrowdashup=8673,e.arrowdblboth=8660,e.arrowdbldown=8659,e.arrowdblleft=8656,e.arrowdblright=8658,e.arrowdblup=8657,e.arrowdown=8595,e.arrowdownleft=8601,e.arrowdownright=8600,e.arrowdownwhite=8681,e.arrowheaddownmod=709,e.arrowheadleftmod=706,e.arrowheadrightmod=707,e.arrowheadupmod=708,e.arrowhorizex=63719,e.arrowleft=8592,e.arrowleftdbl=8656,e.arrowleftdblstroke=8653,e.arrowleftoverright=8646,e.arrowleftwhite=8678,e.arrowright=8594,e.arrowrightdblstroke=8655,e.arrowrightheavy=10142,e.arrowrightoverleft=8644,e.arrowrightwhite=8680,e.arrowtableft=8676,e.arrowtabright=8677,e.arrowup=8593,e.arrowupdn=8597,e.arrowupdnbse=8616,e.arrowupdownbase=8616,e.arrowupleft=8598,e.arrowupleftofdown=8645,e.arrowupright=8599,e.arrowupwhite=8679,e.arrowvertex=63718,e.asciicircum=94,e.asciicircummonospace=65342,e.asciitilde=126,e.asciitildemonospace=65374,e.ascript=593,e.ascriptturned=594,e.asmallhiragana=12353,e.asmallkatakana=12449,e.asmallkatakanahalfwidth=65383,e.asterisk=42,e.asteriskaltonearabic=1645,e.asteriskarabic=1645,e.asteriskmath=8727,e.asteriskmonospace=65290,e.asterisksmall=65121,e.asterism=8258,e.asuperior=63209,e.asymptoticallyequal=8771,e.at=64,e.atilde=227,e.atmonospace=65312,e.atsmall=65131,e.aturned=592,e.aubengali=2452,e.aubopomofo=12576,e.audeva=2324,e.augujarati=2708,e.augurmukhi=2580,e.aulengthmarkbengali=2519,e.aumatragurmukhi=2636,e.auvowelsignbengali=2508,e.auvowelsigndeva=2380,e.auvowelsigngujarati=2764,e.avagrahadeva=2365,e.aybarmenian=1377,e.ayin=1506,e.ayinaltonehebrew=64288,e.ayinhebrew=1506,e.b=98,e.babengali=2476,e.backslash=92,e.backslashmonospace=65340,e.badeva=2348,e.bagujarati=2732,e.bagurmukhi=2604,e.bahiragana=12400,e.bahtthai=3647,e.bakatakana=12496,e.bar=124,e.barmonospace=65372,e.bbopomofo=12549,e.bcircle=9425,e.bdotaccent=7683,e.bdotbelow=7685,e.beamedsixteenthnotes=9836,e.because=8757,e.becyrillic=1073,e.beharabic=1576,e.behfinalarabic=65168,e.behinitialarabic=65169,e.behiragana=12409,e.behmedialarabic=65170,e.behmeeminitialarabic=64671,e.behmeemisolatedarabic=64520,e.behnoonfinalarabic=64621,e.bekatakana=12505,e.benarmenian=1378,e.bet=1489,e.beta=946,e.betasymbolgreek=976,e.betdagesh=64305,e.betdageshhebrew=64305,e.bethebrew=1489,e.betrafehebrew=64332,e.bhabengali=2477,e.bhadeva=2349,e.bhagujarati=2733,e.bhagurmukhi=2605,e.bhook=595,e.bihiragana=12403,e.bikatakana=12499,e.bilabialclick=664,e.bindigurmukhi=2562,e.birusquare=13105,e.blackcircle=9679,e.blackdiamond=9670,e.blackdownpointingtriangle=9660,e.blackleftpointingpointer=9668,e.blackleftpointingtriangle=9664,e.blacklenticularbracketleft=12304,e.blacklenticularbracketleftvertical=65083,e.blacklenticularbracketright=12305,e.blacklenticularbracketrightvertical=65084,e.blacklowerlefttriangle=9699,e.blacklowerrighttriangle=9698,e.blackrectangle=9644,e.blackrightpointingpointer=9658,e.blackrightpointingtriangle=9654,e.blacksmallsquare=9642,e.blacksmilingface=9787,e.blacksquare=9632,e.blackstar=9733,e.blackupperlefttriangle=9700,e.blackupperrighttriangle=9701,e.blackuppointingsmalltriangle=9652,e.blackuppointingtriangle=9650,e.blank=9251,e.blinebelow=7687,e.block=9608,e.bmonospace=65346,e.bobaimaithai=3610,e.bohiragana=12412,e.bokatakana=12508,e.bparen=9373,e.bqsquare=13251,e.braceex=63732,e.braceleft=123,e.braceleftbt=63731,e.braceleftmid=63730,e.braceleftmonospace=65371,e.braceleftsmall=65115,e.bracelefttp=63729,e.braceleftvertical=65079,e.braceright=125,e.bracerightbt=63742,e.bracerightmid=63741,e.bracerightmonospace=65373,e.bracerightsmall=65116,e.bracerighttp=63740,e.bracerightvertical=65080,e.bracketleft=91,e.bracketleftbt=63728,e.bracketleftex=63727,e.bracketleftmonospace=65339,e.bracketlefttp=63726,e.bracketright=93,e.bracketrightbt=63739,e.bracketrightex=63738,e.bracketrightmonospace=65341,e.bracketrighttp=63737,e.breve=728,e.brevebelowcmb=814,e.brevecmb=774,e.breveinvertedbelowcmb=815,e.breveinvertedcmb=785,e.breveinverteddoublecmb=865,e.bridgebelowcmb=810,e.bridgeinvertedbelowcmb=826,e.brokenbar=166,e.bstroke=384,e.bsuperior=63210,e.btopbar=387,e.buhiragana=12406,e.bukatakana=12502,e.bullet=8226,e.bulletinverse=9688,e.bulletoperator=8729,e.bullseye=9678,e.c=99,e.caarmenian=1390,e.cabengali=2458,e.cacute=263,e.cadeva=2330,e.cagujarati=2714,e.cagurmukhi=2586,e.calsquare=13192,e.candrabindubengali=2433,e.candrabinducmb=784,e.candrabindudeva=2305,e.candrabindugujarati=2689,e.capslock=8682,e.careof=8453,e.caron=711,e.caronbelowcmb=812,e.caroncmb=780,e.carriagereturn=8629,e.cbopomofo=12568,e.ccaron=269,e.ccedilla=231,e.ccedillaacute=7689,e.ccircle=9426,e.ccircumflex=265,e.ccurl=597,e.cdot=267,e.cdotaccent=267,e.cdsquare=13253,e.cedilla=184,e.cedillacmb=807,e.cent=162,e.centigrade=8451,e.centinferior=63199,e.centmonospace=65504,e.centoldstyle=63394,e.centsuperior=63200,e.chaarmenian=1401,e.chabengali=2459,e.chadeva=2331,e.chagujarati=2715,e.chagurmukhi=2587,e.chbopomofo=12564,e.cheabkhasiancyrillic=1213,e.checkmark=10003,e.checyrillic=1095,e.chedescenderabkhasiancyrillic=1215,e.chedescendercyrillic=1207,e.chedieresiscyrillic=1269,e.cheharmenian=1395,e.chekhakassiancyrillic=1228,e.cheverticalstrokecyrillic=1209,e.chi=967,e.chieuchacirclekorean=12919,e.chieuchaparenkorean=12823,e.chieuchcirclekorean=12905,e.chieuchkorean=12618,e.chieuchparenkorean=12809,e.chochangthai=3594,e.chochanthai=3592,e.chochingthai=3593,e.chochoethai=3596,e.chook=392,e.cieucacirclekorean=12918,e.cieucaparenkorean=12822,e.cieuccirclekorean=12904,e.cieuckorean=12616,e.cieucparenkorean=12808,e.cieucuparenkorean=12828,e.circle=9675,e.circlecopyrt=169,e.circlemultiply=8855,e.circleot=8857,e.circleplus=8853,e.circlepostalmark=12342,e.circlewithlefthalfblack=9680,e.circlewithrighthalfblack=9681,e.circumflex=710,e.circumflexbelowcmb=813,e.circumflexcmb=770,e.clear=8999,e.clickalveolar=450,e.clickdental=448,e.clicklateral=449,e.clickretroflex=451,e.club=9827,e.clubsuitblack=9827,e.clubsuitwhite=9831,e.cmcubedsquare=13220,e.cmonospace=65347,e.cmsquaredsquare=13216,e.coarmenian=1409,e.colon=58,e.colonmonetary=8353,e.colonmonospace=65306,e.colonsign=8353,e.colonsmall=65109,e.colontriangularhalfmod=721,e.colontriangularmod=720,e.comma=44,e.commaabovecmb=787,e.commaaboverightcmb=789,e.commaaccent=63171,e.commaarabic=1548,e.commaarmenian=1373,e.commainferior=63201,e.commamonospace=65292,e.commareversedabovecmb=788,e.commareversedmod=701,e.commasmall=65104,e.commasuperior=63202,e.commaturnedabovecmb=786,e.commaturnedmod=699,e.compass=9788,e.congruent=8773,e.contourintegral=8750,e.control=8963,e.controlACK=6,e.controlBEL=7,e.controlBS=8,e.controlCAN=24,e.controlCR=13,e.controlDC1=17,e.controlDC2=18,e.controlDC3=19,e.controlDC4=20,e.controlDEL=127,e.controlDLE=16,e.controlEM=25,e.controlENQ=5,e.controlEOT=4,e.controlESC=27,e.controlETB=23,e.controlETX=3,e.controlFF=12,e.controlFS=28,e.controlGS=29,e.controlHT=9,e.controlLF=10,e.controlNAK=21,e.controlNULL=0,e.controlRS=30,e.controlSI=15,e.controlSO=14,e.controlSOT=2,e.controlSTX=1,e.controlSUB=26,e.controlSYN=22,e.controlUS=31,e.controlVT=11,e.copyright=169,e.copyrightsans=63721,e.copyrightserif=63193,e.cornerbracketleft=12300,e.cornerbracketlefthalfwidth=65378,e.cornerbracketleftvertical=65089,e.cornerbracketright=12301,e.cornerbracketrighthalfwidth=65379,e.cornerbracketrightvertical=65090,e.corporationsquare=13183,e.cosquare=13255,e.coverkgsquare=13254,e.cparen=9374,e.cruzeiro=8354,e.cstretched=663,e.curlyand=8911,e.curlyor=8910,e.currency=164,e.cyrBreve=63185,e.cyrFlex=63186,e.cyrbreve=63188,e.cyrflex=63189,e.d=100,e.daarmenian=1380,e.dabengali=2470,e.dadarabic=1590,e.dadeva=2342,e.dadfinalarabic=65214,e.dadinitialarabic=65215,e.dadmedialarabic=65216,e.dagesh=1468,e.dageshhebrew=1468,e.dagger=8224,e.daggerdbl=8225,e.dagujarati=2726,e.dagurmukhi=2598,e.dahiragana=12384,e.dakatakana=12480,e.dalarabic=1583,e.dalet=1491,e.daletdagesh=64307,e.daletdageshhebrew=64307,e.dalethebrew=1491,e.dalfinalarabic=65194,e.dammaarabic=1615,e.dammalowarabic=1615,e.dammatanaltonearabic=1612,e.dammatanarabic=1612,e.danda=2404,e.dargahebrew=1447,e.dargalefthebrew=1447,e.dasiapneumatacyrilliccmb=1157,e.dblGrave=63187,e.dblanglebracketleft=12298,e.dblanglebracketleftvertical=65085,e.dblanglebracketright=12299,e.dblanglebracketrightvertical=65086,e.dblarchinvertedbelowcmb=811,e.dblarrowleft=8660,e.dblarrowright=8658,e.dbldanda=2405,e.dblgrave=63190,e.dblgravecmb=783,e.dblintegral=8748,e.dbllowline=8215,e.dbllowlinecmb=819,e.dbloverlinecmb=831,e.dblprimemod=698,e.dblverticalbar=8214,e.dblverticallineabovecmb=782,e.dbopomofo=12553,e.dbsquare=13256,e.dcaron=271,e.dcedilla=7697,e.dcircle=9427,e.dcircumflexbelow=7699,e.dcroat=273,e.ddabengali=2465,e.ddadeva=2337,e.ddagujarati=2721,e.ddagurmukhi=2593,e.ddalarabic=1672,e.ddalfinalarabic=64393,e.dddhadeva=2396,e.ddhabengali=2466,e.ddhadeva=2338,e.ddhagujarati=2722,e.ddhagurmukhi=2594,e.ddotaccent=7691,e.ddotbelow=7693,e.decimalseparatorarabic=1643,e.decimalseparatorpersian=1643,e.decyrillic=1076,e.degree=176,e.dehihebrew=1453,e.dehiragana=12391,e.deicoptic=1007,e.dekatakana=12487,e.deleteleft=9003,e.deleteright=8998,e.delta=948,e.deltaturned=397,e.denominatorminusonenumeratorbengali=2552,e.dezh=676,e.dhabengali=2471,e.dhadeva=2343,e.dhagujarati=2727,e.dhagurmukhi=2599,e.dhook=599,e.dialytikatonos=901,e.dialytikatonoscmb=836,e.diamond=9830,e.diamondsuitwhite=9826,e.dieresis=168,e.dieresisacute=63191,e.dieresisbelowcmb=804,e.dieresiscmb=776,e.dieresisgrave=63192,e.dieresistonos=901,e.dihiragana=12386,e.dikatakana=12482,e.dittomark=12291,e.divide=247,e.divides=8739,e.divisionslash=8725,e.djecyrillic=1106,e.dkshade=9619,e.dlinebelow=7695,e.dlsquare=13207,e.dmacron=273,e.dmonospace=65348,e.dnblock=9604,e.dochadathai=3598,e.dodekthai=3604,e.dohiragana=12393,e.dokatakana=12489,e.dollar=36;e.dollarinferior=63203,e.dollarmonospace=65284,e.dollaroldstyle=63268,e.dollarsmall=65129,e.dollarsuperior=63204,e.dong=8363,e.dorusquare=13094,e.dotaccent=729,e.dotaccentcmb=775,e.dotbelowcmb=803,e.dotbelowcomb=803,e.dotkatakana=12539,e.dotlessi=305,e.dotlessj=63166,e.dotlessjstrokehook=644,e.dotmath=8901,e.dottedcircle=9676,e.doubleyodpatah=64287,e.doubleyodpatahhebrew=64287,e.downtackbelowcmb=798,e.downtackmod=725,e.dparen=9375,e.dsuperior=63211,e.dtail=598,e.dtopbar=396,e.duhiragana=12389,e.dukatakana=12485,e.dz=499,e.dzaltone=675,e.dzcaron=454,e.dzcurl=677,e.dzeabkhasiancyrillic=1249,e.dzecyrillic=1109,e.dzhecyrillic=1119,e.e=101,e.eacute=233,e.earth=9793,e.ebengali=2447,e.ebopomofo=12572,e.ebreve=277,e.ecandradeva=2317,e.ecandragujarati=2701,e.ecandravowelsigndeva=2373,e.ecandravowelsigngujarati=2757,e.ecaron=283,e.ecedillabreve=7709,e.echarmenian=1381,e.echyiwnarmenian=1415,e.ecircle=9428,e.ecircumflex=234,e.ecircumflexacute=7871,e.ecircumflexbelow=7705,e.ecircumflexdotbelow=7879,e.ecircumflexgrave=7873,e.ecircumflexhookabove=7875,e.ecircumflextilde=7877,e.ecyrillic=1108,e.edblgrave=517,e.edeva=2319,e.edieresis=235,e.edot=279,e.edotaccent=279,e.edotbelow=7865,e.eegurmukhi=2575,e.eematragurmukhi=2631,e.efcyrillic=1092,e.egrave=232,e.egujarati=2703,e.eharmenian=1383,e.ehbopomofo=12573,e.ehiragana=12360,e.ehookabove=7867,e.eibopomofo=12575,e.eight=56,e.eightarabic=1640,e.eightbengali=2542,e.eightcircle=9319,e.eightcircleinversesansserif=10129,e.eightdeva=2414,e.eighteencircle=9329,e.eighteenparen=9349,e.eighteenperiod=9369,e.eightgujarati=2798,e.eightgurmukhi=2670,e.eighthackarabic=1640,e.eighthangzhou=12328,e.eighthnotebeamed=9835,e.eightideographicparen=12839,e.eightinferior=8328,e.eightmonospace=65304,e.eightoldstyle=63288,e.eightparen=9339,e.eightperiod=9359,e.eightpersian=1784,e.eightroman=8567,e.eightsuperior=8312,e.eightthai=3672,e.einvertedbreve=519,e.eiotifiedcyrillic=1125,e.ekatakana=12456,e.ekatakanahalfwidth=65396,e.ekonkargurmukhi=2676,e.ekorean=12628,e.elcyrillic=1083,e.element=8712,e.elevencircle=9322,e.elevenparen=9342,e.elevenperiod=9362,e.elevenroman=8570,e.ellipsis=8230,e.ellipsisvertical=8942,e.emacron=275,e.emacronacute=7703,e.emacrongrave=7701,e.emcyrillic=1084,e.emdash=8212,e.emdashvertical=65073,e.emonospace=65349,e.emphasismarkarmenian=1371,e.emptyset=8709,e.enbopomofo=12579,e.encyrillic=1085,e.endash=8211,e.endashvertical=65074,e.endescendercyrillic=1187,e.eng=331,e.engbopomofo=12581,e.enghecyrillic=1189,e.enhookcyrillic=1224,e.enspace=8194,e.eogonek=281,e.eokorean=12627,e.eopen=603,e.eopenclosed=666,e.eopenreversed=604,e.eopenreversedclosed=606,e.eopenreversedhook=605,e.eparen=9376,e.epsilon=949,e.epsilontonos=941,e.equal=61,e.equalmonospace=65309,e.equalsmall=65126,e.equalsuperior=8316,e.equivalence=8801,e.erbopomofo=12582,e.ercyrillic=1088,e.ereversed=600,e.ereversedcyrillic=1101,e.escyrillic=1089,e.esdescendercyrillic=1195,e.esh=643,e.eshcurl=646,e.eshortdeva=2318,e.eshortvowelsigndeva=2374,e.eshreversedloop=426,e.eshsquatreversed=645,e.esmallhiragana=12359,e.esmallkatakana=12455,e.esmallkatakanahalfwidth=65386,e.estimated=8494,e.esuperior=63212,e.eta=951,e.etarmenian=1384,e.etatonos=942,e.eth=240,e.etilde=7869,e.etildebelow=7707,e.etnahtafoukhhebrew=1425,e.etnahtafoukhlefthebrew=1425,e.etnahtahebrew=1425,e.etnahtalefthebrew=1425,e.eturned=477,e.eukorean=12641,e.euro=8364,e.evowelsignbengali=2503,e.evowelsigndeva=2375,e.evowelsigngujarati=2759,e.exclam=33,e.exclamarmenian=1372,e.exclamdbl=8252,e.exclamdown=161,e.exclamdownsmall=63393,e.exclammonospace=65281,e.exclamsmall=63265,e.existential=8707,e.ezh=658,e.ezhcaron=495,e.ezhcurl=659,e.ezhreversed=441,e.ezhtail=442,e.f=102,e.fadeva=2398,e.fagurmukhi=2654,e.fahrenheit=8457,e.fathaarabic=1614,e.fathalowarabic=1614,e.fathatanarabic=1611,e.fbopomofo=12552,e.fcircle=9429,e.fdotaccent=7711,e.feharabic=1601,e.feharmenian=1414,e.fehfinalarabic=65234,e.fehinitialarabic=65235,e.fehmedialarabic=65236,e.feicoptic=997,e.female=9792,e.ff=64256,e.ffi=64259,e.ffl=64260,e.fi=64257,e.fifteencircle=9326,e.fifteenparen=9346,e.fifteenperiod=9366,e.figuredash=8210,e.filledbox=9632,e.filledrect=9644,e.finalkaf=1498,e.finalkafdagesh=64314,e.finalkafdageshhebrew=64314,e.finalkafhebrew=1498,e.finalmem=1501,e.finalmemhebrew=1501,e.finalnun=1503,e.finalnunhebrew=1503,e.finalpe=1507,e.finalpehebrew=1507,e.finaltsadi=1509,e.finaltsadihebrew=1509,e.firsttonechinese=713,e.fisheye=9673,e.fitacyrillic=1139,e.five=53,e.fivearabic=1637,e.fivebengali=2539,e.fivecircle=9316,e.fivecircleinversesansserif=10126,e.fivedeva=2411,e.fiveeighths=8541,e.fivegujarati=2795,e.fivegurmukhi=2667,e.fivehackarabic=1637,e.fivehangzhou=12325,e.fiveideographicparen=12836,e.fiveinferior=8325,e.fivemonospace=65301,e.fiveoldstyle=63285,e.fiveparen=9336,e.fiveperiod=9356,e.fivepersian=1781,e.fiveroman=8564,e.fivesuperior=8309,e.fivethai=3669,e.fl=64258,e.florin=402,e.fmonospace=65350,e.fmsquare=13209,e.fofanthai=3615,e.fofathai=3613,e.fongmanthai=3663,e.forall=8704,e.four=52,e.fourarabic=1636,e.fourbengali=2538,e.fourcircle=9315,e.fourcircleinversesansserif=10125,e.fourdeva=2410,e.fourgujarati=2794,e.fourgurmukhi=2666,e.fourhackarabic=1636,e.fourhangzhou=12324,e.fourideographicparen=12835,e.fourinferior=8324,e.fourmonospace=65300,e.fournumeratorbengali=2551,e.fouroldstyle=63284,e.fourparen=9335,e.fourperiod=9355,e.fourpersian=1780,e.fourroman=8563,e.foursuperior=8308,e.fourteencircle=9325,e.fourteenparen=9345,e.fourteenperiod=9365,e.fourthai=3668,e.fourthtonechinese=715,e.fparen=9377,e.fraction=8260,e.franc=8355,e.g=103,e.gabengali=2455,e.gacute=501,e.gadeva=2327,e.gafarabic=1711,e.gaffinalarabic=64403,e.gafinitialarabic=64404,e.gafmedialarabic=64405,e.gagujarati=2711,e.gagurmukhi=2583,e.gahiragana=12364,e.gakatakana=12460,e.gamma=947,e.gammalatinsmall=611,e.gammasuperior=736,e.gangiacoptic=1003,e.gbopomofo=12557,e.gbreve=287,e.gcaron=487,e.gcedilla=291,e.gcircle=9430,e.gcircumflex=285,e.gcommaaccent=291,e.gdot=289,e.gdotaccent=289,e.gecyrillic=1075,e.gehiragana=12370,e.gekatakana=12466,e.geometricallyequal=8785,e.gereshaccenthebrew=1436,e.gereshhebrew=1523,e.gereshmuqdamhebrew=1437,e.germandbls=223,e.gershayimaccenthebrew=1438,e.gershayimhebrew=1524,e.getamark=12307,e.ghabengali=2456,e.ghadarmenian=1394,e.ghadeva=2328,e.ghagujarati=2712,e.ghagurmukhi=2584,e.ghainarabic=1594,e.ghainfinalarabic=65230,e.ghaininitialarabic=65231,e.ghainmedialarabic=65232,e.ghemiddlehookcyrillic=1173,e.ghestrokecyrillic=1171,e.gheupturncyrillic=1169,e.ghhadeva=2394,e.ghhagurmukhi=2650,e.ghook=608,e.ghzsquare=13203,e.gihiragana=12366,e.gikatakana=12462,e.gimarmenian=1379,e.gimel=1490,e.gimeldagesh=64306,e.gimeldageshhebrew=64306,e.gimelhebrew=1490,e.gjecyrillic=1107,e.glottalinvertedstroke=446,e.glottalstop=660,e.glottalstopinverted=662,e.glottalstopmod=704,e.glottalstopreversed=661,e.glottalstopreversedmod=705,e.glottalstopreversedsuperior=740,e.glottalstopstroke=673,e.glottalstopstrokereversed=674,e.gmacron=7713,e.gmonospace=65351,e.gohiragana=12372,e.gokatakana=12468,e.gparen=9378,e.gpasquare=13228,e.gradient=8711,e.grave=96,e.gravebelowcmb=790,e.gravecmb=768,e.gravecomb=768,e.gravedeva=2387,e.gravelowmod=718,e.gravemonospace=65344,e.gravetonecmb=832,e.greater=62,e.greaterequal=8805,e.greaterequalorless=8923,e.greatermonospace=65310,e.greaterorequivalent=8819,e.greaterorless=8823,e.greateroverequal=8807,e.greatersmall=65125,e.gscript=609,e.gstroke=485,e.guhiragana=12368,e.guillemotleft=171,e.guillemotright=187,e.guilsinglleft=8249,e.guilsinglright=8250,e.gukatakana=12464,e.guramusquare=13080,e.gysquare=13257,e.h=104,e.haabkhasiancyrillic=1193,e.haaltonearabic=1729,e.habengali=2489,e.hadescendercyrillic=1203,e.hadeva=2361,e.hagujarati=2745,e.hagurmukhi=2617,e.haharabic=1581,e.hahfinalarabic=65186,e.hahinitialarabic=65187,e.hahiragana=12399,e.hahmedialarabic=65188,e.haitusquare=13098,e.hakatakana=12495,e.hakatakanahalfwidth=65418,e.halantgurmukhi=2637,e.hamzaarabic=1569,e.hamzalowarabic=1569,e.hangulfiller=12644,e.hardsigncyrillic=1098,e.harpoonleftbarbup=8636,e.harpoonrightbarbup=8640,e.hasquare=13258,e.hatafpatah=1458,e.hatafpatah16=1458,e.hatafpatah23=1458,e.hatafpatah2f=1458,e.hatafpatahhebrew=1458,e.hatafpatahnarrowhebrew=1458,e.hatafpatahquarterhebrew=1458,e.hatafpatahwidehebrew=1458,e.hatafqamats=1459,e.hatafqamats1b=1459,e.hatafqamats28=1459,e.hatafqamats34=1459,e.hatafqamatshebrew=1459,e.hatafqamatsnarrowhebrew=1459,e.hatafqamatsquarterhebrew=1459,e.hatafqamatswidehebrew=1459,e.hatafsegol=1457,e.hatafsegol17=1457,e.hatafsegol24=1457,e.hatafsegol30=1457,e.hatafsegolhebrew=1457,e.hatafsegolnarrowhebrew=1457,e.hatafsegolquarterhebrew=1457,e.hatafsegolwidehebrew=1457,e.hbar=295,e.hbopomofo=12559,e.hbrevebelow=7723,e.hcedilla=7721,e.hcircle=9431,e.hcircumflex=293,e.hdieresis=7719,e.hdotaccent=7715,e.hdotbelow=7717,e.he=1492,e.heart=9829,e.heartsuitblack=9829,e.heartsuitwhite=9825,e.hedagesh=64308,e.hedageshhebrew=64308,e.hehaltonearabic=1729,e.heharabic=1607,e.hehebrew=1492,e.hehfinalaltonearabic=64423,e.hehfinalalttwoarabic=65258,e.hehfinalarabic=65258,e.hehhamzaabovefinalarabic=64421,e.hehhamzaaboveisolatedarabic=64420,e.hehinitialaltonearabic=64424,e.hehinitialarabic=65259,e.hehiragana=12408,e.hehmedialaltonearabic=64425,e.hehmedialarabic=65260,e.heiseierasquare=13179,e.hekatakana=12504,e.hekatakanahalfwidth=65421,e.hekutaarusquare=13110,e.henghook=615,e.herutusquare=13113,e.het=1495,e.hethebrew=1495,e.hhook=614,e.hhooksuperior=689,e.hieuhacirclekorean=12923,e.hieuhaparenkorean=12827,e.hieuhcirclekorean=12909,e.hieuhkorean=12622,e.hieuhparenkorean=12813,e.hihiragana=12402,e.hikatakana=12498,e.hikatakanahalfwidth=65419,e.hiriq=1460,e.hiriq14=1460,e.hiriq21=1460,e.hiriq2d=1460,e.hiriqhebrew=1460,e.hiriqnarrowhebrew=1460,e.hiriqquarterhebrew=1460,e.hiriqwidehebrew=1460,e.hlinebelow=7830,e.hmonospace=65352,e.hoarmenian=1392,e.hohipthai=3627,e.hohiragana=12411,e.hokatakana=12507,e.hokatakanahalfwidth=65422,e.holam=1465,e.holam19=1465,e.holam26=1465,e.holam32=1465,e.holamhebrew=1465,e.holamnarrowhebrew=1465,e.holamquarterhebrew=1465,e.holamwidehebrew=1465,e.honokhukthai=3630,e.hookabovecomb=777,e.hookcmb=777,e.hookpalatalizedbelowcmb=801,e.hookretroflexbelowcmb=802,e.hoonsquare=13122,e.horicoptic=1001,e.horizontalbar=8213,e.horncmb=795,e.hotsprings=9832,e.house=8962,e.hparen=9379,e.hsuperior=688,e.hturned=613,e.huhiragana=12405,e.huiitosquare=13107,e.hukatakana=12501,e.hukatakanahalfwidth=65420,e.hungarumlaut=733,e.hungarumlautcmb=779,e.hv=405,e.hyphen=45,e.hypheninferior=63205,e.hyphenmonospace=65293,e.hyphensmall=65123,e.hyphensuperior=63206,e.hyphentwo=8208,e.i=105,e.iacute=237,e.iacyrillic=1103,e.ibengali=2439,e.ibopomofo=12583,e.ibreve=301,e.icaron=464,e.icircle=9432,e.icircumflex=238,e.icyrillic=1110,e.idblgrave=521,e.ideographearthcircle=12943,e.ideographfirecircle=12939,e.ideographicallianceparen=12863,e.ideographiccallparen=12858,e.ideographiccentrecircle=12965,e.ideographicclose=12294,e.ideographiccomma=12289,e.ideographiccommaleft=65380,e.ideographiccongratulationparen=12855,e.ideographiccorrectcircle=12963,e.ideographicearthparen=12847,e.ideographicenterpriseparen=12861,e.ideographicexcellentcircle=12957,e.ideographicfestivalparen=12864,e.ideographicfinancialcircle=12950,e.ideographicfinancialparen=12854,e.ideographicfireparen=12843,e.ideographichaveparen=12850,e.ideographichighcircle=12964,e.ideographiciterationmark=12293,e.ideographiclaborcircle=12952,e.ideographiclaborparen=12856,e.ideographicleftcircle=12967,e.ideographiclowcircle=12966,e.ideographicmedicinecircle=12969,e.ideographicmetalparen=12846,e.ideographicmoonparen=12842,e.ideographicnameparen=12852,e.ideographicperiod=12290,e.ideographicprintcircle=12958,e.ideographicreachparen=12867,e.ideographicrepresentparen=12857,e.ideographicresourceparen=12862,e.ideographicrightcircle=12968,e.ideographicsecretcircle=12953,e.ideographicselfparen=12866,e.ideographicsocietyparen=12851,e.ideographicspace=12288,e.ideographicspecialparen=12853,e.ideographicstockparen=12849,e.ideographicstudyparen=12859,e.ideographicsunparen=12848,e.ideographicsuperviseparen=12860,e.ideographicwaterparen=12844,e.ideographicwoodparen=12845,e.ideographiczero=12295,e.ideographmetalcircle=12942,e.ideographmooncircle=12938,e.ideographnamecircle=12948,e.ideographsuncircle=12944,e.ideographwatercircle=12940,e.ideographwoodcircle=12941,e.ideva=2311,e.idieresis=239,e.idieresisacute=7727,e.idieresiscyrillic=1253,e.idotbelow=7883,e.iebrevecyrillic=1239,e.iecyrillic=1077,e.ieungacirclekorean=12917,e.ieungaparenkorean=12821,e.ieungcirclekorean=12903,e.ieungkorean=12615,e.ieungparenkorean=12807,e.igrave=236,e.igujarati=2695,e.igurmukhi=2567,e.ihiragana=12356,e.ihookabove=7881,e.iibengali=2440,e.iicyrillic=1080,e.iideva=2312,e.iigujarati=2696,e.iigurmukhi=2568,e.iimatragurmukhi=2624,e.iinvertedbreve=523,e.iishortcyrillic=1081,e.iivowelsignbengali=2496,e.iivowelsigndeva=2368,e.iivowelsigngujarati=2752,e.ij=307,e.ikatakana=12452,e.ikatakanahalfwidth=65394,e.ikorean=12643,e.ilde=732,e.iluyhebrew=1452,e.imacron=299,e.imacroncyrillic=1251,e.imageorapproximatelyequal=8787,e.imatragurmukhi=2623,e.imonospace=65353,e.increment=8710,e.infinity=8734,e.iniarmenian=1387,e.integral=8747,e.integralbottom=8993,e.integralbt=8993,e.integralex=63733,e.integraltop=8992,e.integraltp=8992,e.intersection=8745,e.intisquare=13061,e.invbullet=9688,e.invcircle=9689,e.invsmileface=9787,e.iocyrillic=1105,e.iogonek=303,e.iota=953,e.iotadieresis=970,e.iotadieresistonos=912,e.iotalatin=617,e.iotatonos=943,e.iparen=9380,e.irigurmukhi=2674,e.ismallhiragana=12355,e.ismallkatakana=12451,e.ismallkatakanahalfwidth=65384,e.issharbengali=2554,e.istroke=616,e.isuperior=63213,e.iterationhiragana=12445,e.iterationkatakana=12541,e.itilde=297,e.itildebelow=7725,e.iubopomofo=12585,e.iucyrillic=1102,e.ivowelsignbengali=2495,e.ivowelsigndeva=2367,e.ivowelsigngujarati=2751,e.izhitsacyrillic=1141,e.izhitsadblgravecyrillic=1143,e.j=106,e.jaarmenian=1393,e.jabengali=2460,e.jadeva=2332,e.jagujarati=2716,e.jagurmukhi=2588,e.jbopomofo=12560,e.jcaron=496,e.jcircle=9433,e.jcircumflex=309,e.jcrossedtail=669,e.jdotlessstroke=607,e.jecyrillic=1112,e.jeemarabic=1580,e.jeemfinalarabic=65182,e.jeeminitialarabic=65183,e.jeemmedialarabic=65184,e.jeharabic=1688,e.jehfinalarabic=64395,e.jhabengali=2461,e.jhadeva=2333,e.jhagujarati=2717,e.jhagurmukhi=2589,e.jheharmenian=1403,e.jis=12292,e.jmonospace=65354,e.jparen=9381,e.jsuperior=690,e.k=107,e.kabashkircyrillic=1185,e.kabengali=2453,e.kacute=7729,e.kacyrillic=1082,e.kadescendercyrillic=1179,e.kadeva=2325,e.kaf=1499,e.kafarabic=1603,e.kafdagesh=64315,e.kafdageshhebrew=64315,e.kaffinalarabic=65242,e.kafhebrew=1499,e.kafinitialarabic=65243,e.kafmedialarabic=65244,e.kafrafehebrew=64333,e.kagujarati=2709,e.kagurmukhi=2581,e.kahiragana=12363,e.kahookcyrillic=1220,e.kakatakana=12459,e.kakatakanahalfwidth=65398,e.kappa=954,e.kappasymbolgreek=1008,e.kapyeounmieumkorean=12657,e.kapyeounphieuphkorean=12676,e.kapyeounpieupkorean=12664,e.kapyeounssangpieupkorean=12665,e.karoriisquare=13069,e.kashidaautoarabic=1600,e.kashidaautonosidebearingarabic=1600,e.kasmallkatakana=12533,e.kasquare=13188,e.kasraarabic=1616,e.kasratanarabic=1613,e.kastrokecyrillic=1183,e.katahiraprolongmarkhalfwidth=65392,e.kaverticalstrokecyrillic=1181,e.kbopomofo=12558,e.kcalsquare=13193,e.kcaron=489,e.kcedilla=311,e.kcircle=9434,e.kcommaaccent=311,e.kdotbelow=7731,e.keharmenian=1412,e.kehiragana=12369,e.kekatakana=12465,e.kekatakanahalfwidth=65401,e.kenarmenian=1391,e.kesmallkatakana=12534,e.kgreenlandic=312,e.khabengali=2454,e.khacyrillic=1093,e.khadeva=2326,e.khagujarati=2710,e.khagurmukhi=2582,e.khaharabic=1582,e.khahfinalarabic=65190,e.khahinitialarabic=65191,e.khahmedialarabic=65192,e.kheicoptic=999,e.khhadeva=2393,e.khhagurmukhi=2649,e.khieukhacirclekorean=12920,e.khieukhaparenkorean=12824,e.khieukhcirclekorean=12906,e.khieukhkorean=12619,e.khieukhparenkorean=12810,e.khokhaithai=3586,e.khokhonthai=3589,e.khokhuatthai=3587,e.khokhwaithai=3588,e.khomutthai=3675,e.khook=409,e.khorakhangthai=3590,e.khzsquare=13201,e.kihiragana=12365,e.kikatakana=12461,e.kikatakanahalfwidth=65399,e.kiroguramusquare=13077,e.kiromeetorusquare=13078,e.kirosquare=13076,e.kiyeokacirclekorean=12910,e.kiyeokaparenkorean=12814,e.kiyeokcirclekorean=12896,e.kiyeokkorean=12593,e.kiyeokparenkorean=12800,e.kiyeoksioskorean=12595,e.kjecyrillic=1116,e.klinebelow=7733,e.klsquare=13208,e.kmcubedsquare=13222,e.kmonospace=65355;e.kmsquaredsquare=13218,e.kohiragana=12371,e.kohmsquare=13248,e.kokaithai=3585,e.kokatakana=12467,e.kokatakanahalfwidth=65402,e.kooposquare=13086,e.koppacyrillic=1153,e.koreanstandardsymbol=12927,e.koroniscmb=835,e.kparen=9382,e.kpasquare=13226,e.ksicyrillic=1135,e.ktsquare=13263,e.kturned=670,e.kuhiragana=12367,e.kukatakana=12463,e.kukatakanahalfwidth=65400,e.kvsquare=13240,e.kwsquare=13246,e.l=108,e.labengali=2482,e.lacute=314,e.ladeva=2354,e.lagujarati=2738,e.lagurmukhi=2610,e.lakkhangyaothai=3653,e.lamaleffinalarabic=65276,e.lamalefhamzaabovefinalarabic=65272,e.lamalefhamzaaboveisolatedarabic=65271,e.lamalefhamzabelowfinalarabic=65274,e.lamalefhamzabelowisolatedarabic=65273,e.lamalefisolatedarabic=65275,e.lamalefmaddaabovefinalarabic=65270,e.lamalefmaddaaboveisolatedarabic=65269,e.lamarabic=1604,e.lambda=955,e.lambdastroke=411,e.lamed=1500,e.lameddagesh=64316,e.lameddageshhebrew=64316,e.lamedhebrew=1500,e.lamfinalarabic=65246,e.lamhahinitialarabic=64714,e.laminitialarabic=65247,e.lamjeeminitialarabic=64713,e.lamkhahinitialarabic=64715,e.lamlamhehisolatedarabic=65010,e.lammedialarabic=65248,e.lammeemhahinitialarabic=64904,e.lammeeminitialarabic=64716,e.largecircle=9711,e.lbar=410,e.lbelt=620,e.lbopomofo=12556,e.lcaron=318,e.lcedilla=316,e.lcircle=9435,e.lcircumflexbelow=7741,e.lcommaaccent=316,e.ldot=320,e.ldotaccent=320,e.ldotbelow=7735,e.ldotbelowmacron=7737,e.leftangleabovecmb=794,e.lefttackbelowcmb=792,e.less=60,e.lessequal=8804,e.lessequalorgreater=8922,e.lessmonospace=65308,e.lessorequivalent=8818,e.lessorgreater=8822,e.lessoverequal=8806,e.lesssmall=65124,e.lezh=622,e.lfblock=9612,e.lhookretroflex=621,e.lira=8356,e.liwnarmenian=1388,e.lj=457,e.ljecyrillic=1113,e.ll=63168,e.lladeva=2355,e.llagujarati=2739,e.llinebelow=7739,e.llladeva=2356,e.llvocalicbengali=2529,e.llvocalicdeva=2401,e.llvocalicvowelsignbengali=2531,e.llvocalicvowelsigndeva=2403,e.lmiddletilde=619,e.lmonospace=65356,e.lmsquare=13264,e.lochulathai=3628,e.logicaland=8743,e.logicalnot=172,e.logicalnotreversed=8976,e.logicalor=8744,e.lolingthai=3621,e.longs=383,e.lowlinecenterline=65102,e.lowlinecmb=818,e.lowlinedashed=65101,e.lozenge=9674,e.lparen=9383,e.lslash=322,e.lsquare=8467,e.lsuperior=63214,e.ltshade=9617,e.luthai=3622,e.lvocalicbengali=2444,e.lvocalicdeva=2316,e.lvocalicvowelsignbengali=2530,e.lvocalicvowelsigndeva=2402,e.lxsquare=13267,e.m=109,e.mabengali=2478,e.macron=175,e.macronbelowcmb=817,e.macroncmb=772,e.macronlowmod=717,e.macronmonospace=65507,e.macute=7743,e.madeva=2350,e.magujarati=2734,e.magurmukhi=2606,e.mahapakhhebrew=1444,e.mahapakhlefthebrew=1444,e.mahiragana=12414,e.maichattawalowleftthai=63637,e.maichattawalowrightthai=63636,e.maichattawathai=3659,e.maichattawaupperleftthai=63635,e.maieklowleftthai=63628,e.maieklowrightthai=63627,e.maiekthai=3656,e.maiekupperleftthai=63626,e.maihanakatleftthai=63620,e.maihanakatthai=3633,e.maitaikhuleftthai=63625,e.maitaikhuthai=3655,e.maitholowleftthai=63631,e.maitholowrightthai=63630,e.maithothai=3657,e.maithoupperleftthai=63629,e.maitrilowleftthai=63634,e.maitrilowrightthai=63633,e.maitrithai=3658,e.maitriupperleftthai=63632,e.maiyamokthai=3654,e.makatakana=12510,e.makatakanahalfwidth=65423,e.male=9794,e.mansyonsquare=13127,e.maqafhebrew=1470,e.mars=9794,e.masoracirclehebrew=1455,e.masquare=13187,e.mbopomofo=12551,e.mbsquare=13268,e.mcircle=9436,e.mcubedsquare=13221,e.mdotaccent=7745,e.mdotbelow=7747,e.meemarabic=1605,e.meemfinalarabic=65250,e.meeminitialarabic=65251,e.meemmedialarabic=65252,e.meemmeeminitialarabic=64721,e.meemmeemisolatedarabic=64584,e.meetorusquare=13133,e.mehiragana=12417,e.meizierasquare=13182,e.mekatakana=12513,e.mekatakanahalfwidth=65426,e.mem=1502,e.memdagesh=64318,e.memdageshhebrew=64318,e.memhebrew=1502,e.menarmenian=1396,e.merkhahebrew=1445,e.merkhakefulahebrew=1446,e.merkhakefulalefthebrew=1446,e.merkhalefthebrew=1445,e.mhook=625,e.mhzsquare=13202,e.middledotkatakanahalfwidth=65381,e.middot=183,e.mieumacirclekorean=12914,e.mieumaparenkorean=12818,e.mieumcirclekorean=12900,e.mieumkorean=12609,e.mieumpansioskorean=12656,e.mieumparenkorean=12804,e.mieumpieupkorean=12654,e.mieumsioskorean=12655,e.mihiragana=12415,e.mikatakana=12511,e.mikatakanahalfwidth=65424,e.minus=8722,e.minusbelowcmb=800,e.minuscircle=8854,e.minusmod=727,e.minusplus=8723,e.minute=8242,e.miribaarusquare=13130,e.mirisquare=13129,e.mlonglegturned=624,e.mlsquare=13206,e.mmcubedsquare=13219,e.mmonospace=65357,e.mmsquaredsquare=13215,e.mohiragana=12418,e.mohmsquare=13249,e.mokatakana=12514,e.mokatakanahalfwidth=65427,e.molsquare=13270,e.momathai=3617,e.moverssquare=13223,e.moverssquaredsquare=13224,e.mparen=9384,e.mpasquare=13227,e.mssquare=13235,e.msuperior=63215,e.mturned=623,e.mu=181,e.mu1=181,e.muasquare=13186,e.muchgreater=8811,e.muchless=8810,e.mufsquare=13196,e.mugreek=956,e.mugsquare=13197,e.muhiragana=12416,e.mukatakana=12512,e.mukatakanahalfwidth=65425,e.mulsquare=13205,e.multiply=215,e.mumsquare=13211,e.munahhebrew=1443,e.munahlefthebrew=1443,e.musicalnote=9834,e.musicalnotedbl=9835,e.musicflatsign=9837,e.musicsharpsign=9839,e.mussquare=13234,e.muvsquare=13238,e.muwsquare=13244,e.mvmegasquare=13241,e.mvsquare=13239,e.mwmegasquare=13247,e.mwsquare=13245,e.n=110,e.nabengali=2472,e.nabla=8711,e.nacute=324,e.nadeva=2344,e.nagujarati=2728,e.nagurmukhi=2600,e.nahiragana=12394,e.nakatakana=12490,e.nakatakanahalfwidth=65413,e.napostrophe=329,e.nasquare=13185,e.nbopomofo=12555,e.nbspace=160,e.ncaron=328,e.ncedilla=326,e.ncircle=9437,e.ncircumflexbelow=7755,e.ncommaaccent=326,e.ndotaccent=7749,e.ndotbelow=7751,e.nehiragana=12397,e.nekatakana=12493,e.nekatakanahalfwidth=65416,e.newsheqelsign=8362,e.nfsquare=13195,e.ngabengali=2457,e.ngadeva=2329,e.ngagujarati=2713,e.ngagurmukhi=2585,e.ngonguthai=3591,e.nhiragana=12435,e.nhookleft=626,e.nhookretroflex=627,e.nieunacirclekorean=12911,e.nieunaparenkorean=12815,e.nieuncieuckorean=12597,e.nieuncirclekorean=12897,e.nieunhieuhkorean=12598,e.nieunkorean=12596,e.nieunpansioskorean=12648,e.nieunparenkorean=12801,e.nieunsioskorean=12647,e.nieuntikeutkorean=12646,e.nihiragana=12395,e.nikatakana=12491,e.nikatakanahalfwidth=65414,e.nikhahitleftthai=63641,e.nikhahitthai=3661,e.nine=57,e.ninearabic=1641,e.ninebengali=2543,e.ninecircle=9320,e.ninecircleinversesansserif=10130,e.ninedeva=2415,e.ninegujarati=2799,e.ninegurmukhi=2671,e.ninehackarabic=1641,e.ninehangzhou=12329,e.nineideographicparen=12840,e.nineinferior=8329,e.ninemonospace=65305,e.nineoldstyle=63289,e.nineparen=9340,e.nineperiod=9360,e.ninepersian=1785,e.nineroman=8568,e.ninesuperior=8313,e.nineteencircle=9330,e.nineteenparen=9350,e.nineteenperiod=9370,e.ninethai=3673,e.nj=460,e.njecyrillic=1114,e.nkatakana=12531,e.nkatakanahalfwidth=65437,e.nlegrightlong=414,e.nlinebelow=7753,e.nmonospace=65358,e.nmsquare=13210,e.nnabengali=2467,e.nnadeva=2339,e.nnagujarati=2723,e.nnagurmukhi=2595,e.nnnadeva=2345,e.nohiragana=12398,e.nokatakana=12494,e.nokatakanahalfwidth=65417,e.nonbreakingspace=160,e.nonenthai=3603,e.nonuthai=3609,e.noonarabic=1606,e.noonfinalarabic=65254,e.noonghunnaarabic=1722,e.noonghunnafinalarabic=64415,e.nooninitialarabic=65255,e.noonjeeminitialarabic=64722,e.noonjeemisolatedarabic=64587,e.noonmedialarabic=65256,e.noonmeeminitialarabic=64725,e.noonmeemisolatedarabic=64590,e.noonnoonfinalarabic=64653,e.notcontains=8716,e.notelement=8713,e.notelementof=8713,e.notequal=8800,e.notgreater=8815,e.notgreaternorequal=8817,e.notgreaternorless=8825,e.notidentical=8802,e.notless=8814,e.notlessnorequal=8816,e.notparallel=8742,e.notprecedes=8832,e.notsubset=8836,e.notsucceeds=8833,e.notsuperset=8837,e.nowarmenian=1398,e.nparen=9385,e.nssquare=13233,e.nsuperior=8319,e.ntilde=241,e.nu=957,e.nuhiragana=12396,e.nukatakana=12492,e.nukatakanahalfwidth=65415,e.nuktabengali=2492,e.nuktadeva=2364,e.nuktagujarati=2748,e.nuktagurmukhi=2620,e.numbersign=35,e.numbersignmonospace=65283,e.numbersignsmall=65119,e.numeralsigngreek=884,e.numeralsignlowergreek=885,e.numero=8470,e.nun=1504,e.nundagesh=64320,e.nundageshhebrew=64320,e.nunhebrew=1504,e.nvsquare=13237,e.nwsquare=13243,e.nyabengali=2462,e.nyadeva=2334,e.nyagujarati=2718,e.nyagurmukhi=2590,e.o=111,e.oacute=243,e.oangthai=3629,e.obarred=629,e.obarredcyrillic=1257,e.obarreddieresiscyrillic=1259,e.obengali=2451,e.obopomofo=12571,e.obreve=335,e.ocandradeva=2321,e.ocandragujarati=2705,e.ocandravowelsigndeva=2377,e.ocandravowelsigngujarati=2761,e.ocaron=466,e.ocircle=9438,e.ocircumflex=244,e.ocircumflexacute=7889,e.ocircumflexdotbelow=7897,e.ocircumflexgrave=7891,e.ocircumflexhookabove=7893,e.ocircumflextilde=7895,e.ocyrillic=1086,e.odblacute=337,e.odblgrave=525,e.odeva=2323,e.odieresis=246,e.odieresiscyrillic=1255,e.odotbelow=7885,e.oe=339,e.oekorean=12634,e.ogonek=731,e.ogonekcmb=808,e.ograve=242,e.ogujarati=2707,e.oharmenian=1413,e.ohiragana=12362,e.ohookabove=7887,e.ohorn=417,e.ohornacute=7899,e.ohorndotbelow=7907,e.ohorngrave=7901,e.ohornhookabove=7903,e.ohorntilde=7905,e.ohungarumlaut=337,e.oi=419,e.oinvertedbreve=527,e.okatakana=12458,e.okatakanahalfwidth=65397,e.okorean=12631,e.olehebrew=1451,e.omacron=333,e.omacronacute=7763,e.omacrongrave=7761,e.omdeva=2384,e.omega=969,e.omega1=982,e.omegacyrillic=1121,e.omegalatinclosed=631,e.omegaroundcyrillic=1147,e.omegatitlocyrillic=1149,e.omegatonos=974,e.omgujarati=2768,e.omicron=959,e.omicrontonos=972,e.omonospace=65359,e.one=49,e.onearabic=1633,e.onebengali=2535,e.onecircle=9312,e.onecircleinversesansserif=10122,e.onedeva=2407,e.onedotenleader=8228,e.oneeighth=8539,e.onefitted=63196,e.onegujarati=2791,e.onegurmukhi=2663,e.onehackarabic=1633,e.onehalf=189,e.onehangzhou=12321,e.oneideographicparen=12832,e.oneinferior=8321,e.onemonospace=65297,e.onenumeratorbengali=2548,e.oneoldstyle=63281,e.oneparen=9332,e.oneperiod=9352,e.onepersian=1777,e.onequarter=188,e.oneroman=8560,e.onesuperior=185,e.onethai=3665,e.onethird=8531,e.oogonek=491,e.oogonekmacron=493,e.oogurmukhi=2579,e.oomatragurmukhi=2635,e.oopen=596,e.oparen=9386,e.openbullet=9702,e.option=8997,e.ordfeminine=170,e.ordmasculine=186,e.orthogonal=8735,e.oshortdeva=2322,e.oshortvowelsigndeva=2378,e.oslash=248,e.oslashacute=511,e.osmallhiragana=12361,e.osmallkatakana=12457,e.osmallkatakanahalfwidth=65387,e.ostrokeacute=511,e.osuperior=63216,e.otcyrillic=1151,e.otilde=245,e.otildeacute=7757,e.otildedieresis=7759,e.oubopomofo=12577,e.overline=8254,e.overlinecenterline=65098,e.overlinecmb=773,e.overlinedashed=65097,e.overlinedblwavy=65100,e.overlinewavy=65099,e.overscore=175,e.ovowelsignbengali=2507,e.ovowelsigndeva=2379,e.ovowelsigngujarati=2763,e.p=112,e.paampssquare=13184,e.paasentosquare=13099,e.pabengali=2474,e.pacute=7765,e.padeva=2346,e.pagedown=8671,e.pageup=8670,e.pagujarati=2730,e.pagurmukhi=2602,e.pahiragana=12401,e.paiyannoithai=3631,e.pakatakana=12497,e.palatalizationcyrilliccmb=1156,e.palochkacyrillic=1216,e.pansioskorean=12671,e.paragraph=182,e.parallel=8741,e.parenleft=40,e.parenleftaltonearabic=64830,e.parenleftbt=63725,e.parenleftex=63724,e.parenleftinferior=8333,e.parenleftmonospace=65288,e.parenleftsmall=65113,e.parenleftsuperior=8317,e.parenlefttp=63723,e.parenleftvertical=65077,e.parenright=41,e.parenrightaltonearabic=64831,e.parenrightbt=63736,e.parenrightex=63735,e.parenrightinferior=8334,e.parenrightmonospace=65289,e.parenrightsmall=65114,e.parenrightsuperior=8318,e.parenrighttp=63734,e.parenrightvertical=65078,e.partialdiff=8706,e.paseqhebrew=1472,e.pashtahebrew=1433,e.pasquare=13225,e.patah=1463,e.patah11=1463,e.patah1d=1463,e.patah2a=1463,e.patahhebrew=1463,e.patahnarrowhebrew=1463,e.patahquarterhebrew=1463,e.patahwidehebrew=1463,e.pazerhebrew=1441,e.pbopomofo=12550,e.pcircle=9439,e.pdotaccent=7767,e.pe=1508,e.pecyrillic=1087,e.pedagesh=64324,e.pedageshhebrew=64324,e.peezisquare=13115,e.pefinaldageshhebrew=64323,e.peharabic=1662,e.peharmenian=1402,e.pehebrew=1508,e.pehfinalarabic=64343,e.pehinitialarabic=64344,e.pehiragana=12410,e.pehmedialarabic=64345,e.pekatakana=12506,e.pemiddlehookcyrillic=1191,e.perafehebrew=64334,e.percent=37,e.percentarabic=1642,e.percentmonospace=65285,e.percentsmall=65130,e.period=46,e.periodarmenian=1417,e.periodcentered=183,e.periodhalfwidth=65377,e.periodinferior=63207,e.periodmonospace=65294,e.periodsmall=65106,e.periodsuperior=63208,e.perispomenigreekcmb=834,e.perpendicular=8869,e.perthousand=8240,e.peseta=8359,e.pfsquare=13194,e.phabengali=2475,e.phadeva=2347,e.phagujarati=2731,e.phagurmukhi=2603,e.phi=966,e.phi1=981,e.phieuphacirclekorean=12922,e.phieuphaparenkorean=12826,e.phieuphcirclekorean=12908,e.phieuphkorean=12621,e.phieuphparenkorean=12812,e.philatin=632,e.phinthuthai=3642,e.phisymbolgreek=981,e.phook=421,e.phophanthai=3614,e.phophungthai=3612,e.phosamphaothai=3616,e.pi=960,e.pieupacirclekorean=12915,e.pieupaparenkorean=12819,e.pieupcieuckorean=12662,e.pieupcirclekorean=12901,e.pieupkiyeokkorean=12658,e.pieupkorean=12610,e.pieupparenkorean=12805,e.pieupsioskiyeokkorean=12660,e.pieupsioskorean=12612,e.pieupsiostikeutkorean=12661,e.pieupthieuthkorean=12663,e.pieuptikeutkorean=12659,e.pihiragana=12404,e.pikatakana=12500,e.pisymbolgreek=982,e.piwrarmenian=1411,e.plus=43,e.plusbelowcmb=799,e.pluscircle=8853,e.plusminus=177,e.plusmod=726,e.plusmonospace=65291,e.plussmall=65122,e.plussuperior=8314,e.pmonospace=65360,e.pmsquare=13272,e.pohiragana=12413,e.pointingindexdownwhite=9759,e.pointingindexleftwhite=9756,e.pointingindexrightwhite=9758,e.pointingindexupwhite=9757,e.pokatakana=12509,e.poplathai=3611,e.postalmark=12306,e.postalmarkface=12320,e.pparen=9387,e.precedes=8826,e.prescription=8478,e.primemod=697,e.primereversed=8245,e.product=8719,e.projective=8965,e.prolongedkana=12540,e.propellor=8984,e.propersubset=8834,e.propersuperset=8835,e.proportion=8759,e.proportional=8733,e.psi=968,e.psicyrillic=1137,e.psilipneumatacyrilliccmb=1158,e.pssquare=13232,e.puhiragana=12407,e.pukatakana=12503,e.pvsquare=13236,e.pwsquare=13242,e.q=113,e.qadeva=2392,e.qadmahebrew=1448,e.qafarabic=1602,e.qaffinalarabic=65238,e.qafinitialarabic=65239,e.qafmedialarabic=65240,e.qamats=1464,e.qamats10=1464,e.qamats1a=1464,e.qamats1c=1464,e.qamats27=1464,e.qamats29=1464,e.qamats33=1464,e.qamatsde=1464,e.qamatshebrew=1464,e.qamatsnarrowhebrew=1464,e.qamatsqatanhebrew=1464,e.qamatsqatannarrowhebrew=1464,e.qamatsqatanquarterhebrew=1464,e.qamatsqatanwidehebrew=1464,e.qamatsquarterhebrew=1464,e.qamatswidehebrew=1464,e.qarneyparahebrew=1439,e.qbopomofo=12561,e.qcircle=9440,e.qhook=672,e.qmonospace=65361,e.qof=1511,e.qofdagesh=64327,e.qofdageshhebrew=64327,e.qofhebrew=1511,e.qparen=9388,e.quarternote=9833,e.qubuts=1467,e.qubuts18=1467,e.qubuts25=1467,e.qubuts31=1467,e.qubutshebrew=1467,e.qubutsnarrowhebrew=1467,e.qubutsquarterhebrew=1467,e.qubutswidehebrew=1467,e.question=63,e.questionarabic=1567,e.questionarmenian=1374,e.questiondown=191,e.questiondownsmall=63423,e.questiongreek=894,e.questionmonospace=65311,e.questionsmall=63295,e.quotedbl=34,e.quotedblbase=8222,e.quotedblleft=8220,e.quotedblmonospace=65282,e.quotedblprime=12318,e.quotedblprimereversed=12317,e.quotedblright=8221,e.quoteleft=8216,e.quoteleftreversed=8219,e.quotereversed=8219,e.quoteright=8217,e.quoterightn=329,e.quotesinglbase=8218,e.quotesingle=39,e.quotesinglemonospace=65287,e.r=114,e.raarmenian=1404,e.rabengali=2480,e.racute=341,e.radeva=2352,e.radical=8730,e.radicalex=63717,e.radoverssquare=13230,e.radoverssquaredsquare=13231,e.radsquare=13229,e.rafe=1471,e.rafehebrew=1471,e.ragujarati=2736,e.ragurmukhi=2608,e.rahiragana=12425,e.rakatakana=12521,e.rakatakanahalfwidth=65431,e.ralowerdiagonalbengali=2545,e.ramiddlediagonalbengali=2544,e.ramshorn=612,e.ratio=8758,e.rbopomofo=12566,e.rcaron=345,e.rcedilla=343,e.rcircle=9441,e.rcommaaccent=343,e.rdblgrave=529,e.rdotaccent=7769,e.rdotbelow=7771,e.rdotbelowmacron=7773,e.referencemark=8251,e.reflexsubset=8838,e.reflexsuperset=8839,e.registered=174,e.registersans=63720,e.registerserif=63194,e.reharabic=1585,e.reharmenian=1408,e.rehfinalarabic=65198,e.rehiragana=12428,e.rekatakana=12524,e.rekatakanahalfwidth=65434,e.resh=1512,e.reshdageshhebrew=64328,e.reshhebrew=1512,e.reversedtilde=8765,e.reviahebrew=1431,e.reviamugrashhebrew=1431;e.revlogicalnot=8976,e.rfishhook=638,e.rfishhookreversed=639,e.rhabengali=2525,e.rhadeva=2397,e.rho=961,e.rhook=637,e.rhookturned=635,e.rhookturnedsuperior=693,e.rhosymbolgreek=1009,e.rhotichookmod=734,e.rieulacirclekorean=12913,e.rieulaparenkorean=12817,e.rieulcirclekorean=12899,e.rieulhieuhkorean=12608,e.rieulkiyeokkorean=12602,e.rieulkiyeoksioskorean=12649,e.rieulkorean=12601,e.rieulmieumkorean=12603,e.rieulpansioskorean=12652,e.rieulparenkorean=12803,e.rieulphieuphkorean=12607,e.rieulpieupkorean=12604,e.rieulpieupsioskorean=12651,e.rieulsioskorean=12605,e.rieulthieuthkorean=12606,e.rieultikeutkorean=12650,e.rieulyeorinhieuhkorean=12653,e.rightangle=8735,e.righttackbelowcmb=793,e.righttriangle=8895,e.rihiragana=12426,e.rikatakana=12522,e.rikatakanahalfwidth=65432,e.ring=730,e.ringbelowcmb=805,e.ringcmb=778,e.ringhalfleft=703,e.ringhalfleftarmenian=1369,e.ringhalfleftbelowcmb=796,e.ringhalfleftcentered=723,e.ringhalfright=702,e.ringhalfrightbelowcmb=825,e.ringhalfrightcentered=722,e.rinvertedbreve=531,e.rittorusquare=13137,e.rlinebelow=7775,e.rlongleg=636,e.rlonglegturned=634,e.rmonospace=65362,e.rohiragana=12429,e.rokatakana=12525,e.rokatakanahalfwidth=65435,e.roruathai=3619,e.rparen=9389,e.rrabengali=2524,e.rradeva=2353,e.rragurmukhi=2652,e.rreharabic=1681,e.rrehfinalarabic=64397,e.rrvocalicbengali=2528,e.rrvocalicdeva=2400,e.rrvocalicgujarati=2784,e.rrvocalicvowelsignbengali=2500,e.rrvocalicvowelsigndeva=2372,e.rrvocalicvowelsigngujarati=2756,e.rsuperior=63217,e.rtblock=9616,e.rturned=633,e.rturnedsuperior=692,e.ruhiragana=12427,e.rukatakana=12523,e.rukatakanahalfwidth=65433,e.rupeemarkbengali=2546,e.rupeesignbengali=2547,e.rupiah=63197,e.ruthai=3620,e.rvocalicbengali=2443,e.rvocalicdeva=2315,e.rvocalicgujarati=2699,e.rvocalicvowelsignbengali=2499,e.rvocalicvowelsigndeva=2371,e.rvocalicvowelsigngujarati=2755,e.s=115,e.sabengali=2488,e.sacute=347,e.sacutedotaccent=7781,e.sadarabic=1589,e.sadeva=2360,e.sadfinalarabic=65210,e.sadinitialarabic=65211,e.sadmedialarabic=65212,e.sagujarati=2744,e.sagurmukhi=2616,e.sahiragana=12373,e.sakatakana=12469,e.sakatakanahalfwidth=65403,e.sallallahoualayhewasallamarabic=65018,e.samekh=1505,e.samekhdagesh=64321,e.samekhdageshhebrew=64321,e.samekhhebrew=1505,e.saraaathai=3634,e.saraaethai=3649,e.saraaimaimalaithai=3652,e.saraaimaimuanthai=3651,e.saraamthai=3635,e.saraathai=3632,e.saraethai=3648,e.saraiileftthai=63622,e.saraiithai=3637,e.saraileftthai=63621,e.saraithai=3636,e.saraothai=3650,e.saraueeleftthai=63624,e.saraueethai=3639,e.saraueleftthai=63623,e.sarauethai=3638,e.sarauthai=3640,e.sarauuthai=3641,e.sbopomofo=12569,e.scaron=353,e.scarondotaccent=7783,e.scedilla=351,e.schwa=601,e.schwacyrillic=1241,e.schwadieresiscyrillic=1243,e.schwahook=602,e.scircle=9442,e.scircumflex=349,e.scommaaccent=537,e.sdotaccent=7777,e.sdotbelow=7779,e.sdotbelowdotaccent=7785,e.seagullbelowcmb=828,e.second=8243,e.secondtonechinese=714,e.section=167,e.seenarabic=1587,e.seenfinalarabic=65202,e.seeninitialarabic=65203,e.seenmedialarabic=65204,e.segol=1462,e.segol13=1462,e.segol1f=1462,e.segol2c=1462,e.segolhebrew=1462,e.segolnarrowhebrew=1462,e.segolquarterhebrew=1462,e.segoltahebrew=1426,e.segolwidehebrew=1462,e.seharmenian=1405,e.sehiragana=12379,e.sekatakana=12475,e.sekatakanahalfwidth=65406,e.semicolon=59,e.semicolonarabic=1563,e.semicolonmonospace=65307,e.semicolonsmall=65108,e.semivoicedmarkkana=12444,e.semivoicedmarkkanahalfwidth=65439,e.sentisquare=13090,e.sentosquare=13091,e.seven=55,e.sevenarabic=1639,e.sevenbengali=2541,e.sevencircle=9318,e.sevencircleinversesansserif=10128,e.sevendeva=2413,e.seveneighths=8542,e.sevengujarati=2797,e.sevengurmukhi=2669,e.sevenhackarabic=1639,e.sevenhangzhou=12327,e.sevenideographicparen=12838,e.seveninferior=8327,e.sevenmonospace=65303,e.sevenoldstyle=63287,e.sevenparen=9338,e.sevenperiod=9358,e.sevenpersian=1783,e.sevenroman=8566,e.sevensuperior=8311,e.seventeencircle=9328,e.seventeenparen=9348,e.seventeenperiod=9368,e.seventhai=3671,e.sfthyphen=173,e.shaarmenian=1399,e.shabengali=2486,e.shacyrillic=1096,e.shaddaarabic=1617,e.shaddadammaarabic=64609,e.shaddadammatanarabic=64606,e.shaddafathaarabic=64608,e.shaddakasraarabic=64610,e.shaddakasratanarabic=64607,e.shade=9618,e.shadedark=9619,e.shadelight=9617,e.shademedium=9618,e.shadeva=2358,e.shagujarati=2742,e.shagurmukhi=2614,e.shalshelethebrew=1427,e.shbopomofo=12565,e.shchacyrillic=1097,e.sheenarabic=1588,e.sheenfinalarabic=65206,e.sheeninitialarabic=65207,e.sheenmedialarabic=65208,e.sheicoptic=995,e.sheqel=8362,e.sheqelhebrew=8362,e.sheva=1456,e.sheva115=1456,e.sheva15=1456,e.sheva22=1456,e.sheva2e=1456,e.shevahebrew=1456,e.shevanarrowhebrew=1456,e.shevaquarterhebrew=1456,e.shevawidehebrew=1456,e.shhacyrillic=1211,e.shimacoptic=1005,e.shin=1513,e.shindagesh=64329,e.shindageshhebrew=64329,e.shindageshshindot=64300,e.shindageshshindothebrew=64300,e.shindageshsindot=64301,e.shindageshsindothebrew=64301,e.shindothebrew=1473,e.shinhebrew=1513,e.shinshindot=64298,e.shinshindothebrew=64298,e.shinsindot=64299,e.shinsindothebrew=64299,e.shook=642,e.sigma=963,e.sigma1=962,e.sigmafinal=962,e.sigmalunatesymbolgreek=1010,e.sihiragana=12375,e.sikatakana=12471,e.sikatakanahalfwidth=65404,e.siluqhebrew=1469,e.siluqlefthebrew=1469,e.similar=8764,e.sindothebrew=1474,e.siosacirclekorean=12916,e.siosaparenkorean=12820,e.sioscieuckorean=12670,e.sioscirclekorean=12902,e.sioskiyeokkorean=12666,e.sioskorean=12613,e.siosnieunkorean=12667,e.siosparenkorean=12806,e.siospieupkorean=12669,e.siostikeutkorean=12668,e.six=54,e.sixarabic=1638,e.sixbengali=2540,e.sixcircle=9317,e.sixcircleinversesansserif=10127,e.sixdeva=2412,e.sixgujarati=2796,e.sixgurmukhi=2668,e.sixhackarabic=1638,e.sixhangzhou=12326,e.sixideographicparen=12837,e.sixinferior=8326,e.sixmonospace=65302,e.sixoldstyle=63286,e.sixparen=9337,e.sixperiod=9357,e.sixpersian=1782,e.sixroman=8565,e.sixsuperior=8310,e.sixteencircle=9327,e.sixteencurrencydenominatorbengali=2553,e.sixteenparen=9347,e.sixteenperiod=9367,e.sixthai=3670,e.slash=47,e.slashmonospace=65295,e.slong=383,e.slongdotaccent=7835,e.smileface=9786,e.smonospace=65363,e.sofpasuqhebrew=1475,e.softhyphen=173,e.softsigncyrillic=1100,e.sohiragana=12381,e.sokatakana=12477,e.sokatakanahalfwidth=65407,e.soliduslongoverlaycmb=824,e.solidusshortoverlaycmb=823,e.sorusithai=3625,e.sosalathai=3624,e.sosothai=3595,e.sosuathai=3626,e.space=32,e.spacehackarabic=32,e.spade=9824,e.spadesuitblack=9824,e.spadesuitwhite=9828,e.sparen=9390,e.squarebelowcmb=827,e.squarecc=13252,e.squarecm=13213,e.squarediagonalcrosshatchfill=9641,e.squarehorizontalfill=9636,e.squarekg=13199,e.squarekm=13214,e.squarekmcapital=13262,e.squareln=13265,e.squarelog=13266,e.squaremg=13198,e.squaremil=13269,e.squaremm=13212,e.squaremsquared=13217,e.squareorthogonalcrosshatchfill=9638,e.squareupperlefttolowerrightfill=9639,e.squareupperrighttolowerleftfill=9640,e.squareverticalfill=9637,e.squarewhitewithsmallblack=9635,e.srsquare=13275,e.ssabengali=2487,e.ssadeva=2359,e.ssagujarati=2743,e.ssangcieuckorean=12617,e.ssanghieuhkorean=12677,e.ssangieungkorean=12672,e.ssangkiyeokkorean=12594,e.ssangnieunkorean=12645,e.ssangpieupkorean=12611,e.ssangsioskorean=12614,e.ssangtikeutkorean=12600,e.ssuperior=63218,e.sterling=163,e.sterlingmonospace=65505,e.strokelongoverlaycmb=822,e.strokeshortoverlaycmb=821,e.subset=8834,e.subsetnotequal=8842,e.subsetorequal=8838,e.succeeds=8827,e.suchthat=8715,e.suhiragana=12377,e.sukatakana=12473,e.sukatakanahalfwidth=65405,e.sukunarabic=1618,e.summation=8721,e.sun=9788,e.superset=8835,e.supersetnotequal=8843,e.supersetorequal=8839,e.svsquare=13276,e.syouwaerasquare=13180,e.t=116,e.tabengali=2468,e.tackdown=8868,e.tackleft=8867,e.tadeva=2340,e.tagujarati=2724,e.tagurmukhi=2596,e.taharabic=1591,e.tahfinalarabic=65218,e.tahinitialarabic=65219,e.tahiragana=12383,e.tahmedialarabic=65220,e.taisyouerasquare=13181,e.takatakana=12479,e.takatakanahalfwidth=65408,e.tatweelarabic=1600,e.tau=964,e.tav=1514,e.tavdages=64330,e.tavdagesh=64330,e.tavdageshhebrew=64330,e.tavhebrew=1514,e.tbar=359,e.tbopomofo=12554,e.tcaron=357,e.tccurl=680,e.tcedilla=355,e.tcheharabic=1670,e.tchehfinalarabic=64379,e.tchehinitialarabic=64380,e.tchehmedialarabic=64381,e.tcircle=9443,e.tcircumflexbelow=7793,e.tcommaaccent=355,e.tdieresis=7831,e.tdotaccent=7787,e.tdotbelow=7789,e.tecyrillic=1090,e.tedescendercyrillic=1197,e.teharabic=1578,e.tehfinalarabic=65174,e.tehhahinitialarabic=64674,e.tehhahisolatedarabic=64524,e.tehinitialarabic=65175,e.tehiragana=12390,e.tehjeeminitialarabic=64673,e.tehjeemisolatedarabic=64523,e.tehmarbutaarabic=1577,e.tehmarbutafinalarabic=65172,e.tehmedialarabic=65176,e.tehmeeminitialarabic=64676,e.tehmeemisolatedarabic=64526,e.tehnoonfinalarabic=64627,e.tekatakana=12486,e.tekatakanahalfwidth=65411,e.telephone=8481,e.telephoneblack=9742,e.telishagedolahebrew=1440,e.telishaqetanahebrew=1449,e.tencircle=9321,e.tenideographicparen=12841,e.tenparen=9341,e.tenperiod=9361,e.tenroman=8569,e.tesh=679,e.tet=1496,e.tetdagesh=64312,e.tetdageshhebrew=64312,e.tethebrew=1496,e.tetsecyrillic=1205,e.tevirhebrew=1435,e.tevirlefthebrew=1435,e.thabengali=2469,e.thadeva=2341,e.thagujarati=2725,e.thagurmukhi=2597,e.thalarabic=1584,e.thalfinalarabic=65196,e.thanthakhatlowleftthai=63640,e.thanthakhatlowrightthai=63639,e.thanthakhatthai=3660,e.thanthakhatupperleftthai=63638,e.theharabic=1579,e.thehfinalarabic=65178,e.thehinitialarabic=65179,e.thehmedialarabic=65180,e.thereexists=8707,e.therefore=8756,e.theta=952,e.theta1=977,e.thetasymbolgreek=977,e.thieuthacirclekorean=12921,e.thieuthaparenkorean=12825,e.thieuthcirclekorean=12907,e.thieuthkorean=12620,e.thieuthparenkorean=12811,e.thirteencircle=9324,e.thirteenparen=9344,e.thirteenperiod=9364,e.thonangmonthothai=3601,e.thook=429,e.thophuthaothai=3602,e.thorn=254,e.thothahanthai=3607,e.thothanthai=3600,e.thothongthai=3608,e.thothungthai=3606,e.thousandcyrillic=1154,e.thousandsseparatorarabic=1644,e.thousandsseparatorpersian=1644,e.three=51,e.threearabic=1635,e.threebengali=2537,e.threecircle=9314,e.threecircleinversesansserif=10124,e.threedeva=2409,e.threeeighths=8540,e.threegujarati=2793,e.threegurmukhi=2665,e.threehackarabic=1635,e.threehangzhou=12323,e.threeideographicparen=12834,e.threeinferior=8323,e.threemonospace=65299,e.threenumeratorbengali=2550,e.threeoldstyle=63283,e.threeparen=9334,e.threeperiod=9354,e.threepersian=1779,e.threequarters=190,e.threequartersemdash=63198,e.threeroman=8562,e.threesuperior=179,e.threethai=3667,e.thzsquare=13204,e.tihiragana=12385,e.tikatakana=12481,e.tikatakanahalfwidth=65409,e.tikeutacirclekorean=12912,e.tikeutaparenkorean=12816,e.tikeutcirclekorean=12898,e.tikeutkorean=12599,e.tikeutparenkorean=12802,e.tilde=732,e.tildebelowcmb=816,e.tildecmb=771,e.tildecomb=771,e.tildedoublecmb=864,e.tildeoperator=8764,e.tildeoverlaycmb=820,e.tildeverticalcmb=830,e.timescircle=8855,e.tipehahebrew=1430,e.tipehalefthebrew=1430,e.tippigurmukhi=2672,e.titlocyrilliccmb=1155,e.tiwnarmenian=1407,e.tlinebelow=7791,e.tmonospace=65364,e.toarmenian=1385,e.tohiragana=12392,e.tokatakana=12488,e.tokatakanahalfwidth=65412,e.tonebarextrahighmod=741,e.tonebarextralowmod=745,e.tonebarhighmod=742,e.tonebarlowmod=744,e.tonebarmidmod=743,e.tonefive=445,e.tonesix=389,e.tonetwo=424,e.tonos=900,e.tonsquare=13095,e.topatakthai=3599,e.tortoiseshellbracketleft=12308,e.tortoiseshellbracketleftsmall=65117,e.tortoiseshellbracketleftvertical=65081,e.tortoiseshellbracketright=12309,e.tortoiseshellbracketrightsmall=65118,e.tortoiseshellbracketrightvertical=65082,e.totaothai=3605,e.tpalatalhook=427,e.tparen=9391,e.trademark=8482,e.trademarksans=63722,e.trademarkserif=63195,e.tretroflexhook=648,e.triagdn=9660,e.triaglf=9668,e.triagrt=9658,e.triagup=9650,e.ts=678,e.tsadi=1510,e.tsadidagesh=64326,e.tsadidageshhebrew=64326,e.tsadihebrew=1510,e.tsecyrillic=1094,e.tsere=1461,e.tsere12=1461,e.tsere1e=1461,e.tsere2b=1461,e.tserehebrew=1461,e.tserenarrowhebrew=1461,e.tserequarterhebrew=1461,e.tserewidehebrew=1461,e.tshecyrillic=1115,e.tsuperior=63219,e.ttabengali=2463,e.ttadeva=2335,e.ttagujarati=2719,e.ttagurmukhi=2591,e.tteharabic=1657,e.ttehfinalarabic=64359,e.ttehinitialarabic=64360,e.ttehmedialarabic=64361,e.tthabengali=2464,e.tthadeva=2336,e.tthagujarati=2720,e.tthagurmukhi=2592,e.tturned=647,e.tuhiragana=12388,e.tukatakana=12484,e.tukatakanahalfwidth=65410,e.tusmallhiragana=12387,e.tusmallkatakana=12483,e.tusmallkatakanahalfwidth=65391,e.twelvecircle=9323,e.twelveparen=9343,e.twelveperiod=9363,e.twelveroman=8571,e.twentycircle=9331,e.twentyhangzhou=21316,e.twentyparen=9351,e.twentyperiod=9371,e.two=50,e.twoarabic=1634,e.twobengali=2536,e.twocircle=9313,e.twocircleinversesansserif=10123,e.twodeva=2408,e.twodotenleader=8229,e.twodotleader=8229,e.twodotleadervertical=65072,e.twogujarati=2792,e.twogurmukhi=2664,e.twohackarabic=1634,e.twohangzhou=12322,e.twoideographicparen=12833,e.twoinferior=8322,e.twomonospace=65298,e.twonumeratorbengali=2549,e.twooldstyle=63282,e.twoparen=9333,e.twoperiod=9353,e.twopersian=1778,e.tworoman=8561,e.twostroke=443,e.twosuperior=178,e.twothai=3666,e.twothirds=8532,e.u=117,e.uacute=250,e.ubar=649,e.ubengali=2441,e.ubopomofo=12584,e.ubreve=365,e.ucaron=468,e.ucircle=9444,e.ucircumflex=251,e.ucircumflexbelow=7799,e.ucyrillic=1091,e.udattadeva=2385,e.udblacute=369,e.udblgrave=533,e.udeva=2313,e.udieresis=252,e.udieresisacute=472,e.udieresisbelow=7795,e.udieresiscaron=474,e.udieresiscyrillic=1265,e.udieresisgrave=476,e.udieresismacron=470,e.udotbelow=7909,e.ugrave=249,e.ugujarati=2697,e.ugurmukhi=2569,e.uhiragana=12358,e.uhookabove=7911,e.uhorn=432,e.uhornacute=7913,e.uhorndotbelow=7921,e.uhorngrave=7915,e.uhornhookabove=7917,e.uhorntilde=7919,e.uhungarumlaut=369,e.uhungarumlautcyrillic=1267,e.uinvertedbreve=535,e.ukatakana=12454,e.ukatakanahalfwidth=65395,e.ukcyrillic=1145,e.ukorean=12636,e.umacron=363,e.umacroncyrillic=1263,e.umacrondieresis=7803,e.umatragurmukhi=2625,e.umonospace=65365,e.underscore=95,e.underscoredbl=8215,e.underscoremonospace=65343,e.underscorevertical=65075,e.underscorewavy=65103,e.union=8746,e.universal=8704,e.uogonek=371,e.uparen=9392,e.upblock=9600,e.upperdothebrew=1476,e.upsilon=965,e.upsilondieresis=971,e.upsilondieresistonos=944,e.upsilonlatin=650,e.upsilontonos=973,e.uptackbelowcmb=797,e.uptackmod=724,e.uragurmukhi=2675,e.uring=367,e.ushortcyrillic=1118,e.usmallhiragana=12357,e.usmallkatakana=12453,e.usmallkatakanahalfwidth=65385,e.ustraightcyrillic=1199,e.ustraightstrokecyrillic=1201,e.utilde=361,e.utildeacute=7801,e.utildebelow=7797,e.uubengali=2442,e.uudeva=2314,e.uugujarati=2698,e.uugurmukhi=2570,e.uumatragurmukhi=2626,e.uuvowelsignbengali=2498,e.uuvowelsigndeva=2370,e.uuvowelsigngujarati=2754,e.uvowelsignbengali=2497,e.uvowelsigndeva=2369,e.uvowelsigngujarati=2753,e.v=118,e.vadeva=2357,e.vagujarati=2741,e.vagurmukhi=2613,e.vakatakana=12535,e.vav=1493,e.vavdagesh=64309,e.vavdagesh65=64309,e.vavdageshhebrew=64309,e.vavhebrew=1493,e.vavholam=64331,e.vavholamhebrew=64331,e.vavvavhebrew=1520,e.vavyodhebrew=1521,e.vcircle=9445,e.vdotbelow=7807,e.vecyrillic=1074,e.veharabic=1700,e.vehfinalarabic=64363,e.vehinitialarabic=64364,e.vehmedialarabic=64365,e.vekatakana=12537,e.venus=9792,e.verticalbar=124,e.verticallineabovecmb=781,e.verticallinebelowcmb=809,e.verticallinelowmod=716,e.verticallinemod=712,e.vewarmenian=1406,e.vhook=651,e.vikatakana=12536,e.viramabengali=2509,e.viramadeva=2381,e.viramagujarati=2765,e.visargabengali=2435,e.visargadeva=2307,e.visargagujarati=2691,e.vmonospace=65366,e.voarmenian=1400,e.voicediterationhiragana=12446,e.voicediterationkatakana=12542,e.voicedmarkkana=12443,e.voicedmarkkanahalfwidth=65438,e.vokatakana=12538,e.vparen=9393,e.vtilde=7805,e.vturned=652,e.vuhiragana=12436,e.vukatakana=12532,e.w=119,e.wacute=7811,e.waekorean=12633,e.wahiragana=12431,e.wakatakana=12527,e.wakatakanahalfwidth=65436,e.wakorean=12632,e.wasmallhiragana=12430,e.wasmallkatakana=12526,e.wattosquare=13143,e.wavedash=12316,e.wavyunderscorevertical=65076,e.wawarabic=1608,e.wawfinalarabic=65262,e.wawhamzaabovearabic=1572,e.wawhamzaabovefinalarabic=65158,e.wbsquare=13277,e.wcircle=9446,e.wcircumflex=373,e.wdieresis=7813,e.wdotaccent=7815,e.wdotbelow=7817,e.wehiragana=12433,e.weierstrass=8472,e.wekatakana=12529,e.wekorean=12638,e.weokorean=12637,e.wgrave=7809,e.whitebullet=9702,e.whitecircle=9675,e.whitecircleinverse=9689,e.whitecornerbracketleft=12302,e.whitecornerbracketleftvertical=65091,e.whitecornerbracketright=12303,e.whitecornerbracketrightvertical=65092,e.whitediamond=9671,e.whitediamondcontainingblacksmalldiamond=9672,e.whitedownpointingsmalltriangle=9663,e.whitedownpointingtriangle=9661,e.whiteleftpointingsmalltriangle=9667,e.whiteleftpointingtriangle=9665,e.whitelenticularbracketleft=12310,e.whitelenticularbracketright=12311,e.whiterightpointingsmalltriangle=9657,e.whiterightpointingtriangle=9655;e.whitesmallsquare=9643,e.whitesmilingface=9786,e.whitesquare=9633,e.whitestar=9734,e.whitetelephone=9743,e.whitetortoiseshellbracketleft=12312,e.whitetortoiseshellbracketright=12313,e.whiteuppointingsmalltriangle=9653,e.whiteuppointingtriangle=9651,e.wihiragana=12432,e.wikatakana=12528,e.wikorean=12639,e.wmonospace=65367,e.wohiragana=12434,e.wokatakana=12530,e.wokatakanahalfwidth=65382,e.won=8361,e.wonmonospace=65510,e.wowaenthai=3623,e.wparen=9394,e.wring=7832,e.wsuperior=695,e.wturned=653,e.wynn=447,e.x=120,e.xabovecmb=829,e.xbopomofo=12562,e.xcircle=9447,e.xdieresis=7821,e.xdotaccent=7819,e.xeharmenian=1389,e.xi=958,e.xmonospace=65368,e.xparen=9395,e.xsuperior=739,e.y=121,e.yaadosquare=13134,e.yabengali=2479,e.yacute=253,e.yadeva=2351,e.yaekorean=12626,e.yagujarati=2735,e.yagurmukhi=2607,e.yahiragana=12420,e.yakatakana=12516,e.yakatakanahalfwidth=65428,e.yakorean=12625,e.yamakkanthai=3662,e.yasmallhiragana=12419,e.yasmallkatakana=12515,e.yasmallkatakanahalfwidth=65388,e.yatcyrillic=1123,e.ycircle=9448,e.ycircumflex=375,e.ydieresis=255,e.ydotaccent=7823,e.ydotbelow=7925,e.yeharabic=1610,e.yehbarreearabic=1746,e.yehbarreefinalarabic=64431,e.yehfinalarabic=65266,e.yehhamzaabovearabic=1574,e.yehhamzaabovefinalarabic=65162,e.yehhamzaaboveinitialarabic=65163,e.yehhamzaabovemedialarabic=65164,e.yehinitialarabic=65267,e.yehmedialarabic=65268,e.yehmeeminitialarabic=64733,e.yehmeemisolatedarabic=64600,e.yehnoonfinalarabic=64660,e.yehthreedotsbelowarabic=1745,e.yekorean=12630,e.yen=165,e.yenmonospace=65509,e.yeokorean=12629,e.yeorinhieuhkorean=12678,e.yerahbenyomohebrew=1450,e.yerahbenyomolefthebrew=1450,e.yericyrillic=1099,e.yerudieresiscyrillic=1273,e.yesieungkorean=12673,e.yesieungpansioskorean=12675,e.yesieungsioskorean=12674,e.yetivhebrew=1434,e.ygrave=7923,e.yhook=436,e.yhookabove=7927,e.yiarmenian=1397,e.yicyrillic=1111,e.yikorean=12642,e.yinyang=9775,e.yiwnarmenian=1410,e.ymonospace=65369,e.yod=1497,e.yoddagesh=64313,e.yoddageshhebrew=64313,e.yodhebrew=1497,e.yodyodhebrew=1522,e.yodyodpatahhebrew=64287,e.yohiragana=12424,e.yoikorean=12681,e.yokatakana=12520,e.yokatakanahalfwidth=65430,e.yokorean=12635,e.yosmallhiragana=12423,e.yosmallkatakana=12519,e.yosmallkatakanahalfwidth=65390,e.yotgreek=1011,e.yoyaekorean=12680,e.yoyakorean=12679,e.yoyakthai=3618,e.yoyingthai=3597,e.yparen=9396,e.ypogegrammeni=890,e.ypogegrammenigreekcmb=837,e.yr=422,e.yring=7833,e.ysuperior=696,e.ytilde=7929,e.yturned=654,e.yuhiragana=12422,e.yuikorean=12684,e.yukatakana=12518,e.yukatakanahalfwidth=65429,e.yukorean=12640,e.yusbigcyrillic=1131,e.yusbigiotifiedcyrillic=1133,e.yuslittlecyrillic=1127,e.yuslittleiotifiedcyrillic=1129,e.yusmallhiragana=12421,e.yusmallkatakana=12517,e.yusmallkatakanahalfwidth=65389,e.yuyekorean=12683,e.yuyeokorean=12682,e.yyabengali=2527,e.yyadeva=2399,e.z=122,e.zaarmenian=1382,e.zacute=378,e.zadeva=2395,e.zagurmukhi=2651,e.zaharabic=1592,e.zahfinalarabic=65222,e.zahinitialarabic=65223,e.zahiragana=12374,e.zahmedialarabic=65224,e.zainarabic=1586,e.zainfinalarabic=65200,e.zakatakana=12470,e.zaqefgadolhebrew=1429,e.zaqefqatanhebrew=1428,e.zarqahebrew=1432,e.zayin=1494,e.zayindagesh=64310,e.zayindageshhebrew=64310,e.zayinhebrew=1494,e.zbopomofo=12567,e.zcaron=382,e.zcircle=9449,e.zcircumflex=7825,e.zcurl=657,e.zdot=380,e.zdotaccent=380,e.zdotbelow=7827,e.zecyrillic=1079,e.zedescendercyrillic=1177,e.zedieresiscyrillic=1247,e.zehiragana=12380,e.zekatakana=12476,e.zero=48,e.zeroarabic=1632,e.zerobengali=2534,e.zerodeva=2406,e.zerogujarati=2790,e.zerogurmukhi=2662,e.zerohackarabic=1632,e.zeroinferior=8320,e.zeromonospace=65296,e.zerooldstyle=63280,e.zeropersian=1776,e.zerosuperior=8304,e.zerothai=3664,e.zerowidthjoiner=65279,e.zerowidthnonjoiner=8204,e.zerowidthspace=8203,e.zeta=950,e.zhbopomofo=12563,e.zhearmenian=1386,e.zhebrevecyrillic=1218,e.zhecyrillic=1078,e.zhedescendercyrillic=1175,e.zhedieresiscyrillic=1245,e.zihiragana=12376,e.zikatakana=12472,e.zinorhebrew=1454,e.zlinebelow=7829,e.zmonospace=65370,e.zohiragana=12382,e.zokatakana=12478,e.zparen=9397,e.zretroflexhook=656,e.zstroke=438,e.zuhiragana=12378,e.zukatakana=12474,e[\".notdef\"]=0,e.angbracketleftbig=9001,e.angbracketleftBig=9001,e.angbracketleftbigg=9001,e.angbracketleftBigg=9001,e.angbracketrightBig=9002,e.angbracketrightbig=9002,e.angbracketrightBigg=9002,e.angbracketrightbigg=9002,e.arrowhookleft=8618,e.arrowhookright=8617,e.arrowlefttophalf=8636,e.arrowleftbothalf=8637,e.arrownortheast=8599,e.arrownorthwest=8598,e.arrowrighttophalf=8640,e.arrowrightbothalf=8641,e.arrowsoutheast=8600,e.arrowsouthwest=8601,e.backslashbig=8726,e.backslashBig=8726,e.backslashBigg=8726,e.backslashbigg=8726,e.bardbl=8214,e.bracehtipdownleft=65079,e.bracehtipdownright=65079,e.bracehtipupleft=65080,e.bracehtipupright=65080,e.braceleftBig=123,e.braceleftbig=123,e.braceleftbigg=123,e.braceleftBigg=123,e.bracerightBig=125,e.bracerightbig=125,e.bracerightbigg=125,e.bracerightBigg=125,e.bracketleftbig=91,e.bracketleftBig=91,e.bracketleftbigg=91,e.bracketleftBigg=91,e.bracketrightBig=93,e.bracketrightbig=93,e.bracketrightbigg=93,e.bracketrightBigg=93,e.ceilingleftbig=8968,e.ceilingleftBig=8968,e.ceilingleftBigg=8968,e.ceilingleftbigg=8968,e.ceilingrightbig=8969,e.ceilingrightBig=8969,e.ceilingrightbigg=8969,e.ceilingrightBigg=8969,e.circledotdisplay=8857,e.circledottext=8857,e.circlemultiplydisplay=8855,e.circlemultiplytext=8855,e.circleplusdisplay=8853,e.circleplustext=8853,e.contintegraldisplay=8750,e.contintegraltext=8750,e.coproductdisplay=8720,e.coproducttext=8720,e.floorleftBig=8970,e.floorleftbig=8970,e.floorleftbigg=8970,e.floorleftBigg=8970,e.floorrightbig=8971,e.floorrightBig=8971,e.floorrightBigg=8971,e.floorrightbigg=8971,e.hatwide=770,e.hatwider=770,e.hatwidest=770,e.intercal=7488,e.integraldisplay=8747,e.integraltext=8747,e.intersectiondisplay=8898,e.intersectiontext=8898,e.logicalanddisplay=8743,e.logicalandtext=8743,e.logicalordisplay=8744,e.logicalortext=8744,e.parenleftBig=40,e.parenleftbig=40,e.parenleftBigg=40,e.parenleftbigg=40,e.parenrightBig=41,e.parenrightbig=41,e.parenrightBigg=41,e.parenrightbigg=41,e.prime=8242,e.productdisplay=8719,e.producttext=8719,e.radicalbig=8730,e.radicalBig=8730,e.radicalBigg=8730,e.radicalbigg=8730,e.radicalbt=8730,e.radicaltp=8730,e.radicalvertex=8730,e.slashbig=47,e.slashBig=47,e.slashBigg=47,e.slashbigg=47,e.summationdisplay=8721,e.summationtext=8721,e.tildewide=732,e.tildewider=732,e.tildewidest=732,e.uniondisplay=8899,e.unionmultidisplay=8846,e.unionmultitext=8846,e.unionsqdisplay=8852,e.unionsqtext=8852,e.uniontext=8899,e.vextenddouble=8741,e.vextendsingle=8739}),n=a(function(e){e.space=32,e.a1=9985,e.a2=9986,e.a202=9987,e.a3=9988,e.a4=9742,e.a5=9990,e.a119=9991,e.a118=9992,e.a117=9993,e.a11=9755,e.a12=9758,e.a13=9996,e.a14=9997,e.a15=9998,e.a16=9999,e.a105=1e4,e.a17=10001,e.a18=10002,e.a19=10003,e.a20=10004,e.a21=10005,e.a22=10006,e.a23=10007,e.a24=10008,e.a25=10009,e.a26=10010,e.a27=10011,e.a28=10012,e.a6=10013,e.a7=10014,e.a8=10015,e.a9=10016,e.a10=10017,e.a29=10018,e.a30=10019,e.a31=10020,e.a32=10021,e.a33=10022,e.a34=10023,e.a35=9733,e.a36=10025,e.a37=10026,e.a38=10027,e.a39=10028,e.a40=10029,e.a41=10030,e.a42=10031,e.a43=10032,e.a44=10033,e.a45=10034,e.a46=10035,e.a47=10036,e.a48=10037,e.a49=10038,e.a50=10039,e.a51=10040,e.a52=10041,e.a53=10042,e.a54=10043,e.a55=10044,e.a56=10045,e.a57=10046,e.a58=10047,e.a59=10048,e.a60=10049,e.a61=10050,e.a62=10051,e.a63=10052,e.a64=10053,e.a65=10054,e.a66=10055,e.a67=10056,e.a68=10057,e.a69=10058,e.a70=10059,e.a71=9679,e.a72=10061,e.a73=9632,e.a74=10063,e.a203=10064,e.a75=10065,e.a204=10066,e.a76=9650,e.a77=9660,e.a78=9670,e.a79=10070,e.a81=9687,e.a82=10072,e.a83=10073,e.a84=10074,e.a97=10075,e.a98=10076,e.a99=10077,e.a100=10078,e.a101=10081,e.a102=10082,e.a103=10083,e.a104=10084,e.a106=10085,e.a107=10086,e.a108=10087,e.a112=9827,e.a111=9830,e.a110=9829,e.a109=9824,e.a120=9312,e.a121=9313,e.a122=9314,e.a123=9315,e.a124=9316,e.a125=9317,e.a126=9318,e.a127=9319,e.a128=9320,e.a129=9321,e.a130=10102,e.a131=10103,e.a132=10104,e.a133=10105,e.a134=10106,e.a135=10107,e.a136=10108,e.a137=10109,e.a138=10110,e.a139=10111,e.a140=10112,e.a141=10113,e.a142=10114,e.a143=10115,e.a144=10116,e.a145=10117,e.a146=10118,e.a147=10119,e.a148=10120,e.a149=10121,e.a150=10122,e.a151=10123,e.a152=10124,e.a153=10125,e.a154=10126,e.a155=10127,e.a156=10128,e.a157=10129,e.a158=10130,e.a159=10131,e.a160=10132,e.a161=8594,e.a163=8596,e.a164=8597,e.a196=10136,e.a165=10137,e.a192=10138,e.a166=10139,e.a167=10140,e.a168=10141,e.a169=10142,e.a170=10143,e.a171=10144,e.a172=10145,e.a173=10146,e.a162=10147,e.a174=10148,e.a175=10149,e.a176=10150,e.a177=10151,e.a178=10152,e.a179=10153,e.a193=10154,e.a180=10155,e.a199=10156,e.a181=10157,e.a200=10158,e.a182=10159,e.a201=10161,e.a183=10162,e.a184=10163,e.a197=10164,e.a185=10165,e.a194=10166,e.a198=10167,e.a186=10168,e.a195=10169,e.a187=10170,e.a188=10171,e.a189=10172,e.a190=10173,e.a191=10174,e.a89=10088,e.a90=10089,e.a93=10090,e.a94=10091,e.a91=10092,e.a92=10093,e.a205=10094,e.a85=10095,e.a206=10096,e.a86=10097,e.a87=10098,e.a88=10099,e.a95=10100,e.a96=10101,e[\".notdef\"]=0});t.getGlyphsUnicode=i,t.getDingbatsGlyphsUnicode=n},function(e,r,a){\"use strict\";var i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};e.exports=function(){return\"object\"===(void 0===t?\"undefined\":i(t))&&t+\"\"==\"[object process]\"}},function(e,t,r){\"use strict\";e.exports=!r(13)&&!r(14)(function(){return 7!=Object.defineProperty(r(27)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,r){\"use strict\";var a=r(3);e.exports=function(e,t){if(!a(e))return e;var r,i;if(t&&\"function\"==typeof(r=e.toString)&&!a(i=r.call(e)))return i;if(\"function\"==typeof(r=e.valueOf)&&!a(i=r.call(e)))return i;if(!t&&\"function\"==typeof(r=e.toString)&&!a(i=r.call(e)))return i;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t,r){\"use strict\";var a=r(17),i=r(31),n=r(79);e.exports=function(e){return function(t,r,o){var s,c=a(t),l=i(c.length),u=n(o,l);if(e&&r!=r){for(;l>u;)if((s=c[u++])!=s)return!0}else for(;l>u;u++)if((e||u in c)&&c[u]===r)return e||u||0;return!e&&-1}}},function(e,t,r){\"use strict\";var a=r(4)(\"unscopables\"),i=Array.prototype;null==i[a]&&r(12)(i,a,{}),e.exports=function(e){i[a][e]=!0}},function(e,t,r){\"use strict\";var a=r(5),i=a[\"__core-js_shared__\"]||(a[\"__core-js_shared__\"]={});e.exports=function(e){return i[e]||(i[e]={})}},function(e,t,r){\"use strict\";var a=r(33),i={};i[r(4)(\"toStringTag\")]=\"z\",i+\"\"!=\"[object z]\"&&r(10)(Object.prototype,\"toString\",function(){return\"[object \"+a(this)+\"]\"},!0)},function(e,t,r){\"use strict\";var a=r(52),i=r(6),n=r(10),o=r(12),s=r(9),c=r(19),l=r(90),u=r(24),h=r(94),f=r(4)(\"iterator\"),d=!([].keys&&\"next\"in[].keys()),g=function(){return this};e.exports=function(e,t,r,m,p,b,v){l(r,t,m);var y,w,k,S=function(e){if(!d&&e in _)return _[e];switch(e){case\"keys\":case\"values\":return function(){return new r(this,e)}}return function(){return new r(this,e)}},C=t+\" Iterator\",x=\"values\"==p,A=!1,_=e.prototype,P=_[f]||_[\"@@iterator\"]||p&&_[p],I=!d&&P||S(p),T=p?x?S(\"entries\"):I:void 0,O=\"Array\"==t&&_.entries||P;if(O&&(k=h(O.call(new e)))!==Object.prototype&&k.next&&(u(k,C,!0),a||s(k,f)||o(k,f,g)),x&&P&&\"values\"!==P.name&&(A=!0,I=function(){return P.call(this)}),a&&!v||!d&&!A&&_[f]||o(_,f,I),c[t]=I,c[C]=g,p)if(y={values:x?I:S(\"values\"),keys:b?I:S(\"keys\"),entries:T},v)for(w in y)w in _||n(_,w,y[w]);else i(i.P+i.F*(d||A),t,y);return y}},function(e,t,r){\"use strict\";e.exports=!1},function(e,t,r){\"use strict\";e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,r){\"use strict\";var a=r(5).document;e.exports=a&&a.documentElement},function(e,t,r){\"use strict\";for(var a=r(95),i=r(23),n=r(10),o=r(5),s=r(12),c=r(19),l=r(4),u=l(\"iterator\"),h=l(\"toStringTag\"),f=c.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},g=i(d),m=0;m<g.length;m++){var p,b=g[m],v=d[b],y=o[b],w=y&&y.prototype;if(w&&(w[u]||s(w,u,f),w[h]||s(w,h,b),c[b]=f,v))for(p in a)w[p]||n(w,p,a[p],!0)}},function(e,t,r){\"use strict\";var a=r(8),i=r(16),n=r(4)(\"species\");e.exports=function(e,t){var r,o=a(e).constructor;return void 0===o||null==(r=a(o)[n])?t:i(r)}},function(e,t,r){\"use strict\";var a,i,n,o=r(11),s=r(101),c=r(54),l=r(27),u=r(5),h=u.process,f=u.setImmediate,d=u.clearImmediate,g=u.MessageChannel,m=u.Dispatch,p=0,b={},v=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},y=function(e){v.call(e.data)};f&&d||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return b[++p]=function(){s(\"function\"==typeof e?e:Function(e),t)},a(p),p},d=function(e){delete b[e]},\"process\"==r(18)(h)?a=function(e){h.nextTick(o(v,e,1))}:m&&m.now?a=function(e){m.now(o(v,e,1))}:g?(n=(i=new g).port2,i.port1.onmessage=y,a=o(n.postMessage,n,1)):u.addEventListener&&\"function\"==typeof postMessage&&!u.importScripts?(a=function(e){u.postMessage(e+\"\",\"*\")},u.addEventListener(\"message\",y,!1)):a=\"onreadystatechange\"in l(\"script\")?function(e){c.appendChild(l(\"script\")).onreadystatechange=function(){c.removeChild(this),v.call(e)}}:function(e){setTimeout(o(v,e,1),0)}),e.exports={set:f,clear:d}},function(e,t,r){\"use strict\";e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){\"use strict\";var a=r(8),i=r(3),n=r(37);e.exports=function(e,t){if(a(e),i(t)&&t.constructor===e)return t;var r=n.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){\"use strict\";var a=r(4)(\"iterator\"),i=!1;try{var n=[7][a]();n.return=function(){i=!0},Array.from(n,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var r=!1;try{var n=[7],o=n[a]();o.next=function(){return{done:r=!0}},n[a]=function(){return o},e(n)}catch(e){}return r}},function(e,t,r){\"use strict\";var a=r(11),i=r(29),n=r(35),o=r(31),s=r(108);e.exports=function(e,t){var r=1==e,c=2==e,l=3==e,u=4==e,h=6==e,f=5==e||h,d=t||s;return function(t,s,g){for(var m,p,b=n(t),v=i(b),y=a(s,g,3),w=o(v.length),k=0,S=r?d(t,w):c?d(t,0):void 0;w>k;k++)if((f||k in v)&&(p=y(m=v[k],k,b),e))if(r)S[k]=p;else if(p)switch(e){case 3:return!0;case 5:return m;case 6:return k;case 2:S.push(m)}else if(u)return!1;return h?-1:l||u?u:S}}},function(e,t,r){\"use strict\";var a=r(3);e.exports=function(e,t){if(!a(e)||e._t!==t)throw TypeError(\"Incompatible receiver, \"+t+\" required!\");return e}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkedStreamManager=t.ChunkedStream=void 0;var a=r(0),i=function(){function e(e,t,r){this.bytes=new Uint8Array(e),this.start=0,this.pos=0,this.end=e,this.chunkSize=t,this.loadedChunks=[],this.numChunksLoaded=0,this.numChunks=Math.ceil(e/t),this.manager=r,this.progressiveDataLength=0,this.lastSuccessfulEnsureByteChunk=-1}return e.prototype={getMissingChunks:function(){for(var e=[],t=0,r=this.numChunks;t<r;++t)this.loadedChunks[t]||e.push(t);return e},getBaseStreams:function(){return[this]},allChunksLoaded:function(){return this.numChunksLoaded===this.numChunks},onReceiveData:function(e,t){var r=e+t.byteLength;if(e%this.chunkSize!=0)throw new Error(\"Bad begin offset: \"+e);var a=this.bytes.length;if(r%this.chunkSize!=0&&r!==a)throw new Error(\"Bad end offset: \"+r);this.bytes.set(new Uint8Array(t),e);var i,n=this.chunkSize,o=Math.floor(e/n),s=Math.floor((r-1)/n)+1;for(i=o;i<s;++i)this.loadedChunks[i]||(this.loadedChunks[i]=!0,++this.numChunksLoaded)},onReceiveProgressiveData:function(e){var t=this.progressiveDataLength,r=Math.floor(t/this.chunkSize);this.bytes.set(new Uint8Array(e),t),t+=e.byteLength,this.progressiveDataLength=t;var a,i=t>=this.end?this.numChunks:Math.floor(t/this.chunkSize);for(a=r;a<i;++a)this.loadedChunks[a]||(this.loadedChunks[a]=!0,++this.numChunksLoaded)},ensureByte:function(e){var t=Math.floor(e/this.chunkSize);if(t!==this.lastSuccessfulEnsureByteChunk){if(!this.loadedChunks[t])throw new a.MissingDataException(e,e+1);this.lastSuccessfulEnsureByteChunk=t}},ensureRange:function(e,t){if(!(e>=t||t<=this.progressiveDataLength))for(var r=this.chunkSize,i=Math.floor(e/r),n=Math.floor((t-1)/r)+1,o=i;o<n;++o)if(!this.loadedChunks[o])throw new a.MissingDataException(e,t)},nextEmptyChunk:function(e){for(var t,r=this.numChunks,a=0;a<r;++a)if(t=(e+a)%r,!this.loadedChunks[t])return t;return null},hasChunk:function(e){return!!this.loadedChunks[e]},get length(){return this.end-this.start},get isEmpty(){return 0===this.length},getByte:function(){var e=this.pos;return e>=this.end?-1:(this.ensureByte(e),this.bytes[this.pos++])},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t=this.bytes,r=this.pos,a=this.end;if(!e)return this.ensureRange(r,a),t.subarray(r,a);var i=r+e;return i>a&&(i=a),this.ensureRange(r,i),this.pos=i,t.subarray(r,i)},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=this.getBytes(e);return this.pos-=t.length,t},getByteRange:function(e,t){return this.ensureRange(e,t),this.bytes.subarray(e,t)},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=this.start},moveStart:function(){this.start=this.pos},makeSubStream:function(e,t,r){function a(){}this.ensureRange(e,e+t),a.prototype=Object.create(this),a.prototype.getMissingChunks=function(){for(var e=this.chunkSize,t=Math.floor(this.start/e),r=Math.floor((this.end-1)/e)+1,a=[],i=t;i<r;++i)this.loadedChunks[i]||a.push(i);return a};var i=new a;return i.pos=i.start=e,i.end=e+t||this.end,i.dict=r,i}},e}(),n=function(){function e(e,t){var r=t.rangeChunkSize,n=t.length;this.stream=new i(n,r,this),this.length=n,this.chunkSize=r,this.pdfNetworkStream=e,this.url=t.url,this.disableAutoFetch=t.disableAutoFetch,this.msgHandler=t.msgHandler,this.currRequestId=0,this.chunksNeededByRequest=Object.create(null),this.requestsByChunk=Object.create(null),this.promisesByRequest=Object.create(null),this.progressiveDataLength=0,this.aborted=!1,this._loadedStreamCapability=(0,a.createPromiseCapability)()}return e.prototype={onLoadedStream:function(){return this._loadedStreamCapability.promise},sendRequest:function(e,t){var r=this,i=this.pdfNetworkStream.getRangeReader(e,t);i.isStreamingSupported||(i.onProgress=this.onProgress.bind(this));var n=[],o=0,s=this;new Promise(function(e,t){i.read().then(function r(c){try{if(!c.done){var l=c.value;return n.push(l),o+=(0,a.arrayByteLength)(l),i.isStreamingSupported&&s.onProgress({loaded:o}),void i.read().then(r,t)}var u=(0,a.arraysToBytes)(n);n=null,e(u)}catch(e){t(e)}},t)}).then(function(t){r.aborted||r.onReceiveData({chunk:t,begin:e})})},requestAllChunks:function(){var e=this.stream.getMissingChunks();return this._requestChunks(e),this._loadedStreamCapability.promise},_requestChunks:function(e){var t,r,i=this.currRequestId++,n=Object.create(null);for(this.chunksNeededByRequest[i]=n,t=0,r=e.length;t<r;t++)this.stream.hasChunk(e[t])||(n[e[t]]=!0);if((0,a.isEmptyObj)(n))return Promise.resolve();var o=(0,a.createPromiseCapability)();this.promisesByRequest[i]=o;var s=[];for(var c in n)(c|=0)in this.requestsByChunk||(this.requestsByChunk[c]=[],s.push(c)),this.requestsByChunk[c].push(i);if(!s.length)return o.promise;var l=this.groupChunks(s);for(t=0;t<l.length;++t){var u=l[t],h=u.beginChunk*this.chunkSize,f=Math.min(u.endChunk*this.chunkSize,this.length);this.sendRequest(h,f)}return o.promise},getStream:function(){return this.stream},requestRange:function(e,t){t=Math.min(t,this.length);for(var r=this.getBeginChunk(e),a=this.getEndChunk(t),i=[],n=r;n<a;++n)i.push(n);return this._requestChunks(i)},requestRanges:function(e){e=e||[];for(var t=[],r=0;r<e.length;r++)for(var a=this.getBeginChunk(e[r].begin),i=this.getEndChunk(e[r].end),n=a;n<i;++n)t.indexOf(n)<0&&t.push(n);return t.sort(function(e,t){return e-t}),this._requestChunks(t)},groupChunks:function(e){for(var t=[],r=-1,a=-1,i=0;i<e.length;++i){var n=e[i];r<0&&(r=n),a>=0&&a+1!==n&&(t.push({beginChunk:r,endChunk:a+1}),r=n),i+1===e.length&&t.push({beginChunk:r,endChunk:n+1}),a=n}return t},onProgress:function(e){var t=this.stream.numChunksLoaded*this.chunkSize+e.loaded;this.msgHandler.send(\"DocProgress\",{loaded:t,total:this.length})},onReceiveData:function(e){var t=e.chunk,r=void 0===e.begin,i=r?this.progressiveDataLength:e.begin,n=i+t.byteLength,o=Math.floor(i/this.chunkSize),s=n<this.length?Math.floor(n/this.chunkSize):Math.ceil(n/this.chunkSize);r?(this.stream.onReceiveProgressiveData(t),this.progressiveDataLength=n):this.stream.onReceiveData(i,t),this.stream.allChunksLoaded()&&this._loadedStreamCapability.resolve(this.stream);var c,l,u=[];for(t=o;t<s;++t){var h=this.requestsByChunk[t]||[];for(delete this.requestsByChunk[t],c=0;c<h.length;++c){l=h[c];var f=this.chunksNeededByRequest[l];t in f&&delete f[t],(0,a.isEmptyObj)(f)&&u.push(l)}}if(!this.disableAutoFetch&&(0,a.isEmptyObj)(this.requestsByChunk)){var d;if(1===this.stream.numChunksLoaded){var g=this.stream.numChunks-1;this.stream.hasChunk(g)||(d=g)}else d=this.stream.nextEmptyChunk(s);Number.isInteger(d)&&this._requestChunks([d])}for(c=0;c<u.length;++c){l=u[c];var m=this.promisesByRequest[l];delete this.promisesByRequest[l],m.resolve()}this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize,total:this.length})},onError:function(e){this._loadedStreamCapability.reject(e)},getBeginChunk:function(e){return Math.floor(e/this.chunkSize)},getEndChunk:function(e){return Math.floor((e-1)/this.chunkSize)+1},abort:function(){for(var e in this.aborted=!0,this.pdfNetworkStream&&this.pdfNetworkStream.cancelAllRequests(\"abort\"),this.promisesByRequest){this.promisesByRequest[e].reject(new Error(\"Request was aborted\"))}}},e}();t.ChunkedStream=i,t.ChunkedStreamManager=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FileSpec=t.XRef=t.ObjectLoader=t.Catalog=void 0;var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},n=r(0),o=r(1),s=r(26),c=r(63),l=r(68),u=r(20),h=function(){function e(e,t,r){if(this.pdfManager=e,this.xref=t,this.catDict=t.getCatalogObj(),!(0,o.isDict)(this.catDict))throw new n.FormatError(\"catalog object is not a dictionary\");this.fontCache=new o.RefSetCache,this.builtInCMapCache=Object.create(null),this.pageKidsCountCache=new o.RefSetCache,this.pageFactory=r,this.pagePromises=[]}return e.prototype={get metadata(){var e=this.catDict.getRaw(\"Metadata\");if(!(0,o.isRef)(e))return(0,n.shadow)(this,\"metadata\",null);var t,r=!!this.xref.encrypt&&this.xref.encrypt.encryptMetadata,a=this.xref.fetch(e,!r);if(a&&(0,o.isDict)(a.dict)){var i=a.dict.get(\"Type\"),s=a.dict.get(\"Subtype\");if((0,o.isName)(i,\"Metadata\")&&(0,o.isName)(s,\"XML\"))try{t=(0,n.stringToUTF8String)((0,n.bytesToString)(a.getBytes()))}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.info)(\"Skipping invalid metadata.\")}}return(0,n.shadow)(this,\"metadata\",t)},get toplevelPagesDict(){var e=this.catDict.get(\"Pages\");if(!(0,o.isDict)(e))throw new n.FormatError(\"invalid top-level pages dictionary\");return(0,n.shadow)(this,\"toplevelPagesDict\",e)},get documentOutline(){var e=null;try{e=this.readDocumentOutline()}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.warn)(\"Unable to read document outline\")}return(0,n.shadow)(this,\"documentOutline\",e)},readDocumentOutline:function(){var t=this.catDict.get(\"Outlines\");if(!(0,o.isDict)(t))return null;if(t=t.getRaw(\"First\"),!(0,o.isRef)(t))return null;var r={items:[]},a=[{obj:t,parent:r}],i=new o.RefSet;i.put(t);for(var s=this.xref,c=new Uint8Array(3);a.length>0;){var l=a.shift(),h=s.fetchIfRef(l.obj);if(null!==h){if(!h.has(\"Title\"))throw new n.FormatError(\"Invalid outline item\");var f={url:null,dest:null};e.parseDestDictionary({destDict:h,resultObj:f,docBaseUrl:this.pdfManager.docBaseUrl});var d=h.get(\"Title\"),g=h.get(\"F\")||0,m=h.getArray(\"C\"),p=c;!Array.isArray(m)||3!==m.length||0===m[0]&&0===m[1]&&0===m[2]||(p=u.ColorSpace.singletons.rgb.getRgb(m,0));var b={dest:f.dest,url:f.url,unsafeUrl:f.unsafeUrl,newWindow:f.newWindow,title:(0,n.stringToPDFString)(d),color:p,count:h.get(\"Count\"),bold:!!(2&g),italic:!!(1&g),items:[]};l.parent.items.push(b),t=h.getRaw(\"First\"),(0,o.isRef)(t)&&!i.has(t)&&(a.push({obj:t,parent:b}),i.put(t)),t=h.getRaw(\"Next\"),(0,o.isRef)(t)&&!i.has(t)&&(a.push({obj:t,parent:l.parent}),i.put(t))}}return r.items.length>0?r.items:null},get numPages(){var e=this.toplevelPagesDict.get(\"Count\");if(!Number.isInteger(e))throw new n.FormatError(\"page count in top level pages object is not an integer\");return(0,n.shadow)(this,\"numPages\",e)},get destinations(){function e(e){return(0,o.isDict)(e)?e.get(\"D\"):e}var t,r,a=this.xref,i={},s=this.catDict.get(\"Names\");if(s&&s.has(\"Dests\")?t=s.getRaw(\"Dests\"):this.catDict.has(\"Dests\")&&(r=this.catDict.get(\"Dests\")),r&&(s=r).forEach(function(t,r){r&&(i[t]=e(r))}),t){var c=new g(t,a).getAll();for(var l in c)i[l]=e(c[l])}return(0,n.shadow)(this,\"destinations\",i)},getDestination:function(e){function t(e){return(0,o.isDict)(e)?e.get(\"D\"):e}var r,a,i=this.xref,n=null,s=this.catDict.get(\"Names\");if(s&&s.has(\"Dests\")?r=s.getRaw(\"Dests\"):this.catDict.has(\"Dests\")&&(a=this.catDict.get(\"Dests\")),a){var c=a.get(e);c&&(n=t(c))}r&&(n=t(new g(r,i).get(e)));return n},get pageLabels(){var e=null;try{e=this.readPageLabels()}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.warn)(\"Unable to read page labels.\")}return(0,n.shadow)(this,\"pageLabels\",e)},readPageLabels:function(){var e=this.catDict.getRaw(\"PageLabels\");if(!e)return null;for(var t=new Array(this.numPages),r=null,a=\"\",i=new m(e,this.xref).getAll(),s=\"\",c=1,l=0,u=this.numPages;l<u;l++){if(l in i){var h=i[l];if(!(0,o.isDict)(h))throw new n.FormatError(\"The PageLabel is not a dictionary.\");var f=h.get(\"Type\");if(f&&!(0,o.isName)(f,\"PageLabel\"))throw new n.FormatError(\"Invalid type in PageLabel dictionary.\");var d=h.get(\"S\");if(d&&!(0,o.isName)(d))throw new n.FormatError(\"Invalid style in PageLabel dictionary.\");r=d?d.name:null;var g=h.get(\"P\");if(g&&!(0,n.isString)(g))throw new n.FormatError(\"Invalid prefix in PageLabel dictionary.\");a=g?(0,n.stringToPDFString)(g):\"\";var p=h.get(\"St\");if(p&&!(Number.isInteger(p)&&p>=1))throw new n.FormatError(\"Invalid start in PageLabel dictionary.\");c=p||1}switch(r){case\"D\":s=c;break;case\"R\":case\"r\":s=n.Util.toRoman(c,\"r\"===r);break;case\"A\":case\"a\":for(var b=\"a\"===r?97:65,v=c-1,y=String.fromCharCode(b+v%26),w=[],k=0,S=v/26|0;k<=S;k++)w.push(y);s=w.join(\"\");break;default:if(r)throw new n.FormatError('Invalid style \"'+r+'\" in PageLabel dictionary.')}t[l]=a+s,s=\"\",c++}return t},get pageMode(){var e=this.catDict.get(\"PageMode\"),t=\"UseNone\";if((0,o.isName)(e))switch(e.name){case\"UseNone\":case\"UseOutlines\":case\"UseThumbs\":case\"FullScreen\":case\"UseOC\":case\"UseAttachments\":t=e.name}return(0,n.shadow)(this,\"pageMode\",t)},get attachments(){var e,t=this.xref,r=null,a=this.catDict.get(\"Names\");if(a&&(e=a.getRaw(\"EmbeddedFiles\")),e){var i=new g(e,t).getAll();for(var o in i){var s=new p(i[o],t);r||(r=Object.create(null)),r[(0,n.stringToPDFString)(o)]=s.serializable}}return(0,n.shadow)(this,\"attachments\",r)},get javaScript(){var e=this.xref,t=this.catDict.get(\"Names\"),r=null;function a(e){var t=e.get(\"S\");if((0,o.isName)(t,\"JavaScript\")){var a=e.get(\"JS\");if((0,o.isStream)(a))a=(0,n.bytesToString)(a.getBytes());else if(!(0,n.isString)(a))return;r||(r=[]),r.push((0,n.stringToPDFString)(a))}}if(t&&t.has(\"JavaScript\")){var i=new g(t.getRaw(\"JavaScript\"),e).getAll();for(var s in i){var c=i[s];(0,o.isDict)(c)&&a(c)}}var l=this.catDict.get(\"OpenAction\");if((0,o.isDict)(l,\"Action\")){var u=l.get(\"S\");if((0,o.isName)(u,\"Named\")){var h=l.get(\"N\");(0,o.isName)(h,\"Print\")&&(r||(r=[]),r.push(\"print({});\"))}else a(l)}return(0,n.shadow)(this,\"javaScript\",r)},cleanup:function(){var e=this;this.pageKidsCountCache.clear();var t=[];return this.fontCache.forEach(function(e){t.push(e)}),Promise.all(t).then(function(t){for(var r=0,a=t.length;r<a;r++){delete t[r].dict.translated}e.fontCache.clear(),e.builtInCMapCache=Object.create(null)})},getPage:function(e){var t=this;return e in this.pagePromises||(this.pagePromises[e]=this.getPageDict(e).then(function(r){var a=i(r,2),n=a[0],o=a[1];return t.pageFactory.createPage(e,n,o,t.fontCache,t.builtInCMapCache)})),this.pagePromises[e]},getPageDict:function(e){var t,r=(0,n.createPromiseCapability)(),a=[this.catDict.getRaw(\"Pages\")],i=0,s=this.xref,c=this.pageKidsCountCache;return function l(){for(;a.length;){var u=a.pop();if((0,o.isRef)(u)){if((t=c.get(u))>0&&i+t<e){i+=t;continue}return void s.fetchAsync(u).then(function(t){(0,o.isDict)(t,\"Page\")||(0,o.isDict)(t)&&!t.has(\"Kids\")?e===i?(u&&!c.has(u)&&c.put(u,1),r.resolve([t,u])):(i++,l()):(a.push(t),l())},r.reject)}if(!(0,o.isDict)(u))return void r.reject(new n.FormatError(\"page dictionary kid reference points to wrong type of object\"));t=u.get(\"Count\");var h=u.objId;if(h&&!c.has(h)&&c.put(h,t),i+t<=e)i+=t;else{var f=u.get(\"Kids\");if(!Array.isArray(f))return void r.reject(new n.FormatError(\"page dictionary kids object is not an array\"));for(var d=f.length-1;d>=0;d--)a.push(f[d])}}r.reject(new Error(\"Page index \"+e+\" not found.\"))}(),r.promise},getPageIndex:function(e){var t=this.xref;var r=0;return function a(i){return function(r){var a,i=0;return t.fetchAsync(r).then(function(t){if((0,o.isRefsEqual)(r,e)&&!(0,o.isDict)(t,\"Page\")&&(!(0,o.isDict)(t)||t.has(\"Type\")||!t.has(\"Contents\")))throw new n.FormatError(\"The reference does not point to a /Page Dict.\");if(!t)return null;if(!(0,o.isDict)(t))throw new n.FormatError(\"node must be a Dict.\");return a=t.getRaw(\"Parent\"),t.getAsync(\"Parent\")}).then(function(e){if(!e)return null;if(!(0,o.isDict)(e))throw new n.FormatError(\"parent must be a Dict.\");return e.getAsync(\"Kids\")}).then(function(e){if(!e)return null;for(var s=[],c=!1,l=0;l<e.length;l++){var u=e[l];if(!(0,o.isRef)(u))throw new n.FormatError(\"kid must be a Ref.\");if(u.num===r.num){c=!0;break}s.push(t.fetchAsync(u).then(function(e){if(e.has(\"Count\")){var t=e.get(\"Count\");i+=t}else i++}))}if(!c)throw new n.FormatError(\"kid ref not found in parents kids\");return Promise.all(s).then(function(){return[i,a]})})}(i).then(function(e){if(!e)return r;var t=e[0],i=e[1];return r+=t,a(i)})}(e)}},e.parseDestDictionary=function(e){var t=e.destDict;if((0,o.isDict)(t)){var r=e.resultObj;if(\"object\"===(void 0===r?\"undefined\":a(r))){var i,s,c=e.docBaseUrl||null,l=t.get(\"A\");if(!(0,o.isDict)(l)&&t.has(\"Dest\")&&(l=t.get(\"Dest\")),(0,o.isDict)(l)){var u=l.get(\"S\");if(!(0,o.isName)(u))return void(0,n.warn)(\"parseDestDictionary: Invalid type in Action dictionary.\");var h=u.name;switch(h){case\"URI\":i=l.get(\"URI\"),(0,o.isName)(i)?i=\"/\"+i.name:(0,n.isString)(i)&&(i=function(e){return 0===e.indexOf(\"www.\")?\"http://\"+e:e}(i));break;case\"GoTo\":s=l.get(\"D\");break;case\"Launch\":case\"GoToR\":var f=l.get(\"F\");(0,o.isDict)(f)?i=f.get(\"F\")||null:(0,n.isString)(f)&&(i=f);var d=l.get(\"D\");if(d&&((0,o.isName)(d)&&(d=d.name),(0,n.isString)(i))){var g=i.split(\"#\")[0];(0,n.isString)(d)?i=g+\"#\"+d:Array.isArray(d)&&(i=g+\"#\"+JSON.stringify(d))}var m=l.get(\"NewWindow\");(0,n.isBool)(m)&&(r.newWindow=m);break;case\"Named\":var p=l.get(\"N\");(0,o.isName)(p)&&(r.action=p.name);break;case\"JavaScript\":var b,v=l.get(\"JS\");if((0,o.isStream)(v)?b=(0,n.bytesToString)(v.getBytes()):(0,n.isString)(v)&&(b=v),b){var y=new RegExp(\"^\\\\s*(\"+[\"app.launchURL\",\"window.open\"].join(\"|\").split(\".\").join(\"\\\\.\")+\")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\"i\").exec((0,n.stringToPDFString)(b));if(y&&y[2]){i=y[2],\"true\"===y[3]&&\"app.launchURL\"===y[1]&&(r.newWindow=!0);break}}default:(0,n.warn)('parseDestDictionary: Unsupported Action type \"'+h+'\".')}}else t.has(\"Dest\")&&(s=t.get(\"Dest\"));if((0,n.isString)(i)){i=function(e){try{return(0,n.stringToUTF8String)(e)}catch(t){return e}}(i);var w=(0,n.createValidAbsoluteUrl)(i,c);w&&(r.url=w.href),r.unsafeUrl=i}s&&((0,o.isName)(s)&&(s=s.name),((0,n.isString)(s)||Array.isArray(s))&&(r.dest=s))}else(0,n.warn)('parseDestDictionary: \"resultObj\" must be an object.')}else(0,n.warn)('parseDestDictionary: \"destDict\" must be a dictionary.')},e}(),f=function(){function e(e,t){this.stream=e,this.pdfManager=t,this.entries=[],this.xrefstms=Object.create(null),this.cache=[],this.stats={streamTypes:[],fontTypes:[]}}return e.prototype={setStartXRef:function(e){this.startXRefQueue=[e]},parse:function(e){var t;e?((0,n.warn)(\"Indexing all PDF objects\"),t=this.indexObjects()):t=this.readXRef(),t.assignXref(this),this.trailer=t;var r=t.get(\"Encrypt\");if((0,o.isDict)(r)){var a=t.get(\"ID\"),i=a&&a.length?a[0]:\"\";r.suppressEncryption=!0,this.encrypt=new l.CipherTransformFactory(r,i,this.pdfManager.password)}if(!(this.root=t.get(\"Root\")))throw new n.FormatError(\"Invalid root reference\")},processXRefTable:function(e){\"tableState\"in this||(this.tableState={entryNum:0,streamPos:e.lexer.stream.pos,parserBuf1:e.buf1,parserBuf2:e.buf2});var t=this.readXRefTable(e);if(!(0,o.isCmd)(t,\"trailer\"))throw new n.FormatError(\"Invalid XRef table: could not find trailer dictionary\");var r=e.getObj();if(!(0,o.isDict)(r)&&r.dict&&(r=r.dict),!(0,o.isDict)(r))throw new n.FormatError(\"Invalid XRef table: could not parse trailer dictionary\");return delete this.tableState,r},readXRefTable:function(e){var t,r=e.lexer.stream,a=this.tableState;for(r.pos=a.streamPos,e.buf1=a.parserBuf1,e.buf2=a.parserBuf2;;){if(!(\"firstEntryNum\"in a&&\"entryCount\"in a)){if((0,o.isCmd)(t=e.getObj(),\"trailer\"))break;a.firstEntryNum=t,a.entryCount=e.getObj()}var i=a.firstEntryNum,s=a.entryCount;if(!Number.isInteger(i)||!Number.isInteger(s))throw new n.FormatError(\"Invalid XRef table: wrong types in subsection header\");for(var c=a.entryNum;c<s;c++){a.streamPos=r.pos,a.entryNum=c,a.parserBuf1=e.buf1,a.parserBuf2=e.buf2;var l={};l.offset=e.getObj(),l.gen=e.getObj();var u=e.getObj();if((0,o.isCmd)(u,\"f\")?l.free=!0:(0,o.isCmd)(u,\"n\")&&(l.uncompressed=!0),!Number.isInteger(l.offset)||!Number.isInteger(l.gen)||!l.free&&!l.uncompressed)throw new n.FormatError(\"Invalid entry in XRef subsection: \"+i+\", \"+s);0===c&&l.free&&1===i&&(i=0),this.entries[c+i]||(this.entries[c+i]=l)}a.entryNum=0,a.streamPos=r.pos,a.parserBuf1=e.buf1,a.parserBuf2=e.buf2,delete a.firstEntryNum,delete a.entryCount}if(this.entries[0]&&!this.entries[0].free)throw new n.FormatError(\"Invalid XRef table: unexpected first object\");return t},processXRefStream:function(e){if(!(\"streamState\"in this)){var t=e.dict,r=t.get(\"W\"),a=t.get(\"Index\");a||(a=[0,t.get(\"Size\")]),this.streamState={entryRanges:a,byteWidths:r,entryNum:0,streamPos:e.pos}}return this.readXRefStream(e),delete this.streamState,e.dict},readXRefStream:function(e){var t,r,a=this.streamState;e.pos=a.streamPos;for(var i=a.byteWidths,o=i[0],s=i[1],c=i[2],l=a.entryRanges;l.length>0;){var u=l[0],h=l[1];if(!Number.isInteger(u)||!Number.isInteger(h))throw new n.FormatError(\"Invalid XRef range fields: \"+u+\", \"+h);if(!Number.isInteger(o)||!Number.isInteger(s)||!Number.isInteger(c))throw new n.FormatError(\"Invalid XRef entry fields length: \"+u+\", \"+h);for(t=a.entryNum;t<h;++t){a.entryNum=t,a.streamPos=e.pos;var f=0,d=0,g=0;for(r=0;r<o;++r)f=f<<8|e.getByte();for(0===o&&(f=1),r=0;r<s;++r)d=d<<8|e.getByte();for(r=0;r<c;++r)g=g<<8|e.getByte();var m={};switch(m.offset=d,m.gen=g,f){case 0:m.free=!0;break;case 1:m.uncompressed=!0;break;case 2:break;default:throw new n.FormatError(\"Invalid XRef entry type: \"+f)}this.entries[u+t]||(this.entries[u+t]=m)}a.entryNum=0,a.streamPos=e.pos,l.splice(0,2)}},indexObjects:function(){var e=10,t=13,r=60;function a(a,i){for(var n=\"\",o=a[i];o!==e&&o!==t&&o!==r&&!(++i>=a.length);)n+=String.fromCharCode(o),o=a[i];return n}function i(e,t,r){for(var a=r.length,i=e.length,n=0;t<i;){for(var o=0;o<a&&e[t+o]===r[o];)++o;if(o>=a)break;t++,n++}return n}var c=/^(\\d+)\\s+(\\d+)\\s+obj\\b/,l=/\\bendobj[\\b\\s]$/,u=/\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/,h=new Uint8Array([116,114,97,105,108,101,114]),f=new Uint8Array([115,116,97,114,116,120,114,101,102]),d=new Uint8Array([111,98,106]),g=new Uint8Array([47,88,82,101,102]);this.entries.length=0;var m=this.stream;m.pos=0;for(var p,b,v,y=m.getBytes(),w=m.start,k=y.length,S=[],C=[];w<k;){var x=y[w];if(9!==x&&x!==e&&x!==t&&32!==x)if(37!==x){var A,_=a(y,w);if(0!==_.indexOf(\"xref\")||4!==_.length&&!/\\s/.test(_[4]))if(A=c.exec(_)){void 0===this.entries[A[1]]&&(this.entries[A[1]]={offset:w-m.start,gen:0|A[2],uncompressed:!0});for(var P=void 0,I=w+_.length;I<y.length;){var T=I+i(y,I,d)+4;P=T-w;var O=Math.max(T-25,I),E=(0,n.bytesToString)(y.subarray(O,T));if(l.test(E))break;var F=u.exec(E);if(F&&F[1]){(0,n.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", caused by missing \"endobj\" -- trying to recover.'),P-=F[1].length;break}I+=P}var R=y.subarray(w,w+P),B=i(R,0,g);B<P&&R[B+5]<64&&(C.push(w-m.start),this.xrefstms[w-m.start]=1),w+=P}else 0!==_.indexOf(\"trailer\")||7!==_.length&&!/\\s/.test(_[7])?w+=_.length+1:(S.push(w),w+=i(y,w,f));else w+=i(y,w,h),S.push(w),w+=i(y,w,f)}else do{if(++w>=k)break;x=y[w]}while(x!==e&&x!==t);else++w}for(p=0,b=C.length;p<b;++p)this.startXRefQueue.push(C[p]),this.readXRef(!0);for(p=0,b=S.length;p<b;++p){m.pos=S[p];var M=new s.Parser(new s.Lexer(m),!0,this,!0),D=M.getObj();if((0,o.isCmd)(D,\"trailer\")&&(v=M.getObj(),(0,o.isDict)(v)&&v.has(\"ID\")))return v}if(v)return v;throw new n.InvalidPDFException(\"Invalid PDF structure\")},readXRef:function(e){var t=this.stream,r=Object.create(null);try{for(;this.startXRefQueue.length;){var a=this.startXRefQueue[0];if(r[a])(0,n.warn)(\"readXRef - skipping XRef table since it was already parsed.\"),this.startXRefQueue.shift();else{r[a]=!0,t.pos=a+t.start;var i,c=new s.Parser(new s.Lexer(t),!0,this),l=c.getObj();if((0,o.isCmd)(l,\"xref\")){if(i=this.processXRefTable(c),this.topDict||(this.topDict=i),l=i.get(\"XRefStm\"),Number.isInteger(l)){var u=l;u in this.xrefstms||(this.xrefstms[u]=1,this.startXRefQueue.push(u))}}else{if(!Number.isInteger(l))throw new n.FormatError(\"Invalid XRef stream header\");if(!Number.isInteger(c.getObj())||!(0,o.isCmd)(c.getObj(),\"obj\")||!(0,o.isStream)(l=c.getObj()))throw new n.FormatError(\"Invalid XRef stream\");if(i=this.processXRefStream(l),this.topDict||(this.topDict=i),!i)throw new n.FormatError(\"Failed to read XRef stream\")}l=i.get(\"Prev\"),Number.isInteger(l)?this.startXRefQueue.push(l):(0,o.isRef)(l)&&this.startXRefQueue.push(l.num),this.startXRefQueue.shift()}}return this.topDict}catch(e){if(e instanceof n.MissingDataException)throw e;(0,n.info)(\"(while reading XRef): \"+e)}if(!e)throw new n.XRefParseException},getEntry:function(e){var t=this.entries[e];return t&&!t.free&&t.offset?t:null},fetchIfRef:function(e,t){return(0,o.isRef)(e)?this.fetch(e,t):e},fetch:function(e,t){if(!(0,o.isRef)(e))throw new Error(\"ref object is not a reference\");var r=e.num;if(r in this.cache){var a=this.cache[r];return a instanceof o.Dict&&!a.objId&&(a.objId=e.toString()),a}var i=this.getEntry(r);return null===i?this.cache[r]=null:(i=i.uncompressed?this.fetchUncompressed(e,i,t):this.fetchCompressed(i,t),(0,o.isDict)(i)?i.objId=e.toString():(0,o.isStream)(i)&&(i.dict.objId=e.toString()),i)},fetchUncompressed:function(e,t,r){var a=e.gen,i=e.num;if(t.gen!==a)throw new n.FormatError(\"inconsistent generation in XRef\");var c=this.stream.makeSubStream(t.offset+this.stream.start),l=new s.Parser(new s.Lexer(c),!0,this),u=l.getObj(),h=l.getObj(),f=l.getObj();if(Number.isInteger(u)||(u=parseInt(u,10)),Number.isInteger(h)||(h=parseInt(h,10)),u!==i||h!==a||!(0,o.isCmd)(f))throw new n.FormatError(\"bad XRef entry\");if(\"obj\"!==f.cmd){if(0===f.cmd.indexOf(\"obj\")&&(i=parseInt(f.cmd.substring(3),10),!Number.isNaN(i)))return i;throw new n.FormatError(\"bad XRef entry\")}return t=this.encrypt&&!r?l.getObj(this.encrypt.createCipherTransform(i,a)):l.getObj(),(0,o.isStream)(t)||(this.cache[i]=t),t},fetchCompressed:function(e,t){var r=e.offset,a=this.fetch(new o.Ref(r,0));if(!(0,o.isStream)(a))throw new n.FormatError(\"bad ObjStm stream\");var i=a.dict.get(\"First\"),c=a.dict.get(\"N\");if(!Number.isInteger(i)||!Number.isInteger(c))throw new n.FormatError(\"invalid first and n parameters for ObjStm stream\");var l=new s.Parser(new s.Lexer(a),!1,this);l.allowStreams=!0;var u,h,f=[],d=[];for(u=0;u<c;++u){if(h=l.getObj(),!Number.isInteger(h))throw new n.FormatError(\"invalid object number in the ObjStm stream: \"+h);d.push(h);var g=l.getObj();if(!Number.isInteger(g))throw new n.FormatError(\"invalid object offset in the ObjStm stream: \"+g)}for(u=0;u<c;++u){f.push(l.getObj()),(0,o.isCmd)(l.buf1,\"endobj\")&&l.shift(),h=d[u];var m=this.entries[h];m&&m.offset===r&&m.gen===u&&(this.cache[h]=f[u])}if(void 0===(e=f[e.gen]))throw new n.FormatError(\"bad XRef entry for compressed object\");return e},fetchIfRefAsync:function(e,t){return(0,o.isRef)(e)?this.fetchAsync(e,t):Promise.resolve(e)},fetchAsync:function(e,t){var r=this.stream.manager,a=this;return new Promise(function i(o,s){try{o(a.fetch(e,t))}catch(e){if(e instanceof n.MissingDataException)return void r.requestRange(e.begin,e.end).then(function(){i(o,s)},s);s(e)}})},getCatalogObj:function(){return this.root}},e}(),d=function(){function e(e,t){(0,n.unreachable)(\"Cannot initialize NameOrNumberTree.\")}return e.prototype={getAll:function(){var e=Object.create(null);if(!this.root)return e;var t=this.xref,r=new o.RefSet;r.put(this.root);for(var a=[this.root];a.length>0;){var i,s,c=t.fetchIfRef(a.shift());if((0,o.isDict)(c))if(c.has(\"Kids\")){var l=c.get(\"Kids\");for(i=0,s=l.length;i<s;i++){var u=l[i];if(r.has(u))throw new n.FormatError('Duplicate entry in \"'+this._type+'\" tree.');a.push(u),r.put(u)}}else{var h=c.get(this._type);if(Array.isArray(h))for(i=0,s=h.length;i<s;i+=2)e[t.fetchIfRef(h[i])]=t.fetchIfRef(h[i+1])}}return e},get:function(e){if(!this.root)return null;for(var t,r,a,i=this.xref,o=i.fetchIfRef(this.root),s=0;o.has(\"Kids\");){if(++s>10)return(0,n.warn)('Search depth limit reached for \"'+this._type+'\" tree.'),null;var c=o.get(\"Kids\");if(!Array.isArray(c))return null;for(t=0,r=c.length-1;t<=r;){a=t+r>>1;var l=i.fetchIfRef(c[a]).get(\"Limits\");if(e<i.fetchIfRef(l[0]))r=a-1;else{if(!(e>i.fetchIfRef(l[1]))){o=i.fetchIfRef(c[a]);break}t=a+1}}if(t>r)return null}var u=o.get(this._type);if(Array.isArray(u))for(t=0,r=u.length-2;t<=r;){a=t+r&-2;var h=i.fetchIfRef(u[a]);if(e<h)r=a-2;else{if(!(e>h))return i.fetchIfRef(u[a+1]);t=a+2}}return null}},e}(),g=function(){function e(e,t){this.root=e,this.xref=t,this._type=\"Names\"}return n.Util.inherit(e,d,{}),e}(),m=function(){function e(e,t){this.root=e,this.xref=t,this._type=\"Nums\"}return n.Util.inherit(e,d,{}),e}(),p=function(){function e(e,t){e&&(0,o.isDict)(e)&&(this.xref=t,this.root=e,e.has(\"FS\")&&(this.fs=e.get(\"FS\")),this.description=e.has(\"Desc\")?(0,n.stringToPDFString)(e.get(\"Desc\")):\"\",e.has(\"RF\")&&(0,n.warn)(\"Related file specifications are not supported\"),this.contentAvailable=!0,e.has(\"EF\")||(this.contentAvailable=!1,(0,n.warn)(\"Non-embedded file specifications are not supported\")))}function t(e){return e.has(\"UF\")?e.get(\"UF\"):e.has(\"F\")?e.get(\"F\"):e.has(\"Unix\")?e.get(\"Unix\"):e.has(\"Mac\")?e.get(\"Mac\"):e.has(\"DOS\")?e.get(\"DOS\"):null}return e.prototype={get filename(){if(!this._filename&&this.root){var e=t(this.root)||\"unnamed\";this._filename=(0,n.stringToPDFString)(e).replace(/\\\\\\\\/g,\"\\\\\").replace(/\\\\\\//g,\"/\").replace(/\\\\/g,\"/\")}return this._filename},get content(){if(!this.contentAvailable)return null;!this.contentRef&&this.root&&(this.contentRef=t(this.root.get(\"EF\")));var e=null;if(this.contentRef){var r=this.xref.fetchIfRef(this.contentRef);r&&(0,o.isStream)(r)?e=r.getBytes():(0,n.warn)(\"Embedded file specification points to non-existing/invalid content\")}else(0,n.warn)(\"Embedded file specification does not have a content\");return e},get serializable(){return{filename:this.filename,content:this.content}}},e}(),b=function(){function e(e){return(0,o.isRef)(e)||(0,o.isDict)(e)||Array.isArray(e)||(0,o.isStream)(e)}function t(t,r){if((0,o.isDict)(t)||(0,o.isStream)(t))for(var a=(0,o.isDict)(t)?t:t.dict,i=a.getKeys(),n=0,s=i.length;n<s;n++){var c=a.getRaw(i[n]);e(c)&&r.push(c)}else if(Array.isArray(t))for(var l=0,u=t.length;l<u;l++){var h=t[l];e(h)&&r.push(h)}}function r(e,t,r){this.dict=e,this.keys=t,this.xref=r,this.refSet=null,this.capability=null}return r.prototype={load:function(){if(this.capability=(0,n.createPromiseCapability)(),!(this.xref.stream instanceof c.ChunkedStream)||0===this.xref.stream.getMissingChunks().length)return this.capability.resolve(),this.capability.promise;var e=this.keys,t=this.dict;this.refSet=new o.RefSet;for(var r=[],a=0,i=e.length;a<i;a++){var s=t.getRaw(e[a]);void 0!==s&&r.push(s)}return this._walk(r),this.capability.promise},_walk:function(e){for(var r=this,a=[],i=[];e.length;){var s=e.pop();if((0,o.isRef)(s)){if(this.refSet.has(s))continue;try{this.refSet.put(s),s=this.xref.fetch(s)}catch(e){if(!(e instanceof n.MissingDataException))throw e;a.push(s),i.push({begin:e.begin,end:e.end})}}if(s&&s.getBaseStreams){for(var c=s.getBaseStreams(),l=!1,u=0,h=c.length;u<h;u++){var f=c[u];f.getMissingChunks&&f.getMissingChunks().length&&(l=!0,i.push({begin:f.start,end:f.end}))}l&&a.push(s)}t(s,e)}i.length?this.xref.stream.manager.requestRanges(i).then(function(){for(var e=0,t=a.length;e<t;e++){var i=a[e];(0,o.isRef)(i)&&r.refSet.remove(i)}r._walk(a)},this.capability.reject):(this.refSet=null,this.capability.resolve())}},r}();t.Catalog=h,t.ObjectLoader=b,t.XRef=f,t.FileSpec=p},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxDecoder=void 0;var a=r(0),i=function(){var e=[[-1,-1],[-1,-1],[7,8],[7,7],[6,6],[6,6],[6,5],[6,5],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2]],t=[[-1,-1],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]],r=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]],i=[[-1,-1],[-1,-1],[12,-2],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]],n=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]],o=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];function s(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||\"function\"!=typeof e.next)throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');this.source=e,this.eof=!1,this.encoding=t.K||0,this.eoline=t.EndOfLine||!1,this.byteAlign=t.EncodedByteAlign||!1,this.columns=t.Columns||1728,this.rows=t.Rows||0;var r=t.EndOfBlock;null==r&&(r=!0),this.eoblock=r,this.black=t.BlackIs1||!1,this.codingLine=new Uint32Array(this.columns+1),this.refLine=new Uint32Array(this.columns+2),this.codingLine[0]=this.columns,this.codingPos=0,this.row=0,this.nextLine2D=this.encoding<0,this.inputBits=0,this.inputBuf=0,this.outputBits=0,this.rowsDone=!1;for(var a=void 0;0===(a=this._lookBits(12));)this._eatBits(1);1===a&&this._eatBits(12),this.encoding>0&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1))}return s.prototype={readNextChar:function(){if(this.eof)return-1;var e=this.refLine,t=this.codingLine,r=this.columns,i=void 0,n=void 0,o=void 0,s=void 0;if(0===this.outputBits){if(this.rowsDone&&(this.eof=!0),this.eof)return-1;this.err=!1;var c=void 0,l=void 0,u=void 0;if(this.nextLine2D){for(s=0;t[s]<r;++s)e[s]=t[s];for(e[s++]=r,e[s]=r,t[0]=0,this.codingPos=0,i=0,n=0;t[this.codingPos]<r;)switch(c=this._getTwoDimCode()){case 0:this._addPixels(e[i+1],n),e[i+1]<r&&(i+=2);break;case 1:if(c=l=0,n){do{c+=u=this._getBlackCode()}while(u>=64);do{l+=u=this._getWhiteCode()}while(u>=64)}else{do{c+=u=this._getWhiteCode()}while(u>=64);do{l+=u=this._getBlackCode()}while(u>=64)}for(this._addPixels(t[this.codingPos]+c,n),t[this.codingPos]<r&&this._addPixels(t[this.codingPos]+l,1^n);e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 7:if(this._addPixels(e[i]+3,n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 5:if(this._addPixels(e[i]+2,n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 3:if(this._addPixels(e[i]+1,n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 2:if(this._addPixels(e[i],n),n^=1,t[this.codingPos]<r)for(++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 8:if(this._addPixelsNeg(e[i]-3,n),n^=1,t[this.codingPos]<r)for(i>0?--i:++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 6:if(this._addPixelsNeg(e[i]-2,n),n^=1,t[this.codingPos]<r)for(i>0?--i:++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case 4:if(this._addPixelsNeg(e[i]-1,n),n^=1,t[this.codingPos]<r)for(i>0?--i:++i;e[i]<=t[this.codingPos]&&e[i]<r;)i+=2;break;case-1:this._addPixels(r,0),this.eof=!0;break;default:(0,a.info)(\"bad 2d code\"),this._addPixels(r,0),this.err=!0}}else for(t[0]=0,this.codingPos=0,n=0;t[this.codingPos]<r;){if(c=0,n)do{c+=u=this._getBlackCode()}while(u>=64);else do{c+=u=this._getWhiteCode()}while(u>=64);this._addPixels(t[this.codingPos]+c,n),n^=1}var h=!1;if(this.byteAlign&&(this.inputBits&=-8),this.eoblock||this.row!==this.rows-1){if(c=this._lookBits(12),this.eoline)for(;-1!==c&&1!==c;)this._eatBits(1),c=this._lookBits(12);else for(;0===c;)this._eatBits(1),c=this._lookBits(12);1===c?(this._eatBits(12),h=!0):-1===c&&(this.eof=!0)}else this.rowsDone=!0;if(!this.eof&&this.encoding>0&&!this.rowsDone&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1)),this.eoblock&&h&&this.byteAlign){if(1===(c=this._lookBits(12))){if(this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1)),this.encoding>=0)for(s=0;s<4;++s)1!==(c=this._lookBits(12))&&(0,a.info)(\"bad rtc code: \"+c),this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1));this.eof=!0}}else if(this.err&&this.eoline){for(;;){if(-1===(c=this._lookBits(13)))return this.eof=!0,-1;if(c>>1==1)break;this._eatBits(1)}this._eatBits(12),this.encoding>0&&(this._eatBits(1),this.nextLine2D=!(1&c))}t[0]>0?this.outputBits=t[this.codingPos=0]:this.outputBits=t[this.codingPos=1],this.row++}var f=void 0;if(this.outputBits>=8)f=1&this.codingPos?0:255,this.outputBits-=8,0===this.outputBits&&t[this.codingPos]<r&&(this.codingPos++,this.outputBits=t[this.codingPos]-t[this.codingPos-1]);else{o=8,f=0;do{this.outputBits>o?(f<<=o,1&this.codingPos||(f|=255>>8-o),this.outputBits-=o,o=0):(f<<=this.outputBits,1&this.codingPos||(f|=255>>8-this.outputBits),o-=this.outputBits,this.outputBits=0,t[this.codingPos]<r?(this.codingPos++,this.outputBits=t[this.codingPos]-t[this.codingPos-1]):o>0&&(f<<=o,o=0))}while(o)}return this.black&&(f^=255),f},_addPixels:function(e,t){var r=this.codingLine,i=this.codingPos;e>r[i]&&(e>this.columns&&((0,a.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&i^t&&++i,r[i]=e),this.codingPos=i},_addPixelsNeg:function(e,t){var r=this.codingLine,i=this.codingPos;if(e>r[i])e>this.columns&&((0,a.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&i^t&&++i,r[i]=e;else if(e<r[i]){for(e<0&&((0,a.info)(\"invalid code\"),this.err=!0,e=0);i>0&&e<r[i-1];)--i;r[i]=e}this.codingPos=i},_findTableCode:function(e,t,r,a){for(var i=a||0,n=e;n<=t;++n){var o=this._lookBits(n);if(-1===o)return[!0,1,!1];if(n<t&&(o<<=t-n),!i||o>=i){var s=r[o-i];if(s[0]===n)return this._eatBits(n),[!0,s[1],!0]}}return[!1,0,!1]},_getTwoDimCode:function(){var t=0,r=void 0;if(this.eoblock){if(t=this._lookBits(7),(r=e[t])&&r[0]>0)return this._eatBits(r[0]),r[1]}else{var i=this._findTableCode(1,7,e);if(i[0]&&i[2])return i[1]}return(0,a.info)(\"Bad two dim code\"),-1},_getWhiteCode:function(){var e=0,i=void 0;if(this.eoblock){if(-1===(e=this._lookBits(12)))return 1;if((i=e>>5==0?t[e]:r[e>>3])[0]>0)return this._eatBits(i[0]),i[1]}else{var n=this._findTableCode(1,9,r);if(n[0])return n[1];if((n=this._findTableCode(11,12,t))[0])return n[1]}return(0,a.info)(\"bad white code\"),this._eatBits(1),1},_getBlackCode:function(){var e=void 0,t=void 0;if(this.eoblock){if(-1===(e=this._lookBits(13)))return 1;if((t=e>>7==0?i[e]:e>>9==0&&e>>7!=0?n[(e>>1)-64]:o[e>>7])[0]>0)return this._eatBits(t[0]),t[1]}else{var r=this._findTableCode(2,6,o);if(r[0])return r[1];if((r=this._findTableCode(7,12,n,64))[0])return r[1];if((r=this._findTableCode(10,13,i))[0])return r[1]}return(0,a.info)(\"bad black code\"),this._eatBits(1),1},_lookBits:function(e){for(var t=void 0;this.inputBits<e;){if(-1===(t=this.source.next()))return 0===this.inputBits?-1:this.inputBuf<<e-this.inputBits&65535>>16-e;this.inputBuf=this.inputBuf<<8|t,this.inputBits+=8}return this.inputBuf>>this.inputBits-e&65535>>16-e},_eatBits:function(e){(this.inputBits-=e)<0&&(this.inputBits=0)}},s}();t.CCITTFaxDecoder=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var a=function(){var e=[{qe:22017,nmps:1,nlps:1,switchFlag:1},{qe:13313,nmps:2,nlps:6,switchFlag:0},{qe:6145,nmps:3,nlps:9,switchFlag:0},{qe:2753,nmps:4,nlps:12,switchFlag:0},{qe:1313,nmps:5,nlps:29,switchFlag:0},{qe:545,nmps:38,nlps:33,switchFlag:0},{qe:22017,nmps:7,nlps:6,switchFlag:1},{qe:21505,nmps:8,nlps:14,switchFlag:0},{qe:18433,nmps:9,nlps:14,switchFlag:0},{qe:14337,nmps:10,nlps:14,switchFlag:0},{qe:12289,nmps:11,nlps:17,switchFlag:0},{qe:9217,nmps:12,nlps:18,switchFlag:0},{qe:7169,nmps:13,nlps:20,switchFlag:0},{qe:5633,nmps:29,nlps:21,switchFlag:0},{qe:22017,nmps:15,nlps:14,switchFlag:1},{qe:21505,nmps:16,nlps:14,switchFlag:0},{qe:20737,nmps:17,nlps:15,switchFlag:0},{qe:18433,nmps:18,nlps:16,switchFlag:0},{qe:14337,nmps:19,nlps:17,switchFlag:0},{qe:13313,nmps:20,nlps:18,switchFlag:0},{qe:12289,nmps:21,nlps:19,switchFlag:0},{qe:10241,nmps:22,nlps:19,switchFlag:0},{qe:9217,nmps:23,nlps:20,switchFlag:0},{qe:8705,nmps:24,nlps:21,switchFlag:0},{qe:7169,nmps:25,nlps:22,switchFlag:0},{qe:6145,nmps:26,nlps:23,switchFlag:0},{qe:5633,nmps:27,nlps:24,switchFlag:0},{qe:5121,nmps:28,nlps:25,switchFlag:0},{qe:4609,nmps:29,nlps:26,switchFlag:0},{qe:4353,nmps:30,nlps:27,switchFlag:0},{qe:2753,nmps:31,nlps:28,switchFlag:0},{qe:2497,nmps:32,nlps:29,switchFlag:0},{qe:2209,nmps:33,nlps:30,switchFlag:0},{qe:1313,nmps:34,nlps:31,switchFlag:0},{qe:1089,nmps:35,nlps:32,switchFlag:0},{qe:673,nmps:36,nlps:33,switchFlag:0},{qe:545,nmps:37,nlps:34,switchFlag:0},{qe:321,nmps:38,nlps:35,switchFlag:0},{qe:273,nmps:39,nlps:36,switchFlag:0},{qe:133,nmps:40,nlps:37,switchFlag:0},{qe:73,nmps:41,nlps:38,switchFlag:0},{qe:37,nmps:42,nlps:39,switchFlag:0},{qe:21,nmps:43,nlps:40,switchFlag:0},{qe:9,nmps:44,nlps:41,switchFlag:0},{qe:5,nmps:45,nlps:42,switchFlag:0},{qe:1,nmps:45,nlps:43,switchFlag:0},{qe:22017,nmps:46,nlps:46,switchFlag:0}];function t(e,t,r){this.data=e,this.bp=t,this.dataEnd=r,this.chigh=e[t],this.clow=0,this.byteIn(),this.chigh=this.chigh<<7&65535|this.clow>>9&127,this.clow=this.clow<<7&65535,this.ct-=7,this.a=32768}return t.prototype={byteIn:function(){var e=this.data,t=this.bp;255===e[t]?e[t+1]>143?(this.clow+=65280,this.ct=8):(t++,this.clow+=e[t]<<9,this.ct=7,this.bp=t):(t++,this.clow+=t<this.dataEnd?e[t]<<8:65280,this.ct=8,this.bp=t);this.clow>65535&&(this.chigh+=this.clow>>16,this.clow&=65535)},readBit:function(t,r){var a,i=t[r]>>1,n=1&t[r],o=e[i],s=o.qe,c=this.a-s;if(this.chigh<s)c<s?(c=s,a=n,i=o.nmps):(c=s,a=1^n,1===o.switchFlag&&(n=a),i=o.nlps);else{if(this.chigh-=s,0!=(32768&c))return this.a=c,n;c<s?(a=1^n,1===o.switchFlag&&(n=a),i=o.nlps):(a=n,i=o.nmps)}do{0===this.ct&&this.byteIn(),c<<=1,this.chigh=this.chigh<<1&65535|this.clow>>15&1,this.clow=this.clow<<1&65535,this.ct--}while(0==(32768&c));return this.a=c,t[r]=i<<1|n,a}},t}();t.ArithmeticDecoder=a},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxImage=void 0;var a=r(0),i=r(66),n=function(){function e(e){this.message=\"JPX error: \"+e}return e.prototype=new Error,e.prototype.name=\"JpxError\",e.constructor=e,e}(),o=function(){var e={LL:0,LH:1,HL:1,HH:2};function t(){this.failOnCorruptedImage=!1}function r(e,t){e.x0=Math.ceil(t.XOsiz/e.XRsiz),e.x1=Math.ceil(t.Xsiz/e.XRsiz),e.y0=Math.ceil(t.YOsiz/e.YRsiz),e.y1=Math.ceil(t.Ysiz/e.YRsiz),e.width=e.x1-e.x0,e.height=e.y1-e.y0}function o(e,t){for(var r,a=e.SIZ,i=[],n=Math.ceil((a.Xsiz-a.XTOsiz)/a.XTsiz),o=Math.ceil((a.Ysiz-a.YTOsiz)/a.YTsiz),s=0;s<o;s++)for(var c=0;c<n;c++)(r={}).tx0=Math.max(a.XTOsiz+c*a.XTsiz,a.XOsiz),r.ty0=Math.max(a.YTOsiz+s*a.YTsiz,a.YOsiz),r.tx1=Math.min(a.XTOsiz+(c+1)*a.XTsiz,a.Xsiz),r.ty1=Math.min(a.YTOsiz+(s+1)*a.YTsiz,a.Ysiz),r.width=r.tx1-r.tx0,r.height=r.ty1-r.ty0,r.components=[],i.push(r);e.tiles=i;for(var l=0,u=a.Csiz;l<u;l++)for(var h=t[l],f=0,d=i.length;f<d;f++){var g={};r=i[f],g.tcx0=Math.ceil(r.tx0/h.XRsiz),g.tcy0=Math.ceil(r.ty0/h.YRsiz),g.tcx1=Math.ceil(r.tx1/h.XRsiz),g.tcy1=Math.ceil(r.ty1/h.YRsiz),g.width=g.tcx1-g.tcx0,g.height=g.tcy1-g.tcy0,r.components[l]=g}}function s(e,t,r){var a=t.codingStyleParameters,i={};return a.entropyCoderWithCustomPrecincts?(i.PPx=a.precinctsSizes[r].PPx,i.PPy=a.precinctsSizes[r].PPy):(i.PPx=15,i.PPy=15),i.xcb_=r>0?Math.min(a.xcb,i.PPx-1):Math.min(a.xcb,i.PPx),i.ycb_=r>0?Math.min(a.ycb,i.PPy-1):Math.min(a.ycb,i.PPy),i}function c(e,t,r){var a=1<<r.PPx,i=1<<r.PPy,n=0===t.resLevel,o=1<<r.PPx+(n?0:-1),s=1<<r.PPy+(n?0:-1),c=t.trx1>t.trx0?Math.ceil(t.trx1/a)-Math.floor(t.trx0/a):0,l=t.try1>t.try0?Math.ceil(t.try1/i)-Math.floor(t.try0/i):0,u=c*l;t.precinctParameters={precinctWidth:a,precinctHeight:i,numprecinctswide:c,numprecinctshigh:l,numprecincts:u,precinctWidthInSubband:o,precinctHeightInSubband:s}}function l(e,t,r){var a,i,n,o,s=r.xcb_,c=r.ycb_,l=1<<s,u=1<<c,h=t.tbx0>>s,f=t.tby0>>c,d=t.tbx1+l-1>>s,g=t.tby1+u-1>>c,m=t.resolution.precinctParameters,p=[],b=[];for(i=f;i<g;i++)for(a=h;a<d;a++){if((n={cbx:a,cby:i,tbx0:l*a,tby0:u*i,tbx1:l*(a+1),tby1:u*(i+1)}).tbx0_=Math.max(t.tbx0,n.tbx0),n.tby0_=Math.max(t.tby0,n.tby0),n.tbx1_=Math.min(t.tbx1,n.tbx1),n.tby1_=Math.min(t.tby1,n.tby1),o=Math.floor((n.tbx0_-t.tbx0)/m.precinctWidthInSubband)+Math.floor((n.tby0_-t.tby0)/m.precinctHeightInSubband)*m.numprecinctswide,n.precinctNumber=o,n.subbandType=t.type,n.Lblock=3,!(n.tbx1_<=n.tbx0_||n.tby1_<=n.tby0_)){p.push(n);var v=b[o];void 0!==v?(a<v.cbxMin?v.cbxMin=a:a>v.cbxMax&&(v.cbxMax=a),i<v.cbyMin?v.cbxMin=i:i>v.cbyMax&&(v.cbyMax=i)):b[o]=v={cbxMin:a,cbyMin:i,cbxMax:a,cbyMax:i},n.precinct=v}}t.codeblockParameters={codeblockWidth:s,codeblockHeight:c,numcodeblockwide:d-h+1,numcodeblockhigh:g-f+1},t.codeblocks=p,t.precincts=b}function u(e,t,r){for(var a=[],i=e.subbands,n=0,o=i.length;n<o;n++)for(var s=i[n].codeblocks,c=0,l=s.length;c<l;c++){var u=s[c];u.precinctNumber===t&&a.push(u)}return{layerNumber:r,codeblocks:a}}function h(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=0,c=0;c<o;c++)s=Math.max(s,a.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,h=0,f=0,d=0;this.nextPacket=function(){for(;l<i;l++){for(;h<=s;h++){for(;f<o;f++){var e=a.components[f];if(!(h>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[h],r=t.precinctParameters.numprecincts;d<r;){var c=u(t,d,l);return d++,c}d=0}}f=0}h=0}throw new n(\"Out of packets\")}}function f(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=0,c=0;c<o;c++)s=Math.max(s,a.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,h=0,f=0,d=0;this.nextPacket=function(){for(;l<=s;l++){for(;h<i;h++){for(;f<o;f++){var e=a.components[f];if(!(l>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[l],r=t.precinctParameters.numprecincts;d<r;){var c=u(t,d,h);return d++,c}d=0}}f=0}h=0}throw new n(\"Out of packets\")}}function d(e){var t,r,a,i,o=e.SIZ,s=e.currentTile.index,c=e.tiles[s],l=c.codingStyleDefaultParameters.layersCount,h=o.Csiz,f=0;for(a=0;a<h;a++){var d=c.components[a];f=Math.max(f,d.codingStyleParameters.decompositionLevelsCount)}var g=new Int32Array(f+1);for(r=0;r<=f;++r){var m=0;for(a=0;a<h;++a){var p=c.components[a].resolutions;r<p.length&&(m=Math.max(m,p[r].precinctParameters.numprecincts))}g[r]=m}t=0,r=0,a=0,i=0,this.nextPacket=function(){for(;r<=f;r++){for(;i<g[r];i++){for(;a<h;a++){var e=c.components[a];if(!(r>e.codingStyleParameters.decompositionLevelsCount)){var o=e.resolutions[r],s=o.precinctParameters.numprecincts;if(!(i>=s)){for(;t<l;){var d=u(o,i,t);return t++,d}t=0}}}a=0}i=0}throw new n(\"Out of packets\")}}function g(e){var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=b(a),c=s,l=0,h=0,f=0,d=0,g=0;this.nextPacket=function(){for(;g<c.maxNumHigh;g++){for(;d<c.maxNumWide;d++){for(;f<o;f++){for(var e=a.components[f],t=e.codingStyleParameters.decompositionLevelsCount;h<=t;h++){var r=e.resolutions[h],m=s.components[f].resolutions[h],b=p(d,g,m,c,r);if(null!==b){for(;l<i;){var v=u(r,b,l);return l++,v}l=0}}h=0}f=0}d=0}throw new n(\"Out of packets\")}}function m(e){var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=b(a),c=0,l=0,h=0,f=0,d=0;this.nextPacket=function(){for(;h<o;++h){for(var e=a.components[h],t=s.components[h],r=e.codingStyleParameters.decompositionLevelsCount;d<t.maxNumHigh;d++){for(;f<t.maxNumWide;f++){for(;l<=r;l++){var g=e.resolutions[l],m=t.resolutions[l],b=p(f,d,m,t,g);if(null!==b){for(;c<i;){var v=u(g,b,c);return c++,v}c=0}}l=0}f=0}d=0}throw new n(\"Out of packets\")}}function p(e,t,r,a,i){var n=e*a.minWidth,o=t*a.minHeight;if(n%r.width!=0||o%r.height!=0)return null;var s=o/r.width*i.precinctParameters.numprecinctswide;return n/r.height+s}function b(e){for(var t=e.components.length,r=Number.MAX_VALUE,a=Number.MAX_VALUE,i=0,n=0,o=new Array(t),s=0;s<t;s++){for(var c=e.components[s],l=c.codingStyleParameters.decompositionLevelsCount,u=new Array(l+1),h=Number.MAX_VALUE,f=Number.MAX_VALUE,d=0,g=0,m=1,p=l;p>=0;--p){var b=c.resolutions[p],v=m*b.precinctParameters.precinctWidth,y=m*b.precinctParameters.precinctHeight;h=Math.min(h,v),f=Math.min(f,y),d=Math.max(d,b.precinctParameters.numprecinctswide),g=Math.max(g,b.precinctParameters.numprecinctshigh),u[p]={width:v,height:y},m<<=1}r=Math.min(r,h),a=Math.min(a,f),i=Math.max(i,d),n=Math.max(n,g),o[s]={resolutions:u,minWidth:h,minHeight:f,maxNumWide:d,maxNumHigh:g}}return{components:o,minWidth:r,minHeight:a,maxNumWide:i,maxNumHigh:n}}function v(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],i=t.Csiz,o=0;o<i;o++){for(var u=a.components[o],p=u.codingStyleParameters.decompositionLevelsCount,b=[],v=[],y=0;y<=p;y++){var w,k=s(0,u,y),S={},C=1<<p-y;if(S.trx0=Math.ceil(u.tcx0/C),S.try0=Math.ceil(u.tcy0/C),S.trx1=Math.ceil(u.tcx1/C),S.try1=Math.ceil(u.tcy1/C),S.resLevel=y,c(0,S,k),b.push(S),0===y)(w={}).type=\"LL\",w.tbx0=Math.ceil(u.tcx0/C),w.tby0=Math.ceil(u.tcy0/C),w.tbx1=Math.ceil(u.tcx1/C),w.tby1=Math.ceil(u.tcy1/C),w.resolution=S,l(0,w,k),v.push(w),S.subbands=[w];else{var x=1<<p-y+1,A=[];(w={}).type=\"HL\",w.tbx0=Math.ceil(u.tcx0/x-.5),w.tby0=Math.ceil(u.tcy0/x),w.tbx1=Math.ceil(u.tcx1/x-.5),w.tby1=Math.ceil(u.tcy1/x),w.resolution=S,l(0,w,k),v.push(w),A.push(w),(w={}).type=\"LH\",w.tbx0=Math.ceil(u.tcx0/x),w.tby0=Math.ceil(u.tcy0/x-.5),w.tbx1=Math.ceil(u.tcx1/x),w.tby1=Math.ceil(u.tcy1/x-.5),w.resolution=S,l(0,w,k),v.push(w),A.push(w),(w={}).type=\"HH\",w.tbx0=Math.ceil(u.tcx0/x-.5),w.tby0=Math.ceil(u.tcy0/x-.5),w.tbx1=Math.ceil(u.tcx1/x-.5),w.tby1=Math.ceil(u.tcy1/x-.5),w.resolution=S,l(0,w,k),v.push(w),A.push(w),S.subbands=A}}u.resolutions=b,u.subbands=v}var _=a.codingStyleDefaultParameters.progressionOrder;switch(_){case 0:a.packetsIterator=new h(e);break;case 1:a.packetsIterator=new f(e);break;case 2:a.packetsIterator=new d(e);break;case 3:a.packetsIterator=new g(e);break;case 4:a.packetsIterator=new m(e);break;default:throw new n(\"Unsupported progression order \"+_)}}function y(e,t,r,i){var n,o=0,s=0,c=!1;function l(e){for(;s<e;){var a=t[r+o];o++,c?(n=n<<7|a,s+=7,c=!1):(n=n<<8|a,s+=8),255===a&&(c=!0)}return n>>>(s-=e)&(1<<e)-1}function u(e){return 255===t[r+o-1]&&t[r+o]===e?(h(1),!0):255===t[r+o]&&t[r+o+1]===e&&(h(2),!0)}function h(e){o+=e}function f(){s=0,c&&(o++,c=!1)}function d(){if(0===l(1))return 1;if(0===l(1))return 2;var e=l(2);return e<3?e+3:(e=l(5))<31?e+6:(e=l(7))+37}for(var g=e.currentTile.index,m=e.tiles[g],p=e.COD.sopMarkerUsed,b=e.COD.ephMarkerUsed,v=m.packetsIterator;o<i;){f(),p&&u(145)&&h(4);var y=v.nextPacket();if(l(1)){for(var w,k=y.layerNumber,S=[],A=0,_=y.codeblocks.length;A<_;A++){var P=(w=y.codeblocks[A]).precinct,I=w.cbx-P.cbxMin,T=w.cby-P.cbyMin,O=!1,E=!1;if(void 0!==w.included)O=!!l(1);else{var F,R;if(void 0!==(P=w.precinct).inclusionTree)F=P.inclusionTree;else{var B=P.cbxMax-P.cbxMin+1,M=P.cbyMax-P.cbyMin+1;F=new x(B,M,k),R=new C(B,M),P.inclusionTree=F,P.zeroBitPlanesTree=R}if(F.reset(I,T,k))for(;;){if(!l(1)){F.incrementValue(k);break}if(!F.nextLevel()){w.included=!0,O=E=!0;break}}}if(O){if(E){for((R=P.zeroBitPlanesTree).reset(I,T);;)if(l(1)){if(!R.nextLevel())break}else R.incrementValue();w.zeroBitPlanes=R.value}for(var D=d();l(1);)w.Lblock++;var L=(0,a.log2)(D),N=l((D<1<<L?L-1:L)+w.Lblock);S.push({codeblock:w,codingpasses:D,dataLength:N})}}for(f(),b&&u(146);S.length>0;){var U=S.shift();void 0===(w=U.codeblock).data&&(w.data=[]),w.data.push({data:t,start:r+o,end:r+o+U.dataLength,codingpasses:U.codingpasses}),o+=U.dataLength}}}return o}function w(e,t,r,a,n,o,s,c){for(var l=a.tbx0,u=a.tby0,h=a.tbx1-a.tbx0,f=a.codeblocks,d=\"H\"===a.type.charAt(0)?1:0,g=\"H\"===a.type.charAt(1)?t:0,m=0,p=f.length;m<p;++m){var b=f[m],v=b.tbx1_-b.tbx0_,y=b.tby1_-b.tby0_;if(0!==v&&0!==y&&void 0!==b.data){var w,k;w=new A(v,y,b.subbandType,b.zeroBitPlanes,o),k=2;var S,C,x,_=b.data,P=0,I=0;for(S=0,C=_.length;S<C;S++)P+=(x=_[S]).end-x.start,I+=x.codingpasses;var T=new Uint8Array(P),O=0;for(S=0,C=_.length;S<C;S++){var E=(x=_[S]).data.subarray(x.start,x.end);T.set(E,O),O+=E.length}var F=new i.ArithmeticDecoder(T,0,P);for(w.setDecoder(F),S=0;S<I;S++){switch(k){case 0:w.runSignificancePropagationPass();break;case 1:w.runMagnitudeRefinementPass();break;case 2:w.runCleanupPass(),c&&w.checkSegmentationSymbol()}k=(k+1)%3}var R,B,M,D=b.tbx0_-l+(b.tby0_-u)*h,L=w.coefficentsSign,N=w.coefficentsMagnitude,U=w.bitsDecoded,q=s?0:.5;O=0;var j=\"LL\"!==a.type;for(S=0;S<y;S++){var z=2*(D/h|0)*(t-h)+d+g;for(R=0;R<v;R++){if(0!==(B=N[O])){B=(B+q)*n,0!==L[O]&&(B=-B),M=U[O];var H=j?z+(D<<1):D;e[H]=s&&M>=o?B:B*(1<<o-M)}D++,O++}D+=h-v}}}}function k(t,r,a){for(var i=r.components[a],n=i.codingStyleParameters,o=i.quantizationParameters,s=n.decompositionLevelsCount,c=o.SPqcds,l=o.scalarExpounded,u=o.guardBits,h=n.segmentationSymbolUsed,f=t.components[a].precision,d=n.reversibleTransformation,g=d?new I:new P,m=[],p=0,b=0;b<=s;b++){for(var v=i.resolutions[b],y=v.trx1-v.trx0,k=v.try1-v.try0,S=new Float32Array(y*k),C=0,x=v.subbands.length;C<x;C++){var A,_;l?(A=c[p].mu,_=c[p].epsilon,p++):(A=c[0].mu,_=c[0].epsilon+(b>0?1-b:0));var T=v.subbands[C],O=e[T.type];w(S,y,0,T,d?1:Math.pow(2,f+O-_)*(1+A/2048),u+_-1,d,h)}m.push({width:y,height:k,items:S})}var E=g.calculate(m,i.tcx0,i.tcy0);return{left:i.tcx0,top:i.tcy0,width:E.width,height:E.height,items:E.items}}function S(e,t){for(var r=e.SIZ.Csiz,a=e.tiles[t],i=0;i<r;i++){var n=a.components[i],o=void 0!==e.currentTile.QCC[i]?e.currentTile.QCC[i]:e.currentTile.QCD;n.quantizationParameters=o;var s=void 0!==e.currentTile.COC[i]?e.currentTile.COC[i]:e.currentTile.COD;n.codingStyleParameters=s}a.codingStyleDefaultParameters=e.currentTile.COD}t.prototype={parse:function(e){if(65359!==(0,a.readUint16)(e,0))for(var t=0,r=e.length;t<r;){var i=8,o=(0,a.readUint32)(e,t),s=(0,a.readUint32)(e,t+4);if(t+=i,1===o&&(o=4294967296*(0,a.readUint32)(e,t)+(0,a.readUint32)(e,t+4),t+=8,i+=8),0===o&&(o=r-t+i),o<i)throw new n(\"Invalid box field size\");var c=o-i,l=!0;switch(s){case 1785737832:l=!1;break;case 1668246642:var u=e[t];if(1===u){var h=(0,a.readUint32)(e,t+3);switch(h){case 16:case 17:case 18:break;default:(0,a.warn)(\"Unknown colorspace \"+h)}}else 2===u&&(0,a.info)(\"ICC profile not supported\");break;case 1785737827:this.parseCodestream(e,t,t+c);break;case 1783636e3:218793738!==(0,a.readUint32)(e,t)&&(0,a.warn)(\"Invalid JP2 signature\");break;case 1783634458:case 1718909296:case 1920099697:case 1919251232:case 1768449138:break;default:var f=String.fromCharCode(s>>24&255,s>>16&255,s>>8&255,255&s);(0,a.warn)(\"Unsupported header type \"+s+\" (\"+f+\")\")}l&&(t+=c)}else this.parseCodestream(e,0,e.length)},parseImageProperties:function(e){for(var t=e.getByte();t>=0;){if(65361===(t<<8|(t=e.getByte()))){e.skip(4);var r=e.getInt32()>>>0,a=e.getInt32()>>>0,i=e.getInt32()>>>0,o=e.getInt32()>>>0;e.skip(16);var s=e.getUint16();return this.width=r-i,this.height=a-o,this.componentsCount=s,void(this.bitsPerComponent=8)}}throw new n(\"No size marker found in JPX stream\")},parseCodestream:function(e,t,i){var s={},c=!1;try{for(var l=t;l+1<i;){var u=(0,a.readUint16)(e,l);l+=2;var h,f,d,g,m,p,b=0;switch(u){case 65359:s.mainHeader=!0;break;case 65497:break;case 65361:b=(0,a.readUint16)(e,l);var w={};w.Xsiz=(0,a.readUint32)(e,l+4),w.Ysiz=(0,a.readUint32)(e,l+8),w.XOsiz=(0,a.readUint32)(e,l+12),w.YOsiz=(0,a.readUint32)(e,l+16),w.XTsiz=(0,a.readUint32)(e,l+20),w.YTsiz=(0,a.readUint32)(e,l+24),w.XTOsiz=(0,a.readUint32)(e,l+28),w.YTOsiz=(0,a.readUint32)(e,l+32);var C=(0,a.readUint16)(e,l+36);w.Csiz=C;var x=[];h=l+38;for(var A=0;A<C;A++){var _={precision:1+(127&e[h]),isSigned:!!(128&e[h]),XRsiz:e[h+1],YRsiz:e[h+2]};h+=3,r(_,w),x.push(_)}s.SIZ=w,s.components=x,o(s,x),s.QCC=[],s.COC=[];break;case 65372:b=(0,a.readUint16)(e,l);var P={};switch(h=l+2,31&(f=e[h++])){case 0:g=8,m=!0;break;case 1:g=16,m=!1;break;case 2:g=16,m=!0;break;default:throw new Error(\"Invalid SQcd value \"+f)}for(P.noQuantization=8===g,P.scalarExpounded=m,P.guardBits=f>>5,d=[];h<b+l;){var I={};8===g?(I.epsilon=e[h++]>>3,I.mu=0):(I.epsilon=e[h]>>3,I.mu=(7&e[h])<<8|e[h+1],h+=2),d.push(I)}P.SPqcds=d,s.mainHeader?s.QCD=P:(s.currentTile.QCD=P,s.currentTile.QCC=[]);break;case 65373:b=(0,a.readUint16)(e,l);var T,O={};switch(h=l+2,s.SIZ.Csiz<257?T=e[h++]:(T=(0,a.readUint16)(e,h),h+=2),31&(f=e[h++])){case 0:g=8,m=!0;break;case 1:g=16,m=!1;break;case 2:g=16,m=!0;break;default:throw new Error(\"Invalid SQcd value \"+f)}for(O.noQuantization=8===g,O.scalarExpounded=m,O.guardBits=f>>5,d=[];h<b+l;)I={},8===g?(I.epsilon=e[h++]>>3,I.mu=0):(I.epsilon=e[h]>>3,I.mu=(7&e[h])<<8|e[h+1],h+=2),d.push(I);O.SPqcds=d,s.mainHeader?s.QCC[T]=O:s.currentTile.QCC[T]=O;break;case 65362:b=(0,a.readUint16)(e,l);var E={};h=l+2;var F=e[h++];E.entropyCoderWithCustomPrecincts=!!(1&F),E.sopMarkerUsed=!!(2&F),E.ephMarkerUsed=!!(4&F),E.progressionOrder=e[h++],E.layersCount=(0,a.readUint16)(e,h),h+=2,E.multipleComponentTransform=e[h++],E.decompositionLevelsCount=e[h++],E.xcb=2+(15&e[h++]),E.ycb=2+(15&e[h++]);var R=e[h++];if(E.selectiveArithmeticCodingBypass=!!(1&R),E.resetContextProbabilities=!!(2&R),E.terminationOnEachCodingPass=!!(4&R),E.verticalyStripe=!!(8&R),E.predictableTermination=!!(16&R),E.segmentationSymbolUsed=!!(32&R),E.reversibleTransformation=e[h++],E.entropyCoderWithCustomPrecincts){for(var B=[];h<b+l;){var M=e[h++];B.push({PPx:15&M,PPy:M>>4})}E.precinctsSizes=B}var D=[];if(E.selectiveArithmeticCodingBypass&&D.push(\"selectiveArithmeticCodingBypass\"),E.resetContextProbabilities&&D.push(\"resetContextProbabilities\"),E.terminationOnEachCodingPass&&D.push(\"terminationOnEachCodingPass\"),E.verticalyStripe&&D.push(\"verticalyStripe\"),E.predictableTermination&&D.push(\"predictableTermination\"),D.length>0)throw c=!0,new Error(\"Unsupported COD options (\"+D.join(\", \")+\")\");s.mainHeader?s.COD=E:(s.currentTile.COD=E,s.currentTile.COC=[]);break;case 65424:b=(0,a.readUint16)(e,l),(p={}).index=(0,a.readUint16)(e,l+2),p.length=(0,a.readUint32)(e,l+4),p.dataEnd=p.length+l-2,p.partIndex=e[l+8],p.partsCount=e[l+9],s.mainHeader=!1,0===p.partIndex&&(p.COD=s.COD,p.COC=s.COC.slice(0),p.QCD=s.QCD,p.QCC=s.QCC.slice(0)),s.currentTile=p;break;case 65427:0===(p=s.currentTile).partIndex&&(S(s,p.index),v(s)),y(s,e,l,b=p.dataEnd-l);break;case 65365:case 65367:case 65368:case 65380:b=(0,a.readUint16)(e,l);break;case 65363:throw new Error(\"Codestream code 0xFF53 (COC) is not implemented\");default:throw new Error(\"Unknown codestream code: \"+u.toString(16))}l+=b}}catch(e){if(c||this.failOnCorruptedImage)throw new n(e.message);(0,a.warn)(\"JPX: Trying to recover from: \"+e.message)}this.tiles=function(e){for(var t=e.SIZ,r=e.components,a=t.Csiz,i=[],n=0,o=e.tiles.length;n<o;n++){var s,c=e.tiles[n],l=[];for(s=0;s<a;s++)l[s]=k(e,c,s);var u,h,f,d,g,m,p,b=l[0],v=new Uint8ClampedArray(b.items.length*a),y={left:b.left,top:b.top,width:b.width,height:b.height,items:v},w=0;if(c.codingStyleDefaultParameters.multipleComponentTransform){var S=4===a,C=l[0].items,x=l[1].items,A=l[2].items,_=S?l[3].items:null;u=r[0].precision-8,h=.5+(128<<u);var P=c.components[0],I=a-3;if(d=C.length,P.codingStyleParameters.reversibleTransformation)for(f=0;f<d;f++,w+=I){g=C[f]+h,m=x[f],p=A[f];var T=g-(p+m>>2);v[w++]=T+p>>u,v[w++]=T>>u,v[w++]=T+m>>u}else for(f=0;f<d;f++,w+=I)g=C[f]+h,m=x[f],p=A[f],v[w++]=g+1.402*p>>u,v[w++]=g-.34413*m-.71414*p>>u,v[w++]=g+1.772*m>>u;if(S)for(f=0,w=3;f<d;f++,w+=4)v[w]=_[f]+h>>u}else for(s=0;s<a;s++){var O=l[s].items;for(u=r[s].precision-8,h=.5+(128<<u),w=s,f=0,d=O.length;f<d;f++)v[w]=O[f]+h>>u,w+=a}i.push(y)}return i}(s),this.width=s.SIZ.Xsiz-s.SIZ.XOsiz,this.height=s.SIZ.Ysiz-s.SIZ.YOsiz,this.componentsCount=s.SIZ.Csiz}};var C=function(){function e(e,t){var r=(0,a.log2)(Math.max(e,t))+1;this.levels=[];for(var i=0;i<r;i++){var n={width:e,height:t,items:[]};this.levels.push(n),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t){for(var r,a=0,i=0;a<this.levels.length;){var n=e+t*(r=this.levels[a]).width;if(void 0!==r.items[n]){i=r.items[n];break}r.index=n,e>>=1,t>>=1,a++}a--,(r=this.levels[a]).items[r.index]=i,this.currentLevel=a,delete this.value},incrementValue:function(){var e=this.levels[this.currentLevel];e.items[e.index]++},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];return--e<0?(this.value=r,!1):(this.currentLevel=e,(t=this.levels[e]).items[t.index]=r,!0)}},e}(),x=function(){function e(e,t,r){var i=(0,a.log2)(Math.max(e,t))+1;this.levels=[];for(var n=0;n<i;n++){for(var o=new Uint8Array(e*t),s=0,c=o.length;s<c;s++)o[s]=r;var l={width:e,height:t,items:o};this.levels.push(l),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t,r){for(var a=0;a<this.levels.length;){var i=this.levels[a],n=e+t*i.width;i.index=n;var o=i.items[n];if(255===o)break;if(o>r)return this.currentLevel=a,this.propagateValues(),!1;e>>=1,t>>=1,a++}return this.currentLevel=a-1,!0},incrementValue:function(e){var t=this.levels[this.currentLevel];t.items[t.index]=e+1,this.propagateValues()},propagateValues:function(){for(var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];--e>=0;)(t=this.levels[e]).items[t.index]=r},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];return t.items[t.index]=255,!(--e<0)&&(this.currentLevel=e,(t=this.levels[e]).items[t.index]=r,!0)}},e}(),A=function(){var e=new Uint8Array([0,5,8,0,3,7,8,0,4,7,8,0,0,0,0,0,1,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8]),t=new Uint8Array([0,3,4,0,5,7,7,0,8,8,8,0,0,0,0,0,1,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8]),r=new Uint8Array([0,1,2,0,1,2,2,0,2,2,2,0,0,0,0,0,3,4,5,0,4,5,5,0,5,5,5,0,0,0,0,0,6,7,7,0,7,7,7,0,7,7,7,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8]);function a(a,i,n,o,s){this.width=a,this.height=i,this.contextLabelTable=\"HH\"===n?r:\"HL\"===n?t:e;var c=a*i;this.neighborsSignificance=new Uint8Array(c),this.coefficentsSign=new Uint8Array(c),this.coefficentsMagnitude=s>14?new Uint32Array(c):s>6?new Uint16Array(c):new Uint8Array(c),this.processingFlags=new Uint8Array(c);var l=new Uint8Array(c);if(0!==o)for(var u=0;u<c;u++)l[u]=o;this.bitsDecoded=l,this.reset()}return a.prototype={setDecoder:function(e){this.decoder=e},reset:function(){this.contexts=new Int8Array(19),this.contexts[0]=8,this.contexts[17]=92,this.contexts[18]=6},setNeighborsSignificance:function(e,t,r){var a,i=this.neighborsSignificance,n=this.width,o=this.height,s=t>0,c=t+1<n;e>0&&(a=r-n,s&&(i[a-1]+=16),c&&(i[a+1]+=16),i[a]+=4),e+1<o&&(a=r+n,s&&(i[a-1]+=16),c&&(i[a+1]+=16),i[a]+=4),s&&(i[r-1]+=1),c&&(i[r+1]+=1),i[r]|=128},runSignificancePropagationPass:function(){for(var e=this.decoder,t=this.width,r=this.height,a=this.coefficentsMagnitude,i=this.coefficentsSign,n=this.neighborsSignificance,o=this.processingFlags,s=this.contexts,c=this.contextLabelTable,l=this.bitsDecoded,u=0;u<r;u+=4)for(var h=0;h<t;h++)for(var f=u*t+h,d=0;d<4;d++,f+=t){var g=u+d;if(g>=r)break;if(o[f]&=-2,!a[f]&&n[f]){var m=c[n[f]];if(e.readBit(s,m)){var p=this.decodeSignBit(g,h,f);i[f]=p,a[f]=1,this.setNeighborsSignificance(g,h,f),o[f]|=2}l[f]++,o[f]|=1}}},decodeSignBit:function(e,t,r){var a,i,n,o,s,c,l=this.width,u=this.height,h=this.coefficentsMagnitude,f=this.coefficentsSign;o=t>0&&0!==h[r-1],t+1<l&&0!==h[r+1]?(n=f[r+1],a=o?1-n-(i=f[r-1]):1-n-n):a=o?1-(i=f[r-1])-i:0;var d=3*a;return o=e>0&&0!==h[r-l],e+1<u&&0!==h[r+l]?(n=f[r+l],a=o?1-n-(i=f[r-l])+d:1-n-n+d):a=o?1-(i=f[r-l])-i+d:d,a>=0?(s=9+a,c=this.decoder.readBit(this.contexts,s)):(s=9-a,c=1^this.decoder.readBit(this.contexts,s)),c},runMagnitudeRefinementPass:function(){for(var e,t=this.decoder,r=this.width,a=this.height,i=this.coefficentsMagnitude,n=this.neighborsSignificance,o=this.contexts,s=this.bitsDecoded,c=this.processingFlags,l=r*a,u=4*r,h=0;h<l;h=e){e=Math.min(l,h+u);for(var f=0;f<r;f++)for(var d=h+f;d<e;d+=r)if(i[d]&&0==(1&c[d])){var g=16;if(0!=(2&c[d]))c[d]^=2,g=0===(127&n[d])?15:14;var m=t.readBit(o,g);i[d]=i[d]<<1|m,s[d]++,c[d]|=1}}},runCleanupPass:function(){for(var e,t=this.decoder,r=this.width,a=this.height,i=this.neighborsSignificance,n=this.coefficentsMagnitude,o=this.coefficentsSign,s=this.contexts,c=this.contextLabelTable,l=this.bitsDecoded,u=this.processingFlags,h=r,f=2*r,d=3*r,g=0;g<a;g=e){e=Math.min(g+4,a);for(var m=g*r,p=g+3<a,b=0;b<r;b++){var v,y=m+b,w=0,k=y,S=g;if(p&&0===u[y]&&0===u[y+h]&&0===u[y+f]&&0===u[y+d]&&0===i[y]&&0===i[y+h]&&0===i[y+f]&&0===i[y+d]){if(!t.readBit(s,18)){l[y]++,l[y+h]++,l[y+f]++,l[y+d]++;continue}0!==(w=t.readBit(s,17)<<1|t.readBit(s,17))&&(S=g+w,k+=w*r),v=this.decodeSignBit(S,b,k),o[k]=v,n[k]=1,this.setNeighborsSignificance(S,b,k),u[k]|=2,k=y;for(var C=g;C<=S;C++,k+=r)l[k]++;w++}for(S=g+w;S<e;S++,k+=r)if(!n[k]&&0==(1&u[k])){var x=c[i[k]];1===t.readBit(s,x)&&(v=this.decodeSignBit(S,b,k),o[k]=v,n[k]=1,this.setNeighborsSignificance(S,b,k),u[k]|=2),l[k]++}}}},checkSegmentationSymbol:function(){var e=this.decoder,t=this.contexts;if(10!==(e.readBit(t,17)<<3|e.readBit(t,17)<<2|e.readBit(t,17)<<1|e.readBit(t,17)))throw new n(\"Invalid segmentation symbol\")}},a}(),_=function(){function e(){}return e.prototype.calculate=function(e,t,r){for(var a=e[0],i=1,n=e.length;i<n;i++)a=this.iterate(a,e[i],t,r);return a},e.prototype.extend=function(e,t,r){var a=t-1,i=t+1,n=t+r-2,o=t+r;e[a--]=e[i++],e[o++]=e[n--],e[a--]=e[i++],e[o++]=e[n--],e[a--]=e[i++],e[o++]=e[n--],e[a]=e[i],e[o]=e[n]},e.prototype.iterate=function(e,t,r,a){var i,n,o,s,c,l,u=e.width,h=e.height,f=e.items,d=t.width,g=t.height,m=t.items;for(o=0,i=0;i<h;i++)for(s=2*i*d,n=0;n<u;n++,o++,s+=2)m[s]=f[o];f=e.items=null;var p=new Float32Array(d+8);if(1===d){if(0!=(1&r))for(l=0,o=0;l<g;l++,o+=d)m[o]*=.5}else for(l=0,o=0;l<g;l++,o+=d)p.set(m.subarray(o,o+d),4),this.extend(p,4,d),this.filter(p,4,d),m.set(p.subarray(4,4+d),o);var b=16,v=[];for(i=0;i<b;i++)v.push(new Float32Array(g+8));var y,w=0;if(e=4+g,1===g){if(0!=(1&a))for(c=0;c<d;c++)m[c]*=.5}else for(c=0;c<d;c++){if(0===w){for(b=Math.min(d-c,b),o=c,s=4;s<e;o+=d,s++)for(y=0;y<b;y++)v[y][s]=m[o+y];w=b}var k=v[--w];if(this.extend(k,4,g),this.filter(k,4,g),0===w)for(o=c-b+1,s=4;s<e;o+=d,s++)for(y=0;y<b;y++)m[o+y]=v[y][s]}return{width:d,height:g,items:m}},e}(),P=function(){function e(){_.call(this)}return e.prototype=Object.create(_.prototype),e.prototype.filter=function(e,t,r){var a,i,n,o,s=r>>1,c=-1.586134342059924,l=-.052980118572961,u=.882911075530934,h=.443506852043971,f=1.230174104914001;for(a=(t|=0)-3,i=s+4;i--;a+=2)e[a]*=.8128930661159609;for(n=h*e[(a=t-2)-1],i=s+3;i--&&(o=h*e[a+1],e[a]=f*e[a]-n-o,i--);a+=2)n=h*e[(a+=2)+1],e[a]=f*e[a]-n-o;for(n=u*e[(a=t-1)-1],i=s+2;i--&&(o=u*e[a+1],e[a]-=n+o,i--);a+=2)n=u*e[(a+=2)+1],e[a]-=n+o;for(n=l*e[(a=t)-1],i=s+1;i--&&(o=l*e[a+1],e[a]-=n+o,i--);a+=2)n=l*e[(a+=2)+1],e[a]-=n+o;if(0!==s)for(n=c*e[(a=t+1)-1],i=s;i--&&(o=c*e[a+1],e[a]-=n+o,i--);a+=2)n=c*e[(a+=2)+1],e[a]-=n+o},e}(),I=function(){function e(){_.call(this)}return e.prototype=Object.create(_.prototype),e.prototype.filter=function(e,t,r){var a,i,n=r>>1;for(a=t|=0,i=n+1;i--;a+=2)e[a]-=e[a-1]+e[a+1]+2>>2;for(a=t+1,i=n;i--;a+=2)e[a]+=e[a-1]+e[a+1]>>1},e}();return t}();t.JpxImage=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.calculateSHA512=t.calculateSHA384=t.calculateSHA256=t.calculateMD5=t.PDF20=t.PDF17=t.CipherTransformFactory=t.ARCFourCipher=t.AES256Cipher=t.AES128Cipher=void 0;var a,i,n=r(0),o=r(1),s=r(2),c=function(){function e(e){this.a=0,this.b=0;var t,r,a=new Uint8Array(256),i=0,n=e.length;for(t=0;t<256;++t)a[t]=t;for(t=0;t<256;++t)i=i+(r=a[t])+e[t%n]&255,a[t]=a[i],a[i]=r;this.s=a}return e.prototype={encryptBlock:function(e){var t,r,a,i=e.length,n=this.a,o=this.b,s=this.s,c=new Uint8Array(i);for(t=0;t<i;++t)a=s[o=o+(r=s[n=n+1&255])&255],s[n]=a,s[o]=r,c[t]=e[t]^s[r+a&255];return this.a=n,this.b=o,c}},e.prototype.decryptBlock=e.prototype.encryptBlock,e}(),l=(a=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),i=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]),function(e,t,r){var n,o,s,c=1732584193,l=-271733879,u=-1732584194,h=271733878,f=r+72&-64,d=new Uint8Array(f);for(n=0;n<r;++n)d[n]=e[t++];for(d[n++]=128,s=f-8;n<s;)d[n++]=0;d[n++]=r<<3&255,d[n++]=r>>5&255,d[n++]=r>>13&255,d[n++]=r>>21&255,d[n++]=r>>>29&255,d[n++]=0,d[n++]=0,d[n++]=0;var g=new Int32Array(16);for(n=0;n<f;){for(o=0;o<16;++o,n+=4)g[o]=d[n]|d[n+1]<<8|d[n+2]<<16|d[n+3]<<24;var m,p,b=c,v=l,y=u,w=h;for(o=0;o<64;++o){o<16?(m=v&y|~v&w,p=o):o<32?(m=w&v|~w&y,p=5*o+1&15):o<48?(m=v^y^w,p=3*o+5&15):(m=y^(v|~w),p=7*o&15);var k=w,S=b+m+i[o]+g[p]|0,C=a[o];w=y,y=v,v=v+(S<<C|S>>>32-C)|0,b=k}c=c+b|0,l=l+v|0,u=u+y|0,h=h+w|0}return new Uint8Array([255&c,c>>8&255,c>>16&255,c>>>24&255,255&l,l>>8&255,l>>16&255,l>>>24&255,255&u,u>>8&255,u>>16&255,u>>>24&255,255&h,h>>8&255,h>>16&255,h>>>24&255])}),u=function(){function e(e,t){this.high=0|e,this.low=0|t}return e.prototype={and:function(e){this.high&=e.high,this.low&=e.low},xor:function(e){this.high^=e.high,this.low^=e.low},or:function(e){this.high|=e.high,this.low|=e.low},shiftRight:function(e){e>=32?(this.low=this.high>>>e-32|0,this.high=0):(this.low=this.low>>>e|this.high<<32-e,this.high=this.high>>>e|0)},shiftLeft:function(e){e>=32?(this.high=this.low<<e-32,this.low=0):(this.high=this.high<<e|this.low>>>32-e,this.low=this.low<<e)},rotateRight:function(e){var t,r;32&e?(r=this.low,t=this.high):(t=this.low,r=this.high),e&=31,this.low=t>>>e|r<<32-e,this.high=r>>>e|t<<32-e},not:function(){this.high=~this.high,this.low=~this.low},add:function(e){var t=(this.low>>>0)+(e.low>>>0),r=(this.high>>>0)+(e.high>>>0);t>4294967295&&(r+=1),this.low=0|t,this.high=0|r},copyTo:function(e,t){e[t]=this.high>>>24&255,e[t+1]=this.high>>16&255,e[t+2]=this.high>>8&255,e[t+3]=255&this.high,e[t+4]=this.low>>>24&255,e[t+5]=this.low>>16&255,e[t+6]=this.low>>8&255,e[t+7]=255&this.low},assign:function(e){this.high=e.high,this.low=e.low}},e}(),h=function(){function e(e,t){return e>>>t|e<<32-t}function t(e,t,r){return e&t^~e&r}function r(e,t,r){return e&t^e&r^t&r}function a(t){return e(t,2)^e(t,13)^e(t,22)}function i(t){return e(t,6)^e(t,11)^e(t,25)}function n(t){return e(t,7)^e(t,18)^t>>>3}var o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];return function(s,c,l){var u,h,f,d=1779033703,g=3144134277,m=1013904242,p=2773480762,b=1359893119,v=2600822924,y=528734635,w=1541459225,k=64*Math.ceil((l+9)/64),S=new Uint8Array(k);for(u=0;u<l;++u)S[u]=s[c++];for(S[u++]=128,f=k-8;u<f;)S[u++]=0;S[u++]=0,S[u++]=0,S[u++]=0,S[u++]=l>>>29&255,S[u++]=l>>21&255,S[u++]=l>>13&255,S[u++]=l>>5&255,S[u++]=l<<3&255;var C,x=new Uint32Array(64);for(u=0;u<k;){for(h=0;h<16;++h)x[h]=S[u]<<24|S[u+1]<<16|S[u+2]<<8|S[u+3],u+=4;for(h=16;h<64;++h)x[h]=0|(e(C=x[h-2],17)^e(C,19)^C>>>10)+x[h-7]+n(x[h-15])+x[h-16];var A,_,P=d,I=g,T=m,O=p,E=b,F=v,R=y,B=w;for(h=0;h<64;++h)A=B+i(E)+t(E,F,R)+o[h]+x[h],_=a(P)+r(P,I,T),B=R,R=F,F=E,E=O+A|0,O=T,T=I,I=P,P=A+_|0;d=d+P|0,g=g+I|0,m=m+T|0,p=p+O|0,b=b+E|0,v=v+F|0,y=y+R|0,w=w+B|0}return new Uint8Array([d>>24&255,d>>16&255,d>>8&255,255&d,g>>24&255,g>>16&255,g>>8&255,255&g,m>>24&255,m>>16&255,m>>8&255,255&m,p>>24&255,p>>16&255,p>>8&255,255&p,b>>24&255,b>>16&255,b>>8&255,255&b,v>>24&255,v>>16&255,v>>8&255,255&v,y>>24&255,y>>16&255,y>>8&255,255&y,w>>24&255,w>>16&255,w>>8&255,255&w])}}(),f=function(){function e(e,t,r,a,i){e.assign(t),e.and(r),i.assign(t),i.not(),i.and(a),e.xor(i)}function t(e,t,r,a,i){e.assign(t),e.and(r),i.assign(t),i.and(a),e.xor(i),i.assign(r),i.and(a),e.xor(i)}function r(e,t,r){e.assign(t),e.rotateRight(28),r.assign(t),r.rotateRight(34),e.xor(r),r.assign(t),r.rotateRight(39),e.xor(r)}function a(e,t,r){e.assign(t),e.rotateRight(14),r.assign(t),r.rotateRight(18),e.xor(r),r.assign(t),r.rotateRight(41),e.xor(r)}function i(e,t,r){e.assign(t),e.rotateRight(1),r.assign(t),r.rotateRight(8),e.xor(r),r.assign(t),r.shiftRight(7),e.xor(r)}function n(e,t,r){e.assign(t),e.rotateRight(19),r.assign(t),r.rotateRight(61),e.xor(r),r.assign(t),r.shiftRight(6),e.xor(r)}var o=[new u(1116352408,3609767458),new u(1899447441,602891725),new u(3049323471,3964484399),new u(3921009573,2173295548),new u(961987163,4081628472),new u(1508970993,3053834265),new u(2453635748,2937671579),new u(2870763221,3664609560),new u(3624381080,2734883394),new u(310598401,1164996542),new u(607225278,1323610764),new u(1426881987,3590304994),new u(1925078388,4068182383),new u(2162078206,991336113),new u(2614888103,633803317),new u(3248222580,3479774868),new u(3835390401,2666613458),new u(4022224774,944711139),new u(264347078,2341262773),new u(604807628,2007800933),new u(770255983,1495990901),new u(1249150122,1856431235),new u(1555081692,3175218132),new u(1996064986,2198950837),new u(2554220882,3999719339),new u(2821834349,766784016),new u(2952996808,2566594879),new u(3210313671,3203337956),new u(3336571891,1034457026),new u(3584528711,2466948901),new u(113926993,3758326383),new u(338241895,168717936),new u(666307205,1188179964),new u(773529912,1546045734),new u(1294757372,1522805485),new u(1396182291,2643833823),new u(1695183700,2343527390),new u(1986661051,1014477480),new u(2177026350,1206759142),new u(2456956037,344077627),new u(2730485921,1290863460),new u(2820302411,3158454273),new u(3259730800,3505952657),new u(3345764771,106217008),new u(3516065817,3606008344),new u(3600352804,1432725776),new u(4094571909,1467031594),new u(275423344,851169720),new u(430227734,3100823752),new u(506948616,1363258195),new u(659060556,3750685593),new u(883997877,3785050280),new u(958139571,3318307427),new u(1322822218,3812723403),new u(1537002063,2003034995),new u(1747873779,3602036899),new u(1955562222,1575990012),new u(2024104815,1125592928),new u(2227730452,2716904306),new u(2361852424,442776044),new u(2428436474,593698344),new u(2756734187,3733110249),new u(3204031479,2999351573),new u(3329325298,3815920427),new u(3391569614,3928383900),new u(3515267271,566280711),new u(3940187606,3454069534),new u(4118630271,4000239992),new u(116418474,1914138554),new u(174292421,2731055270),new u(289380356,3203993006),new u(460393269,320620315),new u(685471733,587496836),new u(852142971,1086792851),new u(1017036298,365543100),new u(1126000580,2618297676),new u(1288033470,3409855158),new u(1501505948,4234509866),new u(1607167915,987167468),new u(1816402316,1246189591)];return function(s,c,l,h){var f,d,g,m,p,b,v,y;(h=!!h)?(f=new u(3418070365,3238371032),d=new u(1654270250,914150663),g=new u(2438529370,812702999),m=new u(355462360,4144912697),p=new u(1731405415,4290775857),b=new u(2394180231,1750603025),v=new u(3675008525,1694076839),y=new u(1203062813,3204075428)):(f=new u(1779033703,4089235720),d=new u(3144134277,2227873595),g=new u(1013904242,4271175723),m=new u(2773480762,1595750129),p=new u(1359893119,2917565137),b=new u(2600822924,725511199),v=new u(528734635,4215389547),y=new u(1541459225,327033209));var w,k,S,C=128*Math.ceil((l+17)/128),x=new Uint8Array(C);for(w=0;w<l;++w)x[w]=s[c++];for(x[w++]=128,S=C-16;w<S;)x[w++]=0;x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=l>>>29&255,x[w++]=l>>21&255,x[w++]=l>>13&255,x[w++]=l>>5&255,x[w++]=l<<3&255;var A=new Array(80);for(w=0;w<80;w++)A[w]=new u(0,0);var _,P,I=new u(0,0),T=new u(0,0),O=new u(0,0),E=new u(0,0),F=new u(0,0),R=new u(0,0),B=new u(0,0),M=new u(0,0),D=new u(0,0),L=new u(0,0),N=new u(0,0),U=new u(0,0);for(w=0;w<C;){for(k=0;k<16;++k)A[k].high=x[w]<<24|x[w+1]<<16|x[w+2]<<8|x[w+3],A[k].low=x[w+4]<<24|x[w+5]<<16|x[w+6]<<8|x[w+7],w+=8;for(k=16;k<80;++k)n(_=A[k],A[k-2],U),_.add(A[k-7]),i(N,A[k-15],U),_.add(N),_.add(A[k-16]);for(I.assign(f),T.assign(d),O.assign(g),E.assign(m),F.assign(p),R.assign(b),B.assign(v),M.assign(y),k=0;k<80;++k)D.assign(M),a(N,F,U),D.add(N),e(N,F,R,B,U),D.add(N),D.add(o[k]),D.add(A[k]),r(L,I,U),t(N,I,T,O,U),L.add(N),_=M,M=B,B=R,R=F,E.add(D),F=E,E=O,O=T,T=I,_.assign(D),_.add(L),I=_;f.add(I),d.add(T),g.add(O),m.add(E),p.add(F),b.add(R),v.add(B),y.add(M)}return h?(P=new Uint8Array(48),f.copyTo(P,0),d.copyTo(P,8),g.copyTo(P,16),m.copyTo(P,24),p.copyTo(P,32),b.copyTo(P,40)):(P=new Uint8Array(64),f.copyTo(P,0),d.copyTo(P,8),g.copyTo(P,16),m.copyTo(P,24),p.copyTo(P,32),b.copyTo(P,40),v.copyTo(P,48),y.copyTo(P,56)),P}}(),d=function(e,t,r){return f(e,t,r,!0)},g=function(){function e(){}return e.prototype={decryptBlock:function(e){return e}},e}(),m=function(){for(var e=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),t=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),r=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),a=new Uint8Array(256),i=0;i<256;i++)a[i]=i<128?i<<1:i<<1^27;var n=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]);function o(e,t){var a,i,o,s,c,l,u=new Uint8Array(16);for(u.set(e),i=0,o=160;i<16;++i,++o)u[i]^=t[o];for(a=9;a>=1;--a){for(s=u[13],u[13]=u[9],u[9]=u[5],u[5]=u[1],u[1]=s,s=u[14],c=u[10],u[14]=u[6],u[10]=u[2],u[6]=s,u[2]=c,s=u[15],c=u[11],l=u[7],u[15]=u[3],u[11]=s,u[7]=c,u[3]=l,i=0;i<16;++i)u[i]=r[u[i]];for(i=0,o=16*a;i<16;++i,++o)u[i]^=t[o];for(i=0;i<16;i+=4){var h=n[u[i]],f=n[u[i+1]],d=n[u[i+2]],g=n[u[i+3]];s=h^f>>>8^f<<24^d>>>16^d<<16^g>>>24^g<<8,u[i]=s>>>24&255,u[i+1]=s>>16&255,u[i+2]=s>>8&255,u[i+3]=255&s}}for(s=u[13],u[13]=u[9],u[9]=u[5],u[5]=u[1],u[1]=s,s=u[14],c=u[10],u[14]=u[6],u[10]=u[2],u[6]=s,u[2]=c,s=u[15],c=u[11],l=u[7],u[15]=u[3],u[11]=s,u[7]=c,u[3]=l,i=0;i<16;++i)u[i]=r[u[i]],u[i]^=t[i];return u}function s(e,r){var n,o,s,c,l,u=new Uint8Array(16);for(u.set(e),c=0;c<16;++c)u[c]^=r[c];for(i=1;i<10;i++){for(c=0;c<16;++c)u[c]=t[u[c]];for(s=u[1],u[1]=u[5],u[5]=u[9],u[9]=u[13],u[13]=s,s=u[2],o=u[6],u[2]=u[10],u[6]=u[14],u[10]=s,u[14]=o,s=u[3],o=u[7],n=u[11],u[3]=u[15],u[7]=s,u[11]=o,u[15]=n,c=0;c<16;c+=4){var h=u[c+0],f=u[c+1],d=u[c+2],g=u[c+3];n=h^f^d^g,u[c+0]^=n^a[h^f],u[c+1]^=n^a[f^d],u[c+2]^=n^a[d^g],u[c+3]^=n^a[g^h]}for(c=0,l=16*i;c<16;++c,++l)u[c]^=r[l]}for(c=0;c<16;++c)u[c]=t[u[c]];for(s=u[1],u[1]=u[5],u[5]=u[9],u[9]=u[13],u[13]=s,s=u[2],o=u[6],u[2]=u[10],u[6]=u[14],u[10]=s,u[14]=o,s=u[3],o=u[7],n=u[11],u[3]=u[15],u[7]=s,u[11]=o,u[15]=n,c=0,l=160;c<16;++c,++l)u[c]^=r[l];return u}function c(r){this.key=function(r){var a=new Uint8Array(176);a.set(r);for(var i=16,n=1;i<176;++n){var o=a[i-3],s=a[i-2],c=a[i-1],l=a[i-4];o=t[o],s=t[s],c=t[c],l=t[l],o^=e[n];for(var u=0;u<4;++u)a[i]=o^=a[i-16],a[++i]=s^=a[i-16],a[++i]=c^=a[i-16],a[++i]=l^=a[i-16],i++}return a}(r),this.buffer=new Uint8Array(16),this.bufferPosition=0}function l(e,t){var r,a,i,n=e.length,s=this.buffer,c=this.bufferPosition,l=[],u=this.iv;for(r=0;r<n;++r)if(s[c]=e[r],!(++c<16)){var h=o(s,this.key);for(a=0;a<16;++a)h[a]^=u[a];u=s,l.push(h),s=new Uint8Array(16),c=0}if(this.buffer=s,this.bufferLength=c,this.iv=u,0===l.length)return new Uint8Array([]);var f=16*l.length;if(t){var d=l[l.length-1],g=d[15];if(g<=16){for(r=15,i=16-g;r>=i;--r)if(d[r]!==g){g=0;break}f-=g,l[l.length-1]=d.subarray(0,16-g)}}var m=new Uint8Array(f);for(r=0,a=0,i=l.length;r<i;++r,a+=16)m.set(l[r],a);return m}return c.prototype={decryptBlock:function(e,t){var r,a=e.length,i=this.buffer,n=this.bufferPosition;for(r=0;n<16&&r<a;++r,++n)i[n]=e[r];return n<16?(this.bufferLength=n,new Uint8Array([])):(this.iv=i,this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=l,this.decryptBlock(e.subarray(16),t))},encrypt:function(e,t){var r,a,i,n=e.length,o=this.buffer,c=this.bufferPosition,l=[];for(t||(t=new Uint8Array(16)),r=0;r<n;++r)if(o[c]=e[r],!(++c<16)){for(a=0;a<16;++a)o[a]^=t[a];var u=s(o,this.key);t=u,l.push(u),o=new Uint8Array(16),c=0}if(this.buffer=o,this.bufferLength=c,this.iv=t,0===l.length)return new Uint8Array([]);var h=16*l.length,f=new Uint8Array(h);for(r=0,a=0,i=l.length;r<i;++r,a+=16)f.set(l[r],a);return f}},c}(),p=function(){for(var e=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),t=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),r=new Uint8Array(256),a=0;a<256;a++)r[a]=a<128?a<<1:a<<1^27;var i=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]);function n(e,r){var a,n,o,s,c,l,u=new Uint8Array(16);for(u.set(e),n=0,o=224;n<16;++n,++o)u[n]^=r[o];for(a=13;a>=1;--a){for(s=u[13],u[13]=u[9],u[9]=u[5],u[5]=u[1],u[1]=s,s=u[14],c=u[10],u[14]=u[6],u[10]=u[2],u[6]=s,u[2]=c,s=u[15],c=u[11],l=u[7],u[15]=u[3],u[11]=s,u[7]=c,u[3]=l,n=0;n<16;++n)u[n]=t[u[n]];for(n=0,o=16*a;n<16;++n,++o)u[n]^=r[o];for(n=0;n<16;n+=4){var h=i[u[n]],f=i[u[n+1]],d=i[u[n+2]],g=i[u[n+3]];s=h^f>>>8^f<<24^d>>>16^d<<16^g>>>24^g<<8,u[n]=s>>>24&255,u[n+1]=s>>16&255,u[n+2]=s>>8&255,u[n+3]=255&s}}for(s=u[13],u[13]=u[9],u[9]=u[5],u[5]=u[1],u[1]=s,s=u[14],c=u[10],u[14]=u[6],u[10]=u[2],u[6]=s,u[2]=c,s=u[15],c=u[11],l=u[7],u[15]=u[3],u[11]=s,u[7]=c,u[3]=l,n=0;n<16;++n)u[n]=t[u[n]],u[n]^=r[n];return u}function o(t,a){var i,n,o,s,c,l,u=new Uint8Array(16);for(u.set(t),c=0;c<16;++c)u[c]^=a[c];for(s=1;s<14;s++){for(c=0;c<16;++c)u[c]=e[u[c]];for(o=u[1],u[1]=u[5],u[5]=u[9],u[9]=u[13],u[13]=o,o=u[2],n=u[6],u[2]=u[10],u[6]=u[14],u[10]=o,u[14]=n,o=u[3],n=u[7],i=u[11],u[3]=u[15],u[7]=o,u[11]=n,u[15]=i,c=0;c<16;c+=4){var h=u[c+0],f=u[c+1],d=u[c+2],g=u[c+3];i=h^f^d^g,u[c+0]^=i^r[h^f],u[c+1]^=i^r[f^d],u[c+2]^=i^r[d^g],u[c+3]^=i^r[g^h]}for(c=0,l=16*s;c<16;++c,++l)u[c]^=a[l]}for(c=0;c<16;++c)u[c]=e[u[c]];for(o=u[1],u[1]=u[5],u[5]=u[9],u[9]=u[13],u[13]=o,o=u[2],n=u[6],u[2]=u[10],u[6]=u[14],u[10]=o,u[14]=n,o=u[3],n=u[7],i=u[11],u[3]=u[15],u[7]=o,u[11]=n,u[15]=i,c=0,l=224;c<16;++c,++l)u[c]^=a[l];return u}function s(t){this.key=function(t){var r=new Uint8Array(240),a=1;r.set(t);for(var i=32,n=1;i<240;++n){var o,s,c,l;i%32==16?(o=e[o],s=e[s],c=e[c],l=e[l]):i%32==0&&(o=r[i-3],s=r[i-2],c=r[i-1],l=r[i-4],o=e[o],s=e[s],c=e[c],l=e[l],o^=a,(a<<=1)>=256&&(a=255&(27^a)));for(var u=0;u<4;++u)r[i]=o^=r[i-32],r[++i]=s^=r[i-32],r[++i]=c^=r[i-32],r[++i]=l^=r[i-32],i++}return r}(t),this.buffer=new Uint8Array(16),this.bufferPosition=0}function c(e,t){var r,a,i,o=e.length,s=this.buffer,c=this.bufferPosition,l=[],u=this.iv;for(r=0;r<o;++r)if(s[c]=e[r],!(++c<16)){var h=n(s,this.key);for(a=0;a<16;++a)h[a]^=u[a];u=s,l.push(h),s=new Uint8Array(16),c=0}if(this.buffer=s,this.bufferLength=c,this.iv=u,0===l.length)return new Uint8Array([]);var f=16*l.length;if(t){var d=l[l.length-1],g=d[15];if(g<=16){for(r=15,i=16-g;r>=i;--r)if(d[r]!==g){g=0;break}f-=g,l[l.length-1]=d.subarray(0,16-g)}}var m=new Uint8Array(f);for(r=0,a=0,i=l.length;r<i;++r,a+=16)m.set(l[r],a);return m}return s.prototype={decryptBlock:function(e,t,r){var a,i=e.length,n=this.buffer,o=this.bufferPosition;if(r)this.iv=r;else{for(a=0;o<16&&a<i;++a,++o)n[o]=e[a];if(o<16)return this.bufferLength=o,new Uint8Array([]);this.iv=n,e=e.subarray(16)}return this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=c,this.decryptBlock(e,t)},encrypt:function(e,t){var r,a,i,n=e.length,s=this.buffer,c=this.bufferPosition,l=[];for(t||(t=new Uint8Array(16)),r=0;r<n;++r)if(s[c]=e[r],!(++c<16)){for(a=0;a<16;++a)s[a]^=t[a];var u=o(s,this.key);this.iv=u,l.push(u),s=new Uint8Array(16),c=0}if(this.buffer=s,this.bufferLength=c,this.iv=t,0===l.length)return new Uint8Array([]);var h=16*l.length,f=new Uint8Array(h);for(r=0,a=0,i=l.length;r<i;++r,a+=16)f.set(l[r],a);return f}},s}(),b=function(){function e(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function t(){}return t.prototype={checkOwnerPassword:function(t,r,a,i){var n=new Uint8Array(t.length+56);return n.set(t,0),n.set(r,t.length),n.set(a,t.length+r.length),e(h(n,0,n.length),i)},checkUserPassword:function(t,r,a){var i=new Uint8Array(t.length+8);return i.set(t,0),i.set(r,t.length),e(h(i,0,i.length),a)},getOwnerKey:function(e,t,r,a){var i=new Uint8Array(e.length+56);i.set(e,0),i.set(t,e.length),i.set(r,e.length+t.length);var n=h(i,0,i.length);return new p(n).decryptBlock(a,!1,new Uint8Array(16))},getUserKey:function(e,t,r){var a=new Uint8Array(e.length+8);a.set(e,0),a.set(t,e.length);var i=h(a,0,a.length);return new p(i).decryptBlock(r,!1,new Uint8Array(16))}},t}(),v=function(){function e(e,t){var r=new Uint8Array(e.length+t.length);return r.set(e,0),r.set(t,e.length),r}function t(t,r,a){for(var i=h(r,0,r.length).subarray(0,32),n=[0],o=0;o<64||n[n.length-1]>o-32;){var s=t.length+i.length+a.length,c=new Uint8Array(64*s),l=e(t,i);l=e(l,a);for(var u=0,g=0;u<64;u++,g+=s)c.set(l,g);n=new m(i.subarray(0,16)).encrypt(c,i.subarray(16,32));for(var p=0,b=0;b<16;b++)p*=1,p%=3,p+=(n[b]>>>0)%3,p%=3;0===p?i=h(n,0,n.length):1===p?i=d(n,0,n.length):2===p&&(i=f(n,0,n.length)),o++}return i.subarray(0,32)}function r(){}function a(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}return r.prototype={hash:function(e,r,a){return t(e,r,a)},checkOwnerPassword:function(e,r,i,n){var o=new Uint8Array(e.length+56);return o.set(e,0),o.set(r,e.length),o.set(i,e.length+r.length),a(t(e,o,i),n)},checkUserPassword:function(e,r,i){var n=new Uint8Array(e.length+8);return n.set(e,0),n.set(r,e.length),a(t(e,n,[]),i)},getOwnerKey:function(e,r,a,i){var n=new Uint8Array(e.length+56);n.set(e,0),n.set(r,e.length),n.set(a,e.length+r.length);var o=t(e,n,a);return new p(o).decryptBlock(i,!1,new Uint8Array(16))},getUserKey:function(e,r,a){var i=new Uint8Array(e.length+8);i.set(e,0),i.set(r,e.length);var n=t(e,i,[]);return new p(n).decryptBlock(a,!1,new Uint8Array(16))}},r}(),y=function(){function e(e,t){this.StringCipherConstructor=e,this.StreamCipherConstructor=t}return e.prototype={createStream:function(e,t){var r=new this.StreamCipherConstructor;return new s.DecryptStream(e,t,function(e,t){return r.decryptBlock(e,t)})},decryptString:function(e){var t=new this.StringCipherConstructor,r=(0,n.stringToBytes)(e);return r=t.decryptBlock(r,!0),(0,n.bytesToString)(r)}},e}(),w=function(){var e=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]);function t(t,r,a,i,n,o,s,u){var h,f,d=40+a.length+t.length,g=new Uint8Array(d),m=0;if(r)for(f=Math.min(32,r.length);m<f;++m)g[m]=r[m];for(h=0;m<32;)g[m++]=e[h++];for(h=0,f=a.length;h<f;++h)g[m++]=a[h];for(g[m++]=255&n,g[m++]=n>>8&255,g[m++]=n>>16&255,g[m++]=n>>>24&255,h=0,f=t.length;h<f;++h)g[m++]=t[h];o>=4&&!u&&(g[m++]=255,g[m++]=255,g[m++]=255,g[m++]=255);var p=l(g,0,m),b=s>>3;if(o>=3)for(h=0;h<50;++h)p=l(p,0,b);var v,y=p.subarray(0,b);if(o>=3){for(m=0;m<32;++m)g[m]=e[m];for(h=0,f=t.length;h<f;++h)g[m++]=t[h];v=new c(y).encryptBlock(l(g,0,m)),f=y.length;var w,k=new Uint8Array(f);for(h=1;h<=19;++h){for(w=0;w<f;++w)k[w]=y[w]^h;v=new c(k).encryptBlock(v)}for(h=0,f=v.length;h<f;++h)if(i[h]!==v[h])return null}else for(h=0,f=(v=new c(y).encryptBlock(e)).length;h<f;++h)if(i[h]!==v[h])return null;return y}var r=o.Name.get(\"Identity\");function a(a,i,s){var u=a.get(\"Filter\");if(!(0,o.isName)(u,\"Standard\"))throw new n.FormatError(\"unknown encryption method\");this.dict=a;var h=a.get(\"V\");if(!Number.isInteger(h)||1!==h&&2!==h&&4!==h&&5!==h)throw new n.FormatError(\"unsupported encryption algorithm\");this.algorithm=h;var f=a.get(\"Length\");if(!f)if(h<=3)f=40;else{var d=a.get(\"CF\"),g=a.get(\"StmF\");if((0,o.isDict)(d)&&(0,o.isName)(g)){d.suppressEncryption=!0;var m=d.get(g.name);(f=m&&m.get(\"Length\")||128)<40&&(f<<=3)}}if(!Number.isInteger(f)||f<40||f%8!=0)throw new n.FormatError(\"invalid key length\");var p=(0,n.stringToBytes)(a.get(\"O\")).subarray(0,32),y=(0,n.stringToBytes)(a.get(\"U\")).subarray(0,32),w=a.get(\"P\"),k=a.get(\"R\"),S=(4===h||5===h)&&!1!==a.get(\"EncryptMetadata\");this.encryptMetadata=S;var C,x,A=(0,n.stringToBytes)(i);if(s){if(6===k)try{s=(0,n.utf8StringToString)(s)}catch(e){(0,n.warn)(\"CipherTransformFactory: Unable to convert UTF8 encoded password.\")}C=(0,n.stringToBytes)(s)}if(5!==h)x=t(A,C,p,y,w,k,f,S);else{var _=(0,n.stringToBytes)(a.get(\"O\")).subarray(32,40),P=(0,n.stringToBytes)(a.get(\"O\")).subarray(40,48),I=(0,n.stringToBytes)(a.get(\"U\")).subarray(0,48),T=(0,n.stringToBytes)(a.get(\"U\")).subarray(32,40),O=(0,n.stringToBytes)(a.get(\"U\")).subarray(40,48),E=(0,n.stringToBytes)(a.get(\"OE\")),F=(0,n.stringToBytes)(a.get(\"UE\"));(0,n.stringToBytes)(a.get(\"Perms\"));x=function(e,t,r,a,i,n,o,s,c,l,u,h){if(t){var f=Math.min(127,t.length);t=t.subarray(0,f)}else t=[];var d;return(d=6===e?new v:new b).checkUserPassword(t,s,o)?d.getUserKey(t,c,u):t.length&&d.checkOwnerPassword(t,a,n,r)?d.getOwnerKey(t,i,n,l):null}(k,C,p,_,P,I,y,T,O,E,F)}if(!x&&!s)throw new n.PasswordException(\"No password given\",n.PasswordResponses.NEED_PASSWORD);if(!x&&s&&(x=t(A,function(t,r,a,i){var n,o,s=new Uint8Array(32),u=0;for(o=Math.min(32,t.length);u<o;++u)s[u]=t[u];for(n=0;u<32;)s[u++]=e[n++];var h,f=l(s,0,u),d=i>>3;if(a>=3)for(n=0;n<50;++n)f=l(f,0,f.length);if(a>=3){h=r;var g,m=new Uint8Array(d);for(n=19;n>=0;n--){for(g=0;g<d;++g)m[g]=f[g]^n;h=new c(m).encryptBlock(h)}}else h=new c(f.subarray(0,d)).encryptBlock(r);return h}(C,p,k,f),p,y,w,k,f,S)),!x)throw new n.PasswordException(\"Incorrect Password\",n.PasswordResponses.INCORRECT_PASSWORD);if(this.encryptionKey=x,h>=4){var R=a.get(\"CF\");(0,o.isDict)(R)&&(R.suppressEncryption=!0),this.cf=R,this.stmf=a.get(\"StmF\")||r,this.strf=a.get(\"StrF\")||r,this.eff=a.get(\"EFF\")||this.stmf}}function i(e,t,r,a){var i,n,o=new Uint8Array(r.length+9);for(i=0,n=r.length;i<n;++i)o[i]=r[i];return o[i++]=255&e,o[i++]=e>>8&255,o[i++]=e>>16&255,o[i++]=255&t,o[i++]=t>>8&255,a&&(o[i++]=115,o[i++]=65,o[i++]=108,o[i++]=84),l(o,0,i).subarray(0,Math.min(r.length+5,16))}function s(e,t,r,a,s){if(!(0,o.isName)(t))throw new n.FormatError(\"Invalid crypt filter name.\");var l,u=e.get(t.name);if(null!=u&&(l=u.get(\"CFM\")),!l||\"None\"===l.name)return function(){return new g};if(\"V2\"===l.name)return function(){return new c(i(r,a,s,!1))};if(\"AESV2\"===l.name)return function(){return new m(i(r,a,s,!0))};if(\"AESV3\"===l.name)return function(){return new p(s)};throw new n.FormatError(\"Unknown crypto method\")}return a.prototype={createCipherTransform:function(e,t){if(4===this.algorithm||5===this.algorithm)return new y(s(this.cf,this.stmf,e,t,this.encryptionKey),s(this.cf,this.strf,e,t,this.encryptionKey));var r=i(e,t,this.encryptionKey,!1),a=function(){return new c(r)};return new y(a,a)}},a}();t.AES128Cipher=m,t.AES256Cipher=p,t.ARCFourCipher=c,t.CipherTransformFactory=w,t.PDF17=b,t.PDF20=v,t.calculateMD5=l,t.calculateSHA256=h,t.calculateSHA384=d,t.calculateSHA512=f},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CFFCompiler=t.CFFPrivateDict=t.CFFTopDict=t.CFFCharset=t.CFFIndex=t.CFFStrings=t.CFFHeader=t.CFF=t.CFFParser=t.CFFStandardStrings=void 0;var a=r(0),i=r(138),n=r(21),o=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\",\"001.000\",\"001.001\",\"001.002\",\"001.003\",\"Black\",\"Bold\",\"Book\",\"Light\",\"Medium\",\"Regular\",\"Roman\",\"Semibold\"],s=function(){var e=[null,{id:\"hstem\",min:2,stackClearing:!0,stem:!0},null,{id:\"vstem\",min:2,stackClearing:!0,stem:!0},{id:\"vmoveto\",min:1,stackClearing:!0},{id:\"rlineto\",min:2,resetStack:!0},{id:\"hlineto\",min:1,resetStack:!0},{id:\"vlineto\",min:1,resetStack:!0},{id:\"rrcurveto\",min:6,resetStack:!0},null,{id:\"callsubr\",min:1,undefStack:!0},{id:\"return\",min:0,undefStack:!0},null,null,{id:\"endchar\",min:0,stackClearing:!0},null,null,null,{id:\"hstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"hintmask\",min:0,stackClearing:!0},{id:\"cntrmask\",min:0,stackClearing:!0},{id:\"rmoveto\",min:2,stackClearing:!0},{id:\"hmoveto\",min:1,stackClearing:!0},{id:\"vstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"rcurveline\",min:8,resetStack:!0},{id:\"rlinecurve\",min:8,resetStack:!0},{id:\"vvcurveto\",min:4,resetStack:!0},{id:\"hhcurveto\",min:4,resetStack:!0},null,{id:\"callgsubr\",min:1,undefStack:!0},{id:\"vhcurveto\",min:4,resetStack:!0},{id:\"hvcurveto\",min:4,resetStack:!0}],t=[null,null,null,{id:\"and\",min:2,stackDelta:-1},{id:\"or\",min:2,stackDelta:-1},{id:\"not\",min:1,stackDelta:0},null,null,null,{id:\"abs\",min:1,stackDelta:0},{id:\"add\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]+e[t-1]}},{id:\"sub\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]-e[t-1]}},{id:\"div\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]/e[t-1]}},null,{id:\"neg\",min:1,stackDelta:0,stackFn:function(e,t){e[t-1]=-e[t-1]}},{id:\"eq\",min:2,stackDelta:-1},null,null,{id:\"drop\",min:1,stackDelta:-1},null,{id:\"put\",min:2,stackDelta:-2},{id:\"get\",min:1,stackDelta:0},{id:\"ifelse\",min:4,stackDelta:-3},{id:\"random\",min:0,stackDelta:1},{id:\"mul\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]*e[t-1]}},null,{id:\"sqrt\",min:1,stackDelta:0},{id:\"dup\",min:1,stackDelta:1},{id:\"exch\",min:2,stackDelta:0},{id:\"index\",min:2,stackDelta:0},{id:\"roll\",min:3,stackDelta:-2},null,null,null,{id:\"hflex\",min:7,resetStack:!0},{id:\"flex\",min:13,resetStack:!0},{id:\"hflex1\",min:9,resetStack:!0},{id:\"flex1\",min:11,resetStack:!0}];function r(e,t,r){this.bytes=e.getBytes(),this.properties=t,this.seacAnalysisEnabled=!!r}return r.prototype={parse:function(){var e=this.properties,t=new c;this.cff=t;var r=this.parseHeader(),a=this.parseIndex(r.endPos),i=this.parseIndex(a.endPos),n=this.parseIndex(i.endPos),o=this.parseIndex(n.endPos),s=this.parseDict(i.obj.get(0)),l=this.createDict(d,s,t.strings);t.header=r.obj,t.names=this.parseNameIndex(a.obj),t.strings=this.parseStringIndex(n.obj),t.topDict=l,t.globalSubrIndex=o.obj,this.parsePrivateDict(t.topDict),t.isCIDFont=l.hasName(\"ROS\");var u=l.getByName(\"CharStrings\"),h=this.parseIndex(u).obj,f=l.getByName(\"FontMatrix\");f&&(e.fontMatrix=f);var g,m,p=l.getByName(\"FontBBox\");if(p&&(e.ascent=Math.max(p[3],p[1]),e.descent=Math.min(p[1],p[3]),e.ascentScaled=!0),t.isCIDFont){for(var b=this.parseIndex(l.getByName(\"FDArray\")).obj,v=0,y=b.count;v<y;++v){var w=b.get(v),k=this.createDict(d,this.parseDict(w),t.strings);this.parsePrivateDict(k),t.fdArray.push(k)}m=null,g=this.parseCharsets(l.getByName(\"charset\"),h.count,t.strings,!0),t.fdSelect=this.parseFDSelect(l.getByName(\"FDSelect\"),h.count)}else g=this.parseCharsets(l.getByName(\"charset\"),h.count,t.strings,!1),m=this.parseEncoding(l.getByName(\"Encoding\"),e,t.strings,g.charset);t.charset=g,t.encoding=m;var S=this.parseCharStrings({charStrings:h,localSubrIndex:l.privateDict.subrsIndex,globalSubrIndex:o.obj,fdSelect:t.fdSelect,fdArray:t.fdArray,privateDict:l.privateDict});return t.charStrings=S.charStrings,t.seacs=S.seacs,t.widths=S.widths,t},parseHeader:function(){for(var e=this.bytes,t=e.length,r=0;r<t&&1!==e[r];)++r;if(r>=t)throw new a.FormatError(\"Invalid CFF header\");0!==r&&((0,a.info)(\"cff data is shifted\"),e=e.subarray(r),this.bytes=e);var i=e[0],n=e[1],o=e[2],s=e[3];return{obj:new l(i,n,o,s),endPos:o}},parseDict:function(e){var t=0;function r(){var r=e[t++];return 30===r?function(){var r=\"\",a=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\"E\",\"E-\",null,\"-\"],i=e.length;for(;t<i;){var n=e[t++],o=n>>4,s=15&n;if(15===o)break;if(r+=a[o],15===s)break;r+=a[s]}return parseFloat(r)}():28===r?r=((r=e[t++])<<24|e[t++]<<16)>>16:29===r?r=(r=(r=(r=e[t++])<<8|e[t++])<<8|e[t++])<<8|e[t++]:r>=32&&r<=246?r-139:r>=247&&r<=250?256*(r-247)+e[t++]+108:r>=251&&r<=254?-256*(r-251)-e[t++]-108:((0,a.warn)('CFFParser_parseDict: \"'+r+'\" is a reserved command.'),NaN)}var i=[],n=[];t=0;for(var o=e.length;t<o;){var s=e[t];s<=21?(12===s&&(s=s<<8|e[++t]),n.push([s,i]),i=[],++t):i.push(r())}return n},parseIndex:function(e){var t,r,a=new h,i=this.bytes,n=i[e++]<<8|i[e++],o=[],s=e;if(0!==n){var c=i[e++],l=e+(n+1)*c-1;for(t=0,r=n+1;t<r;++t){for(var u=0,f=0;f<c;++f)u<<=8,u+=i[e++];o.push(l+u)}s=o[n]}for(t=0,r=o.length-1;t<r;++t){var d=o[t],g=o[t+1];a.add(i.subarray(d,g))}return{obj:a,endPos:s}},parseNameIndex:function(e){for(var t=[],r=0,i=e.count;r<i;++r){var n=e.get(r);t.push((0,a.bytesToString)(n))}return t},parseStringIndex:function(e){for(var t=new u,r=0,i=e.count;r<i;++r){var n=e.get(r);t.add((0,a.bytesToString)(n))}return t},createDict:function(e,t,r){for(var a=new e(r),i=0,n=t.length;i<n;++i){var o=t[i],s=o[0],c=o[1];a.setByKey(s,c)}return a},parseCharString:function(r,i,n,o){if(!i||r.callDepth>10)return!1;for(var s=r.stackSize,c=r.stack,l=i.length,u=0;u<l;){var h=i[u++],f=null;if(12===h){var d=i[u++];0===d?(i[u-2]=139,i[u-1]=22,s=0):f=t[d]}else if(28===h)c[s]=(i[u]<<24|i[u+1]<<16)>>16,u+=2,s++;else if(14===h){if(s>=4&&(s-=4,this.seacAnalysisEnabled))return r.seac=c.slice(s,s+4),!1;f=e[h]}else if(h>=32&&h<=246)c[s]=h-139,s++;else if(h>=247&&h<=254)c[s]=h<251?(h-247<<8)+i[u]+108:-(h-251<<8)-i[u]-108,u++,s++;else if(255===h)c[s]=(i[u]<<24|i[u+1]<<16|i[u+2]<<8|i[u+3])/65536,u+=4,s++;else if(19===h||20===h)r.hints+=s>>1,u+=r.hints+7>>3,s%=2,f=e[h];else{if(10===h||29===h){var g;if(!(g=10===h?n:o))return f=e[h],(0,a.warn)(\"Missing subrsIndex for \"+f.id),!1;var m=32768;g.count<1240?m=107:g.count<33900&&(m=1131);var p=c[--s]+m;if(p<0||p>=g.count||isNaN(p))return f=e[h],(0,a.warn)(\"Out of bounds subrIndex for \"+f.id),!1;if(r.stackSize=s,r.callDepth++,!this.parseCharString(r,g.get(p),n,o))return!1;r.callDepth--,s=r.stackSize;continue}if(11===h)return r.stackSize=s,!0;f=e[h]}if(f){if(f.stem&&(r.hints+=s>>1),\"min\"in f&&!r.undefStack&&s<f.min)return(0,a.warn)(\"Not enough parameters for \"+f.id+\"; actual: \"+s+\", expected: \"+f.min),!1;r.firstStackClearing&&f.stackClearing&&(r.firstStackClearing=!1,(s-=f.min)>=2&&f.stem?s%=2:s>1&&(0,a.warn)(\"Found too many parameters for stack-clearing command\"),s>0&&c[s-1]>=0&&(r.width=c[s-1])),\"stackDelta\"in f?(\"stackFn\"in f&&f.stackFn(c,s),s+=f.stackDelta):f.stackClearing?s=0:f.resetStack?(s=0,r.undefStack=!1):f.undefStack&&(s=0,r.undefStack=!0,r.firstStackClearing=!1)}}return r.stackSize=s,!0},parseCharStrings:function(e){for(var t=e.charStrings,r=e.localSubrIndex,i=e.globalSubrIndex,n=e.fdSelect,o=e.fdArray,s=e.privateDict,c=[],l=[],u=t.count,h=0;h<u;h++){var f=t.get(h),d={callDepth:0,stackSize:0,stack:[],undefStack:!0,hints:0,firstStackClearing:!0,seac:null,width:null},g=!0,m=null,p=s;if(n&&o.length){var b=n.getFDIndex(h);-1===b&&((0,a.warn)(\"Glyph index is not in fd select.\"),g=!1),b>=o.length&&((0,a.warn)(\"Invalid fd index for glyph index.\"),g=!1),g&&(m=(p=o[b].privateDict).subrsIndex)}else r&&(m=r);if(g&&(g=this.parseCharString(d,f,m,i)),null!==d.width){var v=p.getByName(\"nominalWidthX\");l[h]=v+d.width}else{var y=p.getByName(\"defaultWidthX\");l[h]=y}null!==d.seac&&(c[h]=d.seac),g||t.set(h,new Uint8Array([14]))}return{charStrings:t,seacs:c,widths:l}},emptyPrivateDictionary:function(e){var t=this.createDict(g,[],e.strings);e.setByKey(18,[0,0]),e.privateDict=t},parsePrivateDict:function(e){if(e.hasName(\"Private\")){var t=e.getByName(\"Private\");if(Array.isArray(t)&&2===t.length){var r=t[0],a=t[1];if(0===r||a>=this.bytes.length)this.emptyPrivateDictionary(e);else{var i=a+r,n=this.bytes.subarray(a,i),o=this.parseDict(n),s=this.createDict(g,o,e.strings);if(e.privateDict=s,s.getByName(\"Subrs\")){var c=s.getByName(\"Subrs\"),l=a+c;if(0===c||l>=this.bytes.length)this.emptyPrivateDictionary(e);else{var u=this.parseIndex(l);s.subrsIndex=u.obj}}}}else e.removeByName(\"Private\")}else this.emptyPrivateDictionary(e)},parseCharsets:function(e,t,r,n){if(0===e)return new p(!0,m.ISO_ADOBE,i.ISOAdobeCharset);if(1===e)return new p(!0,m.EXPERT,i.ExpertCharset);if(2===e)return new p(!0,m.EXPERT_SUBSET,i.ExpertSubsetCharset);var o,s,c,l=this.bytes,u=e,h=l[e++],f=[\".notdef\"];switch(t-=1,h){case 0:for(c=0;c<t;c++)o=l[e++]<<8|l[e++],f.push(n?o:r.get(o));break;case 1:for(;f.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++],c=0;c<=s;c++)f.push(n?o++:r.get(o++));break;case 2:for(;f.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++]<<8|l[e++],c=0;c<=s;c++)f.push(n?o++:r.get(o++));break;default:throw new a.FormatError(\"Unknown charset format\")}var d=e,g=l.subarray(u,d);return new p(!1,h,f,g)},parseEncoding:function(e,t,r,i){var o,s,c,l=Object.create(null),u=this.bytes,h=!1,f=null;if(0===e||1===e){h=!0,o=e;var d=e?n.ExpertEncoding:n.StandardEncoding;for(s=0,c=i.length;s<c;s++){var g=d.indexOf(i[s]);-1!==g&&(l[g]=s)}}else{var m=e;switch(127&(o=u[e++])){case 0:var p=u[e++];for(s=1;s<=p;s++)l[u[e++]]=s;break;case 1:var v=u[e++],y=1;for(s=0;s<v;s++)for(var w=u[e++],k=u[e++],S=w;S<=w+k;S++)l[S]=y++;break;default:throw new a.FormatError(\"Unknown encoding format: \"+o+\" in CFF\")}var C=e;128&o&&(u[m]&=127,function(){var t=u[e++];for(s=0;s<t;s++){var a=u[e++],n=(u[e++]<<8)+(255&u[e++]);l[a]=i.indexOf(r.get(n))}}()),f=u.subarray(m,C)}return new b(h,o&=127,l,f)},parseFDSelect:function(e,t){var r,i,n=e,o=this.bytes,s=o[e++],c=[],l=!1;switch(s){case 0:for(i=0;i<t;++i){var u=o[e++];c.push(u)}r=o.subarray(n,e);break;case 3:var h=o[e++]<<8|o[e++];for(i=0;i<h;++i){var f=o[e++]<<8|o[e++];0===i&&0!==f&&((0,a.warn)(\"parseFDSelect: The first range must have a first GID of 0 -- trying to recover.\"),l=!0,f=0);for(var d=o[e++],g=o[e]<<8|o[e+1],m=f;m<g;++m)c.push(d)}e+=2,r=o.subarray(n,e),l&&(r[3]=r[4]=0);break;default:throw new a.FormatError('parseFDSelect: Unknown format \"'+s+'\".')}if(c.length!==t)throw new a.FormatError(\"parseFDSelect: Invalid font data.\");return new v(c,r)}},r}(),c=function(){this.header=null,this.names=[],this.topDict=null,this.strings=new u,this.globalSubrIndex=null,this.encoding=null,this.charset=null,this.charStrings=null,this.fdArray=[],this.fdSelect=null,this.isCIDFont=!1},l=function(e,t,r,a){this.major=e,this.minor=t,this.hdrSize=r,this.offSize=a},u=function(){function e(){this.strings=[]}return e.prototype={get:function(e){return e>=0&&e<=390?o[e]:e-391<=this.strings.length?this.strings[e-391]:o[0]},add:function(e){this.strings.push(e)},get count(){return this.strings.length}},e}(),h=function(){function e(){this.objects=[],this.length=0}return e.prototype={add:function(e){this.length+=e.length,this.objects.push(e)},set:function(e,t){this.length+=t.length-this.objects[e].length,this.objects[e]=t},get:function(e){return this.objects[e]},get count(){return this.objects.length}},e}(),f=function(){function e(e,t){this.keyToNameMap=e.keyToNameMap,this.nameToKeyMap=e.nameToKeyMap,this.defaults=e.defaults,this.types=e.types,this.opcodes=e.opcodes,this.order=e.order,this.strings=t,this.values=Object.create(null)}return e.prototype={setByKey:function(e,t){if(!(e in this.keyToNameMap))return!1;var r=t.length;if(0===r)return!0;for(var i=0;i<r;i++)if(isNaN(t[i]))return(0,a.warn)('Invalid CFFDict value: \"'+t+'\" for key \"'+e+'\".'),!0;var n=this.types[e];return\"num\"!==n&&\"sid\"!==n&&\"offset\"!==n||(t=t[0]),this.values[e]=t,!0},setByName:function(e,t){if(!(e in this.nameToKeyMap))throw new a.FormatError('Invalid dictionary name \"'+e+'\"');this.values[this.nameToKeyMap[e]]=t},hasName:function(e){return this.nameToKeyMap[e]in this.values},getByName:function(e){if(!(e in this.nameToKeyMap))throw new a.FormatError(\"Invalid dictionary name \"+e+'\"');var t=this.nameToKeyMap[e];return t in this.values?this.values[t]:this.defaults[t]},removeByName:function(e){delete this.values[this.nameToKeyMap[e]]}},e.createTables=function(e){for(var t={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]},r=0,a=e.length;r<a;++r){var i=e[r],n=Array.isArray(i[0])?(i[0][0]<<8)+i[0][1]:i[0];t.keyToNameMap[n]=i[1],t.nameToKeyMap[i[1]]=n,t.types[n]=i[2],t.defaults[n]=i[3],t.opcodes[n]=Array.isArray(i[0])?i[0]:[i[0]],t.order.push(n)}return t},e}(),d=function(){var e=[[[12,30],\"ROS\",[\"sid\",\"sid\",\"num\"],null],[[12,20],\"SyntheticBase\",\"num\",null],[0,\"version\",\"sid\",null],[1,\"Notice\",\"sid\",null],[[12,0],\"Copyright\",\"sid\",null],[2,\"FullName\",\"sid\",null],[3,\"FamilyName\",\"sid\",null],[4,\"Weight\",\"sid\",null],[[12,1],\"isFixedPitch\",\"num\",0],[[12,2],\"ItalicAngle\",\"num\",0],[[12,3],\"UnderlinePosition\",\"num\",-100],[[12,4],\"UnderlineThickness\",\"num\",50],[[12,5],\"PaintType\",\"num\",0],[[12,6],\"CharstringType\",\"num\",2],[[12,7],\"FontMatrix\",[\"num\",\"num\",\"num\",\"num\",\"num\",\"num\"],[.001,0,0,.001,0,0]],[13,\"UniqueID\",\"num\",null],[5,\"FontBBox\",[\"num\",\"num\",\"num\",\"num\"],[0,0,0,0]],[[12,8],\"StrokeWidth\",\"num\",0],[14,\"XUID\",\"array\",null],[15,\"charset\",\"offset\",0],[16,\"Encoding\",\"offset\",0],[17,\"CharStrings\",\"offset\",0],[18,\"Private\",[\"offset\",\"offset\"],null],[[12,21],\"PostScript\",\"sid\",null],[[12,22],\"BaseFontName\",\"sid\",null],[[12,23],\"BaseFontBlend\",\"delta\",null],[[12,31],\"CIDFontVersion\",\"num\",0],[[12,32],\"CIDFontRevision\",\"num\",0],[[12,33],\"CIDFontType\",\"num\",0],[[12,34],\"CIDCount\",\"num\",8720],[[12,35],\"UIDBase\",\"num\",null],[[12,37],\"FDSelect\",\"offset\",null],[[12,36],\"FDArray\",\"offset\",null],[[12,38],\"FontName\",\"sid\",null]],t=null;function r(r){null===t&&(t=f.createTables(e)),f.call(this,t,r),this.privateDict=null}return r.prototype=Object.create(f.prototype),r}(),g=function(){var e=[[6,\"BlueValues\",\"delta\",null],[7,\"OtherBlues\",\"delta\",null],[8,\"FamilyBlues\",\"delta\",null],[9,\"FamilyOtherBlues\",\"delta\",null],[[12,9],\"BlueScale\",\"num\",.039625],[[12,10],\"BlueShift\",\"num\",7],[[12,11],\"BlueFuzz\",\"num\",1],[10,\"StdHW\",\"num\",null],[11,\"StdVW\",\"num\",null],[[12,12],\"StemSnapH\",\"delta\",null],[[12,13],\"StemSnapV\",\"delta\",null],[[12,14],\"ForceBold\",\"num\",0],[[12,17],\"LanguageGroup\",\"num\",0],[[12,18],\"ExpansionFactor\",\"num\",.06],[[12,19],\"initialRandomSeed\",\"num\",0],[20,\"defaultWidthX\",\"num\",0],[21,\"nominalWidthX\",\"num\",0],[19,\"Subrs\",\"offset\",null]],t=null;function r(r){null===t&&(t=f.createTables(e)),f.call(this,t,r),this.subrsIndex=null}return r.prototype=Object.create(f.prototype),r}(),m={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2},p=function(e,t,r,a){this.predefined=e,this.format=t,this.charset=r,this.raw=a},b=function(e,t,r,a){this.predefined=e,this.format=t,this.encoding=r,this.raw=a},v=function(){function e(e,t){this.fdSelect=e,this.raw=t}return e.prototype={getFDIndex:function(e){return e<0||e>=this.fdSelect.length?-1:this.fdSelect[e]}},e}(),y=function(){function e(){this.offsets=Object.create(null)}return e.prototype={isTracking:function(e){return e in this.offsets},track:function(e,t){if(e in this.offsets)throw new a.FormatError(\"Already tracking location of \"+e);this.offsets[e]=t},offset:function(e){for(var t in this.offsets)this.offsets[t]+=e},setEntryLocation:function(e,t,r){if(!(e in this.offsets))throw new a.FormatError(\"Not tracking location of \"+e);for(var i=r.data,n=this.offsets[e],o=0,s=t.length;o<s;++o){var c=5*o+n,l=c+1,u=c+2,h=c+3,f=c+4;if(29!==i[c]||0!==i[l]||0!==i[u]||0!==i[h]||0!==i[f])throw new a.FormatError(\"writing to an offset that is not empty\");var d=t[o];i[c]=29,i[l]=d>>24&255,i[u]=d>>16&255,i[h]=d>>8&255,i[f]=255&d}}},e}(),w=function(){function e(e){this.cff=e}return e.prototype={compile:function(){var e=this.cff,t={data:[],length:0,add:function(e){this.data=this.data.concat(e),this.length=this.data.length}},r=this.compileHeader(e.header);t.add(r);var i=this.compileNameIndex(e.names);if(t.add(i),e.isCIDFont&&e.topDict.hasName(\"FontMatrix\")){var n=e.topDict.getByName(\"FontMatrix\");e.topDict.removeByName(\"FontMatrix\");for(var o=0,s=e.fdArray.length;o<s;o++){var c=e.fdArray[o],l=n.slice(0);c.hasName(\"FontMatrix\")&&(l=a.Util.transform(l,c.getByName(\"FontMatrix\"))),c.setByName(\"FontMatrix\",l)}}var u=this.compileTopDicts([e.topDict],t.length,e.isCIDFont);t.add(u.output);var h=u.trackers[0],f=this.compileStringIndex(e.strings.strings);t.add(f);var d=this.compileIndex(e.globalSubrIndex);if(t.add(d),e.encoding&&e.topDict.hasName(\"Encoding\"))if(e.encoding.predefined)h.setEntryLocation(\"Encoding\",[e.encoding.format],t);else{var g=this.compileEncoding(e.encoding);h.setEntryLocation(\"Encoding\",[t.length],t),t.add(g)}if(e.charset&&e.topDict.hasName(\"charset\"))if(e.charset.predefined)h.setEntryLocation(\"charset\",[e.charset.format],t);else{var m=this.compileCharset(e.charset);h.setEntryLocation(\"charset\",[t.length],t),t.add(m)}var p=this.compileCharStrings(e.charStrings);if(h.setEntryLocation(\"CharStrings\",[t.length],t),t.add(p),e.isCIDFont){h.setEntryLocation(\"FDSelect\",[t.length],t);var b=this.compileFDSelect(e.fdSelect.raw);t.add(b),u=this.compileTopDicts(e.fdArray,t.length,!0),h.setEntryLocation(\"FDArray\",[t.length],t),t.add(u.output);var v=u.trackers;this.compilePrivateDicts(e.fdArray,v,t)}return this.compilePrivateDicts([e.topDict],[h],t),t.add([0]),t.data},encodeNumber:function(e){return parseFloat(e)!==parseInt(e,10)||isNaN(e)?this.encodeFloat(e):this.encodeInteger(e)},encodeFloat:function(e){var t=e.toString(),r=/\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(t);if(r){var a=parseFloat(\"1e\"+((r[2]?+r[2]:0)+r[1].length));t=(Math.round(e*a)/a).toString()}var i,n,o=\"\";for(i=0,n=t.length;i<n;++i){var s=t[i];o+=\"e\"===s?\"-\"===t[++i]?\"c\":\"b\":\".\"===s?\"a\":\"-\"===s?\"e\":s}var c=[30];for(i=0,n=(o+=1&o.length?\"f\":\"ff\").length;i<n;i+=2)c.push(parseInt(o.substr(i,2),16));return c},encodeInteger:function(e){return e>=-107&&e<=107?[e+139]:e>=108&&e<=1131?[247+((e-=108)>>8),255&e]:e>=-1131&&e<=-108?[251+((e=-e-108)>>8),255&e]:e>=-32768&&e<=32767?[28,e>>8&255,255&e]:[29,e>>24&255,e>>16&255,e>>8&255,255&e]},compileHeader:function(e){return[e.major,e.minor,e.hdrSize,e.offSize]},compileNameIndex:function(e){for(var t=new h,r=0,i=e.length;r<i;++r){for(var n=e[r],o=Math.min(n.length,127),s=new Array(o),c=0;c<o;c++){var l=n[c];(l<\"!\"||l>\"~\"||\"[\"===l||\"]\"===l||\"(\"===l||\")\"===l||\"{\"===l||\"}\"===l||\"<\"===l||\">\"===l||\"/\"===l||\"%\"===l)&&(l=\"_\"),s[c]=l}\"\"===(s=s.join(\"\"))&&(s=\"Bad_Font_Name\"),t.add((0,a.stringToBytes)(s))}return this.compileIndex(t)},compileTopDicts:function(e,t,r){for(var a=[],i=new h,n=0,o=e.length;n<o;++n){var s=e[n];r&&(s.removeByName(\"CIDFontVersion\"),s.removeByName(\"CIDFontRevision\"),s.removeByName(\"CIDFontType\"),s.removeByName(\"CIDCount\"),s.removeByName(\"UIDBase\"));var c=new y,l=this.compileDict(s,c);a.push(c),i.add(l),c.offset(t)}return{trackers:a,output:i=this.compileIndex(i,a)}},compilePrivateDicts:function(e,t,r){for(var i=0,n=e.length;i<n;++i){var o=e[i],s=o.privateDict;if(!s||!o.hasName(\"Private\"))throw new a.FormatError(\"There must be a private dictionary.\");var c=new y,l=this.compileDict(s,c),u=r.length;if(c.offset(u),l.length||(u=0),t[i].setEntryLocation(\"Private\",[l.length,u],r),r.add(l),s.subrsIndex&&s.hasName(\"Subrs\")){var h=this.compileIndex(s.subrsIndex);c.setEntryLocation(\"Subrs\",[l.length],r),r.add(h)}}},compileDict:function(e,t){for(var r=[],i=e.order,n=0;n<i.length;++n){var o=i[n];if(o in e.values){var s=e.values[o],c=e.types[o];if(Array.isArray(c)||(c=[c]),Array.isArray(s)||(s=[s]),0!==s.length){for(var l=0,u=c.length;l<u;++l){var h=c[l],f=s[l];switch(h){case\"num\":case\"sid\":r=r.concat(this.encodeNumber(f));break;case\"offset\":var d=e.keyToNameMap[o];t.isTracking(d)||t.track(d,r.length),r=r.concat([29,0,0,0,0]);break;case\"array\":case\"delta\":r=r.concat(this.encodeNumber(f));for(var g=1,m=s.length;g<m;++g)r=r.concat(this.encodeNumber(s[g]));break;default:throw new a.FormatError(\"Unknown data type of \"+h)}}r=r.concat(e.opcodes[o])}}}return r},compileStringIndex:function(e){for(var t=new h,r=0,i=e.length;r<i;++r)t.add((0,a.stringToBytes)(e[r]));return this.compileIndex(t)},compileGlobalSubrIndex:function(){var e=this.cff.globalSubrIndex;this.out.writeByteArray(this.compileIndex(e))},compileCharStrings:function(e){return this.compileIndex(e)},compileCharset:function(e){return this.compileTypedArray(e.raw)},compileEncoding:function(e){return this.compileTypedArray(e.raw)},compileFDSelect:function(e){return this.compileTypedArray(e)},compileTypedArray:function(e){for(var t=[],r=0,a=e.length;r<a;++r)t[r]=e[r];return t},compileIndex:function(e,t){t=t||[];var r=e.objects,a=r.length;if(0===a)return[0,0,0];var i,n,o=[a>>8&255,255&a],s=1;for(i=0;i<a;++i)s+=r[i].length;n=s<256?1:s<65536?2:s<16777216?3:4,o.push(n);var c=1;for(i=0;i<a+1;i++)1===n?o.push(255&c):2===n?o.push(c>>8&255,255&c):3===n?o.push(c>>16&255,c>>8&255,255&c):o.push(c>>>24&255,c>>16&255,c>>8&255,255&c),r[i]&&(c+=r[i].length);for(i=0;i<a;i++){t[i]&&t[i].offset(o.length);for(var l=0,u=r[i].length;l<u;l++)o.push(r[i][l])}return o}},e}();t.CFFStandardStrings=o,t.CFFParser=s,t.CFF=c,t.CFFHeader=l,t.CFFStrings=u,t.CFFIndex=h,t.CFFCharset=p,t.CFFTopDict=d,t.CFFPrivateDict=g,t.CFFCompiler=w},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getSupplementalGlyphMapForCalibri=t.getSupplementalGlyphMapForArialBlack=t.getGlyphMapForStandardFonts=t.getSymbolsFonts=t.getSerifFonts=t.getNonStdFontMap=t.getStdFontMap=void 0;var a=r(0),i=(0,a.getLookupTableFactory)(function(e){e.ArialNarrow=\"Helvetica\",e[\"ArialNarrow-Bold\"]=\"Helvetica-Bold\",e[\"ArialNarrow-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialNarrow-Italic\"]=\"Helvetica-Oblique\",e.ArialBlack=\"Helvetica\",e[\"ArialBlack-Bold\"]=\"Helvetica-Bold\",e[\"ArialBlack-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialBlack-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-Black\"]=\"Helvetica\",e[\"Arial-Black-Bold\"]=\"Helvetica-Bold\",e[\"Arial-Black-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Black-Italic\"]=\"Helvetica-Oblique\",e.Arial=\"Helvetica\",e[\"Arial-Bold\"]=\"Helvetica-Bold\",e[\"Arial-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-BoldItalicMT\"]=\"Helvetica-BoldOblique\",e[\"Arial-BoldMT\"]=\"Helvetica-Bold\",e[\"Arial-ItalicMT\"]=\"Helvetica-Oblique\",e.ArialMT=\"Helvetica\",e[\"Courier-Bold\"]=\"Courier-Bold\",e[\"Courier-BoldItalic\"]=\"Courier-BoldOblique\",e[\"Courier-Italic\"]=\"Courier-Oblique\",e.CourierNew=\"Courier\",e[\"CourierNew-Bold\"]=\"Courier-Bold\",e[\"CourierNew-BoldItalic\"]=\"Courier-BoldOblique\",e[\"CourierNew-Italic\"]=\"Courier-Oblique\",e[\"CourierNewPS-BoldItalicMT\"]=\"Courier-BoldOblique\",e[\"CourierNewPS-BoldMT\"]=\"Courier-Bold\",e[\"CourierNewPS-ItalicMT\"]=\"Courier-Oblique\",e.CourierNewPSMT=\"Courier\",e.Helvetica=\"Helvetica\",e[\"Helvetica-Bold\"]=\"Helvetica-Bold\",e[\"Helvetica-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-BoldOblique\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-Italic\"]=\"Helvetica-Oblique\",e[\"Helvetica-Oblique\"]=\"Helvetica-Oblique\",e.SegoeUISymbol=\"Helvetica\",e[\"Symbol-Bold\"]=\"Symbol\",e[\"Symbol-BoldItalic\"]=\"Symbol\",e[\"Symbol-Italic\"]=\"Symbol\",e.TimesNewRoman=\"Times-Roman\",e[\"TimesNewRoman-Bold\"]=\"Times-Bold\",e[\"TimesNewRoman-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRoman-Italic\"]=\"Times-Italic\",e.TimesNewRomanPS=\"Times-Roman\",e[\"TimesNewRomanPS-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPS-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldItalicMT\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldMT\"]=\"Times-Bold\",e[\"TimesNewRomanPS-Italic\"]=\"Times-Italic\",e[\"TimesNewRomanPS-ItalicMT\"]=\"Times-Italic\",e.TimesNewRomanPSMT=\"Times-Roman\",e[\"TimesNewRomanPSMT-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPSMT-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPSMT-Italic\"]=\"Times-Italic\"}),n=(0,a.getLookupTableFactory)(function(e){e.Calibri=\"Helvetica\",e[\"Calibri-Bold\"]=\"Helvetica-Bold\",e[\"Calibri-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Calibri-Italic\"]=\"Helvetica-Oblique\",e.CenturyGothic=\"Helvetica\",e[\"CenturyGothic-Bold\"]=\"Helvetica-Bold\",e[\"CenturyGothic-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"CenturyGothic-Italic\"]=\"Helvetica-Oblique\",e.ComicSansMS=\"Comic Sans MS\",e[\"ComicSansMS-Bold\"]=\"Comic Sans MS-Bold\",e[\"ComicSansMS-BoldItalic\"]=\"Comic Sans MS-BoldItalic\",e[\"ComicSansMS-Italic\"]=\"Comic Sans MS-Italic\",e.LucidaConsole=\"Courier\",e[\"LucidaConsole-Bold\"]=\"Courier-Bold\",e[\"LucidaConsole-BoldItalic\"]=\"Courier-BoldOblique\",e[\"LucidaConsole-Italic\"]=\"Courier-Oblique\",e[\"LucidaSans-Demi\"]=\"Helvetica-Bold\",e[\"MS-Gothic\"]=\"MS Gothic\",e[\"MS-Gothic-Bold\"]=\"MS Gothic-Bold\",e[\"MS-Gothic-BoldItalic\"]=\"MS Gothic-BoldItalic\",e[\"MS-Gothic-Italic\"]=\"MS Gothic-Italic\",e[\"MS-Mincho\"]=\"MS Mincho\",e[\"MS-Mincho-Bold\"]=\"MS Mincho-Bold\",e[\"MS-Mincho-BoldItalic\"]=\"MS Mincho-BoldItalic\",e[\"MS-Mincho-Italic\"]=\"MS Mincho-Italic\",e[\"MS-PGothic\"]=\"MS PGothic\",e[\"MS-PGothic-Bold\"]=\"MS PGothic-Bold\",e[\"MS-PGothic-BoldItalic\"]=\"MS PGothic-BoldItalic\",e[\"MS-PGothic-Italic\"]=\"MS PGothic-Italic\",e[\"MS-PMincho\"]=\"MS PMincho\",e[\"MS-PMincho-Bold\"]=\"MS PMincho-Bold\",e[\"MS-PMincho-BoldItalic\"]=\"MS PMincho-BoldItalic\",e[\"MS-PMincho-Italic\"]=\"MS PMincho-Italic\",e.NuptialScript=\"Times-Italic\",e.Wingdings=\"ZapfDingbats\"}),o=(0,a.getLookupTableFactory)(function(e){e[\"Adobe Jenson\"]=!0,e[\"Adobe Text\"]=!0,e.Albertus=!0,e.Aldus=!0,e.Alexandria=!0,e.Algerian=!0,e[\"American Typewriter\"]=!0,e.Antiqua=!0,e.Apex=!0,e.Arno=!0,e.Aster=!0,e.Aurora=!0,e.Baskerville=!0,e.Bell=!0,e.Bembo=!0,e[\"Bembo Schoolbook\"]=!0,e.Benguiat=!0,e[\"Berkeley Old Style\"]=!0,e[\"Bernhard Modern\"]=!0,e[\"Berthold City\"]=!0,e.Bodoni=!0,e[\"Bauer Bodoni\"]=!0,e[\"Book Antiqua\"]=!0,e.Bookman=!0,e[\"Bordeaux Roman\"]=!0,e[\"Californian FB\"]=!0,e.Calisto=!0,e.Calvert=!0,e.Capitals=!0,e.Cambria=!0,e.Cartier=!0,e.Caslon=!0,e.Catull=!0,e.Centaur=!0,e[\"Century Old Style\"]=!0,e[\"Century Schoolbook\"]=!0,e.Chaparral=!0,e[\"Charis SIL\"]=!0,e.Cheltenham=!0,e[\"Cholla Slab\"]=!0,e.Clarendon=!0,e.Clearface=!0,e.Cochin=!0,e.Colonna=!0,e[\"Computer Modern\"]=!0,e[\"Concrete Roman\"]=!0,e.Constantia=!0,e[\"Cooper Black\"]=!0,e.Corona=!0,e.Ecotype=!0,e.Egyptienne=!0,e.Elephant=!0,e.Excelsior=!0,e.Fairfield=!0,e[\"FF Scala\"]=!0,e.Folkard=!0,e.Footlight=!0,e.FreeSerif=!0,e[\"Friz Quadrata\"]=!0,e.Garamond=!0,e.Gentium=!0,e.Georgia=!0,e.Gloucester=!0,e[\"Goudy Old Style\"]=!0,e[\"Goudy Schoolbook\"]=!0,e[\"Goudy Pro Font\"]=!0,e.Granjon=!0,e[\"Guardian Egyptian\"]=!0,e.Heather=!0,e.Hercules=!0,e[\"High Tower Text\"]=!0,e.Hiroshige=!0,e[\"Hoefler Text\"]=!0,e[\"Humana Serif\"]=!0,e.Imprint=!0,e[\"Ionic No. 5\"]=!0,e.Janson=!0,e.Joanna=!0,e.Korinna=!0,e.Lexicon=!0,e[\"Liberation Serif\"]=!0,e[\"Linux Libertine\"]=!0,e.Literaturnaya=!0,e.Lucida=!0,e[\"Lucida Bright\"]=!0,e.Melior=!0,e.Memphis=!0,e.Miller=!0,e.Minion=!0,e.Modern=!0,e[\"Mona Lisa\"]=!0,e[\"Mrs Eaves\"]=!0,e[\"MS Serif\"]=!0,e[\"Museo Slab\"]=!0,e[\"New York\"]=!0,e[\"Nimbus Roman\"]=!0,e[\"NPS Rawlinson Roadway\"]=!0,e.NuptialScript=!0,e.Palatino=!0,e.Perpetua=!0,e.Plantin=!0,e[\"Plantin Schoolbook\"]=!0,e.Playbill=!0,e[\"Poor Richard\"]=!0,e[\"Rawlinson Roadway\"]=!0,e.Renault=!0,e.Requiem=!0,e.Rockwell=!0,e.Roman=!0,e[\"Rotis Serif\"]=!0,e.Sabon=!0,e.Scala=!0,e.Seagull=!0,e.Sistina=!0,e.Souvenir=!0,e.STIX=!0,e[\"Stone Informal\"]=!0,e[\"Stone Serif\"]=!0,e.Sylfaen=!0,e.Times=!0,e.Trajan=!0,e[\"Trinité\"]=!0,e[\"Trump Mediaeval\"]=!0,e.Utopia=!0,e[\"Vale Type\"]=!0,e[\"Bitstream Vera\"]=!0,e[\"Vera Serif\"]=!0,e.Versailles=!0,e.Wanted=!0,e.Weiss=!0,e[\"Wide Latin\"]=!0,e.Windsor=!0,e.XITS=!0}),s=(0,a.getLookupTableFactory)(function(e){e.Dingbats=!0,e.Symbol=!0,e.ZapfDingbats=!0}),c=(0,a.getLookupTableFactory)(function(e){e[2]=10,e[3]=32,e[4]=33,e[5]=34,e[6]=35,e[7]=36,e[8]=37,e[9]=38,e[10]=39,e[11]=40,e[12]=41,e[13]=42,e[14]=43,e[15]=44,e[16]=45,e[17]=46,e[18]=47,e[19]=48,e[20]=49,e[21]=50,e[22]=51,e[23]=52,e[24]=53,e[25]=54,e[26]=55,e[27]=56,e[28]=57,e[29]=58,e[30]=894,e[31]=60,e[32]=61,e[33]=62,e[34]=63,e[35]=64,e[36]=65,e[37]=66,e[38]=67,e[39]=68,e[40]=69,e[41]=70,e[42]=71,e[43]=72,e[44]=73,e[45]=74,e[46]=75,e[47]=76,e[48]=77,e[49]=78,e[50]=79,e[51]=80,e[52]=81,e[53]=82,e[54]=83,e[55]=84,e[56]=85,e[57]=86,e[58]=87,e[59]=88,e[60]=89,e[61]=90,e[62]=91,e[63]=92,e[64]=93,e[65]=94,e[66]=95,e[67]=96,e[68]=97,e[69]=98,e[70]=99,e[71]=100,e[72]=101,e[73]=102,e[74]=103,e[75]=104,e[76]=105,e[77]=106,e[78]=107,e[79]=108,e[80]=109,e[81]=110,e[82]=111,e[83]=112,e[84]=113,e[85]=114,e[86]=115,e[87]=116,e[88]=117,e[89]=118,e[90]=119,e[91]=120,e[92]=121,e[93]=122,e[94]=123,e[95]=124,e[96]=125,e[97]=126,e[98]=196,e[99]=197,e[100]=199,e[101]=201,e[102]=209,e[103]=214,e[104]=220,e[105]=225,e[106]=224,e[107]=226,e[108]=228,e[109]=227,e[110]=229,e[111]=231,e[112]=233,e[113]=232,e[114]=234,e[115]=235,e[116]=237,e[117]=236,e[118]=238,e[119]=239,e[120]=241,e[121]=243,e[122]=242,e[123]=244,e[124]=246,e[125]=245,e[126]=250,e[127]=249,e[128]=251,e[129]=252,e[130]=8224,e[131]=176,e[132]=162,e[133]=163,e[134]=167,e[135]=8226,e[136]=182,e[137]=223,e[138]=174,e[139]=169,e[140]=8482,e[141]=180,e[142]=168,e[143]=8800,e[144]=198,e[145]=216,e[146]=8734,e[147]=177,e[148]=8804,e[149]=8805,e[150]=165,e[151]=181,e[152]=8706,e[153]=8721,e[154]=8719,e[156]=8747,e[157]=170,e[158]=186,e[159]=8486,e[160]=230,e[161]=248,e[162]=191,e[163]=161,e[164]=172,e[165]=8730,e[166]=402,e[167]=8776,e[168]=8710,e[169]=171,e[170]=187,e[171]=8230,e[210]=218,e[223]=711,e[224]=321,e[225]=322,e[227]=353,e[229]=382,e[234]=253,e[252]=263,e[253]=268,e[254]=269,e[258]=258,e[260]=260,e[261]=261,e[265]=280,e[266]=281,e[268]=283,e[269]=313,e[275]=323,e[276]=324,e[278]=328,e[284]=345,e[285]=346,e[286]=347,e[292]=367,e[295]=377,e[296]=378,e[298]=380,e[305]=963,e[306]=964,e[307]=966,e[308]=8215,e[309]=8252,e[310]=8319,e[311]=8359,e[312]=8592,e[313]=8593,e[337]=9552,e[493]=1039,e[494]=1040,e[705]=1524,e[706]=8362,e[710]=64288,e[711]=64298,e[759]=1617,e[761]=1776,e[763]=1778,e[775]=1652,e[777]=1764,e[778]=1780,e[779]=1781,e[780]=1782,e[782]=771,e[783]=64726,e[786]=8363,e[788]=8532,e[790]=768,e[791]=769,e[792]=768,e[795]=803,e[797]=64336,e[798]=64337,e[799]=64342,e[800]=64343,e[801]=64344,e[802]=64345,e[803]=64362,e[804]=64363,e[805]=64364,e[2424]=7821,e[2425]=7822,e[2426]=7823,e[2427]=7824,e[2428]=7825,e[2429]=7826,e[2430]=7827,e[2433]=7682,e[2678]=8045,e[2679]=8046,e[2830]=1552,e[2838]=686,e[2840]=751,e[2842]=753,e[2843]=754,e[2844]=755,e[2846]=757,e[2856]=767,e[2857]=848,e[2858]=849,e[2862]=853,e[2863]=854,e[2864]=855,e[2865]=861,e[2866]=862,e[2906]=7460,e[2908]=7462,e[2909]=7463,e[2910]=7464,e[2912]=7466,e[2913]=7467,e[2914]=7468,e[2916]=7470,e[2917]=7471,e[2918]=7472,e[2920]=7474,e[2921]=7475,e[2922]=7476,e[2924]=7478,e[2925]=7479,e[2926]=7480,e[2928]=7482,e[2929]=7483,e[2930]=7484,e[2932]=7486,e[2933]=7487,e[2934]=7488,e[2936]=7490,e[2937]=7491,e[2938]=7492,e[2940]=7494,e[2941]=7495,e[2942]=7496,e[2944]=7498,e[2946]=7500,e[2948]=7502,e[2950]=7504,e[2951]=7505,e[2952]=7506,e[2954]=7508,e[2955]=7509,e[2956]=7510,e[2958]=7512,e[2959]=7513,e[2960]=7514,e[2962]=7516,e[2963]=7517,e[2964]=7518,e[2966]=7520,e[2967]=7521,e[2968]=7522,e[2970]=7524,e[2971]=7525,e[2972]=7526,e[2974]=7528,e[2975]=7529,e[2976]=7530,e[2978]=1537,e[2979]=1538,e[2980]=1539,e[2982]=1549,e[2983]=1551,e[2984]=1552,e[2986]=1554,e[2987]=1555,e[2988]=1556,e[2990]=1623,e[2991]=1624,e[2995]=1775,e[2999]=1791,e[3002]=64290,e[3003]=64291,e[3004]=64292,e[3006]=64294,e[3007]=64295,e[3008]=64296,e[3011]=1900,e[3014]=8223,e[3015]=8244,e[3017]=7532,e[3018]=7533,e[3019]=7534,e[3075]=7590,e[3076]=7591,e[3079]=7594,e[3080]=7595,e[3083]=7598,e[3084]=7599,e[3087]=7602,e[3088]=7603,e[3091]=7606,e[3092]=7607,e[3095]=7610,e[3096]=7611,e[3099]=7614,e[3100]=7615,e[3103]=7618,e[3104]=7619,e[3107]=8337,e[3108]=8338,e[3116]=1884,e[3119]=1885,e[3120]=1885,e[3123]=1886,e[3124]=1886,e[3127]=1887,e[3128]=1887,e[3131]=1888,e[3132]=1888,e[3135]=1889,e[3136]=1889,e[3139]=1890,e[3140]=1890,e[3143]=1891,e[3144]=1891,e[3147]=1892,e[3148]=1892,e[3153]=580,e[3154]=581,e[3157]=584,e[3158]=585,e[3161]=588,e[3162]=589,e[3165]=891,e[3166]=892,e[3169]=1274,e[3170]=1275,e[3173]=1278,e[3174]=1279,e[3181]=7622,e[3182]=7623,e[3282]=11799,e[3316]=578,e[3379]=42785,e[3393]=1159,e[3416]=8377}),l=(0,a.getLookupTableFactory)(function(e){e[227]=322,e[264]=261,e[291]=346}),u=(0,a.getLookupTableFactory)(function(e){e[1]=32,e[4]=65,e[17]=66,e[18]=67,e[24]=68,e[28]=69,e[38]=70,e[39]=71,e[44]=72,e[47]=73,e[58]=74,e[60]=75,e[62]=76,e[68]=77,e[69]=78,e[75]=79,e[87]=80,e[89]=81,e[90]=82,e[94]=83,e[100]=84,e[104]=85,e[115]=86,e[116]=87,e[121]=88,e[122]=89,e[127]=90,e[258]=97,e[268]=261,e[271]=98,e[272]=99,e[273]=263,e[282]=100,e[286]=101,e[295]=281,e[296]=102,e[336]=103,e[346]=104,e[349]=105,e[361]=106,e[364]=107,e[367]=108,e[371]=322,e[373]=109,e[374]=110,e[381]=111,e[383]=243,e[393]=112,e[395]=113,e[396]=114,e[400]=115,e[401]=347,e[410]=116,e[437]=117,e[448]=118,e[449]=119,e[454]=120,e[455]=121,e[460]=122,e[463]=380,e[853]=44,e[855]=58,e[856]=46,e[876]=47,e[878]=45,e[882]=45,e[894]=40,e[895]=41,e[896]=91,e[897]=93,e[923]=64,e[1004]=48,e[1005]=49,e[1006]=50,e[1007]=51,e[1008]=52,e[1009]=53,e[1010]=54,e[1011]=55,e[1012]=56,e[1013]=57,e[1081]=37,e[1085]=43,e[1086]=45});t.getStdFontMap=i,t.getNonStdFontMap=n,t.getSerifFonts=o,t.getSymbolsFonts=s,t.getGlyphMapForStandardFonts=c,t.getSupplementalGlyphMapForArialBlack=l,t.getSupplementalGlyphMapForCalibri=u},function(e,t,r){\"use strict\";var a=r(0).getLookupTableFactory,i=a(function(e){e[63721]=169,e[63193]=169,e[63720]=174,e[63194]=174,e[63722]=8482,e[63195]=8482,e[63729]=9127,e[63730]=9128,e[63731]=9129,e[63740]=9131,e[63741]=9132,e[63742]=9133,e[63726]=9121,e[63727]=9122,e[63728]=9123,e[63737]=9124,e[63738]=9125,e[63739]=9126,e[63723]=9115,e[63724]=9116,e[63725]=9117,e[63734]=9118,e[63735]=9119,e[63736]=9120});var n=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];var o=a(function(e){e[\"¨\"]=\" ̈\",e[\"¯\"]=\" ̄\",e[\"´\"]=\" ́\",e[\"µ\"]=\"μ\",e[\"¸\"]=\" ̧\",e[\"Ĳ\"]=\"IJ\",e[\"ĳ\"]=\"ij\",e[\"Ŀ\"]=\"L·\",e[\"ŀ\"]=\"l·\",e[\"ŉ\"]=\"ʼn\",e[\"ſ\"]=\"s\",e[\"Ǆ\"]=\"DŽ\",e[\"ǅ\"]=\"Dž\",e[\"ǆ\"]=\"dž\",e[\"Ǉ\"]=\"LJ\",e[\"ǈ\"]=\"Lj\",e[\"ǉ\"]=\"lj\",e[\"Ǌ\"]=\"NJ\",e[\"ǋ\"]=\"Nj\",e[\"ǌ\"]=\"nj\",e[\"Ǳ\"]=\"DZ\",e[\"ǲ\"]=\"Dz\",e[\"ǳ\"]=\"dz\",e[\"˘\"]=\" ̆\",e[\"˙\"]=\" ̇\",e[\"˚\"]=\" ̊\",e[\"˛\"]=\" ̨\",e[\"˜\"]=\" ̃\",e[\"˝\"]=\" ̋\",e[\"ͺ\"]=\" ͅ\",e[\"΄\"]=\" ́\",e[\"ϐ\"]=\"β\",e[\"ϑ\"]=\"θ\",e[\"ϒ\"]=\"Υ\",e[\"ϕ\"]=\"φ\",e[\"ϖ\"]=\"π\",e[\"ϰ\"]=\"κ\",e[\"ϱ\"]=\"ρ\",e[\"ϲ\"]=\"ς\",e[\"ϴ\"]=\"Θ\",e[\"ϵ\"]=\"ε\",e[\"Ϲ\"]=\"Σ\",e[\"և\"]=\"եւ\",e[\"ٵ\"]=\"اٴ\",e[\"ٶ\"]=\"وٴ\",e[\"ٷ\"]=\"ۇٴ\",e[\"ٸ\"]=\"يٴ\",e[\"ำ\"]=\"ํา\",e[\"ຳ\"]=\"ໍາ\",e[\"ໜ\"]=\"ຫນ\",e[\"ໝ\"]=\"ຫມ\",e[\"ཷ\"]=\"ྲཱྀ\",e[\"ཹ\"]=\"ླཱྀ\",e[\"ẚ\"]=\"aʾ\",e[\"᾽\"]=\" ̓\",e[\"᾿\"]=\" ̓\",e[\"῀\"]=\" ͂\",e[\"῾\"]=\" ̔\",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\" \"]=\" \",e[\"‗\"]=\" ̳\",e[\"․\"]=\".\",e[\"‥\"]=\"..\",e[\"…\"]=\"...\",e[\"″\"]=\"′′\",e[\"‴\"]=\"′′′\",e[\"‶\"]=\"‵‵\",e[\"‷\"]=\"‵‵‵\",e[\"‼\"]=\"!!\",e[\"‾\"]=\" ̅\",e[\"⁇\"]=\"??\",e[\"⁈\"]=\"?!\",e[\"⁉\"]=\"!?\",e[\"⁗\"]=\"′′′′\",e[\" \"]=\" \",e[\"₨\"]=\"Rs\",e[\"℀\"]=\"a/c\",e[\"℁\"]=\"a/s\",e[\"℃\"]=\"°C\",e[\"℅\"]=\"c/o\",e[\"℆\"]=\"c/u\",e[\"ℇ\"]=\"Ɛ\",e[\"℉\"]=\"°F\",e[\"№\"]=\"No\",e[\"℡\"]=\"TEL\",e[\"ℵ\"]=\"א\",e[\"ℶ\"]=\"ב\",e[\"ℷ\"]=\"ג\",e[\"ℸ\"]=\"ד\",e[\"℻\"]=\"FAX\",e[\"Ⅰ\"]=\"I\",e[\"Ⅱ\"]=\"II\",e[\"Ⅲ\"]=\"III\",e[\"Ⅳ\"]=\"IV\",e[\"Ⅴ\"]=\"V\",e[\"Ⅵ\"]=\"VI\",e[\"Ⅶ\"]=\"VII\",e[\"Ⅷ\"]=\"VIII\",e[\"Ⅸ\"]=\"IX\",e[\"Ⅹ\"]=\"X\",e[\"Ⅺ\"]=\"XI\",e[\"Ⅻ\"]=\"XII\",e[\"Ⅼ\"]=\"L\",e[\"Ⅽ\"]=\"C\",e[\"Ⅾ\"]=\"D\",e[\"Ⅿ\"]=\"M\",e[\"ⅰ\"]=\"i\",e[\"ⅱ\"]=\"ii\",e[\"ⅲ\"]=\"iii\",e[\"ⅳ\"]=\"iv\",e[\"ⅴ\"]=\"v\",e[\"ⅵ\"]=\"vi\",e[\"ⅶ\"]=\"vii\",e[\"ⅷ\"]=\"viii\",e[\"ⅸ\"]=\"ix\",e[\"ⅹ\"]=\"x\",e[\"ⅺ\"]=\"xi\",e[\"ⅻ\"]=\"xii\",e[\"ⅼ\"]=\"l\",e[\"ⅽ\"]=\"c\",e[\"ⅾ\"]=\"d\",e[\"ⅿ\"]=\"m\",e[\"∬\"]=\"∫∫\",e[\"∭\"]=\"∫∫∫\",e[\"∯\"]=\"∮∮\",e[\"∰\"]=\"∮∮∮\",e[\"⑴\"]=\"(1)\",e[\"⑵\"]=\"(2)\",e[\"⑶\"]=\"(3)\",e[\"⑷\"]=\"(4)\",e[\"⑸\"]=\"(5)\",e[\"⑹\"]=\"(6)\",e[\"⑺\"]=\"(7)\",e[\"⑻\"]=\"(8)\",e[\"⑼\"]=\"(9)\",e[\"⑽\"]=\"(10)\",e[\"⑾\"]=\"(11)\",e[\"⑿\"]=\"(12)\",e[\"⒀\"]=\"(13)\",e[\"⒁\"]=\"(14)\",e[\"⒂\"]=\"(15)\",e[\"⒃\"]=\"(16)\",e[\"⒄\"]=\"(17)\",e[\"⒅\"]=\"(18)\",e[\"⒆\"]=\"(19)\",e[\"⒇\"]=\"(20)\",e[\"⒈\"]=\"1.\",e[\"⒉\"]=\"2.\",e[\"⒊\"]=\"3.\",e[\"⒋\"]=\"4.\",e[\"⒌\"]=\"5.\",e[\"⒍\"]=\"6.\",e[\"⒎\"]=\"7.\",e[\"⒏\"]=\"8.\",e[\"⒐\"]=\"9.\",e[\"⒑\"]=\"10.\",e[\"⒒\"]=\"11.\",e[\"⒓\"]=\"12.\",e[\"⒔\"]=\"13.\",e[\"⒕\"]=\"14.\",e[\"⒖\"]=\"15.\",e[\"⒗\"]=\"16.\",e[\"⒘\"]=\"17.\",e[\"⒙\"]=\"18.\",e[\"⒚\"]=\"19.\",e[\"⒛\"]=\"20.\",e[\"⒜\"]=\"(a)\",e[\"⒝\"]=\"(b)\",e[\"⒞\"]=\"(c)\",e[\"⒟\"]=\"(d)\",e[\"⒠\"]=\"(e)\",e[\"⒡\"]=\"(f)\",e[\"⒢\"]=\"(g)\",e[\"⒣\"]=\"(h)\",e[\"⒤\"]=\"(i)\",e[\"⒥\"]=\"(j)\",e[\"⒦\"]=\"(k)\",e[\"⒧\"]=\"(l)\",e[\"⒨\"]=\"(m)\",e[\"⒩\"]=\"(n)\",e[\"⒪\"]=\"(o)\",e[\"⒫\"]=\"(p)\",e[\"⒬\"]=\"(q)\",e[\"⒭\"]=\"(r)\",e[\"⒮\"]=\"(s)\",e[\"⒯\"]=\"(t)\",e[\"⒰\"]=\"(u)\",e[\"⒱\"]=\"(v)\",e[\"⒲\"]=\"(w)\",e[\"⒳\"]=\"(x)\",e[\"⒴\"]=\"(y)\",e[\"⒵\"]=\"(z)\",e[\"⨌\"]=\"∫∫∫∫\",e[\"⩴\"]=\"::=\",e[\"⩵\"]=\"==\",e[\"⩶\"]=\"===\",e[\"⺟\"]=\"母\",e[\"⻳\"]=\"龟\",e[\"⼀\"]=\"一\",e[\"⼁\"]=\"丨\",e[\"⼂\"]=\"丶\",e[\"⼃\"]=\"丿\",e[\"⼄\"]=\"乙\",e[\"⼅\"]=\"亅\",e[\"⼆\"]=\"二\",e[\"⼇\"]=\"亠\",e[\"⼈\"]=\"人\",e[\"⼉\"]=\"儿\",e[\"⼊\"]=\"入\",e[\"⼋\"]=\"八\",e[\"⼌\"]=\"冂\",e[\"⼍\"]=\"冖\",e[\"⼎\"]=\"冫\",e[\"⼏\"]=\"几\",e[\"⼐\"]=\"凵\",e[\"⼑\"]=\"刀\",e[\"⼒\"]=\"力\",e[\"⼓\"]=\"勹\",e[\"⼔\"]=\"匕\",e[\"⼕\"]=\"匚\",e[\"⼖\"]=\"匸\",e[\"⼗\"]=\"十\",e[\"⼘\"]=\"卜\",e[\"⼙\"]=\"卩\",e[\"⼚\"]=\"厂\",e[\"⼛\"]=\"厶\",e[\"⼜\"]=\"又\",e[\"⼝\"]=\"口\",e[\"⼞\"]=\"囗\",e[\"⼟\"]=\"土\",e[\"⼠\"]=\"士\",e[\"⼡\"]=\"夂\",e[\"⼢\"]=\"夊\",e[\"⼣\"]=\"夕\",e[\"⼤\"]=\"大\",e[\"⼥\"]=\"女\",e[\"⼦\"]=\"子\",e[\"⼧\"]=\"宀\",e[\"⼨\"]=\"寸\",e[\"⼩\"]=\"小\",e[\"⼪\"]=\"尢\",e[\"⼫\"]=\"尸\",e[\"⼬\"]=\"屮\",e[\"⼭\"]=\"山\",e[\"⼮\"]=\"巛\",e[\"⼯\"]=\"工\",e[\"⼰\"]=\"己\",e[\"⼱\"]=\"巾\",e[\"⼲\"]=\"干\",e[\"⼳\"]=\"幺\",e[\"⼴\"]=\"广\",e[\"⼵\"]=\"廴\",e[\"⼶\"]=\"廾\",e[\"⼷\"]=\"弋\",e[\"⼸\"]=\"弓\",e[\"⼹\"]=\"彐\",e[\"⼺\"]=\"彡\",e[\"⼻\"]=\"彳\",e[\"⼼\"]=\"心\",e[\"⼽\"]=\"戈\",e[\"⼾\"]=\"戶\",e[\"⼿\"]=\"手\",e[\"⽀\"]=\"支\",e[\"⽁\"]=\"攴\",e[\"⽂\"]=\"文\",e[\"⽃\"]=\"斗\",e[\"⽄\"]=\"斤\",e[\"⽅\"]=\"方\",e[\"⽆\"]=\"无\",e[\"⽇\"]=\"日\",e[\"⽈\"]=\"曰\",e[\"⽉\"]=\"月\",e[\"⽊\"]=\"木\",e[\"⽋\"]=\"欠\",e[\"⽌\"]=\"止\",e[\"⽍\"]=\"歹\",e[\"⽎\"]=\"殳\",e[\"⽏\"]=\"毋\",e[\"⽐\"]=\"比\",e[\"⽑\"]=\"毛\",e[\"⽒\"]=\"氏\",e[\"⽓\"]=\"气\",e[\"⽔\"]=\"水\",e[\"⽕\"]=\"火\",e[\"⽖\"]=\"爪\",e[\"⽗\"]=\"父\",e[\"⽘\"]=\"爻\",e[\"⽙\"]=\"爿\",e[\"⽚\"]=\"片\",e[\"⽛\"]=\"牙\",e[\"⽜\"]=\"牛\",e[\"⽝\"]=\"犬\",e[\"⽞\"]=\"玄\",e[\"⽟\"]=\"玉\",e[\"⽠\"]=\"瓜\",e[\"⽡\"]=\"瓦\",e[\"⽢\"]=\"甘\",e[\"⽣\"]=\"生\",e[\"⽤\"]=\"用\",e[\"⽥\"]=\"田\",e[\"⽦\"]=\"疋\",e[\"⽧\"]=\"疒\",e[\"⽨\"]=\"癶\",e[\"⽩\"]=\"白\",e[\"⽪\"]=\"皮\",e[\"⽫\"]=\"皿\",e[\"⽬\"]=\"目\",e[\"⽭\"]=\"矛\",e[\"⽮\"]=\"矢\",e[\"⽯\"]=\"石\",e[\"⽰\"]=\"示\",e[\"⽱\"]=\"禸\",e[\"⽲\"]=\"禾\",e[\"⽳\"]=\"穴\",e[\"⽴\"]=\"立\",e[\"⽵\"]=\"竹\",e[\"⽶\"]=\"米\",e[\"⽷\"]=\"糸\",e[\"⽸\"]=\"缶\",e[\"⽹\"]=\"网\",e[\"⽺\"]=\"羊\",e[\"⽻\"]=\"羽\",e[\"⽼\"]=\"老\",e[\"⽽\"]=\"而\",e[\"⽾\"]=\"耒\",e[\"⽿\"]=\"耳\",e[\"⾀\"]=\"聿\",e[\"⾁\"]=\"肉\",e[\"⾂\"]=\"臣\",e[\"⾃\"]=\"自\",e[\"⾄\"]=\"至\",e[\"⾅\"]=\"臼\",e[\"⾆\"]=\"舌\",e[\"⾇\"]=\"舛\",e[\"⾈\"]=\"舟\",e[\"⾉\"]=\"艮\",e[\"⾊\"]=\"色\",e[\"⾋\"]=\"艸\",e[\"⾌\"]=\"虍\",e[\"⾍\"]=\"虫\",e[\"⾎\"]=\"血\",e[\"⾏\"]=\"行\",e[\"⾐\"]=\"衣\",e[\"⾑\"]=\"襾\",e[\"⾒\"]=\"見\",e[\"⾓\"]=\"角\",e[\"⾔\"]=\"言\",e[\"⾕\"]=\"谷\",e[\"⾖\"]=\"豆\",e[\"⾗\"]=\"豕\",e[\"⾘\"]=\"豸\",e[\"⾙\"]=\"貝\",e[\"⾚\"]=\"赤\",e[\"⾛\"]=\"走\",e[\"⾜\"]=\"足\",e[\"⾝\"]=\"身\",e[\"⾞\"]=\"車\",e[\"⾟\"]=\"辛\",e[\"⾠\"]=\"辰\",e[\"⾡\"]=\"辵\",e[\"⾢\"]=\"邑\",e[\"⾣\"]=\"酉\",e[\"⾤\"]=\"釆\",e[\"⾥\"]=\"里\",e[\"⾦\"]=\"金\",e[\"⾧\"]=\"長\",e[\"⾨\"]=\"門\",e[\"⾩\"]=\"阜\",e[\"⾪\"]=\"隶\",e[\"⾫\"]=\"隹\",e[\"⾬\"]=\"雨\",e[\"⾭\"]=\"靑\",e[\"⾮\"]=\"非\",e[\"⾯\"]=\"面\",e[\"⾰\"]=\"革\",e[\"⾱\"]=\"韋\",e[\"⾲\"]=\"韭\",e[\"⾳\"]=\"音\",e[\"⾴\"]=\"頁\",e[\"⾵\"]=\"風\",e[\"⾶\"]=\"飛\",e[\"⾷\"]=\"食\",e[\"⾸\"]=\"首\",e[\"⾹\"]=\"香\",e[\"⾺\"]=\"馬\",e[\"⾻\"]=\"骨\",e[\"⾼\"]=\"高\",e[\"⾽\"]=\"髟\",e[\"⾾\"]=\"鬥\",e[\"⾿\"]=\"鬯\",e[\"⿀\"]=\"鬲\",e[\"⿁\"]=\"鬼\",e[\"⿂\"]=\"魚\",e[\"⿃\"]=\"鳥\",e[\"⿄\"]=\"鹵\",e[\"⿅\"]=\"鹿\",e[\"⿆\"]=\"麥\",e[\"⿇\"]=\"麻\",e[\"⿈\"]=\"黃\",e[\"⿉\"]=\"黍\",e[\"⿊\"]=\"黑\",e[\"⿋\"]=\"黹\",e[\"⿌\"]=\"黽\",e[\"⿍\"]=\"鼎\",e[\"⿎\"]=\"鼓\",e[\"⿏\"]=\"鼠\",e[\"⿐\"]=\"鼻\",e[\"⿑\"]=\"齊\",e[\"⿒\"]=\"齒\",e[\"⿓\"]=\"龍\",e[\"⿔\"]=\"龜\",e[\"⿕\"]=\"龠\",e[\"〶\"]=\"〒\",e[\"〸\"]=\"十\",e[\"〹\"]=\"卄\",e[\"〺\"]=\"卅\",e[\"゛\"]=\" ゙\",e[\"゜\"]=\" ゚\",e[\"ㄱ\"]=\"ᄀ\",e[\"ㄲ\"]=\"ᄁ\",e[\"ㄳ\"]=\"ᆪ\",e[\"ㄴ\"]=\"ᄂ\",e[\"ㄵ\"]=\"ᆬ\",e[\"ㄶ\"]=\"ᆭ\",e[\"ㄷ\"]=\"ᄃ\",e[\"ㄸ\"]=\"ᄄ\",e[\"ㄹ\"]=\"ᄅ\",e[\"ㄺ\"]=\"ᆰ\",e[\"ㄻ\"]=\"ᆱ\",e[\"ㄼ\"]=\"ᆲ\",e[\"ㄽ\"]=\"ᆳ\",e[\"ㄾ\"]=\"ᆴ\",e[\"ㄿ\"]=\"ᆵ\",e[\"ㅀ\"]=\"ᄚ\",e[\"ㅁ\"]=\"ᄆ\",e[\"ㅂ\"]=\"ᄇ\",e[\"ㅃ\"]=\"ᄈ\",e[\"ㅄ\"]=\"ᄡ\",e[\"ㅅ\"]=\"ᄉ\",e[\"ㅆ\"]=\"ᄊ\",e[\"ㅇ\"]=\"ᄋ\",e[\"ㅈ\"]=\"ᄌ\",e[\"ㅉ\"]=\"ᄍ\",e[\"ㅊ\"]=\"ᄎ\",e[\"ㅋ\"]=\"ᄏ\",e[\"ㅌ\"]=\"ᄐ\",e[\"ㅍ\"]=\"ᄑ\",e[\"ㅎ\"]=\"ᄒ\",e[\"ㅏ\"]=\"ᅡ\",e[\"ㅐ\"]=\"ᅢ\",e[\"ㅑ\"]=\"ᅣ\",e[\"ㅒ\"]=\"ᅤ\",e[\"ㅓ\"]=\"ᅥ\",e[\"ㅔ\"]=\"ᅦ\",e[\"ㅕ\"]=\"ᅧ\",e[\"ㅖ\"]=\"ᅨ\",e[\"ㅗ\"]=\"ᅩ\",e[\"ㅘ\"]=\"ᅪ\",e[\"ㅙ\"]=\"ᅫ\",e[\"ㅚ\"]=\"ᅬ\",e[\"ㅛ\"]=\"ᅭ\",e[\"ㅜ\"]=\"ᅮ\",e[\"ㅝ\"]=\"ᅯ\",e[\"ㅞ\"]=\"ᅰ\",e[\"ㅟ\"]=\"ᅱ\",e[\"ㅠ\"]=\"ᅲ\",e[\"ㅡ\"]=\"ᅳ\",e[\"ㅢ\"]=\"ᅴ\",e[\"ㅣ\"]=\"ᅵ\",e[\"ㅤ\"]=\"ᅠ\",e[\"ㅥ\"]=\"ᄔ\",e[\"ㅦ\"]=\"ᄕ\",e[\"ㅧ\"]=\"ᇇ\",e[\"ㅨ\"]=\"ᇈ\",e[\"ㅩ\"]=\"ᇌ\",e[\"ㅪ\"]=\"ᇎ\",e[\"ㅫ\"]=\"ᇓ\",e[\"ㅬ\"]=\"ᇗ\",e[\"ㅭ\"]=\"ᇙ\",e[\"ㅮ\"]=\"ᄜ\",e[\"ㅯ\"]=\"ᇝ\",e[\"ㅰ\"]=\"ᇟ\",e[\"ㅱ\"]=\"ᄝ\",e[\"ㅲ\"]=\"ᄞ\",e[\"ㅳ\"]=\"ᄠ\",e[\"ㅴ\"]=\"ᄢ\",e[\"ㅵ\"]=\"ᄣ\",e[\"ㅶ\"]=\"ᄧ\",e[\"ㅷ\"]=\"ᄩ\",e[\"ㅸ\"]=\"ᄫ\",e[\"ㅹ\"]=\"ᄬ\",e[\"ㅺ\"]=\"ᄭ\",e[\"ㅻ\"]=\"ᄮ\",e[\"ㅼ\"]=\"ᄯ\",e[\"ㅽ\"]=\"ᄲ\",e[\"ㅾ\"]=\"ᄶ\",e[\"ㅿ\"]=\"ᅀ\",e[\"ㆀ\"]=\"ᅇ\",e[\"ㆁ\"]=\"ᅌ\",e[\"ㆂ\"]=\"ᇱ\",e[\"ㆃ\"]=\"ᇲ\",e[\"ㆄ\"]=\"ᅗ\",e[\"ㆅ\"]=\"ᅘ\",e[\"ㆆ\"]=\"ᅙ\",e[\"ㆇ\"]=\"ᆄ\",e[\"ㆈ\"]=\"ᆅ\",e[\"ㆉ\"]=\"ᆈ\",e[\"ㆊ\"]=\"ᆑ\",e[\"ㆋ\"]=\"ᆒ\",e[\"ㆌ\"]=\"ᆔ\",e[\"ㆍ\"]=\"ᆞ\",e[\"ㆎ\"]=\"ᆡ\",e[\"㈀\"]=\"(ᄀ)\",e[\"㈁\"]=\"(ᄂ)\",e[\"㈂\"]=\"(ᄃ)\",e[\"㈃\"]=\"(ᄅ)\",e[\"㈄\"]=\"(ᄆ)\",e[\"㈅\"]=\"(ᄇ)\",e[\"㈆\"]=\"(ᄉ)\",e[\"㈇\"]=\"(ᄋ)\",e[\"㈈\"]=\"(ᄌ)\",e[\"㈉\"]=\"(ᄎ)\",e[\"㈊\"]=\"(ᄏ)\",e[\"㈋\"]=\"(ᄐ)\",e[\"㈌\"]=\"(ᄑ)\",e[\"㈍\"]=\"(ᄒ)\",e[\"㈎\"]=\"(가)\",e[\"㈏\"]=\"(나)\",e[\"㈐\"]=\"(다)\",e[\"㈑\"]=\"(라)\",e[\"㈒\"]=\"(마)\",e[\"㈓\"]=\"(바)\",e[\"㈔\"]=\"(사)\",e[\"㈕\"]=\"(아)\",e[\"㈖\"]=\"(자)\",e[\"㈗\"]=\"(차)\",e[\"㈘\"]=\"(카)\",e[\"㈙\"]=\"(타)\",e[\"㈚\"]=\"(파)\",e[\"㈛\"]=\"(하)\",e[\"㈜\"]=\"(주)\",e[\"㈝\"]=\"(오전)\",e[\"㈞\"]=\"(오후)\",e[\"㈠\"]=\"(一)\",e[\"㈡\"]=\"(二)\",e[\"㈢\"]=\"(三)\",e[\"㈣\"]=\"(四)\",e[\"㈤\"]=\"(五)\",e[\"㈥\"]=\"(六)\",e[\"㈦\"]=\"(七)\",e[\"㈧\"]=\"(八)\",e[\"㈨\"]=\"(九)\",e[\"㈩\"]=\"(十)\",e[\"㈪\"]=\"(月)\",e[\"㈫\"]=\"(火)\",e[\"㈬\"]=\"(水)\",e[\"㈭\"]=\"(木)\",e[\"㈮\"]=\"(金)\",e[\"㈯\"]=\"(土)\",e[\"㈰\"]=\"(日)\",e[\"㈱\"]=\"(株)\",e[\"㈲\"]=\"(有)\",e[\"㈳\"]=\"(社)\",e[\"㈴\"]=\"(名)\",e[\"㈵\"]=\"(特)\",e[\"㈶\"]=\"(財)\",e[\"㈷\"]=\"(祝)\",e[\"㈸\"]=\"(労)\",e[\"㈹\"]=\"(代)\",e[\"㈺\"]=\"(呼)\",e[\"㈻\"]=\"(学)\",e[\"㈼\"]=\"(監)\",e[\"㈽\"]=\"(企)\",e[\"㈾\"]=\"(資)\",e[\"㈿\"]=\"(協)\",e[\"㉀\"]=\"(祭)\",e[\"㉁\"]=\"(休)\",e[\"㉂\"]=\"(自)\",e[\"㉃\"]=\"(至)\",e[\"㋀\"]=\"1月\",e[\"㋁\"]=\"2月\",e[\"㋂\"]=\"3月\",e[\"㋃\"]=\"4月\",e[\"㋄\"]=\"5月\",e[\"㋅\"]=\"6月\",e[\"㋆\"]=\"7月\",e[\"㋇\"]=\"8月\",e[\"㋈\"]=\"9月\",e[\"㋉\"]=\"10月\",e[\"㋊\"]=\"11月\",e[\"㋋\"]=\"12月\",e[\"㍘\"]=\"0点\",e[\"㍙\"]=\"1点\",e[\"㍚\"]=\"2点\",e[\"㍛\"]=\"3点\",e[\"㍜\"]=\"4点\",e[\"㍝\"]=\"5点\",e[\"㍞\"]=\"6点\",e[\"㍟\"]=\"7点\",e[\"㍠\"]=\"8点\",e[\"㍡\"]=\"9点\",e[\"㍢\"]=\"10点\",e[\"㍣\"]=\"11点\",e[\"㍤\"]=\"12点\",e[\"㍥\"]=\"13点\",e[\"㍦\"]=\"14点\",e[\"㍧\"]=\"15点\",e[\"㍨\"]=\"16点\",e[\"㍩\"]=\"17点\",e[\"㍪\"]=\"18点\",e[\"㍫\"]=\"19点\",e[\"㍬\"]=\"20点\",e[\"㍭\"]=\"21点\",e[\"㍮\"]=\"22点\",e[\"㍯\"]=\"23点\",e[\"㍰\"]=\"24点\",e[\"㏠\"]=\"1日\",e[\"㏡\"]=\"2日\",e[\"㏢\"]=\"3日\",e[\"㏣\"]=\"4日\",e[\"㏤\"]=\"5日\",e[\"㏥\"]=\"6日\",e[\"㏦\"]=\"7日\",e[\"㏧\"]=\"8日\",e[\"㏨\"]=\"9日\",e[\"㏩\"]=\"10日\",e[\"㏪\"]=\"11日\",e[\"㏫\"]=\"12日\",e[\"㏬\"]=\"13日\",e[\"㏭\"]=\"14日\",e[\"㏮\"]=\"15日\",e[\"㏯\"]=\"16日\",e[\"㏰\"]=\"17日\",e[\"㏱\"]=\"18日\",e[\"㏲\"]=\"19日\",e[\"㏳\"]=\"20日\",e[\"㏴\"]=\"21日\",e[\"㏵\"]=\"22日\",e[\"㏶\"]=\"23日\",e[\"㏷\"]=\"24日\",e[\"㏸\"]=\"25日\",e[\"㏹\"]=\"26日\",e[\"㏺\"]=\"27日\",e[\"㏻\"]=\"28日\",e[\"㏼\"]=\"29日\",e[\"㏽\"]=\"30日\",e[\"㏾\"]=\"31日\",e[\"ﬀ\"]=\"ff\",e[\"ﬁ\"]=\"fi\",e[\"ﬂ\"]=\"fl\",e[\"ﬃ\"]=\"ffi\",e[\"ﬄ\"]=\"ffl\",e[\"ﬅ\"]=\"ſt\",e[\"ﬆ\"]=\"st\",e[\"ﬓ\"]=\"մն\",e[\"ﬔ\"]=\"մե\",e[\"ﬕ\"]=\"մի\",e[\"ﬖ\"]=\"վն\",e[\"ﬗ\"]=\"մխ\",e[\"ﭏ\"]=\"אל\",e[\"ﭐ\"]=\"ٱ\",e[\"ﭑ\"]=\"ٱ\",e[\"ﭒ\"]=\"ٻ\",e[\"ﭓ\"]=\"ٻ\",e[\"ﭔ\"]=\"ٻ\",e[\"ﭕ\"]=\"ٻ\",e[\"ﭖ\"]=\"پ\",e[\"ﭗ\"]=\"پ\",e[\"ﭘ\"]=\"پ\",e[\"ﭙ\"]=\"پ\",e[\"ﭚ\"]=\"ڀ\",e[\"ﭛ\"]=\"ڀ\",e[\"ﭜ\"]=\"ڀ\",e[\"ﭝ\"]=\"ڀ\",e[\"ﭞ\"]=\"ٺ\",e[\"ﭟ\"]=\"ٺ\",e[\"ﭠ\"]=\"ٺ\",e[\"ﭡ\"]=\"ٺ\",e[\"ﭢ\"]=\"ٿ\",e[\"ﭣ\"]=\"ٿ\",e[\"ﭤ\"]=\"ٿ\",e[\"ﭥ\"]=\"ٿ\",e[\"ﭦ\"]=\"ٹ\",e[\"ﭧ\"]=\"ٹ\",e[\"ﭨ\"]=\"ٹ\",e[\"ﭩ\"]=\"ٹ\",e[\"ﭪ\"]=\"ڤ\",e[\"ﭫ\"]=\"ڤ\",e[\"ﭬ\"]=\"ڤ\",e[\"ﭭ\"]=\"ڤ\",e[\"ﭮ\"]=\"ڦ\",e[\"ﭯ\"]=\"ڦ\",e[\"ﭰ\"]=\"ڦ\",e[\"ﭱ\"]=\"ڦ\",e[\"ﭲ\"]=\"ڄ\",e[\"ﭳ\"]=\"ڄ\",e[\"ﭴ\"]=\"ڄ\",e[\"ﭵ\"]=\"ڄ\",e[\"ﭶ\"]=\"ڃ\",e[\"ﭷ\"]=\"ڃ\",e[\"ﭸ\"]=\"ڃ\",e[\"ﭹ\"]=\"ڃ\",e[\"ﭺ\"]=\"چ\",e[\"ﭻ\"]=\"چ\",e[\"ﭼ\"]=\"چ\",e[\"ﭽ\"]=\"چ\",e[\"ﭾ\"]=\"ڇ\",e[\"ﭿ\"]=\"ڇ\",e[\"ﮀ\"]=\"ڇ\",e[\"ﮁ\"]=\"ڇ\",e[\"ﮂ\"]=\"ڍ\",e[\"ﮃ\"]=\"ڍ\",e[\"ﮄ\"]=\"ڌ\",e[\"ﮅ\"]=\"ڌ\",e[\"ﮆ\"]=\"ڎ\",e[\"ﮇ\"]=\"ڎ\",e[\"ﮈ\"]=\"ڈ\",e[\"ﮉ\"]=\"ڈ\",e[\"ﮊ\"]=\"ژ\",e[\"ﮋ\"]=\"ژ\",e[\"ﮌ\"]=\"ڑ\",e[\"ﮍ\"]=\"ڑ\",e[\"ﮎ\"]=\"ک\",e[\"ﮏ\"]=\"ک\",e[\"ﮐ\"]=\"ک\",e[\"ﮑ\"]=\"ک\",e[\"ﮒ\"]=\"گ\",e[\"ﮓ\"]=\"گ\",e[\"ﮔ\"]=\"گ\",e[\"ﮕ\"]=\"گ\",e[\"ﮖ\"]=\"ڳ\",e[\"ﮗ\"]=\"ڳ\",e[\"ﮘ\"]=\"ڳ\",e[\"ﮙ\"]=\"ڳ\",e[\"ﮚ\"]=\"ڱ\",e[\"ﮛ\"]=\"ڱ\",e[\"ﮜ\"]=\"ڱ\",e[\"ﮝ\"]=\"ڱ\",e[\"ﮞ\"]=\"ں\",e[\"ﮟ\"]=\"ں\",e[\"ﮠ\"]=\"ڻ\",e[\"ﮡ\"]=\"ڻ\",e[\"ﮢ\"]=\"ڻ\",e[\"ﮣ\"]=\"ڻ\",e[\"ﮤ\"]=\"ۀ\",e[\"ﮥ\"]=\"ۀ\",e[\"ﮦ\"]=\"ہ\",e[\"ﮧ\"]=\"ہ\",e[\"ﮨ\"]=\"ہ\",e[\"ﮩ\"]=\"ہ\",e[\"ﮪ\"]=\"ھ\",e[\"ﮫ\"]=\"ھ\",e[\"ﮬ\"]=\"ھ\",e[\"ﮭ\"]=\"ھ\",e[\"ﮮ\"]=\"ے\",e[\"ﮯ\"]=\"ے\",e[\"ﮰ\"]=\"ۓ\",e[\"ﮱ\"]=\"ۓ\",e[\"ﯓ\"]=\"ڭ\",e[\"ﯔ\"]=\"ڭ\",e[\"ﯕ\"]=\"ڭ\",e[\"ﯖ\"]=\"ڭ\",e[\"ﯗ\"]=\"ۇ\",e[\"ﯘ\"]=\"ۇ\",e[\"ﯙ\"]=\"ۆ\",e[\"ﯚ\"]=\"ۆ\",e[\"ﯛ\"]=\"ۈ\",e[\"ﯜ\"]=\"ۈ\",e[\"ﯝ\"]=\"ٷ\",e[\"ﯞ\"]=\"ۋ\",e[\"ﯟ\"]=\"ۋ\",e[\"ﯠ\"]=\"ۅ\",e[\"ﯡ\"]=\"ۅ\",e[\"ﯢ\"]=\"ۉ\",e[\"ﯣ\"]=\"ۉ\",e[\"ﯤ\"]=\"ې\",e[\"ﯥ\"]=\"ې\",e[\"ﯦ\"]=\"ې\",e[\"ﯧ\"]=\"ې\",e[\"ﯨ\"]=\"ى\",e[\"ﯩ\"]=\"ى\",e[\"ﯪ\"]=\"ئا\",e[\"ﯫ\"]=\"ئا\",e[\"ﯬ\"]=\"ئە\",e[\"ﯭ\"]=\"ئە\",e[\"ﯮ\"]=\"ئو\",e[\"ﯯ\"]=\"ئو\",e[\"ﯰ\"]=\"ئۇ\",e[\"ﯱ\"]=\"ئۇ\",e[\"ﯲ\"]=\"ئۆ\",e[\"ﯳ\"]=\"ئۆ\",e[\"ﯴ\"]=\"ئۈ\",e[\"ﯵ\"]=\"ئۈ\",e[\"ﯶ\"]=\"ئې\";e[\"ﯷ\"]=\"ئې\",e[\"ﯸ\"]=\"ئې\",e[\"ﯹ\"]=\"ئى\",e[\"ﯺ\"]=\"ئى\",e[\"ﯻ\"]=\"ئى\",e[\"ﯼ\"]=\"ی\",e[\"ﯽ\"]=\"ی\",e[\"ﯾ\"]=\"ی\",e[\"ﯿ\"]=\"ی\",e[\"ﰀ\"]=\"ئج\",e[\"ﰁ\"]=\"ئح\",e[\"ﰂ\"]=\"ئم\",e[\"ﰃ\"]=\"ئى\",e[\"ﰄ\"]=\"ئي\",e[\"ﰅ\"]=\"بج\",e[\"ﰆ\"]=\"بح\",e[\"ﰇ\"]=\"بخ\",e[\"ﰈ\"]=\"بم\",e[\"ﰉ\"]=\"بى\",e[\"ﰊ\"]=\"بي\",e[\"ﰋ\"]=\"تج\",e[\"ﰌ\"]=\"تح\",e[\"ﰍ\"]=\"تخ\",e[\"ﰎ\"]=\"تم\",e[\"ﰏ\"]=\"تى\",e[\"ﰐ\"]=\"تي\",e[\"ﰑ\"]=\"ثج\",e[\"ﰒ\"]=\"ثم\",e[\"ﰓ\"]=\"ثى\",e[\"ﰔ\"]=\"ثي\",e[\"ﰕ\"]=\"جح\",e[\"ﰖ\"]=\"جم\",e[\"ﰗ\"]=\"حج\",e[\"ﰘ\"]=\"حم\",e[\"ﰙ\"]=\"خج\",e[\"ﰚ\"]=\"خح\",e[\"ﰛ\"]=\"خم\",e[\"ﰜ\"]=\"سج\",e[\"ﰝ\"]=\"سح\",e[\"ﰞ\"]=\"سخ\",e[\"ﰟ\"]=\"سم\",e[\"ﰠ\"]=\"صح\",e[\"ﰡ\"]=\"صم\",e[\"ﰢ\"]=\"ضج\",e[\"ﰣ\"]=\"ضح\",e[\"ﰤ\"]=\"ضخ\",e[\"ﰥ\"]=\"ضم\",e[\"ﰦ\"]=\"طح\",e[\"ﰧ\"]=\"طم\",e[\"ﰨ\"]=\"ظم\",e[\"ﰩ\"]=\"عج\",e[\"ﰪ\"]=\"عم\",e[\"ﰫ\"]=\"غج\",e[\"ﰬ\"]=\"غم\",e[\"ﰭ\"]=\"فج\",e[\"ﰮ\"]=\"فح\",e[\"ﰯ\"]=\"فخ\",e[\"ﰰ\"]=\"فم\",e[\"ﰱ\"]=\"فى\",e[\"ﰲ\"]=\"في\",e[\"ﰳ\"]=\"قح\",e[\"ﰴ\"]=\"قم\",e[\"ﰵ\"]=\"قى\",e[\"ﰶ\"]=\"قي\",e[\"ﰷ\"]=\"كا\",e[\"ﰸ\"]=\"كج\",e[\"ﰹ\"]=\"كح\",e[\"ﰺ\"]=\"كخ\",e[\"ﰻ\"]=\"كل\",e[\"ﰼ\"]=\"كم\",e[\"ﰽ\"]=\"كى\",e[\"ﰾ\"]=\"كي\",e[\"ﰿ\"]=\"لج\",e[\"ﱀ\"]=\"لح\",e[\"ﱁ\"]=\"لخ\",e[\"ﱂ\"]=\"لم\",e[\"ﱃ\"]=\"لى\",e[\"ﱄ\"]=\"لي\",e[\"ﱅ\"]=\"مج\",e[\"ﱆ\"]=\"مح\",e[\"ﱇ\"]=\"مخ\",e[\"ﱈ\"]=\"مم\",e[\"ﱉ\"]=\"مى\",e[\"ﱊ\"]=\"مي\",e[\"ﱋ\"]=\"نج\",e[\"ﱌ\"]=\"نح\",e[\"ﱍ\"]=\"نخ\",e[\"ﱎ\"]=\"نم\",e[\"ﱏ\"]=\"نى\",e[\"ﱐ\"]=\"ني\",e[\"ﱑ\"]=\"هج\",e[\"ﱒ\"]=\"هم\",e[\"ﱓ\"]=\"هى\",e[\"ﱔ\"]=\"هي\",e[\"ﱕ\"]=\"يج\",e[\"ﱖ\"]=\"يح\",e[\"ﱗ\"]=\"يخ\",e[\"ﱘ\"]=\"يم\",e[\"ﱙ\"]=\"يى\",e[\"ﱚ\"]=\"يي\",e[\"ﱛ\"]=\"ذٰ\",e[\"ﱜ\"]=\"رٰ\",e[\"ﱝ\"]=\"ىٰ\",e[\"ﱞ\"]=\" ٌّ\",e[\"ﱟ\"]=\" ٍّ\",e[\"ﱠ\"]=\" َّ\",e[\"ﱡ\"]=\" ُّ\",e[\"ﱢ\"]=\" ِّ\",e[\"ﱣ\"]=\" ّٰ\",e[\"ﱤ\"]=\"ئر\",e[\"ﱥ\"]=\"ئز\",e[\"ﱦ\"]=\"ئم\",e[\"ﱧ\"]=\"ئن\",e[\"ﱨ\"]=\"ئى\",e[\"ﱩ\"]=\"ئي\",e[\"ﱪ\"]=\"بر\",e[\"ﱫ\"]=\"بز\",e[\"ﱬ\"]=\"بم\",e[\"ﱭ\"]=\"بن\",e[\"ﱮ\"]=\"بى\",e[\"ﱯ\"]=\"بي\",e[\"ﱰ\"]=\"تر\",e[\"ﱱ\"]=\"تز\",e[\"ﱲ\"]=\"تم\",e[\"ﱳ\"]=\"تن\",e[\"ﱴ\"]=\"تى\",e[\"ﱵ\"]=\"تي\",e[\"ﱶ\"]=\"ثر\",e[\"ﱷ\"]=\"ثز\",e[\"ﱸ\"]=\"ثم\",e[\"ﱹ\"]=\"ثن\",e[\"ﱺ\"]=\"ثى\",e[\"ﱻ\"]=\"ثي\",e[\"ﱼ\"]=\"فى\",e[\"ﱽ\"]=\"في\",e[\"ﱾ\"]=\"قى\",e[\"ﱿ\"]=\"قي\",e[\"ﲀ\"]=\"كا\",e[\"ﲁ\"]=\"كل\",e[\"ﲂ\"]=\"كم\",e[\"ﲃ\"]=\"كى\",e[\"ﲄ\"]=\"كي\",e[\"ﲅ\"]=\"لم\",e[\"ﲆ\"]=\"لى\",e[\"ﲇ\"]=\"لي\",e[\"ﲈ\"]=\"ما\",e[\"ﲉ\"]=\"مم\",e[\"ﲊ\"]=\"نر\",e[\"ﲋ\"]=\"نز\",e[\"ﲌ\"]=\"نم\",e[\"ﲍ\"]=\"نن\",e[\"ﲎ\"]=\"نى\",e[\"ﲏ\"]=\"ني\",e[\"ﲐ\"]=\"ىٰ\",e[\"ﲑ\"]=\"ير\",e[\"ﲒ\"]=\"يز\",e[\"ﲓ\"]=\"يم\",e[\"ﲔ\"]=\"ين\",e[\"ﲕ\"]=\"يى\",e[\"ﲖ\"]=\"يي\",e[\"ﲗ\"]=\"ئج\",e[\"ﲘ\"]=\"ئح\",e[\"ﲙ\"]=\"ئخ\",e[\"ﲚ\"]=\"ئم\",e[\"ﲛ\"]=\"ئه\",e[\"ﲜ\"]=\"بج\",e[\"ﲝ\"]=\"بح\",e[\"ﲞ\"]=\"بخ\",e[\"ﲟ\"]=\"بم\",e[\"ﲠ\"]=\"به\",e[\"ﲡ\"]=\"تج\",e[\"ﲢ\"]=\"تح\",e[\"ﲣ\"]=\"تخ\",e[\"ﲤ\"]=\"تم\",e[\"ﲥ\"]=\"ته\",e[\"ﲦ\"]=\"ثم\",e[\"ﲧ\"]=\"جح\",e[\"ﲨ\"]=\"جم\",e[\"ﲩ\"]=\"حج\",e[\"ﲪ\"]=\"حم\",e[\"ﲫ\"]=\"خج\",e[\"ﲬ\"]=\"خم\",e[\"ﲭ\"]=\"سج\",e[\"ﲮ\"]=\"سح\",e[\"ﲯ\"]=\"سخ\",e[\"ﲰ\"]=\"سم\",e[\"ﲱ\"]=\"صح\",e[\"ﲲ\"]=\"صخ\",e[\"ﲳ\"]=\"صم\",e[\"ﲴ\"]=\"ضج\",e[\"ﲵ\"]=\"ضح\",e[\"ﲶ\"]=\"ضخ\",e[\"ﲷ\"]=\"ضم\",e[\"ﲸ\"]=\"طح\",e[\"ﲹ\"]=\"ظم\",e[\"ﲺ\"]=\"عج\",e[\"ﲻ\"]=\"عم\",e[\"ﲼ\"]=\"غج\",e[\"ﲽ\"]=\"غم\",e[\"ﲾ\"]=\"فج\",e[\"ﲿ\"]=\"فح\",e[\"ﳀ\"]=\"فخ\",e[\"ﳁ\"]=\"فم\",e[\"ﳂ\"]=\"قح\",e[\"ﳃ\"]=\"قم\",e[\"ﳄ\"]=\"كج\",e[\"ﳅ\"]=\"كح\",e[\"ﳆ\"]=\"كخ\",e[\"ﳇ\"]=\"كل\",e[\"ﳈ\"]=\"كم\",e[\"ﳉ\"]=\"لج\",e[\"ﳊ\"]=\"لح\",e[\"ﳋ\"]=\"لخ\",e[\"ﳌ\"]=\"لم\",e[\"ﳍ\"]=\"له\",e[\"ﳎ\"]=\"مج\",e[\"ﳏ\"]=\"مح\",e[\"ﳐ\"]=\"مخ\",e[\"ﳑ\"]=\"مم\",e[\"ﳒ\"]=\"نج\",e[\"ﳓ\"]=\"نح\",e[\"ﳔ\"]=\"نخ\",e[\"ﳕ\"]=\"نم\",e[\"ﳖ\"]=\"نه\",e[\"ﳗ\"]=\"هج\",e[\"ﳘ\"]=\"هم\",e[\"ﳙ\"]=\"هٰ\",e[\"ﳚ\"]=\"يج\",e[\"ﳛ\"]=\"يح\",e[\"ﳜ\"]=\"يخ\",e[\"ﳝ\"]=\"يم\",e[\"ﳞ\"]=\"يه\",e[\"ﳟ\"]=\"ئم\",e[\"ﳠ\"]=\"ئه\",e[\"ﳡ\"]=\"بم\",e[\"ﳢ\"]=\"به\",e[\"ﳣ\"]=\"تم\",e[\"ﳤ\"]=\"ته\",e[\"ﳥ\"]=\"ثم\",e[\"ﳦ\"]=\"ثه\",e[\"ﳧ\"]=\"سم\",e[\"ﳨ\"]=\"سه\",e[\"ﳩ\"]=\"شم\",e[\"ﳪ\"]=\"شه\",e[\"ﳫ\"]=\"كل\",e[\"ﳬ\"]=\"كم\",e[\"ﳭ\"]=\"لم\",e[\"ﳮ\"]=\"نم\",e[\"ﳯ\"]=\"نه\",e[\"ﳰ\"]=\"يم\",e[\"ﳱ\"]=\"يه\",e[\"ﳲ\"]=\"ـَّ\",e[\"ﳳ\"]=\"ـُّ\",e[\"ﳴ\"]=\"ـِّ\",e[\"ﳵ\"]=\"طى\",e[\"ﳶ\"]=\"طي\",e[\"ﳷ\"]=\"عى\",e[\"ﳸ\"]=\"عي\",e[\"ﳹ\"]=\"غى\",e[\"ﳺ\"]=\"غي\",e[\"ﳻ\"]=\"سى\",e[\"ﳼ\"]=\"سي\",e[\"ﳽ\"]=\"شى\",e[\"ﳾ\"]=\"شي\",e[\"ﳿ\"]=\"حى\",e[\"ﴀ\"]=\"حي\",e[\"ﴁ\"]=\"جى\",e[\"ﴂ\"]=\"جي\",e[\"ﴃ\"]=\"خى\",e[\"ﴄ\"]=\"خي\",e[\"ﴅ\"]=\"صى\",e[\"ﴆ\"]=\"صي\",e[\"ﴇ\"]=\"ضى\",e[\"ﴈ\"]=\"ضي\",e[\"ﴉ\"]=\"شج\",e[\"ﴊ\"]=\"شح\",e[\"ﴋ\"]=\"شخ\",e[\"ﴌ\"]=\"شم\",e[\"ﴍ\"]=\"شر\",e[\"ﴎ\"]=\"سر\",e[\"ﴏ\"]=\"صر\",e[\"ﴐ\"]=\"ضر\",e[\"ﴑ\"]=\"طى\",e[\"ﴒ\"]=\"طي\",e[\"ﴓ\"]=\"عى\",e[\"ﴔ\"]=\"عي\",e[\"ﴕ\"]=\"غى\",e[\"ﴖ\"]=\"غي\",e[\"ﴗ\"]=\"سى\",e[\"ﴘ\"]=\"سي\",e[\"ﴙ\"]=\"شى\",e[\"ﴚ\"]=\"شي\",e[\"ﴛ\"]=\"حى\",e[\"ﴜ\"]=\"حي\",e[\"ﴝ\"]=\"جى\",e[\"ﴞ\"]=\"جي\",e[\"ﴟ\"]=\"خى\",e[\"ﴠ\"]=\"خي\",e[\"ﴡ\"]=\"صى\",e[\"ﴢ\"]=\"صي\",e[\"ﴣ\"]=\"ضى\",e[\"ﴤ\"]=\"ضي\",e[\"ﴥ\"]=\"شج\",e[\"ﴦ\"]=\"شح\",e[\"ﴧ\"]=\"شخ\",e[\"ﴨ\"]=\"شم\",e[\"ﴩ\"]=\"شر\",e[\"ﴪ\"]=\"سر\",e[\"ﴫ\"]=\"صر\",e[\"ﴬ\"]=\"ضر\",e[\"ﴭ\"]=\"شج\",e[\"ﴮ\"]=\"شح\",e[\"ﴯ\"]=\"شخ\",e[\"ﴰ\"]=\"شم\",e[\"ﴱ\"]=\"سه\",e[\"ﴲ\"]=\"شه\",e[\"ﴳ\"]=\"طم\",e[\"ﴴ\"]=\"سج\",e[\"ﴵ\"]=\"سح\",e[\"ﴶ\"]=\"سخ\",e[\"ﴷ\"]=\"شج\",e[\"ﴸ\"]=\"شح\",e[\"ﴹ\"]=\"شخ\",e[\"ﴺ\"]=\"طم\",e[\"ﴻ\"]=\"ظم\",e[\"ﴼ\"]=\"اً\",e[\"ﴽ\"]=\"اً\",e[\"ﵐ\"]=\"تجم\",e[\"ﵑ\"]=\"تحج\",e[\"ﵒ\"]=\"تحج\",e[\"ﵓ\"]=\"تحم\",e[\"ﵔ\"]=\"تخم\",e[\"ﵕ\"]=\"تمج\",e[\"ﵖ\"]=\"تمح\",e[\"ﵗ\"]=\"تمخ\",e[\"ﵘ\"]=\"جمح\",e[\"ﵙ\"]=\"جمح\",e[\"ﵚ\"]=\"حمي\",e[\"ﵛ\"]=\"حمى\",e[\"ﵜ\"]=\"سحج\",e[\"ﵝ\"]=\"سجح\",e[\"ﵞ\"]=\"سجى\",e[\"ﵟ\"]=\"سمح\",e[\"ﵠ\"]=\"سمح\",e[\"ﵡ\"]=\"سمج\",e[\"ﵢ\"]=\"سمم\",e[\"ﵣ\"]=\"سمم\",e[\"ﵤ\"]=\"صحح\",e[\"ﵥ\"]=\"صحح\",e[\"ﵦ\"]=\"صمم\",e[\"ﵧ\"]=\"شحم\",e[\"ﵨ\"]=\"شحم\",e[\"ﵩ\"]=\"شجي\",e[\"ﵪ\"]=\"شمخ\",e[\"ﵫ\"]=\"شمخ\",e[\"ﵬ\"]=\"شمم\",e[\"ﵭ\"]=\"شمم\",e[\"ﵮ\"]=\"ضحى\",e[\"ﵯ\"]=\"ضخم\",e[\"ﵰ\"]=\"ضخم\",e[\"ﵱ\"]=\"طمح\",e[\"ﵲ\"]=\"طمح\",e[\"ﵳ\"]=\"طمم\",e[\"ﵴ\"]=\"طمي\",e[\"ﵵ\"]=\"عجم\",e[\"ﵶ\"]=\"عمم\",e[\"ﵷ\"]=\"عمم\",e[\"ﵸ\"]=\"عمى\",e[\"ﵹ\"]=\"غمم\",e[\"ﵺ\"]=\"غمي\",e[\"ﵻ\"]=\"غمى\",e[\"ﵼ\"]=\"فخم\",e[\"ﵽ\"]=\"فخم\",e[\"ﵾ\"]=\"قمح\",e[\"ﵿ\"]=\"قمم\",e[\"ﶀ\"]=\"لحم\",e[\"ﶁ\"]=\"لحي\",e[\"ﶂ\"]=\"لحى\",e[\"ﶃ\"]=\"لجج\",e[\"ﶄ\"]=\"لجج\",e[\"ﶅ\"]=\"لخم\",e[\"ﶆ\"]=\"لخم\",e[\"ﶇ\"]=\"لمح\",e[\"ﶈ\"]=\"لمح\",e[\"ﶉ\"]=\"محج\",e[\"ﶊ\"]=\"محم\",e[\"ﶋ\"]=\"محي\",e[\"ﶌ\"]=\"مجح\",e[\"ﶍ\"]=\"مجم\",e[\"ﶎ\"]=\"مخج\",e[\"ﶏ\"]=\"مخم\",e[\"ﶒ\"]=\"مجخ\",e[\"ﶓ\"]=\"همج\",e[\"ﶔ\"]=\"همم\",e[\"ﶕ\"]=\"نحم\",e[\"ﶖ\"]=\"نحى\",e[\"ﶗ\"]=\"نجم\",e[\"ﶘ\"]=\"نجم\",e[\"ﶙ\"]=\"نجى\",e[\"ﶚ\"]=\"نمي\",e[\"ﶛ\"]=\"نمى\",e[\"ﶜ\"]=\"يمم\",e[\"ﶝ\"]=\"يمم\",e[\"ﶞ\"]=\"بخي\",e[\"ﶟ\"]=\"تجي\",e[\"ﶠ\"]=\"تجى\",e[\"ﶡ\"]=\"تخي\",e[\"ﶢ\"]=\"تخى\",e[\"ﶣ\"]=\"تمي\",e[\"ﶤ\"]=\"تمى\",e[\"ﶥ\"]=\"جمي\",e[\"ﶦ\"]=\"جحى\",e[\"ﶧ\"]=\"جمى\",e[\"ﶨ\"]=\"سخى\",e[\"ﶩ\"]=\"صحي\",e[\"ﶪ\"]=\"شحي\",e[\"ﶫ\"]=\"ضحي\",e[\"ﶬ\"]=\"لجي\",e[\"ﶭ\"]=\"لمي\",e[\"ﶮ\"]=\"يحي\",e[\"ﶯ\"]=\"يجي\",e[\"ﶰ\"]=\"يمي\",e[\"ﶱ\"]=\"ممي\",e[\"ﶲ\"]=\"قمي\",e[\"ﶳ\"]=\"نحي\",e[\"ﶴ\"]=\"قمح\",e[\"ﶵ\"]=\"لحم\",e[\"ﶶ\"]=\"عمي\",e[\"ﶷ\"]=\"كمي\",e[\"ﶸ\"]=\"نجح\",e[\"ﶹ\"]=\"مخي\",e[\"ﶺ\"]=\"لجم\",e[\"ﶻ\"]=\"كمم\",e[\"ﶼ\"]=\"لجم\",e[\"ﶽ\"]=\"نجح\",e[\"ﶾ\"]=\"جحي\",e[\"ﶿ\"]=\"حجي\",e[\"ﷀ\"]=\"مجي\",e[\"ﷁ\"]=\"فمي\",e[\"ﷂ\"]=\"بحي\",e[\"ﷃ\"]=\"كمم\",e[\"ﷄ\"]=\"عجم\",e[\"ﷅ\"]=\"صمم\",e[\"ﷆ\"]=\"سخي\",e[\"ﷇ\"]=\"نجي\",e[\"﹉\"]=\"‾\",e[\"﹊\"]=\"‾\",e[\"﹋\"]=\"‾\",e[\"﹌\"]=\"‾\",e[\"﹍\"]=\"_\",e[\"﹎\"]=\"_\",e[\"﹏\"]=\"_\",e[\"ﺀ\"]=\"ء\",e[\"ﺁ\"]=\"آ\",e[\"ﺂ\"]=\"آ\",e[\"ﺃ\"]=\"أ\",e[\"ﺄ\"]=\"أ\",e[\"ﺅ\"]=\"ؤ\",e[\"ﺆ\"]=\"ؤ\",e[\"ﺇ\"]=\"إ\",e[\"ﺈ\"]=\"إ\",e[\"ﺉ\"]=\"ئ\",e[\"ﺊ\"]=\"ئ\",e[\"ﺋ\"]=\"ئ\",e[\"ﺌ\"]=\"ئ\",e[\"ﺍ\"]=\"ا\",e[\"ﺎ\"]=\"ا\",e[\"ﺏ\"]=\"ب\",e[\"ﺐ\"]=\"ب\",e[\"ﺑ\"]=\"ب\",e[\"ﺒ\"]=\"ب\",e[\"ﺓ\"]=\"ة\",e[\"ﺔ\"]=\"ة\",e[\"ﺕ\"]=\"ت\",e[\"ﺖ\"]=\"ت\",e[\"ﺗ\"]=\"ت\",e[\"ﺘ\"]=\"ت\",e[\"ﺙ\"]=\"ث\",e[\"ﺚ\"]=\"ث\",e[\"ﺛ\"]=\"ث\",e[\"ﺜ\"]=\"ث\",e[\"ﺝ\"]=\"ج\",e[\"ﺞ\"]=\"ج\",e[\"ﺟ\"]=\"ج\",e[\"ﺠ\"]=\"ج\",e[\"ﺡ\"]=\"ح\",e[\"ﺢ\"]=\"ح\",e[\"ﺣ\"]=\"ح\",e[\"ﺤ\"]=\"ح\",e[\"ﺥ\"]=\"خ\",e[\"ﺦ\"]=\"خ\",e[\"ﺧ\"]=\"خ\",e[\"ﺨ\"]=\"خ\",e[\"ﺩ\"]=\"د\",e[\"ﺪ\"]=\"د\",e[\"ﺫ\"]=\"ذ\",e[\"ﺬ\"]=\"ذ\",e[\"ﺭ\"]=\"ر\",e[\"ﺮ\"]=\"ر\",e[\"ﺯ\"]=\"ز\",e[\"ﺰ\"]=\"ز\",e[\"ﺱ\"]=\"س\",e[\"ﺲ\"]=\"س\",e[\"ﺳ\"]=\"س\",e[\"ﺴ\"]=\"س\",e[\"ﺵ\"]=\"ش\",e[\"ﺶ\"]=\"ش\",e[\"ﺷ\"]=\"ش\",e[\"ﺸ\"]=\"ش\",e[\"ﺹ\"]=\"ص\",e[\"ﺺ\"]=\"ص\",e[\"ﺻ\"]=\"ص\",e[\"ﺼ\"]=\"ص\",e[\"ﺽ\"]=\"ض\",e[\"ﺾ\"]=\"ض\",e[\"ﺿ\"]=\"ض\",e[\"ﻀ\"]=\"ض\",e[\"ﻁ\"]=\"ط\",e[\"ﻂ\"]=\"ط\",e[\"ﻃ\"]=\"ط\",e[\"ﻄ\"]=\"ط\",e[\"ﻅ\"]=\"ظ\",e[\"ﻆ\"]=\"ظ\",e[\"ﻇ\"]=\"ظ\",e[\"ﻈ\"]=\"ظ\",e[\"ﻉ\"]=\"ع\",e[\"ﻊ\"]=\"ع\",e[\"ﻋ\"]=\"ع\",e[\"ﻌ\"]=\"ع\",e[\"ﻍ\"]=\"غ\",e[\"ﻎ\"]=\"غ\",e[\"ﻏ\"]=\"غ\",e[\"ﻐ\"]=\"غ\",e[\"ﻑ\"]=\"ف\",e[\"ﻒ\"]=\"ف\",e[\"ﻓ\"]=\"ف\",e[\"ﻔ\"]=\"ف\",e[\"ﻕ\"]=\"ق\",e[\"ﻖ\"]=\"ق\",e[\"ﻗ\"]=\"ق\",e[\"ﻘ\"]=\"ق\",e[\"ﻙ\"]=\"ك\",e[\"ﻚ\"]=\"ك\",e[\"ﻛ\"]=\"ك\",e[\"ﻜ\"]=\"ك\",e[\"ﻝ\"]=\"ل\",e[\"ﻞ\"]=\"ل\",e[\"ﻟ\"]=\"ل\",e[\"ﻠ\"]=\"ل\",e[\"ﻡ\"]=\"م\",e[\"ﻢ\"]=\"م\",e[\"ﻣ\"]=\"م\",e[\"ﻤ\"]=\"م\",e[\"ﻥ\"]=\"ن\",e[\"ﻦ\"]=\"ن\",e[\"ﻧ\"]=\"ن\",e[\"ﻨ\"]=\"ن\",e[\"ﻩ\"]=\"ه\",e[\"ﻪ\"]=\"ه\",e[\"ﻫ\"]=\"ه\",e[\"ﻬ\"]=\"ه\",e[\"ﻭ\"]=\"و\",e[\"ﻮ\"]=\"و\",e[\"ﻯ\"]=\"ى\",e[\"ﻰ\"]=\"ى\",e[\"ﻱ\"]=\"ي\",e[\"ﻲ\"]=\"ي\",e[\"ﻳ\"]=\"ي\",e[\"ﻴ\"]=\"ي\",e[\"ﻵ\"]=\"لآ\",e[\"ﻶ\"]=\"لآ\",e[\"ﻷ\"]=\"لأ\",e[\"ﻸ\"]=\"لأ\",e[\"ﻹ\"]=\"لإ\",e[\"ﻺ\"]=\"لإ\",e[\"ﻻ\"]=\"لا\",e[\"ﻼ\"]=\"لا\"});t.mapSpecialUnicodeValues=function(e){return e>=65520&&e<=65535?0:e>=62976&&e<=63743?i()[e]||e:173===e?45:e},t.reverseIfRtl=function(e){var t,r,a=e.length;if(a<=1||(t=e.charCodeAt(0),r=n[13],!(t>=r.begin&&t<r.end||t>=(r=n[11]).begin&&t<r.end)))return e;for(var i=\"\",o=a-1;o>=0;o--)i+=e[o];return i},t.getUnicodeRangeFor=function(e){for(var t=0,r=n.length;t<r;t++){var a=n[t];if(e>=a.begin&&e<a.end)return t}return-1},t.getNormalizedUnicodes=o,t.getUnicodeForGlyph=function(e,t){var r=t[e];if(void 0!==r)return r;if(!e)return-1;if(\"u\"===e[0]){var a,i=e.length;if(7===i&&\"n\"===e[1]&&\"i\"===e[2])a=e.substr(3);else{if(!(i>=5&&i<=7))return-1;a=e.substr(1)}if(a===a.toUpperCase()&&(r=parseInt(a,16))>=0)return r}return-1}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PostScriptCompiler=t.PostScriptEvaluator=t.PDFFunctionFactory=t.isPDFFunction=void 0;var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),n=r(0),o=r(1),s=r(144);var c={get value(){return(0,n.shadow)(this,\"value\",(0,n.isEvalSupported)())}},l=function(){function e(t){var r=t.xref,a=t.isEvalSupported,i=void 0===a||a;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.xref=r,this.isEvalSupported=!1!==i}return i(e,[{key:\"create\",value:function(e){return u.parse({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:e})}},{key:\"createFromArray\",value:function(e){return u.parseArray({xref:this.xref,isEvalSupported:this.isEvalSupported,fnObj:e})}},{key:\"createFromIR\",value:function(e){return u.fromIR({xref:this.xref,isEvalSupported:this.isEvalSupported,IR:e})}},{key:\"createIR\",value:function(e){return u.getIR({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:e})}}]),e}(),u={getSampleArray:function(e,t,r,a){var i,n,o=1;for(i=0,n=e.length;i<n;i++)o*=e[i];o*=t;var s=new Array(o),c=0,l=0,u=1/(Math.pow(2,r)-1),h=a.getBytes((o*r+7)/8),f=0;for(i=0;i<o;i++){for(;c<r;)l<<=8,l|=h[f++],c+=8;c-=r,s[i]=(l>>c)*u,l&=(1<<c)-1}return s},getIR:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fn,i=a.dict;i||(i=a);var o=[this.constructSampled,null,this.constructInterpolated,this.constructStiched,this.constructPostScript][i.get(\"FunctionType\")];if(!o)throw new n.FormatError(\"Unknown type of function\");return o.call(this,{xref:t,isEvalSupported:r,fn:a,dict:i})},fromIR:function(e){var t=e.xref,r=e.isEvalSupported,a=e.IR;switch(a[0]){case 0:return this.constructSampledFromIR({xref:t,isEvalSupported:r,IR:a});case 2:return this.constructInterpolatedFromIR({xref:t,isEvalSupported:r,IR:a});case 3:return this.constructStichedFromIR({xref:t,isEvalSupported:r,IR:a});default:return this.constructPostScriptFromIR({xref:t,isEvalSupported:r,IR:a})}},parse:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fn,i=this.getIR({xref:t,isEvalSupported:r,fn:a});return this.fromIR({xref:t,isEvalSupported:r,IR:i})},parseArray:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fnObj;if(!Array.isArray(a))return this.parse({xref:t,isEvalSupported:r,fn:a});for(var i=[],n=0,o=a.length;n<o;n++)i.push(this.parse({xref:t,isEvalSupported:r,fn:t.fetchIfRef(a[n])}));return function(e,t,r,a){for(var n=0,o=i.length;n<o;n++)i[n](e,t,r,a+n)}},constructSampled:function(e){e.xref,e.isEvalSupported;var t=e.fn,r=e.dict;function a(e){for(var t=e.length,r=[],a=0,i=0;i<t;i+=2)r[a]=[e[i],e[i+1]],++a;return r}var i=r.getArray(\"Domain\"),o=r.getArray(\"Range\");if(!i||!o)throw new n.FormatError(\"No domain or range\");var s=i.length/2,c=o.length/2;i=a(i),o=a(o);var l=r.get(\"Size\"),u=r.get(\"BitsPerSample\"),h=r.get(\"Order\")||1;1!==h&&(0,n.info)(\"No support for cubic spline interpolation: \"+h);var f=r.getArray(\"Encode\");if(!f){f=[];for(var d=0;d<s;++d)f.push(0),f.push(l[d]-1)}f=a(f);var g=r.getArray(\"Decode\");return[0,s,i,f,g=g?a(g):o,this.getSampleArray(l,c,u,t),l,c,Math.pow(2,u)-1,o]},constructSampledFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR;function r(e,t,r,a,i){return a+(i-a)/(r-t)*(e-t)}return function(e,a,i,n){var o,s,c=t[1],l=t[2],u=t[3],h=t[4],f=t[5],d=t[6],g=t[7],m=t[9],p=1<<c,b=new Float64Array(p),v=new Uint32Array(p);for(s=0;s<p;s++)b[s]=1;var y=g,w=1;for(o=0;o<c;++o){var k=l[o][0],S=l[o][1],C=r(Math.min(Math.max(e[a+o],k),S),k,S,u[o][0],u[o][1]),x=d[o],A=(C=Math.min(Math.max(C,0),x-1))<x-1?Math.floor(C):C-1,_=A+1-C,P=C-A,I=A*y,T=I+y;for(s=0;s<p;s++)s&w?(b[s]*=P,v[s]+=T):(b[s]*=_,v[s]+=I);y*=x,w<<=1}for(s=0;s<g;++s){var O=0;for(o=0;o<p;o++)O+=f[v[o]+s]*b[o];O=r(O,0,1,h[s][0],h[s][1]),i[n+s]=Math.min(Math.max(O,m[s][0]),m[s][1])}}},constructInterpolated:function(e){e.xref,e.isEvalSupported,e.fn;var t=e.dict,r=t.getArray(\"C0\")||[0],a=t.getArray(\"C1\")||[1],i=t.get(\"N\");if(!Array.isArray(r)||!Array.isArray(a))throw new n.FormatError(\"Illegal dictionary for interpolated function\");for(var o=r.length,s=[],c=0;c<o;++c)s.push(a[c]-r[c]);return[2,r,s,i]},constructInterpolatedFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR,r=t[1],a=t[2],i=t[3],n=a.length;return function(e,t,o,s){for(var c=1===i?e[t]:Math.pow(e[t],i),l=0;l<n;++l)o[s+l]=r[l]+c*a[l]}},constructStiched:function(e){var t=e.xref,r=e.isEvalSupported,a=(e.fn,e.dict),i=a.getArray(\"Domain\");if(!i)throw new n.FormatError(\"No domain\");if(1!=i.length/2)throw new n.FormatError(\"Bad domain for stiched function\");for(var o=a.get(\"Functions\"),s=[],c=0,l=o.length;c<l;++c)s.push(this.getIR({xref:t,isEvalSupported:r,fn:t.fetchIfRef(o[c])}));return[3,i,a.getArray(\"Bounds\"),a.getArray(\"Encode\"),s]},constructStichedFromIR:function(e){for(var t=e.xref,r=e.isEvalSupported,a=e.IR,i=a[1],n=a[2],o=a[3],s=a[4],c=[],l=new Float32Array(1),u=0,h=s.length;u<h;u++)c.push(this.fromIR({xref:t,isEvalSupported:r,IR:s[u]}));return function(e,t,r,a){for(var s=function(e,t,r){return e>r?e=r:e<t&&(e=t),e}(e[t],i[0],i[1]),u=0,h=n.length;u<h&&!(s<n[u]);++u);var f=i[0];u>0&&(f=n[u-1]);var d=i[1];u<n.length&&(d=n[u]);var g=o[2*u],m=o[2*u+1];l[0]=f===d?g:g+(s-f)*(m-g)/(d-f),c[u](l,0,r,a)}},constructPostScript:function(e){e.xref,e.isEvalSupported;var t=e.fn,r=e.dict,a=r.getArray(\"Domain\"),i=r.getArray(\"Range\");if(!a)throw new n.FormatError(\"No domain.\");if(!i)throw new n.FormatError(\"No range.\");var o=new s.PostScriptLexer(t);return[4,a,i,new s.PostScriptParser(o).parse()]},constructPostScriptFromIR:function(e){e.xref;var t=e.isEvalSupported,r=e.IR,a=r[1],i=r[2],o=r[3];if(t&&c.value){var s=(new d).compile(o,a,i);if(s)return new Function(\"src\",\"srcOffset\",\"dest\",\"destOffset\",s)}(0,n.info)(\"Unable to compile PS function\");var l=i.length>>1,u=a.length>>1,h=new f(o),g=Object.create(null),m=8192,p=new Float32Array(u);return function(e,t,r,a){var n,o,s=\"\",c=p;for(n=0;n<u;n++)o=e[t+n],c[n]=o,s+=o+\"_\";var f=g[s];if(void 0===f){var d=new Float32Array(l),b=h.execute(c),v=b.length-l;for(n=0;n<l;n++){o=b[v+n];var y=i[2*n];o<y?o=y:o>(y=i[2*n+1])&&(o=y),d[n]=o}m>0&&(m--,g[s]=d),r.set(d,a)}else r.set(f,a)}}};var h=function(){function e(e){this.stack=e?Array.prototype.slice.call(e,0):[]}return e.prototype={push:function(e){if(this.stack.length>=100)throw new Error(\"PostScript function stack overflow.\");this.stack.push(e)},pop:function(){if(this.stack.length<=0)throw new Error(\"PostScript function stack underflow.\");return this.stack.pop()},copy:function(e){if(this.stack.length+e>=100)throw new Error(\"PostScript function stack overflow.\");for(var t=this.stack,r=t.length-e,a=e-1;a>=0;a--,r++)t.push(t[r])},index:function(e){this.push(this.stack[this.stack.length-e-1])},roll:function(e,t){var r,a,i,n=this.stack,o=n.length-e,s=n.length-1,c=o+(t-Math.floor(t/e)*e);for(r=o,a=s;r<a;r++,a--)i=n[r],n[r]=n[a],n[a]=i;for(r=o,a=c-1;r<a;r++,a--)i=n[r],n[r]=n[a],n[a]=i;for(r=c,a=s;r<a;r++,a--)i=n[r],n[r]=n[a],n[a]=i}},e}(),f=function(){function e(e){this.operators=e}return e.prototype={execute:function(e){for(var t,r,a,i=new h(e),o=0,s=this.operators,c=s.length;o<c;)if(\"number\"!=typeof(t=s[o++]))switch(t){case\"jz\":a=i.pop(),(r=i.pop())||(o=a);break;case\"j\":o=r=i.pop();break;case\"abs\":r=i.pop(),i.push(Math.abs(r));break;case\"add\":a=i.pop(),r=i.pop(),i.push(r+a);break;case\"and\":a=i.pop(),r=i.pop(),(0,n.isBool)(r)&&(0,n.isBool)(a)?i.push(r&&a):i.push(r&a);break;case\"atan\":r=i.pop(),i.push(Math.atan(r));break;case\"bitshift\":a=i.pop(),(r=i.pop())>0?i.push(r<<a):i.push(r>>a);break;case\"ceiling\":r=i.pop(),i.push(Math.ceil(r));break;case\"copy\":r=i.pop(),i.copy(r);break;case\"cos\":r=i.pop(),i.push(Math.cos(r));break;case\"cvi\":r=0|i.pop(),i.push(r);break;case\"cvr\":break;case\"div\":a=i.pop(),r=i.pop(),i.push(r/a);break;case\"dup\":i.copy(1);break;case\"eq\":a=i.pop(),r=i.pop(),i.push(r===a);break;case\"exch\":i.roll(2,1);break;case\"exp\":a=i.pop(),r=i.pop(),i.push(Math.pow(r,a));break;case\"false\":i.push(!1);break;case\"floor\":r=i.pop(),i.push(Math.floor(r));break;case\"ge\":a=i.pop(),r=i.pop(),i.push(r>=a);break;case\"gt\":a=i.pop(),r=i.pop(),i.push(r>a);break;case\"idiv\":a=i.pop(),r=i.pop(),i.push(r/a|0);break;case\"index\":r=i.pop(),i.index(r);break;case\"le\":a=i.pop(),r=i.pop(),i.push(r<=a);break;case\"ln\":r=i.pop(),i.push(Math.log(r));break;case\"log\":r=i.pop(),i.push(Math.log(r)/Math.LN10);break;case\"lt\":a=i.pop(),r=i.pop(),i.push(r<a);break;case\"mod\":a=i.pop(),r=i.pop(),i.push(r%a);break;case\"mul\":a=i.pop(),r=i.pop(),i.push(r*a);break;case\"ne\":a=i.pop(),r=i.pop(),i.push(r!==a);break;case\"neg\":r=i.pop(),i.push(-r);break;case\"not\":r=i.pop(),(0,n.isBool)(r)?i.push(!r):i.push(~r);break;case\"or\":a=i.pop(),r=i.pop(),(0,n.isBool)(r)&&(0,n.isBool)(a)?i.push(r||a):i.push(r|a);break;case\"pop\":i.pop();break;case\"roll\":a=i.pop(),r=i.pop(),i.roll(r,a);break;case\"round\":r=i.pop(),i.push(Math.round(r));break;case\"sin\":r=i.pop(),i.push(Math.sin(r));break;case\"sqrt\":r=i.pop(),i.push(Math.sqrt(r));break;case\"sub\":a=i.pop(),r=i.pop(),i.push(r-a);break;case\"true\":i.push(!0);break;case\"truncate\":r=(r=i.pop())<0?Math.ceil(r):Math.floor(r),i.push(r);break;case\"xor\":a=i.pop(),r=i.pop(),(0,n.isBool)(r)&&(0,n.isBool)(a)?i.push(r!==a):i.push(r^a);break;default:throw new n.FormatError(\"Unknown operator \"+t)}else i.push(t);return i.stack}},e}(),d=function(){function e(e){this.type=e}function t(t,r,a){e.call(this,\"args\"),this.index=t,this.min=r,this.max=a}function r(t){e.call(this,\"literal\"),this.number=t,this.min=t,this.max=t}function a(t,r,a,i,n){e.call(this,\"binary\"),this.op=t,this.arg1=r,this.arg2=a,this.min=i,this.max=n}function i(t,r){e.call(this,\"max\"),this.arg=t,this.min=t.min,this.max=r}function o(t,r,a){e.call(this,\"var\"),this.index=t,this.min=r,this.max=a}function s(t,r){e.call(this,\"definition\"),this.variable=t,this.arg=r}function c(){this.parts=[]}function l(e,t){return\"literal\"===t.type&&0===t.number?e:\"literal\"===e.type&&0===e.number?t:\"literal\"===t.type&&\"literal\"===e.type?new r(e.number+t.number):new a(\"+\",e,t,e.min+t.min,e.max+t.max)}function u(e,t){if(\"literal\"===t.type){if(0===t.number)return new r(0);if(1===t.number)return e;if(\"literal\"===e.type)return new r(e.number*t.number)}if(\"literal\"===e.type){if(0===e.number)return new r(0);if(1===e.number)return t}return new a(\"*\",e,t,Math.min(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max),Math.max(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max))}function h(e,t){if(\"literal\"===t.type){if(0===t.number)return e;if(\"literal\"===e.type)return new r(e.number-t.number)}return\"binary\"===t.type&&\"-\"===t.op&&\"literal\"===e.type&&1===e.number&&\"literal\"===t.arg1.type&&1===t.arg1.number?t.arg2:new a(\"-\",e,t,e.min-t.max,e.max-t.min)}function f(e,t){return e.min>=t?new r(t):e.max<=t?e:new i(e,t)}function d(){}return e.prototype.visit=function(e){(0,n.unreachable)(\"abstract method\")},t.prototype=Object.create(e.prototype),t.prototype.visit=function(e){e.visitArgument(this)},r.prototype=Object.create(e.prototype),r.prototype.visit=function(e){e.visitLiteral(this)},a.prototype=Object.create(e.prototype),a.prototype.visit=function(e){e.visitBinaryOperation(this)},i.prototype=Object.create(e.prototype),i.prototype.visit=function(e){e.visitMin(this)},o.prototype=Object.create(e.prototype),o.prototype.visit=function(e){e.visitVariable(this)},s.prototype=Object.create(e.prototype),s.prototype.visit=function(e){e.visitVariableDefinition(this)},c.prototype={visitArgument:function(e){this.parts.push(\"Math.max(\",e.min,\", Math.min(\",e.max,\", src[srcOffset + \",e.index,\"]))\")},visitVariable:function(e){this.parts.push(\"v\",e.index)},visitLiteral:function(e){this.parts.push(e.number)},visitBinaryOperation:function(e){this.parts.push(\"(\"),e.arg1.visit(this),this.parts.push(\" \",e.op,\" \"),e.arg2.visit(this),this.parts.push(\")\")},visitVariableDefinition:function(e){this.parts.push(\"var \"),e.variable.visit(this),this.parts.push(\" = \"),e.arg.visit(this),this.parts.push(\";\")},visitMin:function(e){this.parts.push(\"Math.min(\"),e.arg.visit(this),this.parts.push(\", \",e.max,\")\")},toString:function(){return this.parts.join(\"\")}},d.prototype={compile:function(e,a,i){var n,d,g,m,p,b,v,y,w,k,S=[],C=[],x=a.length>>1,A=i.length>>1,_=0;for(n=0;n<x;n++)S.push(new t(n,a[2*n],a[2*n+1]));for(n=0,d=e.length;n<d;n++)if(\"number\"!=typeof(k=e[n]))switch(k){case\"add\":if(S.length<2)return null;b=S.pop(),p=S.pop(),S.push(l(p,b));break;case\"cvr\":if(S.length<1)return null;break;case\"mul\":if(S.length<2)return null;b=S.pop(),p=S.pop(),S.push(u(p,b));break;case\"sub\":if(S.length<2)return null;b=S.pop(),p=S.pop(),S.push(h(p,b));break;case\"exch\":if(S.length<2)return null;v=S.pop(),y=S.pop(),S.push(v,y);break;case\"pop\":if(S.length<1)return null;S.pop();break;case\"index\":if(S.length<1)return null;if(\"literal\"!==(p=S.pop()).type)return null;if((g=p.number)<0||!Number.isInteger(g)||S.length<g)return null;if(\"literal\"===(v=S[S.length-g-1]).type||\"var\"===v.type){S.push(v);break}w=new o(_++,v.min,v.max),S[S.length-g-1]=w,S.push(w),C.push(new s(w,v));break;case\"dup\":if(S.length<1)return null;if(\"number\"==typeof e[n+1]&&\"gt\"===e[n+2]&&e[n+3]===n+7&&\"jz\"===e[n+4]&&\"pop\"===e[n+5]&&e[n+6]===e[n+1]){p=S.pop(),S.push(f(p,e[n+1])),n+=6;break}if(\"literal\"===(v=S[S.length-1]).type||\"var\"===v.type){S.push(v);break}w=new o(_++,v.min,v.max),S[S.length-1]=w,S.push(w),C.push(new s(w,v));break;case\"roll\":if(S.length<2)return null;if(b=S.pop(),p=S.pop(),\"literal\"!==b.type||\"literal\"!==p.type)return null;if(m=b.number,(g=p.number)<=0||!Number.isInteger(g)||!Number.isInteger(m)||S.length<g)return null;if(0===(m=(m%g+g)%g))break;Array.prototype.push.apply(S,S.splice(S.length-g,g-m));break;default:return null}else S.push(new r(k));if(S.length!==A)return null;var P=[];return C.forEach(function(e){var t=new c;e.visit(t),P.push(t.toString())}),S.forEach(function(e,t){var r=new c;e.visit(r);var a=i[2*t],n=i[2*t+1],o=[r.toString()];a>e.min&&(o.unshift(\"Math.max(\",a,\", \"),o.push(\")\")),n<e.max&&(o.unshift(\"Math.min(\",n,\", \"),o.push(\")\")),o.unshift(\"dest[destOffset + \",t,\"] = \"),o.push(\";\"),P.push(o.join(\"\"))}),P.join(\"\\n\")}},d}();t.isPDFFunction=function(e){var t;if(\"object\"!==(void 0===e?\"undefined\":a(e)))return!1;if((0,o.isDict)(e))t=e;else{if(!(0,o.isStream)(e))return!1;t=e.dict}return t.has(\"FunctionType\")},t.PDFFunctionFactory=l,t.PostScriptEvaluator=f,t.PostScriptCompiler=d},function(e,t,r){\"use strict\";var a=r(74);t.WorkerMessageHandler=a.WorkerMessageHandler},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WorkerMessageHandler=t.WorkerTask=void 0;var a,i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},o=r(0),s=r(127),c=r(44),l=(a=c)&&a.__esModule?a:{default:a},u=r(1);var h,f=function(){function e(e){this.name=e,this.terminated=!1,this._capability=(0,o.createPromiseCapability)()}return e.prototype={get finished(){return this._capability.promise},finish:function(){this._capability.resolve()},terminate:function(){this.terminated=!0},ensureNotTerminated:function(){if(this.terminated)throw new Error(\"Worker task was terminated\")}},e}(),d=function(){function e(e){this._msgHandler=e,this._contentLength=null,this._fullRequestReader=null,this._rangeRequestReaders=[]}function t(e){var t=this;this._msgHandler=e,this._contentLength=null,this._isRangeSupported=!1,this._isStreamingSupported=!1;var r=this._msgHandler.sendWithStream(\"GetReader\");this._reader=r.getReader(),this._headersReady=this._msgHandler.sendWithPromise(\"ReaderHeadersReady\").then(function(e){t._isStreamingSupported=e.isStreamingSupported,t._isRangeSupported=e.isRangeSupported,t._contentLength=e.contentLength})}function r(e,t,r){this._msgHandler=r,this.onProgress=null;var a=this._msgHandler.sendWithStream(\"GetRangeReader\",{begin:e,end:t});this._reader=a.getReader()}return e.prototype={getFullReader:function(){return(0,o.assert)(!this._fullRequestReader),this._fullRequestReader=new t(this._msgHandler),this._fullRequestReader},getRangeReader:function(e,t){var a=new r(e,t,this._msgHandler);return this._rangeRequestReaders.push(a),a},cancelAllRequests:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeRequestReaders.slice(0).forEach(function(t){t.cancel(e)})}},t.prototype={get headersReady(){return this._headersReady},get contentLength(){return this._contentLength},get isStreamingSupported(){return this._isStreamingSupported},get isRangeSupported(){return this._isRangeSupported},read:function(){return this._reader.read().then(function(e){var t=e.value;return e.done?{value:void 0,done:!0}:{value:t.buffer,done:!1}})},cancel:function(e){this._reader.cancel(e)}},r.prototype={get isStreamingSupported(){return!1},read:function(){return this._reader.read().then(function(e){var t=e.value;return e.done?{value:void 0,done:!0}:{value:t.buffer,done:!1}})},cancel:function(e){this._reader.cancel(e)}},e}(),g={setup:function(e,t){var r=!1;e.on(\"test\",function(t){if(!r)if(r=!0,t instanceof Uint8Array){var a=255===t[0];e.postMessageTransfers=a;var i=new XMLHttpRequest,n=\"response\"in i;try{i.responseType}catch(e){n=!1}n?e.send(\"test\",{supportTypedArray:!0,supportTransfers:a}):e.send(\"test\",!1)}else e.send(\"test\",\"main\",!1)}),e.on(\"configure\",function(e){(0,o.setVerbosityLevel)(e.verbosity)}),e.on(\"GetDocRequest\",function(e){return g.createDocumentHandler(e,t)})},createDocumentHandler:function(e,t){var r,a=!1,c=null,l=[],h=e.apiVersion;if(null!==h&&\"2.0.305\"!==h)throw new Error('The API version \"'+h+'\" does not match the Worker version \"2.0.305\".');var g=e.docId,m=e.docBaseUrl,p=e.docId+\"_worker\",b=new o.MessageHandler(p,g,t);function v(){if(a)throw new Error(\"Worker was terminated\")}function y(e){l.push(e)}function w(e){e.finish();var t=l.indexOf(e);l.splice(t,1)}function k(e){var t=(0,o.createPromiseCapability)(),a=function(){Promise.all([r.ensureDoc(\"numPages\"),r.ensureDoc(\"fingerprint\")]).then(function(e){var r=n(e,2),a=r[0],i=r[1];t.resolve({numPages:a,fingerprint:i})},i)},i=function(e){t.reject(e)};return r.ensureDoc(\"checkHeader\",[]).then(function(){r.ensureDoc(\"parseStartXRef\",[]).then(function(){r.ensureDoc(\"parse\",[e]).then(a,i)},i)},i),t.promise}function S(e,t){var r,a=(0,o.createPromiseCapability)(),i=e.source;if(i.data){try{r=new s.LocalPdfManager(g,i.data,i.password,t,m),a.resolve(r)}catch(e){a.reject(e)}return a.promise}var n,l=[];try{n=new d(b)}catch(e){return a.reject(e),a.promise}var u=n.getFullReader();u.headersReady.then(function(){if(u.isRangeSupported){var e=i.disableAutoFetch||u.isStreamingSupported;r=new s.NetworkPdfManager(g,n,{msgHandler:b,url:i.url,password:i.password,length:u.contentLength,disableAutoFetch:e,rangeChunkSize:i.rangeChunkSize},t,m);for(var o=0;o<l.length;o++)r.sendProgressiveData(l[o]);l=[],a.resolve(r),c=null}}).catch(function(e){a.reject(e),c=null});var h=0;return new Promise(function(e,n){u.read().then(function e(f){try{if(v(),f.done)return r||function(){var e=(0,o.arraysToBytes)(l);i.length&&e.length!==i.length&&(0,o.warn)(\"reported HTTP length is different from actual\");try{r=new s.LocalPdfManager(g,e,i.password,t,m),a.resolve(r)}catch(e){a.reject(e)}l=[]}(),void(c=null);var d=f.value;h+=(0,o.arrayByteLength)(d),u.isStreamingSupported||b.send(\"DocProgress\",{loaded:h,total:Math.max(h,u.contentLength||0)}),r?r.sendProgressiveData(d):l.push(d),u.read().then(e,n)}catch(e){n(e)}},n)}).catch(function(e){a.reject(e),c=null}),c=function(){n.cancelAllRequests(\"abort\")},a.promise}return b.postMessageTransfers=e.postMessageTransfers,b.on(\"GetPage\",function(e){return r.getPage(e.pageIndex).then(function(e){var t=r.ensure(e,\"rotate\"),a=r.ensure(e,\"ref\"),i=r.ensure(e,\"userUnit\"),n=r.ensure(e,\"view\");return Promise.all([t,a,i,n]).then(function(e){return{rotate:e[0],ref:e[1],userUnit:e[2],view:e[3]}})})}),b.on(\"GetPageIndex\",function(e){var t=new u.Ref(e.ref.num,e.ref.gen);return r.pdfDocument.catalog.getPageIndex(t)}),b.on(\"GetDestinations\",function(e){return r.ensureCatalog(\"destinations\")}),b.on(\"GetDestination\",function(e){return r.ensureCatalog(\"getDestination\",[e.id])}),b.on(\"GetPageLabels\",function(e){return r.ensureCatalog(\"pageLabels\")}),b.on(\"GetPageMode\",function(e){return r.ensureCatalog(\"pageMode\")}),b.on(\"GetAttachments\",function(e){return r.ensureCatalog(\"attachments\")}),b.on(\"GetJavaScript\",function(e){return r.ensureCatalog(\"javaScript\")}),b.on(\"GetOutline\",function(e){return r.ensureCatalog(\"documentOutline\")}),b.on(\"GetMetadata\",function(e){return Promise.all([r.ensureDoc(\"documentInfo\"),r.ensureCatalog(\"metadata\")])}),b.on(\"GetData\",function(e){return r.requestLoadedStream(),r.onLoadedStream().then(function(e){return e.bytes})}),b.on(\"GetStats\",function(e){return r.pdfDocument.xref.stats}),b.on(\"GetAnnotations\",function(e){return r.getPage(e.pageIndex).then(function(t){return r.ensure(t,\"getAnnotationsData\",[e.intent])})}),b.on(\"RenderPageRequest\",function(e){var t=e.pageIndex;r.getPage(t).then(function(r){var a=new f(\"RenderPageRequest: page \"+t);y(a);var n=t+1,s=Date.now();r.getOperatorList({handler:b,task:a,intent:e.intent,renderInteractiveForms:e.renderInteractiveForms}).then(function(e){w(a),(0,o.info)(\"page=\"+n+\" - getOperatorList: time=\"+(Date.now()-s)+\"ms, len=\"+e.totalLength)},function(t){if(w(a),!a.terminated){b.send(\"UnsupportedFeature\",{featureId:o.UNSUPPORTED_FEATURES.unknown});var r,s=\"worker.js: while trying to getPage() and getOperatorList()\";r=\"string\"==typeof t?{message:t,stack:s}:\"object\"===(void 0===t?\"undefined\":i(t))?{message:t.message||t.toString(),stack:t.stack||s}:{message:\"Unknown exception type: \"+(void 0===t?\"undefined\":i(t)),stack:s},b.send(\"PageError\",{pageNum:n,error:r,intent:e.intent})}})})},this),b.on(\"GetTextContent\",function(e,t){var a=e.pageIndex;t.onPull=function(e){},t.onCancel=function(e){},r.getPage(a).then(function(r){var i=new f(\"GetTextContent: page \"+a);y(i);var n=a+1,s=Date.now();r.extractTextContent({handler:b,task:i,sink:t,normalizeWhitespace:e.normalizeWhitespace,combineTextItems:e.combineTextItems}).then(function(){w(i),(0,o.info)(\"text indexing: page=\"+n+\" - time=\"+(Date.now()-s)+\"ms\"),t.close()},function(e){if(w(i),!i.terminated)throw t.error(e),e})})}),b.on(\"Cleanup\",function(e){return r.cleanup()}),b.on(\"Terminate\",function(e){a=!0,r&&(r.terminate(),r=null),c&&c();var t=[];return l.forEach(function(e){t.push(e.finished),e.terminate()}),Promise.all(t).then(function(){b.destroy(),b=null})}),b.on(\"Ready\",function(t){!function(e){function t(e){v(),b.send(\"GetDoc\",{pdfInfo:e})}function i(e){if(v(),e instanceof o.PasswordException){var t=new f(\"PasswordException: response \"+e.code);y(t),b.sendWithPromise(\"PasswordRequest\",e).then(function(e){w(t),r.updatePassword(e.password),n()}).catch(function(e){w(t),b.send(\"PasswordException\",e)}.bind(null,e))}else e instanceof o.InvalidPDFException?b.send(\"InvalidPDF\",e):e instanceof o.MissingPDFException?b.send(\"MissingPDF\",e):e instanceof o.UnexpectedResponseException?b.send(\"UnexpectedResponse\",e):b.send(\"UnknownError\",new o.UnknownErrorException(e.message,e.toString()))}function n(){v(),k(!1).then(t,function(e){v(),e instanceof o.XRefParseException?(r.requestLoadedStream(),r.onLoadedStream().then(function(){v(),k(!0).then(t,i)})):i(e)},i)}v(),S(e,{forceDataSchema:e.disableCreateObjectURL,maxImageSize:void 0===e.maxImageSize?-1:e.maxImageSize,disableFontFace:e.disableFontFace,nativeImageDecoderSupport:e.nativeImageDecoderSupport,ignoreErrors:e.ignoreErrors,isEvalSupported:e.isEvalSupported}).then(function(e){if(a)throw e.terminate(),new Error(\"Worker was terminated\");r=e,b.send(\"PDFManagerReady\",null),r.onLoadedStream().then(function(e){b.send(\"DataLoaded\",{length:e.bytes.byteLength})})}).then(n,i)}(e),e=null}),p},initializeFromPort:function(e){var t=new o.MessageHandler(\"worker\",\"main\",e);g.setup(t,e),t.send(\"ready\",null)}};\"undefined\"==typeof window&&!(0,l.default)()&&\"undefined\"!=typeof self&&(\"function\"==typeof(h=self).postMessage&&\"onmessage\"in h)&&g.initializeFromPort(self),t.WorkerTask=f,t.WorkerMessageHandler=g},function(e,t,a){\"use strict\";var i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};if(\"undefined\"==typeof PDFJS||!PDFJS.compatibilityChecked){var n=a(76),o=a(44),s=\"undefined\"!=typeof navigator&&navigator.userAgent||\"\",c=/Android/.test(s),l=s.indexOf(\"CriOS\")>=0,u=s.indexOf(\"Trident\")>=0,h=/\\b(iPad|iPhone|iPod)(?=;)/.test(s),f=/Safari\\//.test(s)&&!/(Chrome\\/|Android\\s)/.test(s),d=\"object\"===(\"undefined\"==typeof window?\"undefined\":i(window))&&\"object\"===(\"undefined\"==typeof document?\"undefined\":i(document));\"undefined\"==typeof PDFJS&&(n.PDFJS={}),PDFJS.compatibilityChecked=!0,!n.btoa&&o()&&(n.btoa=function(e){return r.from(e,\"binary\").toString(\"base64\")}),!n.atob&&o()&&(n.atob=function(e){return r.from(e,\"base64\").toString(\"binary\")}),(u||l)&&(PDFJS.disableCreateObjectURL=!0),\"undefined\"!=typeof navigator&&(\"language\"in navigator||(PDFJS.locale=navigator.userLanguage||\"en-US\")),(f||h)&&(PDFJS.disableRange=!0,PDFJS.disableStream=!0),(h||c)&&(PDFJS.maxCanvasPixels=5242880),d&&u&&window.parent!==window&&(PDFJS.disableFullscreen=!0),d&&(\"currentScript\"in document||Object.defineProperty(document,\"currentScript\",{get:function(){var e=document.getElementsByTagName(\"script\");return e[e.length-1]},enumerable:!0,configurable:!0})),d&&void 0===Element.prototype.remove&&(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)}),Array.prototype.includes||(Array.prototype.includes=a(77)),Math.log2||(Math.log2=a(80)),Number.isNaN||(Number.isNaN=a(82)),Number.isInteger||(Number.isInteger=a(84)),n.Promise||(n.Promise=a(87)),n.WeakMap||(n.WeakMap=a(106)),function(){var e=!1;try{if(\"function\"==typeof URL&&\"object\"===i(URL.prototype)&&\"origin\"in URL.prototype){var t=new URL(\"b\",\"http://a\");t.pathname=\"c%20d\",e=\"http://a/c%20d\"===t.href}}catch(e){}if(!e){var r=Object.create(null);r.ftp=21,r.file=0,r.gopher=70,r.http=80,r.https=443,r.ws=80,r.wss=443;var a=Object.create(null);a[\"%2e\"]=\".\",a[\".%2e\"]=\"..\",a[\"%2e.\"]=\"..\",a[\"%2e%2e\"]=\"..\";var o,s=/[a-zA-Z]/,c=/[a-zA-Z0-9\\+\\-\\.]/;b.prototype={toString:function(){return this.href},get href(){if(this._isInvalid)return this._url;var e=\"\";return\"\"===this._username&&null===this._password||(e=this._username+(null!==this._password?\":\"+this._password:\"\")+\"@\"),this.protocol+(this._isRelative?\"//\"+e+this.host:\"\")+this.pathname+this._query+this._fragment},set href(e){p.call(this),m.call(this,e)},get protocol(){return this._scheme+\":\"},set protocol(e){this._isInvalid||m.call(this,e+\":\",\"scheme start\")},get host(){return this._isInvalid?\"\":this._port?this._host+\":\"+this._port:this._host},set host(e){!this._isInvalid&&this._isRelative&&m.call(this,e,\"host\")},get hostname(){return this._host},set hostname(e){!this._isInvalid&&this._isRelative&&m.call(this,e,\"hostname\")},get port(){return this._port},set port(e){!this._isInvalid&&this._isRelative&&m.call(this,e,\"port\")},get pathname(){return this._isInvalid?\"\":this._isRelative?\"/\"+this._path.join(\"/\"):this._schemeData},set pathname(e){!this._isInvalid&&this._isRelative&&(this._path=[],m.call(this,e,\"relative path start\"))},get search(){return this._isInvalid||!this._query||\"?\"===this._query?\"\":this._query},set search(e){!this._isInvalid&&this._isRelative&&(this._query=\"?\",\"?\"===e[0]&&(e=e.slice(1)),m.call(this,e,\"query\"))},get hash(){return this._isInvalid||!this._fragment||\"#\"===this._fragment?\"\":this._fragment},set hash(e){this._isInvalid||(this._fragment=\"#\",\"#\"===e[0]&&(e=e.slice(1)),m.call(this,e,\"fragment\"))},get origin(){var e;if(this._isInvalid||!this._scheme)return\"\";switch(this._scheme){case\"data\":case\"file\":case\"javascript\":case\"mailto\":return\"null\";case\"blob\":try{return new b(this._schemeData).origin||\"null\"}catch(e){}return\"null\"}return(e=this.host)?this._scheme+\"://\"+e:\"\"}};var l=n.URL;l&&(b.createObjectURL=function(e){return l.createObjectURL.apply(l,arguments)},b.revokeObjectURL=function(e){l.revokeObjectURL(e)}),n.URL=b}function u(e){return void 0!==r[e]}function h(){p.call(this),this._isInvalid=!0}function f(e){return\"\"===e&&h.call(this),e.toLowerCase()}function d(e){var t=e.charCodeAt(0);return t>32&&t<127&&-1===[34,35,60,62,63,96].indexOf(t)?e:encodeURIComponent(e)}function g(e){var t=e.charCodeAt(0);return t>32&&t<127&&-1===[34,35,60,62,96].indexOf(t)?e:encodeURIComponent(e)}function m(e,t,i){function n(e){y.push(e)}var l=t||\"scheme start\",m=0,p=\"\",b=!1,v=!1,y=[];e:for(;(e[m-1]!==o||0===m)&&!this._isInvalid;){var w=e[m];switch(l){case\"scheme start\":if(!w||!s.test(w)){if(t){n(\"Invalid scheme.\");break e}p=\"\",l=\"no scheme\";continue}p+=w.toLowerCase(),l=\"scheme\";break;case\"scheme\":if(w&&c.test(w))p+=w.toLowerCase();else{if(\":\"!==w){if(t){if(w===o)break e;n(\"Code point not allowed in scheme: \"+w);break e}p=\"\",m=0,l=\"no scheme\";continue}if(this._scheme=p,p=\"\",t)break e;u(this._scheme)&&(this._isRelative=!0),l=\"file\"===this._scheme?\"relative\":this._isRelative&&i&&i._scheme===this._scheme?\"relative or authority\":this._isRelative?\"authority first slash\":\"scheme data\"}break;case\"scheme data\":\"?\"===w?(this._query=\"?\",l=\"query\"):\"#\"===w?(this._fragment=\"#\",l=\"fragment\"):w!==o&&\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(this._schemeData+=d(w));break;case\"no scheme\":if(i&&u(i._scheme)){l=\"relative\";continue}n(\"Missing scheme.\"),h.call(this);break;case\"relative or authority\":if(\"/\"!==w||\"/\"!==e[m+1]){n(\"Expected /, got: \"+w),l=\"relative\";continue}l=\"authority ignore slashes\";break;case\"relative\":if(this._isRelative=!0,\"file\"!==this._scheme&&(this._scheme=i._scheme),w===o){this._host=i._host,this._port=i._port,this._path=i._path.slice(),this._query=i._query,this._username=i._username,this._password=i._password;break e}if(\"/\"===w||\"\\\\\"===w)\"\\\\\"===w&&n(\"\\\\ is an invalid code point.\"),l=\"relative slash\";else if(\"?\"===w)this._host=i._host,this._port=i._port,this._path=i._path.slice(),this._query=\"?\",this._username=i._username,this._password=i._password,l=\"query\";else{if(\"#\"!==w){var k=e[m+1],S=e[m+2];(\"file\"!==this._scheme||!s.test(w)||\":\"!==k&&\"|\"!==k||S!==o&&\"/\"!==S&&\"\\\\\"!==S&&\"?\"!==S&&\"#\"!==S)&&(this._host=i._host,this._port=i._port,this._username=i._username,this._password=i._password,this._path=i._path.slice(),this._path.pop()),l=\"relative path\";continue}this._host=i._host,this._port=i._port,this._path=i._path.slice(),this._query=i._query,this._fragment=\"#\",this._username=i._username,this._password=i._password,l=\"fragment\"}break;case\"relative slash\":if(\"/\"!==w&&\"\\\\\"!==w){\"file\"!==this._scheme&&(this._host=i._host,this._port=i._port,this._username=i._username,this._password=i._password),l=\"relative path\";continue}\"\\\\\"===w&&n(\"\\\\ is an invalid code point.\"),l=\"file\"===this._scheme?\"file host\":\"authority ignore slashes\";break;case\"authority first slash\":if(\"/\"!==w){n(\"Expected '/', got: \"+w),l=\"authority ignore slashes\";continue}l=\"authority second slash\";break;case\"authority second slash\":if(l=\"authority ignore slashes\",\"/\"!==w){n(\"Expected '/', got: \"+w);continue}break;case\"authority ignore slashes\":if(\"/\"!==w&&\"\\\\\"!==w){l=\"authority\";continue}n(\"Expected authority, got: \"+w);break;case\"authority\":if(\"@\"===w){b&&(n(\"@ already seen.\"),p+=\"%40\"),b=!0;for(var C=0;C<p.length;C++){var x=p[C];if(\"\\t\"!==x&&\"\\n\"!==x&&\"\\r\"!==x)if(\":\"!==x||null!==this._password){var A=d(x);null!==this._password?this._password+=A:this._username+=A}else this._password=\"\";else n(\"Invalid whitespace in authority.\")}p=\"\"}else{if(w===o||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w){m-=p.length,p=\"\",l=\"host\";continue}p+=w}break;case\"file host\":if(w===o||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w){2!==p.length||!s.test(p[0])||\":\"!==p[1]&&\"|\"!==p[1]?0===p.length?l=\"relative path start\":(this._host=f.call(this,p),p=\"\",l=\"relative path start\"):l=\"relative path\";continue}\"\\t\"===w||\"\\n\"===w||\"\\r\"===w?n(\"Invalid whitespace in file host.\"):p+=w;break;case\"host\":case\"hostname\":if(\":\"!==w||v){if(w===o||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w){if(this._host=f.call(this,p),p=\"\",l=\"relative path start\",t)break e;continue}\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w?(\"[\"===w?v=!0:\"]\"===w&&(v=!1),p+=w):n(\"Invalid code point in host/hostname: \"+w)}else if(this._host=f.call(this,p),p=\"\",l=\"port\",\"hostname\"===t)break e;break;case\"port\":if(/[0-9]/.test(w))p+=w;else{if(w===o||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w||t){if(\"\"!==p){var _=parseInt(p,10);_!==r[this._scheme]&&(this._port=_+\"\"),p=\"\"}if(t)break e;l=\"relative path start\";continue}\"\\t\"===w||\"\\n\"===w||\"\\r\"===w?n(\"Invalid code point in port: \"+w):h.call(this)}break;case\"relative path start\":if(\"\\\\\"===w&&n(\"'\\\\' not allowed in path.\"),l=\"relative path\",\"/\"!==w&&\"\\\\\"!==w)continue;break;case\"relative path\":var P;if(w!==o&&\"/\"!==w&&\"\\\\\"!==w&&(t||\"?\"!==w&&\"#\"!==w))\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(p+=d(w));else\"\\\\\"===w&&n(\"\\\\ not allowed in relative path.\"),(P=a[p.toLowerCase()])&&(p=P),\"..\"===p?(this._path.pop(),\"/\"!==w&&\"\\\\\"!==w&&this._path.push(\"\")):\".\"===p&&\"/\"!==w&&\"\\\\\"!==w?this._path.push(\"\"):\".\"!==p&&(\"file\"===this._scheme&&0===this._path.length&&2===p.length&&s.test(p[0])&&\"|\"===p[1]&&(p=p[0]+\":\"),this._path.push(p)),p=\"\",\"?\"===w?(this._query=\"?\",l=\"query\"):\"#\"===w&&(this._fragment=\"#\",l=\"fragment\");break;case\"query\":t||\"#\"!==w?w!==o&&\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(this._query+=g(w)):(this._fragment=\"#\",l=\"fragment\");break;case\"fragment\":w!==o&&\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(this._fragment+=w)}m++}}function p(){this._scheme=\"\",this._schemeData=\"\",this._username=\"\",this._password=null,this._host=\"\",this._port=\"\",this._path=[],this._query=\"\",this._fragment=\"\",this._isInvalid=!1,this._isRelative=!1}function b(e,t){void 0===t||t instanceof b||(t=new b(String(t))),this._url=e,p.call(this);var r=e.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g,\"\");m.call(this,r,null,t)}}(),Object.values||(Object.values=a(122))}},function(e,t,r){\"use strict\";e.exports=\"undefined\"!=typeof window&&window.Math===Math?window:void 0!==a&&a.Math===Math?a:\"undefined\"!=typeof self&&self.Math===Math?self:{}},function(e,t,r){\"use strict\";r(78),e.exports=r(7).Array.includes},function(e,t,r){\"use strict\";var a=r(6),i=r(47)(!0);a(a.P,\"Array\",{includes:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}}),r(48)(\"includes\")},function(e,t,r){\"use strict\";var a=r(32),i=Math.max,n=Math.min;e.exports=function(e,t){return(e=a(e))<0?i(e+t,0):n(e,t)}},function(e,t,r){\"use strict\";r(81),e.exports=r(7).Math.log2},function(e,t,r){\"use strict\";var a=r(6);a(a.S,\"Math\",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,r){\"use strict\";r(83),e.exports=r(7).Number.isNaN},function(e,t,r){\"use strict\";var a=r(6);a(a.S,\"Number\",{isNaN:function(e){return e!=e}})},function(e,t,r){\"use strict\";r(85),e.exports=r(7).Number.isInteger},function(e,t,r){\"use strict\";var a=r(6);a(a.S,\"Number\",{isInteger:r(86)})},function(e,t,r){\"use strict\";var a=r(3),i=Math.floor;e.exports=function(e){return!a(e)&&isFinite(e)&&i(e)===e}},function(e,t,r){\"use strict\";r(50),r(88),r(55),r(97),r(104),r(105),e.exports=r(7).Promise},function(e,t,r){\"use strict\";var a=r(89)(!0);r(51)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=a(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){\"use strict\";var a=r(32),i=r(30);e.exports=function(e){return function(t,r){var n,o,s=String(i(t)),c=a(r),l=s.length;return c<0||c>=l?e?\"\":void 0:(n=s.charCodeAt(c))<55296||n>56319||c+1===l||(o=s.charCodeAt(c+1))<56320||o>57343?e?s.charAt(c):n:e?s.slice(c,c+2):o-56320+(n-55296<<10)+65536}}},function(e,t,r){\"use strict\";var a=r(91),i=r(28),n=r(24),o={};r(12)(o,r(4)(\"iterator\"),function(){return this}),e.exports=function(e,t,r){e.prototype=a(o,{next:i(1,r)}),n(e,t+\" Iterator\")}},function(e,t,r){\"use strict\";var a=r(8),i=r(92),n=r(53),o=r(34)(\"IE_PROTO\"),s=function(){},c=function(){var e,t=r(27)(\"iframe\"),a=n.length;for(t.style.display=\"none\",r(54).appendChild(t),t.src=\"javascript:\",(e=t.contentWindow.document).open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),c=e.F;a--;)delete c.prototype[n[a]];return c()};e.exports=Object.create||function(e,t){var r;return null!==e?(s.prototype=a(e),r=new s,s.prototype=null,r[o]=e):r=c(),void 0===t?r:i(r,t)}},function(e,t,r){\"use strict\";var a=r(15),i=r(8),n=r(23);e.exports=r(13)?Object.defineProperties:function(e,t){i(e);for(var r,o=n(t),s=o.length,c=0;s>c;)a.f(e,r=o[c++],t[r]);return e}},function(e,t,r){\"use strict\";var a=r(9),i=r(17),n=r(47)(!1),o=r(34)(\"IE_PROTO\");e.exports=function(e,t){var r,s=i(e),c=0,l=[];for(r in s)r!=o&&a(s,r)&&l.push(r);for(;t.length>c;)a(s,r=t[c++])&&(~n(l,r)||l.push(r));return l}},function(e,t,r){\"use strict\";var a=r(9),i=r(35),n=r(34)(\"IE_PROTO\"),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),a(e,n)?e[n]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,t,r){\"use strict\";var a=r(48),i=r(96),n=r(19),o=r(17);e.exports=r(51)(Array,\"Array\",function(e,t){this._t=o(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,i(1)):i(0,\"keys\"==t?r:\"values\"==t?e[r]:[r,e[r]])},\"values\"),n.Arguments=n.Array,a(\"keys\"),a(\"values\"),a(\"entries\")},function(e,t,r){\"use strict\";e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){\"use strict\";var a,i,n,o,s=r(52),c=r(5),l=r(11),u=r(33),h=r(6),f=r(3),d=r(16),g=r(36),m=r(25),p=r(56),b=r(57).set,v=r(102)(),y=r(37),w=r(58),k=r(59),S=c.TypeError,C=c.process,x=c.Promise,A=\"process\"==u(C),_=function(){},P=i=y.f,I=!!function(){try{var e=x.resolve(1),t=(e.constructor={})[r(4)(\"species\")]=function(e){e(_,_)};return(A||\"function\"==typeof PromiseRejectionEvent)&&e.then(_)instanceof t}catch(e){}}(),T=function(e){var t;return!(!f(e)||\"function\"!=typeof(t=e.then))&&t},O=function(e,t){if(!e._n){e._n=!0;var r=e._c;v(function(){for(var a=e._v,i=1==e._s,n=0,o=function(t){var r,n,o=i?t.ok:t.fail,s=t.resolve,c=t.reject,l=t.domain;try{o?(i||(2==e._h&&R(e),e._h=1),!0===o?r=a:(l&&l.enter(),r=o(a),l&&l.exit()),r===t.promise?c(S(\"Promise-chain cycle\")):(n=T(r))?n.call(r,s,c):s(r)):c(a)}catch(e){c(e)}};r.length>n;)o(r[n++]);e._c=[],e._n=!1,t&&!e._h&&E(e)})}},E=function(e){b.call(c,function(){var t,r,a,i=e._v,n=F(e);if(n&&(t=w(function(){A?C.emit(\"unhandledRejection\",i,e):(r=c.onunhandledrejection)?r({promise:e,reason:i}):(a=c.console)&&a.error&&a.error(\"Unhandled promise rejection\",i)}),e._h=A||F(e)?2:1),e._a=void 0,n&&t.e)throw t.v})},F=function(e){return 1!==e._h&&0===(e._a||e._c).length},R=function(e){b.call(c,function(){var t;A?C.emit(\"rejectionHandled\",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})})},B=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),O(t,!0))},M=function e(t){var r,a=this;if(!a._d){a._d=!0,a=a._w||a;try{if(a===t)throw S(\"Promise can't be resolved itself\");(r=T(t))?v(function(){var i={_w:a,_d:!1};try{r.call(t,l(e,i,1),l(B,i,1))}catch(e){B.call(i,e)}}):(a._v=t,a._s=1,O(a,!1))}catch(e){B.call({_w:a,_d:!1},e)}}};I||(x=function(e){g(this,x,\"Promise\",\"_h\"),d(e),a.call(this);try{e(l(M,this,1),l(B,this,1))}catch(e){B.call(this,e)}},(a=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(38)(x.prototype,{then:function(e,t){var r=P(p(this,x));return r.ok=\"function\"!=typeof e||e,r.fail=\"function\"==typeof t&&t,r.domain=A?C.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&O(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),n=function(){var e=new a;this.promise=e,this.resolve=l(M,e,1),this.reject=l(B,e,1)},y.f=P=function(e){return e===x||e===o?new n(e):i(e)}),h(h.G+h.W+h.F*!I,{Promise:x}),r(24)(x,\"Promise\"),r(103)(\"Promise\"),o=r(7).Promise,h(h.S+h.F*!I,\"Promise\",{reject:function(e){var t=P(this);return(0,t.reject)(e),t.promise}}),h(h.S+h.F*(s||!I),\"Promise\",{resolve:function(e){return k(s&&this===o?x:this,e)}}),h(h.S+h.F*!(I&&r(60)(function(e){x.all(e).catch(_)})),\"Promise\",{all:function(e){var t=this,r=P(t),a=r.resolve,i=r.reject,n=w(function(){var r=[],n=0,o=1;m(e,!1,function(e){var s=n++,c=!1;r.push(void 0),o++,t.resolve(e).then(function(e){c||(c=!0,r[s]=e,--o||a(r))},i)}),--o||a(r)});return n.e&&i(n.v),r.promise},race:function(e){var t=this,r=P(t),a=r.reject,i=w(function(){m(e,!1,function(e){t.resolve(e).then(r.resolve,a)})});return i.e&&a(i.v),r.promise}})},function(e,t,r){\"use strict\";var a=r(8);e.exports=function(e,t,r,i){try{return i?t(a(r)[0],r[1]):t(r)}catch(t){var n=e.return;throw void 0!==n&&a(n.call(e)),t}}},function(e,t,r){\"use strict\";var a=r(19),i=r(4)(\"iterator\"),n=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||n[i]===e)}},function(e,t,r){\"use strict\";var a=r(33),i=r(4)(\"iterator\"),n=r(19);e.exports=r(7).getIteratorMethod=function(e){if(null!=e)return e[i]||e[\"@@iterator\"]||n[a(e)]}},function(e,t,r){\"use strict\";e.exports=function(e,t,r){var a=void 0===r;switch(t.length){case 0:return a?e():e.call(r);case 1:return a?e(t[0]):e.call(r,t[0]);case 2:return a?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return a?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return a?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){\"use strict\";var a=r(5),i=r(57).set,n=a.MutationObserver||a.WebKitMutationObserver,o=a.process,s=a.Promise,c=\"process\"==r(18)(o);e.exports=function(){var e,t,r,l=function(){var a,i;for(c&&(a=o.domain)&&a.exit();e;){i=e.fn,e=e.next;try{i()}catch(a){throw e?r():t=void 0,a}}t=void 0,a&&a.enter()};if(c)r=function(){o.nextTick(l)};else if(!n||a.navigator&&a.navigator.standalone)if(s&&s.resolve){var u=s.resolve();r=function(){u.then(l)}}else r=function(){i.call(a,l)};else{var h=!0,f=document.createTextNode(\"\");new n(l).observe(f,{characterData:!0}),r=function(){f.data=h=!h}}return function(a){var i={fn:a,next:void 0};t&&(t.next=i),e||(e=i,r()),t=i}}},function(e,t,r){\"use strict\";var a=r(5),i=r(15),n=r(13),o=r(4)(\"species\");e.exports=function(e){var t=a[e];n&&t&&!t[o]&&i.f(t,o,{configurable:!0,get:function(){return this}})}},function(e,t,r){\"use strict\";var a=r(6),i=r(7),n=r(5),o=r(56),s=r(59);a(a.P+a.R,\"Promise\",{finally:function(e){var t=o(this,i.Promise||n.Promise),r=\"function\"==typeof e;return this.then(r?function(r){return s(t,e()).then(function(){return r})}:e,r?function(r){return s(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){\"use strict\";var a=r(6),i=r(37),n=r(58);a(a.S,\"Promise\",{try:function(e){var t=i.f(this),r=n(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},function(e,t,r){\"use strict\";r(50),r(55),r(107),r(118),r(120),e.exports=r(7).WeakMap},function(e,t,r){\"use strict\";var a,i=r(61)(0),n=r(10),o=r(39),s=r(111),c=r(113),l=r(3),u=r(14),h=r(62),f=o.getWeak,d=Object.isExtensible,g=c.ufstore,m={},p=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},b={get:function(e){if(l(e)){var t=f(e);return!0===t?g(h(this,\"WeakMap\")).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(h(this,\"WeakMap\"),e,t)}},v=e.exports=r(114)(\"WeakMap\",p,b,c,!0,!0);u(function(){return 7!=(new v).set((Object.freeze||Object)(m),7).get(m)})&&(s((a=c.getConstructor(p,\"WeakMap\")).prototype,b),o.NEED=!0,i([\"delete\",\"has\",\"get\",\"set\"],function(e){var t=v.prototype,r=t[e];n(t,e,function(t,i){if(l(t)&&!d(t)){this._f||(this._f=new a);var n=this._f[e](t,i);return\"set\"==e?this:n}return r.call(this,t,i)})}))},function(e,t,r){\"use strict\";var a=r(109);e.exports=function(e,t){return new(a(e))(t)}},function(e,t,r){\"use strict\";var a=r(3),i=r(110),n=r(4)(\"species\");e.exports=function(e){var t;return i(e)&&(\"function\"!=typeof(t=e.constructor)||t!==Array&&!i(t.prototype)||(t=void 0),a(t)&&null===(t=t[n])&&(t=void 0)),void 0===t?Array:t}},function(e,t,r){\"use strict\";var a=r(18);e.exports=Array.isArray||function(e){return\"Array\"==a(e)}},function(e,t,r){\"use strict\";var a=r(23),i=r(112),n=r(40),o=r(35),s=r(29),c=Object.assign;e.exports=!c||r(14)(function(){var e={},t={},r=Symbol(),a=\"abcdefghijklmnopqrst\";return e[r]=7,a.split(\"\").forEach(function(e){t[e]=e}),7!=c({},e)[r]||Object.keys(c({},t)).join(\"\")!=a})?function(e,t){for(var r=o(e),c=arguments.length,l=1,u=i.f,h=n.f;c>l;)for(var f,d=s(arguments[l++]),g=u?a(d).concat(u(d)):a(d),m=g.length,p=0;m>p;)h.call(d,f=g[p++])&&(r[f]=d[f]);return r}:c},function(e,t,r){\"use strict\";t.f=Object.getOwnPropertySymbols},function(e,t,r){\"use strict\";var a=r(38),i=r(39).getWeak,n=r(8),o=r(3),s=r(36),c=r(25),l=r(61),u=r(9),h=r(62),f=l(5),d=l(6),g=0,m=function(e){return e._l||(e._l=new p)},p=function(){this.a=[]},b=function(e,t){return f(e.a,function(e){return e[0]===t})};p.prototype={get:function(e){var t=b(this,e);if(t)return t[1]},has:function(e){return!!b(this,e)},set:function(e,t){var r=b(this,e);r?r[1]=t:this.a.push([e,t])},delete:function(e){var t=d(this.a,function(t){return t[0]===e});return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,r,n){var l=e(function(e,a){s(e,l,t,\"_i\"),e._t=t,e._i=g++,e._l=void 0,null!=a&&c(a,r,e[n],e)});return a(l.prototype,{delete:function(e){if(!o(e))return!1;var r=i(e);return!0===r?m(h(this,t)).delete(e):r&&u(r,this._i)&&delete r[this._i]},has:function(e){if(!o(e))return!1;var r=i(e);return!0===r?m(h(this,t)).has(e):r&&u(r,this._i)}}),l},def:function(e,t,r){var a=i(n(t),!0);return!0===a?m(e).set(t,r):a[e._i]=r,e},ufstore:m}},function(e,t,r){\"use strict\";var a=r(5),i=r(6),n=r(10),o=r(38),s=r(39),c=r(25),l=r(36),u=r(3),h=r(14),f=r(60),d=r(24),g=r(115);e.exports=function(e,t,r,m,p,b){var v=a[e],y=v,w=p?\"set\":\"add\",k=y&&y.prototype,S={},C=function(e){var t=k[e];n(k,e,\"delete\"==e?function(e){return!(b&&!u(e))&&t.call(this,0===e?0:e)}:\"has\"==e?function(e){return!(b&&!u(e))&&t.call(this,0===e?0:e)}:\"get\"==e?function(e){return b&&!u(e)?void 0:t.call(this,0===e?0:e)}:\"add\"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(\"function\"==typeof y&&(b||k.forEach&&!h(function(){(new y).entries().next()}))){var x=new y,A=x[w](b?{}:-0,1)!=x,_=h(function(){x.has(1)}),P=f(function(e){new y(e)}),I=!b&&h(function(){for(var e=new y,t=5;t--;)e[w](t,t);return!e.has(-0)});P||((y=t(function(t,r){l(t,y,e);var a=g(new v,t,y);return null!=r&&c(r,p,a[w],a),a})).prototype=k,k.constructor=y),(_||I)&&(C(\"delete\"),C(\"has\"),p&&C(\"get\")),(I||A)&&C(w),b&&k.clear&&delete k.clear}else y=m.getConstructor(t,e,p,w),o(y.prototype,r),s.NEED=!0;return d(y,e),S[e]=y,i(i.G+i.W+i.F*(y!=v),S),b||m.setStrong(y,e,p),y}},function(e,t,r){\"use strict\";var a=r(3),i=r(116).set;e.exports=function(e,t,r){var n,o=t.constructor;return o!==r&&\"function\"==typeof o&&(n=o.prototype)!==r.prototype&&a(n)&&i&&i(e,n),e}},function(e,t,r){\"use strict\";var a=r(3),i=r(8),n=function(e,t){if(i(e),!a(t)&&null!==t)throw TypeError(t+\": can't set as prototype!\")};e.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(e,t,a){try{(a=r(11)(Function.call,r(117).f(Object.prototype,\"__proto__\").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return n(e,r),t?e.__proto__=r:a(e,r),e}}({},!1):void 0),check:n}},function(e,t,r){\"use strict\";var a=r(40),i=r(28),n=r(17),o=r(46),s=r(9),c=r(45),l=Object.getOwnPropertyDescriptor;t.f=r(13)?l:function(e,t){if(e=n(e),t=o(t,!0),c)try{return l(e,t)}catch(e){}if(s(e,t))return i(!a.f.call(e,t),e[t])}},function(e,t,r){\"use strict\";r(119)(\"WeakMap\")},function(e,t,r){\"use strict\";var a=r(6);e.exports=function(e){a(a.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,r){\"use strict\";r(121)(\"WeakMap\")},function(e,t,r){\"use strict\";var a=r(6),i=r(16),n=r(11),o=r(25);e.exports=function(e){a(a.S,e,{from:function(e){var t,r,a,s,c=arguments[1];return i(this),(t=void 0!==c)&&i(c),null==e?new this:(r=[],t?(a=0,s=n(c,arguments[2],2),o(e,!1,function(e){r.push(s(e,a++))})):o(e,!1,r.push,r),new this(r))}})}},function(e,t,r){\"use strict\";r(123),e.exports=r(7).Object.values},function(e,t,r){\"use strict\";var a=r(6),i=r(124)(!1);a(a.S,\"Object\",{values:function(e){return i(e)}})},function(e,t,r){\"use strict\";var a=r(23),i=r(17),n=r(40).f;e.exports=function(e){return function(t){for(var r,o=i(t),s=a(o),c=s.length,l=0,u=[];c>l;)n.call(o,r=s[l++])&&u.push(e?[r,o[r]]:o[r]);return u}}},function(e,t,r){\"use strict\";var a=!1;if(\"undefined\"!=typeof ReadableStream)try{new ReadableStream({start:function(e){e.close()}}),a=!0}catch(e){}t.ReadableStream=a?ReadableStream:r(126).ReadableStream},function(e,t,r){\"use strict\";var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=7)}([function(e,t,r){var i=\"function\"==typeof Symbol&&\"symbol\"===a(Symbol.iterator)?function(e){return void 0===e?\"undefined\":a(e)}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":void 0===e?\"undefined\":a(e)},n=r(1).assert;function o(e){return\"string\"==typeof e||\"symbol\"===(void 0===e?\"undefined\":i(e))}function s(e,t,r){if(\"function\"!=typeof e)throw new TypeError(\"Argument is not a function\");return Function.prototype.apply.call(e,t,r)}t.typeIsObject=function(e){return\"object\"===(void 0===e?\"undefined\":i(e))&&null!==e||\"function\"==typeof e},t.createDataProperty=function(e,r,a){n(t.typeIsObject(e)),Object.defineProperty(e,r,{value:a,writable:!0,enumerable:!0,configurable:!0})},t.createArrayFromList=function(e){return e.slice()},t.ArrayBufferCopy=function(e,t,r,a,i){new Uint8Array(e).set(new Uint8Array(r,a,i),t)},t.CreateIterResultObject=function(e,t){n(\"boolean\"==typeof t);var r={};return Object.defineProperty(r,\"value\",{value:e,enumerable:!0,writable:!0,configurable:!0}),Object.defineProperty(r,\"done\",{value:t,enumerable:!0,writable:!0,configurable:!0}),r},t.IsFiniteNonNegativeNumber=function(e){return!Number.isNaN(e)&&(e!==1/0&&!(e<0))},t.InvokeOrNoop=function(e,t,r){n(void 0!==e),n(o(t)),n(Array.isArray(r));var a=e[t];if(void 0!==a)return s(a,e,r)},t.PromiseInvokeOrNoop=function(e,r,a){n(void 0!==e),n(o(r)),n(Array.isArray(a));try{return Promise.resolve(t.InvokeOrNoop(e,r,a))}catch(e){return Promise.reject(e)}},t.PromiseInvokeOrPerformFallback=function(e,t,r,a,i){n(void 0!==e),n(o(t)),n(Array.isArray(r)),n(Array.isArray(i));var c=void 0;try{c=e[t]}catch(e){return Promise.reject(e)}if(void 0===c)return a.apply(null,i);try{return Promise.resolve(s(c,e,r))}catch(e){return Promise.reject(e)}},t.TransferArrayBuffer=function(e){return e.slice()},t.ValidateAndNormalizeHighWaterMark=function(e){if(e=Number(e),Number.isNaN(e)||e<0)throw new RangeError(\"highWaterMark property of a queuing strategy must be non-negative and non-NaN\");return e},t.ValidateAndNormalizeQueuingStrategy=function(e,r){if(void 0!==e&&\"function\"!=typeof e)throw new TypeError(\"size property of a queuing strategy must be a function\");return{size:e,highWaterMark:r=t.ValidateAndNormalizeHighWaterMark(r)}}},function(e,t,r){function a(e){this.name=\"AssertionError\",this.message=e||\"\",this.stack=(new Error).stack}a.prototype=Object.create(Error.prototype),a.prototype.constructor=a,e.exports={rethrowAssertionErrorRejection:function(e){e&&e.constructor===a&&setTimeout(function(){throw e},0)},AssertionError:a,assert:function(e,t){if(!e)throw new a(t)}}},function(e,t,r){var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}();function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var n=r(0),o=n.InvokeOrNoop,s=n.PromiseInvokeOrNoop,c=n.ValidateAndNormalizeQueuingStrategy,l=n.typeIsObject,u=r(1),h=u.assert,f=u.rethrowAssertionErrorRejection,d=r(3),g=d.DequeueValue,m=d.EnqueueValueWithSize,p=d.PeekQueueValue,b=d.ResetQueue,v=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.size,n=r.highWaterMark,o=void 0===n?1:n;if(i(this,e),this._state=\"writable\",this._storedError=void 0,this._writer=void 0,this._writableStreamController=void 0,this._writeRequests=[],this._inFlightWriteRequest=void 0,this._closeRequest=void 0,this._inFlightCloseRequest=void 0,this._pendingAbortRequest=void 0,this._backpressure=!1,void 0!==t.type)throw new RangeError(\"Invalid type is specified\");this._writableStreamController=new N(this,t,a,o),this._writableStreamController.__startSteps()}return a(e,[{key:\"abort\",value:function(e){return!1===w(this)?Promise.reject(G(\"abort\")):!0===k(this)?Promise.reject(new TypeError(\"Cannot abort a stream that already has a writer\")):S(this,e)}},{key:\"getWriter\",value:function(){if(!1===w(this))throw G(\"getWriter\");return y(this)}},{key:\"locked\",get:function(){if(!1===w(this))throw G(\"locked\");return k(this)}}]),e}();function y(e){return new E(e)}function w(e){return!!l(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_writableStreamController\")}function k(e){return h(!0===w(e),\"IsWritableStreamLocked should only be used on known writable streams\"),void 0!==e._writer}function S(e,t){var r=e._state;if(\"closed\"===r)return Promise.resolve(void 0);if(\"errored\"===r)return Promise.reject(e._storedError);var a=new TypeError(\"Requested to abort\");if(void 0!==e._pendingAbortRequest)return Promise.reject(a);h(\"writable\"===r||\"erroring\"===r,\"state must be writable or erroring\");var i=!1;\"erroring\"===r&&(i=!0,t=void 0);var n=new Promise(function(r,a){e._pendingAbortRequest={_resolve:r,_reject:a,_reason:t,_wasAlreadyErroring:i}});return!1===i&&x(e,a),n}function C(e,t){var r=e._state;\"writable\"!==r?(h(\"erroring\"===r),A(e)):x(e,t)}function x(e,t){h(void 0===e._storedError,\"stream._storedError === undefined\"),h(\"writable\"===e._state,\"state must be writable\");var r=e._writableStreamController;h(void 0!==r,\"controller must not be undefined\"),e._state=\"erroring\",e._storedError=t;var a=e._writer;void 0!==a&&M(a,t),!1===I(e)&&!0===r._started&&A(e)}function A(e){h(\"erroring\"===e._state,\"stream._state === erroring\"),h(!1===I(e),\"WritableStreamHasOperationMarkedInFlight(stream) === false\"),e._state=\"errored\",e._writableStreamController.__errorSteps();for(var t=e._storedError,r=0;r<e._writeRequests.length;r++){e._writeRequests[r]._reject(t)}if(e._writeRequests=[],void 0!==e._pendingAbortRequest){var a=e._pendingAbortRequest;if(e._pendingAbortRequest=void 0,!0===a._wasAlreadyErroring)return a._reject(t),void T(e);e._writableStreamController.__abortSteps(a._reason).then(function(){a._resolve(),T(e)},function(t){a._reject(t),T(e)})}else T(e)}function _(e){h(void 0!==e._inFlightCloseRequest),e._inFlightCloseRequest._resolve(void 0),e._inFlightCloseRequest=void 0;var t=e._state;h(\"writable\"===t||\"erroring\"===t),\"erroring\"===t&&(e._storedError=void 0,void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._resolve(),e._pendingAbortRequest=void 0)),e._state=\"closed\";var r=e._writer;void 0!==r&&function(e){h(void 0!==e._closedPromise_resolve,\"writer._closedPromise_resolve !== undefined\"),h(void 0!==e._closedPromise_reject,\"writer._closedPromise_reject !== undefined\"),h(\"pending\"===e._closedPromiseState,\"writer._closedPromiseState is pending\"),e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"resolved\"}(r),h(void 0===e._pendingAbortRequest,\"stream._pendingAbortRequest === undefined\"),h(void 0===e._storedError,\"stream._storedError === undefined\")}function P(e){return void 0!==e._closeRequest||void 0!==e._inFlightCloseRequest}function I(e){return void 0!==e._inFlightWriteRequest||void 0!==e._inFlightCloseRequest}function T(e){h(\"errored\"===e._state,'_stream_.[[state]] is `\"errored\"`'),void 0!==e._closeRequest&&(h(void 0===e._inFlightCloseRequest),e._closeRequest._reject(e._storedError),e._closeRequest=void 0);var t=e._writer;void 0!==t&&(Y(t,e._storedError),t._closedPromise.catch(function(){}))}function O(e,t){h(\"writable\"===e._state),h(!1===P(e));var r=e._writer;void 0!==r&&t!==e._backpressure&&(!0===t?function(e){h(void 0===e._readyPromise_resolve,\"writer._readyPromise_resolve === undefined\"),h(void 0===e._readyPromise_reject,\"writer._readyPromise_reject === undefined\"),e._readyPromise=new Promise(function(t,r){e._readyPromise_resolve=t,e._readyPromise_reject=r}),e._readyPromiseState=\"pending\"}(r):(h(!1===t),Z(r))),e._backpressure=t}e.exports={AcquireWritableStreamDefaultWriter:y,IsWritableStream:w,IsWritableStreamLocked:k,WritableStream:v,WritableStreamAbort:S,WritableStreamDefaultControllerError:H,WritableStreamDefaultWriterCloseWithErrorPropagation:function(e){var t=e._ownerWritableStream;h(void 0!==t);var r=t._state;if(!0===P(t)||\"closed\"===r)return Promise.resolve();if(\"errored\"===r)return Promise.reject(t._storedError);return h(\"writable\"===r||\"erroring\"===r),R(e)},WritableStreamDefaultWriterRelease:D,WritableStreamDefaultWriterWrite:L,WritableStreamCloseQueuedOrInFlight:P};var E=function(){function e(t){if(i(this,e),!1===w(t))throw new TypeError(\"WritableStreamDefaultWriter can only be constructed with a WritableStream instance\");if(!0===k(t))throw new TypeError(\"This stream has already been locked for exclusive writing by another writer\");this._ownerWritableStream=t,t._writer=this;var r,a=t._state;if(\"writable\"===a)!1===P(t)&&!0===t._backpressure?((r=this)._readyPromise=new Promise(function(e,t){r._readyPromise_resolve=e,r._readyPromise_reject=t}),r._readyPromiseState=\"pending\"):J(this),V(this);else if(\"erroring\"===a)K(this,t._storedError),this._readyPromise.catch(function(){}),V(this);else if(\"closed\"===a)J(this),function(e){e._closedPromise=Promise.resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"resolved\"}(this);else{h(\"errored\"===a,\"state must be errored\");var n=t._storedError;K(this,n),this._readyPromise.catch(function(){}),function(e,t){e._closedPromise=Promise.reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"rejected\"}(this,n),this._closedPromise.catch(function(){})}}return a(e,[{key:\"abort\",value:function(e){return!1===F(this)?Promise.reject(W(\"abort\")):void 0===this._ownerWritableStream?Promise.reject(X(\"abort\")):function(e,t){var r=e._ownerWritableStream;return h(void 0!==r),S(r,t)}(this,e)}},{key:\"close\",value:function(){if(!1===F(this))return Promise.reject(W(\"close\"));var e=this._ownerWritableStream;return void 0===e?Promise.reject(X(\"close\")):!0===P(e)?Promise.reject(new TypeError(\"cannot close an already-closing stream\")):R(this)}},{key:\"releaseLock\",value:function(){if(!1===F(this))throw W(\"releaseLock\");var e=this._ownerWritableStream;void 0!==e&&(h(void 0!==e._writer),D(this))}},{key:\"write\",value:function(e){return!1===F(this)?Promise.reject(W(\"write\")):void 0===this._ownerWritableStream?Promise.reject(X(\"write to\")):L(this,e)}},{key:\"closed\",get:function(){return!1===F(this)?Promise.reject(W(\"closed\")):this._closedPromise}},{key:\"desiredSize\",get:function(){if(!1===F(this))throw W(\"desiredSize\");if(void 0===this._ownerWritableStream)throw X(\"desiredSize\");return function(e){var t=e._ownerWritableStream,r=t._state;if(\"errored\"===r||\"erroring\"===r)return null;if(\"closed\"===r)return 0;return U(t._writableStreamController)}(this)}},{key:\"ready\",get:function(){return!1===F(this)?Promise.reject(W(\"ready\")):this._readyPromise}}]),e}();function F(e){return!!l(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_ownerWritableStream\")}function R(e){var t=e._ownerWritableStream;h(void 0!==t);var r=t._state;if(\"closed\"===r||\"errored\"===r)return Promise.reject(new TypeError(\"The stream (in \"+r+\" state) is not in the writable state and cannot be closed\"));h(\"writable\"===r||\"erroring\"===r),h(!1===P(t));var a,i=new Promise(function(e,r){var a={_resolve:e,_reject:r};t._closeRequest=a});return!0===t._backpressure&&\"writable\"===r&&Z(e),a=t._writableStreamController,m(a,\"close\",0),q(a),i}function B(e,t){\"pending\"===e._closedPromiseState?Y(e,t):function(e,t){h(void 0===e._closedPromise_resolve,\"writer._closedPromise_resolve === undefined\"),h(void 0===e._closedPromise_reject,\"writer._closedPromise_reject === undefined\"),h(\"pending\"!==e._closedPromiseState,\"writer._closedPromiseState is not pending\"),e._closedPromise=Promise.reject(t),e._closedPromiseState=\"rejected\"}(e,t),e._closedPromise.catch(function(){})}function M(e,t){\"pending\"===e._readyPromiseState?function(e,t){h(void 0!==e._readyPromise_resolve,\"writer._readyPromise_resolve !== undefined\"),h(void 0!==e._readyPromise_reject,\"writer._readyPromise_reject !== undefined\"),e._readyPromise_reject(t),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"rejected\"}(e,t):function(e,t){h(void 0===e._readyPromise_resolve,\"writer._readyPromise_resolve === undefined\"),h(void 0===e._readyPromise_reject,\"writer._readyPromise_reject === undefined\"),e._readyPromise=Promise.reject(t),e._readyPromiseState=\"rejected\"}(e,t),e._readyPromise.catch(function(){})}function D(e){var t=e._ownerWritableStream;h(void 0!==t),h(t._writer===e);var r=new TypeError(\"Writer was released and can no longer be used to monitor the stream's closedness\");M(e,r),B(e,r),t._writer=void 0,e._ownerWritableStream=void 0}function L(e,t){var r=e._ownerWritableStream;h(void 0!==r);var a=r._writableStreamController,i=function(e,t){var r=e._strategySize;if(void 0===r)return 1;try{return r(t)}catch(t){return j(e,t),1}}(a,t);if(r!==e._ownerWritableStream)return Promise.reject(X(\"write to\"));var n=r._state;if(\"errored\"===n)return Promise.reject(r._storedError);if(!0===P(r)||\"closed\"===n)return Promise.reject(new TypeError(\"The stream is closing or closed and cannot be written to\"));if(\"erroring\"===n)return Promise.reject(r._storedError);h(\"writable\"===n);var o=function(e){return h(!0===k(e)),h(\"writable\"===e._state),new Promise(function(t,r){var a={_resolve:t,_reject:r};e._writeRequests.push(a)})}(r);return function(e,t,r){var a={chunk:t};try{m(e,a,r)}catch(t){return void j(e,t)}var i=e._controlledWritableStream;if(!1===P(i)&&\"writable\"===i._state){var n=z(e);O(i,n)}q(e)}(a,t,i),o}var N=function(){function e(t,r,a,n){if(i(this,e),!1===w(t))throw new TypeError(\"WritableStreamDefaultController can only be constructed with a WritableStream instance\");if(void 0!==t._writableStreamController)throw new TypeError(\"WritableStreamDefaultController instances can only be created by the WritableStream constructor\");this._controlledWritableStream=t,this._underlyingSink=r,this._queue=void 0,this._queueTotalSize=void 0,b(this),this._started=!1;var o=c(a,n);this._strategySize=o.size,this._strategyHWM=o.highWaterMark,O(t,z(this))}return a(e,[{key:\"error\",value:function(e){if(!1===function(e){if(!l(e))return!1;if(!Object.prototype.hasOwnProperty.call(e,\"_underlyingSink\"))return!1;return!0}(this))throw new TypeError(\"WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController\");\"writable\"===this._controlledWritableStream._state&&H(this,e)}},{key:\"__abortSteps\",value:function(e){return s(this._underlyingSink,\"abort\",[e])}},{key:\"__errorSteps\",value:function(){b(this)}},{key:\"__startSteps\",value:function(){var e=this,t=o(this._underlyingSink,\"start\",[this]),r=this._controlledWritableStream;Promise.resolve(t).then(function(){h(\"writable\"===r._state||\"erroring\"===r._state),e._started=!0,q(e)},function(t){h(\"writable\"===r._state||\"erroring\"===r._state),e._started=!0,C(r,t)}).catch(f)}}]),e}();function U(e){return e._strategyHWM-e._queueTotalSize}function q(e){var t=e._controlledWritableStream;if(!1!==e._started&&void 0===t._inFlightWriteRequest){var r=t._state;if(\"closed\"!==r&&\"errored\"!==r)if(\"erroring\"!==r){if(0!==e._queue.length){var a=p(e);\"close\"===a?function(e){var t=e._controlledWritableStream;(function(e){h(void 0===e._inFlightCloseRequest),h(void 0!==e._closeRequest),e._inFlightCloseRequest=e._closeRequest,e._closeRequest=void 0})(t),g(e),h(0===e._queue.length,\"queue must be empty once the final write record is dequeued\"),s(e._underlyingSink,\"close\",[]).then(function(){_(t)},function(e){!function(e,t){h(void 0!==e._inFlightCloseRequest),e._inFlightCloseRequest._reject(t),e._inFlightCloseRequest=void 0,h(\"writable\"===e._state||\"erroring\"===e._state),void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._reject(t),e._pendingAbortRequest=void 0),C(e,t)}(t,e)}).catch(f)}(e):function(e,t){var r=e._controlledWritableStream;(function(e){h(void 0===e._inFlightWriteRequest,\"there must be no pending write request\"),h(0!==e._writeRequests.length,\"writeRequests must not be empty\"),e._inFlightWriteRequest=e._writeRequests.shift()})(r),s(e._underlyingSink,\"write\",[t,e]).then(function(){!function(e){h(void 0!==e._inFlightWriteRequest),e._inFlightWriteRequest._resolve(void 0),e._inFlightWriteRequest=void 0}(r);var t=r._state;if(h(\"writable\"===t||\"erroring\"===t),g(e),!1===P(r)&&\"writable\"===t){var a=z(e);O(r,a)}q(e)},function(e){!function(e,t){h(void 0!==e._inFlightWriteRequest),e._inFlightWriteRequest._reject(t),e._inFlightWriteRequest=void 0,h(\"writable\"===e._state||\"erroring\"===e._state),C(e,t)}(r,e)}).catch(f)}(e,a.chunk)}}else A(t)}}function j(e,t){\"writable\"===e._controlledWritableStream._state&&H(e,t)}function z(e){return U(e)<=0}function H(e,t){var r=e._controlledWritableStream;h(\"writable\"===r._state),x(r,t)}function G(e){return new TypeError(\"WritableStream.prototype.\"+e+\" can only be used on a WritableStream\")}function W(e){return new TypeError(\"WritableStreamDefaultWriter.prototype.\"+e+\" can only be used on a WritableStreamDefaultWriter\")}function X(e){return new TypeError(\"Cannot \"+e+\" a stream using a released writer\")}function V(e){e._closedPromise=new Promise(function(t,r){e._closedPromise_resolve=t,e._closedPromise_reject=r,e._closedPromiseState=\"pending\"})}function Y(e,t){h(void 0!==e._closedPromise_resolve,\"writer._closedPromise_resolve !== undefined\"),h(void 0!==e._closedPromise_reject,\"writer._closedPromise_reject !== undefined\"),h(\"pending\"===e._closedPromiseState,\"writer._closedPromiseState is pending\"),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"rejected\"}function K(e,t){e._readyPromise=Promise.reject(t),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"rejected\"}function J(e){e._readyPromise=Promise.resolve(void 0),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"fulfilled\"}function Z(e){h(void 0!==e._readyPromise_resolve,\"writer._readyPromise_resolve !== undefined\"),h(void 0!==e._readyPromise_reject,\"writer._readyPromise_reject !== undefined\"),e._readyPromise_resolve(void 0),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"fulfilled\"}},function(e,t,r){var a=r(0).IsFiniteNonNegativeNumber,i=r(1).assert;t.DequeueValue=function(e){i(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].\"),i(e._queue.length>0,\"Spec-level failure: should never dequeue from an empty queue.\");var t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value},t.EnqueueValueWithSize=function(e,t,r){if(i(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and [[queueTotalSize]].\"),r=Number(r),!a(r))throw new RangeError(\"Size must be a finite, non-NaN, non-negative number.\");e._queue.push({value:t,size:r}),e._queueTotalSize+=r},t.PeekQueueValue=function(e){return i(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].\"),i(e._queue.length>0,\"Spec-level failure: should never peek at an empty queue.\"),e._queue[0].value},t.ResetQueue=function(e){i(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].\"),e._queue=[],e._queueTotalSize=0}},function(e,t,r){var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}();function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var n=r(0),o=n.ArrayBufferCopy,s=n.CreateIterResultObject,c=n.IsFiniteNonNegativeNumber,l=n.InvokeOrNoop,u=n.PromiseInvokeOrNoop,h=n.TransferArrayBuffer,f=n.ValidateAndNormalizeQueuingStrategy,d=n.ValidateAndNormalizeHighWaterMark,g=r(0),m=g.createArrayFromList,p=g.createDataProperty,b=g.typeIsObject,v=r(1),y=v.assert,w=v.rethrowAssertionErrorRejection,k=r(3),S=k.DequeueValue,C=k.EnqueueValueWithSize,x=k.ResetQueue,A=r(2),_=A.AcquireWritableStreamDefaultWriter,P=A.IsWritableStream,I=A.IsWritableStreamLocked,T=A.WritableStreamAbort,O=A.WritableStreamDefaultWriterCloseWithErrorPropagation,E=A.WritableStreamDefaultWriterRelease,F=A.WritableStreamDefaultWriterWrite,R=A.WritableStreamCloseQueuedOrInFlight,B=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.size,n=r.highWaterMark;i(this,e),this._state=\"readable\",this._reader=void 0,this._storedError=void 0,this._disturbed=!1,this._readableStreamController=void 0;var o=t.type;if(\"bytes\"===String(o))void 0===n&&(n=0),this._readableStreamController=new de(this,t,n);else{if(void 0!==o)throw new RangeError(\"Invalid type is specified\");void 0===n&&(n=1),this._readableStreamController=new ie(this,t,a,n)}}return a(e,[{key:\"cancel\",value:function(e){return!1===L(this)?Promise.reject(Oe(\"cancel\")):!0===N(this)?Promise.reject(new TypeError(\"Cannot cancel a stream that already has a reader\")):z(this,e)}},{key:\"getReader\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.mode;if(!1===L(this))throw Oe(\"getReader\");if(void 0===t)return D(this);if(\"byob\"===(t=String(t)))return M(this);throw new RangeError(\"Invalid mode is specified\")}},{key:\"pipeThrough\",value:function(e,t){var r=e.writable,a=e.readable;return function(e){try{Promise.prototype.then.call(e,void 0,function(){})}catch(e){}}(this.pipeTo(r,t)),a}},{key:\"pipeTo\",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.preventClose,i=r.preventAbort,n=r.preventCancel;if(!1===L(this))return Promise.reject(Oe(\"pipeTo\"));if(!1===P(e))return Promise.reject(new TypeError(\"ReadableStream.prototype.pipeTo's first argument must be a WritableStream\"));if(a=Boolean(a),i=Boolean(i),n=Boolean(n),!0===N(this))return Promise.reject(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream\"));if(!0===I(e))return Promise.reject(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream\"));var o=D(this),s=_(e),c=!1,l=Promise.resolve();return new Promise(function(r,u){var h,f,d;if(p(t,o._closedPromise,function(t){!1===i?b(function(){return T(e,t)},!0,t):v(!0,t)}),p(e,s._closedPromise,function(e){!1===n?b(function(){return z(t,e)},!0,e):v(!0,e)}),h=t,f=o._closedPromise,d=function(){!1===a?b(function(){return O(s)}):v()},\"closed\"===h._state?d():f.then(d).catch(w),!0===R(e)||\"closed\"===e._state){var g=new TypeError(\"the destination writable stream closed before all data could be piped to it\");!1===n?b(function(){return z(t,g)},!0,g):v(!0,g)}function m(){var e=l;return l.then(function(){return e!==l?m():void 0})}function p(e,t,r){\"errored\"===e._state?r(e._storedError):t.catch(r).catch(w)}function b(t,r,a){function i(){t().then(function(){return y(r,a)},function(e){return y(!0,e)}).catch(w)}!0!==c&&(c=!0,\"writable\"===e._state&&!1===R(e)?m().then(i):i())}function v(t,r){!0!==c&&(c=!0,\"writable\"===e._state&&!1===R(e)?m().then(function(){return y(t,r)}).catch(w):y(t,r))}function y(e,t){E(s),re(o),e?u(t):r(void 0)}(function e(){return l=Promise.resolve(),!0===c?Promise.resolve():s._readyPromise.then(function(){return ae(o).then(function(e){var t=e.value;!0!==e.done&&(l=F(s,t).catch(function(){}))})}).then(e)})().catch(function(e){l=Promise.resolve(),w(e)})})}},{key:\"tee\",value:function(){if(!1===L(this))throw Oe(\"tee\");var e=U(this,!1);return m(e)}},{key:\"locked\",get:function(){if(!1===L(this))throw Oe(\"locked\");return N(this)}}]),e}();function M(e){return new Z(e)}function D(e){return new J(e)}function L(e){return!!b(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_readableStreamController\")}function N(e){return y(!0===L(e),\"IsReadableStreamLocked should only be used on known readable streams\"),void 0!==e._reader}function U(e,t){y(!0===L(e)),y(\"boolean\"==typeof t);var r=D(e),a={closedOrErrored:!1,canceled1:!1,canceled2:!1,reason1:void 0,reason2:void 0};a.promise=new Promise(function(e){a._resolve=e});var i=function e(){var t=e._reader,r=e._branch1,a=e._branch2,i=e._teeState;return ae(t).then(function(e){y(b(e));var t=e.value,n=e.done;if(y(\"boolean\"==typeof n),!0===n&&!1===i.closedOrErrored&&(!1===i.canceled1&&se(r),!1===i.canceled2&&se(a),i.closedOrErrored=!0),!0!==i.closedOrErrored){var o=t,s=t;!1===i.canceled1&&ce(r,o),!1===i.canceled2&&ce(a,s)}})};i._reader=r,i._teeState=a,i._cloneForBranch2=t;var n=function e(t){var r=e._stream,a=e._teeState;if(a.canceled1=!0,a.reason1=t,!0===a.canceled2){var i=m([a.reason1,a.reason2]),n=z(r,i);a._resolve(n)}return a.promise};n._stream=e,n._teeState=a;var o=function e(t){var r=e._stream,a=e._teeState;if(a.canceled2=!0,a.reason2=t,!0===a.canceled1){var i=m([a.reason1,a.reason2]),n=z(r,i);a._resolve(n)}return a.promise};o._stream=e,o._teeState=a;var s=Object.create(Object.prototype);p(s,\"pull\",i),p(s,\"cancel\",n);var c=new B(s),l=Object.create(Object.prototype);p(l,\"pull\",i),p(l,\"cancel\",o);var u=new B(l);return i._branch1=c._readableStreamController,i._branch2=u._readableStreamController,r._closedPromise.catch(function(e){!0!==a.closedOrErrored&&(le(i._branch1,e),le(i._branch2,e),a.closedOrErrored=!0)}),[c,u]}function q(e){return y(!0===Q(e._reader)),y(\"readable\"===e._state||\"closed\"===e._state),new Promise(function(t,r){var a={_resolve:t,_reject:r};e._reader._readIntoRequests.push(a)})}function j(e){return y(!0===$(e._reader)),y(\"readable\"===e._state),new Promise(function(t,r){var a={_resolve:t,_reject:r};e._reader._readRequests.push(a)})}function z(e,t){return e._disturbed=!0,\"closed\"===e._state?Promise.resolve(void 0):\"errored\"===e._state?Promise.reject(e._storedError):(H(e),e._readableStreamController.__cancelSteps(t).then(function(){}))}function H(e){y(\"readable\"===e._state),e._state=\"closed\";var t=e._reader;if(void 0!==t){if(!0===$(t)){for(var r=0;r<t._readRequests.length;r++){(0,t._readRequests[r]._resolve)(s(void 0,!0))}t._readRequests=[]}!function(e){y(void 0!==e._closedPromise_resolve),y(void 0!==e._closedPromise_reject),e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}(t)}}function G(e,t){y(!0===L(e),\"stream must be ReadableStream\"),y(\"readable\"===e._state,\"state must be readable\"),e._state=\"errored\",e._storedError=t;var r=e._reader;if(void 0!==r){if(!0===$(r)){for(var a=0;a<r._readRequests.length;a++){r._readRequests[a]._reject(t)}r._readRequests=[]}else{y(Q(r),\"reader must be ReadableStreamBYOBReader\");for(var i=0;i<r._readIntoRequests.length;i++){r._readIntoRequests[i]._reject(t)}r._readIntoRequests=[]}Re(r,t),r._closedPromise.catch(function(){})}}function W(e,t,r){var a=e._reader;y(a._readRequests.length>0),a._readRequests.shift()._resolve(s(t,r))}function X(e){return e._reader._readIntoRequests.length}function V(e){return e._reader._readRequests.length}function Y(e){var t=e._reader;return void 0!==t&&!1!==Q(t)}function K(e){var t=e._reader;return void 0!==t&&!1!==$(t)}e.exports={ReadableStream:B,IsReadableStreamDisturbed:function(e){return y(!0===L(e),\"IsReadableStreamDisturbed should only be used on known readable streams\"),e._disturbed},ReadableStreamDefaultControllerClose:se,ReadableStreamDefaultControllerEnqueue:ce,ReadableStreamDefaultControllerError:le,ReadableStreamDefaultControllerGetDesiredSize:he};var J=function(){function e(t){if(i(this,e),!1===L(t))throw new TypeError(\"ReadableStreamDefaultReader can only be constructed with a ReadableStream instance\");if(!0===N(t))throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");ee(this,t),this._readRequests=[]}return a(e,[{key:\"cancel\",value:function(e){return!1===$(this)?Promise.reject(Fe(\"cancel\")):void 0===this._ownerReadableStream?Promise.reject(Ee(\"cancel\")):te(this,e)}},{key:\"read\",value:function(){return!1===$(this)?Promise.reject(Fe(\"read\")):void 0===this._ownerReadableStream?Promise.reject(Ee(\"read from\")):ae(this)}},{key:\"releaseLock\",value:function(){if(!1===$(this))throw Fe(\"releaseLock\");if(void 0!==this._ownerReadableStream){if(this._readRequests.length>0)throw new TypeError(\"Tried to release a reader lock when that reader has pending read() calls un-settled\");re(this)}}},{key:\"closed\",get:function(){return!1===$(this)?Promise.reject(Fe(\"closed\")):this._closedPromise}}]),e}(),Z=function(){function e(t){if(i(this,e),!L(t))throw new TypeError(\"ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a byte source\");if(!1===ge(t._readableStreamController))throw new TypeError(\"Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source\");if(N(t))throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");ee(this,t),this._readIntoRequests=[]}return a(e,[{key:\"cancel\",value:function(e){return Q(this)?void 0===this._ownerReadableStream?Promise.reject(Ee(\"cancel\")):te(this,e):Promise.reject(Be(\"cancel\"))}},{key:\"read\",value:function(e){return Q(this)?void 0===this._ownerReadableStream?Promise.reject(Ee(\"read from\")):ArrayBuffer.isView(e)?0===e.byteLength?Promise.reject(new TypeError(\"view must have non-zero byteLength\")):function(e,t){var r=e._ownerReadableStream;if(y(void 0!==r),r._disturbed=!0,\"errored\"===r._state)return Promise.reject(r._storedError);return function(e,t){var r=e._controlledReadableStream,a=1;t.constructor!==DataView&&(a=t.constructor.BYTES_PER_ELEMENT);var i=t.constructor,n={buffer:t.buffer,byteOffset:t.byteOffset,byteLength:t.byteLength,bytesFilled:0,elementSize:a,ctor:i,readerType:\"byob\"};if(e._pendingPullIntos.length>0)return n.buffer=h(n.buffer),e._pendingPullIntos.push(n),q(r);if(\"closed\"===r._state){var o=new t.constructor(n.buffer,n.byteOffset,0);return Promise.resolve(s(o,!0))}if(e._queueTotalSize>0){if(!0===ke(e,n)){var c=ye(n);return Ce(e),Promise.resolve(s(c,!1))}if(!0===e._closeRequested){var l=new TypeError(\"Insufficient bytes to fill elements in the given buffer\");return Ie(e,l),Promise.reject(l)}}n.buffer=h(n.buffer),e._pendingPullIntos.push(n);var u=q(r);return pe(e),u}(r._readableStreamController,t)}(this,e):Promise.reject(new TypeError(\"view must be an array buffer view\")):Promise.reject(Be(\"read\"))}},{key:\"releaseLock\",value:function(){if(!Q(this))throw Be(\"releaseLock\");if(void 0!==this._ownerReadableStream){if(this._readIntoRequests.length>0)throw new TypeError(\"Tried to release a reader lock when that reader has pending read() calls un-settled\");re(this)}}},{key:\"closed\",get:function(){return Q(this)?this._closedPromise:Promise.reject(Be(\"closed\"))}}]),e}();function Q(e){return!!b(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_readIntoRequests\")}function $(e){return!!b(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_readRequests\")}function ee(e,t){e._ownerReadableStream=t,t._reader=e,\"readable\"===t._state?function(e){e._closedPromise=new Promise(function(t,r){e._closedPromise_resolve=t,e._closedPromise_reject=r})}(e):\"closed\"===t._state?function(e){e._closedPromise=Promise.resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}(e):(y(\"errored\"===t._state,\"state must be errored\"),function(e,t){e._closedPromise=Promise.reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}(e,t._storedError),e._closedPromise.catch(function(){}))}function te(e,t){var r=e._ownerReadableStream;return y(void 0!==r),z(r,t)}function re(e){y(void 0!==e._ownerReadableStream),y(e._ownerReadableStream._reader===e),\"readable\"===e._ownerReadableStream._state?Re(e,new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\")):function(e,t){y(void 0===e._closedPromise_resolve),y(void 0===e._closedPromise_reject),e._closedPromise=Promise.reject(t)}(e,new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\")),e._closedPromise.catch(function(){}),e._ownerReadableStream._reader=void 0,e._ownerReadableStream=void 0}function ae(e){var t=e._ownerReadableStream;return y(void 0!==t),t._disturbed=!0,\"closed\"===t._state?Promise.resolve(s(void 0,!0)):\"errored\"===t._state?Promise.reject(t._storedError):(y(\"readable\"===t._state),t._readableStreamController.__pullSteps())}var ie=function(){function e(t,r,a,n){if(i(this,e),!1===L(t))throw new TypeError(\"ReadableStreamDefaultController can only be constructed with a ReadableStream instance\");if(void 0!==t._readableStreamController)throw new TypeError(\"ReadableStreamDefaultController instances can only be created by the ReadableStream constructor\");this._controlledReadableStream=t,this._underlyingSource=r,this._queue=void 0,this._queueTotalSize=void 0,x(this),this._started=!1,this._closeRequested=!1,this._pullAgain=!1,this._pulling=!1;var o=f(a,n);this._strategySize=o.size,this._strategyHWM=o.highWaterMark;var s=this,c=l(r,\"start\",[this]);Promise.resolve(c).then(function(){s._started=!0,y(!1===s._pulling),y(!1===s._pullAgain),oe(s)},function(e){ue(s,e)}).catch(w)}return a(e,[{key:\"close\",value:function(){if(!1===ne(this))throw Me(\"close\");if(!0===this._closeRequested)throw new TypeError(\"The stream has already been closed; do not close it again!\");var e=this._controlledReadableStream._state;if(\"readable\"!==e)throw new TypeError(\"The stream (in \"+e+\" state) is not in the readable state and cannot be closed\");se(this)}},{key:\"enqueue\",value:function(e){if(!1===ne(this))throw Me(\"enqueue\");if(!0===this._closeRequested)throw new TypeError(\"stream is closed or draining\");var t=this._controlledReadableStream._state;if(\"readable\"!==t)throw new TypeError(\"The stream (in \"+t+\" state) is not in the readable state and cannot be enqueued to\");return ce(this,e)}},{key:\"error\",value:function(e){if(!1===ne(this))throw Me(\"error\");var t=this._controlledReadableStream;if(\"readable\"!==t._state)throw new TypeError(\"The stream is \"+t._state+\" and so cannot be errored\");le(this,e)}},{key:\"__cancelSteps\",value:function(e){return x(this),u(this._underlyingSource,\"cancel\",[e])}},{key:\"__pullSteps\",value:function(){var e=this._controlledReadableStream;if(this._queue.length>0){var t=S(this);return!0===this._closeRequested&&0===this._queue.length?H(e):oe(this),Promise.resolve(s(t,!1))}var r=j(e);return oe(this),r}},{key:\"desiredSize\",get:function(){if(!1===ne(this))throw Me(\"desiredSize\");return he(this)}}]),e}();function ne(e){return!!b(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_underlyingSource\")}function oe(e){!1!==function(e){var t=e._controlledReadableStream;if(\"closed\"===t._state||\"errored\"===t._state)return!1;if(!0===e._closeRequested)return!1;if(!1===e._started)return!1;if(!0===N(t)&&V(t)>0)return!0;if(he(e)>0)return!0;return!1}(e)&&(!0!==e._pulling?(y(!1===e._pullAgain),e._pulling=!0,u(e._underlyingSource,\"pull\",[e]).then(function(){if(e._pulling=!1,!0===e._pullAgain)return e._pullAgain=!1,oe(e)},function(t){ue(e,t)}).catch(w)):e._pullAgain=!0)}function se(e){var t=e._controlledReadableStream;y(!1===e._closeRequested),y(\"readable\"===t._state),e._closeRequested=!0,0===e._queue.length&&H(t)}function ce(e,t){var r=e._controlledReadableStream;if(y(!1===e._closeRequested),y(\"readable\"===r._state),!0===N(r)&&V(r)>0)W(r,t,!1);else{var a=1;if(void 0!==e._strategySize){var i=e._strategySize;try{a=i(t)}catch(t){throw ue(e,t),t}}try{C(e,t,a)}catch(t){throw ue(e,t),t}}oe(e)}function le(e,t){var r=e._controlledReadableStream;y(\"readable\"===r._state),x(e),G(r,t)}function ue(e,t){\"readable\"===e._controlledReadableStream._state&&le(e,t)}function he(e){var t=e._controlledReadableStream._state;return\"errored\"===t?null:\"closed\"===t?0:e._strategyHWM-e._queueTotalSize}var fe=function(){function e(t,r){i(this,e),this._associatedReadableByteStreamController=t,this._view=r}return a(e,[{key:\"respond\",value:function(e){if(!1===me(this))throw De(\"respond\");if(void 0===this._associatedReadableByteStreamController)throw new TypeError(\"This BYOB request has been invalidated\");!function(e,t){if(t=Number(t),!1===c(t))throw new RangeError(\"bytesWritten must be a finite\");y(e._pendingPullIntos.length>0),_e(e,t)}(this._associatedReadableByteStreamController,e)}},{key:\"respondWithNewView\",value:function(e){if(!1===me(this))throw De(\"respond\");if(void 0===this._associatedReadableByteStreamController)throw new TypeError(\"This BYOB request has been invalidated\");if(!ArrayBuffer.isView(e))throw new TypeError(\"You can only respond with array buffer views\");!function(e,t){y(e._pendingPullIntos.length>0);var r=e._pendingPullIntos[0];if(r.byteOffset+r.bytesFilled!==t.byteOffset)throw new RangeError(\"The region specified by view does not match byobRequest\");if(r.byteLength!==t.byteLength)throw new RangeError(\"The buffer of view has different capacity than byobRequest\");r.buffer=t.buffer,_e(e,t.byteLength)}(this._associatedReadableByteStreamController,e)}},{key:\"view\",get:function(){return this._view}}]),e}(),de=function(){function e(t,r,a){if(i(this,e),!1===L(t))throw new TypeError(\"ReadableByteStreamController can only be constructed with a ReadableStream instance given a byte source\");if(void 0!==t._readableStreamController)throw new TypeError(\"ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte source\");this._controlledReadableStream=t,this._underlyingByteSource=r,this._pullAgain=!1,this._pulling=!1,be(this),this._queue=this._queueTotalSize=void 0,x(this),this._closeRequested=!1,this._started=!1,this._strategyHWM=d(a);var n=r.autoAllocateChunkSize;if(void 0!==n&&(!1===Number.isInteger(n)||n<=0))throw new RangeError(\"autoAllocateChunkSize must be a positive integer\");this._autoAllocateChunkSize=n,this._pendingPullIntos=[];var o=this,s=l(r,\"start\",[this]);Promise.resolve(s).then(function(){o._started=!0,y(!1===o._pulling),y(!1===o._pullAgain),pe(o)},function(e){\"readable\"===t._state&&Ie(o,e)}).catch(w)}return a(e,[{key:\"close\",value:function(){if(!1===ge(this))throw Le(\"close\");if(!0===this._closeRequested)throw new TypeError(\"The stream has already been closed; do not close it again!\");var e=this._controlledReadableStream._state;if(\"readable\"!==e)throw new TypeError(\"The stream (in \"+e+\" state) is not in the readable state and cannot be closed\");!function(e){var t=e._controlledReadableStream;if(y(!1===e._closeRequested),y(\"readable\"===t._state),e._queueTotalSize>0)return void(e._closeRequested=!0);if(e._pendingPullIntos.length>0){var r=e._pendingPullIntos[0];if(r.bytesFilled>0){var a=new TypeError(\"Insufficient bytes to fill elements in the given buffer\");throw Ie(e,a),a}}H(t)}(this)}},{key:\"enqueue\",value:function(e){if(!1===ge(this))throw Le(\"enqueue\");if(!0===this._closeRequested)throw new TypeError(\"stream is closed or draining\");var t=this._controlledReadableStream._state;if(\"readable\"!==t)throw new TypeError(\"The stream (in \"+t+\" state) is not in the readable state and cannot be enqueued to\");if(!ArrayBuffer.isView(e))throw new TypeError(\"You can only enqueue array buffer views when using a ReadableByteStreamController\");!function(e,t){var r=e._controlledReadableStream;y(!1===e._closeRequested),y(\"readable\"===r._state);var a=t.buffer,i=t.byteOffset,n=t.byteLength,o=h(a);if(!0===K(r))if(0===V(r))we(e,o,i,n);else{y(0===e._queue.length);var s=new Uint8Array(o,i,n);W(r,s,!1)}else!0===Y(r)?(we(e,o,i,n),Ae(e)):(y(!1===N(r),\"stream must not be locked\"),we(e,o,i,n))}(this,e)}},{key:\"error\",value:function(e){if(!1===ge(this))throw Le(\"error\");var t=this._controlledReadableStream;if(\"readable\"!==t._state)throw new TypeError(\"The stream is \"+t._state+\" and so cannot be errored\");Ie(this,e)}},{key:\"__cancelSteps\",value:function(e){this._pendingPullIntos.length>0&&(this._pendingPullIntos[0].bytesFilled=0);return x(this),u(this._underlyingByteSource,\"cancel\",[e])}},{key:\"__pullSteps\",value:function(){var e=this._controlledReadableStream;if(y(!0===K(e)),this._queueTotalSize>0){y(0===V(e));var t=this._queue.shift();this._queueTotalSize-=t.byteLength,Ce(this);var r=void 0;try{r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}catch(e){return Promise.reject(e)}return Promise.resolve(s(r,!1))}var a=this._autoAllocateChunkSize;if(void 0!==a){var i=void 0;try{i=new ArrayBuffer(a)}catch(e){return Promise.reject(e)}var n={buffer:i,byteOffset:0,byteLength:a,bytesFilled:0,elementSize:1,ctor:Uint8Array,readerType:\"default\"};this._pendingPullIntos.push(n)}var o=j(e);return pe(this),o}},{key:\"byobRequest\",get:function(){if(!1===ge(this))throw Le(\"byobRequest\");if(void 0===this._byobRequest&&this._pendingPullIntos.length>0){var e=this._pendingPullIntos[0],t=new Uint8Array(e.buffer,e.byteOffset+e.bytesFilled,e.byteLength-e.bytesFilled);this._byobRequest=new fe(this,t)}return this._byobRequest}},{key:\"desiredSize\",get:function(){if(!1===ge(this))throw Le(\"desiredSize\");return Te(this)}}]),e}();function ge(e){return!!b(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_underlyingByteSource\")}function me(e){return!!b(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_associatedReadableByteStreamController\")}function pe(e){!1!==function(e){var t=e._controlledReadableStream;if(\"readable\"!==t._state)return!1;if(!0===e._closeRequested)return!1;if(!1===e._started)return!1;if(!0===K(t)&&V(t)>0)return!0;if(!0===Y(t)&&X(t)>0)return!0;if(Te(e)>0)return!0;return!1}(e)&&(!0!==e._pulling?(y(!1===e._pullAgain),e._pulling=!0,u(e._underlyingByteSource,\"pull\",[e]).then(function(){e._pulling=!1,!0===e._pullAgain&&(e._pullAgain=!1,pe(e))},function(t){\"readable\"===e._controlledReadableStream._state&&Ie(e,t)}).catch(w)):e._pullAgain=!0)}function be(e){xe(e),e._pendingPullIntos=[]}function ve(e,t){y(\"errored\"!==e._state,\"state must not be errored\");var r=!1;\"closed\"===e._state&&(y(0===t.bytesFilled),r=!0);var a=ye(t);\"default\"===t.readerType?W(e,a,r):(y(\"byob\"===t.readerType),function(e,t,r){var a=e._reader;y(a._readIntoRequests.length>0),a._readIntoRequests.shift()._resolve(s(t,r))}(e,a,r))}function ye(e){var t=e.bytesFilled,r=e.elementSize;return y(t<=e.byteLength),y(t%r==0),new e.ctor(e.buffer,e.byteOffset,t/r)}function we(e,t,r,a){e._queue.push({buffer:t,byteOffset:r,byteLength:a}),e._queueTotalSize+=a}function ke(e,t){var r=t.elementSize,a=t.bytesFilled-t.bytesFilled%r,i=Math.min(e._queueTotalSize,t.byteLength-t.bytesFilled),n=t.bytesFilled+i,s=n-n%r,c=i,l=!1;s>a&&(c=s-t.bytesFilled,l=!0);for(var u=e._queue;c>0;){var h=u[0],f=Math.min(c,h.byteLength),d=t.byteOffset+t.bytesFilled;o(t.buffer,d,h.buffer,h.byteOffset,f),h.byteLength===f?u.shift():(h.byteOffset+=f,h.byteLength-=f),e._queueTotalSize-=f,Se(e,f,t),c-=f}return!1===l&&(y(0===e._queueTotalSize,\"queue must be empty\"),y(t.bytesFilled>0),y(t.bytesFilled<t.elementSize)),l}function Se(e,t,r){y(0===e._pendingPullIntos.length||e._pendingPullIntos[0]===r),xe(e),r.bytesFilled+=t}function Ce(e){y(\"readable\"===e._controlledReadableStream._state),0===e._queueTotalSize&&!0===e._closeRequested?H(e._controlledReadableStream):pe(e)}function xe(e){void 0!==e._byobRequest&&(e._byobRequest._associatedReadableByteStreamController=void 0,e._byobRequest._view=void 0,e._byobRequest=void 0)}function Ae(e){for(y(!1===e._closeRequested);e._pendingPullIntos.length>0;){if(0===e._queueTotalSize)return;var t=e._pendingPullIntos[0];!0===ke(e,t)&&(Pe(e),ve(e._controlledReadableStream,t))}}function _e(e,t){var r=e._pendingPullIntos[0],a=e._controlledReadableStream;if(\"closed\"===a._state){if(0!==t)throw new TypeError(\"bytesWritten must be 0 when calling respond() on a closed stream\");!function(e,t){t.buffer=h(t.buffer),y(0===t.bytesFilled,\"bytesFilled must be 0\");var r=e._controlledReadableStream;if(!0===Y(r))for(;X(r)>0;)ve(r,Pe(e))}(e,r)}else y(\"readable\"===a._state),function(e,t,r){if(r.bytesFilled+t>r.byteLength)throw new RangeError(\"bytesWritten out of range\");if(Se(e,t,r),!(r.bytesFilled<r.elementSize)){Pe(e);var a=r.bytesFilled%r.elementSize;if(a>0){var i=r.byteOffset+r.bytesFilled,n=r.buffer.slice(i-a,i);we(e,n,0,n.byteLength)}r.buffer=h(r.buffer),r.bytesFilled-=a,ve(e._controlledReadableStream,r),Ae(e)}}(e,t,r)}function Pe(e){var t=e._pendingPullIntos.shift();return xe(e),t}function Ie(e,t){var r=e._controlledReadableStream;y(\"readable\"===r._state),be(e),x(e),G(r,t)}function Te(e){var t=e._controlledReadableStream._state;return\"errored\"===t?null:\"closed\"===t?0:e._strategyHWM-e._queueTotalSize}function Oe(e){return new TypeError(\"ReadableStream.prototype.\"+e+\" can only be used on a ReadableStream\")}function Ee(e){return new TypeError(\"Cannot \"+e+\" a stream using a released reader\")}function Fe(e){return new TypeError(\"ReadableStreamDefaultReader.prototype.\"+e+\" can only be used on a ReadableStreamDefaultReader\")}function Re(e,t){y(void 0!==e._closedPromise_resolve),y(void 0!==e._closedPromise_reject),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}function Be(e){return new TypeError(\"ReadableStreamBYOBReader.prototype.\"+e+\" can only be used on a ReadableStreamBYOBReader\")}function Me(e){return new TypeError(\"ReadableStreamDefaultController.prototype.\"+e+\" can only be used on a ReadableStreamDefaultController\")}function De(e){return new TypeError(\"ReadableStreamBYOBRequest.prototype.\"+e+\" can only be used on a ReadableStreamBYOBRequest\")}function Le(e){return new TypeError(\"ReadableByteStreamController.prototype.\"+e+\" can only be used on a ReadableByteStreamController\")}},function(e,t,r){var a=r(6),i=r(4),n=r(2);t.TransformStream=a.TransformStream,t.ReadableStream=i.ReadableStream,t.IsReadableStreamDisturbed=i.IsReadableStreamDisturbed,t.ReadableStreamDefaultControllerClose=i.ReadableStreamDefaultControllerClose,t.ReadableStreamDefaultControllerEnqueue=i.ReadableStreamDefaultControllerEnqueue,t.ReadableStreamDefaultControllerError=i.ReadableStreamDefaultControllerError,t.ReadableStreamDefaultControllerGetDesiredSize=i.ReadableStreamDefaultControllerGetDesiredSize,t.AcquireWritableStreamDefaultWriter=n.AcquireWritableStreamDefaultWriter,t.IsWritableStream=n.IsWritableStream,t.IsWritableStreamLocked=n.IsWritableStreamLocked,t.WritableStream=n.WritableStream,t.WritableStreamAbort=n.WritableStreamAbort,t.WritableStreamDefaultControllerError=n.WritableStreamDefaultControllerError,t.WritableStreamDefaultWriterCloseWithErrorPropagation=n.WritableStreamDefaultWriterCloseWithErrorPropagation,t.WritableStreamDefaultWriterRelease=n.WritableStreamDefaultWriterRelease,t.WritableStreamDefaultWriterWrite=n.WritableStreamDefaultWriterWrite},function(e,t,r){var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}();function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var n=r(1).assert,o=r(0),s=o.InvokeOrNoop,c=o.PromiseInvokeOrPerformFallback,l=o.PromiseInvokeOrNoop,u=o.typeIsObject,h=r(4),f=h.ReadableStream,d=h.ReadableStreamDefaultControllerClose,g=h.ReadableStreamDefaultControllerEnqueue,m=h.ReadableStreamDefaultControllerError,p=h.ReadableStreamDefaultControllerGetDesiredSize,b=r(2),v=b.WritableStream,y=b.WritableStreamDefaultControllerError;function w(e,t){if(!0===e._errored)throw new TypeError(\"TransformStream is already errored\");if(!0===e._readableClosed)throw new TypeError(\"Readable side is already closed\");var r=e._readableController;try{g(r,t)}catch(t){throw e._readableClosed=!0,S(e,t),e._storedError}!0===p(r)<=0&&!1===e._backpressure&&A(e,!0)}function k(e){n(!1===e._errored),n(!1===e._readableClosed);try{d(e._readableController)}catch(e){n(!1)}e._readableClosed=!0}function S(e,t){!1===e._errored&&C(e,t)}function C(e,t){n(!1===e._errored),e._errored=!0,e._storedError=t,!1===e._writableDone&&y(e._writableController,t),!1===e._readableClosed&&m(e._readableController,t)}function x(e){return n(void 0!==e._backpressureChangePromise,\"_backpressureChangePromise should have been initialized\"),!1===e._backpressure?Promise.resolve():(n(!0===e._backpressure,\"_backpressure should have been initialized\"),e._backpressureChangePromise)}function A(e,t){n(e._backpressure!==t,\"TransformStreamSetBackpressure() should be called only when backpressure is changed\"),void 0!==e._backpressureChangePromise&&e._backpressureChangePromise_resolve(t),e._backpressureChangePromise=new Promise(function(t){e._backpressureChangePromise_resolve=t}),e._backpressureChangePromise.then(function(e){n(e!==t,\"_backpressureChangePromise should be fulfilled only when backpressure is changed\")}),e._backpressure=t}function _(e,t){return w(t._controlledTransformStream,e),Promise.resolve()}function P(e){return!!u(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_controlledTransformStream\")}function I(e){return!!u(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_transformStreamController\")}var T=function(){function e(t,r){i(this,e),this._transformStream=t,this._startPromise=r}return a(e,[{key:\"start\",value:function(e){var t=this._transformStream;return t._writableController=e,this._startPromise.then(function(){return x(t)})}},{key:\"write\",value:function(e){return function(e,t){n(!1===e._errored),n(!1===e._transforming),n(!1===e._backpressure),e._transforming=!0;var r=e._transformer,a=e._transformStreamController;return c(r,\"transform\",[t,a],_,[t,a]).then(function(){return e._transforming=!1,x(e)},function(t){return S(e,t),Promise.reject(t)})}(this._transformStream,e)}},{key:\"abort\",value:function(){var e=this._transformStream;e._writableDone=!0,C(e,new TypeError(\"Writable side aborted\"))}},{key:\"close\",value:function(){var e=this._transformStream;return n(!1===e._transforming),e._writableDone=!0,l(e._transformer,\"flush\",[e._transformStreamController]).then(function(){return!0===e._errored?Promise.reject(e._storedError):(!1===e._readableClosed&&k(e),Promise.resolve())}).catch(function(t){return S(e,t),Promise.reject(e._storedError)})}}]),e}(),O=function(){function e(t,r){i(this,e),this._transformStream=t,this._startPromise=r}return a(e,[{key:\"start\",value:function(e){var t=this._transformStream;return t._readableController=e,this._startPromise.then(function(){return n(void 0!==t._backpressureChangePromise,\"_backpressureChangePromise should have been initialized\"),!0===t._backpressure?Promise.resolve():(n(!1===t._backpressure,\"_backpressure should have been initialized\"),t._backpressureChangePromise)})}},{key:\"pull\",value:function(){var e=this._transformStream;return n(!0===e._backpressure,\"pull() should be never called while _backpressure is false\"),n(void 0!==e._backpressureChangePromise,\"_backpressureChangePromise should have been initialized\"),A(e,!1),e._backpressureChangePromise}},{key:\"cancel\",value:function(){var e=this._transformStream;e._readableClosed=!0,C(e,new TypeError(\"Readable side canceled\"))}}]),e}(),E=function(){function e(t){if(i(this,e),!1===I(t))throw new TypeError(\"TransformStreamDefaultController can only be constructed with a TransformStream instance\");if(void 0!==t._transformStreamController)throw new TypeError(\"TransformStreamDefaultController instances can only be created by the TransformStream constructor\");this._controlledTransformStream=t}return a(e,[{key:\"enqueue\",value:function(e){if(!1===P(this))throw R(\"enqueue\");w(this._controlledTransformStream,e)}},{key:\"close\",value:function(){if(!1===P(this))throw R(\"close\");!function(e){if(!0===e._errored)throw new TypeError(\"TransformStream is already errored\");if(!0===e._readableClosed)throw new TypeError(\"Readable side is already closed\");k(e)}(this._controlledTransformStream)}},{key:\"error\",value:function(e){if(!1===P(this))throw R(\"error\");!function(e,t){if(!0===e._errored)throw new TypeError(\"TransformStream is already errored\");C(e,t)}(this._controlledTransformStream,e)}},{key:\"desiredSize\",get:function(){if(!1===P(this))throw R(\"desiredSize\");var e=this._controlledTransformStream._readableController;return p(e)}}]),e}(),F=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(this,e),this._transformer=t;var r=t.readableStrategy,a=t.writableStrategy;this._transforming=!1,this._errored=!1,this._storedError=void 0,this._writableController=void 0,this._readableController=void 0,this._transformStreamController=void 0,this._writableDone=!1,this._readableClosed=!1,this._backpressure=void 0,this._backpressureChangePromise=void 0,this._backpressureChangePromise_resolve=void 0,this._transformStreamController=new E(this);var o=void 0,c=new Promise(function(e){o=e}),l=new O(this,c);this._readable=new f(l,r);var u=new T(this,c);this._writable=new v(u,a),n(void 0!==this._writableController),n(void 0!==this._readableController),A(this,p(this._readableController)<=0);var h=this,d=s(t,\"start\",[h._transformStreamController]);o(d),c.catch(function(e){!1===h._errored&&(h._errored=!0,h._storedError=e)})}return a(e,[{key:\"readable\",get:function(){if(!1===I(this))throw B(\"readable\");return this._readable}},{key:\"writable\",get:function(){if(!1===I(this))throw B(\"writable\");return this._writable}}]),e}();function R(e){return new TypeError(\"TransformStreamDefaultController.prototype.\"+e+\" can only be used on a TransformStreamDefaultController\")}function B(e){return new TypeError(\"TransformStream.prototype.\"+e+\" can only be used on a TransformStream\")}e.exports={TransformStream:F}},function(e,t,r){e.exports=r(5)}]))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.NetworkPdfManager=t.LocalPdfManager=void 0;var a=r(0),i=r(63),n=r(128),o=r(2),s=function(){function e(){(0,a.unreachable)(\"Cannot initialize BaseManagerManager\")}return e.prototype={get docId(){return this._docId},get password(){return this._password},get docBaseUrl(){var e=null;if(this._docBaseUrl){var t=(0,a.createValidAbsoluteUrl)(this._docBaseUrl);t?e=t.href:(0,a.warn)('Invalid absolute docBaseUrl: \"'+this._docBaseUrl+'\".')}return(0,a.shadow)(this,\"docBaseUrl\",e)},onLoadedStream:function(){throw new a.NotImplementedException},ensureDoc:function(e,t){return this.ensure(this.pdfDocument,e,t)},ensureXRef:function(e,t){return this.ensure(this.pdfDocument.xref,e,t)},ensureCatalog:function(e,t){return this.ensure(this.pdfDocument.catalog,e,t)},getPage:function(e){return this.pdfDocument.getPage(e)},cleanup:function(){return this.pdfDocument.cleanup()},ensure:function(e,t,r){return new a.NotImplementedException},requestRange:function(e,t){return new a.NotImplementedException},requestLoadedStream:function(){return new a.NotImplementedException},sendProgressiveData:function(e){return new a.NotImplementedException},updatePassword:function(e){this._password=e},terminate:function(){return new a.NotImplementedException}},e}(),c=function(){function e(e,t,r,i,s){this._docId=e,this._password=r,this._docBaseUrl=s,this.evaluatorOptions=i;var c=new o.Stream(t);this.pdfDocument=new n.PDFDocument(this,c),this._loadedStreamCapability=(0,a.createPromiseCapability)(),this._loadedStreamCapability.resolve(c)}return a.Util.inherit(e,s,{ensure:function(e,t,r){return new Promise(function(a,i){try{var n=e[t];a(\"function\"==typeof n?n.apply(e,r):n)}catch(e){i(e)}})},requestRange:function(e,t){return Promise.resolve()},requestLoadedStream:function(){},onLoadedStream:function(){return this._loadedStreamCapability.promise},terminate:function(){}}),e}(),l=function(){function e(e,t,r,a,o){this._docId=e,this._password=r.password,this._docBaseUrl=o,this.msgHandler=r.msgHandler,this.evaluatorOptions=a;var s={msgHandler:r.msgHandler,url:r.url,length:r.length,disableAutoFetch:r.disableAutoFetch,rangeChunkSize:r.rangeChunkSize};this.streamManager=new i.ChunkedStreamManager(t,s),this.pdfDocument=new n.PDFDocument(this,this.streamManager.getStream())}return a.Util.inherit(e,s,{ensure:function(e,t,r){var i=this;return new Promise(function(n,o){!function s(){try{var c,l=e[t];c=\"function\"==typeof l?l.apply(e,r):l,n(c)}catch(e){if(!(e instanceof a.MissingDataException))return void o(e);i.streamManager.requestRange(e.begin,e.end).then(s,o)}}()})},requestRange:function(e,t){return this.streamManager.requestRange(e,t)},requestLoadedStream:function(){this.streamManager.requestAllChunks()},sendProgressiveData:function(e){this.streamManager.onReceiveData({chunk:e})},onLoadedStream:function(){return this.streamManager.onLoadedStream()},terminate:function(){this.streamManager.abort()}}),e}();t.LocalPdfManager=c,t.NetworkPdfManager=l},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFDocument=t.Page=void 0;var a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},i=r(64),n=r(1),o=r(0),s=r(2),c=r(134),l=r(68),u=r(26),h=r(42),f=r(135),d=r(72),g=function(){var e=[0,0,612,792];function t(e,t){return\"display\"===t&&e.viewable||\"print\"===t&&e.printable}function r(e){var t=e.pdfManager,r=e.xref,a=e.pageIndex,i=e.pageDict,n=e.ref,o=e.fontCache,s=e.builtInCMapCache,c=e.pdfFunctionFactory;this.pdfManager=t,this.pageIndex=a,this.pageDict=i,this.xref=r,this.ref=n,this.fontCache=o,this.builtInCMapCache=s,this.pdfFunctionFactory=c,this.evaluatorOptions=t.evaluatorOptions,this.resourcesPromise=null;var l=\"p\"+this.pageIndex+\"_\",u={obj:0};this.idFactory={createObjId:function(){return l+ ++u.obj}}}return r.prototype={getPageProp:function(e){return this.pageDict.get(e)},getInheritedPageProp:function(e,t){var r=this.pageDict,a=null,i=0;for(t=t||!1;r;){var s=t?r.getArray(e):r.get(e);if(void 0!==s&&(a||(a=[]),a.push(s)),++i>100)return(0,o.warn)(\"getInheritedPageProp: maximum loop count exceeded for \"+e),a?a[0]:void 0;r=r.get(\"Parent\")}if(a)return 1!==a.length&&(0,n.isDict)(a[0])?n.Dict.merge(this.xref,a):a[0]},get content(){return this.getPageProp(\"Contents\")},get resources(){return(0,o.shadow)(this,\"resources\",this.getInheritedPageProp(\"Resources\")||n.Dict.empty)},get mediaBox(){var t=this.getInheritedPageProp(\"MediaBox\",!0);return Array.isArray(t)&&4===t.length?(0,o.shadow)(this,\"mediaBox\",t):(0,o.shadow)(this,\"mediaBox\",e)},get cropBox(){var e=this.getInheritedPageProp(\"CropBox\",!0);return Array.isArray(e)&&4===e.length?(0,o.shadow)(this,\"cropBox\",e):(0,o.shadow)(this,\"cropBox\",this.mediaBox)},get userUnit(){var e=this.getPageProp(\"UserUnit\");return(!(0,o.isNum)(e)||e<=0)&&(e=1),(0,o.shadow)(this,\"userUnit\",e)},get view(){var e=this.mediaBox,t=this.cropBox;if(e===t)return(0,o.shadow)(this,\"view\",e);var r=o.Util.intersect(t,e);return(0,o.shadow)(this,\"view\",r||e)},get rotate(){var e=this.getInheritedPageProp(\"Rotate\")||0;return e%90!=0?e=0:e>=360?e%=360:e<0&&(e=(e%360+360)%360),(0,o.shadow)(this,\"rotate\",e)},getContentStream:function(){var e,t=this.content;if(Array.isArray(t)){var r,a=this.xref,i=t.length,o=[];for(r=0;r<i;++r)o.push(a.fetchIfRef(t[r]));e=new s.StreamsSequenceStream(o)}else e=(0,n.isStream)(t)?t:new s.NullStream;return e},loadResources:function(e){var t=this;return this.resourcesPromise||(this.resourcesPromise=this.pdfManager.ensure(this,\"resources\")),this.resourcesPromise.then(function(){return new i.ObjectLoader(t.resources,e,t.xref).load()})},getOperatorList:function(e){var r=this,i=e.handler,n=e.task,s=e.intent,c=e.renderInteractiveForms,l=this.pdfManager.ensure(this,\"getContentStream\"),u=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),d=new f.PartialEvaluator({pdfManager:this.pdfManager,xref:this.xref,handler:i,pageIndex:this.pageIndex,idFactory:this.idFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,options:this.evaluatorOptions,pdfFunctionFactory:this.pdfFunctionFactory}),g=Promise.all([l,u]).then(function(e){var t=a(e,1)[0],o=new h.OperatorList(s,i,r.pageIndex);return i.send(\"StartRenderPage\",{transparency:d.hasBlendModes(r.resources),pageIndex:r.pageIndex,intent:s}),d.getOperatorList({stream:t,task:n,resources:r.resources,operatorList:o}).then(function(){return o})}),m=this.pdfManager.ensure(this,\"annotations\");return Promise.all([g,m]).then(function(e){var r=a(e,2),i=r[0],l=r[1];if(0===l.length)return i.flush(!0),i;var u,h,f=[];for(u=0,h=l.length;u<h;u++)t(l[u],s)&&f.push(l[u].getOperatorList(d,n,c));return Promise.all(f).then(function(e){for(i.addOp(o.OPS.beginAnnotations,[]),u=0,h=e.length;u<h;u++)i.addOpList(e[u]);return i.addOp(o.OPS.endAnnotations,[]),i.flush(!0),i})})},extractTextContent:function(e){var t=this,r=e.handler,i=e.task,n=e.normalizeWhitespace,o=e.sink,s=e.combineTextItems,c=this.pdfManager.ensure(this,\"getContentStream\"),l=this.loadResources([\"ExtGState\",\"XObject\",\"Font\"]);return Promise.all([c,l]).then(function(e){var c=a(e,1)[0];return new f.PartialEvaluator({pdfManager:t.pdfManager,xref:t.xref,handler:r,pageIndex:t.pageIndex,idFactory:t.idFactory,fontCache:t.fontCache,builtInCMapCache:t.builtInCMapCache,options:t.evaluatorOptions,pdfFunctionFactory:t.pdfFunctionFactory}).getTextContent({stream:c,task:i,resources:t.resources,normalizeWhitespace:n,combineTextItems:s,sink:o})})},getAnnotationsData:function(e){for(var r=this.annotations,a=[],i=0,n=r.length;i<n;++i)e&&!t(r[i],e)||a.push(r[i].data);return a},get annotations(){for(var e=[],t=this.getInheritedPageProp(\"Annots\")||[],r=0,a=t.length;r<a;++r){var i=t[r],n=c.AnnotationFactory.create(this.xref,i,this.pdfManager,this.idFactory);n&&e.push(n)}return(0,o.shadow)(this,\"annotations\",e)}},r}(),m=function(){function e(e,t){var r;if((0,n.isStream)(t))r=t;else{if(!(0,o.isArrayBuffer)(t))throw new Error(\"PDFDocument: Unknown argument type\");r=new s.Stream(t)}if(r.length<=0)throw new Error(\"PDFDocument: stream must have data\");this.pdfManager=e,this.stream=r,this.xref=new i.XRef(r,e);var a=e.evaluatorOptions;this.pdfFunctionFactory=new d.PDFFunctionFactory({xref:this.xref,isEvalSupported:a.isEvalSupported})}function t(e,t,r,a){var i=e.pos,n=e.end,o=[];i+r>n&&(r=n-i);for(var s=0;s<r;++s)o.push(String.fromCharCode(e.getByte()));var c=o.join(\"\");e.pos=i;var l=a?c.lastIndexOf(t):c.indexOf(t);return-1!==l&&(e.pos+=l,!0)}var r={get entries(){return(0,o.shadow)(this,\"entries\",{Title:o.isString,Author:o.isString,Subject:o.isString,Keywords:o.isString,Creator:o.isString,Producer:o.isString,CreationDate:o.isString,ModDate:o.isString,Trapped:n.isName})}};return e.prototype={parse:function(e){this.setup(e);var t=this.catalog.catDict.get(\"Version\");(0,n.isName)(t)&&(this.pdfFormatVersion=t.name);try{if(this.acroForm=this.catalog.catDict.get(\"AcroForm\"),this.acroForm){this.xfa=this.acroForm.get(\"XFA\");var r=this.acroForm.get(\"Fields\");r&&Array.isArray(r)&&0!==r.length||this.xfa||(this.acroForm=null)}}catch(e){if(e instanceof o.MissingDataException)throw e;(0,o.info)(\"Something wrong with AcroForm entry\"),this.acroForm=null}},get linearization(){var e=null;if(this.stream.length)try{e=u.Linearization.create(this.stream)}catch(e){if(e instanceof o.MissingDataException)throw e;(0,o.info)(e)}return(0,o.shadow)(this,\"linearization\",e)},get startXRef(){var e=this.stream,r=0;if(this.linearization)e.reset(),t(e,\"endobj\",1024)&&(r=e.pos+6);else{for(var a=!1,i=e.end;!a&&i>0;)(i-=1024-\"startxref\".length)<0&&(i=0),e.pos=i,a=t(e,\"startxref\",1024,!0);if(a){var n;e.skip(9);do{n=e.getByte()}while((0,o.isSpace)(n));for(var s=\"\";n>=32&&n<=57;)s+=String.fromCharCode(n),n=e.getByte();r=parseInt(s,10),isNaN(r)&&(r=0)}}return(0,o.shadow)(this,\"startXRef\",r)},get mainXRefEntriesOffset(){var e=0,t=this.linearization;return t&&(e=t.mainXRefEntriesOffset),(0,o.shadow)(this,\"mainXRefEntriesOffset\",e)},checkHeader:function(){var e=this.stream;if(e.reset(),t(e,\"%PDF-\",1024)){e.moveStart();for(var r,a=\"\";(r=e.getByte())>32&&!(a.length>=12);)a+=String.fromCharCode(r);this.pdfFormatVersion||(this.pdfFormatVersion=a.substring(5))}else;},parseStartXRef:function(){var e=this.startXRef;this.xref.setStartXRef(e)},setup:function(e){var t=this;this.xref.parse(e);var r={createPage:function(e,r,a,i,n){return new g({pdfManager:t.pdfManager,xref:t.xref,pageIndex:e,pageDict:r,ref:a,fontCache:i,builtInCMapCache:n,pdfFunctionFactory:t.pdfFunctionFactory})}};this.catalog=new i.Catalog(this.pdfManager,this.xref,r)},get numPages(){var e=this.linearization,t=e?e.numPages:this.catalog.numPages;return(0,o.shadow)(this,\"numPages\",t)},get documentInfo(){var e,t={PDFFormatVersion:this.pdfFormatVersion,IsAcroFormPresent:!!this.acroForm,IsXFAPresent:!!this.xfa};try{e=this.xref.trailer.get(\"Info\")}catch(e){if(e instanceof o.MissingDataException)throw e;(0,o.info)(\"The document information dictionary is invalid.\")}if(e){var a=r.entries;for(var i in a)if(e.has(i)){var n=e.get(i);a[i](n)?t[i]=\"string\"!=typeof n?n:(0,o.stringToPDFString)(n):(0,o.info)('Bad value in document info for \"'+i+'\"')}}return(0,o.shadow)(this,\"documentInfo\",t)},get fingerprint(){var e,t=\"\",r=this.xref.trailer.get(\"ID\");Array.isArray(r)&&r[0]&&(0,o.isString)(r[0])&&\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"!==r[0]?e=(0,o.stringToBytes)(r[0]):(this.stream.ensureRange&&this.stream.ensureRange(0,Math.min(1024,this.stream.end)),e=(0,l.calculateMD5)(this.stream.bytes.subarray(0,1024),0,1024));for(var a=0,i=e.length;a<i;a++){var n=e[a].toString(16);t+=1===n.length?\"0\"+n:n}return(0,o.shadow)(this,\"fingerprint\",t)},getPage:function(e){return this.catalog.getPage(e)},cleanup:function(){return this.catalog.cleanup()}},e}();t.Page=g,t.PDFDocument=m},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxStream=void 0;var a=r(1),i=r(65),n=r(2),o=function(){function e(e,t,r){this.str=e,this.dict=e.dict,(0,a.isDict)(r)||(r=a.Dict.empty);var o={next:function(){return e.getByte()}};this.ccittFaxDecoder=new i.CCITTFaxDecoder(o,{K:r.get(\"K\"),EndOfLine:r.get(\"EndOfLine\"),EncodedByteAlign:r.get(\"EncodedByteAlign\"),Columns:r.get(\"Columns\"),Rows:r.get(\"Rows\"),EndOfBlock:r.get(\"EndOfBlock\"),BlackIs1:r.get(\"BlackIs1\")}),n.DecodeStream.call(this,t)}return e.prototype=Object.create(n.DecodeStream.prototype),e.prototype.readBlock=function(){for(;!this.eof;){var e=this.ccittFaxDecoder.readNextChar();if(-1===e)return void(this.eof=!0);this.ensureBuffer(this.bufferLength+1),this.buffer[this.bufferLength++]=e}},e}();t.CCITTFaxStream=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Stream=void 0;var a=r(1),i=r(2),n=r(131),o=r(0),s=function(){function e(e,t,r,a){this.stream=e,this.maybeLength=t,this.dict=r,this.params=a,i.DecodeStream.call(this,t)}return e.prototype=Object.create(i.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,o.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new n.Jbig2Image,t=[];if((0,a.isDict)(this.params)){var r=this.params.get(\"JBIG2Globals\");if((0,a.isStream)(r)){var i=r.getBytes();t.push({data:i,start:0,end:i.length})}}t.push({data:this.bytes,start:0,end:this.bytes.length});for(var o=e.parseChunks(t),s=o.length,c=0;c<s;c++)o[c]^=255;this.buffer=o,this.bufferLength=s,this.eof=!0}},e}();t.Jbig2Stream=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Image=void 0;var a=r(0),i=r(66),n=r(65),o=function(){function e(e){this.message=\"JBIG2 error: \"+e}return e.prototype=new Error,e.prototype.name=\"Jbig2Error\",e.constructor=e,e}(),s=function(){function e(){}function t(e,t,r){this.data=e,this.start=t,this.end=r}function r(e,t,r){var a=e.getContexts(t),i=1;function n(e){for(var t=0,n=0;n<e;n++){var o=r.readBit(a,i);i=i<256?i<<1|o:511&(i<<1|o)|256,t=t<<1|o}return t>>>0}var o=n(1),s=n(1)?n(1)?n(1)?n(1)?n(1)?n(32)+4436:n(12)+340:n(8)+84:n(6)+20:n(4)+4:n(2);return 0===o?s:s>0?-s:null}function s(e,t,r){for(var a=e.getContexts(\"IAID\"),i=1,n=0;n<r;n++){i=i<<1|t.readBit(a,i)}return r<31?i&(1<<r)-1:2147483647&i}e.prototype={getContexts:function(e){return e in this?this[e]:this[e]=new Int8Array(65536)}},t.prototype={get decoder(){var e=new i.ArithmeticDecoder(this.data,this.start,this.end);return(0,a.shadow)(this,\"decoder\",e)},get contextCache(){var t=new e;return(0,a.shadow)(this,\"contextCache\",t)}};var c=[\"SymbolDictionary\",null,null,null,\"IntermediateTextRegion\",null,\"ImmediateTextRegion\",\"ImmediateLosslessTextRegion\",null,null,null,null,null,null,null,null,\"PatternDictionary\",null,null,null,\"IntermediateHalftoneRegion\",null,\"ImmediateHalftoneRegion\",\"ImmediateLosslessHalftoneRegion\",null,null,null,null,null,null,null,null,null,null,null,null,\"IntermediateGenericRegion\",null,\"ImmediateGenericRegion\",\"ImmediateLosslessGenericRegion\",\"IntermediateGenericRefinementRegion\",null,\"ImmediateGenericRefinementRegion\",\"ImmediateLosslessGenericRefinementRegion\",null,null,null,null,\"PageInformation\",\"EndOfPage\",\"EndOfStripe\",\"EndOfFile\",\"Profiles\",\"Tables\",null,null,null,null,null,null,null,null,\"Extension\"],l=[[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:2,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-2,y:0},{x:-1,y:0}],[{x:-3,y:-1},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}]],u=[{coding:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]},{coding:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:0,y:1},{x:1,y:1}]}],h=[39717,1941,229,405],f=[32,8];function d(e,t,r,a,i,n,o,s){if(e)return E(new I(s.data,s.start,s.end),t,r,!1);if(0===a&&!n&&!i&&4===o.length&&3===o[0].x&&-1===o[0].y&&-3===o[1].x&&-1===o[1].y&&2===o[2].x&&-2===o[2].y&&-2===o[3].x&&-2===o[3].y)return function(e,t,r){var a,i,n,o,s,c,l,u=r.decoder,h=r.contextCache.getContexts(\"GB\"),f=[];for(i=0;i<t;i++)for(s=f[i]=new Uint8Array(e),c=i<1?s:f[i-1],a=(l=i<2?s:f[i-2])[0]<<13|l[1]<<12|l[2]<<11|c[0]<<7|c[1]<<6|c[2]<<5|c[3]<<4,n=0;n<e;n++)s[n]=o=u.readBit(h,a),a=(31735&a)<<1|(n+3<e?l[n+3]<<11:0)|(n+4<e?c[n+4]<<4:0)|o;return f}(t,r,s);var c=!!n,u=l[a].concat(o);u.sort(function(e,t){return e.y-t.y||e.x-t.x});var f,d,g=u.length,m=new Int8Array(g),p=new Int8Array(g),b=[],v=0,y=0,w=0,k=0;for(d=0;d<g;d++)m[d]=u[d].x,p[d]=u[d].y,y=Math.min(y,u[d].x),w=Math.max(w,u[d].x),k=Math.min(k,u[d].y),d<g-1&&u[d].y===u[d+1].y&&u[d].x===u[d+1].x-1?v|=1<<g-1-d:b.push(d);var S=b.length,C=new Int8Array(S),x=new Int8Array(S),A=new Uint16Array(S);for(f=0;f<S;f++)d=b[f],C[f]=u[d].x,x[f]=u[d].y,A[f]=1<<g-1-d;for(var _,P,T,O,F,R=-y,B=-k,M=t-w,D=h[a],L=new Uint8Array(t),N=[],U=s.decoder,q=s.contextCache.getContexts(\"GB\"),j=0,z=0,H=0;H<r;H++){if(i)if(j^=U.readBit(q,D)){N.push(L);continue}for(L=new Uint8Array(L),N.push(L),_=0;_<t;_++)if(c&&n[H][_])L[_]=0;else{if(_>=R&&_<M&&H>=B)for(z=z<<1&v,d=0;d<S;d++)P=H+x[d],T=_+C[d],(O=N[P][T])&&(z|=O=A[d]);else for(z=0,F=g-1,d=0;d<g;d++,F--)(T=_+m[d])>=0&&T<t&&(P=H+p[d])>=0&&(O=N[P][T])&&(z|=O<<F);var G=U.readBit(q,z);L[_]=G}}return N}function g(e,t,r,a,i,n,s,c,l){var h=u[r].coding;0===r&&(h=h.concat([c[0]]));var d,g=h.length,m=new Int32Array(g),p=new Int32Array(g);for(d=0;d<g;d++)m[d]=h[d].x,p[d]=h[d].y;var b=u[r].reference;0===r&&(b=b.concat([c[1]]));var v=b.length,y=new Int32Array(v),w=new Int32Array(v);for(d=0;d<v;d++)y[d]=b[d].x,w[d]=b[d].y;for(var k=a[0].length,S=a.length,C=f[r],x=[],A=l.decoder,_=l.contextCache.getContexts(\"GR\"),P=0,I=0;I<t;I++){if(s)if(P^=A.readBit(_,C))throw new o(\"prediction is not supported\");var T=new Uint8Array(e);x.push(T);for(var O=0;O<e;O++){var E,F,R=0;for(d=0;d<g;d++)E=I+p[d],F=O+m[d],E<0||F<0||F>=e?R<<=1:R=R<<1|x[E][F];for(d=0;d<v;d++)E=I+w[d]-n,F=O+y[d]-i,E<0||E>=S||F<0||F>=k?R<<=1:R=R<<1|a[E][F];var B=A.readBit(_,R);T[O]=B}}return x}function m(e,t,a,i,n,c,l,u,h,f,d,m,p,b,v,y,w,k,S){if(e&&t)throw new o(\"refinement with Huffman is not supported\");var C,x,A=[];for(C=0;C<i;C++){if(x=new Uint8Array(a),n)for(var _=0;_<a;_++)x[_]=n;A.push(x)}var P=w.decoder,I=w.contextCache,T=e?-b.tableDeltaT.decode(S):-r(I,\"IADT\",P),O=0;for(C=0;C<c;){T+=e?b.tableDeltaT.decode(S):r(I,\"IADT\",P);for(var E=O+=e?b.tableFirstS.decode(S):r(I,\"IAFS\",P);;){var F=0;l>1&&(F=e?S.readBits(k):r(I,\"IAIT\",P));var R=l*T+F,B=e?b.symbolIDTable.decode(S):s(I,P,h),M=t&&(e?S.readBit():r(I,\"IARI\",P)),D=u[B],L=D[0].length,N=D.length;if(M){var U=r(I,\"IARDW\",P),q=r(I,\"IARDH\",P);D=g(L+=U,N+=q,v,D,(U>>1)+r(I,\"IARDX\",P),(q>>1)+r(I,\"IARDY\",P),!1,y,w)}var j,z,H,G=R-(1&m?0:N-1),W=E-(2&m?L-1:0);if(f){for(j=0;j<N;j++)if(x=A[W+j]){H=D[j];var X=Math.min(a-G,L);switch(p){case 0:for(z=0;z<X;z++)x[G+z]|=H[z];break;case 2:for(z=0;z<X;z++)x[G+z]^=H[z];break;default:throw new o(\"operator \"+p+\" is not supported\")}}E+=N-1}else{for(z=0;z<N;z++)if(x=A[G+z])switch(H=D[z],p){case 0:for(j=0;j<L;j++)x[W+j]|=H[j];break;case 2:for(j=0;j<L;j++)x[W+j]^=H[j];break;default:throw new o(\"operator \"+p+\" is not supported\")}E+=L-1}C++;var V=e?b.tableDeltaS.decode(S):r(I,\"IADS\",P);if(null===V)break;E+=V+d}}return A}function p(e,t){var r={};r.number=(0,a.readUint32)(e,t);var i=e[t+4],n=63&i;if(!c[n])throw new o(\"invalid segment type: \"+n);r.type=n,r.typeName=c[n],r.deferredNonRetain=!!(128&i);var s=!!(64&i),l=e[t+5],u=l>>5&7,h=[31&l],f=t+6;if(7===l){u=536870911&(0,a.readUint32)(e,f-1),f+=3;var d=u+7>>3;for(h[0]=e[f++];--d>0;)h.push(e[f++])}else if(5===l||6===l)throw new o(\"invalid referred-to flags\");r.retainBits=h;var g,m,p=r.number<=256?1:r.number<=65536?2:4,b=[];for(g=0;g<u;g++){var w=1===p?e[f]:2===p?(0,a.readUint16)(e,f):(0,a.readUint32)(e,f);b.push(w),f+=p}if(r.referredTo=b,s?(r.pageAssociation=(0,a.readUint32)(e,f),f+=4):r.pageAssociation=e[f++],r.length=(0,a.readUint32)(e,f),f+=4,4294967295===r.length){if(38!==n)throw new o(\"invalid unknown segment length\");var k=v(e,f),S=!!(1&e[f+y]),C=new Uint8Array(6);for(S||(C[0]=255,C[1]=172),C[2]=k.height>>>24&255,C[3]=k.height>>16&255,C[4]=k.height>>8&255,C[5]=255&k.height,g=f,m=e.length;g<m;g++){for(var x=0;x<6&&C[x]===e[g+x];)x++;if(6===x){r.length=g+6;break}}if(4294967295===r.length)throw new o(\"segment end was not found\")}return r.headerEnd=f,r}function b(e,t,r,a){for(var i=[],n=r;n<a;){var o=p(t,n);n=o.headerEnd;var s={header:o,data:t};if(e.randomAccess||(s.start=n,n+=o.length,s.end=n),i.push(s),51===o.type)break}if(e.randomAccess)for(var c=0,l=i.length;c<l;c++)i[c].start=n,n+=i[c].header.length,i[c].end=n;return i}function v(e,t){return{width:(0,a.readUint32)(e,t),height:(0,a.readUint32)(e,t+4),x:(0,a.readUint32)(e,t+8),y:(0,a.readUint32)(e,t+12),combinationOperator:7&e[t+16]}}var y=17;function w(e,t){var r,i,n,s,c=e.header,l=e.data,u=e.start,h=e.end;switch(c.type){case 0:var f={},d=(0,a.readUint16)(l,u);if(f.huffman=!!(1&d),f.refinement=!!(2&d),f.huffmanDHSelector=d>>2&3,f.huffmanDWSelector=d>>4&3,f.bitmapSizeSelector=d>>6&1,f.aggregationInstancesSelector=d>>7&1,f.bitmapCodingContextUsed=!!(256&d),f.bitmapCodingContextRetained=!!(512&d),f.template=d>>10&3,f.refinementTemplate=d>>12&1,u+=2,!f.huffman){for(s=0===f.template?4:1,i=[],n=0;n<s;n++)i.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;f.at=i}if(f.refinement&&!f.refinementTemplate){for(i=[],n=0;n<2;n++)i.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;f.refinementAt=i}f.numberOfExportedSymbols=(0,a.readUint32)(l,u),u+=4,f.numberOfNewSymbols=(0,a.readUint32)(l,u),u+=4,r=[f,c.number,c.referredTo,l,u,h];break;case 6:case 7:var g={};g.info=v(l,u),u+=y;var m=(0,a.readUint16)(l,u);if(u+=2,g.huffman=!!(1&m),g.refinement=!!(2&m),g.logStripSize=m>>2&3,g.stripSize=1<<g.logStripSize,g.referenceCorner=m>>4&3,g.transposed=!!(64&m),g.combinationOperator=m>>7&3,g.defaultPixelValue=m>>9&1,g.dsOffset=m<<17>>27,g.refinementTemplate=m>>15&1,g.huffman){var p=(0,a.readUint16)(l,u);u+=2,g.huffmanFS=3&p,g.huffmanDS=p>>2&3,g.huffmanDT=p>>4&3,g.huffmanRefinementDW=p>>6&3,g.huffmanRefinementDH=p>>8&3,g.huffmanRefinementDX=p>>10&3,g.huffmanRefinementDY=p>>12&3,g.huffmanRefinementSizeSelector=!!(16384&p)}if(g.refinement&&!g.refinementTemplate){for(i=[],n=0;n<2;n++)i.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;g.refinementAt=i}g.numberOfSymbolInstances=(0,a.readUint32)(l,u),u+=4,r=[g,c.referredTo,l,u,h];break;case 16:var b={},w=l[u++];b.mmr=!!(1&w),b.template=w>>1&3,b.patternWidth=l[u++],b.patternHeight=l[u++],b.maxPatternIndex=(0,a.readUint32)(l,u),u+=4,r=[b,c.number,l,u,h];break;case 22:case 23:var k={};k.info=v(l,u),u+=y;var S=l[u++];k.mmr=!!(1&S),k.template=S>>1&3,k.enableSkip=!!(8&S),k.combinationOperator=S>>4&7,k.defaultPixelValue=S>>7&1,k.gridWidth=(0,a.readUint32)(l,u),u+=4,k.gridHeight=(0,a.readUint32)(l,u),u+=4,k.gridOffsetX=4294967295&(0,a.readUint32)(l,u),u+=4,k.gridOffsetY=4294967295&(0,a.readUint32)(l,u),u+=4,k.gridVectorX=(0,a.readUint16)(l,u),u+=2,k.gridVectorY=(0,a.readUint16)(l,u),u+=2,r=[k,c.referredTo,l,u,h];break;case 38:case 39:var C={};C.info=v(l,u),u+=y;var x=l[u++];if(C.mmr=!!(1&x),C.template=x>>1&3,C.prediction=!!(8&x),!C.mmr){for(s=0===C.template?4:1,i=[],n=0;n<s;n++)i.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;C.at=i}r=[C,l,u,h];break;case 48:var A={width:(0,a.readUint32)(l,u),height:(0,a.readUint32)(l,u+4),resolutionX:(0,a.readUint32)(l,u+8),resolutionY:(0,a.readUint32)(l,u+12)};4294967295===A.height&&delete A.height;var _=l[u+16];(0,a.readUint16)(l,u+17),A.lossless=!!(1&_),A.refinement=!!(2&_),A.defaultPixelValue=_>>2&1,A.combinationOperator=_>>3&3,A.requiresBuffer=!!(32&_),A.combinationOperatorOverride=!!(64&_),r=[A];break;case 49:case 50:case 51:break;case 53:r=[c.number,l,u,h];break;case 62:break;default:throw new o(\"segment type \"+c.typeName+\"(\"+c.type+\") is not implemented\")}var P=\"on\"+c.typeName;P in t&&t[P].apply(t,r)}function k(e,t){for(var r=0,a=e.length;r<a;r++)w(e[r],t)}function S(){}function C(e){2===e.length?(this.isOOB=!0,this.rangeLow=0,this.prefixLength=e[0],this.rangeLength=0,this.prefixCode=e[1],this.isLowerRange=!1):(this.isOOB=!1,this.rangeLow=e[0],this.prefixLength=e[1],this.rangeLength=e[2],this.prefixCode=e[3],this.isLowerRange=\"lower\"===e[4])}function x(e){this.children=[],e?(this.isLeaf=!0,this.rangeLength=e.rangeLength,this.rangeLow=e.rangeLow,this.isLowerRange=e.isLowerRange,this.isOOB=e.isOOB):this.isLeaf=!1}function A(e,t){t||this.assignPrefixCodes(e),this.rootNode=new x(null);var r=void 0,a=e.length,i=void 0;for(r=0;r<a;r++)(i=e[r]).prefixLength>0&&this.rootNode.buildTree(i,i.prefixLength-1)}S.prototype={onPageInformation:function(e){this.currentPageInfo=e;var t=e.width+7>>3,r=new Uint8ClampedArray(t*e.height);if(e.defaultPixelValue)for(var a=0,i=r.length;a<i;a++)r[a]=255;this.buffer=r},drawBitmap:function(e,t){var r,a,i,n,s=this.currentPageInfo,c=e.width,l=e.height,u=s.width+7>>3,h=s.combinationOperatorOverride?e.combinationOperator:s.combinationOperator,f=this.buffer,d=128>>(7&e.x),g=e.y*u+(e.x>>3);switch(h){case 0:for(r=0;r<l;r++){for(i=d,n=g,a=0;a<c;a++)t[r][a]&&(f[n]|=i),(i>>=1)||(i=128,n++);g+=u}break;case 2:for(r=0;r<l;r++){for(i=d,n=g,a=0;a<c;a++)t[r][a]&&(f[n]^=i),(i>>=1)||(i=128,n++);g+=u}break;default:throw new o(\"operator \"+h+\" is not supported\")}},onImmediateGenericRegion:function(e,r,a,i){var n=e.info,o=new t(r,a,i),s=d(e.mmr,n.width,n.height,e.template,e.prediction,null,e.at,o);this.drawBitmap(n,s)},onImmediateLosslessGenericRegion:function(){this.onImmediateGenericRegion.apply(this,arguments)},onSymbolDictionary:function(e,i,n,c,l,u){var h=void 0,f=void 0;e.huffman&&(h=function(e,t,r){var a=0,i=void 0,n=void 0;switch(e.huffmanDHSelector){case 0:case 1:i=P(e.huffmanDHSelector+4);break;case 3:i=T(a,t,r),a++;break;default:throw new o(\"invalid Huffman DH selector\")}switch(e.huffmanDWSelector){case 0:case 1:n=P(e.huffmanDWSelector+2);break;case 3:n=T(a,t,r),a++;break;default:throw new o(\"invalid Huffman DW selector\")}var s=void 0,c=void 0;e.bitmapSizeSelector?(s=T(a,t,r),a++):s=P(1);c=e.aggregationInstancesSelector?T(a,t,r):P(1);return{tableDeltaHeight:i,tableDeltaWidth:n,tableBitmapSize:s,tableAggregateInstances:c}}(e,n,this.customTables),f=new I(c,l,u));var p=this.symbols;p||(this.symbols=p={});for(var b=[],v=0,y=n.length;v<y;v++){var w=p[n[v]];w&&(b=b.concat(w))}var k=new t(c,l,u);p[i]=function(e,t,i,n,c,l,u,h,f,p,b,v){if(e&&t)throw new o(\"symbol refinement with Huffman is not supported\");var y=[],w=0,k=(0,a.log2)(i.length+n),S=b.decoder,C=b.contextCache,x=void 0,A=void 0;for(e&&(x=P(1),A=[],k=Math.max(k,1));y.length<n;){w+=e?l.tableDeltaHeight.decode(v):r(C,\"IADH\",S);for(var _=0,I=0,T=e?A.length:0;;){var F,R=e?l.tableDeltaWidth.decode(v):r(C,\"IADW\",S);if(null===R)break;if(I+=_+=R,t){var B=r(C,\"IAAI\",S);if(B>1)F=m(e,t,_,w,0,B,1,i.concat(y),k,0,0,1,0,l,f,p,b,0,v);else{var M=s(C,S,k),D=r(C,\"IARDX\",S),L=r(C,\"IARDY\",S);F=g(_,w,f,M<i.length?i[M]:y[M-i.length],D,L,!1,p,b)}y.push(F)}else e?A.push(_):(F=d(!1,_,w,u,!1,null,h,b),y.push(F))}if(e&&!t){var N=l.tableBitmapSize.decode(v);v.byteAlign();var U=void 0;if(0===N)U=O(v,I,w);else{var q=v.end,j=v.position+N;v.end=j,U=E(v,I,w,!1),v.end=q,v.position=j}var z=A.length;if(T===z-1)y.push(U);else{var H=void 0,G=void 0,W=0,X=void 0,V=void 0;for(H=T;H<z;H++){for(X=W+A[H],V=[],G=0;G<w;G++)V.push(U[G].subarray(W,X));y.push(V),W=X}}}}for(var Y=[],K=[],J=!1,Z=i.length+n;K.length<Z;){for(var Q=e?x.decode(v):r(C,\"IAEX\",S);Q--;)K.push(J);J=!J}for(var $=0,ee=i.length;$<ee;$++)K[$]&&Y.push(i[$]);for(var te=0;te<n;$++,te++)K[$]&&Y.push(y[te]);return Y}(e.huffman,e.refinement,b,e.numberOfNewSymbols,e.numberOfExportedSymbols,h,e.template,e.at,e.refinementTemplate,e.refinementAt,k,f)},onImmediateTextRegion:function(e,r,i,n,s){for(var c=e.info,l=void 0,u=void 0,h=this.symbols,f=[],d=0,g=r.length;d<g;d++){var p=h[r[d]];p&&(f=f.concat(p))}var b=(0,a.log2)(f.length);e.huffman&&(u=new I(i,n,s),l=function(e,t,r,a,i){var n=[],s=void 0,c=void 0;for(s=0;s<=34;s++)c=i.readBits(4),n.push(new C([s,c,0,0]));var l=new A(n,!1);for(n.length=0,s=0;s<a;)if((c=l.decode(i))>=32){var u=void 0,h=void 0,f=void 0;switch(c){case 32:if(0===s)throw new o(\"no previous value in symbol ID table\");h=i.readBits(2)+3,u=n[s-1].prefixLength;break;case 33:h=i.readBits(3)+3,u=0;break;case 34:h=i.readBits(7)+11,u=0;break;default:throw new o(\"invalid code length in symbol ID table\")}for(f=0;f<h;f++)n.push(new C([s,u,0,0])),s++}else n.push(new C([s,c,0,0])),s++;i.byteAlign();var d=new A(n,!1),g=0,m=void 0,p=void 0,b=void 0;switch(e.huffmanFS){case 0:case 1:m=P(e.huffmanFS+6);break;case 3:m=T(g,t,r),g++;break;default:throw new o(\"invalid Huffman FS selector\")}switch(e.huffmanDS){case 0:case 1:case 2:p=P(e.huffmanDS+8);break;case 3:p=T(g,t,r),g++;break;default:throw new o(\"invalid Huffman DS selector\")}switch(e.huffmanDT){case 0:case 1:case 2:b=P(e.huffmanDT+11);break;case 3:b=T(g,t,r),g++;break;default:throw new o(\"invalid Huffman DT selector\")}if(e.refinement)throw new o(\"refinement with Huffman is not supported\");return{symbolIDTable:d,tableFirstS:m,tableDeltaS:p,tableDeltaT:b}}(e,r,this.customTables,f.length,u));var v=new t(i,n,s),y=m(e.huffman,e.refinement,c.width,c.height,e.defaultPixelValue,e.numberOfSymbolInstances,e.stripSize,f,b,e.transposed,e.dsOffset,e.referenceCorner,e.combinationOperator,l,e.refinementTemplate,e.refinementAt,v,e.logStripSize,u);this.drawBitmap(c,y)},onImmediateLosslessTextRegion:function(){this.onImmediateTextRegion.apply(this,arguments)},onPatternDictionary:function(e,r,a,i,n){var o=this.patterns;o||(this.patterns=o={});var s=new t(a,i,n);o[r]=function(e,t,r,a,i,n){var o=[];e||(o.push({x:-t,y:0}),0===i&&(o.push({x:-3,y:-1}),o.push({x:2,y:-2}),o.push({x:-2,y:-2})));for(var s=d(e,(a+1)*t,r,i,!1,null,o,n),c=[],l=0,u=void 0,h=void 0,f=void 0,g=void 0;l<=a;){for(u=[],f=(h=t*l)+t,g=0;g<r;g++)u.push(s[g].subarray(h,f));c.push(u),l++}return c}(e.mmr,e.patternWidth,e.patternHeight,e.maxPatternIndex,e.template,s)},onImmediateHalftoneRegion:function(e,r,i,n,s){var c=this.patterns[r[0]],l=e.info,u=new t(i,n,s),h=function(e,t,r,i,n,s,c,l,u,h,f,g,m,p,b){if(c)throw new o(\"skip is not supported\");if(0!==l)throw new o(\"operator \"+l+\" is not supported in halftone region\");var v=[],y=void 0,w=void 0,k=void 0;for(y=0;y<n;y++){if(k=new Uint8Array(i),s)for(w=0;w<i;w++)k[w]=s;v.push(k)}var S=t.length,C=t[0],x=C[0].length,A=C.length,_=(0,a.log2)(S),P=[];e||(P.push({x:r<=1?3:2,y:-1}),0===r&&(P.push({x:-3,y:-1}),P.push({x:2,y:-2}),P.push({x:-2,y:-2})));var T=[],O=void 0,F=void 0;for(e&&(O=new I(b.data,b.start,b.end)),y=_-1;y>=0;y--)F=e?E(O,u,h,!0):d(!1,u,h,r,!1,null,P,b),T[y]=F;var R=void 0,B=void 0,M=void 0,D=void 0,L=void 0,N=void 0,U=void 0,q=void 0,j=void 0;for(R=0;R<h;R++)for(B=0;B<u;B++){for(M=0,D=0,w=_-1;w>=0;w--)D|=(M=T[w][R][B]^M)<<w;if(L=t[D],U=g+R*m-B*p>>8,(N=f+R*p+B*m>>8)>=0&&N+x<=i&&U>=0&&U+A<=n)for(y=0;y<A;y++)for(j=v[U+y],q=L[y],w=0;w<x;w++)j[N+w]|=q[w];else{var z=void 0,H=void 0;for(y=0;y<A;y++)if(!((H=U+y)<0||H>=n))for(j=v[H],q=L[y],w=0;w<x;w++)(z=N+w)>=0&&z<i&&(j[z]|=q[w])}}return v}(e.mmr,c,e.template,l.width,l.height,e.defaultPixelValue,e.enableSkip,e.combinationOperator,e.gridWidth,e.gridHeight,e.gridOffsetX,e.gridOffsetY,e.gridVectorX,e.gridVectorY,u);this.drawBitmap(l,h)},onImmediateLosslessHalftoneRegion:function(){this.onImmediateHalftoneRegion.apply(this,arguments)},onTables:function(e,t,r,i){var n=this.customTables;n||(this.customTables=n={}),n[e]=function(e,t,r){var i=e[t],n=4294967295&(0,a.readUint32)(e,t+1),o=4294967295&(0,a.readUint32)(e,t+5),s=new I(e,t+9,r),c=1+(i>>1&7),l=1+(i>>4&7),u=[],h=void 0,f=void 0,d=n;do{h=s.readBits(c),f=s.readBits(l),u.push(new C([d,h,f,0])),d+=1<<f}while(d<o);h=s.readBits(c),u.push(new C([n-1,h,32,0,\"lower\"])),h=s.readBits(c),u.push(new C([o,h,32,0])),1&i&&(h=s.readBits(c),u.push(new C([h,0])));return new A(u,!1)}(t,r,i)}},x.prototype={buildTree:function(e,t){var r=e.prefixCode>>t&1;if(t<=0)this.children[r]=new x(e);else{var a=this.children[r];a||(this.children[r]=a=new x(null)),a.buildTree(e,t-1)}},decodeNode:function(e){if(this.isLeaf){if(this.isOOB)return null;var t=e.readBits(this.rangeLength);return this.rangeLow+(this.isLowerRange?-t:t)}var r=this.children[e.readBit()];if(!r)throw new o(\"invalid Huffman data\");return r.decodeNode(e)}},A.prototype={decode:function(e){return this.rootNode.decodeNode(e)},assignPrefixCodes:function(e){var t=e.length,r=0,a=void 0;for(a=0;a<t;a++)r=Math.max(r,e[a].prefixLength);var i=new Uint32Array(r+1);for(a=0;a<t;a++)i[e[a].prefixLength]++;var n=1,o=0,s=void 0,c=void 0,l=void 0;for(i[0]=0;n<=r;){for(s=o=o+i[n-1]<<1,c=0;c<t;)(l=e[c]).prefixLength===n&&(l.prefixCode=s,s++),c++;n++}}};var _={};function P(e){var t=_[e];if(t)return t;var r=void 0;switch(e){case 1:r=[[0,1,4,0],[16,2,8,2],[272,3,16,6],[65808,3,32,7]];break;case 2:r=[[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[75,6,32,62],[6,63]];break;case 3:r=[[-256,8,8,254],[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[-257,8,32,255,\"lower\"],[75,7,32,126],[6,62]];break;case 4:r=[[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[76,5,32,31]];break;case 5:r=[[-255,7,8,126],[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[-256,7,32,127,\"lower\"],[76,6,32,62]];break;case 6:r=[[-2048,5,10,28],[-1024,4,9,8],[-512,4,8,9],[-256,4,7,10],[-128,5,6,29],[-64,5,5,30],[-32,4,5,11],[0,2,7,0],[128,3,7,2],[256,3,8,3],[512,4,9,12],[1024,4,10,13],[-2049,6,32,62,\"lower\"],[2048,6,32,63]];break;case 7:r=[[-1024,4,9,8],[-512,3,8,0],[-256,4,7,9],[-128,5,6,26],[-64,5,5,27],[-32,4,5,10],[0,4,5,11],[32,5,5,28],[64,5,6,29],[128,4,7,12],[256,3,8,1],[512,3,9,2],[1024,3,10,3],[-1025,5,32,30,\"lower\"],[2048,5,32,31]];break;case 8:r=[[-15,8,3,252],[-7,9,1,508],[-5,8,1,253],[-3,9,0,509],[-2,7,0,124],[-1,4,0,10],[0,2,1,0],[2,5,0,26],[3,6,0,58],[4,3,4,4],[20,6,1,59],[22,4,4,11],[38,4,5,12],[70,5,6,27],[134,5,7,28],[262,6,7,60],[390,7,8,125],[646,6,10,61],[-16,9,32,510,\"lower\"],[1670,9,32,511],[2,1]];break;case 9:r=[[-31,8,4,252],[-15,9,2,508],[-11,8,2,253],[-7,9,1,509],[-5,7,1,124],[-3,4,1,10],[-1,3,1,2],[1,3,1,3],[3,5,1,26],[5,6,1,58],[7,3,5,4],[39,6,2,59],[43,4,5,11],[75,4,6,12],[139,5,7,27],[267,5,8,28],[523,6,8,60],[779,7,9,125],[1291,6,11,61],[-32,9,32,510,\"lower\"],[3339,9,32,511],[2,0]];break;case 10:r=[[-21,7,4,122],[-5,8,0,252],[-4,7,0,123],[-3,5,0,24],[-2,2,2,0],[2,5,0,25],[3,6,0,54],[4,7,0,124],[5,8,0,253],[6,2,6,1],[70,5,5,26],[102,6,5,55],[134,6,6,56],[198,6,7,57],[326,6,8,58],[582,6,9,59],[1094,6,10,60],[2118,7,11,125],[-22,8,32,254,\"lower\"],[4166,8,32,255],[2,2]];break;case 11:r=[[1,1,0,0],[2,2,1,2],[4,4,0,12],[5,4,1,13],[7,5,1,28],[9,5,2,29],[13,6,2,60],[17,7,2,122],[21,7,3,123],[29,7,4,124],[45,7,5,125],[77,7,6,126],[141,7,32,127]];break;case 12:r=[[1,1,0,0],[2,2,0,2],[3,3,1,6],[5,5,0,28],[6,5,1,29],[8,6,1,60],[10,7,0,122],[11,7,1,123],[13,7,2,124],[17,7,3,125],[25,7,4,126],[41,8,5,254],[73,8,32,255]];break;case 13:r=[[1,1,0,0],[2,3,0,4],[3,4,0,12],[4,5,0,28],[5,4,1,13],[7,3,3,5],[15,6,1,58],[17,6,2,59],[21,6,3,60],[29,6,4,61],[45,6,5,62],[77,7,6,126],[141,7,32,127]];break;case 14:r=[[-2,3,0,4],[-1,3,0,5],[0,1,0,0],[1,3,0,6],[2,3,0,7]];break;case 15:r=[[-24,7,4,124],[-8,6,2,60],[-4,5,1,28],[-2,4,0,12],[-1,3,0,4],[0,1,0,0],[1,3,0,5],[2,4,0,13],[3,5,1,29],[5,6,2,61],[9,7,4,125],[-25,7,32,126,\"lower\"],[25,7,32,127]];break;default:throw new o(\"standard table B.\"+e+\" does not exist\")}var a=r.length,i=void 0;for(i=0;i<a;i++)r[i]=new C(r[i]);return t=new A(r,!0),_[e]=t,t}function I(e,t,r){this.data=e,this.start=t,this.end=r,this.position=t,this.shift=-1,this.currentByte=0}function T(e,t,r){var a=0,i=void 0,n=t.length,s=void 0;for(i=0;i<n;i++)if(s=r[t[i]]){if(e===a)return s;a++}throw new o(\"can't find custom Huffman table\")}function O(e,t,r){var a=[],i=void 0,n=void 0,o=void 0;for(n=0;n<r;n++){for(o=new Uint8Array(t),a.push(o),i=0;i<t;i++)o[i]=e.readBit();e.byteAlign()}return a}function E(e,t,r,a){var i={K:-1,Columns:t,Rows:r,BlackIs1:!0,EndOfBlock:a},o=new n.CCITTFaxDecoder(e,i),s=[],c=void 0,l=void 0,u=void 0,h=void 0,f=void 0,d=!1;for(l=0;l<r;l++)for(u=new Uint8Array(t),s.push(u),f=-1,c=0;c<t;c++)f<0&&(-1===(h=o.readNextChar())&&(h=0,d=!0),f=7),u[c]=h>>f&1,f--;if(a&&!d)for(var g=0;g<5&&-1!==o.readNextChar();g++);return s}function F(){}return I.prototype={readBit:function(){if(this.shift<0){if(this.position>=this.end)throw new o(\"end of data while reading bit\");this.currentByte=this.data[this.position++],this.shift=7}var e=this.currentByte>>this.shift&1;return this.shift--,e},readBits:function(e){var t=0,r=void 0;for(r=e-1;r>=0;r--)t|=this.readBit()<<r;return t},byteAlign:function(){this.shift=-1},next:function(){return this.position>=this.end?-1:this.data[this.position++]}},F.prototype={parseChunks:function(e){return function(e){for(var t=new S,r=0,a=e.length;r<a;r++){var i=e[r];k(b({},i.data,i.start,i.end),t)}return t.buffer}(e)}},F}();t.Jbig2Image=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegImage=void 0;var a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i=r(0),n=function(){function e(e){this.message=\"JPEG error: \"+e}return e.prototype=new Error,e.prototype.name=\"JpegError\",e.constructor=e,e}(),o=function(){var e=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),t=4017,r=799,o=3406,s=2276,c=1567,l=3784,u=5793,h=2896;function f(){this.decodeTransform=null,this.colorTransform=-1}function d(e,t){for(var r,a,i=0,n=[],o=16;o>0&&!e[o-1];)o--;n.push({children:[],index:0});var s,c=n[0];for(r=0;r<o;r++){for(a=0;a<e[r];a++){for((c=n.pop()).children[c.index]=t[i];c.index>0;)c=n.pop();for(c.index++,n.push(c);n.length<=r;)n.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s;i++}r+1<o&&(n.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s)}return n[0].children}function g(e,t,r){return 64*((e.blocksPerLine+1)*t+r)}function m(t,r,o,s,c,l,u,h,f){var d=o.mcusPerLine,m=o.progressive,p=r,b=0,y=0;function w(){if(y>0)return b>>--y&1;if(255===(b=t[r++])){var e=t[r++];if(e)throw new n(\"unexpected marker \"+(b<<8|e).toString(16))}return y=7,b>>>7}function k(e){for(var t=e;;){if(\"number\"==typeof(t=t[w()]))return t;if(\"object\"!==(void 0===t?\"undefined\":a(t)))throw new n(\"invalid huffman sequence\")}}function S(e){for(var t=0;e>0;)t=t<<1|w(),e--;return t}function C(e){if(1===e)return 1===w()?1:-1;var t=S(e);return t>=1<<e-1?t:t+(-1<<e)+1}var x=0;var A,_=0;function P(e,t,r,a,i){var n=r%d;t(e,g(e,(r/d|0)*e.v+a,n*e.h+i))}function I(e,t,r){t(e,g(e,r/e.blocksPerLine|0,r%e.blocksPerLine))}var T,O,E,F,R,B,M=s.length;B=m?0===l?0===h?function(e,t){var r=k(e.huffmanTableDC),a=0===r?0:C(r)<<f;e.blockData[t]=e.pred+=a}:function(e,t){e.blockData[t]|=w()<<f}:0===h?function(t,r){if(x>0)x--;else for(var a=l,i=u;a<=i;){var n=k(t.huffmanTableAC),o=15&n,s=n>>4;if(0!==o){var c=e[a+=s];t.blockData[r+c]=C(o)*(1<<f),a++}else{if(s<15){x=S(s)+(1<<s)-1;break}a+=16}}}:function(t,r){for(var a,i,o=l,s=u,c=0;o<=s;){var h=r+e[o],d=t.blockData[h]<0?-1:1;switch(_){case 0:if(c=(i=k(t.huffmanTableAC))>>4,0==(a=15&i))c<15?(x=S(c)+(1<<c),_=4):(c=16,_=1);else{if(1!==a)throw new n(\"invalid ACn encoding\");A=C(a),_=c?2:3}continue;case 1:case 2:t.blockData[h]?t.blockData[h]+=d*(w()<<f):0==--c&&(_=2===_?3:0);break;case 3:t.blockData[h]?t.blockData[h]+=d*(w()<<f):(t.blockData[h]=A<<f,_=0);break;case 4:t.blockData[h]&&(t.blockData[h]+=d*(w()<<f))}o++}4===_&&0==--x&&(_=0)}:function(t,r){var a=k(t.huffmanTableDC),i=0===a?0:C(a);t.blockData[r]=t.pred+=i;for(var n=1;n<64;){var o=k(t.huffmanTableAC),s=15&o,c=o>>4;if(0!==s){var l=e[n+=c];t.blockData[r+l]=C(s),n++}else{if(c<15)break;n+=16}}};var D,L,N,U,q=0;for(L=1===M?s[0].blocksPerLine*s[0].blocksPerColumn:d*o.mcusPerColumn;q<L;){var j=c?Math.min(L-q,c):L;for(O=0;O<M;O++)s[O].pred=0;if(x=0,1===M)for(T=s[0],R=0;R<j;R++)I(T,B,q),q++;else for(R=0;R<j;R++){for(O=0;O<M;O++)for(N=(T=s[O]).h,U=T.v,E=0;E<U;E++)for(F=0;F<N;F++)P(T,B,q,E,F);q++}y=0,(D=v(t,r))&&D.invalid&&((0,i.warn)(\"decodeScan - unexpected MCU data, next marker is: \"+D.invalid),r=D.offset);var z=D&&D.marker;if(!z||z<=65280)throw new n(\"marker was not found\");if(!(z>=65488&&z<=65495))break;r+=2}return(D=v(t,r))&&D.invalid&&((0,i.warn)(\"decodeScan - unexpected Scan data, next marker is: \"+D.invalid),r=D.offset),r-p}function p(e,a,i){var f,d,g,m,p,b,v,y,w,k,S,C,x,A,_,P,I,T=e.quantizationTable,O=e.blockData;if(!T)throw new n(\"missing required Quantization Table.\");for(var E=0;E<64;E+=8)w=O[a+E],k=O[a+E+1],S=O[a+E+2],C=O[a+E+3],x=O[a+E+4],A=O[a+E+5],_=O[a+E+6],P=O[a+E+7],w*=T[E],0!=(k|S|C|x|A|_|P)?(k*=T[E+1],S*=T[E+2],C*=T[E+3],x*=T[E+4],A*=T[E+5],_*=T[E+6],P*=T[E+7],d=(f=(f=u*w+128>>8)+(d=u*x+128>>8)+1>>1)-d,I=(g=S)*l+(m=_)*c+128>>8,g=g*c-m*l+128>>8,v=(p=(p=h*(k-P)+128>>8)+(v=A<<4)+1>>1)-v,b=(y=(y=h*(k+P)+128>>8)+(b=C<<4)+1>>1)-b,m=(f=f+(m=I)+1>>1)-m,g=(d=d+g+1>>1)-g,I=p*s+y*o+2048>>12,p=p*o-y*s+2048>>12,y=I,I=b*r+v*t+2048>>12,b=b*t-v*r+2048>>12,v=I,i[E]=f+y,i[E+7]=f-y,i[E+1]=d+v,i[E+6]=d-v,i[E+2]=g+b,i[E+5]=g-b,i[E+3]=m+p,i[E+4]=m-p):(I=u*w+512>>10,i[E]=I,i[E+1]=I,i[E+2]=I,i[E+3]=I,i[E+4]=I,i[E+5]=I,i[E+6]=I,i[E+7]=I);for(var F=0;F<8;++F)w=i[F],0!=((k=i[F+8])|(S=i[F+16])|(C=i[F+24])|(x=i[F+32])|(A=i[F+40])|(_=i[F+48])|(P=i[F+56]))?(d=(f=4112+((f=u*w+2048>>12)+(d=u*x+2048>>12)+1>>1))-d,I=(g=S)*l+(m=_)*c+2048>>12,g=g*c-m*l+2048>>12,m=I,v=(p=(p=h*(k-P)+2048>>12)+(v=A)+1>>1)-v,b=(y=(y=h*(k+P)+2048>>12)+(b=C)+1>>1)-b,I=p*s+y*o+2048>>12,p=p*o-y*s+2048>>12,y=I,I=b*r+v*t+2048>>12,b=b*t-v*r+2048>>12,w=(w=(f=f+m+1>>1)+y)<16?0:w>=4080?255:w>>4,k=(k=(d=d+g+1>>1)+(v=I))<16?0:k>=4080?255:k>>4,S=(S=(g=d-g)+b)<16?0:S>=4080?255:S>>4,C=(C=(m=f-m)+p)<16?0:C>=4080?255:C>>4,x=(x=m-p)<16?0:x>=4080?255:x>>4,A=(A=g-b)<16?0:A>=4080?255:A>>4,_=(_=d-v)<16?0:_>=4080?255:_>>4,P=(P=f-y)<16?0:P>=4080?255:P>>4,O[a+F]=w,O[a+F+8]=k,O[a+F+16]=S,O[a+F+24]=C,O[a+F+32]=x,O[a+F+40]=A,O[a+F+48]=_,O[a+F+56]=P):(I=(I=u*w+8192>>14)<-2040?0:I>=2024?255:I+2056>>4,O[a+F]=I,O[a+F+8]=I,O[a+F+16]=I,O[a+F+24]=I,O[a+F+32]=I,O[a+F+40]=I,O[a+F+48]=I,O[a+F+56]=I)}function b(e,t){for(var r=t.blocksPerLine,a=t.blocksPerColumn,i=new Int16Array(64),n=0;n<a;n++)for(var o=0;o<r;o++){p(t,g(t,n,o),i)}return t.blockData}function v(e,t,r){function a(t){return e[t]<<8|e[t+1]}var i=e.length-1,n=r<t?r:t;if(t>=i)return null;var o=a(t);if(o>=65472&&o<=65534)return{invalid:null,marker:o,offset:t};for(var s=a(n);!(s>=65472&&s<=65534);){if(++n>=i)return null;s=a(n)}return{invalid:o.toString(16),marker:s,offset:n}}return f.prototype={parse:function(t){function r(){var e=t[l]<<8|t[l+1];return l+=2,e}function a(){var e=r(),a=l+e-2,n=v(t,a,l);n&&n.invalid&&((0,i.warn)(\"readDataBlock - incorrect length, next marker is: \"+n.invalid),a=n.offset);var o=t.subarray(l,a);return l+=o.length,o}function o(e){for(var t=Math.ceil(e.samplesPerLine/8/e.maxH),r=Math.ceil(e.scanLines/8/e.maxV),a=0;a<e.components.length;a++){U=e.components[a];var i=Math.ceil(Math.ceil(e.samplesPerLine/8)*U.h/e.maxH),n=Math.ceil(Math.ceil(e.scanLines/8)*U.v/e.maxV),o=t*U.h,s=64*(r*U.v)*(o+1);U.blockData=new Int16Array(s),U.blocksPerLine=i,U.blocksPerColumn=n}e.mcusPerLine=t,e.mcusPerColumn=r}var s,c,l=0,u=null,h=null,f=[],g=[],p=[],y=r();if(65496!==y)throw new n(\"SOI not found\");for(y=r();65497!==y;){var w,k,S;switch(y){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var C=a();65504===y&&74===C[0]&&70===C[1]&&73===C[2]&&70===C[3]&&0===C[4]&&(u={version:{major:C[5],minor:C[6]},densityUnits:C[7],xDensity:C[8]<<8|C[9],yDensity:C[10]<<8|C[11],thumbWidth:C[12],thumbHeight:C[13],thumbData:C.subarray(14,14+3*C[12]*C[13])}),65518===y&&65===C[0]&&100===C[1]&&111===C[2]&&98===C[3]&&101===C[4]&&(h={version:C[5]<<8|C[6],flags0:C[7]<<8|C[8],flags1:C[9]<<8|C[10],transformCode:C[11]});break;case 65499:for(var x=r()+l-2;l<x;){var A=t[l++],_=new Uint16Array(64);if(A>>4==0)for(k=0;k<64;k++)_[e[k]]=t[l++];else{if(A>>4!=1)throw new n(\"DQT - invalid table spec\");for(k=0;k<64;k++)_[e[k]]=r()}f[15&A]=_}break;case 65472:case 65473:case 65474:if(s)throw new n(\"Only single frame JPEGs supported\");r(),(s={}).extended=65473===y,s.progressive=65474===y,s.precision=t[l++],s.scanLines=r(),s.samplesPerLine=r(),s.components=[],s.componentIds={};var P,I=t[l++],T=0,O=0;for(w=0;w<I;w++){P=t[l];var E=t[l+1]>>4,F=15&t[l+1];T<E&&(T=E),O<F&&(O=F);var R=t[l+2];S=s.components.push({h:E,v:F,quantizationId:R,quantizationTable:null}),s.componentIds[P]=S-1,l+=3}s.maxH=T,s.maxV=O,o(s);break;case 65476:var B=r();for(w=2;w<B;){var M=t[l++],D=new Uint8Array(16),L=0;for(k=0;k<16;k++,l++)L+=D[k]=t[l];var N=new Uint8Array(L);for(k=0;k<L;k++,l++)N[k]=t[l];w+=17+L,(M>>4==0?p:g)[15&M]=d(D,N)}break;case 65501:r(),c=r();break;case 65498:r();var U,q=t[l++],j=[];for(w=0;w<q;w++){var z=s.componentIds[t[l++]];U=s.components[z];var H=t[l++];U.huffmanTableDC=p[H>>4],U.huffmanTableAC=g[15&H],j.push(U)}var G=t[l++],W=t[l++],X=t[l++],V=m(t,l,s,j,c,G,W,X>>4,15&X);l+=V;break;case 65535:255!==t[l]&&l--;break;default:if(255===t[l-3]&&t[l-2]>=192&&t[l-2]<=254){l-=3;break}throw new n(\"unknown marker \"+y.toString(16))}y=r()}for(this.width=s.samplesPerLine,this.height=s.scanLines,this.jfif=u,this.adobe=h,this.components=[],w=0;w<s.components.length;w++){var Y=f[(U=s.components[w]).quantizationId];Y&&(U.quantizationTable=Y),this.components.push({output:b(0,U),scaleX:U.h/s.maxH,scaleY:U.v/s.maxV,blocksPerLine:U.blocksPerLine,blocksPerColumn:U.blocksPerColumn})}this.numComponents=this.components.length},_getLinearizedBlockData:function(e,t){var r,a,i,n,o,s,c,l,u,h,f,d=this.width/e,g=this.height/t,m=0,p=this.components.length,b=e*t*p,v=new Uint8ClampedArray(b),y=new Uint32Array(e);for(c=0;c<p;c++){for(a=(r=this.components[c]).scaleX*d,i=r.scaleY*g,m=c,f=r.output,n=r.blocksPerLine+1<<3,o=0;o<e;o++)l=0|o*a,y[o]=(4294967288&l)<<3|7&l;for(s=0;s<t;s++)for(h=n*(4294967288&(l=0|s*i))|(7&l)<<3,o=0;o<e;o++)v[m]=f[h+y[o]],m+=p}var w=this.decodeTransform;if(w)for(c=0;c<b;)for(l=0,u=0;l<p;l++,c++,u+=2)v[c]=(v[c]*w[u]>>8)+w[u+1];return v},_isColorConversionNeeded:function(){return this.adobe?!!this.adobe.transformCode:3===this.numComponents?0!==this.colorTransform:1===this.colorTransform},_convertYccToRgb:function(e){for(var t,r,a,i=0,n=e.length;i<n;i+=3)t=e[i],r=e[i+1],a=e[i+2],e[i]=t-179.456+1.402*a,e[i+1]=t+135.459-.344*r-.714*a,e[i+2]=t-226.816+1.772*r;return e},_convertYcckToRgb:function(e){for(var t,r,a,i,n=0,o=0,s=e.length;o<s;o+=4)t=e[o],r=e[o+1],a=e[o+2],i=e[o+3],e[n++]=r*(-660635669420364e-19*r+.000437130475926232*a-54080610064599e-18*t+.00048449797120281*i-.154362151871126)-122.67195406894+a*(-.000957964378445773*a+.000817076911346625*t-.00477271405408747*i+1.53380253221734)+t*(.000961250184130688*t-.00266257332283933*i+.48357088451265)+i*(-.000336197177618394*i+.484791561490776),e[n++]=107.268039397724+r*(219927104525741e-19*r-.000640992018297945*a+.000659397001245577*t+.000426105652938837*i-.176491792462875)+a*(-.000778269941513683*a+.00130872261408275*t+.000770482631801132*i-.151051492775562)+t*(.00126935368114843*t-.00265090189010898*i+.25802910206845)+i*(-.000318913117588328*i-.213742400323665),e[n++]=r*(-.000570115196973677*r-263409051004589e-19*a+.0020741088115012*t-.00288260236853442*i+.814272968359295)-20.810012546947+a*(-153496057440975e-19*a-.000132689043961446*t+.000560833691242812*i-.195152027534049)+t*(.00174418132927582*t-.00255243321439347*i+.116935020465145)+i*(-.000343531996510555*i+.24165260232407);return e},_convertYcckToCmyk:function(e){for(var t,r,a,i=0,n=e.length;i<n;i+=4)t=e[i],r=e[i+1],a=e[i+2],e[i]=434.456-t-1.402*a,e[i+1]=119.541-t+.344*r+.714*a,e[i+2]=481.816-t-1.772*r;return e},_convertCmykToRgb:function(e){for(var t,r,a,i,n=0,o=0,s=e.length;o<s;o+=4)t=e[o]*(1/255),r=e[o+1]*(1/255),a=e[o+2]*(1/255),i=e[o+3]*(1/255),e[n++]=255+t*(-4.387332384609988*t+54.48615194189176*r+18.82290502165302*a+212.25662451639585*i-285.2331026137004)+r*(1.7149763477362134*r-5.6096736904047315*a-17.873870861415444*i-5.497006427196366)+a*(-2.5217340131683033*a-21.248923337353073*i+17.5119270841813)-i*(21.86122147463605*i+189.48180835922747),e[n++]=255+t*(8.841041422036149*t+60.118027045597366*r+6.871425592049007*a+31.159100130055922*i-79.2970844816548)+r*(-15.310361306967817*r+17.575251261109482*a+131.35250912493976*i-190.9453302588951)+a*(4.444339102852739*a+9.8632861493405*i-24.86741582555878)-i*(20.737325471181034*i+187.80453709719578),e[n++]=255+t*(.8842522430003296*t+8.078677503112928*r+30.89978309703729*a-.23883238689178934*i-14.183576799673286)+r*(10.49593273432072*r+63.02378494754052*a+50.606957656360734*i-112.23884253719248)+a*(.03296041114873217*a+115.60384449646641*i-193.58209356861505)-i*(22.33816807309886*i+180.12613974708367);return e},getData:function(e,t,r){if(this.numComponents>4)throw new n(\"Unsupported color mode\");var a=this._getLinearizedBlockData(e,t);if(1===this.numComponents&&r){for(var i=a.length,o=new Uint8ClampedArray(3*i),s=0,c=0;c<i;c++){var l=a[c];o[s++]=l,o[s++]=l,o[s++]=l}return o}if(3===this.numComponents&&this._isColorConversionNeeded())return this._convertYccToRgb(a);if(4===this.numComponents){if(this._isColorConversionNeeded())return r?this._convertYcckToRgb(a):this._convertYcckToCmyk(a);if(r)return this._convertCmykToRgb(a)}return a}},f}();t.JpegImage=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxStream=void 0;var a=r(2),i=r(67),n=r(0),o=function(){function e(e,t,r,i){this.stream=e,this.maybeLength=t,this.dict=r,this.params=i,a.DecodeStream.call(this,t)}return e.prototype=Object.create(a.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,n.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new i.JpxImage;e.parse(this.bytes);var t=e.width,r=e.height,a=e.componentsCount,n=e.tiles.length;if(1===n)this.buffer=e.tiles[0].items;else{for(var o=new Uint8ClampedArray(t*r*a),s=0;s<n;s++)for(var c=e.tiles[s],l=c.width,u=c.height,h=c.left,f=c.top,d=c.items,g=0,m=(t*f+h)*a,p=t*a,b=l*a,v=0;v<u;v++){var y=d.subarray(g,g+b);o.set(y,m),g+=b,m+=p}this.buffer=o}this.bufferLength=this.buffer.length,this.eof=!0}},e}();t.JpxStream=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.AnnotationFactory=t.AnnotationBorderStyle=t.Annotation=void 0;var a=function e(t,r,a){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,r);if(void 0===i){var n=Object.getPrototypeOf(t);return null===n?void 0:e(n,r,a)}if(\"value\"in i)return i.value;var o=i.get;return void 0!==o?o.call(a):void 0},i=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),n=r(0),o=r(64),s=r(1),c=r(20),l=r(42),u=r(2);function h(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function f(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function d(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var g=function(){function e(){d(this,e)}return i(e,null,[{key:\"create\",value:function(e,t,r,a){var i=e.fetchIfRef(t);if((0,s.isDict)(i)){var o=(0,s.isRef)(t)?t.toString():\"annot_\"+a.createObjId(),c=i.get(\"Subtype\");c=(0,s.isName)(c)?c.name:null;var l={xref:e,dict:i,ref:(0,s.isRef)(t)?t:null,subtype:c,id:o,pdfManager:r};switch(c){case\"Link\":return new S(l);case\"Text\":return new k(l);case\"Widget\":var u=n.Util.getInheritableProperty(i,\"FT\");switch(u=(0,s.isName)(u)?u.name:null){case\"Tx\":return new v(l);case\"Btn\":return new y(l);case\"Ch\":return new w(l)}return(0,n.warn)('Unimplemented widget field type \"'+u+'\", falling back to base field type.'),new b(l);case\"Popup\":return new C(l);case\"Line\":return new x(l);case\"Square\":return new A(l);case\"Circle\":return new _(l);case\"PolyLine\":return new P(l);case\"Polygon\":return new I(l);case\"Highlight\":return new T(l);case\"Underline\":return new O(l);case\"Squiggly\":return new E(l);case\"StrikeOut\":return new F(l);case\"Stamp\":return new R(l);case\"FileAttachment\":return new B(l);default:return c?(0,n.warn)('Unimplemented annotation type \"'+c+'\", falling back to base annotation.'):(0,n.warn)(\"Annotation is missing the required /Subtype.\"),new m(l)}}}}]),e}();var m=function(){function e(t){d(this,e);var r=t.dict;this.setFlags(r.get(\"F\")),this.setRectangle(r.getArray(\"Rect\")),this.setColor(r.getArray(\"C\")),this.setBorderStyle(r),this.setAppearance(r),this.data={annotationFlags:this.flags,borderStyle:this.borderStyle,color:this.color,hasAppearance:!!this.appearance,id:t.id,rect:this.rectangle,subtype:t.subtype}}return i(e,[{key:\"_hasFlag\",value:function(e,t){return!!(e&t)}},{key:\"_isViewable\",value:function(e){return!this._hasFlag(e,n.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,n.AnnotationFlag.HIDDEN)&&!this._hasFlag(e,n.AnnotationFlag.NOVIEW)}},{key:\"_isPrintable\",value:function(e){return this._hasFlag(e,n.AnnotationFlag.PRINT)&&!this._hasFlag(e,n.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,n.AnnotationFlag.HIDDEN)}},{key:\"setFlags\",value:function(e){this.flags=Number.isInteger(e)&&e>0?e:0}},{key:\"hasFlag\",value:function(e){return this._hasFlag(this.flags,e)}},{key:\"setRectangle\",value:function(e){Array.isArray(e)&&4===e.length?this.rectangle=n.Util.normalizeRect(e):this.rectangle=[0,0,0,0]}},{key:\"setColor\",value:function(e){var t=new Uint8Array(3);if(Array.isArray(e))switch(e.length){case 0:this.color=null;break;case 1:c.ColorSpace.singletons.gray.getRgbItem(e,0,t,0),this.color=t;break;case 3:c.ColorSpace.singletons.rgb.getRgbItem(e,0,t,0),this.color=t;break;case 4:c.ColorSpace.singletons.cmyk.getRgbItem(e,0,t,0),this.color=t;break;default:this.color=t}else this.color=t}},{key:\"setBorderStyle\",value:function(e){if(this.borderStyle=new p,(0,s.isDict)(e))if(e.has(\"BS\")){var t=e.get(\"BS\"),r=t.get(\"Type\");r&&!(0,s.isName)(r,\"Border\")||(this.borderStyle.setWidth(t.get(\"W\")),this.borderStyle.setStyle(t.get(\"S\")),this.borderStyle.setDashArray(t.getArray(\"D\")))}else if(e.has(\"Border\")){var a=e.getArray(\"Border\");Array.isArray(a)&&a.length>=3&&(this.borderStyle.setHorizontalCornerRadius(a[0]),this.borderStyle.setVerticalCornerRadius(a[1]),this.borderStyle.setWidth(a[2]),4===a.length&&this.borderStyle.setDashArray(a[3]))}else this.borderStyle.setWidth(0)}},{key:\"setAppearance\",value:function(e){this.appearance=null;var t=e.get(\"AP\");if((0,s.isDict)(t)){var r=t.get(\"N\");if((0,s.isStream)(r))this.appearance=r;else if((0,s.isDict)(r)){var a=e.get(\"AS\");(0,s.isName)(a)&&r.has(a.name)&&(this.appearance=r.get(a.name))}}}},{key:\"_preparePopup\",value:function(e){e.has(\"C\")||(this.data.color=null),this.data.hasPopup=e.has(\"Popup\"),this.data.title=(0,n.stringToPDFString)(e.get(\"T\")||\"\"),this.data.contents=(0,n.stringToPDFString)(e.get(\"Contents\")||\"\")}},{key:\"loadResources\",value:function(e){return this.appearance.dict.getAsync(\"Resources\").then(function(t){if(t)return new o.ObjectLoader(t,e,t.xref).load().then(function(){return t})})}},{key:\"getOperatorList\",value:function(e,t,r){var a=this;if(!this.appearance)return Promise.resolve(new l.OperatorList);var i=this.data,o=this.appearance.dict,s=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),c=o.getArray(\"BBox\")||[0,0,1,1],u=o.getArray(\"Matrix\")||[1,0,0,1,0,0],h=function(e,t,r){var a=n.Util.getAxialAlignedBoundingBox(t,r),i=a[0],o=a[1],s=a[2],c=a[3];if(i===s||o===c)return[1,0,0,1,e[0],e[1]];var l=(e[2]-e[0])/(s-i),u=(e[3]-e[1])/(c-o);return[l,0,0,u,e[0]-i*l,e[1]-o*u]}(i.rect,c,u);return s.then(function(r){var o=new l.OperatorList;return o.addOp(n.OPS.beginAnnotation,[i.rect,h,u]),e.getOperatorList({stream:a.appearance,task:t,resources:r,operatorList:o}).then(function(){return o.addOp(n.OPS.endAnnotation,[]),a.appearance.reset(),o})})}},{key:\"viewable\",get:function(){return 0===this.flags||this._isViewable(this.flags)}},{key:\"printable\",get:function(){return 0!==this.flags&&this._isPrintable(this.flags)}}]),e}(),p=function(){function e(){d(this,e),this.width=1,this.style=n.AnnotationBorderStyleType.SOLID,this.dashArray=[3],this.horizontalCornerRadius=0,this.verticalCornerRadius=0}return i(e,[{key:\"setWidth\",value:function(e){Number.isInteger(e)&&(this.width=e)}},{key:\"setStyle\",value:function(e){if(e)switch(e.name){case\"S\":this.style=n.AnnotationBorderStyleType.SOLID;break;case\"D\":this.style=n.AnnotationBorderStyleType.DASHED;break;case\"B\":this.style=n.AnnotationBorderStyleType.BEVELED;break;case\"I\":this.style=n.AnnotationBorderStyleType.INSET;break;case\"U\":this.style=n.AnnotationBorderStyleType.UNDERLINE}}},{key:\"setDashArray\",value:function(e){if(Array.isArray(e)&&e.length>0){for(var t=!0,r=!0,a=0,i=e.length;a<i;a++){var n=e[a];if(!(+n>=0)){t=!1;break}n>0&&(r=!1)}t&&!r?this.dashArray=e:this.width=0}else e&&(this.width=0)}},{key:\"setHorizontalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.horizontalCornerRadius=e)}},{key:\"setVerticalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.verticalCornerRadius=e)}}]),e}(),b=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),a=e.dict,i=r.data;i.annotationType=n.AnnotationType.WIDGET,i.fieldName=r._constructFieldName(a),i.fieldValue=n.Util.getInheritableProperty(a,\"V\",!0),i.alternativeText=(0,n.stringToPDFString)(a.get(\"TU\")||\"\"),i.defaultAppearance=n.Util.getInheritableProperty(a,\"DA\")||\"\";var o=n.Util.getInheritableProperty(a,\"FT\");return i.fieldType=(0,s.isName)(o)?o.name:null,r.fieldResources=n.Util.getInheritableProperty(a,\"DR\")||s.Dict.empty,i.fieldFlags=n.Util.getInheritableProperty(a,\"Ff\"),(!Number.isInteger(i.fieldFlags)||i.fieldFlags<0)&&(i.fieldFlags=0),i.readOnly=r.hasFieldFlag(n.AnnotationFieldFlag.READONLY),\"Sig\"===i.fieldType&&r.setFlags(n.AnnotationFlag.HIDDEN),r}return f(t,m),i(t,[{key:\"_constructFieldName\",value:function(e){if(!e.has(\"T\")&&!e.has(\"Parent\"))return(0,n.warn)(\"Unknown field name, falling back to empty field name.\"),\"\";if(!e.has(\"Parent\"))return(0,n.stringToPDFString)(e.get(\"T\"));var t=[];e.has(\"T\")&&t.unshift((0,n.stringToPDFString)(e.get(\"T\")));for(var r=e;r.has(\"Parent\")&&(r=r.get(\"Parent\"),(0,s.isDict)(r));)r.has(\"T\")&&t.unshift((0,n.stringToPDFString)(r.get(\"T\")));return t.join(\".\")}},{key:\"hasFieldFlag\",value:function(e){return!!(this.data.fieldFlags&e)}},{key:\"getOperatorList\",value:function(e,r,i){return i?Promise.resolve(new l.OperatorList):a(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"getOperatorList\",this).call(this,e,r,i)}}]),t}(),v=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.fieldValue=(0,n.stringToPDFString)(r.data.fieldValue||\"\");var a=n.Util.getInheritableProperty(e.dict,\"Q\");(!Number.isInteger(a)||a<0||a>2)&&(a=null),r.data.textAlignment=a;var i=n.Util.getInheritableProperty(e.dict,\"MaxLen\");return(!Number.isInteger(i)||i<0)&&(i=null),r.data.maxLen=i,r.data.multiLine=r.hasFieldFlag(n.AnnotationFieldFlag.MULTILINE),r.data.comb=r.hasFieldFlag(n.AnnotationFieldFlag.COMB)&&!r.hasFieldFlag(n.AnnotationFieldFlag.MULTILINE)&&!r.hasFieldFlag(n.AnnotationFieldFlag.PASSWORD)&&!r.hasFieldFlag(n.AnnotationFieldFlag.FILESELECT)&&null!==r.data.maxLen,r}return f(t,b),i(t,[{key:\"getOperatorList\",value:function(e,r,i){if(i||this.appearance)return a(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"getOperatorList\",this).call(this,e,r,i);var o=new l.OperatorList;if(!this.data.defaultAppearance)return Promise.resolve(o);var s=new u.Stream((0,n.stringToBytes)(this.data.defaultAppearance));return e.getOperatorList({stream:s,task:r,resources:this.fieldResources,operatorList:o}).then(function(){return o})}}]),t}(),y=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.checkBox=!r.hasFieldFlag(n.AnnotationFieldFlag.RADIO)&&!r.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON),r.data.radioButton=r.hasFieldFlag(n.AnnotationFieldFlag.RADIO)&&!r.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON),r.data.pushButton=r.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON),r.data.checkBox?r._processCheckBox():r.data.radioButton?r._processRadioButton(e):r.data.pushButton?r._processPushButton(e):(0,n.warn)(\"Invalid field flags for button widget annotation\"),r}return f(t,b),i(t,[{key:\"_processCheckBox\",value:function(){(0,s.isName)(this.data.fieldValue)&&(this.data.fieldValue=this.data.fieldValue.name)}},{key:\"_processRadioButton\",value:function(e){this.data.fieldValue=this.data.buttonValue=null;var t=e.dict.get(\"Parent\");if((0,s.isDict)(t)&&t.has(\"V\")){var r=t.get(\"V\");(0,s.isName)(r)&&(this.data.fieldValue=r.name)}var a=e.dict.get(\"AP\");if((0,s.isDict)(a)){var i=a.get(\"N\");if((0,s.isDict)(i))for(var n=i.getKeys(),o=0,c=n.length;o<c;o++)if(\"Off\"!==n[o]){this.data.buttonValue=n[o];break}}}},{key:\"_processPushButton\",value:function(e){e.dict.has(\"A\")?o.Catalog.parseDestDictionary({destDict:e.dict,resultObj:this.data,docBaseUrl:e.pdfManager.docBaseUrl}):(0,n.warn)(\"Push buttons without action dictionaries are not supported\")}}]),t}(),w=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.options=[];var a=n.Util.getInheritableProperty(e.dict,\"Opt\");if(Array.isArray(a))for(var i=e.xref,o=0,s=a.length;o<s;o++){var c=i.fetchIfRef(a[o]),l=Array.isArray(c);r.data.options[o]={exportValue:l?i.fetchIfRef(c[0]):c,displayValue:(0,n.stringToPDFString)(l?i.fetchIfRef(c[1]):c)}}return Array.isArray(r.data.fieldValue)||(r.data.fieldValue=[r.data.fieldValue]),r.data.combo=r.hasFieldFlag(n.AnnotationFieldFlag.COMBO),r.data.multiSelect=r.hasFieldFlag(n.AnnotationFieldFlag.MULTISELECT),r}return f(t,b),t}(),k=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.TEXT,r.data.hasAppearance?r.data.name=\"NoIcon\":(r.data.rect[1]=r.data.rect[3]-22,r.data.rect[2]=r.data.rect[0]+22,r.data.name=e.dict.has(\"Name\")?e.dict.get(\"Name\").name:\"Note\"),r._preparePopup(e.dict),r}return f(t,m),t}(),S=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.LINK,o.Catalog.parseDestDictionary({destDict:e.dict,resultObj:r.data,docBaseUrl:e.pdfManager.docBaseUrl}),r}return f(t,m),t}(),C=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.annotationType=n.AnnotationType.POPUP;var a=e.dict,i=a.get(\"Parent\");if(!i)return(0,n.warn)(\"Popup annotation has a missing or invalid parent annotation.\"),h(r);var o=i.get(\"Subtype\");if(r.data.parentType=(0,s.isName)(o)?o.name:null,r.data.parentId=a.getRaw(\"Parent\").toString(),r.data.title=(0,n.stringToPDFString)(i.get(\"T\")||\"\"),r.data.contents=(0,n.stringToPDFString)(i.get(\"Contents\")||\"\"),i.has(\"C\")?(r.setColor(i.getArray(\"C\")),r.data.color=r.color):r.data.color=null,!r.viewable){var c=i.get(\"F\");r._isViewable(c)&&r.setFlags(c)}return r}return f(t,m),t}(),x=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.annotationType=n.AnnotationType.LINE;var a=e.dict;return r.data.lineCoordinates=n.Util.normalizeRect(a.getArray(\"L\")),r._preparePopup(a),r}return f(t,m),t}(),A=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.SQUARE,r._preparePopup(e.dict),r}return f(t,m),t}(),_=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.CIRCLE,r._preparePopup(e.dict),r}return f(t,m),t}(),P=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));r.data.annotationType=n.AnnotationType.POLYLINE;var a=e.dict,i=a.getArray(\"Vertices\");r.data.vertices=[];for(var o=0,s=i.length;o<s;o+=2)r.data.vertices.push({x:i[o],y:i[o+1]});return r._preparePopup(a),r}return f(t,m),t}(),I=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.POLYGON,r}return f(t,P),t}(),T=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.HIGHLIGHT,r._preparePopup(e.dict),r}return f(t,m),t}(),O=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.UNDERLINE,r._preparePopup(e.dict),r}return f(t,m),t}(),E=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.SQUIGGLY,r._preparePopup(e.dict),r}return f(t,m),t}(),F=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.STRIKEOUT,r._preparePopup(e.dict),r}return f(t,m),t}(),R=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.data.annotationType=n.AnnotationType.STAMP,r._preparePopup(e.dict),r}return f(t,m),t}(),B=function(e){function t(e){d(this,t);var r=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),a=new o.FileSpec(e.dict.get(\"FS\"),e.xref);return r.data.annotationType=n.AnnotationType.FILEATTACHMENT,r.data.file=a.serializable,r._preparePopup(e.dict),r}return f(t,m),t}();t.Annotation=m,t.AnnotationBorderStyle=p,t.AnnotationFactory=g},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PartialEvaluator=void 0;var a=r(0),i=r(136),n=r(2),o=r(1),s=r(137),c=r(21),l=r(71),u=r(70),h=r(141),f=r(26),d=r(142),g=r(20),m=r(43),p=r(143),b=r(72),v=r(41),y=r(145),w=r(42),k=r(146),S=function(){var e={forceDataSchema:!1,maxImageSize:-1,disableFontFace:!1,nativeImageDecoderSupport:a.NativeImageDecoding.DECODE,ignoreErrors:!1,isEvalSupported:!0};function t(e){var t=e.xref,r=e.resources,a=e.handler,i=e.forceDataSchema,n=void 0!==i&&i,o=e.pdfFunctionFactory;this.xref=t,this.resources=r,this.handler=a,this.forceDataSchema=n,this.pdfFunctionFactory=o}function r(t){var r=this,i=t.pdfManager,n=t.xref,o=t.handler,s=t.pageIndex,c=t.idFactory,l=t.fontCache,u=t.builtInCMapCache,h=t.options,f=void 0===h?null:h,d=t.pdfFunctionFactory;this.pdfManager=i,this.xref=n,this.handler=o,this.pageIndex=s,this.idFactory=c,this.fontCache=l,this.builtInCMapCache=u,this.options=f||e,this.pdfFunctionFactory=d,this.fetchBuiltInCMap=function(e){var t=r.builtInCMapCache[e];return t?Promise.resolve(t):r.handler.sendWithPromise(\"FetchBuiltInCMap\",{name:e}).then(function(t){return t.compressionType!==a.CMapCompressionType.NONE&&(r.builtInCMapCache[e]=t),t})}}t.prototype={canDecode:function(e){return e instanceof v.JpegStream&&t.isDecodable(e,this.xref,this.resources,this.pdfFunctionFactory)},decode:function(e){var t=e.dict.get(\"ColorSpace\",\"CS\"),r=(t=g.ColorSpace.parse(t,this.xref,this.resources,this.pdfFunctionFactory)).numComps;return this.handler.sendWithPromise(\"JpegDecode\",[e.getIR(this.forceDataSchema),r]).then(function(t){var r=t.data;return new n.Stream(r,0,r.length,e.dict)})}},t.isSupported=function(e,t,r,a){var i=e.dict;if(i.has(\"DecodeParms\")||i.has(\"DP\"))return!1;var n=g.ColorSpace.parse(i.get(\"ColorSpace\",\"CS\"),t,r,a);return(\"DeviceGray\"===n.name||\"DeviceRGB\"===n.name)&&n.isDefaultDecode(i.getArray(\"Decode\",\"D\"))},t.isDecodable=function(e,t,r,a){var i=e.dict;if(i.has(\"DecodeParms\")||i.has(\"DP\"))return!1;var n=g.ColorSpace.parse(i.get(\"ColorSpace\",\"CS\"),t,r,a);return(1===n.numComps||3===n.numComps)&&n.isDefaultDecode(i.getArray(\"Decode\",\"D\"))};function f(){this.reset()}function S(e){if(!(0,o.isName)(e))return\"source-over\";switch(e.name){case\"Normal\":case\"Compatible\":return\"source-over\";case\"Multiply\":return\"multiply\";case\"Screen\":return\"screen\";case\"Overlay\":return\"overlay\";case\"Darken\":return\"darken\";case\"Lighten\":return\"lighten\";case\"ColorDodge\":return\"color-dodge\";case\"ColorBurn\":return\"color-burn\";case\"HardLight\":return\"hard-light\";case\"SoftLight\":return\"soft-light\";case\"Difference\":return\"difference\";case\"Exclusion\":return\"exclusion\";case\"Hue\":return\"hue\";case\"Saturation\":return\"saturation\";case\"Color\":return\"color\";case\"Luminosity\":return\"luminosity\"}return(0,a.warn)(\"Unsupported blend mode: \"+e.name),\"source-over\"}f.prototype={check:function(){return!(++this.checked<100)&&(this.checked=0,this.endTime<=Date.now())},reset:function(){this.endTime=Date.now()+20,this.checked=0}};var I=Promise.resolve();return r.prototype={clone:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=Object.create(this);return r.options=t,r},hasBlendModes:function(e){if(!(0,o.isDict)(e))return!1;var t=Object.create(null);e.objId&&(t[e.objId]=!0);for(var r=[e],a=this.xref;r.length;){var i,n,s,c=r.shift(),l=c.get(\"ExtGState\");if((0,o.isDict)(l)){var u=l.getKeys();for(n=0,s=u.length;n<s;n++){i=u[n];var h=l.get(i).get(\"BM\");if((0,o.isName)(h)&&\"Normal\"!==h.name)return!0}}var f=c.get(\"XObject\");if((0,o.isDict)(f)){var d=f.getKeys();for(n=0,s=d.length;n<s;n++){i=d[n];var g=f.getRaw(i);if((0,o.isRef)(g)){if(t[g.toString()])continue;g=a.fetch(g)}if((0,o.isStream)(g)){if(g.dict.objId){if(t[g.dict.objId])continue;t[g.dict.objId]=!0}var m=g.dict.get(\"Resources\");!(0,o.isDict)(m)||m.objId&&t[m.objId]||(r.push(m),m.objId&&(t[m.objId]=!0))}}}}return!1},buildFormXObject:function(e,t,r,i,n,s){var c=t.dict,l=c.getArray(\"Matrix\"),u=c.getArray(\"BBox\"),h=c.get(\"Group\");if(h){var f={matrix:l,bbox:u,smask:r,isolated:!1,knockout:!1},d=h.get(\"S\"),m=null;(0,o.isName)(d,\"Transparency\")&&(f.isolated=h.get(\"I\")||!1,f.knockout=h.get(\"K\")||!1,h.has(\"CS\")&&(m=g.ColorSpace.parse(h.get(\"CS\"),this.xref,e,this.pdfFunctionFactory))),r&&r.backdrop&&(m=m||g.ColorSpace.singletons.rgb,r.backdrop=m.getRgb(r.backdrop,0)),i.addOp(a.OPS.beginGroup,[f])}return i.addOp(a.OPS.paintFormXObjectBegin,[l,u]),this.getOperatorList({stream:t,task:n,resources:c.get(\"Resources\")||e,operatorList:i,initialState:s}).then(function(){i.addOp(a.OPS.paintFormXObjectEnd,[]),h&&i.addOp(a.OPS.endGroup,[f])})},buildPaintImageXObject:function(e,r,i,o,s,c){var l=this,u=r.dict,h=u.get(\"Width\",\"W\"),f=u.get(\"Height\",\"H\");if(h&&(0,a.isNum)(h)&&f&&(0,a.isNum)(f)){var d=this.options.maxImageSize;if(-1!==d&&h*f>d)(0,a.warn)(\"Image exceeded maximum allowed size and was removed.\");else{var g,m;if(u.get(\"ImageMask\",\"IM\")||!1){var p=u.get(\"Width\",\"W\"),b=u.get(\"Height\",\"H\"),y=p+7>>3,w=r.getBytes(y*b),S=u.getArray(\"Decode\",\"D\");return(g=k.PDFImage.createMask({imgArray:w,width:p,height:b,imageIsFromDecodeStream:r instanceof n.DecodeStream,inverseDecode:!!S&&S[0]>0})).cached=!0,m=[g],o.addOp(a.OPS.paintImageMaskXObject,m),void(s&&(c[s]={fn:a.OPS.paintImageMaskXObject,args:m}))}var C=u.get(\"SMask\",\"SM\")||!1,x=u.get(\"Mask\")||!1;if(i&&!C&&!x&&!(r instanceof v.JpegStream)&&h+f<200)return g=new k.PDFImage({xref:this.xref,res:e,image:r,isInline:i,pdfFunctionFactory:this.pdfFunctionFactory}).createImageData(!0),void o.addOp(a.OPS.paintInlineImageXObject,[g]);var A=this.options.nativeImageDecoderSupport,_=\"img_\"+this.idFactory.createObjId();if(o.addDependency(_),m=[_,h,f],A!==a.NativeImageDecoding.NONE&&!C&&!x&&r instanceof v.JpegStream&&t.isSupported(r,this.xref,e,this.pdfFunctionFactory))return o.addOp(a.OPS.paintJpegXObject,m),this.handler.send(\"obj\",[_,this.pageIndex,\"JpegStream\",r.getIR(this.options.forceDataSchema)]),void(s&&(c[s]={fn:a.OPS.paintJpegXObject,args:m}));var P=null;A===a.NativeImageDecoding.DECODE&&(r instanceof v.JpegStream||x instanceof v.JpegStream||C instanceof v.JpegStream)&&(P=new t({xref:this.xref,resources:e,handler:this.handler,forceDataSchema:this.options.forceDataSchema,pdfFunctionFactory:this.pdfFunctionFactory})),k.PDFImage.buildImage({handler:this.handler,xref:this.xref,res:e,image:r,isInline:i,nativeDecoder:P,pdfFunctionFactory:this.pdfFunctionFactory}).then(function(e){var t=e.createImageData(!1);l.handler.send(\"obj\",[_,l.pageIndex,\"Image\",t],[t.data.buffer])}).catch(function(e){(0,a.warn)(\"Unable to decode image: \"+e),l.handler.send(\"obj\",[_,l.pageIndex,\"Image\",null])}),o.addOp(a.OPS.paintImageXObject,m),s&&(c[s]={fn:a.OPS.paintImageXObject,args:m})}}else(0,a.warn)(\"Image dimensions are missing, or not numbers.\")},handleSMask:function(e,t,r,a,i){var n=e.get(\"G\"),o={subtype:e.get(\"S\").name,backdrop:e.get(\"BC\")},s=e.get(\"TR\");if((0,b.isPDFFunction)(s)){for(var c=this.pdfFunctionFactory.create(s),l=new Uint8Array(256),u=new Float32Array(1),h=0;h<256;h++)u[0]=h/255,c(u,0,u,0),l[h]=255*u[0]|0;o.transferMap=l}return this.buildFormXObject(t,n,o,r,a,i.state.clone())},handleTilingType:function(e,t,r,i,n,s,c){var l=this,u=new w.OperatorList,f=[n.get(\"Resources\"),r],d=o.Dict.merge(this.xref,f);return this.getOperatorList({stream:i,task:c,resources:d,operatorList:u}).then(function(){return(0,h.getTilingPatternIR)({fnArray:u.fnArray,argsArray:u.argsArray},n,t)}).then(function(t){s.addDependencies(u.dependencies),s.addOp(e,t)},function(e){if(l.options.ignoreErrors)return l.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.unknown}),void(0,a.warn)('handleTilingType - ignoring pattern: \"'+e+'\".');throw e})},handleSetFont:function(e,t,r,i,n,o){var c,l=this;return t&&(c=(t=t.slice())[0].name),this.loadFont(c,r,e).then(function(t){return t.font.isType3Font?t.loadType3Data(l,e,i,n).then(function(){return t}).catch(function(e){return l.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.font}),new C(\"g_font_error\",new s.ErrorFont(\"Type3 font load error: \"+e),t.font)}):t}).then(function(e){return o.font=e.font,e.send(l.handler),e.loadedName})},handleText:function(e,t){var r=this,i=t.font,n=i.charsToGlyphs(e),o=!!(t.textRenderingMode&a.TextRenderingMode.ADD_TO_PATH_FLAG);if(i.data&&(o||this.options.disableFontFace||\"Pattern\"===t.fillColorSpace.name))for(var s=function(e){if(!i.renderer.hasBuiltPath(e)){var t=i.renderer.getPathJs(e);r.handler.send(\"commonobj\",[i.loadedName+\"_path_\"+e,\"FontPath\",t])}},c=0,l=n.length;c<l;c++){var u=n[c];s(u.fontChar);var h=u.accent;h&&h.fontChar&&s(h.fontChar)}return n},setGState:function(e,t,r,i,n){for(var s=this,c=[],l=t.getKeys(),u=Promise.resolve(),h=function(){var h=l[f],d=t.get(h);switch(h){case\"Type\":break;case\"LW\":case\"LC\":case\"LJ\":case\"ML\":case\"D\":case\"RI\":case\"FL\":case\"CA\":case\"ca\":c.push([h,d]);break;case\"Font\":u=u.then(function(){return s.handleSetFont(e,null,d[0],r,i,n.state).then(function(e){r.addDependency(e),c.push([h,[e,d[1]]])})});break;case\"BM\":c.push([h,S(d)]);break;case\"SMask\":if((0,o.isName)(d,\"None\")){c.push([h,!1]);break}(0,o.isDict)(d)?(u=u.then(function(){return s.handleSMask(d,e,r,i,n)}),c.push([h,!0])):(0,a.warn)(\"Unsupported SMask type\");break;case\"OP\":case\"op\":case\"OPM\":case\"BG\":case\"BG2\":case\"UCR\":case\"UCR2\":case\"TR\":case\"TR2\":case\"HT\":case\"SM\":case\"SA\":case\"AIS\":case\"TK\":(0,a.info)(\"graphic state operator \"+h);break;default:(0,a.info)(\"Unknown graphic state operator \"+h)}},f=0,d=l.length;f<d;f++)h();return u.then(function(){c.length>0&&r.addOp(a.OPS.setGState,[c])})},loadFont:function(e,t,r){var i=this;function n(){return Promise.resolve(new C(\"g_font_error\",new s.ErrorFont(\"Font \"+e+\" is not available\"),t))}var c,l=this.xref;if(t){if(!(0,o.isRef)(t))throw new Error('The \"font\" object should be a reference.');c=t}else{var u=r.get(\"Font\");if(!u)return(0,a.warn)(\"fontRes not available\"),n();c=u.getRaw(e)}if(!c)return(0,a.warn)(\"fontRef not available\"),n();if(this.fontCache.has(c))return this.fontCache.get(c);if(t=l.fetchIfRef(c),!(0,o.isDict)(t))return n();if(t.translated)return t.translated;var h,f,d=(0,a.createPromiseCapability)(),g=this.preEvaluateFont(t),m=g.descriptor,p=(0,o.isRef)(c);if(p&&(h=c.toString()),(0,o.isDict)(m)){m.fontAliases||(m.fontAliases=Object.create(null));var b=m.fontAliases,v=g.hash;if(b[v]){var y=b[v].aliasRef;if(p&&y&&this.fontCache.has(y))return this.fontCache.putAlias(c,y),this.fontCache.get(c)}else b[v]={fontID:s.Font.getFontID()};p&&(b[v].aliasRef=c),h=b[v].fontID}p?this.fontCache.put(c,d.promise):(h||(h=this.idFactory.createObjId()),this.fontCache.put(\"id_\"+h,d.promise)),(0,a.assert)(h,'The \"fontID\" must be defined.'),t.loadedName=\"g_\"+this.pdfManager.docId+\"_f\"+h,t.translated=d.promise;try{f=this.translateFont(g)}catch(e){f=Promise.reject(e)}return f.then(function(e){void 0!==e.fontType&&(l.stats.fontTypes[e.fontType]=!0);d.resolve(new C(t.loadedName,e,t))}).catch(function(e){i.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.font});try{var r=g.descriptor,n=r&&r.get(\"FontFile3\"),o=n&&n.get(\"Subtype\"),c=(0,s.getFontType)(g.type,o&&o.name);l.stats.fontTypes[c]=!0}catch(e){}d.resolve(new C(t.loadedName,new s.ErrorFont(e instanceof Error?e.message:e),t))}),d.promise},buildPath:function(e,t,r){var i=e.length-1;if(r||(r=[]),i<0||e.fnArray[i]!==a.OPS.constructPath)e.addOp(a.OPS.constructPath,[[t],r]);else{var n=e.argsArray[i];n[0].push(t),Array.prototype.push.apply(n[1],r)}},handleColorN:function(e,t,r,a,i,n,s){var c,l=r[r.length-1];if((0,o.isName)(l)&&(c=i.get(l.name))){var u=(0,o.isStream)(c)?c.dict:c,f=u.get(\"PatternType\");if(1===f){var d=a.base?a.base.getRgb(r,0):null;return this.handleTilingType(t,d,n,c,u,e,s)}if(2===f){var g=u.get(\"Shading\"),m=u.getArray(\"Matrix\");return c=h.Pattern.parseShading(g,m,this.xref,n,this.handler,this.pdfFunctionFactory),e.addOp(t,c.getIR()),Promise.resolve()}return Promise.reject(new Error(\"Unknown PatternType: \"+f))}return e.addOp(t,r),Promise.resolve()},getOperatorList:function(e){var t=this,r=e.stream,i=e.task,n=e.resources,s=e.operatorList,c=e.initialState,l=void 0===c?null:c;if(n=n||o.Dict.empty,l=l||new _,!s)throw new Error('getOperatorList: missing \"operatorList\" parameter');var u=this,d=this.xref,m=Object.create(null),p=n.get(\"XObject\")||o.Dict.empty,b=n.get(\"Pattern\")||o.Dict.empty,v=new x(l),y=new P(r,d,v),w=new f;function k(e){for(var t=0,r=y.savedStatesDepth;t<r;t++)s.addOp(a.OPS.restore,[])}return new Promise(function e(t,r){var c=function(a){a.then(function(){try{e(t,r)}catch(e){r(e)}},r)};i.ensureNotTerminated(),w.reset();for(var l,f,S,C,x={};!(l=w.check())&&(x.args=null,y.read(x));){var A=x.args,_=x.fn;switch(0|_){case a.OPS.paintXObject:var P=A[0].name;if(P&&void 0!==m[P]){s.addOp(m[P].fn,m[P].args),A=null;continue}return void c(new Promise(function(e,t){if(!P)throw new a.FormatError(\"XObject must be referred to by name.\");var r=p.get(P);if(!r)return s.addOp(_,A),void e();if(!(0,o.isStream)(r))throw new a.FormatError(\"XObject should be a stream\");var c=r.dict.get(\"Subtype\");if(!(0,o.isName)(c))throw new a.FormatError(\"XObject should have a Name subtype\");if(\"Form\"===c.name)return v.save(),void u.buildFormXObject(n,r,null,s,i,v.state.clone()).then(function(){v.restore(),e()},t);if(\"Image\"===c.name)u.buildPaintImageXObject(n,r,!1,s,P,m);else{if(\"PS\"!==c.name)throw new a.FormatError(\"Unhandled XObject subtype \"+c.name);(0,a.info)(\"Ignored XObject subtype PS\")}e()}).catch(function(e){if(u.options.ignoreErrors)return u.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.unknown}),void(0,a.warn)('getOperatorList - ignoring XObject: \"'+e+'\".');throw e}));case a.OPS.setFont:var T=A[1];return void c(u.handleSetFont(n,A,null,s,i,v.state).then(function(e){s.addDependency(e),s.addOp(a.OPS.setFont,[e,T])}));case a.OPS.endInlineImage:var O=A[0].cacheKey;if(O){var E=m[O];if(void 0!==E){s.addOp(E.fn,E.args),A=null;continue}}u.buildPaintImageXObject(n,A[0],!0,s,O,m),A=null;continue;case a.OPS.showText:A[0]=u.handleText(A[0],v.state);break;case a.OPS.showSpacedText:var F=A[0],R=[],B=F.length,M=v.state;for(f=0;f<B;++f){var D=F[f];(0,a.isString)(D)?Array.prototype.push.apply(R,u.handleText(D,M)):(0,a.isNum)(D)&&R.push(D)}A[0]=R,_=a.OPS.showText;break;case a.OPS.nextLineShowText:s.addOp(a.OPS.nextLine),A[0]=u.handleText(A[0],v.state),_=a.OPS.showText;break;case a.OPS.nextLineSetSpacingShowText:s.addOp(a.OPS.nextLine),s.addOp(a.OPS.setWordSpacing,[A.shift()]),s.addOp(a.OPS.setCharSpacing,[A.shift()]),A[0]=u.handleText(A[0],v.state),_=a.OPS.showText;break;case a.OPS.setTextRenderingMode:v.state.textRenderingMode=A[0];break;case a.OPS.setFillColorSpace:v.state.fillColorSpace=g.ColorSpace.parse(A[0],d,n,u.pdfFunctionFactory);continue;case a.OPS.setStrokeColorSpace:v.state.strokeColorSpace=g.ColorSpace.parse(A[0],d,n,u.pdfFunctionFactory);continue;case a.OPS.setFillColor:C=v.state.fillColorSpace,A=C.getRgb(A,0),_=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeColor:C=v.state.strokeColorSpace,A=C.getRgb(A,0),_=a.OPS.setStrokeRGBColor;break;case a.OPS.setFillGray:v.state.fillColorSpace=g.ColorSpace.singletons.gray,A=g.ColorSpace.singletons.gray.getRgb(A,0),_=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeGray:v.state.strokeColorSpace=g.ColorSpace.singletons.gray,A=g.ColorSpace.singletons.gray.getRgb(A,0),_=a.OPS.setStrokeRGBColor;break;case a.OPS.setFillCMYKColor:v.state.fillColorSpace=g.ColorSpace.singletons.cmyk,A=g.ColorSpace.singletons.cmyk.getRgb(A,0),_=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeCMYKColor:v.state.strokeColorSpace=g.ColorSpace.singletons.cmyk,A=g.ColorSpace.singletons.cmyk.getRgb(A,0),_=a.OPS.setStrokeRGBColor;break;case a.OPS.setFillRGBColor:v.state.fillColorSpace=g.ColorSpace.singletons.rgb,A=g.ColorSpace.singletons.rgb.getRgb(A,0);break;case a.OPS.setStrokeRGBColor:v.state.strokeColorSpace=g.ColorSpace.singletons.rgb,A=g.ColorSpace.singletons.rgb.getRgb(A,0);break;case a.OPS.setFillColorN:if(\"Pattern\"===(C=v.state.fillColorSpace).name)return void c(u.handleColorN(s,a.OPS.setFillColorN,A,C,b,n,i));A=C.getRgb(A,0),_=a.OPS.setFillRGBColor;break;case a.OPS.setStrokeColorN:if(\"Pattern\"===(C=v.state.strokeColorSpace).name)return void c(u.handleColorN(s,a.OPS.setStrokeColorN,A,C,b,n,i));A=C.getRgb(A,0),_=a.OPS.setStrokeRGBColor;break;case a.OPS.shadingFill:var L=n.get(\"Shading\");if(!L)throw new a.FormatError(\"No shading resource found\");var N=L.get(A[0].name);if(!N)throw new a.FormatError(\"No shading object found\");var U=h.Pattern.parseShading(N,null,d,n,u.handler,u.pdfFunctionFactory).getIR();A=[U],_=a.OPS.shadingFill;break;case a.OPS.setGState:var q=A[0],j=n.get(\"ExtGState\");if(!(0,o.isDict)(j)||!j.has(q.name))break;var z=j.get(q.name);return void c(u.setGState(n,z,s,i,v));case a.OPS.moveTo:case a.OPS.lineTo:case a.OPS.curveTo:case a.OPS.curveTo2:case a.OPS.curveTo3:case a.OPS.closePath:case a.OPS.rectangle:u.buildPath(s,_,A);continue;case a.OPS.markPoint:case a.OPS.markPointProps:case a.OPS.beginMarkedContent:case a.OPS.beginMarkedContentProps:case a.OPS.endMarkedContent:case a.OPS.beginCompat:case a.OPS.endCompat:continue;default:if(null!==A){for(f=0,S=A.length;f<S&&!(A[f]instanceof o.Dict);f++);if(f<S){(0,a.warn)(\"getOperatorList - ignoring operator: \"+_);continue}}}s.addOp(_,A)}l?c(I):(k(),t())}).catch(function(e){if(t.options.ignoreErrors)return t.handler.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.unknown}),(0,a.warn)(\"getOperatorList - ignoring errors during task: \"+i.name),void k();throw e})},getTextContent:function(e){var t=this,r=e.stream,i=e.task,n=e.resources,s=e.stateManager,c=void 0===s?null:s,u=e.normalizeWhitespace,h=void 0!==u&&u,g=e.combineTextItems,m=void 0!==g&&g,p=e.sink,b=e.seenStyles,v=void 0===b?Object.create(null):b;n=n||o.Dict.empty,c=c||new x(new A);var y,w=/\\s/g,k={items:[],styles:Object.create(null)},S={initialized:!1,str:[],width:0,height:0,vertical:!1,lastAdvanceWidth:0,lastAdvanceHeight:0,textAdvanceScale:0,spaceWidth:0,fakeSpaceMin:1/0,fakeMultiSpaceMin:1/0,fakeMultiSpaceMax:-0,textRunBreakAllowed:!1,transform:null,fontName:null},C=.3,_=1.5,T=4,O=this,E=this.xref,F=null,R=Object.create(null),B=new P(r,E,c);function M(){if(S.initialized)return S;var e=y.font;e.loadedName in v||(v[e.loadedName]=!0,k.styles[e.loadedName]={fontFamily:e.fallbackName,ascent:e.ascent,descent:e.descent,vertical:e.vertical}),S.fontName=e.loadedName;var t=[y.fontSize*y.textHScale,0,0,y.fontSize,0,y.textRise];if(e.isType3Font&&y.fontMatrix!==a.FONT_IDENTITY_MATRIX&&1===y.fontSize){var r=e.bbox[3]-e.bbox[1];r>0&&(r*=y.fontMatrix[3],t[3]*=r)}var i=a.Util.transform(y.ctm,a.Util.transform(y.textMatrix,t));S.transform=i,e.vertical?(S.width=Math.sqrt(i[0]*i[0]+i[1]*i[1]),S.height=0,S.vertical=!0):(S.width=0,S.height=Math.sqrt(i[2]*i[2]+i[3]*i[3]),S.vertical=!1);var n=y.textLineMatrix[0],o=y.textLineMatrix[1],s=Math.sqrt(n*n+o*o);n=y.ctm[0],o=y.ctm[1];var c=Math.sqrt(n*n+o*o);S.textAdvanceScale=c*s,S.lastAdvanceWidth=0,S.lastAdvanceHeight=0;var l=e.spaceWidth/1e3*y.fontSize;return l?(S.spaceWidth=l,S.fakeSpaceMin=l*C,S.fakeMultiSpaceMin=l*_,S.fakeMultiSpaceMax=l*T,S.textRunBreakAllowed=!e.isMonospace):(S.spaceWidth=0,S.fakeSpaceMin=1/0,S.fakeMultiSpaceMin=1/0,S.fakeMultiSpaceMax=0,S.textRunBreakAllowed=!1),S.initialized=!0,S}function D(e){for(var t,r=0,a=e.length;r<a&&(t=e.charCodeAt(r))>=32&&t<=127;)r++;return r<a?e.replace(w,\" \"):e}function L(e,t){return O.loadFont(e,t,n).then(function(e){y.font=e.font,y.fontMatrix=e.font.fontMatrix||a.FONT_IDENTITY_MATRIX})}function N(e){for(var t=y.font,r=M(),a=0,i=0,n=t.charsToGlyphs(e),o=0;o<n.length;o++){var s=n[o],c=null;c=t.vertical&&s.vmetric?s.vmetric[0]:s.width;var u=s.unicode,h=(0,l.getNormalizedUnicodes)();void 0!==h[u]&&(u=h[u]),u=(0,l.reverseIfRtl)(u);var f=y.charSpacing;if(s.isSpace){var d=y.wordSpacing;f+=d,d>0&&U(d,r.str)}var g=0,m=0;if(t.vertical)i+=m=c*y.fontMatrix[0]*y.fontSize+f;else a+=g=(c*y.fontMatrix[0]*y.fontSize+f)*y.textHScale;y.translateTextMatrix(g,m),r.str.push(u)}return t.vertical?(r.lastAdvanceHeight=i,r.height+=Math.abs(i)):(r.lastAdvanceWidth=a,r.width+=a),r}function U(e,t){if(!(e<S.fakeSpaceMin))if(e<S.fakeMultiSpaceMin)t.push(\" \");else for(var r=Math.round(e/S.spaceWidth);r-- >0;)t.push(\" \")}function q(){var e,t,r;S.initialized&&(S.width*=S.textAdvanceScale,S.height*=S.textAdvanceScale,k.items.push((t=(e=S).str.join(\"\"),r=(0,d.bidi)(t,-1,e.vertical),{str:h?D(r.str):r.str,dir:r.dir,width:e.width,height:e.height,transform:e.transform,fontName:e.fontName})),S.initialized=!1,S.str.length=0)}function j(){var e=k.items.length;e>0&&(p.enqueue(k,e),k.items=[],k.styles=Object.create(null))}var z=new f;return new Promise(function e(t,r){var s=function(a){j(),Promise.all([a,p.ready]).then(function(){try{e(t,r)}catch(e){r(e)}},r)};i.ensureNotTerminated(),z.reset();for(var l,u={},f=[];!(l=z.check())&&(f.length=0,u.args=f,B.read(u));){y=c.state;var d,g=u.fn;switch(f=u.args,0|g){case a.OPS.setFont:var b=f[0].name,w=f[1];if(y.font&&b===y.fontName&&w===y.fontSize)break;return q(),y.fontName=b,y.fontSize=w,void s(L(b,null));case a.OPS.setTextRise:q(),y.textRise=f[0];break;case a.OPS.setHScale:q(),y.textHScale=f[0]/100;break;case a.OPS.setLeading:q(),y.leading=f[0];break;case a.OPS.moveText:var C=!!y.font&&0===(y.font.vertical?f[0]:f[1]);if(d=f[0]-f[1],m&&C&&S.initialized&&d>0&&d<=S.fakeMultiSpaceMax){y.translateTextLineMatrix(f[0],f[1]),S.width+=f[0]-S.lastAdvanceWidth,S.height+=f[1]-S.lastAdvanceHeight,U(f[0]-S.lastAdvanceWidth-(f[1]-S.lastAdvanceHeight),S.str);break}q(),y.translateTextLineMatrix(f[0],f[1]),y.textMatrix=y.textLineMatrix.slice();break;case a.OPS.setLeadingMoveText:q(),y.leading=-f[1],y.translateTextLineMatrix(f[0],f[1]),y.textMatrix=y.textLineMatrix.slice();break;case a.OPS.nextLine:q(),y.carriageReturn();break;case a.OPS.setTextMatrix:if(d=y.calcTextLineMatrixAdvance(f[0],f[1],f[2],f[3],f[4],f[5]),m&&null!==d&&S.initialized&&d.value>0&&d.value<=S.fakeMultiSpaceMax){y.translateTextLineMatrix(d.width,d.height),S.width+=d.width-S.lastAdvanceWidth,S.height+=d.height-S.lastAdvanceHeight,U(d.width-S.lastAdvanceWidth-(d.height-S.lastAdvanceHeight),S.str);break}q(),y.setTextMatrix(f[0],f[1],f[2],f[3],f[4],f[5]),y.setTextLineMatrix(f[0],f[1],f[2],f[3],f[4],f[5]);break;case a.OPS.setCharSpacing:y.charSpacing=f[0];break;case a.OPS.setWordSpacing:y.wordSpacing=f[0];break;case a.OPS.beginText:q(),y.textMatrix=a.IDENTITY_MATRIX.slice(),y.textLineMatrix=a.IDENTITY_MATRIX.slice();break;case a.OPS.showSpacedText:for(var A,_=f[0],P=0,T=_.length;P<T;P++)if(\"string\"==typeof _[P])N(_[P]);else if((0,a.isNum)(_[P])){M(),d=_[P]*y.fontSize/1e3;var E=!1;y.font.vertical?(A=d,y.translateTextMatrix(0,A),(E=S.textRunBreakAllowed&&d>S.fakeMultiSpaceMax)||(S.height+=A)):(A=(d=-d)*y.textHScale,y.translateTextMatrix(A,0),(E=S.textRunBreakAllowed&&d>S.fakeMultiSpaceMax)||(S.width+=A)),E?q():d>0&&U(d,S.str)}break;case a.OPS.showText:N(f[0]);break;case a.OPS.nextLineShowText:q(),y.carriageReturn(),N(f[0]);break;case a.OPS.nextLineSetSpacingShowText:q(),y.wordSpacing=f[0],y.charSpacing=f[1],y.carriageReturn(),N(f[2]);break;case a.OPS.paintXObject:q(),F||(F=n.get(\"XObject\")||o.Dict.empty);var D=f[0].name;if(D&&void 0!==R[D])break;return void s(new Promise(function(e,t){if(!D)throw new a.FormatError(\"XObject must be referred to by name.\");var r=F.get(D);if(r){if(!(0,o.isStream)(r))throw new a.FormatError(\"XObject should be a stream\");var s=r.dict.get(\"Subtype\");if(!(0,o.isName)(s))throw new a.FormatError(\"XObject should have a Name subtype\");if(\"Form\"!==s.name)return R[D]=!0,void e();var l=c.state.clone(),u=new x(l),f=r.dict.getArray(\"Matrix\");Array.isArray(f)&&6===f.length&&u.transform(f),j();var d={enqueueInvoked:!1,enqueue:function(e,t){this.enqueueInvoked=!0,p.enqueue(e,t)},get desiredSize(){return p.desiredSize},get ready(){return p.ready}};O.getTextContent({stream:r,task:i,resources:r.dict.get(\"Resources\")||n,stateManager:u,normalizeWhitespace:h,combineTextItems:m,sink:d,seenStyles:v}).then(function(){d.enqueueInvoked||(R[D]=!0),e()},t)}else e()}).catch(function(e){if(!(e instanceof a.AbortException)){if(!O.options.ignoreErrors)throw e;(0,a.warn)('getTextContent - ignoring XObject: \"'+e+'\".')}}));case a.OPS.setGState:q();var H=f[0],G=n.get(\"ExtGState\");if(!(0,o.isDict)(G)||!(0,o.isName)(H))break;var W=G.get(H.name);if(!(0,o.isDict)(W))break;var X=W.get(\"Font\");if(X)return y.fontName=null,y.fontSize=X[1],void s(L(null,X[0]))}if(k.items.length>=p.desiredSize){l=!0;break}}l?s(I):(q(),j(),t())}).catch(function(e){if(!(e instanceof a.AbortException)){if(t.options.ignoreErrors)return(0,a.warn)(\"getTextContent - ignoring errors during task: \"+i.name),q(),void j();throw e}})},extractDataStructures:function(e,t,r){var i=this,n=this.xref,l=e.get(\"ToUnicode\")||t.get(\"ToUnicode\"),u=l?this.readToUnicode(l):Promise.resolve(void 0);if(r.composite){var h=e.get(\"CIDSystemInfo\");(0,o.isDict)(h)&&(r.cidSystemInfo={registry:h.get(\"Registry\"),ordering:h.get(\"Ordering\"),supplement:h.get(\"Supplement\")});var f=e.get(\"CIDToGIDMap\");(0,o.isStream)(f)&&(r.cidToGidMap=this.readCidToGidMap(f))}var d,g=[],m=null;if(e.has(\"Encoding\")){if(d=e.get(\"Encoding\"),(0,o.isDict)(d)){if(m=d.get(\"BaseEncoding\"),m=(0,o.isName)(m)?m.name:null,d.has(\"Differences\"))for(var p=d.get(\"Differences\"),b=0,v=0,y=p.length;v<y;v++){var w=n.fetchIfRef(p[v]);if((0,a.isNum)(w))b=w;else{if(!(0,o.isName)(w))throw new a.FormatError(\"Invalid entry in 'Differences' array: \"+w);g[b++]=w.name}}}else{if(!(0,o.isName)(d))throw new a.FormatError(\"Encoding is not a Name nor a Dict\");m=d.name}\"MacRomanEncoding\"!==m&&\"MacExpertEncoding\"!==m&&\"WinAnsiEncoding\"!==m&&(m=null)}if(m)r.defaultEncoding=(0,c.getEncoding)(m).slice();else{var k=!!(r.flags&s.FontFlags.Symbolic),S=!!(r.flags&s.FontFlags.Nonsymbolic);d=c.StandardEncoding,\"TrueType\"!==r.type||S||(d=c.WinAnsiEncoding),k&&(d=c.MacRomanEncoding,r.file||(/Symbol/i.test(r.name)?d=c.SymbolSetEncoding:/Dingbats/i.test(r.name)&&(d=c.ZapfDingbatsEncoding))),r.defaultEncoding=d}return r.differences=g,r.baseEncodingName=m,r.hasEncoding=!!m||g.length>0,r.dict=e,u.then(function(e){return r.toUnicode=e,i.buildToUnicode(r)}).then(function(e){return r.toUnicode=e,r})},_buildSimpleFontToUnicode:function(e){(0,a.assert)(!e.composite,\"Must be a simple font.\");var t=[],r=void 0,i=void 0,n=e.defaultEncoding.slice(),o=e.baseEncodingName,u=e.differences;for(r in u)\".notdef\"!==(i=u[r])&&(n[r]=i);var h=(0,m.getGlyphsUnicode)();for(r in n)if(\"\"!==(i=n[r]))if(void 0!==h[i])t[r]=String.fromCharCode(h[i]);else{var f=0;switch(i[0]){case\"G\":3===i.length&&(f=parseInt(i.substr(1),16));break;case\"g\":5===i.length&&(f=parseInt(i.substr(1),16));break;case\"C\":case\"c\":i.length>=3&&(f=+i.substr(1));break;default:var d=(0,l.getUnicodeForGlyph)(i,h);-1!==d&&(f=d)}if(f){if(o&&f===+r){var g=(0,c.getEncoding)(o);if(g&&(i=g[r])){t[r]=String.fromCharCode(h[i]);continue}}t[r]=String.fromCharCode(f)}}return new s.ToUnicodeMap(t)},buildToUnicode:function(e){if(e.hasIncludedToUnicodeMap=!!e.toUnicode&&e.toUnicode.length>0,e.hasIncludedToUnicodeMap)return!e.composite&&e.hasEncoding&&(e.fallbackToUnicode=this._buildSimpleFontToUnicode(e)),Promise.resolve(e.toUnicode);if(!e.composite)return Promise.resolve(this._buildSimpleFontToUnicode(e));if(e.composite&&(e.cMap.builtInCMap&&!(e.cMap instanceof i.IdentityCMap)||\"Adobe\"===e.cidSystemInfo.registry&&(\"GB1\"===e.cidSystemInfo.ordering||\"CNS1\"===e.cidSystemInfo.ordering||\"Japan1\"===e.cidSystemInfo.ordering||\"Korea1\"===e.cidSystemInfo.ordering))){var t=e.cidSystemInfo.registry,r=e.cidSystemInfo.ordering,n=o.Name.get(t+\"-\"+r+\"-UCS2\");return i.CMapFactory.create({encoding:n,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(t){var r=e.cMap,i=[];return r.forEach(function(e,r){if(r>65535)throw new a.FormatError(\"Max size of CID is 65,535\");var n=t.lookup(r);n&&(i[e]=String.fromCharCode((n.charCodeAt(0)<<8)+n.charCodeAt(1)))}),new s.ToUnicodeMap(i)})}return Promise.resolve(new s.IdentityToUnicodeMap(e.firstChar,e.lastChar))},readToUnicode:function(e){var t=e;return(0,o.isName)(t)?i.CMapFactory.create({encoding:t,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){return e instanceof i.IdentityCMap?new s.IdentityToUnicodeMap(0,65535):new s.ToUnicodeMap(e.getMap())}):(0,o.isStream)(t)?i.CMapFactory.create({encoding:t,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){if(e instanceof i.IdentityCMap)return new s.IdentityToUnicodeMap(0,65535);var t=new Array(e.length);return e.forEach(function(e,r){for(var a=[],i=0;i<r.length;i+=2){var n=r.charCodeAt(i)<<8|r.charCodeAt(i+1);if(55296==(63488&n)){i+=2;var o=r.charCodeAt(i)<<8|r.charCodeAt(i+1);a.push(((1023&n)<<10)+(1023&o)+65536)}else a.push(n)}t[e]=String.fromCharCode.apply(String,a)}),new s.ToUnicodeMap(t)}):Promise.resolve(null)},readCidToGidMap:function(e){for(var t=e.getBytes(),r=[],a=0,i=t.length;a<i;a++){var n=t[a++]<<8|t[a];if(0!==n)r[a>>1]=n}return r},extractWidths:function(e,t,r){var a,i,n,c,l,u,h,f,d=this.xref,g=[],m=0,p=[];if(r.composite){if(m=e.has(\"DW\")?e.get(\"DW\"):1e3,f=e.get(\"W\"))for(i=0,n=f.length;i<n;i++)if(u=d.fetchIfRef(f[i++]),h=d.fetchIfRef(f[i]),Array.isArray(h))for(c=0,l=h.length;c<l;c++)g[u++]=d.fetchIfRef(h[c]);else{var b=d.fetchIfRef(f[++i]);for(c=u;c<=h;c++)g[c]=b}if(r.vertical){var v=e.getArray(\"DW2\")||[880,-1e3];if(a=[v[1],.5*m,v[0]],v=e.get(\"W2\"))for(i=0,n=v.length;i<n;i++)if(u=d.fetchIfRef(v[i++]),h=d.fetchIfRef(v[i]),Array.isArray(h))for(c=0,l=h.length;c<l;c++)p[u++]=[d.fetchIfRef(h[c++]),d.fetchIfRef(h[c++]),d.fetchIfRef(h[c])];else{var y=[d.fetchIfRef(v[++i]),d.fetchIfRef(v[++i]),d.fetchIfRef(v[++i])];for(c=u;c<=h;c++)p[c]=y}}}else{var w=r.firstChar;if(f=e.get(\"Widths\")){for(c=w,i=0,n=f.length;i<n;i++)g[c++]=d.fetchIfRef(f[i]);m=parseFloat(t.get(\"MissingWidth\"))||0}else{var k=e.get(\"BaseFont\");if((0,o.isName)(k)){var S=this.getBaseFontMetrics(k.name);g=this.buildCharCodeToWidth(S.widths,r),m=S.defaultWidth}}}var C=!0,x=m;for(var A in g){var _=g[A];if(_)if(x){if(x!==_){C=!1;break}}else x=_}C&&(r.flags|=s.FontFlags.FixedPitch),r.defaultWidth=m,r.widths=g,r.defaultVMetrics=a,r.vmetrics=p},isSerifFont:function(e){var t=e.split(\"-\")[0];return t in(0,u.getSerifFonts)()||-1!==t.search(/serif/gi)},getBaseFontMetrics:function(e){var t=0,r=[],i=!1,n=(0,u.getStdFontMap)()[e]||e,o=(0,p.getMetrics)();n in o||(n=this.isSerifFont(e)?\"Times-Roman\":\"Helvetica\");var s=o[n];return(0,a.isNum)(s)?(t=s,i=!0):r=s(),{defaultWidth:t,monospace:i,widths:r}},buildCharCodeToWidth:function(e,t){for(var r=Object.create(null),a=t.differences,i=t.defaultEncoding,n=0;n<256;n++)n in a&&e[a[n]]?r[n]=e[a[n]]:n in i&&e[i[n]]&&(r[n]=e[i[n]]);return r},preEvaluateFont:function(e){var t=e,r=e.get(\"Subtype\");if(!(0,o.isName)(r))throw new a.FormatError(\"invalid font Subtype\");var i,n=!1;if(\"Type0\"===r.name){var s=e.get(\"DescendantFonts\");if(!s)throw new a.FormatError(\"Descendant fonts are not specified\");if(r=(e=Array.isArray(s)?this.xref.fetchIfRef(s[0]):s).get(\"Subtype\"),!(0,o.isName)(r))throw new a.FormatError(\"invalid font Subtype\");n=!0}var c=e.get(\"FontDescriptor\");if(c){var l=new y.MurmurHash3_64,u=t.getRaw(\"Encoding\");if((0,o.isName)(u))l.update(u.name);else if((0,o.isRef)(u))l.update(u.toString());else if((0,o.isDict)(u))for(var h=u.getKeys(),f=0,d=h.length;f<d;f++){var g=u.getRaw(h[f]);if((0,o.isName)(g))l.update(g.name);else if((0,o.isRef)(g))l.update(g.toString());else if(Array.isArray(g)){for(var m=g.length,p=new Array(m),b=0;b<m;b++){var v=g[b];(0,o.isName)(v)?p[b]=v.name:((0,a.isNum)(v)||(0,o.isRef)(v))&&(p[b]=v.toString())}l.update(p.join())}}var w=e.get(\"ToUnicode\")||t.get(\"ToUnicode\");if((0,o.isStream)(w)){var k=w.str||w;i=k.buffer?new Uint8Array(k.buffer.buffer,0,k.bufferLength):new Uint8Array(k.bytes.buffer,k.start,k.end-k.start),l.update(i)}else(0,o.isName)(w)&&l.update(w.name);var S=e.get(\"Widths\")||t.get(\"Widths\");S&&(i=new Uint8Array(new Uint32Array(S).buffer),l.update(i))}return{descriptor:c,dict:e,baseDict:t,composite:n,type:r.name,hash:l?l.hexdigest():\"\"}},translateFont:function(e){var t,r=this,n=e.baseDict,c=e.dict,l=e.composite,h=e.descriptor,f=e.type,d=l?65535:255;if(!h){if(\"Type3\"!==f){var g=c.get(\"BaseFont\");if(!(0,o.isName)(g))throw new a.FormatError(\"Base font is not specified\");g=g.name.replace(/[,_]/g,\"-\");var m=this.getBaseFontMetrics(g),p=g.split(\"-\")[0],b=(this.isSerifFont(p)?s.FontFlags.Serif:0)|(m.monospace?s.FontFlags.FixedPitch:0)|((0,u.getSymbolsFonts)()[p]?s.FontFlags.Symbolic:s.FontFlags.Nonsymbolic);return t={type:f,name:g,widths:m.widths,defaultWidth:m.defaultWidth,flags:b,firstChar:0,lastChar:d},this.extractDataStructures(c,c,t).then(function(e){return e.widths=r.buildCharCodeToWidth(m.widths,e),new s.Font(g,null,e)})}(h=new o.Dict(null)).set(\"FontName\",o.Name.get(f)),h.set(\"FontBBox\",c.getArray(\"FontBBox\"))}var v=c.get(\"FirstChar\")||0,y=c.get(\"LastChar\")||d,w=h.get(\"FontName\"),k=c.get(\"BaseFont\");if((0,a.isString)(w)&&(w=o.Name.get(w)),(0,a.isString)(k)&&(k=o.Name.get(k)),\"Type3\"!==f){var S=w&&w.name,C=k&&k.name;S!==C&&((0,a.info)(\"The FontDescriptor's FontName is \\\"\"+S+'\" but should be the same as the Font\\'s BaseFont \"'+C+'\"'),S&&C&&0===C.indexOf(S)&&(w=k))}if(w=w||k,!(0,o.isName)(w))throw new a.FormatError(\"invalid font name\");var x,A=h.get(\"FontFile\",\"FontFile2\",\"FontFile3\");if(A&&A.dict){var _=A.dict.get(\"Subtype\");_&&(_=_.name);var P=A.dict.get(\"Length1\"),I=A.dict.get(\"Length2\"),T=A.dict.get(\"Length3\")}if(t={type:f,name:w.name,subtype:_,file:A,length1:P,length2:I,length3:T,loadedName:n.loadedName,composite:l,wideChars:l,fixedPitch:!1,fontMatrix:c.getArray(\"FontMatrix\")||a.FONT_IDENTITY_MATRIX,firstChar:v||0,lastChar:y||d,bbox:h.getArray(\"FontBBox\"),ascent:h.get(\"Ascent\"),descent:h.get(\"Descent\"),xHeight:h.get(\"XHeight\"),capHeight:h.get(\"CapHeight\"),flags:h.get(\"Flags\"),italicAngle:h.get(\"ItalicAngle\"),isType3Font:!1},l){var O=n.get(\"Encoding\");(0,o.isName)(O)&&(t.cidEncoding=O.name),x=i.CMapFactory.create({encoding:O,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){t.cMap=e,t.vertical=t.cMap.vertical})}else x=Promise.resolve(void 0);return x.then(function(){return r.extractDataStructures(c,n,t)}).then(function(e){return r.extractWidths(c,h,e),\"Type3\"===f&&(e.isType3Font=!0),new s.Font(w.name,A,e)})}},r}(),C=function(){function e(e,t,r){this.loadedName=e,this.font=t,this.dict=r,this.type3Loaded=null,this.sent=!1}return e.prototype={send:function(e){if(!this.sent){var t=this.font.exportData();e.send(\"commonobj\",[this.loadedName,\"Font\",t]),this.sent=!0}},loadType3Data:function(e,t,r,i){if(!this.font.isType3Font)throw new Error(\"Must be a Type3 font.\");if(this.type3Loaded)return this.type3Loaded;var n=Object.create(e.options);n.ignoreErrors=!1;for(var o=e.clone(n),s=this.font,c=Promise.resolve(),l=this.dict.get(\"CharProcs\"),u=this.dict.get(\"Resources\")||t,h=l.getKeys(),f=Object.create(null),d=function(){var e=h[g];c=c.then(function(){var t=l.get(e),n=new w.OperatorList;return o.getOperatorList({stream:t,task:i,resources:u,operatorList:n}).then(function(){f[e]=n.getIR(),r.addDependencies(n.dependencies)}).catch(function(t){(0,a.warn)('Type3 font resource \"'+e+'\" is not available.');var r=new w.OperatorList;f[e]=r.getIR()})})},g=0,m=h.length;g<m;++g)d();return this.type3Loaded=c.then(function(){s.charProcOperatorList=f}),this.type3Loaded}},e}(),x=function(){function e(e){this.state=e,this.stateStack=[]}return e.prototype={save:function(){var e=this.state;this.stateStack.push(this.state),this.state=e.clone()},restore:function(){var e=this.stateStack.pop();e&&(this.state=e)},transform:function(e){this.state.ctm=a.Util.transform(this.state.ctm,e)}},e}(),A=function(){function e(){this.ctm=new Float32Array(a.IDENTITY_MATRIX),this.fontName=null,this.fontSize=0,this.font=null,this.fontMatrix=a.FONT_IDENTITY_MATRIX,this.textMatrix=a.IDENTITY_MATRIX.slice(),this.textLineMatrix=a.IDENTITY_MATRIX.slice(),this.charSpacing=0,this.wordSpacing=0,this.leading=0,this.textHScale=1,this.textRise=0}return e.prototype={setTextMatrix:function(e,t,r,a,i,n){var o=this.textMatrix;o[0]=e,o[1]=t,o[2]=r,o[3]=a,o[4]=i,o[5]=n},setTextLineMatrix:function(e,t,r,a,i,n){var o=this.textLineMatrix;o[0]=e,o[1]=t,o[2]=r,o[3]=a,o[4]=i,o[5]=n},translateTextMatrix:function(e,t){var r=this.textMatrix;r[4]=r[0]*e+r[2]*t+r[4],r[5]=r[1]*e+r[3]*t+r[5]},translateTextLineMatrix:function(e,t){var r=this.textLineMatrix;r[4]=r[0]*e+r[2]*t+r[4],r[5]=r[1]*e+r[3]*t+r[5]},calcTextLineMatrixAdvance:function(e,t,r,a,i,n){var o=this.font;if(!o)return null;var s=this.textLineMatrix;if(e!==s[0]||t!==s[1]||r!==s[2]||a!==s[3])return null;var c=i-s[4],l=n-s[5];if(o.vertical&&0!==c||!o.vertical&&0!==l)return null;var u,h,f=e*a-t*r;return o.vertical?(u=-l*r/f,h=l*e/f):(u=c*a/f,h=-c*t/f),{width:u,height:h,value:o.vertical?h:u}},calcRenderMatrix:function(e){var t=[this.fontSize*this.textHScale,0,0,this.fontSize,0,this.textRise];return a.Util.transform(e,a.Util.transform(this.textMatrix,t))},carriageReturn:function(){this.translateTextLineMatrix(0,-this.leading),this.textMatrix=this.textLineMatrix.slice()},clone:function(){var e=Object.create(this);return e.textMatrix=this.textMatrix.slice(),e.textLineMatrix=this.textLineMatrix.slice(),e.fontMatrix=this.fontMatrix.slice(),e}},e}(),_=function(){function e(){this.ctm=new Float32Array(a.IDENTITY_MATRIX),this.font=null,this.textRenderingMode=a.TextRenderingMode.FILL,this.fillColorSpace=g.ColorSpace.singletons.gray,this.strokeColorSpace=g.ColorSpace.singletons.gray}return e.prototype={clone:function(){return Object.create(this)}},e}(),P=function(){var e=(0,a.getLookupTableFactory)(function(e){e.w={id:a.OPS.setLineWidth,numArgs:1,variableArgs:!1},e.J={id:a.OPS.setLineCap,numArgs:1,variableArgs:!1},e.j={id:a.OPS.setLineJoin,numArgs:1,variableArgs:!1},e.M={id:a.OPS.setMiterLimit,numArgs:1,variableArgs:!1},e.d={id:a.OPS.setDash,numArgs:2,variableArgs:!1},e.ri={id:a.OPS.setRenderingIntent,numArgs:1,variableArgs:!1},e.i={id:a.OPS.setFlatness,numArgs:1,variableArgs:!1},e.gs={id:a.OPS.setGState,numArgs:1,variableArgs:!1},e.q={id:a.OPS.save,numArgs:0,variableArgs:!1},e.Q={id:a.OPS.restore,numArgs:0,variableArgs:!1},e.cm={id:a.OPS.transform,numArgs:6,variableArgs:!1},e.m={id:a.OPS.moveTo,numArgs:2,variableArgs:!1},e.l={id:a.OPS.lineTo,numArgs:2,variableArgs:!1},e.c={id:a.OPS.curveTo,numArgs:6,variableArgs:!1},e.v={id:a.OPS.curveTo2,numArgs:4,variableArgs:!1},e.y={id:a.OPS.curveTo3,numArgs:4,variableArgs:!1},e.h={id:a.OPS.closePath,numArgs:0,variableArgs:!1},e.re={id:a.OPS.rectangle,numArgs:4,variableArgs:!1},e.S={id:a.OPS.stroke,numArgs:0,variableArgs:!1},e.s={id:a.OPS.closeStroke,numArgs:0,variableArgs:!1},e.f={id:a.OPS.fill,numArgs:0,variableArgs:!1},e.F={id:a.OPS.fill,numArgs:0,variableArgs:!1},e[\"f*\"]={id:a.OPS.eoFill,numArgs:0,variableArgs:!1},e.B={id:a.OPS.fillStroke,numArgs:0,variableArgs:!1},e[\"B*\"]={id:a.OPS.eoFillStroke,numArgs:0,variableArgs:!1},e.b={id:a.OPS.closeFillStroke,numArgs:0,variableArgs:!1},e[\"b*\"]={id:a.OPS.closeEOFillStroke,numArgs:0,variableArgs:!1},e.n={id:a.OPS.endPath,numArgs:0,variableArgs:!1},e.W={id:a.OPS.clip,numArgs:0,variableArgs:!1},e[\"W*\"]={id:a.OPS.eoClip,numArgs:0,variableArgs:!1},e.BT={id:a.OPS.beginText,numArgs:0,variableArgs:!1},e.ET={id:a.OPS.endText,numArgs:0,variableArgs:!1},e.Tc={id:a.OPS.setCharSpacing,numArgs:1,variableArgs:!1},e.Tw={id:a.OPS.setWordSpacing,numArgs:1,variableArgs:!1},e.Tz={id:a.OPS.setHScale,numArgs:1,variableArgs:!1},e.TL={id:a.OPS.setLeading,numArgs:1,variableArgs:!1},e.Tf={id:a.OPS.setFont,numArgs:2,variableArgs:!1},e.Tr={id:a.OPS.setTextRenderingMode,numArgs:1,variableArgs:!1},e.Ts={id:a.OPS.setTextRise,numArgs:1,variableArgs:!1},e.Td={id:a.OPS.moveText,numArgs:2,variableArgs:!1},e.TD={id:a.OPS.setLeadingMoveText,numArgs:2,variableArgs:!1},e.Tm={id:a.OPS.setTextMatrix,numArgs:6,variableArgs:!1},e[\"T*\"]={id:a.OPS.nextLine,numArgs:0,variableArgs:!1},e.Tj={id:a.OPS.showText,numArgs:1,variableArgs:!1},e.TJ={id:a.OPS.showSpacedText,numArgs:1,variableArgs:!1},e[\"'\"]={id:a.OPS.nextLineShowText,numArgs:1,variableArgs:!1},e['\"']={id:a.OPS.nextLineSetSpacingShowText,numArgs:3,variableArgs:!1},e.d0={id:a.OPS.setCharWidth,numArgs:2,variableArgs:!1},e.d1={id:a.OPS.setCharWidthAndBounds,numArgs:6,variableArgs:!1},e.CS={id:a.OPS.setStrokeColorSpace,numArgs:1,variableArgs:!1},e.cs={id:a.OPS.setFillColorSpace,numArgs:1,variableArgs:!1},e.SC={id:a.OPS.setStrokeColor,numArgs:4,variableArgs:!0},e.SCN={id:a.OPS.setStrokeColorN,numArgs:33,variableArgs:!0},e.sc={id:a.OPS.setFillColor,numArgs:4,variableArgs:!0},e.scn={id:a.OPS.setFillColorN,numArgs:33,variableArgs:!0},e.G={id:a.OPS.setStrokeGray,numArgs:1,variableArgs:!1},e.g={id:a.OPS.setFillGray,numArgs:1,variableArgs:!1},e.RG={id:a.OPS.setStrokeRGBColor,numArgs:3,variableArgs:!1},e.rg={id:a.OPS.setFillRGBColor,numArgs:3,variableArgs:!1},e.K={id:a.OPS.setStrokeCMYKColor,numArgs:4,variableArgs:!1},e.k={id:a.OPS.setFillCMYKColor,numArgs:4,variableArgs:!1},e.sh={id:a.OPS.shadingFill,numArgs:1,variableArgs:!1},e.BI={id:a.OPS.beginInlineImage,numArgs:0,variableArgs:!1},e.ID={id:a.OPS.beginImageData,numArgs:0,variableArgs:!1},e.EI={id:a.OPS.endInlineImage,numArgs:1,variableArgs:!1},e.Do={id:a.OPS.paintXObject,numArgs:1,variableArgs:!1},e.MP={id:a.OPS.markPoint,numArgs:1,variableArgs:!1},e.DP={id:a.OPS.markPointProps,numArgs:2,variableArgs:!1},e.BMC={id:a.OPS.beginMarkedContent,numArgs:1,variableArgs:!1},e.BDC={id:a.OPS.beginMarkedContentProps,numArgs:2,variableArgs:!1},e.EMC={id:a.OPS.endMarkedContent,numArgs:0,variableArgs:!1},e.BX={id:a.OPS.beginCompat,numArgs:0,variableArgs:!1},e.EX={id:a.OPS.endCompat,numArgs:0,variableArgs:!1},e.BM=null,e.BD=null,e.true=null,e.fa=null,e.fal=null,e.fals=null,e.false=null,e.nu=null,e.nul=null,e.null=null});function t(t,r,a){this.opMap=e(),this.parser=new f.Parser(new f.Lexer(t,this.opMap),!1,r),this.stateManager=a,this.nonProcessedArgs=[]}return t.prototype={get savedStatesDepth(){return this.stateManager.stateStack.length},read:function(e){for(var t=e.args;;){var r=this.parser.getObj();if((0,o.isCmd)(r)){var i=r.cmd,n=this.opMap[i];if(!n){(0,a.warn)('Unknown command \"'+i+'\"');continue}var s=n.id,c=n.numArgs,l=null!==t?t.length:0;if(n.variableArgs)l>c&&(0,a.info)(\"Command \"+s+\": expected [0,\"+c+\"] args, but received \"+l+\" args.\");else{if(l!==c){for(var u=this.nonProcessedArgs;l>c;)u.push(t.shift()),l--;for(;l<c&&0!==u.length;)null===t&&(t=[]),t.unshift(u.pop()),l++}if(l<c){(0,a.warn)(\"Skipping command \"+s+\": expected \"+c+\" args, but received \"+l+\" args.\"),null!==t&&(t.length=0);continue}}return this.preprocessCommand(s,t),e.fn=s,e.args=t,!0}if((0,o.isEOF)(r))return!1;if(null!==r&&(null===t&&(t=[]),t.push(r),t.length>33))throw new a.FormatError(\"Too many arguments\")}},preprocessCommand:function(e,t){switch(0|e){case a.OPS.save:this.stateManager.save();break;case a.OPS.restore:this.stateManager.restore();break;case a.OPS.transform:this.stateManager.transform(t)}}},t}();t.PartialEvaluator=S},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CMapFactory=t.IdentityCMap=t.CMap=void 0;var a=r(0),i=r(1),n=r(26),o=r(2),s=[\"Adobe-GB1-UCS2\",\"Adobe-CNS1-UCS2\",\"Adobe-Japan1-UCS2\",\"Adobe-Korea1-UCS2\",\"78-EUC-H\",\"78-EUC-V\",\"78-H\",\"78-RKSJ-H\",\"78-RKSJ-V\",\"78-V\",\"78ms-RKSJ-H\",\"78ms-RKSJ-V\",\"83pv-RKSJ-H\",\"90ms-RKSJ-H\",\"90ms-RKSJ-V\",\"90msp-RKSJ-H\",\"90msp-RKSJ-V\",\"90pv-RKSJ-H\",\"90pv-RKSJ-V\",\"Add-H\",\"Add-RKSJ-H\",\"Add-RKSJ-V\",\"Add-V\",\"Adobe-CNS1-0\",\"Adobe-CNS1-1\",\"Adobe-CNS1-2\",\"Adobe-CNS1-3\",\"Adobe-CNS1-4\",\"Adobe-CNS1-5\",\"Adobe-CNS1-6\",\"Adobe-GB1-0\",\"Adobe-GB1-1\",\"Adobe-GB1-2\",\"Adobe-GB1-3\",\"Adobe-GB1-4\",\"Adobe-GB1-5\",\"Adobe-Japan1-0\",\"Adobe-Japan1-1\",\"Adobe-Japan1-2\",\"Adobe-Japan1-3\",\"Adobe-Japan1-4\",\"Adobe-Japan1-5\",\"Adobe-Japan1-6\",\"Adobe-Korea1-0\",\"Adobe-Korea1-1\",\"Adobe-Korea1-2\",\"B5-H\",\"B5-V\",\"B5pc-H\",\"B5pc-V\",\"CNS-EUC-H\",\"CNS-EUC-V\",\"CNS1-H\",\"CNS1-V\",\"CNS2-H\",\"CNS2-V\",\"ETHK-B5-H\",\"ETHK-B5-V\",\"ETen-B5-H\",\"ETen-B5-V\",\"ETenms-B5-H\",\"ETenms-B5-V\",\"EUC-H\",\"EUC-V\",\"Ext-H\",\"Ext-RKSJ-H\",\"Ext-RKSJ-V\",\"Ext-V\",\"GB-EUC-H\",\"GB-EUC-V\",\"GB-H\",\"GB-V\",\"GBK-EUC-H\",\"GBK-EUC-V\",\"GBK2K-H\",\"GBK2K-V\",\"GBKp-EUC-H\",\"GBKp-EUC-V\",\"GBT-EUC-H\",\"GBT-EUC-V\",\"GBT-H\",\"GBT-V\",\"GBTpc-EUC-H\",\"GBTpc-EUC-V\",\"GBpc-EUC-H\",\"GBpc-EUC-V\",\"H\",\"HKdla-B5-H\",\"HKdla-B5-V\",\"HKdlb-B5-H\",\"HKdlb-B5-V\",\"HKgccs-B5-H\",\"HKgccs-B5-V\",\"HKm314-B5-H\",\"HKm314-B5-V\",\"HKm471-B5-H\",\"HKm471-B5-V\",\"HKscs-B5-H\",\"HKscs-B5-V\",\"Hankaku\",\"Hiragana\",\"KSC-EUC-H\",\"KSC-EUC-V\",\"KSC-H\",\"KSC-Johab-H\",\"KSC-Johab-V\",\"KSC-V\",\"KSCms-UHC-H\",\"KSCms-UHC-HW-H\",\"KSCms-UHC-HW-V\",\"KSCms-UHC-V\",\"KSCpc-EUC-H\",\"KSCpc-EUC-V\",\"Katakana\",\"NWP-H\",\"NWP-V\",\"RKSJ-H\",\"RKSJ-V\",\"Roman\",\"UniCNS-UCS2-H\",\"UniCNS-UCS2-V\",\"UniCNS-UTF16-H\",\"UniCNS-UTF16-V\",\"UniCNS-UTF32-H\",\"UniCNS-UTF32-V\",\"UniCNS-UTF8-H\",\"UniCNS-UTF8-V\",\"UniGB-UCS2-H\",\"UniGB-UCS2-V\",\"UniGB-UTF16-H\",\"UniGB-UTF16-V\",\"UniGB-UTF32-H\",\"UniGB-UTF32-V\",\"UniGB-UTF8-H\",\"UniGB-UTF8-V\",\"UniJIS-UCS2-H\",\"UniJIS-UCS2-HW-H\",\"UniJIS-UCS2-HW-V\",\"UniJIS-UCS2-V\",\"UniJIS-UTF16-H\",\"UniJIS-UTF16-V\",\"UniJIS-UTF32-H\",\"UniJIS-UTF32-V\",\"UniJIS-UTF8-H\",\"UniJIS-UTF8-V\",\"UniJIS2004-UTF16-H\",\"UniJIS2004-UTF16-V\",\"UniJIS2004-UTF32-H\",\"UniJIS2004-UTF32-V\",\"UniJIS2004-UTF8-H\",\"UniJIS2004-UTF8-V\",\"UniJISPro-UCS2-HW-V\",\"UniJISPro-UCS2-V\",\"UniJISPro-UTF8-V\",\"UniJISX0213-UTF32-H\",\"UniJISX0213-UTF32-V\",\"UniJISX02132004-UTF32-H\",\"UniJISX02132004-UTF32-V\",\"UniKS-UCS2-H\",\"UniKS-UCS2-V\",\"UniKS-UTF16-H\",\"UniKS-UTF16-V\",\"UniKS-UTF32-H\",\"UniKS-UTF32-V\",\"UniKS-UTF8-H\",\"UniKS-UTF8-V\",\"V\",\"WP-Symbol\"],c=function(){function e(e){this.codespaceRanges=[[],[],[],[]],this.numCodespaceRanges=0,this._map=[],this.name=\"\",this.vertical=!1,this.useCMap=null,this.builtInCMap=e}return e.prototype={addCodespaceRange:function(e,t,r){this.codespaceRanges[e-1].push(t,r),this.numCodespaceRanges++},mapCidRange:function(e,t,r){for(;e<=t;)this._map[e++]=r++},mapBfRange:function(e,t,r){for(var a=r.length-1;e<=t;)this._map[e++]=r,r=r.substr(0,a)+String.fromCharCode(r.charCodeAt(a)+1)},mapBfRangeToArray:function(e,t,r){for(var a=0,i=r.length;e<=t&&a<i;)this._map[e]=r[a++],++e},mapOne:function(e,t){this._map[e]=t},lookup:function(e){return this._map[e]},contains:function(e){return void 0!==this._map[e]},forEach:function(e){var t=this._map,r=t.length;if(r<=65536)for(var a=0;a<r;a++)void 0!==t[a]&&e(a,t[a]);else for(var i in t)e(i,t[i])},charCodeOf:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var r in t)if(t[r]===e)return 0|r;return-1},getMap:function(){return this._map},readCharCode:function(e,t,r){for(var a=0,i=this.codespaceRanges,n=this.codespaceRanges.length,o=0;o<n;o++){a=(a<<8|e.charCodeAt(t+o))>>>0;for(var s=i[o],c=0,l=s.length;c<l;){var u=s[c++],h=s[c++];if(a>=u&&a<=h)return r.charcode=a,void(r.length=o+1)}}r.charcode=0,r.length=1},get length(){return this._map.length},get isIdentityCMap(){if(\"Identity-H\"!==this.name&&\"Identity-V\"!==this.name)return!1;if(65536!==this._map.length)return!1;for(var e=0;e<65536;e++)if(this._map[e]!==e)return!1;return!0}},e}(),l=function(){function e(e,t){c.call(this),this.vertical=e,this.addCodespaceRange(t,0,65535)}return a.Util.inherit(e,c,{}),e.prototype={addCodespaceRange:c.prototype.addCodespaceRange,mapCidRange:function(e,t,r){(0,a.unreachable)(\"should not call mapCidRange\")},mapBfRange:function(e,t,r){(0,a.unreachable)(\"should not call mapBfRange\")},mapBfRangeToArray:function(e,t,r){(0,a.unreachable)(\"should not call mapBfRangeToArray\")},mapOne:function(e,t){(0,a.unreachable)(\"should not call mapCidOne\")},lookup:function(e){return Number.isInteger(e)&&e<=65535?e:void 0},contains:function(e){return Number.isInteger(e)&&e<=65535},forEach:function(e){for(var t=0;t<=65535;t++)e(t,t)},charCodeOf:function(e){return Number.isInteger(e)&&e<=65535?e:-1},getMap:function(){for(var e=new Array(65536),t=0;t<=65535;t++)e[t]=t;return e},readCharCode:c.prototype.readCharCode,get length(){return 65536},get isIdentityCMap(){(0,a.unreachable)(\"should not access .isIdentityCMap\")}},e}(),u=function(){function e(e,t){for(var r=0,a=0;a<=t;a++)r=r<<8|e[a];return r>>>0}function t(e,t){return 1===t?String.fromCharCode(e[0],e[1]):3===t?String.fromCharCode(e[0],e[1],e[2],e[3]):String.fromCharCode.apply(null,e.subarray(0,t+1))}function r(e,t,r){for(var a=0,i=r;i>=0;i--)a+=e[i]+t[i],e[i]=255&a,a>>=8}function i(e,t){for(var r=1,a=t;a>=0&&r>0;a--)r+=e[a],e[a]=255&r,r>>=8}var n=16,o=19;function s(e){this.buffer=e,this.pos=0,this.end=e.length,this.tmpBuf=new Uint8Array(o)}function c(){}return s.prototype={readByte:function(){return this.pos>=this.end?-1:this.buffer[this.pos++]},readNumber:function(){var e,t=0;do{var r=this.readByte();if(r<0)throw new a.FormatError(\"unexpected EOF in bcmap\");e=!(128&r),t=t<<7|127&r}while(!e);return t},readSigned:function(){var e=this.readNumber();return 1&e?~(e>>>1):e>>>1},readHex:function(e,t){e.set(this.buffer.subarray(this.pos,this.pos+t+1)),this.pos+=t+1},readHexNumber:function(e,t){var r,i=this.tmpBuf,n=0;do{var o=this.readByte();if(o<0)throw new a.FormatError(\"unexpected EOF in bcmap\");r=!(128&o),i[n++]=127&o}while(!r);for(var s=t,c=0,l=0;s>=0;){for(;l<8&&i.length>0;)c=i[--n]<<l|c,l+=7;e[s]=255&c,s--,c>>=8,l-=8}},readHexSigned:function(e,t){this.readHexNumber(e,t);for(var r=1&e[t]?255:0,a=0,i=0;i<=t;i++)a=(1&a)<<8|e[i],e[i]=a>>1^r},readString:function(){for(var e=this.readNumber(),t=\"\",r=0;r<e;r++)t+=String.fromCharCode(this.readNumber());return t}},c.prototype={process:function(a,o,c){return new Promise(function(l,u){var h=new s(a),f=h.readByte();o.vertical=!!(1&f);for(var d,g,m=null,p=new Uint8Array(n),b=new Uint8Array(n),v=new Uint8Array(n),y=new Uint8Array(n),w=new Uint8Array(n);(g=h.readByte())>=0;){var k=g>>5;if(7!==k){var S=!!(16&g),C=15&g;if(C+1>n)throw new Error(\"processBinaryCMap: Invalid dataSize.\");var x,A=h.readNumber();switch(k){case 0:for(h.readHex(p,C),h.readHexNumber(b,C),r(b,p,C),o.addCodespaceRange(C+1,e(p,C),e(b,C)),x=1;x<A;x++)i(b,C),h.readHexNumber(p,C),r(p,b,C),h.readHexNumber(b,C),r(b,p,C),o.addCodespaceRange(C+1,e(p,C),e(b,C));break;case 1:for(h.readHex(p,C),h.readHexNumber(b,C),r(b,p,C),h.readNumber(),x=1;x<A;x++)i(b,C),h.readHexNumber(p,C),r(p,b,C),h.readHexNumber(b,C),r(b,p,C),h.readNumber();break;case 2:for(h.readHex(v,C),d=h.readNumber(),o.mapOne(e(v,C),d),x=1;x<A;x++)i(v,C),S||(h.readHexNumber(w,C),r(v,w,C)),d=h.readSigned()+(d+1),o.mapOne(e(v,C),d);break;case 3:for(h.readHex(p,C),h.readHexNumber(b,C),r(b,p,C),d=h.readNumber(),o.mapCidRange(e(p,C),e(b,C),d),x=1;x<A;x++)i(b,C),S?p.set(b):(h.readHexNumber(p,C),r(p,b,C)),h.readHexNumber(b,C),r(b,p,C),d=h.readNumber(),o.mapCidRange(e(p,C),e(b,C),d);break;case 4:for(h.readHex(v,1),h.readHex(y,C),o.mapOne(e(v,1),t(y,C)),x=1;x<A;x++)i(v,1),S||(h.readHexNumber(w,1),r(v,w,1)),i(y,C),h.readHexSigned(w,C),r(y,w,C),o.mapOne(e(v,1),t(y,C));break;case 5:for(h.readHex(p,1),h.readHexNumber(b,1),r(b,p,1),h.readHex(y,C),o.mapBfRange(e(p,1),e(b,1),t(y,C)),x=1;x<A;x++)i(b,1),S?p.set(b):(h.readHexNumber(p,1),r(p,b,1)),h.readHexNumber(b,1),r(b,p,1),h.readHex(y,C),o.mapBfRange(e(p,1),e(b,1),t(y,C));break;default:return void u(new Error(\"processBinaryCMap: Unknown type: \"+k))}}else switch(31&g){case 0:h.readString();break;case 1:m=h.readString()}}l(m?c(m):o)})}},c}(),h=function(){function e(e){for(var t=0,r=0;r<e.length;r++)t=t<<8|e.charCodeAt(r);return t>>>0}function t(e){if(!(0,a.isString)(e))throw new a.FormatError(\"Malformed CMap: expected string.\")}function r(e){if(!Number.isInteger(e))throw new a.FormatError(\"Malformed CMap: expected int.\")}function h(r,a){for(;;){var n=a.getObj();if((0,i.isEOF)(n))break;if((0,i.isCmd)(n,\"endbfchar\"))return;t(n);var o=e(n);t(n=a.getObj());var s=n;r.mapOne(o,s)}}function f(r,n){for(;;){var o=n.getObj();if((0,i.isEOF)(o))break;if((0,i.isCmd)(o,\"endbfrange\"))return;t(o);var s=e(o);t(o=n.getObj());var c=e(o);if(o=n.getObj(),Number.isInteger(o)||(0,a.isString)(o)){var l=Number.isInteger(o)?String.fromCharCode(o):o;r.mapBfRange(s,c,l)}else{if(!(0,i.isCmd)(o,\"[\"))break;o=n.getObj();for(var u=[];!(0,i.isCmd)(o,\"]\")&&!(0,i.isEOF)(o);)u.push(o),o=n.getObj();r.mapBfRangeToArray(s,c,u)}}throw new a.FormatError(\"Invalid bf range.\")}function d(a,n){for(;;){var o=n.getObj();if((0,i.isEOF)(o))break;if((0,i.isCmd)(o,\"endcidchar\"))return;t(o);var s=e(o);r(o=n.getObj());var c=o;a.mapOne(s,c)}}function g(a,n){for(;;){var o=n.getObj();if((0,i.isEOF)(o))break;if((0,i.isCmd)(o,\"endcidrange\"))return;t(o);var s=e(o);t(o=n.getObj());var c=e(o);r(o=n.getObj());var l=o;a.mapCidRange(s,c,l)}}function m(t,r){for(;;){var n=r.getObj();if((0,i.isEOF)(n))break;if((0,i.isCmd)(n,\"endcodespacerange\"))return;if(!(0,a.isString)(n))break;var o=e(n);if(n=r.getObj(),!(0,a.isString)(n))break;var s=e(n);t.addCodespaceRange(n.length,o,s)}throw new a.FormatError(\"Invalid codespace range.\")}function p(e,t){var r=t.getObj();Number.isInteger(r)&&(e.vertical=!!r)}function b(e,t){var r=t.getObj();(0,i.isName)(r)&&(0,a.isString)(r.name)&&(e.name=r.name)}function v(e,t,r,n){var o,s;e:for(;;)try{var c=t.getObj();if((0,i.isEOF)(c))break;if((0,i.isName)(c))\"WMode\"===c.name?p(e,t):\"CMapName\"===c.name&&b(e,t),o=c;else if((0,i.isCmd)(c))switch(c.cmd){case\"endcmap\":break e;case\"usecmap\":(0,i.isName)(o)&&(s=o.name);break;case\"begincodespacerange\":m(e,t);break;case\"beginbfchar\":h(e,t);break;case\"begincidchar\":d(e,t);break;case\"beginbfrange\":f(e,t);break;case\"begincidrange\":g(e,t)}}catch(e){if(e instanceof a.MissingDataException)throw e;(0,a.warn)(\"Invalid cMap data: \"+e);continue}return!n&&s&&(n=s),n?y(e,r,n):Promise.resolve(e)}function y(e,t,r){return w(r,t).then(function(t){if(e.useCMap=t,0===e.numCodespaceRanges){for(var r=e.useCMap.codespaceRanges,a=0;a<r.length;a++)e.codespaceRanges[a]=r[a].slice();e.numCodespaceRanges=e.useCMap.numCodespaceRanges}return e.useCMap.forEach(function(t,r){e.contains(t)||e.mapOne(t,e.useCMap.lookup(t))}),e})}function w(e,t){return\"Identity-H\"===e?Promise.resolve(new l(!1,2)):\"Identity-V\"===e?Promise.resolve(new l(!0,2)):-1===s.indexOf(e)?Promise.reject(new Error(\"Unknown CMap name: \"+e)):t?t(e).then(function(e){var r=e.cMapData,i=e.compressionType,s=new c(!0);if(i===a.CMapCompressionType.BINARY)return(new u).process(r,s,function(e){return y(s,t,e)});if(i===a.CMapCompressionType.NONE){var l=new n.Lexer(new o.Stream(r));return v(s,l,t,null)}return Promise.reject(new Error(\"TODO: Only BINARY/NONE CMap compression is currently supported.\"))}):Promise.reject(new Error(\"Built-in CMap parameters are not provided.\"))}return{create:function(e){var t=e.encoding,r=e.fetchBuiltInCMap,a=e.useCMap;return(0,i.isName)(t)?w(t.name,r):(0,i.isStream)(t)?v(new c,new n.Lexer(t),r,a).then(function(e){return e.isIdentityCMap?w(e.name,r):e}):Promise.reject(new Error(\"Encoding required.\"))}}}();t.CMap=c,t.IdentityCMap=l,t.CMapFactory=h},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getFontType=t.ProblematicCharRanges=t.IdentityToUnicodeMap=t.ToUnicodeMap=t.FontFlags=t.Font=t.ErrorFont=t.PRIVATE_USE_OFFSET_END=t.PRIVATE_USE_OFFSET_START=t.SEAC_ANALYSIS_ENABLED=void 0;var a=r(0),i=r(69),n=r(43),o=r(21),s=r(70),c=r(71),l=r(139),u=r(2),h=r(140),f=57344,d=63743,g=!1,m=1e3,p=!1,b={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144},v=[\".notdef\",\".null\",\"nonmarkingreturn\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"nonbreakingspace\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"Lslash\",\"lslash\",\"Scaron\",\"scaron\",\"Zcaron\",\"zcaron\",\"brokenbar\",\"Eth\",\"eth\",\"Yacute\",\"yacute\",\"Thorn\",\"thorn\",\"minus\",\"multiply\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"onehalf\",\"onequarter\",\"threequarters\",\"franc\",\"Gbreve\",\"gbreve\",\"Idotaccent\",\"Scedilla\",\"scedilla\",\"Cacute\",\"cacute\",\"Ccaron\",\"ccaron\",\"dcroat\"];function y(e){if(e.fontMatrix&&e.fontMatrix[0]!==a.FONT_IDENTITY_MATRIX[0]){var t=.001/e.fontMatrix[0],r=e.widths;for(var i in r)r[i]*=t;e.defaultWidth*=t}}function w(e,t){switch(e){case\"Type1\":return\"Type1C\"===t?a.FontType.TYPE1C:a.FontType.TYPE1;case\"CIDFontType0\":return\"CIDFontType0C\"===t?a.FontType.CIDFONTTYPE0C:a.FontType.CIDFONTTYPE0;case\"OpenType\":return a.FontType.OPENTYPE;case\"TrueType\":return a.FontType.TRUETYPE;case\"CIDFontType2\":return a.FontType.CIDFONTTYPE2;case\"MMType1\":return a.FontType.MMTYPE1;case\"Type0\":return a.FontType.TYPE0;default:return a.FontType.UNKNOWN}}function k(e,t){if(void 0!==t[e])return e;var r=(0,c.getUnicodeForGlyph)(e,t);if(-1!==r)for(var i in t)if(t[i]===r)return i;return(0,a.info)(\"Unable to recover a standard glyph name for: \"+e),e}var S=function(){function e(e,t,r,a,i,n,o,s){this.fontChar=e,this.unicode=t,this.accent=r,this.width=a,this.vmetric=i,this.operatorListId=n,this.isSpace=o,this.isInFont=s}return e.prototype.matchesForCache=function(e,t,r,a,i,n,o,s){return this.fontChar===e&&this.unicode===t&&this.accent===r&&this.width===a&&this.vmetric===i&&this.operatorListId===n&&this.isSpace===o&&this.isInFont===s},e}(),C=function(){function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._map=e}return e.prototype={get length(){return this._map.length},forEach:function(e){for(var t in this._map)e(t,this._map[t].charCodeAt(0))},has:function(e){return void 0!==this._map[e]},get:function(e){return this._map[e]},charCodeOf:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var r in t)if(t[r]===e)return 0|r;return-1},amend:function(e){for(var t in e)this._map[t]=e[t]}},e}(),x=function(){function e(e,t){this.firstChar=e,this.lastChar=t}return e.prototype={get length(){return this.lastChar+1-this.firstChar},forEach:function(e){for(var t=this.firstChar,r=this.lastChar;t<=r;t++)e(t,t)},has:function(e){return this.firstChar<=e&&e<=this.lastChar},get:function(e){if(this.firstChar<=e&&e<=this.lastChar)return String.fromCharCode(e)},charCodeOf:function(e){return Number.isInteger(e)&&e>=this.firstChar&&e<=this.lastChar?e:-1},amend:function(e){(0,a.unreachable)(\"Should not call amend()\")}},e}(),A=function(){function e(e,t,r){e[t]=r>>8&255,e[t+1]=255&r}function t(e,t,r){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r}function r(e,t,r){var a,i;if(r instanceof Uint8Array)e.set(r,t);else if(\"string\"==typeof r)for(a=0,i=r.length;a<i;a++)e[t++]=255&r.charCodeAt(a);else for(a=0,i=r.length;a<i;a++)e[t++]=255&r[a]}function i(e){this.sfnt=e,this.tables=Object.create(null)}i.getSearchParams=function(e,t){for(var r=1,a=0;(r^e)>r;)r<<=1,a++;var i=r*t;return{range:i,entry:a,rangeShift:t*e-i}};return i.prototype={toArray:function(){var n=this.sfnt,o=this.tables,s=Object.keys(o);s.sort();var c,l,u,h,f,d=s.length,g=12+16*d,m=[g];for(c=0;c<d;c++){g+=((h=o[s[c]]).length+3&-4)>>>0,m.push(g)}var p=new Uint8Array(g);for(c=0;c<d;c++)h=o[s[c]],r(p,m[c],h);\"true\"===n&&(n=(0,a.string32)(65536)),p[0]=255&n.charCodeAt(0),p[1]=255&n.charCodeAt(1),p[2]=255&n.charCodeAt(2),p[3]=255&n.charCodeAt(3),e(p,4,d);var b=i.getSearchParams(d,16);for(e(p,6,b.range),e(p,8,b.entry),e(p,10,b.rangeShift),g=12,c=0;c<d;c++){f=s[c],p[g]=255&f.charCodeAt(0),p[g+1]=255&f.charCodeAt(1),p[g+2]=255&f.charCodeAt(2),p[g+3]=255&f.charCodeAt(3);var v=0;for(l=m[c],u=m[c+1];l<u;l+=4){v=v+(0,a.readUint32)(p,l)>>>0}t(p,g+4,v),t(p,g+8,m[c]),t(p,g+12,o[f].length),g+=16}return p},addTable:function(e,t){if(e in this.tables)throw new Error(\"Table \"+e+\" already exists\");this.tables[e]=t}},i}(),_=new Int32Array([0,32,127,161,173,174,1536,1920,2208,4256,6016,6144,7168,7248,8192,8208,8209,8210,8232,8240,8287,8304,9676,9677,12288,12289,12644,12645,43616,43648,55296,57344,65520,65536]),P=function(){function e(e,t,r){var i;this.name=e,this.loadedName=r.loadedName,this.isType3Font=r.isType3Font,this.sizes=[],this.missingFile=!1,this.glyphCache=Object.create(null),this.isSerifFont=!!(r.flags&b.Serif),this.isSymbolicFont=!!(r.flags&b.Symbolic),this.isMonospace=!!(r.flags&b.FixedPitch);var n=r.type,o=r.subtype;if(this.type=n,this.subtype=o,this.fallbackName=this.isMonospace?\"monospace\":this.isSerifFont?\"serif\":\"sans-serif\",this.differences=r.differences,this.widths=r.widths,this.defaultWidth=r.defaultWidth,this.composite=r.composite,this.wideChars=r.wideChars,this.cMap=r.cMap,this.ascent=r.ascent/m,this.descent=r.descent/m,this.fontMatrix=r.fontMatrix,this.bbox=r.bbox,this.defaultEncoding=r.defaultEncoding,this.toUnicode=r.toUnicode,this.fallbackToUnicode=r.fallbackToUnicode||new C,this.toFontChar=[],\"Type3\"!==r.type){if(this.cidEncoding=r.cidEncoding,this.vertical=r.vertical,this.vertical&&(this.vmetrics=r.vmetrics,this.defaultVMetrics=r.defaultVMetrics),!t||t.isEmpty)return t&&(0,a.warn)('Font file is empty in \"'+e+'\" ('+this.loadedName+\")\"),void this.fallbackToSystemFont();\"Type1C\"===o&&(\"Type1\"!==n&&\"MMType1\"!==n?!function(e){var t=e.peekBytes(4);return 65536===(0,a.readUint32)(t,0)}(t)?n=\"Type1\":o=\"TrueType\":T(t)&&(o=\"OpenType\")),\"CIDFontType0C\"===o&&\"CIDFontType0\"!==n&&(n=\"CIDFontType0\"),\"CIDFontType0\"===n&&(o=function(e){var t=e.peekBytes(2);if(37===t[0]&&33===t[1])return!0;if(128===t[0]&&1===t[1])return!0;return!1}(t)?\"CIDFontType0\":T(t)?\"OpenType\":\"CIDFontType0C\"),\"OpenType\"===o&&\"OpenType\"!==n&&(n=\"OpenType\");try{var s;switch(n){case\"MMType1\":(0,a.info)(\"MMType1 font (\"+e+\"), falling back to Type1.\");case\"Type1\":case\"CIDFontType0\":this.mimetype=\"font/opentype\";var c=\"Type1C\"===o||\"CIDFontType0C\"===o?new E(t,r):new O(e,t,r);y(r),s=this.convert(e,c,r);break;case\"OpenType\":case\"TrueType\":case\"CIDFontType2\":this.mimetype=\"font/opentype\",s=this.checkAndRepair(e,t,r),this.isOpenType&&(y(r),n=\"OpenType\");break;default:throw new a.FormatError(\"Font \"+n+\" is not supported\")}}catch(e){if(!(e instanceof a.FormatError))throw e;return(0,a.warn)(e),void this.fallbackToSystemFont()}this.data=s,this.fontType=w(n,o),this.fontMatrix=r.fontMatrix,this.widths=r.widths,this.defaultWidth=r.defaultWidth,this.toUnicode=r.toUnicode,this.encoding=r.baseEncoding,this.seacMap=r.seacMap,this.loading=!0}else{for(i=0;i<256;i++)this.toFontChar[i]=this.differences[i]||r.defaultEncoding[i];this.fontType=a.FontType.TYPE3}}var t;function r(e,t){return(e<<8)+t}function h(e,t){var r=(e<<8)+t;return 32768&r?r-65536:r}function P(e){return String.fromCharCode(e>>8&255,255&e)}function I(e){return e=e>32767?32767:e<-32768?-32768:e,String.fromCharCode(e>>8&255,255&e)}function T(e){var t=e.peekBytes(4);return\"OTTO\"===(0,a.bytesToString)(t)}function F(e,t,r){for(var a,i=[],n=0,o=e.length;n<o;n++)-1!==(a=(0,c.getUnicodeForGlyph)(e[n],t))&&(i[n]=a);for(var s in r)-1!==(a=(0,c.getUnicodeForGlyph)(r[s],t))&&(i[+s]=a);return i}function R(e){for(var t=0,r=_.length-1;t<r;){var a=t+r+1>>1;e<_[a]?r=a-1:t=a}return!(1&t)}function B(e,t,r){var i=t.toUnicode,n=!!(t.flags&b.Symbolic),o=t.toUnicode instanceof x,s=Object.create(null),c=[],l=[],u=f;for(var h in e){var m=e[h|=0];if(!r[m]){var p=h,v=!1;if(!o&&i.has(h)){v=!0;var y=i.get(p);1===y.length&&(p=y.charCodeAt(0))}if(void 0!==l[p]||R(p)||n&&!v)do{if(u>d){(0,a.warn)(\"Ran out of space in font private use area.\");break}p=u++,g&&61440===p&&(u=(p=61472)+1)}while(void 0!==l[p]);s[p]=m,c[h]=p,l[p]=!0}}return{toFontChar:c,charCodeToGlyphId:s,nextAvailableFontCharCode:u}}function M(e,t){var r,i,n,o,s=function(e,t){var r=[];for(var a in e)e[a]>=t||r.push({fontCharCode:0|a,glyphId:e[a]});0===r.length&&r.push({fontCharCode:0,glyphId:0}),r.sort(function(e,t){return e.fontCharCode-t.fontCharCode});for(var i=[],n=r.length,o=0;o<n;){var s=r[o].fontCharCode,c=[r[o].glyphId];++o;for(var l=s;o<n&&l+1===r[o].fontCharCode&&(c.push(r[o].glyphId),++o,65535!=++l););i.push([s,l,c])}return i}(e,t),c=s[s.length-1][1]>65535?2:1,l=\"\\0\\0\"+P(c)+\"\\0\u0003\\0\u0001\"+(0,a.string32)(4+8*c);for(r=s.length-1;r>=0&&!(s[r][0]<=65535);--r);var u=r+1;s[r][0]<65535&&65535===s[r][1]&&(s[r][1]=65534);var h,f,d,g,m=s[r][1]<65535?1:0,p=u+m,b=A.getSearchParams(p,2),v=\"\",y=\"\",w=\"\",k=\"\",S=\"\",C=0;for(r=0,i=u;r<i;r++){f=(h=s[r])[0],d=h[1],v+=P(f),y+=P(d);var x=!0;for(n=1,o=(g=h[2]).length;n<o;++n)if(g[n]!==g[n-1]+1){x=!1;break}if(x){w+=P(g[0]-f&65535),k+=P(0)}else{var _=2*(p-r)+2*C;for(C+=d-f+1,w+=P(0),k+=P(_),n=0,o=g.length;n<o;++n)S+=P(g[n])}}m>0&&(y+=\"ÿÿ\",v+=\"ÿÿ\",w+=\"\\0\u0001\",k+=\"\\0\\0\");var I=\"\\0\\0\"+P(2*p)+P(b.range)+P(b.entry)+P(b.rangeShift)+y+\"\\0\\0\"+v+w+k+S,T=\"\",O=\"\";if(c>1){for(l+=\"\\0\u0003\\0\\n\"+(0,a.string32)(4+8*c+4+I.length),T=\"\",r=0,i=s.length;r<i;r++){f=(h=s[r])[0];var E=(g=h[2])[0];for(n=1,o=g.length;n<o;++n)g[n]!==g[n-1]+1&&(d=h[0]+n-1,T+=(0,a.string32)(f)+(0,a.string32)(d)+(0,a.string32)(E),f=d+1,E=g[n]);T+=(0,a.string32)(f)+(0,a.string32)(h[1])+(0,a.string32)(E)}O=\"\\0\\f\\0\\0\"+(0,a.string32)(T.length+16)+\"\\0\\0\\0\\0\"+(0,a.string32)(T.length/12)}return l+\"\\0\u0004\"+P(I.length+4)+I+O+T}function D(e,t,r){r=r||{unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0};var i=0,n=0,o=0,s=0,l=null,u=0;if(t)for(var h in t){(l>(h|=0)||!l)&&(l=h),u<h&&(u=h);var f=(0,c.getUnicodeRangeFor)(h);if(f<32)i|=1<<f;else if(f<64)n|=1<<f-32;else if(f<96)o|=1<<f-64;else{if(!(f<123))throw new a.FormatError(\"Unicode ranges Bits > 123 are reserved for internal usage\");s|=1<<f-96}}else l=0,u=255;var d=e.bbox||[0,0,0,0],g=r.unitsPerEm||1/(e.fontMatrix||a.FONT_IDENTITY_MATRIX)[0],p=e.ascentScaled?1:g/m,b=r.ascent||Math.round(p*(e.ascent||d[3])),v=r.descent||Math.round(p*(e.descent||d[1]));v>0&&e.descent>0&&d[1]<0&&(v=-v);var y=r.yMax||b,w=-r.yMin||-v;return\"\\0\u0003\u0002$\u0001ô\\0\u0005\\0\\0\u0002\u0002»\\0\\0\\0\u0002\u0002»\\0\\0\u0001ß\\x001\u0001\u0002\\0\\0\\0\\0\u0006\"+String.fromCharCode(e.fixedPitch?9:0)+\"\\0\\0\\0\\0\\0\\0\"+(0,a.string32)(i)+(0,a.string32)(n)+(0,a.string32)(o)+(0,a.string32)(s)+\"*21*\"+P(e.italicAngle?1:0)+P(l||e.firstChar)+P(u||e.lastChar)+P(b)+P(v)+\"\\0d\"+P(y)+P(w)+\"\\0\\0\\0\\0\\0\\0\\0\\0\"+P(e.xHeight)+P(e.capHeight)+P(0)+P(l||e.firstChar)+\"\\0\u0003\"}function L(e){var t=Math.floor(e.italicAngle*Math.pow(2,16));return\"\\0\u0003\\0\\0\"+(0,a.string32)(t)+\"\\0\\0\\0\\0\"+(0,a.string32)(e.fixedPitch)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"}function N(e,t){t||(t=[[],[]]);var r,a,i,n,o,s=[t[0][0]||\"Original licence\",t[0][1]||e,t[0][2]||\"Unknown\",t[0][3]||\"uniqueID\",t[0][4]||e,t[0][5]||\"Version 0.11\",t[0][6]||\"\",t[0][7]||\"Unknown\",t[0][8]||\"Unknown\",t[0][9]||\"Unknown\"],c=[];for(r=0,a=s.length;r<a;r++){var l=[];for(i=0,n=(o=t[1][r]||s[r]).length;i<n;i++)l.push(P(o.charCodeAt(i)));c.push(l.join(\"\"))}var u=[s,c],h=[\"\\0\u0001\",\"\\0\u0003\"],f=[\"\\0\\0\",\"\\0\u0001\"],d=[\"\\0\\0\",\"\u0004\\t\"],g=s.length*h.length,m=\"\\0\\0\"+P(g)+P(12*g+6),p=0;for(r=0,a=h.length;r<a;r++){var b=u[r];for(i=0,n=b.length;i<n;i++){o=b[i],m+=h[r]+f[r]+d[r]+P(i)+P(o.length)+P(p),p+=o.length}}return m+=s.join(\"\")+c.join(\"\")}return e.getFontID=(t=1,function(){return String(t++)}),e.prototype={name:null,font:null,mimetype:null,encoding:null,get renderer(){var e=l.FontRendererFactory.create(this,p);return(0,a.shadow)(this,\"renderer\",e)},exportData:function(){var e={};for(var t in this)this.hasOwnProperty(t)&&(e[t]=this[t]);return e},fallbackToSystemFont:function(){var e,t,r=this;this.missingFile=!0;var i=this.name,l=this.type,u=this.subtype,h=i.replace(/[,_]/g,\"-\"),f=(0,s.getStdFontMap)(),d=(0,s.getNonStdFontMap)(),g=!!f[h]||!(!d[h]||!f[d[h]]);if(h=f[h]||d[h]||h,this.bold=-1!==h.search(/bold/gi),this.italic=-1!==h.search(/oblique/gi)||-1!==h.search(/italic/gi),this.black=-1!==i.search(/Black/g),this.remeasure=Object.keys(this.widths).length>0,g&&\"CIDFontType2\"===l&&0===this.cidEncoding.indexOf(\"Identity-\")){var m=(0,s.getGlyphMapForStandardFonts)(),p=[];for(e in m)p[+e]=m[e];if(/Arial-?Black/i.test(i)){var b=(0,s.getSupplementalGlyphMapForArialBlack)();for(e in b)p[+e]=b[e]}else if(/Calibri/i.test(i)){var v=(0,s.getSupplementalGlyphMapForCalibri)();for(e in v)p[+e]=v[e]}this.toUnicode instanceof x||this.toUnicode.forEach(function(e,t){p[+e]=t}),this.toFontChar=p,this.toUnicode=new C(p)}else if(/Symbol/i.test(h))this.toFontChar=F(o.SymbolSetEncoding,(0,n.getGlyphsUnicode)(),this.differences);else if(/Dingbats/i.test(h))/Wingdings/i.test(i)&&(0,a.warn)(\"Non-embedded Wingdings font, falling back to ZapfDingbats.\"),this.toFontChar=F(o.ZapfDingbatsEncoding,(0,n.getDingbatsGlyphsUnicode)(),this.differences);else if(g)this.toFontChar=F(this.defaultEncoding,(0,n.getGlyphsUnicode)(),this.differences);else{var y=(0,n.getGlyphsUnicode)();this.toUnicode.forEach(function(e,a){if(!r.composite){var i=r.differences[e]||r.defaultEncoding[e];-1!==(t=(0,c.getUnicodeForGlyph)(i,y))&&(a=t)}r.toFontChar[e]=a})}this.loadedName=h.split(\"-\")[0],this.loading=!1,this.fontType=w(l,u)},checkAndRepair:function(e,t,s){var c=[\"OS/2\",\"cmap\",\"head\",\"hhea\",\"hmtx\",\"maxp\",\"name\",\"post\",\"loca\",\"glyf\",\"fpgm\",\"prep\",\"cvt \",\"CFF \"];function l(e,r){var a=Object.create(null);a[\"OS/2\"]=null,a.cmap=null,a.head=null,a.hhea=null,a.hmtx=null,a.maxp=null,a.name=null,a.post=null;for(var i=0;i<r;i++){var n=f(t);c.indexOf(n.tag)<0||0!==n.length&&(a[n.tag]=n)}return a}function f(e){var t=(0,a.bytesToString)(e.getBytes(4)),r=e.getInt32()>>>0,i=e.getInt32()>>>0,n=e.getInt32()>>>0,o=e.pos;e.pos=e.start?e.start:0,e.skip(i);var s=e.getBytes(n);return e.pos=o,\"head\"===t&&(s[8]=s[9]=s[10]=s[11]=0,s[17]|=32),{tag:t,checksum:r,length:n,offset:i,data:s}}function d(e){return{version:(0,a.bytesToString)(e.getBytes(4)),numTables:e.getUint16(),searchRange:e.getUint16(),entrySelector:e.getUint16(),rangeShift:e.getUint16()}}function g(e,t,r,a,i,n){var o={length:0,sizeOfInstructions:0};if(r-t<=12)return o;var s,c,l,u=e.subarray(t,r),f=h(u[0],u[1]);if(f<0)return l=f=-1,(s=u)[(c=0)+1]=l,s[c]=l>>>8,a.set(u,i),o.length=u.length,o;var d,g=10,m=0;for(d=0;d<f;d++){m=(u[g]<<8|u[g+1])+1,g+=2}var p=g,b=u[g]<<8|u[g+1];o.sizeOfInstructions=b;var v=g+=2+b,y=0;for(d=0;d<m;d++){var w=u[g++];192&w&&(u[g-1]=63&w);var k=(2&w?1:16&w?0:2)+(4&w?1:32&w?0:2);if(y+=k,8&w){var S=u[g++];d+=S,y+=S*k}}if(0===y)return o;var C=g+y;return C>u.length?o:!n&&b>0?(a.set(u.subarray(0,p),i),a.set([0,0],i+p),a.set(u.subarray(v,C),i+p+2),C-=b,u.length-C>3&&(C=C+3&-4),o.length=C,o):u.length-C>3?(C=C+3&-4,a.set(u.subarray(0,C),i),o.length=C,o):(a.set(u,i),o.length=u.length,o)}function m(e){var r=(t.start?t.start:0)+e.offset;t.pos=r;var i=[[],[]],n=e.length,o=r+n;if(0!==t.getUint16()||n<6)return i;var s,c,l=t.getUint16(),u=t.getUint16(),h=[];for(s=0;s<l&&t.pos+12<=o;s++){var f={platform:t.getUint16(),encoding:t.getUint16(),language:t.getUint16(),name:t.getUint16(),length:t.getUint16(),offset:t.getUint16()};(1===f.platform&&0===f.encoding&&0===f.language||3===f.platform&&1===f.encoding&&1033===f.language)&&h.push(f)}for(s=0,c=h.length;s<c;s++){var d=h[s];if(!(d.length<=0)){var g=r+u+d.offset;if(!(g+d.length>o)){t.pos=g;var m=d.name;if(d.encoding){for(var p=\"\",b=0,v=d.length;b<v;b+=2)p+=String.fromCharCode(t.getUint16());i[1][m]=p}else i[0][m]=(0,a.bytesToString)(t.getBytes(d.length))}}}return i}var b=[0,0,0,0,0,0,0,0,-2,-2,-2,-2,0,0,-2,-5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,-1,-1,1,-1,-999,0,1,0,-1,-2,0,-1,-2,-1,-1,0,-1,-1,0,0,-999,-999,-1,-1,-1,-1,-2,-999,-2,-2,-999,0,-2,-2,0,0,-2,0,-2,0,0,0,-2,-1,-1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,0,-999,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-999,-999,-999,-999,-999,-1,-1,-2,-2,0,0,0,0,-1,-1,-999,-2,-2,0,0,-1,-2,-2,0,0,0,-1,-1,-1,-2];function w(e,t){for(var r,i,n,o,s,c=e.data,l=0,u=0,h=0,f=[],d=[],g=[],m=t.tooComplexToFollowFunctions,p=!1,v=0,y=0,w=c.length;l<w;){var k=c[l++];if(64===k)if(i=c[l++],p||y)l+=i;else for(r=0;r<i;r++)f.push(c[l++]);else if(65===k)if(i=c[l++],p||y)l+=2*i;else for(r=0;r<i;r++)n=c[l++],f.push(n<<8|c[l++]);else if(176==(248&k))if(i=k-176+1,p||y)l+=i;else for(r=0;r<i;r++)f.push(c[l++]);else if(184==(248&k))if(i=k-184+1,p||y)l+=2*i;else for(r=0;r<i;r++)n=c[l++],f.push(n<<8|c[l++]);else if(43!==k||m)if(44!==k||m){if(45===k)if(p)p=!1,u=l;else{if(!(s=d.pop()))return(0,a.warn)(\"TT: ENDF bad stack\"),void(t.hintsValid=!1);o=g.pop(),c=s.data,l=s.i,t.functionsStackDeltas[o]=f.length-s.stackTop}else if(137===k)(p||y)&&((0,a.warn)(\"TT: nested IDEFs not allowed\"),m=!0),p=!0,h=l;else if(88===k)++v;else if(27===k)y=v;else if(89===k)y===v&&(y=0),--v;else if(28===k&&!p&&!y){var S=f[f.length-1];S>0&&(l+=S-1)}}else(p||y)&&((0,a.warn)(\"TT: nested FDEFs not allowed\"),m=!0),p=!0,h=l,o=f.pop(),t.functionsDefined[o]={data:c,i:l};else if(!p&&!y)if(o=f[f.length-1],t.functionsUsed[o]=!0,o in t.functionsStackDeltas)f.length+=t.functionsStackDeltas[o];else if(o in t.functionsDefined&&g.indexOf(o)<0){if(d.push({data:c,i:l,stackTop:f.length-1}),g.push(o),!(s=t.functionsDefined[o]))return(0,a.warn)(\"TT: CALL non-existent function\"),void(t.hintsValid=!1);c=s.data,l=s.i}if(!p&&!y){var C=k<=142?b[k]:k>=192&&k<=223?-1:k>=224?-2:0;for(k>=113&&k<=117&&(i=f.pop(),isNaN(i)||(C=2*-i));C<0&&f.length>0;)f.pop(),C++;for(;C>0;)f.push(NaN),C--}}t.tooComplexToFollowFunctions=m;var x=[c];l>c.length&&x.push(new Uint8Array(l-c.length)),h>u&&((0,a.warn)(\"TT: complementing a missing function tail\"),x.push(new Uint8Array([34,45]))),function(e,t){if(t.length>1){var r,a,i=0;for(r=0,a=t.length;r<a;r++)i+=t[r].length;i=i+3&-4;var n=new Uint8Array(i),o=0;for(r=0,a=t.length;r<a;r++)n.set(t[r],o),o+=t[r].length;e.data=n,e.length=i}}(e,x)}var S=void 0,C=void 0;if(function(e){var t=e.peekBytes(4);return\"ttcf\"===(0,a.bytesToString)(t)}(t=new u.Stream(new Uint8Array(t.getBytes())))){var x=function(e,t){for(var r=function(e){var t=(0,a.bytesToString)(e.getBytes(4));(0,a.assert)(\"ttcf\"===t,\"Must be a TrueType Collection font.\");for(var r=e.getUint16(),i=e.getUint16(),n=e.getInt32()>>>0,o=[],s=0;s<n;s++)o.push(e.getInt32()>>>0);var c={ttcTag:t,majorVersion:r,minorVersion:i,numFonts:n,offsetTable:o};switch(r){case 1:return c;case 2:return c.dsigTag=e.getInt32()>>>0,c.dsigLength=e.getInt32()>>>0,c.dsigOffset=e.getInt32()>>>0,c}throw new a.FormatError(\"Invalid TrueType Collection majorVersion: \"+r+\".\")}(e),i=r.numFonts,n=r.offsetTable,o=0;o<i;o++){e.pos=(e.start||0)+n[o];var s=d(e),c=l(0,s.numTables);if(!c.name)throw new a.FormatError('TrueType Collection font must contain a \"name\" table.');for(var u=m(c.name),h=0,f=u.length;h<f;h++)for(var g=0,p=u[h].length;g<p;g++){var b=u[h][g];if(b&&b.replace(/\\s/g,\"\")===t)return{header:s,tables:c}}}throw new a.FormatError('TrueType Collection does not contain \"'+t+'\" font.')}(t,this.name);S=x.header,C=x.tables}else C=l(0,(S=d(t)).numTables);var _=void 0,P=void 0,I=!C[\"CFF \"];if(I){if(!C.loca)throw new a.FormatError('Required \"loca\" table is not found');C.glyf||((0,a.warn)('Required \"glyf\" table is not found -- trying to recover.'),C.glyf={tag:\"glyf\",data:new Uint8Array(0)}),this.isOpenType=!1}else{if(!((\"OTTO\"!==S.version||s.composite&&s.cidToGidMap)&&C.head&&C.hhea&&C.maxp&&C.post))return P=new u.Stream(C[\"CFF \"].data),_=new E(P,s),y(s),this.convert(e,_,s);delete C.glyf,delete C.loca,delete C.fpgm,delete C.prep,delete C[\"cvt \"],this.isOpenType=!0}if(!C.maxp)throw new a.FormatError('Required \"maxp\" table is not found');t.pos=(t.start||0)+C.maxp.offset;var T=t.getInt32(),O=t.getUint16(),F=0,R=0;T>=65536&&C.maxp.length>=22&&(t.pos+=8,t.getUint16()>2&&(C.maxp.data[14]=0,C.maxp.data[15]=2),t.pos+=4,F=t.getUint16(),t.pos+=6,R=t.getUint16());var U=!1;\"CIDFontType2\"===s.type&&s.toUnicode&&s.toUnicode.get(0)>\"\\0\"&&(U=!0,O++,C.maxp.data[4]=O>>8,C.maxp.data[5]=255&O);var q=function(e,t,r,i){var n={functionsDefined:[],functionsUsed:[],functionsStackDeltas:[],tooComplexToFollowFunctions:!1,hintsValid:!0};if(e&&w(e,n),t&&w(t,n),e&&function(e,t){if(!e.tooComplexToFollowFunctions){if(e.functionsDefined.length>t)return(0,a.warn)(\"TT: more functions defined than expected\"),void(e.hintsValid=!1);for(var r=0,i=e.functionsUsed.length;r<i;r++){if(r>t)return(0,a.warn)(\"TT: invalid function id: \"+r),void(e.hintsValid=!1);if(e.functionsUsed[r]&&!e.functionsDefined[r])return(0,a.warn)(\"TT: undefined function: \"+r),void(e.hintsValid=!1)}}}(n,i),r&&1&r.length){var o=new Uint8Array(r.length+1);o.set(r.data),r.data=o}return n.hintsValid}(C.fpgm,C.prep,C[\"cvt \"],F);if(q||(delete C.fpgm,delete C.prep,delete C[\"cvt \"]),function(e,t,r,i){if(t){e.pos=(e.start?e.start:0)+t.offset,e.pos+=t.length-2;var n=e.getUint16();n>i&&((0,a.info)(\"The numOfMetrics (\"+n+\") should not be greater than the numGlyphs (\"+i+\")\"),n=i,t.data[34]=(65280&n)>>8,t.data[35]=255&n);var o=i-n-(r.length-4*n>>1);if(o>0){var s=new Uint8Array(r.length+2*o);s.set(r.data),r.data=s}}else r&&(r.data=null)}(t,C.hhea,C.hmtx,O),!C.head)throw new a.FormatError('Required \"head\" table is not found');!function(e,t,i){var n,o,s,c,l=e.data,u=(n=l[0],o=l[1],s=l[2],c=l[3],(n<<24)+(o<<16)+(s<<8)+c);u>>16!=1&&((0,a.info)(\"Attempting to fix invalid version in head table: \"+u),l[0]=0,l[1]=1,l[2]=0,l[3]=0);var h=r(l[50],l[51]);if(h<0||h>1){(0,a.info)(\"Attempting to fix invalid indexToLocFormat in head table: \"+h);var f=t+1;if(i===f<<1)l[50]=0,l[51]=0;else{if(i!==f<<2)throw new a.FormatError(\"Could not fix indexToLocFormat: \"+h);l[50]=0,l[51]=1}}}(C.head,O,I?C.loca.length:0);var j=Object.create(null);if(I){var z=r(C.head.data[50],C.head.data[51]),H=function(e,t,r,a,i,n,o){var s,c,l;a?(s=4,c=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]},l=function(e,t,r){e[t]=r>>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r}):(s=2,c=function(e,t){return e[t]<<9|e[t+1]<<1},l=function(e,t,r){e[t]=r>>9&255,e[t+1]=r>>1&255});var u=e.data,h=s*(1+r);u.length!==h&&((u=new Uint8Array(h)).set(e.data.subarray(0,h)),e.data=u);var f,d,m=t.data,p=m.length,b=new Uint8Array(p),v=c(u,0),y=0,w=Object.create(null);l(u,0,y);var k=n?r-1:r;for(f=0,d=s;f<k;f++,d+=s){var S=c(u,d);0===S&&(S=v),S>p&&(p+3&-4)===S&&(S=p),S>p&&(v=S);var C=g(m,v,S,b,y,i),x=C.length;0===x&&(w[f]=!0),C.sizeOfInstructions>o&&(o=C.sizeOfInstructions),l(u,d,y+=x),v=S}if(0===y){var A=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);for(f=0,d=s;f<r;f++,d+=s)l(u,d,A.length);t.data=A}else if(n){var _=c(u,s);b.length>_+y?t.data=b.subarray(0,_+y):(t.data=new Uint8Array(_+y),t.data.set(b.subarray(0,y))),t.data.set(b.subarray(0,_),y),l(e.data,u.length-s,y+_)}else t.data=b.subarray(0,y);return{missingGlyphs:w,maxSizeOfInstructions:o}}(C.loca,C.glyf,O,z,q,U,R);j=H.missingGlyphs,T>=65536&&C.maxp.length>=22&&(C.maxp.data[26]=H.maxSizeOfInstructions>>8,C.maxp.data[27]=255&H.maxSizeOfInstructions)}if(!C.hhea)throw new a.FormatError('Required \"hhea\" table is not found');0===C.hhea.data[10]&&0===C.hhea.data[11]&&(C.hhea.data[10]=255,C.hhea.data[11]=255);var G={unitsPerEm:r(C.head.data[18],C.head.data[19]),yMax:r(C.head.data[42],C.head.data[43]),yMin:h(C.head.data[38],C.head.data[39]),ascent:r(C.hhea.data[4],C.hhea.data[5]),descent:h(C.hhea.data[6],C.hhea.data[7])};(this.ascent=G.ascent/G.unitsPerEm,this.descent=G.descent/G.unitsPerEm,C.post)&&(function(e,r,i){var n=(t.start?t.start:0)+e.offset;t.pos=n;var o,s=n+e.length,c=t.getInt32();t.getBytes(28);var l,u=!0;switch(c){case 65536:o=v;break;case 131072:var h=t.getUint16();if(h!==i){u=!1;break}var f=[];for(l=0;l<h;++l){var d=t.getUint16();if(d>=32768){u=!1;break}f.push(d)}if(!u)break;for(var g=[],m=[];t.pos<s;){var p=t.getByte();for(m.length=p,l=0;l<p;++l)m[l]=String.fromCharCode(t.getByte());g.push(m.join(\"\"))}for(o=[],l=0;l<h;++l){var b=f[l];b<258?o.push(v[b]):o.push(g[b-258])}break;case 196608:break;default:(0,a.warn)(\"Unknown/unsupported post table version \"+c),u=!1,r.defaultEncoding&&(o=r.defaultEncoding)}return r.glyphNames=o,u}(C.post,s,O)||(C.post=null));var W,X=[];function V(e){return!j[e]}if(s.composite){var Y=s.cidToGidMap||[],K=0===Y.length;s.cMap.forEach(function(e,t){if(t>65535)throw new a.FormatError(\"Max size of CID is 65,535\");var r=-1;K?r=t:void 0!==Y[t]&&(r=Y[t]),r>=0&&r<O&&V(r)&&(X[e]=r)}),!U||!K&&X[0]||(X[0]=O-1)}else{var J=function(e,t,r,i){if(!e)return(0,a.warn)(\"No cmap table available.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var n,o=(t.start?t.start:0)+e.offset;t.pos=o,t.getUint16();for(var s,c=t.getUint16(),l=!1,u=0;u<c;u++){var h=t.getUint16(),f=t.getUint16(),d=t.getInt32()>>>0,g=!1;if((!s||s.platformId!==h||s.encodingId!==f)&&(0===h&&0===f?g=!0:1===h&&0===f?g=!0:3!==h||1!==f||!i&&s?r&&3===h&&0===f&&(g=!0,l=!0):(g=!0,r||(l=!0)),g&&(s={platformId:h,encodingId:f,offset:d}),l))break}if(s&&(t.pos=o+s.offset),!s||-1===t.peekByte())return(0,a.warn)(\"Could not find a preferred cmap table.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var m=t.getUint16();t.getUint16(),t.getUint16();var p,b,v=!1,y=[];if(0===m){for(p=0;p<256;p++){var w=t.getByte();w&&y.push({charCode:p,glyphId:w})}v=!0}else if(4===m){var k=t.getUint16()>>1;t.getBytes(6);var S,C=[];for(S=0;S<k;S++)C.push({end:t.getUint16()});for(t.getUint16(),S=0;S<k;S++)C[S].start=t.getUint16();for(S=0;S<k;S++)C[S].delta=t.getUint16();var x=0;for(S=0;S<k;S++){n=C[S];var A=t.getUint16();if(A){var _=(A>>1)-(k-S);n.offsetIndex=_,x=Math.max(x,_+n.end-n.start+1)}else n.offsetIndex=-1}var P=[];for(p=0;p<x;p++)P.push(t.getUint16());for(S=0;S<k;S++){o=(n=C[S]).start;var I=n.end,T=n.delta;for(_=n.offsetIndex,p=o;p<=I;p++)65535!==p&&(b=(b=_<0?p:P[_+p-o])+T&65535,y.push({charCode:p,glyphId:b}))}}else{if(6!==m)return(0,a.warn)(\"cmap table has unsupported format: \"+m),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var O=t.getUint16(),E=t.getUint16();for(p=0;p<E;p++){b=t.getUint16();var F=O+p;y.push({charCode:F,glyphId:b})}}for(y.sort(function(e,t){return e.charCode-t.charCode}),u=1;u<y.length;u++)y[u-1].charCode===y[u].charCode&&(y.splice(u,1),u--);return{platformId:s.platformId,encodingId:s.encodingId,mappings:y,hasShortCmap:v}}(C.cmap,t,this.isSymbolicFont,s.hasEncoding),Z=J.platformId,Q=J.encodingId,$=J.mappings,ee=$.length;if(s.hasEncoding&&(3===Z&&1===Q||1===Z&&0===Q)||-1===Z&&-1===Q&&(0,o.getEncoding)(s.baseEncodingName)){var te=[];\"MacRomanEncoding\"!==s.baseEncodingName&&\"WinAnsiEncoding\"!==s.baseEncodingName||(te=(0,o.getEncoding)(s.baseEncodingName));var re=(0,n.getGlyphsUnicode)();for(W=0;W<256;W++){var ae,ie;if(ae=this.differences&&W in this.differences?this.differences[W]:W in te&&\"\"!==te[W]?te[W]:o.StandardEncoding[W]){var ne;ie=k(ae,re),3===Z&&1===Q?ne=re[ie]:1===Z&&0===Q&&(ne=o.MacRomanEncoding.indexOf(ie));for(var oe=!1,se=0;se<ee;++se)if($[se].charCode===ne){X[W]=$[se].glyphId,oe=!0;break}if(!oe&&s.glyphNames){var ce=s.glyphNames.indexOf(ae);-1===ce&&ie!==ae&&(ce=s.glyphNames.indexOf(ie)),ce>0&&V(ce)&&(X[W]=ce)}}}}else if(0===Z&&0===Q)for(var le=0;le<ee;++le)X[$[le].charCode]=$[le].glyphId;else for(var ue=0;ue<ee;++ue)W=$[ue].charCode,3===Z&&W>=61440&&W<=61695&&(W&=255),X[W]=$[ue].glyphId}0===X.length&&(X[0]=0);var he=B(X,s,j);if(this.toFontChar=he.toFontChar,C.cmap={tag:\"cmap\",data:M(he.charCodeToGlyphId,O)},C[\"OS/2\"]&&function(e){var t=new u.Stream(e.data),r=t.getUint16();t.getBytes(60);var a=t.getUint16();return!(r<4&&768&a||t.getUint16()>t.getUint16()||(t.getBytes(6),0===t.getUint16()||(e.data[8]=e.data[9]=0,0)))}(C[\"OS/2\"])||(C[\"OS/2\"]={tag:\"OS/2\",data:D(s,he.charCodeToGlyphId,G)}),C.post||(C.post={tag:\"post\",data:L(s)}),!I)try{P=new u.Stream(C[\"CFF \"].data),_=new i.CFFParser(P,s,p).parse();var fe=new i.CFFCompiler(_);C[\"CFF \"].data=fe.compile()}catch(e){(0,a.warn)(\"Failed to compile font \"+s.loadedName)}if(C.name){var de=m(C.name);C.name.data=N(e,de)}else C.name={tag:\"name\",data:N(this.name)};var ge=new A(S.version);for(var me in C)ge.addTable(me,C[me].data);return ge.toArray()},convert:function(e,t,r){r.fixedPitch=!1,r.builtInEncoding&&function(e,t){if(!e.hasIncludedToUnicodeMap&&!(e.hasEncoding||t===e.defaultEncoding||e.toUnicode instanceof x)){var r=[],a=(0,n.getGlyphsUnicode)();for(var i in t){var o=t[i],s=(0,c.getUnicodeForGlyph)(o,a);-1!==s&&(r[i]=String.fromCharCode(s))}e.toUnicode.amend(r)}}(r,r.builtInEncoding);var i=t.getGlyphMapping(r),s=B(i,r,Object.create(null));this.toFontChar=s.toFontChar;var l=t.numGlyphs;function u(e,t){var r=null;for(var a in e)t===e[a]&&(r||(r=[]),r.push(0|a));return r}function h(e,t){for(var r in e)if(t===e[r])return 0|r;return s.charCodeToGlyphId[s.nextAvailableFontCharCode]=t,s.nextAvailableFontCharCode++}var f=t.seacs;if(p&&f&&f.length){var d=r.fontMatrix||a.FONT_IDENTITY_MATRIX,g=t.getCharset(),m=Object.create(null);for(var b in f){var v=f[b|=0],y=o.StandardEncoding[v[2]],w=o.StandardEncoding[v[3]],k=g.indexOf(y),S=g.indexOf(w);if(!(k<0||S<0)){var C={x:v[0]*d[0]+v[1]*d[2]+d[4],y:v[0]*d[1]+v[1]*d[3]+d[5]},_=u(i,b);if(_)for(var T=0,O=_.length;T<O;T++){var E=_[T],F=s.charCodeToGlyphId,R=h(F,k),U=h(F,S);m[E]={baseFontCharCode:R,accentFontCharCode:U,accentOffset:C}}}}r.seacMap=m}var q=1/(r.fontMatrix||a.FONT_IDENTITY_MATRIX)[0],j=new A(\"OTTO\");return j.addTable(\"CFF \",t.data),j.addTable(\"OS/2\",D(r,s.charCodeToGlyphId)),j.addTable(\"cmap\",M(s.charCodeToGlyphId,l)),j.addTable(\"head\",\"\\0\u0001\\0\\0\\0\\0\u0010\\0\\0\\0\\0\\0_\u000f<õ\\0\\0\"+I(q)+\"\\0\\0\\0\\0\\v~'\\0\\0\\0\\0\\v~'\\0\\0\"+I(r.descent)+\"\u000fÿ\"+I(r.ascent)+P(r.italicAngle?2:0)+\"\\0\u0011\\0\\0\\0\\0\\0\\0\"),j.addTable(\"hhea\",\"\\0\u0001\\0\\0\"+I(r.ascent)+I(r.descent)+\"\\0\\0ÿÿ\\0\\0\\0\\0\\0\\0\"+I(r.capHeight)+I(Math.tan(r.italicAngle)*r.xHeight)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"+P(l)),j.addTable(\"hmtx\",function(){for(var e=t.charstrings,r=t.cff?t.cff.widths:null,a=\"\\0\\0\\0\\0\",i=1,n=l;i<n;i++){var o=0;if(e){var s=e[i-1];o=\"width\"in s?s.width:0}else r&&(o=Math.ceil(r[i]||0));a+=P(o)+P(0)}return a}()),j.addTable(\"maxp\",\"\\0\\0P\\0\"+P(l)),j.addTable(\"name\",N(e)),j.addTable(\"post\",L(r)),j.toArray()},get spaceWidth(){if(\"_shadowWidth\"in this)return this._shadowWidth;for(var e,t=[\"space\",\"minus\",\"one\",\"i\",\"I\"],r=0,a=t.length;r<a;r++){var i=t[r];if(i in this.widths){e=this.widths[i];break}var o=(0,n.getGlyphsUnicode)()[i],s=0;if(this.composite&&this.cMap.contains(o)&&(s=this.cMap.lookup(o)),!s&&this.toUnicode&&(s=this.toUnicode.charCodeOf(o)),s<=0&&(s=o),e=this.widths[s])break}return e=e||this.defaultWidth,this._shadowWidth=e,e},charToGlyph:function(e,t){var r,i,n,o=e;this.cMap&&this.cMap.contains(e)&&(o=this.cMap.lookup(e)),i=this.widths[o],i=(0,a.isNum)(i)?i:this.defaultWidth;var s=this.vmetrics&&this.vmetrics[o],l=this.toUnicode.get(e)||this.fallbackToUnicode.get(e)||e;\"number\"==typeof l&&(l=String.fromCharCode(l));var u=e in this.toFontChar;r=this.toFontChar[e]||e,this.missingFile&&(r=(0,c.mapSpecialUnicodeValues)(r)),this.isType3Font&&(n=r);var h=null;if(this.seacMap&&this.seacMap[e]){u=!0;var f=this.seacMap[e];r=f.baseFontCharCode,h={fontChar:String.fromCharCode(f.accentFontCharCode),offset:f.accentOffset}}var d=String.fromCharCode(r),g=this.glyphCache[e];return g&&g.matchesForCache(d,l,h,i,s,n,t,u)||(g=new S(d,l,h,i,s,n,t,u),this.glyphCache[e]=g),g},charsToGlyphs:function(e){var t,r,a,i=this.charsCache;if(i&&(t=i[e]))return t;i||(i=this.charsCache=Object.create(null)),t=[];var n,o=e,s=0;if(this.cMap)for(var c=Object.create(null);s<e.length;){this.cMap.readCharCode(e,s,c),a=c.charcode;var l=c.length;s+=l;var u=1===l&&32===e.charCodeAt(s-1);r=this.charToGlyph(a,u),t.push(r)}else for(s=0,n=e.length;s<n;++s)a=e.charCodeAt(s),r=this.charToGlyph(a,32===a),t.push(r);return i[o]=t}},e}(),I=function(){function e(e){this.error=e,this.loadedName=\"g_font_error\",this.loading=!1}return e.prototype={charsToGlyphs:function(){return[]},exportData:function(){return{error:this.error}}},e}();function T(e,t,r){var a,i,s,c=Object.create(null),l=!!(e.flags&b.Symbolic);if(e.baseEncodingName)for(s=(0,o.getEncoding)(e.baseEncodingName),i=0;i<s.length;i++)a=r.indexOf(s[i]),c[i]=a>=0?a:0;else if(l)for(i in t)c[i]=t[i];else for(s=o.StandardEncoding,i=0;i<s.length;i++)a=r.indexOf(s[i]),c[i]=a>=0?a:0;var u,h=e.differences;if(h)for(i in h){var f=h[i];if(-1===(a=r.indexOf(f))){u||(u=(0,n.getGlyphsUnicode)());var d=k(f,u);d!==f&&(a=r.indexOf(d))}c[i]=a>=0?a:0}return c}var O=function(){function e(e,t,r){for(var i,n=e.length,o=t.length,s=n-o,c=r,l=!1;c<s;){for(i=0;i<o&&e[c+i]===t[i];)i++;if(i>=o){for(c+=i;c<n&&(0,a.isSpace)(e[c]);)c++;l=!0;break}c++}return{found:l,length:c}}function t(t,r,i){var n=i.length1,o=(i.length2,r.peekBytes(6)),s=128===o[0]&&1===o[1];s&&(r.skip(6),n=o[5]<<24|o[4]<<16|o[3]<<8|o[2]);var c=function(t,r){var i,n,o,s,c=[101,101,120,101,99],l=t.pos;try{n=(i=t.getBytes(r)).length}catch(e){if(e instanceof a.MissingDataException)throw e}if(n===r&&(o=e(i,c,r-2*c.length)).found&&o.length===r)return{stream:new u.Stream(i),length:r};for((0,a.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.'),t.pos=l;0!==(o=e(t.peekBytes(2048),c,0)).length;)if(t.pos+=o.length,o.found){s=t.pos-l;break}return t.pos=l,s?{stream:new u.Stream(t.getBytes(s)),length:s}:((0,a.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.'),{stream:new u.Stream(t.getBytes(r)),length:r})}(r,n);new h.Type1Parser(c.stream,!1,p).extractFontHeader(i),s&&((o=r.getBytes(6))[5],o[4],o[3],o[2]);var l,f=(l=r.getBytes(),{stream:new u.Stream(l),length:l.length}),d=new h.Type1Parser(f.stream,!0,p).extractFontProgram();for(var g in d.properties)i[g]=d.properties[g];var m=d.charstrings,b=this.getType2Charstrings(m),v=this.getType2Subrs(d.subrs);this.charstrings=m,this.data=this.wrap(t,b,this.charstrings,v,i),this.seacs=this.getSeacs(d.charstrings)}return t.prototype={get numGlyphs(){return this.charstrings.length+1},getCharset:function(){for(var e=[\".notdef\"],t=this.charstrings,r=0;r<t.length;r++)e.push(t[r].glyphName);return e},getGlyphMapping:function(e){var t,r=this.charstrings,a=[\".notdef\"];for(t=0;t<r.length;t++)a.push(r[t].glyphName);var i=e.builtInEncoding;if(i){var n=Object.create(null);for(var o in i)(t=a.indexOf(i[o]))>=0&&(n[o]=t)}return T(e,n,a)},getSeacs:function(e){var t,r,a=[];for(t=0,r=e.length;t<r;t++){var i=e[t];i.seac&&(a[t+1]=i.seac)}return a},getType2Charstrings:function(e){for(var t=[],r=0,a=e.length;r<a;r++)t.push(e[r].charstring);return t},getType2Subrs:function(e){var t=0,r=e.length;t=r<1133?107:r<33769?1131:32768;var a,i=[];for(a=0;a<t;a++)i.push([11]);for(a=0;a<r;a++)i.push(e[a]);return i},wrap:function(e,t,r,a,n){var o=new i.CFF;o.header=new i.CFFHeader(1,0,4,4),o.names=[e];var s=new i.CFFTopDict;s.setByName(\"version\",391),s.setByName(\"Notice\",392),s.setByName(\"FullName\",393),s.setByName(\"FamilyName\",394),s.setByName(\"Weight\",395),s.setByName(\"Encoding\",null),s.setByName(\"FontMatrix\",n.fontMatrix),s.setByName(\"FontBBox\",n.bbox),s.setByName(\"charset\",null),s.setByName(\"CharStrings\",null),s.setByName(\"Private\",null),o.topDict=s;var c=new i.CFFStrings;c.add(\"Version 0.11\"),c.add(\"See original notice\"),c.add(e),c.add(e),c.add(\"Medium\"),o.strings=c,o.globalSubrIndex=new i.CFFIndex;var l,u,h=t.length,f=[0];for(l=0;l<h;l++){var d=i.CFFStandardStrings.indexOf(r[l].glyphName);-1===d&&(d=0),f.push(d>>8&255,255&d)}o.charset=new i.CFFCharset(!1,0,[],f);var g=new i.CFFIndex;for(g.add([139,14]),l=0;l<h;l++){var m=t[l];0!==m.length?g.add(m):g.add([139,14])}o.charStrings=g;var p=new i.CFFPrivateDict;p.setByName(\"Subrs\",null);var b=[\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StemSnapH\",\"StemSnapV\",\"BlueShift\",\"BlueFuzz\",\"BlueScale\",\"LanguageGroup\",\"ExpansionFactor\",\"ForceBold\",\"StdHW\",\"StdVW\"];for(l=0,u=b.length;l<u;l++){var v=b[l];if(v in n.privateData){var y=n.privateData[v];if(Array.isArray(y))for(var w=y.length-1;w>0;w--)y[w]-=y[w-1];p.setByName(v,y)}}o.topDict.privateDict=p;var k=new i.CFFIndex;for(l=0,u=a.length;l<u;l++)k.add(a[l]);return p.subrsIndex=k,new i.CFFCompiler(o).compile()}},t}(),E=function(){function e(e,t){this.properties=t;var r=new i.CFFParser(e,t,p);this.cff=r.parse();var n=new i.CFFCompiler(this.cff);this.seacs=this.cff.seacs;try{this.data=n.compile()}catch(r){(0,a.warn)(\"Failed to compile font \"+t.loadedName),this.data=e}}return e.prototype={get numGlyphs(){return this.cff.charStrings.count},getCharset:function(){return this.cff.charset.charset},getGlyphMapping:function(){var e,t,r=this.cff,a=this.properties,i=r.charset.charset;if(a.composite){if(e=Object.create(null),r.isCIDFont)for(t=0;t<i.length;t++){var n=i[t];e[a.cMap.charCodeOf(n)]=t}else for(t=0;t<r.charStrings.count;t++)e[t]=t;return e}return e=T(a,r.encoding?r.encoding.encoding:null,i)}},e}();\"undefined\"!=typeof navigator&&/Windows/.test(navigator.userAgent)&&(t.SEAC_ANALYSIS_ENABLED=p=!0),\"undefined\"!=typeof navigator&&/Windows.*Chrome/.test(navigator.userAgent)&&(g=!0),t.SEAC_ANALYSIS_ENABLED=p,t.PRIVATE_USE_OFFSET_START=f,t.PRIVATE_USE_OFFSET_END=d,t.ErrorFont=I,t.Font=P,t.FontFlags=b,t.ToUnicodeMap=C,t.IdentityToUnicodeMap=x,t.ProblematicCharRanges=_,t.getFontType=w},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});t.ISOAdobeCharset=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\"],t.ExpertCharset=[\".notdef\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"],t.ExpertSubsetCharset=[\".notdef\",\"space\",\"dollaroldstyle\",\"dollarsuperior\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"hyphensuperior\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"centoldstyle\",\"figuredash\",\"hypheninferior\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\"]},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FontRendererFactory=void 0;var a=r(0),i=r(69),n=r(43),o=r(21),s=r(2),c=function(){function e(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}function t(e,t){return e[t]<<8|e[t+1]}function r(r,i,n){var o,s,c,l=1===t(r,i+2)?e(r,i+8):e(r,i+16),u=t(r,i+l);if(4===u){t(r,i+l+2);var h=t(r,i+l+6)>>1;for(s=i+l+14,o=[],c=0;c<h;c++,s+=2)o[c]={end:t(r,s)};for(s+=2,c=0;c<h;c++,s+=2)o[c].start=t(r,s);for(c=0;c<h;c++,s+=2)o[c].idDelta=t(r,s);for(c=0;c<h;c++,s+=2){var f=t(r,s);if(0!==f){o[c].ids=[];for(var d=0,g=o[c].end-o[c].start+1;d<g;d++)o[c].ids[d]=t(r,s+f),f+=2}}return o}if(12===u){e(r,i+l+4);var m=e(r,i+l+12);for(s=i+l+16,o=[],c=0;c<m;c++)o.push({start:e(r,s),end:e(r,s+4),idDelta:e(r,s+8)-e(r,s)}),s+=12;return o}throw new a.FormatError(\"unsupported cmap: \"+u)}function c(e,t,r,a){var n=new i.CFFParser(new s.Stream(e,t,r-t),{},a).parse();return{glyphs:n.charStrings.objects,subrs:n.topDict.privateDict&&n.topDict.privateDict.subrsIndex&&n.topDict.privateDict.subrsIndex.objects,gsubrs:n.globalSubrIndex&&n.globalSubrIndex.objects}}function l(e,t){for(var r=t.charCodeAt(0),a=0,i=0,n=e.length-1;i<n;){var o=i+n+1>>1;r<e[o].start?n=o-1:i=o}return e[i].start<=r&&r<=e[i].end&&(a=e[i].idDelta+(e[i].ids?e[i].ids[r-e[i].start]:r)&65535),{charCode:r,glyphId:a}}function u(e){this.compiledGlyphs=Object.create(null),this.compiledCharCodeToGlyphId=Object.create(null),this.fontMatrix=e}function h(e,t,r){r=r||[488e-6,0,0,488e-6,0,0],u.call(this,r),this.glyphs=e,this.cmap=t}function f(e,t,r,a){r=r||[.001,0,0,.001,0,0],u.call(this,r),this.glyphs=e.glyphs,this.gsubrs=e.gsubrs||[],this.subrs=e.subrs||[],this.cmap=t,this.glyphNameMap=a||(0,n.getGlyphsUnicode)(),this.gsubrsBias=this.gsubrs.length<1240?107:this.gsubrs.length<33900?1131:32768,this.subrsBias=this.subrs.length<1240?107:this.subrs.length<33900?1131:32768}return u.prototype={getPathJs:function(e){var t=l(this.cmap,e),r=this.compiledGlyphs[t.glyphId];return r||(r=this.compileGlyph(this.glyphs[t.glyphId]),this.compiledGlyphs[t.glyphId]=r),void 0===this.compiledCharCodeToGlyphId[t.charCode]&&(this.compiledCharCodeToGlyphId[t.charCode]=t.glyphId),r},compileGlyph:function(e){if(!e||0===e.length||14===e[0])return\"\";var t=[];return t.push({cmd:\"save\"}),t.push({cmd:\"transform\",args:this.fontMatrix.slice()}),t.push({cmd:\"scale\",args:[\"size\",\"-size\"]}),this.compileGlyphImpl(e,t),t.push({cmd:\"restore\"}),t},compileGlyphImpl:function(){(0,a.unreachable)(\"Children classes should implement this.\")},hasBuiltPath:function(e){var t=l(this.cmap,e);return void 0!==this.compiledGlyphs[t.glyphId]&&void 0!==this.compiledCharCodeToGlyphId[t.charCode]}},a.Util.inherit(h,u,{compileGlyphImpl:function(e,t){!function e(t,r,a){function i(e,t){r.push({cmd:\"moveTo\",args:[e,t]})}function n(e,t){r.push({cmd:\"lineTo\",args:[e,t]})}function o(e,t,a,i){r.push({cmd:\"quadraticCurveTo\",args:[e,t,a,i]})}var s,c=0,l=(t[c]<<24|t[c+1]<<16)>>16,u=0,h=0;if(c+=10,l<0)do{s=t[c]<<8|t[c+1];var f,d,g=t[c+2]<<8|t[c+3];c+=4,1&s?(f=(t[c]<<24|t[c+1]<<16)>>16,d=(t[c+2]<<24|t[c+3]<<16)>>16,c+=4):(f=t[c++],d=t[c++]),2&s?(u=f,h=d):(u=0,h=0);var m=1,p=1,b=0,v=0;8&s?(m=p=(t[c]<<24|t[c+1]<<16)/1073741824,c+=2):64&s?(m=(t[c]<<24|t[c+1]<<16)/1073741824,p=(t[c+2]<<24|t[c+3]<<16)/1073741824,c+=4):128&s&&(m=(t[c]<<24|t[c+1]<<16)/1073741824,b=(t[c+2]<<24|t[c+3]<<16)/1073741824,v=(t[c+4]<<24|t[c+5]<<16)/1073741824,p=(t[c+6]<<24|t[c+7]<<16)/1073741824,c+=8);var y=a.glyphs[g];y&&(r.push({cmd:\"save\"}),r.push({cmd:\"transform\",args:[m,b,v,p,u,h]}),e(y,r,a),r.push({cmd:\"restore\"}))}while(32&s);else{var w,k,S=[];for(w=0;w<l;w++)S.push(t[c]<<8|t[c+1]),c+=2;c+=2+(t[c]<<8|t[c+1]);for(var C=S[S.length-1]+1,x=[];x.length<C;){var A=1;for(8&(s=t[c++])&&(A+=t[c++]);A-- >0;)x.push({flags:s})}for(w=0;w<C;w++){switch(18&x[w].flags){case 0:u+=(t[c]<<24|t[c+1]<<16)>>16,c+=2;break;case 2:u-=t[c++];break;case 18:u+=t[c++]}x[w].x=u}for(w=0;w<C;w++){switch(36&x[w].flags){case 0:h+=(t[c]<<24|t[c+1]<<16)>>16,c+=2;break;case 4:h-=t[c++];break;case 36:h+=t[c++]}x[w].y=h}var _=0;for(c=0;c<l;c++){var P=S[c],I=x.slice(_,P+1);if(1&I[0].flags)I.push(I[0]);else if(1&I[I.length-1].flags)I.unshift(I[I.length-1]);else{var T={flags:1,x:(I[0].x+I[I.length-1].x)/2,y:(I[0].y+I[I.length-1].y)/2};I.unshift(T),I.push(T)}for(i(I[0].x,I[0].y),w=1,k=I.length;w<k;w++)1&I[w].flags?n(I[w].x,I[w].y):1&I[w+1].flags?(o(I[w].x,I[w].y,I[w+1].x,I[w+1].y),w++):o(I[w].x,I[w].y,(I[w].x+I[w+1].x)/2,(I[w].y+I[w+1].y)/2);_=P+1}}}(e,t,this)}}),a.Util.inherit(f,u,{compileGlyphImpl:function(e,t){!function e(t,r,i){var n=[],s=0,c=0,u=0;function h(e,t){r.push({cmd:\"moveTo\",args:[e,t]})}function f(e,t){r.push({cmd:\"lineTo\",args:[e,t]})}function d(e,t,a,i,n,o){r.push({cmd:\"bezierCurveTo\",args:[e,t,a,i,n,o]})}!function t(g){for(var m=0;m<g.length;){var p,b,v,y,w,k,S,C,x=!1,A=g[m++];switch(A){case 1:case 3:u+=n.length>>1,x=!0;break;case 4:c+=n.pop(),h(s,c),x=!0;break;case 5:for(;n.length>0;)s+=n.shift(),c+=n.shift(),f(s,c);break;case 6:for(;n.length>0&&(f(s+=n.shift(),c),0!==n.length);)c+=n.shift(),f(s,c);break;case 7:for(;n.length>0&&(c+=n.shift(),f(s,c),0!==n.length);)f(s+=n.shift(),c);break;case 8:for(;n.length>0;)p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),d(p,v,b,y,s,c);break;case 10:S=n.pop()+i.subrsBias,(C=i.subrs[S])&&t(C);break;case 11:return;case 12:switch(A=g[m++]){case 34:b=(p=s+n.shift())+n.shift(),w=c+n.shift(),s=b+n.shift(),d(p,c,b,w,s,w),b=(p=s+n.shift())+n.shift(),s=b+n.shift(),d(p,w,b,c,s,c);break;case 35:p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),d(p,v,b,y,s,c),p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),d(p,v,b,y,s,c),n.pop();break;case 36:d(p=s+n.shift(),w=c+n.shift(),b=p+n.shift(),k=w+n.shift(),s=b+n.shift(),k),d(p=s+n.shift(),k,b=p+n.shift(),k+n.shift(),s=b+n.shift(),c);break;case 37:var _=s,P=c;p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),d(p,v,b,y,s,c),p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b,c=y,Math.abs(s-_)>Math.abs(c-P)?s+=n.shift():c+=n.shift(),d(p,v,b,y,s,c);break;default:throw new a.FormatError(\"unknown operator: 12 \"+A)}break;case 14:if(n.length>=4){var I=n.pop(),T=n.pop();c=n.pop(),s=n.pop(),r.push({cmd:\"save\"}),r.push({cmd:\"translate\",args:[s,c]});var O=l(i.cmap,String.fromCharCode(i.glyphNameMap[o.StandardEncoding[I]]));e(i.glyphs[O.glyphId],r,i),r.push({cmd:\"restore\"}),O=l(i.cmap,String.fromCharCode(i.glyphNameMap[o.StandardEncoding[T]])),e(i.glyphs[O.glyphId],r,i)}return;case 18:u+=n.length>>1,x=!0;break;case 19:case 20:m+=(u+=n.length>>1)+7>>3,x=!0;break;case 21:c+=n.pop(),h(s+=n.pop(),c),x=!0;break;case 22:h(s+=n.pop(),c),x=!0;break;case 23:u+=n.length>>1,x=!0;break;case 24:for(;n.length>2;)p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),d(p,v,b,y,s,c);s+=n.shift(),c+=n.shift(),f(s,c);break;case 25:for(;n.length>6;)s+=n.shift(),c+=n.shift(),f(s,c);p=s+n.shift(),v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+n.shift(),d(p,v,b,y,s,c);break;case 26:for(n.length%2&&(s+=n.shift());n.length>0;)p=s,v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b,c=y+n.shift(),d(p,v,b,y,s,c);break;case 27:for(n.length%2&&(c+=n.shift());n.length>0;)d(p=s+n.shift(),v=c,b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y);break;case 28:n.push((g[m]<<24|g[m+1]<<16)>>16),m+=2;break;case 29:S=n.pop()+i.gsubrsBias,(C=i.gsubrs[S])&&t(C);break;case 30:for(;n.length>0&&(p=s,v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+(1===n.length?n.shift():0),d(p,v,b,y,s,c),0!==n.length);)p=s+n.shift(),v=c,b=p+n.shift(),y=v+n.shift(),c=y+n.shift(),d(p,v,b,y,s=b+(1===n.length?n.shift():0),c);break;case 31:for(;n.length>0&&(p=s+n.shift(),v=c,b=p+n.shift(),y=v+n.shift(),c=y+n.shift(),d(p,v,b,y,s=b+(1===n.length?n.shift():0),c),0!==n.length);)p=s,v=c+n.shift(),b=p+n.shift(),y=v+n.shift(),s=b+n.shift(),c=y+(1===n.length?n.shift():0),d(p,v,b,y,s,c);break;default:if(A<32)throw new a.FormatError(\"unknown operator: \"+A);A<247?n.push(A-139):A<251?n.push(256*(A-247)+g[m++]+108):A<255?n.push(256*-(A-251)-g[m++]-108):(n.push((g[m]<<24|g[m+1]<<16|g[m+2]<<8|g[m+3])/65536),m+=4)}x&&(n.length=0)}}(t)}(e,t,this)}}),{create:function(i,n){for(var o,s,l,u,d,g,m=new Uint8Array(i.data),p=t(m,4),b=0,v=12;b<p;b++,v+=16){var y=(0,a.bytesToString)(m.subarray(v,v+4)),w=e(m,v+8),k=e(m,v+12);switch(y){case\"cmap\":o=r(m,w);break;case\"glyf\":s=m.subarray(w,w+k);break;case\"loca\":l=m.subarray(w,w+k);break;case\"head\":g=t(m,w+18),d=t(m,w+50);break;case\"CFF \":u=c(m,w,w+k,n)}}if(s){var S=g?[1/g,0,0,1/g,0,0]:i.fontMatrix;return new h(function(e,t,r){var a,i;r?(a=4,i=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}):(a=2,i=function(e,t){return e[t]<<9|e[t+1]<<1});for(var n=[],o=i(t,0),s=a;s<t.length;s+=a){var c=i(t,s);n.push(e.subarray(o,c)),o=c}return n}(s,l,d),o,S)}return new f(u,o,i.fontMatrix,i.glyphNameMap)}}}();t.FontRendererFactory=c},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Type1Parser=void 0;var a=r(0),i=r(21),n=r(2),o=function(){var e=[4],t=[5],r=[6],i=[7],n=[8],o=[12,35],s=[14],c=[21],l=[22],u=[30],h=[31];function f(){this.width=0,this.lsb=0,this.flexing=!1,this.output=[],this.stack=[]}return f.prototype={convert:function(f,d,g){for(var m,p,b,v=f.length,y=!1,w=0;w<v;w++){var k=f[w];if(k<32){switch(12===k&&(k=(k<<8)+f[++w]),k){case 1:case 3:this.stack=[];break;case 4:if(this.flexing){if(this.stack.length<1){y=!0;break}var S=this.stack.pop();this.stack.push(0,S);break}y=this.executeCommand(1,e);break;case 5:y=this.executeCommand(2,t);break;case 6:y=this.executeCommand(1,r);break;case 7:y=this.executeCommand(1,i);break;case 8:y=this.executeCommand(6,n);break;case 9:this.stack=[];break;case 10:if(this.stack.length<1){y=!0;break}if(!d[b=this.stack.pop()]){y=!0;break}y=this.convert(d[b],d,g);break;case 11:return y;case 13:if(this.stack.length<2){y=!0;break}m=this.stack.pop(),p=this.stack.pop(),this.lsb=p,this.width=m,this.stack.push(m,p),y=this.executeCommand(2,l);break;case 14:this.output.push(s[0]);break;case 21:if(this.flexing)break;y=this.executeCommand(2,c);break;case 22:if(this.flexing){this.stack.push(0);break}y=this.executeCommand(1,l);break;case 30:y=this.executeCommand(4,u);break;case 31:y=this.executeCommand(4,h);break;case 3072:case 3073:case 3074:this.stack=[];break;case 3078:g?(this.seac=this.stack.splice(-4,4),y=this.executeCommand(0,s)):y=this.executeCommand(4,s);break;case 3079:if(this.stack.length<4){y=!0;break}this.stack.pop(),m=this.stack.pop();var C=this.stack.pop();p=this.stack.pop(),this.lsb=p,this.width=m,this.stack.push(m,p,C),y=this.executeCommand(3,c);break;case 3084:if(this.stack.length<2){y=!0;break}var x=this.stack.pop(),A=this.stack.pop();this.stack.push(A/x);break;case 3088:if(this.stack.length<2){y=!0;break}b=this.stack.pop();var _=this.stack.pop();if(0===b&&3===_){var P=this.stack.splice(this.stack.length-17,17);this.stack.push(P[2]+P[0],P[3]+P[1],P[4],P[5],P[6],P[7],P[8],P[9],P[10],P[11],P[12],P[13],P[14]),y=this.executeCommand(13,o,!0),this.flexing=!1,this.stack.push(P[15],P[16])}else 1===b&&0===_&&(this.flexing=!0);break;case 3089:break;case 3105:this.stack=[];break;default:(0,a.warn)('Unknown type 1 charstring command of \"'+k+'\"')}if(y)break}else k<=246?k-=139:k=k<=250?256*(k-247)+f[++w]+108:k<=254?-256*(k-251)-f[++w]-108:(255&f[++w])<<24|(255&f[++w])<<16|(255&f[++w])<<8|(255&f[++w])<<0,this.stack.push(k)}return y},executeCommand:function(e,t,r){var a=this.stack.length;if(e>a)return!0;for(var i=a-e,n=i;n<a;n++){var o=this.stack[n];Number.isInteger(o)?this.output.push(28,o>>8&255,255&o):(o=65536*o|0,this.output.push(255,o>>24&255,o>>16&255,o>>8&255,255&o))}return this.output.push.apply(this.output,t),r?this.stack.splice(i,e):this.stack.length=0,!1}},f}(),s=function(){var e=55665;function t(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function r(e,t,r){if(r>=e.length)return new Uint8Array(0);var a,i,n=0|t;for(a=0;a<r;a++)n=52845*(e[a]+n)+22719&65535;var o=e.length-r,s=new Uint8Array(o);for(a=r,i=0;i<o;a++,i++){var c=e[a];s[i]=c^n>>8,n=52845*(c+n)+22719&65535}return s}function s(e){return 47===e||91===e||93===e||123===e||125===e||40===e||41===e}function c(a,i,o){if(i){var s=a.getBytes(),c=!(t(s[0])&&t(s[1])&&t(s[2])&&t(s[3]));a=new n.Stream(c?r(s,e,4):function(e,r,a){var i,n,o=0|r,s=e.length,c=new Uint8Array(s>>>1);for(i=0,n=0;i<s;i++){var l=e[i];if(t(l)){var u;for(i++;i<s&&!t(u=e[i]);)i++;if(i<s){var h=parseInt(String.fromCharCode(l,u),16);c[n++]=h^o>>8,o=52845*(h+o)+22719&65535}}}return Array.prototype.slice.call(c,a,n)}(s,e,4))}this.seacAnalysisEnabled=!!o,this.stream=a,this.nextChar()}return c.prototype={readNumberArray:function(){this.getToken();for(var e=[];;){var t=this.getToken();if(null===t||\"]\"===t||\"}\"===t)break;e.push(parseFloat(t||0))}return e},readNumber:function(){var e=this.getToken();return parseFloat(e||0)},readInt:function(){var e=this.getToken();return 0|parseInt(e||0,10)},readBoolean:function(){return\"true\"===this.getToken()?1:0},nextChar:function(){return this.currentChar=this.stream.getByte()},getToken:function(){for(var e=!1,t=this.currentChar;;){if(-1===t)return null;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,a.isSpace)(t))break;t=this.nextChar()}if(s(t))return this.nextChar(),String.fromCharCode(t);var r=\"\";do{r+=String.fromCharCode(t),t=this.nextChar()}while(t>=0&&!(0,a.isSpace)(t)&&!s(t));return r},readCharStrings:function(e,t){return-1===t?e:r(e,4330,t)},extractFontProgram:function(){var e=this.stream,t=[],r=[],a=Object.create(null);a.lenIV=4;for(var i,n,s,c,l,u={subrs:[],charstrings:[],properties:{privateData:a}};null!==(i=this.getToken());)if(\"/\"===i)switch(i=this.getToken()){case\"CharStrings\":for(this.getToken(),this.getToken(),this.getToken(),this.getToken();null!==(i=this.getToken())&&\"end\"!==i;)if(\"/\"===i){var h=this.getToken();n=this.readInt(),this.getToken(),s=e.makeSubStream(e.pos,n),c=u.properties.privateData.lenIV,l=this.readCharStrings(s.getBytes(),c),e.skip(n),this.nextChar(),\"noaccess\"===(i=this.getToken())&&this.getToken(),r.push({glyph:h,encoded:l})}break;case\"Subrs\":for(this.readInt(),this.getToken();\"dup\"===this.getToken();){var f=this.readInt();n=this.readInt(),this.getToken(),s=e.makeSubStream(e.pos,n),c=u.properties.privateData.lenIV,l=this.readCharStrings(s.getBytes(),c),e.skip(n),this.nextChar(),\"noaccess\"===(i=this.getToken())&&this.getToken(),t[f]=l}break;case\"BlueValues\":case\"OtherBlues\":case\"FamilyBlues\":case\"FamilyOtherBlues\":var d=this.readNumberArray();d.length>0&&d.length,0;break;case\"StemSnapH\":case\"StemSnapV\":u.properties.privateData[i]=this.readNumberArray();break;case\"StdHW\":case\"StdVW\":u.properties.privateData[i]=this.readNumberArray()[0];break;case\"BlueShift\":case\"lenIV\":case\"BlueFuzz\":case\"BlueScale\":case\"LanguageGroup\":case\"ExpansionFactor\":u.properties.privateData[i]=this.readNumber();break;case\"ForceBold\":u.properties.privateData[i]=this.readBoolean()}for(var g=0;g<r.length;g++){h=r[g].glyph,l=r[g].encoded;var m=new o,p=m.convert(l,t,this.seacAnalysisEnabled),b=m.output;p&&(b=[14]),u.charstrings.push({glyphName:h,charstring:b,width:m.width,lsb:m.lsb,seac:m.seac})}return u},extractFontHeader:function(e){for(var t;null!==(t=this.getToken());)if(\"/\"===t)switch(t=this.getToken()){case\"FontMatrix\":var r=this.readNumberArray();e.fontMatrix=r;break;case\"Encoding\":var a,n=this.getToken();if(/^\\d+$/.test(n)){a=[];var o=0|parseInt(n,10);this.getToken();for(var s=0;s<o;s++){for(t=this.getToken();\"dup\"!==t&&\"def\"!==t;)if(null===(t=this.getToken()))return;if(\"def\"===t)break;var c=this.readInt();this.getToken();var l=this.getToken();a[c]=l,this.getToken()}}else a=(0,i.getEncoding)(n);e.builtInEncoding=a;break;case\"FontBBox\":var u=this.readNumberArray();e.ascent=Math.max(u[3],u[1]),e.descent=Math.min(u[1],u[3]),e.ascentScaled=!0}}},c}();t.Type1Parser=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getTilingPatternIR=t.Pattern=void 0;var a=r(0),i=r(20),n=r(1),o={FUNCTION_BASED:1,AXIAL:2,RADIAL:3,FREE_FORM_MESH:4,LATTICE_FORM_MESH:5,COONS_PATCH_MESH:6,TENSOR_PATCH_MESH:7},s=function(){function e(){(0,a.unreachable)(\"should not call Pattern constructor\")}return e.prototype={getPattern:function(e){(0,a.unreachable)(\"Should not call Pattern.getStyle: \"+e)}},e.parseShading=function(e,t,r,i,s,l){var u=(0,n.isStream)(e)?e.dict:e,h=u.get(\"ShadingType\");try{switch(h){case o.AXIAL:case o.RADIAL:return new c.RadialAxial(u,t,r,i,l);case o.FREE_FORM_MESH:case o.LATTICE_FORM_MESH:case o.COONS_PATCH_MESH:case o.TENSOR_PATCH_MESH:return new c.Mesh(e,t,r,i,l);default:throw new a.FormatError(\"Unsupported ShadingType: \"+h)}}catch(e){if(e instanceof a.MissingDataException)throw e;return s.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.shadingPattern}),(0,a.warn)(e),new c.Dummy}},e}(),c={};c.SMALL_NUMBER=1e-6,c.RadialAxial=function(){function e(e,t,r,n,s){this.matrix=t,this.coordsArr=e.getArray(\"Coords\"),this.shadingType=e.get(\"ShadingType\"),this.type=\"Pattern\";var l=e.get(\"ColorSpace\",\"CS\");l=i.ColorSpace.parse(l,r,n,s),this.cs=l;var u=0,h=1;if(e.has(\"Domain\")){var f=e.getArray(\"Domain\");u=f[0],h=f[1]}var d=!1,g=!1;if(e.has(\"Extend\")){var m=e.getArray(\"Extend\");d=m[0],g=m[1]}if(!(this.shadingType!==o.RADIAL||d&&g)){var p=this.coordsArr[0],b=this.coordsArr[1],v=this.coordsArr[2],y=this.coordsArr[3],w=this.coordsArr[4],k=this.coordsArr[5],S=Math.sqrt((p-y)*(p-y)+(b-w)*(b-w));v<=k+S&&k<=v+S&&(0,a.warn)(\"Unsupported radial gradient.\")}this.extendStart=d,this.extendEnd=g;var C=e.get(\"Function\"),x=s.createFromArray(C),A=h-u,_=A/10,P=this.colorStops=[];if(u>=h||_<=0)(0,a.info)(\"Bad shading domain.\");else{for(var I,T=new Float32Array(l.numComps),O=new Float32Array(1),E=u;E<=h;E+=_){O[0]=E,x(O,0,T,0),I=l.getRgb(T,0);var F=a.Util.makeCssRgb(I[0],I[1],I[2]);P.push([(E-u)/A,F])}var R=\"transparent\";e.has(\"Background\")&&(I=l.getRgb(e.get(\"Background\"),0),R=a.Util.makeCssRgb(I[0],I[1],I[2])),d||(P.unshift([0,R]),P[1][0]+=c.SMALL_NUMBER),g||(P[P.length-1][0]-=c.SMALL_NUMBER,P.push([1,R])),this.colorStops=P}}return e.prototype={getIR:function(){var e,t,r,i,n,s=this.coordsArr,c=this.shadingType;c===o.AXIAL?(t=[s[0],s[1]],r=[s[2],s[3]],i=null,n=null,e=\"axial\"):c===o.RADIAL?(t=[s[0],s[1]],r=[s[3],s[4]],i=s[2],n=s[5],e=\"radial\"):(0,a.unreachable)(\"getPattern type unknown: \"+c);var l=this.matrix;if(l&&(t=a.Util.applyTransform(t,l),r=a.Util.applyTransform(r,l),c===o.RADIAL)){var u=a.Util.singularValueDecompose2dScale(l);i*=u[0],n*=u[1]}return[\"RadialAxial\",e,this.colorStops,t,r,i,n]}},e}(),c.Mesh=function(){function e(e,t){this.stream=e,this.context=t,this.buffer=0,this.bufferLength=0;var r=t.numComps;this.tmpCompsBuf=new Float32Array(r);var a=t.colorSpace.numComps;this.tmpCsCompsBuf=t.colorFn?new Float32Array(a):this.tmpCompsBuf}e.prototype={get hasData(){if(this.stream.end)return this.stream.pos<this.stream.end;if(this.bufferLength>0)return!0;var e=this.stream.getByte();return!(e<0)&&(this.buffer=e,this.bufferLength=8,!0)},readBits:function(e){var t=this.buffer,r=this.bufferLength;if(32===e){if(0===r)return(this.stream.getByte()<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte())>>>0;t=t<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte();var a=this.stream.getByte();return this.buffer=a&(1<<r)-1,(t<<8-r|(255&a)>>r)>>>0}if(8===e&&0===r)return this.stream.getByte();for(;r<e;)t=t<<8|this.stream.getByte(),r+=8;return r-=e,this.bufferLength=r,this.buffer=t&(1<<r)-1,t>>r},align:function(){this.buffer=0,this.bufferLength=0},readFlag:function(){return this.readBits(this.context.bitsPerFlag)},readCoordinate:function(){var e=this.context.bitsPerCoordinate,t=this.readBits(e),r=this.readBits(e),a=this.context.decode,i=e<32?1/((1<<e)-1):2.3283064365386963e-10;return[t*i*(a[1]-a[0])+a[0],r*i*(a[3]-a[2])+a[2]]},readComponents:function(){for(var e=this.context.numComps,t=this.context.bitsPerComponent,r=t<32?1/((1<<t)-1):2.3283064365386963e-10,a=this.context.decode,i=this.tmpCompsBuf,n=0,o=4;n<e;n++,o+=2){var s=this.readBits(t);i[n]=s*r*(a[o+1]-a[o])+a[o]}var c=this.tmpCsCompsBuf;return this.context.colorFn&&this.context.colorFn(i,0,c,0),this.context.colorSpace.getRgb(c,0)}};var t,r=3,s=20,c=20,l=(t=[],function(e){return t[e]||(t[e]=function(e){for(var t=[],r=0;r<=e;r++){var a=r/e,i=1-a;t.push(new Float32Array([i*i*i,3*a*i*i,3*a*a*i,a*a*a]))}return t}(e)),t[e]});function u(e,t){var i=e.figures[t];(0,a.assert)(\"patch\"===i.type,\"Unexpected patch mesh figure\");var n=e.coords,o=e.colors,u=i.coords,h=i.colors,f=Math.min(n[u[0]][0],n[u[3]][0],n[u[12]][0],n[u[15]][0]),d=Math.min(n[u[0]][1],n[u[3]][1],n[u[12]][1],n[u[15]][1]),g=Math.max(n[u[0]][0],n[u[3]][0],n[u[12]][0],n[u[15]][0]),m=Math.max(n[u[0]][1],n[u[3]][1],n[u[12]][1],n[u[15]][1]),p=Math.ceil((g-f)*c/(e.bounds[2]-e.bounds[0]));p=Math.max(r,Math.min(s,p));var b=Math.ceil((m-d)*c/(e.bounds[3]-e.bounds[1]));b=Math.max(r,Math.min(s,b));for(var v=p+1,y=new Int32Array((b+1)*v),w=new Int32Array((b+1)*v),k=0,S=new Uint8Array(3),C=new Uint8Array(3),x=o[h[0]],A=o[h[1]],_=o[h[2]],P=o[h[3]],I=l(b),T=l(p),O=0;O<=b;O++){S[0]=(x[0]*(b-O)+_[0]*O)/b|0,S[1]=(x[1]*(b-O)+_[1]*O)/b|0,S[2]=(x[2]*(b-O)+_[2]*O)/b|0,C[0]=(A[0]*(b-O)+P[0]*O)/b|0,C[1]=(A[1]*(b-O)+P[1]*O)/b|0,C[2]=(A[2]*(b-O)+P[2]*O)/b|0;for(var E=0;E<=p;E++,k++)if(0!==O&&O!==b||0!==E&&E!==p){for(var F=0,R=0,B=0,M=0;M<=3;M++)for(var D=0;D<=3;D++,B++){var L=I[O][M]*T[E][D];F+=n[u[B]][0]*L,R+=n[u[B]][1]*L}y[k]=n.length,n.push([F,R]),w[k]=o.length;var N=new Uint8Array(3);N[0]=(S[0]*(p-E)+C[0]*E)/p|0,N[1]=(S[1]*(p-E)+C[1]*E)/p|0,N[2]=(S[2]*(p-E)+C[2]*E)/p|0,o.push(N)}}y[0]=u[0],w[0]=h[0],y[p]=u[3],w[p]=h[1],y[v*b]=u[12],w[v*b]=h[2],y[v*b+p]=u[15],w[v*b+p]=h[3],e.figures[t]={type:\"lattice\",coords:y,colors:w,verticesPerRow:v}}function h(e){for(var t=e.coords[0][0],r=e.coords[0][1],a=t,i=r,n=1,o=e.coords.length;n<o;n++){var s=e.coords[n][0],c=e.coords[n][1];t=t>s?s:t,r=r>c?c:r,a=a<s?s:a,i=i<c?c:i}e.bounds=[t,r,a,i]}function f(t,r,s,c,l){if(!(0,n.isStream)(t))throw new a.FormatError(\"Mesh data is not a stream\");var f=t.dict;this.matrix=r,this.shadingType=f.get(\"ShadingType\"),this.type=\"Pattern\",this.bbox=f.getArray(\"BBox\");var d=f.get(\"ColorSpace\",\"CS\");d=i.ColorSpace.parse(d,s,c,l),this.cs=d,this.background=f.has(\"Background\")?d.getRgb(f.get(\"Background\"),0):null;var g=f.get(\"Function\"),m=g?l.createFromArray(g):null;this.coords=[],this.colors=[],this.figures=[];var p=new e(t,{bitsPerCoordinate:f.get(\"BitsPerCoordinate\"),bitsPerComponent:f.get(\"BitsPerComponent\"),bitsPerFlag:f.get(\"BitsPerFlag\"),decode:f.getArray(\"Decode\"),colorFn:m,colorSpace:d,numComps:m?1:d.numComps}),b=!1;switch(this.shadingType){case o.FREE_FORM_MESH:!function(e,t){for(var r=e.coords,i=e.colors,n=[],o=[],s=0;t.hasData;){var c=t.readFlag(),l=t.readCoordinate(),u=t.readComponents();if(0===s){if(!(0<=c&&c<=2))throw new a.FormatError(\"Unknown type4 flag\");switch(c){case 0:s=3;break;case 1:o.push(o[o.length-2],o[o.length-1]),s=1;break;case 2:o.push(o[o.length-3],o[o.length-1]),s=1}n.push(c)}o.push(r.length),r.push(l),i.push(u),s--,t.align()}e.figures.push({type:\"triangles\",coords:new Int32Array(o),colors:new Int32Array(o)})}(this,p);break;case o.LATTICE_FORM_MESH:var v=0|f.get(\"VerticesPerRow\");if(v<2)throw new a.FormatError(\"Invalid VerticesPerRow\");!function(e,t,r){for(var a=e.coords,i=e.colors,n=[];t.hasData;){var o=t.readCoordinate(),s=t.readComponents();n.push(a.length),a.push(o),i.push(s)}e.figures.push({type:\"lattice\",coords:new Int32Array(n),colors:new Int32Array(n),verticesPerRow:r})}(this,p,v);break;case o.COONS_PATCH_MESH:!function(e,t){for(var r=e.coords,i=e.colors,n=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new a.FormatError(\"Unknown type6 flag\");var u=r.length;for(s=0,c=0!==l?8:12;s<c;s++)r.push(t.readCoordinate());var h,f,d,g,m=i.length;for(s=0,c=0!==l?2:4;s<c;s++)i.push(t.readComponents());switch(l){case 0:n[12]=u+3,n[13]=u+4,n[14]=u+5,n[15]=u+6,n[8]=u+2,n[11]=u+7,n[4]=u+1,n[7]=u+8,n[0]=u,n[1]=u+11,n[2]=u+10,n[3]=u+9,o[2]=m+1,o[3]=m+2,o[0]=m,o[1]=m+3;break;case 1:h=n[12],f=n[13],d=n[14],g=n[15],n[12]=g,n[13]=u+0,n[14]=u+1,n[15]=u+2,n[8]=d,n[11]=u+3,n[4]=f,n[7]=u+4,n[0]=h,n[1]=u+7,n[2]=u+6,n[3]=u+5,h=o[2],f=o[3],o[2]=f,o[3]=m,o[0]=h,o[1]=m+1;break;case 2:h=n[15],f=n[11],n[12]=n[3],n[13]=u+0,n[14]=u+1,n[15]=u+2,n[8]=n[7],n[11]=u+3,n[4]=f,n[7]=u+4,n[0]=h,n[1]=u+7,n[2]=u+6,n[3]=u+5,h=o[3],o[2]=o[1],o[3]=m,o[0]=h,o[1]=m+1;break;case 3:n[12]=n[0],n[13]=u+0,n[14]=u+1,n[15]=u+2,n[8]=n[1],n[11]=u+3,n[4]=n[2],n[7]=u+4,n[0]=n[3],n[1]=u+7,n[2]=u+6,n[3]=u+5,o[2]=o[0],o[3]=m,o[0]=o[1],o[1]=m+1}n[5]=r.length,r.push([(-4*r[n[0]][0]-r[n[15]][0]+6*(r[n[4]][0]+r[n[1]][0])-2*(r[n[12]][0]+r[n[3]][0])+3*(r[n[13]][0]+r[n[7]][0]))/9,(-4*r[n[0]][1]-r[n[15]][1]+6*(r[n[4]][1]+r[n[1]][1])-2*(r[n[12]][1]+r[n[3]][1])+3*(r[n[13]][1]+r[n[7]][1]))/9]),n[6]=r.length,r.push([(-4*r[n[3]][0]-r[n[12]][0]+6*(r[n[2]][0]+r[n[7]][0])-2*(r[n[0]][0]+r[n[15]][0])+3*(r[n[4]][0]+r[n[14]][0]))/9,(-4*r[n[3]][1]-r[n[12]][1]+6*(r[n[2]][1]+r[n[7]][1])-2*(r[n[0]][1]+r[n[15]][1])+3*(r[n[4]][1]+r[n[14]][1]))/9]),n[9]=r.length,r.push([(-4*r[n[12]][0]-r[n[3]][0]+6*(r[n[8]][0]+r[n[13]][0])-2*(r[n[0]][0]+r[n[15]][0])+3*(r[n[11]][0]+r[n[1]][0]))/9,(-4*r[n[12]][1]-r[n[3]][1]+6*(r[n[8]][1]+r[n[13]][1])-2*(r[n[0]][1]+r[n[15]][1])+3*(r[n[11]][1]+r[n[1]][1]))/9]),n[10]=r.length,r.push([(-4*r[n[15]][0]-r[n[0]][0]+6*(r[n[11]][0]+r[n[14]][0])-2*(r[n[12]][0]+r[n[3]][0])+3*(r[n[2]][0]+r[n[8]][0]))/9,(-4*r[n[15]][1]-r[n[0]][1]+6*(r[n[11]][1]+r[n[14]][1])-2*(r[n[12]][1]+r[n[3]][1])+3*(r[n[2]][1]+r[n[8]][1]))/9]),e.figures.push({type:\"patch\",coords:new Int32Array(n),colors:new Int32Array(o)})}}(this,p),b=!0;break;case o.TENSOR_PATCH_MESH:!function(e,t){for(var r=e.coords,i=e.colors,n=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new a.FormatError(\"Unknown type7 flag\");var u=r.length;for(s=0,c=0!==l?12:16;s<c;s++)r.push(t.readCoordinate());var h,f,d,g,m=i.length;for(s=0,c=0!==l?2:4;s<c;s++)i.push(t.readComponents());switch(l){case 0:n[12]=u+3,n[13]=u+4,n[14]=u+5,n[15]=u+6,n[8]=u+2,n[9]=u+13,n[10]=u+14,n[11]=u+7,n[4]=u+1,n[5]=u+12,n[6]=u+15,n[7]=u+8,n[0]=u,n[1]=u+11,n[2]=u+10,n[3]=u+9,o[2]=m+1,o[3]=m+2,o[0]=m,o[1]=m+3;break;case 1:h=n[12],f=n[13],d=n[14],g=n[15],n[12]=g,n[13]=u+0,n[14]=u+1,n[15]=u+2,n[8]=d,n[9]=u+9,n[10]=u+10,n[11]=u+3,n[4]=f,n[5]=u+8,n[6]=u+11,n[7]=u+4,n[0]=h,n[1]=u+7,n[2]=u+6,n[3]=u+5,h=o[2],f=o[3],o[2]=f,o[3]=m,o[0]=h,o[1]=m+1;break;case 2:h=n[15],f=n[11],n[12]=n[3],n[13]=u+0,n[14]=u+1,n[15]=u+2,n[8]=n[7],n[9]=u+9,n[10]=u+10,n[11]=u+3,n[4]=f,n[5]=u+8,n[6]=u+11,n[7]=u+4,n[0]=h,n[1]=u+7,n[2]=u+6,n[3]=u+5,h=o[3],o[2]=o[1],o[3]=m,o[0]=h,o[1]=m+1;break;case 3:n[12]=n[0],n[13]=u+0,n[14]=u+1,n[15]=u+2,n[8]=n[1],n[9]=u+9,n[10]=u+10,n[11]=u+3,n[4]=n[2],n[5]=u+8,n[6]=u+11,n[7]=u+4,n[0]=n[3],n[1]=u+7,n[2]=u+6,n[3]=u+5,o[2]=o[0],o[3]=m,o[0]=o[1],o[1]=m+1}e.figures.push({type:\"patch\",coords:new Int32Array(n),colors:new Int32Array(o)})}}(this,p),b=!0;break;default:(0,a.unreachable)(\"Unsupported mesh type.\")}if(b){h(this);for(var y=0,w=this.figures.length;y<w;y++)u(this,y)}h(this),function(e){var t,r,a,i,n=e.coords,o=new Float32Array(2*n.length);for(t=0,a=0,r=n.length;t<r;t++){var s=n[t];o[a++]=s[0],o[a++]=s[1]}e.coords=o;var c=e.colors,l=new Uint8Array(3*c.length);for(t=0,a=0,r=c.length;t<r;t++){var u=c[t];l[a++]=u[0],l[a++]=u[1],l[a++]=u[2]}e.colors=l;var h=e.figures;for(t=0,r=h.length;t<r;t++){var f=h[t],d=f.coords,g=f.colors;for(a=0,i=d.length;a<i;a++)d[a]*=2,g[a]*=3}}(this)}return f.prototype={getIR:function(){return[\"Mesh\",this.shadingType,this.coords,this.colors,this.figures,this.bounds,this.matrix,this.bbox,this.background]}},f}(),c.Dummy=function(){function e(){this.type=\"Pattern\"}return e.prototype={getIR:function(){return[\"Dummy\"]}},e}(),t.Pattern=s,t.getTilingPatternIR=function(e,t,r){var i=t.getArray(\"Matrix\"),n=a.Util.normalizeRect(t.getArray(\"BBox\")),o=t.get(\"XStep\"),s=t.get(\"YStep\"),c=t.get(\"PaintType\"),l=t.get(\"TilingType\");if(n[2]-n[0]==0||n[3]-n[1]==0)throw new a.FormatError(\"Invalid getTilingPatternIR /BBox array: [\"+n+\"].\");return[\"TilingPattern\",r,e,i,n,o,s,c,l]}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.bidi=void 0;var a=r(0),i=[\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"S\",\"B\",\"S\",\"WS\",\"B\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"B\",\"B\",\"B\",\"S\",\"WS\",\"ON\",\"ON\",\"ET\",\"ET\",\"ET\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"ES\",\"CS\",\"ES\",\"CS\",\"CS\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"CS\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"ON\",\"ON\",\"ON\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"B\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"CS\",\"ON\",\"ET\",\"ET\",\"ET\",\"ET\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"ON\",\"ON\",\"BN\",\"ON\",\"ON\",\"ET\",\"ET\",\"EN\",\"EN\",\"ON\",\"L\",\"ON\",\"ON\",\"ON\",\"EN\",\"L\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\"],n=[\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ON\",\"ON\",\"AL\",\"ET\",\"ET\",\"AL\",\"CS\",\"AL\",\"ON\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ET\",\"AN\",\"AN\",\"AL\",\"AL\",\"AL\",\"NSM\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\"];function o(e){return 0!=(1&e)}function s(e){return 0==(1&e)}function c(e,t,r){for(var a=t,i=e.length;a<i;++a)if(e[a]!==r)return a;return a}function l(e,t,r,a){for(var i=t;i<r;++i)e[i]=a}function u(e,t,r){for(var a=t,i=r-1;a<i;++a,--i){var n=e[a];e[a]=e[i],e[i]=n}}function h(e,t,r){return{str:e,dir:r?\"ttb\":t?\"ltr\":\"rtl\"}}var f=[],d=[];t.bidi=function(e,t,r){var g=!0,m=e.length;if(0===m||r)return h(e,g,r);f.length=m,d.length=m;var p,b,v=0;for(p=0;p<m;++p){f[p]=e.charAt(p);var y=e.charCodeAt(p),w=\"L\";y<=255?w=i[y]:1424<=y&&y<=1524?w=\"R\":1536<=y&&y<=1791?(w=n[255&y])||(0,a.warn)(\"Bidi: invalid Unicode character \"+y.toString(16)):1792<=y&&y<=2220&&(w=\"AL\"),\"R\"!==w&&\"AL\"!==w&&\"AN\"!==w||v++,d[p]=w}if(0===v)return h(e,g=!0);-1===t&&(v/m<.3?(g=!0,t=0):(g=!1,t=1));var k=[];for(p=0;p<m;++p)k[p]=t;var S,C=o(t)?\"R\":\"L\",x=C,A=x,_=x;for(p=0;p<m;++p)\"NSM\"===d[p]?d[p]=_:_=d[p];for(_=x,p=0;p<m;++p)\"EN\"===(S=d[p])?d[p]=\"AL\"===_?\"AN\":\"EN\":\"R\"!==S&&\"L\"!==S&&\"AL\"!==S||(_=S);for(p=0;p<m;++p)\"AL\"===(S=d[p])&&(d[p]=\"R\");for(p=1;p<m-1;++p)\"ES\"===d[p]&&\"EN\"===d[p-1]&&\"EN\"===d[p+1]&&(d[p]=\"EN\"),\"CS\"!==d[p]||\"EN\"!==d[p-1]&&\"AN\"!==d[p-1]||d[p+1]!==d[p-1]||(d[p]=d[p-1]);for(p=0;p<m;++p)if(\"EN\"===d[p]){var P;for(P=p-1;P>=0&&\"ET\"===d[P];--P)d[P]=\"EN\";for(P=p+1;P<m&&\"ET\"===d[P];++P)d[P]=\"EN\"}for(p=0;p<m;++p)\"WS\"!==(S=d[p])&&\"ES\"!==S&&\"ET\"!==S&&\"CS\"!==S||(d[p]=\"ON\");for(_=x,p=0;p<m;++p)\"EN\"===(S=d[p])?d[p]=\"L\"===_?\"L\":\"EN\":\"R\"!==S&&\"L\"!==S||(_=S);for(p=0;p<m;++p)if(\"ON\"===d[p]){var I=c(d,p+1,\"ON\"),T=x;p>0&&(T=d[p-1]);var O=A;I+1<m&&(O=d[I+1]),\"L\"!==T&&(T=\"R\"),\"L\"!==O&&(O=\"R\"),T===O&&l(d,p,I,T),p=I-1}for(p=0;p<m;++p)\"ON\"===d[p]&&(d[p]=C);for(p=0;p<m;++p)S=d[p],s(k[p])?\"R\"===S?k[p]+=1:\"AN\"!==S&&\"EN\"!==S||(k[p]+=2):\"L\"!==S&&\"AN\"!==S&&\"EN\"!==S||(k[p]+=1);var E,F=-1,R=99;for(p=0,b=k.length;p<b;++p)F<(E=k[p])&&(F=E),R>E&&o(E)&&(R=E);for(E=F;E>=R;--E){var B=-1;for(p=0,b=k.length;p<b;++p)k[p]<E?B>=0&&(u(f,B,p),B=-1):B<0&&(B=p);B>=0&&u(f,B,k.length)}for(p=0,b=f.length;p<b;++p){var M=f[p];\"<\"!==M&&\">\"!==M||(f[p]=\"\")}return h(f.join(\"\"),g)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getMetrics=void 0;var a=r(0),i=(0,a.getLookupTableFactory)(function(e){e.Courier=600,e[\"Courier-Bold\"]=600,e[\"Courier-BoldOblique\"]=600,e[\"Courier-Oblique\"]=600,e.Helvetica=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-Bold\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-BoldOblique\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-Oblique\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556}),e.Symbol=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.universal=713,e.numbersign=500,e.existential=549,e.percent=833,e.ampersand=778,e.suchthat=439,e.parenleft=333,e.parenright=333,e.asteriskmath=500,e.plus=549,e.comma=250,e.minus=549,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=549,e.equal=549,e.greater=549,e.question=444,e.congruent=549,e.Alpha=722,e.Beta=667,e.Chi=722,e.Delta=612,e.Epsilon=611,e.Phi=763,e.Gamma=603,e.Eta=722,e.Iota=333,e.theta1=631,e.Kappa=722,e.Lambda=686,e.Mu=889,e.Nu=722,e.Omicron=722,e.Pi=768,e.Theta=741,e.Rho=556,e.Sigma=592,e.Tau=611,e.Upsilon=690,e.sigma1=439,e.Omega=768,e.Xi=645,e.Psi=795,e.Zeta=611,e.bracketleft=333,e.therefore=863,e.bracketright=333,e.perpendicular=658,e.underscore=500,e.radicalex=500,e.alpha=631,e.beta=549,e.chi=549,e.delta=494,e.epsilon=439,e.phi=521,e.gamma=411,e.eta=603,e.iota=329,e.phi1=603,e.kappa=549,e.lambda=549,e.mu=576,e.nu=521,e.omicron=549,e.pi=549,e.theta=521,e.rho=549,e.sigma=603,e.tau=439,e.upsilon=576,e.omega1=713,e.omega=686,e.xi=493,e.psi=686,e.zeta=494,e.braceleft=480,e.bar=200,e.braceright=480,e.similar=549,e.Euro=750,e.Upsilon1=620,e.minute=247,e.lessequal=549,e.fraction=167,e.infinity=713,e.florin=500,e.club=753,e.diamond=753,e.heart=753,e.spade=753,e.arrowboth=1042,e.arrowleft=987,e.arrowup=603,e.arrowright=987,e.arrowdown=603,e.degree=400,e.plusminus=549,e.second=411,e.greaterequal=549,e.multiply=549,e.proportional=713,e.partialdiff=494,e.bullet=460,e.divide=549,e.notequal=549,e.equivalence=549,e.approxequal=549,e.ellipsis=1e3,e.arrowvertex=603,e.arrowhorizex=1e3,e.carriagereturn=658,e.aleph=823,e.Ifraktur=686,e.Rfraktur=795,e.weierstrass=987,e.circlemultiply=768,e.circleplus=768,e.emptyset=823,e.intersection=768,e.union=768,e.propersuperset=713,e.reflexsuperset=713,e.notsubset=713,e.propersubset=713,e.reflexsubset=713,e.element=713,e.notelement=713,e.angle=768,e.gradient=713,e.registerserif=790,e.copyrightserif=790,e.trademarkserif=890,e.product=823,e.radical=549,e.dotmath=250,e.logicalnot=713,e.logicaland=603,e.logicalor=603,e.arrowdblboth=1042,e.arrowdblleft=987,e.arrowdblup=603,e.arrowdblright=987,e.arrowdbldown=603,e.lozenge=494,e.angleleft=329,e.registersans=790,e.copyrightsans=790,e.trademarksans=786,e.summation=713,e.parenlefttp=384,e.parenleftex=384,e.parenleftbt=384,e.bracketlefttp=384,e.bracketleftex=384,e.bracketleftbt=384,e.bracelefttp=494,e.braceleftmid=494,e.braceleftbt=494,e.braceex=494,e.angleright=329,e.integral=274,e.integraltp=686,e.integralex=686,e.integralbt=686,e.parenrighttp=384,e.parenrightex=384,e.parenrightbt=384,e.bracketrighttp=384,e.bracketrightex=384,e.bracketrightbt=384,e.bracerighttp=494,e.bracerightmid=494,e.bracerightbt=494,e.apple=790}),e[\"Times-Roman\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=408,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=564,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=564,e.equal=564,e.greater=564,e.question=444,e.at=921,e.A=722,e.B=667,e.C=667,e.D=722,e.E=611,e.F=556,e.G=722,e.H=722,e.I=333,e.J=389,e.K=722,e.L=611,e.M=889,e.N=722,e.O=722,e.P=556,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=722,e.W=944,e.X=722,e.Y=722,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=469,e.underscore=500,e.quoteleft=333,e.a=444,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=500,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=500,e.o=500,e.p=500,e.q=500,e.r=333,e.s=389,e.t=278,e.u=500,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=480,e.bar=200,e.braceright=480,e.asciitilde=541,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=180,e.quotedblleft=444,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=453,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=444,e.quotedblright=444,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=444,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=889,e.ordfeminine=276,e.Lslash=611,e.Oslash=722,e.OE=889,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=444,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=722,e.divide=564,e.Yacute=722,e.Acircumflex=722,e.aacute=444,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=444,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=444,e.Ncommaaccent=722,e.lacute=278,e.agrave=444,e.Tcommaaccent=611,e.Cacute=667,e.atilde=444,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=444,e.Amacron=722,e.rcaron=333,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=556,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=588,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=722,e.Abreve=722,e.multiply=564,e.uacute=500,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=444,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=722,e.Iacute=333,e.plusminus=564,e.brokenbar=200,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=333,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=326,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=444,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=344,e.Kcommaaccent=722,e.Lacute=611,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=722,e.zdotaccent=444,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=500,e.minus=564,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=564,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-Bold\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=1e3,e.ampersand=833,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=930,e.A=722,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=778,e.I=389,e.J=500,e.K=778,e.L=667,e.M=944,e.N=722,e.O=778,e.P=611,e.Q=778,e.R=722,e.S=556,e.T=667,e.U=722,e.V=722,e.W=1e3,e.X=722,e.Y=722,e.Z=667,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=581,e.underscore=500,e.quoteleft=333,e.a=500,e.b=556,e.c=444,e.d=556,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=333,e.k=556,e.l=278,e.m=833,e.n=556,e.o=500,e.p=556,e.q=556,e.r=444,e.s=389,e.t=333,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=394,e.bar=220,e.braceright=394,e.asciitilde=520,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=540,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=300,e.Lslash=667,e.Oslash=778,e.OE=1e3,e.ordmasculine=330,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=556,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=722,e.divide=570,e.Yacute=722,e.Acircumflex=722,e.aacute=500,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=667,e.Cacute=722,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=500,e.Amacron=722,e.rcaron=444,e.ccedilla=444,e.Zdotaccent=667,e.Thorn=611,e.Omacron=778,e.Racute=722,e.Sacute=556,e.dcaron=672,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=570,e.uacute=556,e.Tcaron=667,e.partialdiff=494,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=778,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=444,e.omacron=500,e.Zacute=667,e.Zcaron=667,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=416,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=778,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=300,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=556,e.threequarters=750,e.Scedilla=556,e.lcaron=394,e.Kcommaaccent=778,e.Lacute=667,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=667,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=778,e.degree=400,e.ograve=500,e.Ccaron=722,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=444,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=722,e.Lcommaaccent=667,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=444,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=556,e.minus=570,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=333,e.logicalnot=570,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-BoldItalic\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=389,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=832,e.A=667,e.B=667,e.C=667,e.D=722,e.E=667,e.F=667,e.G=722,e.H=778,e.I=389,e.J=500,e.K=667,e.L=611,e.M=889,e.N=722,e.O=722,e.P=611,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=667,e.W=889,e.X=667,e.Y=611,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=570,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=556,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=556,e.v=444,e.w=667,e.x=500,e.y=444,e.z=389,e.braceleft=348,e.bar=220,e.braceright=348,e.asciitilde=570,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=500,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=944,e.ordfeminine=266,e.Lslash=611,e.Oslash=722,e.OE=944,e.ordmasculine=300,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=611,e.divide=570,e.Yacute=611,e.Acircumflex=667,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=611,e.Cacute=667,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=556,e.acircumflex=500,e.Amacron=667,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=611,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=608,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=722,e.Agrave=667,e.Abreve=667,e.multiply=570,e.uacute=556,e.Tcaron=611,e.partialdiff=494,e.ydieresis=444,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=722,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=366,e.eogonek=444,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=576,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=382,e.Kcommaaccent=667,e.Lacute=611,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=722,e.zdotaccent=389,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=500,e.minus=606,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=606,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-Italic\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=420,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=675,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=675,e.equal=675,e.greater=675,e.question=500,e.at=920,e.A=611,e.B=611,e.C=667,e.D=722,e.E=611,e.F=611,e.G=722,e.H=722,e.I=333,e.J=444,e.K=667,e.L=556,e.M=833,e.N=667,e.O=722,e.P=611,e.Q=722,e.R=611,e.S=500,e.T=556,e.U=722,e.V=611,e.W=833,e.X=611,e.Y=556,e.Z=556,e.bracketleft=389,e.backslash=278,e.bracketright=389,e.asciicircum=422,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=278,e.g=500,e.h=500,e.i=278,e.j=278,e.k=444,e.l=278,e.m=722,e.n=500,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=500,e.v=444,e.w=667,e.x=444,e.y=444,e.z=389,e.braceleft=400,e.bar=275,e.braceright=400,e.asciitilde=541,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=214,e.quotedblleft=556,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=523,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=556,e.quotedblright=556,e.guillemotright=500,e.ellipsis=889,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=889,e.AE=889,e.ordfeminine=276,e.Lslash=556,e.Oslash=722,e.OE=944,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=667,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=500,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=556,e.divide=675,e.Yacute=556,e.Acircumflex=611,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=500,e.Ncommaaccent=667,e.lacute=278,e.agrave=500,e.Tcommaaccent=556,e.Cacute=667,e.atilde=500,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=611,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=500,e.Amacron=611,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=556,e.Thorn=611,e.Omacron=722,e.Racute=611,e.Sacute=500,e.dcaron=544,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=611,e.Abreve=611,e.multiply=675,e.uacute=500,e.Tcaron=556,e.partialdiff=476,e.ydieresis=444,e.Nacute=667,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=667,e.Iacute=333,e.plusminus=675,e.brokenbar=275,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=389,e.omacron=500,e.Zacute=556,e.Zcaron=556,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=300,e.eogonek=444,e.Uogonek=722,e.Aacute=611,e.Adieresis=611,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=500,e.lcaron=300,e.Kcommaaccent=667,e.Lacute=556,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=500,e.Scommaaccent=500,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=667,e.otilde=500,e.Rcommaaccent=611,e.Lcommaaccent=556,e.Atilde=611,e.Aogonek=611,e.Aring=611,e.Otilde=722,e.zdotaccent=389,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=444,e.minus=675,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=675,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500}),e.ZapfDingbats=(0,a.getLookupTableFactory)(function(e){e.space=278,e.a1=974,e.a2=961,e.a202=974,e.a3=980,e.a4=719,e.a5=789,e.a119=790,e.a118=791,e.a117=690,e.a11=960,e.a12=939,e.a13=549,e.a14=855,e.a15=911,e.a16=933,e.a105=911,e.a17=945,e.a18=974,e.a19=755,e.a20=846,e.a21=762,e.a22=761,e.a23=571,e.a24=677,e.a25=763,e.a26=760,e.a27=759,e.a28=754,e.a6=494,e.a7=552,e.a8=537,e.a9=577,e.a10=692,e.a29=786,e.a30=788,e.a31=788,e.a32=790,e.a33=793,e.a34=794,e.a35=816,e.a36=823,e.a37=789,e.a38=841,e.a39=823,e.a40=833,e.a41=816,e.a42=831,e.a43=923,e.a44=744,e.a45=723,e.a46=749,e.a47=790,e.a48=792,e.a49=695,e.a50=776,e.a51=768,e.a52=792,e.a53=759,e.a54=707,e.a55=708,e.a56=682,e.a57=701,e.a58=826,e.a59=815,e.a60=789,e.a61=789,e.a62=707,e.a63=687,e.a64=696,e.a65=689,e.a66=786,e.a67=787,e.a68=713,e.a69=791,e.a70=785,e.a71=791,e.a72=873,e.a73=761,e.a74=762,e.a203=762,e.a75=759,e.a204=759,e.a76=892,e.a77=892,e.a78=788,e.a79=784,e.a81=438,e.a82=138,e.a83=277,e.a84=415,e.a97=392,e.a98=392,e.a99=668,e.a100=668,e.a89=390,e.a90=390,e.a93=317,e.a94=317,e.a91=276,e.a92=276,e.a205=509,e.a85=509,e.a206=410,e.a86=410,e.a87=234,e.a88=234,e.a95=334,e.a96=334,e.a101=732,e.a102=544,e.a103=544,e.a104=910,e.a106=667,e.a107=760,e.a108=760,e.a112=776,e.a111=595,e.a110=694,e.a109=626,e.a120=788,e.a121=788,e.a122=788,e.a123=788,e.a124=788,e.a125=788,e.a126=788,e.a127=788,e.a128=788,e.a129=788,e.a130=788,e.a131=788,e.a132=788,e.a133=788,e.a134=788,e.a135=788,e.a136=788,e.a137=788,e.a138=788,e.a139=788,e.a140=788,e.a141=788,e.a142=788,e.a143=788,e.a144=788,e.a145=788,e.a146=788,e.a147=788,e.a148=788,e.a149=788,e.a150=788,e.a151=788,e.a152=788,e.a153=788,e.a154=788,e.a155=788,e.a156=788,e.a157=788,e.a158=788,e.a159=788,e.a160=894,e.a161=838,e.a163=1016,e.a164=458,e.a196=748,e.a165=924,e.a192=748,e.a166=918,e.a167=927,e.a168=928,e.a169=928,e.a170=834,e.a171=873,e.a172=828,e.a173=924,e.a162=924,e.a174=917,e.a175=930,e.a176=931,e.a177=463,e.a178=883,e.a179=836,e.a193=836,e.a180=867,e.a199=867,e.a181=696,e.a200=696,e.a182=874,e.a201=874,e.a183=760,e.a184=946,e.a197=771,e.a185=865,e.a194=771,e.a198=888,e.a186=967,e.a195=888,e.a187=831,e.a188=873,e.a189=927,e.a190=970,e.a191=918})});t.getMetrics=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PostScriptParser=t.PostScriptLexer=void 0;var a=r(0),i=r(1),n=function(){function e(e){this.lexer=e,this.operators=[],this.token=null,this.prev=null}return e.prototype={nextToken:function(){this.prev=this.token,this.token=this.lexer.getToken()},accept:function(e){return this.token.type===e&&(this.nextToken(),!0)},expect:function(e){if(this.accept(e))return!0;throw new a.FormatError(\"Unexpected symbol: found \"+this.token.type+\" expected \"+e+\".\")},parse:function(){return this.nextToken(),this.expect(o.LBRACE),this.parseBlock(),this.expect(o.RBRACE),this.operators},parseBlock:function(){for(;;)if(this.accept(o.NUMBER))this.operators.push(this.prev.value);else if(this.accept(o.OPERATOR))this.operators.push(this.prev.value);else{if(!this.accept(o.LBRACE))return;this.parseCondition()}},parseCondition:function(){var e=this.operators.length;if(this.operators.push(null,null),this.parseBlock(),this.expect(o.RBRACE),this.accept(o.IF))this.operators[e]=this.operators.length,this.operators[e+1]=\"jz\";else{if(!this.accept(o.LBRACE))throw new a.FormatError(\"PS Function: error parsing conditional.\");var t=this.operators.length;this.operators.push(null,null);var r=this.operators.length;this.parseBlock(),this.expect(o.RBRACE),this.expect(o.IFELSE),this.operators[t]=this.operators.length,this.operators[t+1]=\"j\",this.operators[e]=r,this.operators[e+1]=\"jz\"}}},e}(),o={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5},s=function(){function e(e,t){this.type=e,this.value=t}var t=Object.create(null);return e.getOperator=function(r){var a=t[r];return a||(t[r]=new e(o.OPERATOR,r))},e.LBRACE=new e(o.LBRACE,\"{\"),e.RBRACE=new e(o.RBRACE,\"}\"),e.IF=new e(o.IF,\"IF\"),e.IFELSE=new e(o.IFELSE,\"IFELSE\"),e}(),c=function(){function e(e){this.stream=e,this.nextChar(),this.strBuf=[]}return e.prototype={nextChar:function(){return this.currentChar=this.stream.getByte()},getToken:function(){for(var e=!1,t=this.currentChar;;){if(t<0)return i.EOF;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,a.isSpace)(t))break;t=this.nextChar()}switch(0|t){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return new s(o.NUMBER,this.getNumber());case 123:return this.nextChar(),s.LBRACE;case 125:return this.nextChar(),s.RBRACE}var r=this.strBuf;for(r.length=0,r[0]=String.fromCharCode(t);(t=this.nextChar())>=0&&(t>=65&&t<=90||t>=97&&t<=122);)r.push(String.fromCharCode(t));var n=r.join(\"\");switch(n.toLowerCase()){case\"if\":return s.IF;case\"ifelse\":return s.IFELSE;default:return s.getOperator(n)}},getNumber:function(){var e=this.currentChar,t=this.strBuf;for(t.length=0,t[0]=String.fromCharCode(e);(e=this.nextChar())>=0&&(e>=48&&e<=57||45===e||46===e);)t.push(String.fromCharCode(e));var r=parseFloat(t.join(\"\"));if(isNaN(r))throw new a.FormatError(\"Invalid floating point number: \"+r);return r}},e}();t.PostScriptLexer=c,t.PostScriptParser=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MurmurHash3_64=void 0;var a=r(0),i=function(e){function t(e){this.h1=e?4294967295&e:3285377520,this.h2=e?4294967295&e:3285377520}return t.prototype={update:function(e){var t=void 0,r=void 0;if((0,a.isString)(e)){t=new Uint8Array(2*e.length),r=0;for(var i=0,n=e.length;i<n;i++){var o=e.charCodeAt(i);o<=255?t[r++]=o:(t[r++]=o>>>8,t[r++]=255&o)}}else{if(!(0,a.isArrayBuffer)(e))throw new Error(\"Wrong data format in MurmurHash3_64_update. Input must be a string or array.\");r=(t=e).byteLength}for(var s=r>>2,c=r-4*s,l=new Uint32Array(t.buffer,0,s),u=0,h=0,f=this.h1,d=this.h2,g=3432918353,m=461845907,p=0;p<s;p++)1&p?f=5*(f=(f^=u=(u=(u=(u=l[p])*g&4294901760|11601*u&65535)<<15|u>>>17)*m&4294901760|13715*u&65535)<<13|f>>>19)+3864292196:d=5*(d=(d^=h=(h=(h=(h=l[p])*g&4294901760|11601*h&65535)<<15|h>>>17)*m&4294901760|13715*h&65535)<<13|d>>>19)+3864292196;switch(u=0,c){case 3:u^=t[4*s+2]<<16;case 2:u^=t[4*s+1]<<8;case 1:u=(u=(u=(u^=t[4*s])*g&4294901760|11601*u&65535)<<15|u>>>17)*m&4294901760|13715*u&65535,1&s?f^=u:d^=u}return this.h1=f,this.h2=d,this},hexdigest:function(){var e=this.h1,t=this.h2;e=3981806797*(e^=t>>>1)&4294901760|36045*e&65535,e=444984403*(e^=(t=4283543511*t&4294901760|(2950163797*(t<<16|e>>>16)&4294901760)>>>16)>>>1)&4294901760|60499*e&65535;for(var r=0,a=[e^=(t=3301882366*t&4294901760|(3120437893*(t<<16|e>>>16)&4294901760)>>>16)>>>1,t],i=\"\";r<a.length;r++){for(var n=(a[r]>>>0).toString(16);n.length<8;)n=\"0\"+n;i+=n}return i}},t}();t.MurmurHash3_64=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFImage=void 0;var a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){i=!0,n=e}finally{try{!a&&s.return&&s.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},i=r(0),n=r(1),o=r(20),s=r(2),c=r(41),l=r(67),u=function(){function e(e,t){return t&&t.canDecode(e)?t.decode(e):Promise.resolve(e)}function t(e,t,r,a){return(e=t+e*r)<0?0:e>a?a:e}function r(e,t,r,a,i,n){var o,s,c,l,u=i*n,h=t<=8?new Uint8Array(u):t<=16?new Uint16Array(u):new Uint32Array(u),f=r/i,d=a/n,g=0,m=new Uint16Array(i),p=r;for(o=0;o<i;o++)m[o]=Math.floor(o*f);for(o=0;o<n;o++)for(c=Math.floor(o*d)*p,s=0;s<i;s++)l=c+m[s],h[g++]=e[l];return h}function u(e){var t=e.xref,r=e.res,a=e.image,s=e.isInline,c=void 0!==s&&s,h=e.smask,f=void 0===h?null:h,d=e.mask,g=void 0===d?null:d,m=e.isMask,p=void 0!==m&&m,b=e.pdfFunctionFactory;this.image=a;var v=a.dict;if(v.has(\"Filter\")){var y=v.get(\"Filter\").name;if(\"JPXDecode\"===y){var w=new l.JpxImage;w.parseImageProperties(a.stream),a.stream.reset(),a.bitsPerComponent=w.bitsPerComponent,a.numComps=w.componentsCount}else\"JBIG2Decode\"===y&&(a.bitsPerComponent=1,a.numComps=1)}if(this.width=v.get(\"Width\",\"W\"),this.height=v.get(\"Height\",\"H\"),this.width<1||this.height<1)throw new i.FormatError(\"Invalid image width: \"+this.width+\" or height: \"+this.height);this.interpolate=v.get(\"Interpolate\",\"I\")||!1,this.imageMask=v.get(\"ImageMask\",\"IM\")||!1,this.matte=v.get(\"Matte\")||!1;var k=a.bitsPerComponent;if(!k&&!(k=v.get(\"BitsPerComponent\",\"BPC\"))){if(!this.imageMask)throw new i.FormatError(\"Bits per component missing in image: \"+this.imageMask);k=1}if(this.bpc=k,!this.imageMask){var S=v.get(\"ColorSpace\",\"CS\");if(!S)switch((0,i.info)(\"JPX images (which do not require color spaces)\"),a.numComps){case 1:S=n.Name.get(\"DeviceGray\");break;case 3:S=n.Name.get(\"DeviceRGB\");break;case 4:S=n.Name.get(\"DeviceCMYK\");break;default:throw new Error(\"JPX images with \"+this.numComps+\" color components not supported.\")}var C=c?r:null;this.colorSpace=o.ColorSpace.parse(S,t,C,b),this.numComps=this.colorSpace.numComps}if(this.decode=v.getArray(\"Decode\",\"D\"),this.needsDecode=!1,this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode)||p&&!o.ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=!0;var x=(1<<k)-1;this.decodeCoefficients=[],this.decodeAddends=[];for(var A=0,_=0;A<this.decode.length;A+=2,++_){var P=this.decode[A],I=this.decode[A+1];this.decodeCoefficients[_]=I-P,this.decodeAddends[_]=x*P}}if(f)this.smask=new u({xref:t,res:r,image:f,isInline:c,pdfFunctionFactory:b});else if(g){if((0,n.isStream)(g))g.dict.get(\"ImageMask\",\"IM\")?this.mask=new u({xref:t,res:r,image:g,isInline:c,isMask:!0,pdfFunctionFactory:b}):(0,i.warn)(\"Ignoring /Mask in image without /ImageMask.\");else this.mask=g}}return u.buildImage=function(t){t.handler;var r,o,s=t.xref,c=t.res,l=t.image,h=t.isInline,f=void 0!==h&&h,d=t.nativeDecoder,g=void 0===d?null:d,m=t.pdfFunctionFactory,p=e(l,g),b=l.dict.get(\"SMask\"),v=l.dict.get(\"Mask\");return b?(r=e(b,g),o=Promise.resolve(null)):(r=Promise.resolve(null),v?(0,n.isStream)(v)?o=e(v,g):Array.isArray(v)?o=Promise.resolve(v):((0,i.warn)(\"Unsupported mask format.\"),o=Promise.resolve(null)):o=Promise.resolve(null)),Promise.all([p,r,o]).then(function(e){var t=a(e,3),r=t[0],i=t[1],n=t[2];return new u({xref:s,res:c,image:r,isInline:f,smask:i,mask:n,pdfFunctionFactory:m})})},u.createMask=function(e){var t,r,a=e.imgArray,i=e.width,n=e.height,o=e.imageIsFromDecodeStream,s=e.inverseDecode,c=(i+7>>3)*n,l=a.byteLength;if(!o||s&&!(c===l))if(s)for((t=new Uint8Array(c)).set(a),r=l;r<c;r++)t[r]=255;else(t=new Uint8Array(l)).set(a);else t=a;if(s)for(r=0;r<l;r++)t[r]^=255;return{data:t,width:i,height:n}},u.prototype={get drawWidth(){return Math.max(this.width,this.smask&&this.smask.width||0,this.mask&&this.mask.width||0)},get drawHeight(){return Math.max(this.height,this.smask&&this.smask.height||0,this.mask&&this.mask.height||0)},decodeBuffer:function(e){var r,a,i=this.bpc,n=this.numComps,o=this.decodeAddends,s=this.decodeCoefficients,c=(1<<i)-1;if(1!==i){var l=0;for(r=0,a=this.width*this.height;r<a;r++)for(var u=0;u<n;u++)e[l]=t(e[l],o[u],s[u],c),l++}else for(r=0,a=e.length;r<a;r++)e[r]=+!e[r]},getComponents:function(e){var t=this.bpc;if(8===t)return e;var r,a,i=this.width,n=this.height,o=this.numComps,s=i*n*o,c=0,l=t<=8?new Uint8Array(s):t<=16?new Uint16Array(s):new Uint32Array(s),u=i*o,h=(1<<t)-1,f=0;if(1===t)for(var d,g,m,p=0;p<n;p++){for(g=f+(-8&u),m=f+u;f<g;)a=e[c++],l[f]=a>>7&1,l[f+1]=a>>6&1,l[f+2]=a>>5&1,l[f+3]=a>>4&1,l[f+4]=a>>3&1,l[f+5]=a>>2&1,l[f+6]=a>>1&1,l[f+7]=1&a,f+=8;if(f<m)for(a=e[c++],d=128;f<m;)l[f++]=+!!(a&d),d>>=1}else{var b=0;for(a=0,f=0,r=s;f<r;++f){for(f%u==0&&(a=0,b=0);b<t;)a=a<<8|e[c++],b+=8;var v=b-t,y=a>>v;l[f]=y<0?0:y>h?h:y,a&=(1<<v)-1,b=v}}return l},fillOpacity:function(e,t,a,n,o){var s,c,l,h,f,d,g=this.smask,m=this.mask;if(g)c=g.width,l=g.height,s=new Uint8Array(c*l),g.fillGrayBuffer(s),c===t&&l===a||(s=r(s,g.bpc,c,l,t,a));else if(m)if(m instanceof u){for(c=m.width,l=m.height,s=new Uint8Array(c*l),m.numComps=1,m.fillGrayBuffer(s),h=0,f=c*l;h<f;++h)s[h]=255-s[h];c===t&&l===a||(s=r(s,m.bpc,c,l,t,a))}else{if(!Array.isArray(m))throw new i.FormatError(\"Unknown mask format.\");s=new Uint8Array(t*a);var p=this.numComps;for(h=0,f=t*a;h<f;++h){var b=0,v=h*p;for(d=0;d<p;++d){var y=o[v+d],w=2*d;if(y<m[w]||y>m[w+1]){b=255;break}}s[h]=b}}if(s)for(h=0,d=3,f=t*n;h<f;++h,d+=4)e[d]=s[h];else for(h=0,d=3,f=t*n;h<f;++h,d+=4)e[d]=255},undoPreblend:function(e,t,r){var a=this.smask&&this.smask.matte;if(a)for(var i,n,o,s=this.colorSpace.getRgb(a,0),c=s[0],l=s[1],u=s[2],h=t*r*4,f=0;f<h;f+=4){var d=e[f+3];if(0!==d){var g=255/d;i=(e[f]-c)*g+c,n=(e[f+1]-l)*g+l,o=(e[f+2]-u)*g+u,e[f]=i<=0?0:i>=255?255:0|i,e[f+1]=n<=0?0:n>=255?255:0|n,e[f+2]=o<=0?0:o>=255?255:0|o}else e[f]=255,e[f+1]=255,e[f+2]=255}},createImageData:function(){var e,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],r=this.drawWidth,a=this.drawHeight,n={width:r,height:a},o=this.numComps,l=this.width,u=this.height,h=this.bpc,f=l*o*h+7>>3;if(!t){var d;if(\"DeviceGray\"===this.colorSpace.name&&1===h?d=i.ImageKind.GRAYSCALE_1BPP:\"DeviceRGB\"!==this.colorSpace.name||8!==h||this.needsDecode||(d=i.ImageKind.RGB_24BPP),d&&!this.smask&&!this.mask&&r===l&&a===u){if(n.kind=d,e=this.getImageBytes(u*f),this.image instanceof s.DecodeStream)n.data=e;else{var g=new Uint8Array(e.length);g.set(e),n.data=g}if(this.needsDecode){(0,i.assert)(d===i.ImageKind.GRAYSCALE_1BPP);for(var m=n.data,p=0,b=m.length;p<b;p++)m[p]^=255}return n}if(this.image instanceof c.JpegStream&&!this.smask&&!this.mask){var v=u*f;switch(this.colorSpace.name){case\"DeviceGray\":v*=3;case\"DeviceRGB\":case\"DeviceCMYK\":return n.kind=i.ImageKind.RGB_24BPP,n.data=this.getImageBytes(v,r,a,!0),n}}}var y,w,k=0|(e=this.getImageBytes(u*f)).length/f*a/u,S=this.getComponents(e);return t||this.smask||this.mask?(n.kind=i.ImageKind.RGBA_32BPP,n.data=new Uint8Array(r*a*4),y=1,w=!0,this.fillOpacity(n.data,r,a,k,S)):(n.kind=i.ImageKind.RGB_24BPP,n.data=new Uint8Array(r*a*3),y=0,w=!1),this.needsDecode&&this.decodeBuffer(S),this.colorSpace.fillRgb(n.data,l,u,r,a,k,h,S,y),w&&this.undoPreblend(n.data,r,k),n},fillGrayBuffer:function(e){var t=this.numComps;if(1!==t)throw new i.FormatError(\"Reading gray scale from a color image: \"+t);var r,a,n=this.width,o=this.height,s=this.bpc,c=n*t*s+7>>3,l=this.getImageBytes(o*c),u=this.getComponents(l);if(1!==s){this.needsDecode&&this.decodeBuffer(u),a=n*o;var h=255/((1<<s)-1);for(r=0;r<a;++r)e[r]=h*u[r]|0}else if(a=n*o,this.needsDecode)for(r=0;r<a;++r)e[r]=u[r]-1&255;else for(r=0;r<a;++r)e[r]=255&-u[r]},getImageBytes:function(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return this.image.reset(),this.image.drawWidth=t||this.width,this.image.drawHeight=r||this.height,this.image.forceRGB=!!a,this.image.getBytes(e)}},u}();t.PDFImage=u}])},e.exports=i()}).call(this,r(/*! ./../../process/browser.js */\"./node_modules/process/browser.js\"),r(/*! ./../../buffer/index.js */\"./node_modules/buffer/index.js\").Buffer,r(/*! ./../../webpack/buildin/global.js */\"./node_modules/webpack/buildin/global.js\"))}}]);","extractedComments":[]}